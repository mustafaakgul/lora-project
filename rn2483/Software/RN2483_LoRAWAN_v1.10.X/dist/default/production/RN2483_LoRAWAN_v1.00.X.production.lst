

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Sep 24 15:51:33 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1
   157                           	psect	text131,global,reloc=2,class=CODE,delta=1
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1
   159                           	psect	text133,global,reloc=2,class=CODE,delta=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1
   162                           	psect	text136,global,reloc=2,class=CODE,delta=1
   163                           	psect	text137,global,reloc=2,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=2,class=CODE,delta=1
   166                           	psect	text140,global,reloc=2,class=CODE,delta=1
   167                           	psect	text141,global,reloc=2,class=CODE,delta=1
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	text143,global,reloc=2,class=CODE,delta=1
   170                           	psect	text144,global,reloc=2,class=CODE,delta=1
   171                           	psect	text145,global,reloc=2,class=CODE,delta=1
   172                           	psect	text146,global,reloc=2,class=CODE,delta=1
   173                           	psect	text147,global,reloc=2,class=CODE,delta=1
   174                           	psect	text148,global,reloc=2,class=CODE,delta=1
   175                           	psect	text149,global,reloc=2,class=CODE,delta=1
   176                           	psect	text150,global,reloc=2,class=CODE,delta=1
   177                           	psect	text151,global,reloc=2,class=CODE,delta=1
   178                           	psect	text152,global,reloc=2,class=CODE,delta=1
   179                           	psect	text153,global,reloc=2,class=CODE,delta=1
   180                           	psect	text154,global,reloc=2,class=CODE,delta=1
   181                           	psect	text155,global,reloc=2,class=CODE,delta=1
   182                           	psect	text156,global,reloc=2,class=CODE,delta=1
   183                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   185                           	psect	text159,global,reloc=2,class=CODE,delta=1
   186                           	psect	text160,global,reloc=2,class=CODE,delta=1
   187                           	psect	text161,global,reloc=2,class=CODE,delta=1
   188                           	psect	text162,global,reloc=2,class=CODE,delta=1
   189                           	psect	text163,global,reloc=2,class=CODE,delta=1
   190                           	psect	text164,global,reloc=2,class=CODE,delta=1
   191                           	psect	text165,global,reloc=2,class=CODE,delta=1
   192                           	psect	text166,global,reloc=2,class=CODE,delta=1
   193                           	psect	text167,global,reloc=2,class=CODE,delta=1
   194                           	psect	text168,global,reloc=2,class=CODE,delta=1,group=1
   195                           	psect	text169,global,reloc=2,class=CODE,delta=1
   196                           	psect	text170,global,reloc=2,class=CODE,delta=1
   197                           	psect	text171,global,reloc=2,class=CODE,delta=1
   198                           	psect	text172,global,reloc=2,class=CODE,delta=1
   199                           	psect	text173,global,reloc=2,class=CODE,delta=1
   200                           	psect	text174,global,reloc=2,class=CODE,delta=1
   201                           	psect	text175,global,reloc=2,class=CODE,delta=1
   202                           	psect	text176,global,reloc=2,class=CODE,delta=1
   203                           	psect	text177,global,reloc=2,class=CODE,delta=1
   204                           	psect	text178,global,reloc=2,class=CODE,delta=1
   205                           	psect	text179,global,reloc=2,class=CODE,delta=1
   206                           	psect	text180,global,reloc=2,class=CODE,delta=1
   207                           	psect	text181,global,reloc=2,class=CODE,delta=1,group=1
   208                           	psect	text182,global,reloc=2,class=CODE,delta=1
   209                           	psect	text183,global,reloc=2,class=CODE,delta=1
   210                           	psect	text184,global,reloc=2,class=CODE,delta=1
   211                           	psect	text185,global,reloc=2,class=CODE,delta=1
   212                           	psect	text186,global,reloc=2,class=CODE,delta=1
   213                           	psect	text187,global,reloc=2,class=CODE,delta=1
   214                           	psect	text188,global,reloc=2,class=CODE,delta=1
   215                           	psect	text189,global,reloc=2,class=CODE,delta=1
   216                           	psect	text190,global,reloc=2,class=CODE,delta=1
   217                           	psect	text191,global,reloc=2,class=CODE,delta=1
   218                           	psect	text192,global,reloc=2,class=CODE,delta=1
   219                           	psect	text193,global,reloc=2,class=CODE,delta=1,group=1
   220                           	psect	text194,global,reloc=2,class=CODE,delta=1,group=1
   221                           	psect	text195,global,reloc=2,class=CODE,delta=1
   222                           	psect	text196,global,reloc=2,class=CODE,delta=1
   223                           	psect	text197,global,reloc=2,class=CODE,delta=1
   224                           	psect	text198,global,reloc=2,class=CODE,delta=1
   225                           	psect	text199,global,reloc=2,class=CODE,delta=1
   226                           	psect	text200,global,reloc=2,class=CODE,delta=1
   227                           	psect	text201,global,reloc=2,class=CODE,delta=1
   228                           	psect	text202,global,reloc=2,class=CODE,delta=1
   229                           	psect	text203,global,reloc=2,class=CODE,delta=1
   230                           	psect	text204,global,reloc=2,class=CODE,delta=1
   231                           	psect	text205,global,reloc=2,class=CODE,delta=1
   232                           	psect	text206,global,reloc=2,class=CODE,delta=1,group=1
   233                           	psect	text207,global,reloc=2,class=CODE,delta=1,group=1
   234                           	psect	text208,global,reloc=2,class=CODE,delta=1
   235                           	psect	text209,global,reloc=2,class=CODE,delta=1
   236                           	psect	text210,global,reloc=2,class=CODE,delta=1
   237                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   238                           	psect	text212,global,reloc=2,class=CODE,delta=1
   239                           	psect	text213,global,reloc=2,class=CODE,delta=1
   240                           	psect	text214,global,reloc=2,class=CODE,delta=1
   241                           	psect	text215,global,reloc=2,class=CODE,delta=1
   242                           	psect	text216,global,reloc=2,class=CODE,delta=1
   243                           	psect	text217,global,reloc=2,class=CODE,delta=1
   244                           	psect	text218,global,reloc=2,class=CODE,delta=1
   245                           	psect	text219,global,reloc=2,class=CODE,delta=1
   246                           	psect	text220,global,reloc=2,class=CODE,delta=1
   247                           	psect	text221,global,reloc=2,class=CODE,delta=1
   248                           	psect	text222,global,reloc=2,class=CODE,delta=1
   249                           	psect	text223,global,reloc=2,class=CODE,delta=1
   250                           	psect	text224,global,reloc=2,class=CODE,delta=1
   251                           	psect	text225,global,reloc=2,class=CODE,delta=1
   252                           	psect	text226,global,reloc=2,class=CODE,delta=1
   253                           	psect	text227,global,reloc=2,class=CODE,delta=1
   254                           	psect	text228,global,reloc=2,class=CODE,delta=1
   255                           	psect	text229,global,reloc=2,class=CODE,delta=1
   256                           	psect	text230,global,reloc=2,class=CODE,delta=1
   257                           	psect	text231,global,reloc=2,class=CODE,delta=1
   258                           	psect	text232,global,reloc=2,class=CODE,delta=1
   259                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   260                           	psect	text233,global,reloc=2,class=CODE,delta=1
   261                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   262                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   263  0000                     
   264                           ; Version 1.45
   265                           ; Generated 16/11/2017 GMT
   266                           ; 
   267                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   268                           ; All rights reserved.
   269                           ; 
   270                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   271                           ; 
   272                           ; Redistribution and use in source and binary forms, with or without modification, are
   273                           ; permitted provided that the following conditions are met:
   274                           ; 
   275                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   276                           ;        conditions and the following disclaimer.
   277                           ; 
   278                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   279                           ;        of conditions and the following disclaimer in the documentation and/or other
   280                           ;        materials provided with the distribution.
   281                           ; 
   282                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   283                           ;        software without specific prior written permission.
   284                           ; 
   285                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   286                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   287                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   288                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   289                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   290                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   291                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   292                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   293                           ; 
   294                           ; 
   295                           ; Code-generator required, PIC18LF46K22 Definitions
   296                           ; 
   297                           ; SFR Addresses
   298  0000                     
   299 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   300  0000                     
   301 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   302  0000                     
   303 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   304  0000                     
   305 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   306 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   307 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   308 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   309 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   310 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   311 ;;_LORAWAN_LinkCheckCallback$2506	offset	0
   312 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   313 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   314 ;;_DutyCycleCallback$1852	offset	0
   315 ;;DutyCycleCallback@minim	offset	4
   316 ;;DutyCycleCallback@i	offset	8
   317 ;;DutyCycleCallback@found	offset	9
   318 ;;DutyCycleCallback@param	offset=-1 (param)
   319 ;;AutomaticReplyCallback@param	offset=-1 (param)
   320 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   321 ;;AckRetransmissionCallback@param	offset=-1 (param)
   322 ;;_param	offset=-1 (param)
   323 ;;_UpdateJoinSuccessState$2523	offset	0
   324 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   325                           
   326                           	psect	idataCOMRAM
   327  0092EC                     __pidataCOMRAM:
   328                           	opt stack 0
   329                           
   330                           ;initializer for _ticksToScheduledInterrupt
   331  0092EC  FFFF               	dw	65535
   332  0092EE  FFFF               	dw	65535
   333                           
   334                           	psect	idataBANK1
   335  009116                     __pidataBANK1:
   336                           	opt stack 0
   337                           
   338                           ;initializer for _randx
   339  009116  0001               	dw	1
   340  009118  0000               	dw	0
   341                           
   342                           ;initializer for _deviceAddr
   343  00911A  198B               	dw	6539
   344  00911C  2601               	dw	9729
   345                           
   346                           ;initializer for _deviceEUI
   347  00911E  00                 	db	0
   348  00911F  09                 	db	9
   349  009120  50                 	db	80
   350  009121  DF                 	db	223
   351  009122  9B                 	db	155
   352  009123  E2                 	db	226
   353  009124  73                 	db	115
   354  009125  3B                 	db	59
   355                           
   356                           	psect	idataBANK2
   357  0092A2                     __pidataBANK2:
   358                           	opt stack 0
   359                           
   360                           ;initializer for _applicationEUI
   361  0092A2  70                 	db	112
   362  0092A3  B3                 	db	179
   363  0092A4  D5                 	db	213
   364  0092A5  7E                 	db	126
   365  0092A6  D0                 	db	208
   366  0092A7  00                 	db	0
   367  0092A8  B6                 	db	182
   368  0092A9  92                 	db	146
   369                           
   370                           	psect	idataBANK3
   371  00878E                     __pidataBANK3:
   372                           	opt stack 0
   373                           
   374                           ;initializer for GenerateSubkey@F7103
   375  00878E  00                 	db	0
   376  00878F  00                 	db	0
   377  008790  00                 	db	0
   378  008791  00                 	db	0
   379  008792  00                 	db	0
   380  008793  00                 	db	0
   381  008794  00                 	db	0
   382  008795  00                 	db	0
   383  008796  00                 	db	0
   384  008797  00                 	db	0
   385  008798  00                 	db	0
   386  008799  00                 	db	0
   387  00879A  00                 	db	0
   388  00879B  00                 	db	0
   389  00879C  00                 	db	0
   390  00879D  87                 	db	135
   391                           
   392                           ;initializer for _appSKey
   393  00879E  77                 	db	119
   394  00879F  D1                 	db	209
   395  0087A0  17                 	db	23
   396  0087A1  66                 	db	102
   397  0087A2  E8                 	db	232
   398  0087A3  BD                 	db	189
   399  0087A4  E5                 	db	229
   400  0087A5  D4                 	db	212
   401  0087A6  E0                 	db	224
   402  0087A7  A7                 	db	167
   403  0087A8  E8                 	db	232
   404  0087A9  71                 	db	113
   405  0087AA  B5                 	db	181
   406  0087AB  6E                 	db	110
   407  0087AC  57                 	db	87
   408  0087AD  9C                 	db	156
   409                           
   410                           ;initializer for _nwkSKey
   411  0087AE  1A                 	db	26
   412  0087AF  BB                 	db	187
   413  0087B0  89                 	db	137
   414  0087B1  EB                 	db	235
   415  0087B2  2A                 	db	42
   416  0087B3  B0                 	db	176
   417  0087B4  24                 	db	36
   418  0087B5  E4                 	db	228
   419  0087B6  1D                 	db	29
   420  0087B7  CD                 	db	205
   421  0087B8  53                 	db	83
   422  0087B9  2D                 	db	45
   423  0087BA  74                 	db	116
   424  0087BB  01                 	db	1
   425  0087BC  37                 	db	55
   426  0087BD  E2                 	db	226
   427                           
   428                           ;initializer for _applicationKey
   429  0087BE  60                 	db	96
   430  0087BF  86                 	db	134
   431  0087C0  59                 	db	89
   432  0087C1  FB                 	db	251
   433  0087C2  FD                 	db	253
   434  0087C3  B0                 	db	176
   435  0087C4  D7                 	db	215
   436  0087C5  3E                 	db	62
   437  0087C6  0C                 	db	12
   438  0087C7  71                 	db	113
   439  0087C8  85                 	db	133
   440  0087C9  31                 	db	49
   441  0087CA  70                 	db	112
   442  0087CB  8E                 	db	142
   443  0087CC  7A                 	db	122
   444  0087CD  8D                 	db	141
   445                           
   446                           	psect	mediumconst
   447  00FE40                     __pmediumconst:
   448                           	opt stack 0
   449  00FE40  00                 	db	0
   450  00FE41                     _STable:
   451                           	opt stack 0
   452  00FE41  63                 	db	99
   453  00FE42  7C                 	db	124
   454  00FE43  77                 	db	119
   455  00FE44  7B                 	db	123
   456  00FE45  F2                 	db	242
   457  00FE46  6B                 	db	107
   458  00FE47  6F                 	db	111
   459  00FE48  C5                 	db	197
   460  00FE49  30                 	db	48
   461  00FE4A  01                 	db	1
   462  00FE4B  67                 	db	103
   463  00FE4C  2B                 	db	43
   464  00FE4D  FE                 	db	254
   465  00FE4E  D7                 	db	215
   466  00FE4F  AB                 	db	171
   467  00FE50  76                 	db	118
   468  00FE51  CA                 	db	202
   469  00FE52  82                 	db	130
   470  00FE53  C9                 	db	201
   471  00FE54  7D                 	db	125
   472  00FE55  FA                 	db	250
   473  00FE56  59                 	db	89
   474  00FE57  47                 	db	71
   475  00FE58  F0                 	db	240
   476  00FE59  AD                 	db	173
   477  00FE5A  D4                 	db	212
   478  00FE5B  A2                 	db	162
   479  00FE5C  AF                 	db	175
   480  00FE5D  9C                 	db	156
   481  00FE5E  A4                 	db	164
   482  00FE5F  72                 	db	114
   483  00FE60  C0                 	db	192
   484  00FE61  B7                 	db	183
   485  00FE62  FD                 	db	253
   486  00FE63  93                 	db	147
   487  00FE64  26                 	db	38
   488  00FE65  36                 	db	54
   489  00FE66  3F                 	db	63
   490  00FE67  F7                 	db	247
   491  00FE68  CC                 	db	204
   492  00FE69  34                 	db	52
   493  00FE6A  A5                 	db	165
   494  00FE6B  E5                 	db	229
   495  00FE6C  F1                 	db	241
   496  00FE6D  71                 	db	113
   497  00FE6E  D8                 	db	216
   498  00FE6F  31                 	db	49
   499  00FE70  15                 	db	21
   500  00FE71  04                 	db	4
   501  00FE72  C7                 	db	199
   502  00FE73  23                 	db	35
   503  00FE74  C3                 	db	195
   504  00FE75  18                 	db	24
   505  00FE76  96                 	db	150
   506  00FE77  05                 	db	5
   507  00FE78  9A                 	db	154
   508  00FE79  07                 	db	7
   509  00FE7A  12                 	db	18
   510  00FE7B  80                 	db	128
   511  00FE7C  E2                 	db	226
   512  00FE7D  EB                 	db	235
   513  00FE7E  27                 	db	39
   514  00FE7F  B2                 	db	178
   515  00FE80  75                 	db	117
   516  00FE81  09                 	db	9
   517  00FE82  83                 	db	131
   518  00FE83  2C                 	db	44
   519  00FE84  1A                 	db	26
   520  00FE85  1B                 	db	27
   521  00FE86  6E                 	db	110
   522  00FE87  5A                 	db	90
   523  00FE88  A0                 	db	160
   524  00FE89  52                 	db	82
   525  00FE8A  3B                 	db	59
   526  00FE8B  D6                 	db	214
   527  00FE8C  B3                 	db	179
   528  00FE8D  29                 	db	41
   529  00FE8E  E3                 	db	227
   530  00FE8F  2F                 	db	47
   531  00FE90  84                 	db	132
   532  00FE91  53                 	db	83
   533  00FE92  D1                 	db	209
   534  00FE93  00                 	db	0
   535  00FE94  ED                 	db	237
   536  00FE95  20                 	db	32
   537  00FE96  FC                 	db	252
   538  00FE97  B1                 	db	177
   539  00FE98  5B                 	db	91
   540  00FE99  6A                 	db	106
   541  00FE9A  CB                 	db	203
   542  00FE9B  BE                 	db	190
   543  00FE9C  39                 	db	57
   544  00FE9D  4A                 	db	74
   545  00FE9E  4C                 	db	76
   546  00FE9F  58                 	db	88
   547  00FEA0  CF                 	db	207
   548  00FEA1  D0                 	db	208
   549  00FEA2  EF                 	db	239
   550  00FEA3  AA                 	db	170
   551  00FEA4  FB                 	db	251
   552  00FEA5  43                 	db	67
   553  00FEA6  4D                 	db	77
   554  00FEA7  33                 	db	51
   555  00FEA8  85                 	db	133
   556  00FEA9  45                 	db	69
   557  00FEAA  F9                 	db	249
   558  00FEAB  02                 	db	2
   559  00FEAC  7F                 	db	127
   560  00FEAD  50                 	db	80
   561  00FEAE  3C                 	db	60
   562  00FEAF  9F                 	db	159
   563  00FEB0  A8                 	db	168
   564  00FEB1  51                 	db	81
   565  00FEB2  A3                 	db	163
   566  00FEB3  40                 	db	64
   567  00FEB4  8F                 	db	143
   568  00FEB5  92                 	db	146
   569  00FEB6  9D                 	db	157
   570  00FEB7  38                 	db	56
   571  00FEB8  F5                 	db	245
   572  00FEB9  BC                 	db	188
   573  00FEBA  B6                 	db	182
   574  00FEBB  DA                 	db	218
   575  00FEBC  21                 	db	33
   576  00FEBD  10                 	db	16
   577  00FEBE  FF                 	db	255
   578  00FEBF  F3                 	db	243
   579  00FEC0  D2                 	db	210
   580  00FEC1  CD                 	db	205
   581  00FEC2  0C                 	db	12
   582  00FEC3  13                 	db	19
   583  00FEC4  EC                 	db	236
   584  00FEC5  5F                 	db	95
   585  00FEC6  97                 	db	151
   586  00FEC7  44                 	db	68
   587  00FEC8  17                 	db	23
   588  00FEC9  C4                 	db	196
   589  00FECA  A7                 	db	167
   590  00FECB  7E                 	db	126
   591  00FECC  3D                 	db	61
   592  00FECD  64                 	db	100
   593  00FECE  5D                 	db	93
   594  00FECF  19                 	db	25
   595  00FED0  73                 	db	115
   596  00FED1  60                 	db	96
   597  00FED2  81                 	db	129
   598  00FED3  4F                 	db	79
   599  00FED4  DC                 	db	220
   600  00FED5  22                 	db	34
   601  00FED6  2A                 	db	42
   602  00FED7  90                 	db	144
   603  00FED8  88                 	db	136
   604  00FED9  46                 	db	70
   605  00FEDA  EE                 	db	238
   606  00FEDB  B8                 	db	184
   607  00FEDC  14                 	db	20
   608  00FEDD  DE                 	db	222
   609  00FEDE  5E                 	db	94
   610  00FEDF  0B                 	db	11
   611  00FEE0  DB                 	db	219
   612  00FEE1  E0                 	db	224
   613  00FEE2  32                 	db	50
   614  00FEE3  3A                 	db	58
   615  00FEE4  0A                 	db	10
   616  00FEE5  49                 	db	73
   617  00FEE6  06                 	db	6
   618  00FEE7  24                 	db	36
   619  00FEE8  5C                 	db	92
   620  00FEE9  C2                 	db	194
   621  00FEEA  D3                 	db	211
   622  00FEEB  AC                 	db	172
   623  00FEEC  62                 	db	98
   624  00FEED  91                 	db	145
   625  00FEEE  95                 	db	149
   626  00FEEF  E4                 	db	228
   627  00FEF0  79                 	db	121
   628  00FEF1  E7                 	db	231
   629  00FEF2  C8                 	db	200
   630  00FEF3  37                 	db	55
   631  00FEF4  6D                 	db	109
   632  00FEF5  8D                 	db	141
   633  00FEF6  D5                 	db	213
   634  00FEF7  4E                 	db	78
   635  00FEF8  A9                 	db	169
   636  00FEF9  6C                 	db	108
   637  00FEFA  56                 	db	86
   638  00FEFB  F4                 	db	244
   639  00FEFC  EA                 	db	234
   640  00FEFD  65                 	db	101
   641  00FEFE  7A                 	db	122
   642  00FEFF  AE                 	db	174
   643  00FF00  08                 	db	8
   644  00FF01  BA                 	db	186
   645  00FF02  78                 	db	120
   646  00FF03  25                 	db	37
   647  00FF04  2E                 	db	46
   648  00FF05  1C                 	db	28
   649  00FF06  A6                 	db	166
   650  00FF07  B4                 	db	180
   651  00FF08  C6                 	db	198
   652  00FF09  E8                 	db	232
   653  00FF0A  DD                 	db	221
   654  00FF0B  74                 	db	116
   655  00FF0C  1F                 	db	31
   656  00FF0D  4B                 	db	75
   657  00FF0E  BD                 	db	189
   658  00FF0F  8B                 	db	139
   659  00FF10  8A                 	db	138
   660  00FF11  70                 	db	112
   661  00FF12  3E                 	db	62
   662  00FF13  B5                 	db	181
   663  00FF14  66                 	db	102
   664  00FF15  48                 	db	72
   665  00FF16  03                 	db	3
   666  00FF17  F6                 	db	246
   667  00FF18  0E                 	db	14
   668  00FF19  61                 	db	97
   669  00FF1A  35                 	db	53
   670  00FF1B  57                 	db	87
   671  00FF1C  B9                 	db	185
   672  00FF1D  86                 	db	134
   673  00FF1E  C1                 	db	193
   674  00FF1F  1D                 	db	29
   675  00FF20  9E                 	db	158
   676  00FF21  E1                 	db	225
   677  00FF22  F8                 	db	248
   678  00FF23  98                 	db	152
   679  00FF24  11                 	db	17
   680  00FF25  69                 	db	105
   681  00FF26  D9                 	db	217
   682  00FF27  8E                 	db	142
   683  00FF28  94                 	db	148
   684  00FF29  9B                 	db	155
   685  00FF2A  1E                 	db	30
   686  00FF2B  87                 	db	135
   687  00FF2C  E9                 	db	233
   688  00FF2D  CE                 	db	206
   689  00FF2E  55                 	db	85
   690  00FF2F  28                 	db	40
   691  00FF30  DF                 	db	223
   692  00FF31  8C                 	db	140
   693  00FF32  A1                 	db	161
   694  00FF33  89                 	db	137
   695  00FF34  0D                 	db	13
   696  00FF35  BF                 	db	191
   697  00FF36  E6                 	db	230
   698  00FF37  42                 	db	66
   699  00FF38  68                 	db	104
   700  00FF39  41                 	db	65
   701  00FF3A  99                 	db	153
   702  00FF3B  2D                 	db	45
   703  00FF3C  0F                 	db	15
   704  00FF3D  B0                 	db	176
   705  00FF3E  54                 	db	84
   706  00FF3F  BB                 	db	187
   707  00FF40  16                 	db	22
   708  00FF41                     __end_of_STable:
   709                           	opt stack 0
   710  00FF41                     _modulation:
   711                           	opt stack 0
   712  00FF41  01                 	db	1
   713  00FF42  01                 	db	1
   714  00FF43  01                 	db	1
   715  00FF44  01                 	db	1
   716  00FF45  01                 	db	1
   717  00FF46  01                 	db	1
   718  00FF47  01                 	db	1
   719  00FF48  00                 	db	0
   720  00FF49                     __end_of_modulation:
   721                           	opt stack 0
   722  00FF49                     _rxWindowOffset:
   723                           	opt stack 0
   724  00FF49  DF                 	db	223
   725  00FF4A  CE                 	db	206
   726  00FF4B  C6                 	db	198
   727  00FF4C  C2                 	db	194
   728  00FF4D  BE                 	db	190
   729  00FF4E  BC                 	db	188
   730  00FF4F  F1                 	db	241
   731  00FF50  FE                 	db	254
   732  00FF51                     __end_of_rxWindowOffset:
   733                           	opt stack 0
   734  00FF51                     _maxPayloadSize:
   735                           	opt stack 0
   736  00FF51  33                 	db	51
   737  00FF52  33                 	db	51
   738  00FF53  33                 	db	51
   739  00FF54  73                 	db	115
   740  00FF55  F2                 	db	242
   741  00FF56  F2                 	db	242
   742  00FF57  F2                 	db	242
   743  00FF58  38                 	db	56
   744  00FF59                     __end_of_maxPayloadSize:
   745                           	opt stack 0
   746  00FF59                     _rxWindowSize:
   747                           	opt stack 0
   748  00FF59  08                 	db	8
   749  00FF5A  0A                 	db	10
   750  00FF5B  0E                 	db	14
   751  00FF5C  1A                 	db	26
   752  00FF5D  31                 	db	49
   753  00FF5E  58                 	db	88
   754  00FF5F  3C                 	db	60
   755  00FF60  08                 	db	8
   756  00FF61                     __end_of_rxWindowSize:
   757                           	opt stack 0
   758  00FF61                     _macEndDevCmdReplyLen:
   759                           	opt stack 0
   760  00FF61  01                 	db	1
   761  00FF62  02                 	db	2
   762  00FF63  01                 	db	1
   763  00FF64  02                 	db	2
   764  00FF65  03                 	db	3
   765  00FF66  02                 	db	2
   766  00FF67  01                 	db	1
   767  00FF68                     __end_of_macEndDevCmdReplyLen:
   768                           	opt stack 0
   769  00FF68                     _bandwidth:
   770                           	opt stack 0
   771  00FF68  07                 	db	7
   772  00FF69  07                 	db	7
   773  00FF6A  07                 	db	7
   774  00FF6B  07                 	db	7
   775  00FF6C  07                 	db	7
   776  00FF6D  07                 	db	7
   777  00FF6E  08                 	db	8
   778  00FF6F                     __end_of_bandwidth:
   779                           	opt stack 0
   780  00FF6F                     _spreadingFactor:
   781                           	opt stack 0
   782  00FF6F  0C                 	db	12
   783  00FF70  0B                 	db	11
   784  00FF71  0A                 	db	10
   785  00FF72  09                 	db	9
   786  00FF73  08                 	db	8
   787  00FF74  07                 	db	7
   788  00FF75  07                 	db	7
   789  00FF76                     __end_of_spreadingFactor:
   790                           	opt stack 0
   791  00FF76  0A                 	db	10
   792  00FF77  07                 	db	7
   793  00FF78  04                 	db	4
   794  00FF79  01                 	db	1
   795  00FF7A  FE                 	db	254
   796  00FF7B  FB                 	db	251
   797  00FF7C                     __end_of_txPower433:
   798                           	opt stack 0
   799  00FF7C                     _txPower868:
   800                           	opt stack 0
   801  00FF7C  14                 	db	20
   802  00FF7D  0E                 	db	14
   803  00FF7E  0B                 	db	11
   804  00FF7F  08                 	db	8
   805  00FF80  05                 	db	5
   806  00FF81  02                 	db	2
   807  00FF82                     __end_of_txPower868:
   808                           	opt stack 0
   809  00FF82                     _DefaultChannels433:
   810                           	opt stack 0
   811  00FF82  B9D8               	dw	47576
   812  00FF84  19D1               	dw	6609
   813  00FF86  01                 	db	1
   814  00FF87  50                 	db	80
   815  00FF88  012E               	dw	302
   816  00FF8A  0000               	dw	0
   817  00FF8C  0000               	dw	0
   818  00FF8E  01                 	db	1
   819  00FF8F  FF                 	db	255
   820  00FF90  C718               	dw	50968
   821  00FF92  19D4               	dw	6612
   822  00FF94  01                 	db	1
   823  00FF95  50                 	db	80
   824  00FF96  012E               	dw	302
   825  00FF98  0000               	dw	0
   826  00FF9A  0000               	dw	0
   827  00FF9C  01                 	db	1
   828  00FF9D  FF                 	db	255
   829  00FF9E  D458               	dw	54360
   830  00FFA0  19D7               	dw	6615
   831  00FFA2  01                 	db	1
   832  00FFA3  50                 	db	80
   833  00FFA4  012E               	dw	302
   834  00FFA6  0000               	dw	0
   835  00FFA8  0000               	dw	0
   836  00FFAA  01                 	db	1
   837  00FFAB  FF                 	db	255
   838  00FFAC                     __end_of_DefaultChannels433:
   839                           	opt stack 0
   840  00FFAC                     _DefaultChannels868:
   841                           	opt stack 0
   842  00FFAC  27A0               	dw	10144
   843  00FFAE  33BE               	dw	13246
   844  00FFB0  01                 	db	1
   845  00FFB1  50                 	db	80
   846  00FFB2  012E               	dw	302
   847  00FFB4  0000               	dw	0
   848  00FFB6  0000               	dw	0
   849  00FFB8  01                 	db	1
   850  00FFB9  FF                 	db	255
   851  00FFBA  34E0               	dw	13536
   852  00FFBC  33C1               	dw	13249
   853  00FFBE  01                 	db	1
   854  00FFBF  50                 	db	80
   855  00FFC0  012E               	dw	302
   856  00FFC2  0000               	dw	0
   857  00FFC4  0000               	dw	0
   858  00FFC6  01                 	db	1
   859  00FFC7  FF                 	db	255
   860  00FFC8  4220               	dw	16928
   861  00FFCA  33C4               	dw	13252
   862  00FFCC  01                 	db	1
   863  00FFCD  50                 	db	80
   864  00FFCE  012E               	dw	302
   865  00FFD0  0000               	dw	0
   866  00FFD2  0000               	dw	0
   867  00FFD4  01                 	db	1
   868  00FFD5  FF                 	db	255
   869  00FFD6                     __end_of_DefaultChannels868:
   870                           	opt stack 0
   871  00FFD6                     _FskSyncWordBuff:
   872                           	opt stack 0
   873  00FFD6  C1                 	db	193
   874  00FFD7  94                 	db	148
   875  00FFD8  C1                 	db	193
   876  00FFD9                     __end_of_FskSyncWordBuff:
   877                           	opt stack 0
   878  00FFD9                     STR_2:
   879                           
   880                           ; BSR set to: 1
   881  00FFD9  0D                 	db	13
   882  00FFDA  4F                 	db	79	;'O'
   883  00FFDB  54                 	db	84	;'T'
   884  00FFDC  41                 	db	65	;'A'
   885  00FFDD  41                 	db	65	;'A'
   886  00FFDE  20                 	db	32
   887  00FFDF  4A                 	db	74	;'J'
   888  00FFE0  6F                 	db	111	;'o'
   889  00FFE1  69                 	db	105	;'i'
   890  00FFE2  6E                 	db	110	;'n'
   891  00FFE3  65                 	db	101	;'e'
   892  00FFE4  64                 	db	100	;'d'
   893  00FFE5  21                 	db	33
   894  00FFE6  00                 	db	0
   895  00FFE7                     STR_3:
   896                           
   897                           ; BSR set to: 1
   898  00FFE7  0D                 	db	13
   899  00FFE8  41                 	db	65	;'A'
   900  00FFE9  42                 	db	66	;'B'
   901  00FFEA  50                 	db	80	;'P'
   902  00FFEB  20                 	db	32
   903  00FFEC  4A                 	db	74	;'J'
   904  00FFED  6F                 	db	111	;'o'
   905  00FFEE  69                 	db	105	;'i'
   906  00FFEF  6E                 	db	110	;'n'
   907  00FFF0  65                 	db	101	;'e'
   908  00FFF1  64                 	db	100	;'d'
   909  00FFF2  21                 	db	33
   910  00FFF3  00                 	db	0
   911  00FFF4                     STR_1:
   912                           
   913                           ; BSR set to: 1
   914  00FFF4  0D                 	db	13
   915  00FFF5  53                 	db	83	;'S'
   916  00FFF6  59                 	db	89	;'Y'
   917  00FFF7  53                 	db	83	;'S'
   918  00FFF8  49                 	db	73	;'I'
   919  00FFF9  4E                 	db	78	;'N'
   920  00FFFA  49                 	db	73	;'I'
   921  00FFFB  54                 	db	84	;'T'
   922  00FFFC  21                 	db	33
   923  00FFFD  00                 	db	0
   924                           
   925                           ; #config settings
   926  00FFFE  00                 	db	0	; dummy byte at the end
   927  0000                     
   928                           	psect	nvBANK1
   929  0001DC                     __pnvBANK1:
   930                           	opt stack 0
   931  0001DC                     _timer5ReloadVal:
   932                           	opt stack 0
   933  0001DC                     	ds	2
   934  0001DE                     _EUSART1_ErrorHandler:
   935                           	opt stack 0
   936  0001DE                     	ds	2
   937  0001E0                     _EUSART1_OverrunErrorHandler:
   938                           	opt stack 0
   939  0001E0                     	ds	2
   940  0001E2                     _EUSART1_FramingErrorHandler:
   941                           	opt stack 0
   942  0001E2                     	ds	2
   943  0001E4                     _TMR1_InterruptHandler:
   944                           	opt stack 0
   945  0001E4                     	ds	2
   946  0001E6                     _timer1ReloadVal:
   947                           	opt stack 0
   948  0001E6                     	ds	2
   949  0001E8                     _IOCB4_InterruptHandler:
   950                           	opt stack 0
   951  0001E8                     	ds	2
   952  0001EA                     _INT2_InterruptHandler:
   953                           	opt stack 0
   954  0001EA                     	ds	2
   955  0001EC                     _INT1_InterruptHandler:
   956                           	opt stack 0
   957  0001EC                     	ds	2
   958  0000                     _TMR5	set	3919
   959  0000                     _T5GCONbits	set	3917
   960  0000                     _T5CONbits	set	3918
   961  0000                     _T5CON	set	3918
   962  0000                     _TMR5L	set	3919
   963  0000                     _TMR5H	set	3920
   964  0000                     _T5GCON	set	3917
   965  0000                     _CCPR5H	set	3926
   966  0000                     _CCPR5L	set	3925
   967  0000                     _CCP5CON	set	3924
   968  0000                     _ANSELA	set	3896
   969  0000                     _ANSELE	set	3900
   970  0000                     _ANSELB	set	3897
   971  0000                     _ANSELC	set	3898
   972  0000                     _ANSELD	set	3899
   973  0000                     _TMR1	set	4046
   974  0000                     _PIR5bits	set	3966
   975  0000                     _TXREG1	set	4013
   976  0000                     _RCREG1	set	4014
   977  0000                     _RCSTA1bits	set	4011
   978  0000                     _TXSTA1bits	set	4012
   979  0000                     _SPBRGH1	set	4016
   980  0000                     _SPBRG1	set	4015
   981  0000                     _TXSTA1	set	4012
   982  0000                     _RCSTA1	set	4011
   983  0000                     _BAUDCON1	set	4024
   984  0000                     _ADCON0bits	set	4034
   985  0000                     _ADRESH	set	4036
   986  0000                     _ADRESL	set	4035
   987  0000                     _ADCON2	set	4032
   988  0000                     _ADCON1	set	4033
   989  0000                     _ADCON0	set	4034
   990  0000                     _T1GCONbits	set	4044
   991  0000                     _T1CONbits	set	4045
   992  0000                     _T1CON	set	4045
   993  0000                     _TMR1L	set	4046
   994  0000                     _TMR1H	set	4047
   995  0000                     _T1GCON	set	4044
   996  0000                     _IOCBbits	set	3938
   997  0000                     _WPUB	set	3937
   998  0000                     _TRISD	set	3989
   999  0000                     _TRISC	set	3988
  1000  0000                     _TRISB	set	3987
  1001  0000                     _TRISA	set	3986
  1002  0000                     _TRISE	set	3990
  1003  0000                     _LATC	set	3979
  1004  0000                     _LATB	set	3978
  1005  0000                     _LATA	set	3977
  1006  0000                     _LATD	set	3980
  1007  0000                     _LATE	set	3981
  1008  0000                     _OSCTUNE	set	3995
  1009  0000                     _OSCCON2	set	4050
  1010  0000                     _OSCCON	set	4051
  1011  0000                     _PIR1bits	set	3998
  1012  0000                     _PIE1bits	set	3997
  1013  0000                     _RCONbits	set	4048
  1014  0000                     _INTCON2bits	set	4081
  1015  0000                     _INTCON3bits	set	4080
  1016  0000                     _SSP2STATbits	set	3949
  1017  0000                     _SSP2BUF	set	3951
  1018  0000                     _SSP2CON1bits	set	3948
  1019  0000                     _SSP2ADD	set	3950
  1020  0000                     _SSP2CON1	set	3948
  1021  0000                     _SSP2STAT	set	3949
  1022  0000                     _PORTBbits	set	3969
  1023  0000                     _INTCONbits	set	4082
  1024  0000                     _TMR5IF	set	31729
  1025  0000                     _LATD3	set	31843
  1026  0000                     _LATC2	set	31834
  1027  0000                     _TRISC2	set	31906
  1028                           
  1029                           	psect	cinit
  1030  006A90                     __pcinit:
  1031                           	opt stack 0
  1032  006A90                     start_initialization:
  1033                           	opt stack 0
  1034  006A90                     __initialization:
  1035                           	opt stack 0
  1036                           
  1037                           ; Initialize objects allocated to BANK3 (64 bytes)
  1038                           ; load TBLPTR registers with __pidataBANK3
  1039  006A90  0E8E               	movlw	low __pidataBANK3
  1040  006A92  6EF6               	movwf	tblptrl,c
  1041  006A94  0E87               	movlw	high __pidataBANK3
  1042  006A96  6EF7               	movwf	tblptrh,c
  1043  006A98  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1044  006A9A  6EF8               	movwf	tblptru,c
  1045  006A9C  EE03  F0A0         	lfsr	0,__pdataBANK3
  1046  006AA0  EE20 F040          	lfsr	2,64
  1047  006AA4                     copy_data0:
  1048  006AA4  0009               	tblrd		*+
  1049  006AA6  CFF5 FFEE          	movff	tablat,postinc0
  1050  006AAA  50DD               	movf	postdec2,w,c
  1051  006AAC  50D9               	movf	fsr2l,w,c
  1052  006AAE  E1FA               	bnz	copy_data0
  1053                           
  1054                           ; Initialize objects allocated to BANK2 (8 bytes)
  1055                           ; load TBLPTR registers with __pidataBANK2
  1056  006AB0  0EA2               	movlw	low __pidataBANK2
  1057  006AB2  6EF6               	movwf	tblptrl,c
  1058  006AB4  0E92               	movlw	high __pidataBANK2
  1059  006AB6  6EF7               	movwf	tblptrh,c
  1060  006AB8  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1061  006ABA  6EF8               	movwf	tblptru,c
  1062  006ABC  EE02  F0F5         	lfsr	0,__pdataBANK2
  1063  006AC0  EE20 F008          	lfsr	2,8
  1064  006AC4                     copy_data1:
  1065  006AC4  0009               	tblrd		*+
  1066  006AC6  CFF5 FFEE          	movff	tablat,postinc0
  1067  006ACA  50DD               	movf	postdec2,w,c
  1068  006ACC  50D9               	movf	fsr2l,w,c
  1069  006ACE  E1FA               	bnz	copy_data1
  1070                           
  1071                           ; Initialize objects allocated to BANK1 (16 bytes)
  1072                           ; load TBLPTR registers with __pidataBANK1
  1073  006AD0  0E16               	movlw	low __pidataBANK1
  1074  006AD2  6EF6               	movwf	tblptrl,c
  1075  006AD4  0E91               	movlw	high __pidataBANK1
  1076  006AD6  6EF7               	movwf	tblptrh,c
  1077  006AD8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1078  006ADA  6EF8               	movwf	tblptru,c
  1079  006ADC  EE01  F0EE         	lfsr	0,__pdataBANK1
  1080  006AE0  EE20 F010          	lfsr	2,16
  1081  006AE4                     copy_data2:
  1082  006AE4  0009               	tblrd		*+
  1083  006AE6  CFF5 FFEE          	movff	tablat,postinc0
  1084  006AEA  50DD               	movf	postdec2,w,c
  1085  006AEC  50D9               	movf	fsr2l,w,c
  1086  006AEE  E1FA               	bnz	copy_data2
  1087                           
  1088                           ; Initialize objects allocated to COMRAM (4 bytes)
  1089                           ; load TBLPTR registers with __pidataCOMRAM
  1090  006AF0  0EEC               	movlw	low __pidataCOMRAM
  1091  006AF2  6EF6               	movwf	tblptrl,c
  1092  006AF4  0E92               	movlw	high __pidataCOMRAM
  1093  006AF6  6EF7               	movwf	tblptrh,c
  1094  006AF8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1095  006AFA  6EF8               	movwf	tblptru,c
  1096  006AFC  EE00  F054         	lfsr	0,__pdataCOMRAM
  1097  006B00  EE20 F004          	lfsr	2,4
  1098  006B04                     copy_data3:
  1099  006B04  0009               	tblrd		*+
  1100  006B06  CFF5 FFEE          	movff	tablat,postinc0
  1101  006B0A  50DD               	movf	postdec2,w,c
  1102  006B0C  50D9               	movf	fsr2l,w,c
  1103  006B0E  E1FA               	bnz	copy_data3
  1104                           
  1105                           ; Clear objects allocated to BIGRAM (542 bytes)
  1106  006B10  EE04  F0E0         	lfsr	0,__pbssBIGRAM
  1107  006B14  EE22 F01E          	lfsr	2,542
  1108  006B18                     clear_0:
  1109  006B18  6AEE               	clrf	postinc0,c
  1110  006B1A  50DD               	movf	postdec2,w,c
  1111  006B1C  50D9               	movf	fsr2l,w,c
  1112  006B1E  E1FC               	bnz	clear_0
  1113  006B20  50DA               	movf	fsr2h,w,c
  1114  006B22  E1FA               	bnz	clear_0
  1115                           
  1116                           ; Clear objects allocated to BANK4 (224 bytes)
  1117  006B24  EE04  F000         	lfsr	0,__pbssBANK4
  1118  006B28  0EE0               	movlw	224
  1119  006B2A                     clear_1:
  1120  006B2A  6AEE               	clrf	postinc0,c
  1121  006B2C  06E8               	decf	wreg,f,c
  1122  006B2E  E1FD               	bnz	clear_1
  1123                           
  1124                           ; Clear objects allocated to BANK3 (160 bytes)
  1125  006B30  EE03  F000         	lfsr	0,__pbssBANK3
  1126  006B34  0EA0               	movlw	160
  1127  006B36                     clear_2:
  1128  006B36  6AEE               	clrf	postinc0,c
  1129  006B38  06E8               	decf	wreg,f,c
  1130  006B3A  E1FD               	bnz	clear_2
  1131                           
  1132                           ; Clear objects allocated to BANK2 (245 bytes)
  1133  006B3C  EE02  F000         	lfsr	0,__pbssBANK2
  1134  006B40  0EF5               	movlw	245
  1135  006B42                     clear_3:
  1136  006B42  6AEE               	clrf	postinc0,c
  1137  006B44  06E8               	decf	wreg,f,c
  1138  006B46  E1FD               	bnz	clear_3
  1139                           
  1140                           ; Clear objects allocated to BANK1 (115 bytes)
  1141  006B48  EE01  F000         	lfsr	0,__pbssBANK1
  1142  006B4C  0E73               	movlw	115
  1143  006B4E                     clear_4:
  1144  006B4E  6AEE               	clrf	postinc0,c
  1145  006B50  06E8               	decf	wreg,f,c
  1146  006B52  E1FD               	bnz	clear_4
  1147                           
  1148                           ; Clear objects allocated to BANK0 (1 bytes)
  1149  006B54  0100               	movlb	0
  1150  006B56  6BF9               	clrf	__pbssBANK0& (0+255),b
  1151                           
  1152                           ; Clear objects allocated to COMRAM (12 bytes)
  1153  006B58  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1154  006B5C  0E0C               	movlw	12
  1155  006B5E                     clear_5:
  1156  006B5E  6AEE               	clrf	postinc0,c
  1157  006B60  06E8               	decf	wreg,f,c
  1158  006B62  E1FD               	bnz	clear_5
  1159  006B64                     end_of_initialization:
  1160                           	opt stack 0
  1161  006B64                     __end_of__initialization:
  1162                           	opt stack 0
  1163  006B64  0100               	movlb	0
  1164  006B66  EFD8  F01B         	goto	_main	;jump to C main() function
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           postdec2	equ	0xFDD
  1172                           fsr2h	equ	0xFDA
  1173                           fsr2l	equ	0xFD9
  1174                           
  1175                           	psect	bssCOMRAM
  1176  00003C                     __pbssCOMRAM:
  1177                           	opt stack 0
  1178  00003C                     _ticksAccounted:
  1179                           	opt stack 0
  1180  00003C                     	ds	4
  1181  000040                     _ticksAdded:
  1182                           	opt stack 0
  1183  000040                     	ds	4
  1184  000044                     _reloadVal:
  1185                           	opt stack 0
  1186  000044                     	ds	2
  1187  000046                     __rcon:
  1188                           	opt stack 0
  1189  000046                     	ds	1
  1190  000047                     _timerOverflow:
  1191                           	opt stack 0
  1192  000047                     	ds	1
  1193                           tblptru	equ	0xFF8
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           tablat	equ	0xFF5
  1197                           postinc0	equ	0xFEE
  1198                           wreg	equ	0xFE8
  1199                           postdec2	equ	0xFDD
  1200                           fsr2h	equ	0xFDA
  1201                           fsr2l	equ	0xFD9
  1202                           
  1203                           	psect	dataCOMRAM
  1204  000054                     __pdataCOMRAM:
  1205                           	opt stack 0
  1206  000054                     _ticksToScheduledInterrupt:
  1207                           	opt stack 0
  1208  000054                     	ds	4
  1209                           tblptru	equ	0xFF8
  1210                           tblptrh	equ	0xFF7
  1211                           tblptrl	equ	0xFF6
  1212                           tablat	equ	0xFF5
  1213                           postinc0	equ	0xFEE
  1214                           wreg	equ	0xFE8
  1215                           postdec2	equ	0xFDD
  1216                           fsr2h	equ	0xFDA
  1217                           fsr2l	equ	0xFD9
  1218                           
  1219                           	psect	bssBANK0
  1220  0000F9                     __pbssBANK0:
  1221                           	opt stack 0
  1222  0000F9                     _allocatedTimers:
  1223                           	opt stack 0
  1224  0000F9                     	ds	1
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           postinc0	equ	0xFEE
  1230                           wreg	equ	0xFE8
  1231                           postdec2	equ	0xFDD
  1232                           fsr2h	equ	0xFDA
  1233                           fsr2l	equ	0xFD9
  1234                           
  1235                           	psect	bssBANK1
  1236  000100                     __pbssBANK1:
  1237                           	opt stack 0
  1238  000100                     _adcVoltage:
  1239                           	opt stack 0
  1240  000100                     	ds	4
  1241  000104                     _rxPayload:
  1242                           	opt stack 0
  1243  000104                     	ds	4
  1244  000108                     TMR_GetDeltaTime@retVal:
  1245                           	opt stack 0
  1246  000108                     	ds	4
  1247  00010C                     _humidity:
  1248                           	opt stack 0
  1249  00010C                     	ds	3
  1250  00010F                     _pressure:
  1251                           	opt stack 0
  1252  00010F                     	ds	3
  1253  000112                     _temperature:
  1254                           	opt stack 0
  1255  000112                     	ds	3
  1256  000115                     TMR_SwapTimer@retVal:
  1257                           	opt stack 0
  1258  000115                     	ds	2
  1259  000117                     TMR_SwapTimer@oldVal:
  1260                           	opt stack 0
  1261  000117                     	ds	2
  1262  000119                     TMR_GetDeltaTime@tmrVal:
  1263                           	opt stack 0
  1264  000119                     	ds	2
  1265  00011B                     _eusart1RxLastError:
  1266                           	opt stack 0
  1267  00011B                     	ds	1
  1268  00011C                     _counter:
  1269                           	opt stack 0
  1270  00011C                     	ds	1
  1271  00011D                     _activationMethod:
  1272                           	opt stack 0
  1273  00011D                     	ds	1
  1274  00011E                     _localDioStatus:
  1275                           	opt stack 0
  1276  00011E                     	ds	1
  1277  00011F                     __roundCounter:
  1278                           	opt stack 0
  1279  00011F                     	ds	1
  1280  000120                     _dioStatus:
  1281                           	opt stack 0
  1282  000120                     	ds	1
  1283  000121                     _RadioConfiguration:
  1284                           	opt stack 0
  1285  000121                     	ds	54
  1286  000157                     _aesBuffer:
  1287                           	opt stack 0
  1288  000157                     	ds	16
  1289  000167                     _data:
  1290                           	opt stack 0
  1291  000167                     	ds	8
  1292  00016F                     _adcResult:
  1293                           	opt stack 0
  1294  00016F                     	ds	4
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec2	equ	0xFDD
  1302                           fsr2h	equ	0xFDA
  1303                           fsr2l	equ	0xFD9
  1304                           
  1305                           	psect	dataBANK1
  1306  0001EE                     __pdataBANK1:
  1307                           	opt stack 0
  1308  0001EE                     _randx:
  1309                           	opt stack 0
  1310  0001EE                     	ds	4
  1311  0001F2                     _deviceAddr:
  1312                           	opt stack 0
  1313  0001F2                     	ds	4
  1314  0001F6                     _deviceEUI:
  1315                           	opt stack 0
  1316  0001F6                     	ds	8
  1317                           tblptru	equ	0xFF8
  1318                           tblptrh	equ	0xFF7
  1319                           tblptrl	equ	0xFF6
  1320                           tablat	equ	0xFF5
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           postdec2	equ	0xFDD
  1324                           fsr2h	equ	0xFDA
  1325                           fsr2l	equ	0xFD9
  1326                           
  1327                           	psect	bssBANK2
  1328  000200                     __pbssBANK2:
  1329                           	opt stack 0
  1330  000200                     _loRa:
  1331                           	opt stack 0
  1332  000200                     	ds	245
  1333                           tblptru	equ	0xFF8
  1334                           tblptrh	equ	0xFF7
  1335                           tblptrl	equ	0xFF6
  1336                           tablat	equ	0xFF5
  1337                           postinc0	equ	0xFEE
  1338                           wreg	equ	0xFE8
  1339                           postdec2	equ	0xFDD
  1340                           fsr2h	equ	0xFDA
  1341                           fsr2l	equ	0xFD9
  1342                           
  1343                           	psect	dataBANK2
  1344  0002F5                     __pdataBANK2:
  1345                           	opt stack 0
  1346  0002F5                     _applicationEUI:
  1347                           	opt stack 0
  1348  0002F5                     	ds	8
  1349                           tblptru	equ	0xFF8
  1350                           tblptrh	equ	0xFF7
  1351                           tblptrl	equ	0xFF6
  1352                           tablat	equ	0xFF5
  1353                           postinc0	equ	0xFEE
  1354                           wreg	equ	0xFE8
  1355                           postdec2	equ	0xFDD
  1356                           fsr2h	equ	0xFDA
  1357                           fsr2l	equ	0xFD9
  1358                           
  1359                           	psect	bssBANK3
  1360  000300                     __pbssBANK3:
  1361                           	opt stack 0
  1362  000300                     _swTimers:
  1363                           	opt stack 0
  1364  000300                     	ds	160
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           postdec2	equ	0xFDD
  1372                           fsr2h	equ	0xFDA
  1373                           fsr2l	equ	0xFD9
  1374                           
  1375                           	psect	dataBANK3
  1376  0003A0                     __pdataBANK3:
  1377                           	opt stack 0
  1378  0003A0                     GenerateSubkey@F7103:
  1379                           	opt stack 0
  1380  0003A0                     	ds	16
  1381  0003B0                     _appSKey:
  1382                           	opt stack 0
  1383  0003B0                     	ds	16
  1384  0003C0                     _nwkSKey:
  1385                           	opt stack 0
  1386  0003C0                     	ds	16
  1387  0003D0                     _applicationKey:
  1388                           	opt stack 0
  1389  0003D0                     	ds	16
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec2	equ	0xFDD
  1397                           fsr2h	equ	0xFDA
  1398                           fsr2l	equ	0xFD9
  1399                           
  1400                           	psect	bssBANK4
  1401  000400                     __pbssBANK4:
  1402                           	opt stack 0
  1403  000400                     _Channels:
  1404                           	opt stack 0
  1405  000400                     	ds	224
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           postinc0	equ	0xFEE
  1411                           wreg	equ	0xFE8
  1412                           postdec2	equ	0xFDD
  1413                           fsr2h	equ	0xFDA
  1414                           fsr2l	equ	0xFD9
  1415                           
  1416                           	psect	bssBIGRAM
  1417  0004E0                     __pbssBIGRAM:
  1418                           	opt stack 0
  1419  0004E0                     _macBuffer:
  1420                           	opt stack 0
  1421  0004E0                     	ds	271
  1422  0005EF                     _radioBuffer:
  1423                           	opt stack 0
  1424  0005EF                     	ds	271
  1425                           tblptru	equ	0xFF8
  1426                           tblptrh	equ	0xFF7
  1427                           tblptrl	equ	0xFF6
  1428                           tablat	equ	0xFF5
  1429                           postinc0	equ	0xFEE
  1430                           wreg	equ	0xFE8
  1431                           postdec2	equ	0xFDD
  1432                           fsr2h	equ	0xFDA
  1433                           fsr2l	equ	0xFD9
  1434                           
  1435                           	psect	cstackBANK1
  1436  000173                     __pcstackBANK1:
  1437                           	opt stack 0
  1438  000173                     AESCmac@k2:
  1439                           	opt stack 0
  1440                           
  1441                           ; 16 bytes @ 0x0
  1442  000173                     	ds	16
  1443  000183                     AESCmac@k1:
  1444                           	opt stack 0
  1445                           
  1446                           ; 16 bytes @ 0x10
  1447  000183                     	ds	16
  1448  000193                     AESCmac@mLast:
  1449                           	opt stack 0
  1450                           
  1451                           ; 16 bytes @ 0x20
  1452  000193                     	ds	16
  1453  0001A3                     AESCmac@padded:
  1454                           	opt stack 0
  1455                           
  1456                           ; 16 bytes @ 0x30
  1457  0001A3                     	ds	16
  1458  0001B3                     AESCmac@y:
  1459                           	opt stack 0
  1460                           
  1461                           ; 16 bytes @ 0x40
  1462  0001B3                     	ds	16
  1463  0001C3                     AESCmac@x:
  1464                           	opt stack 0
  1465                           
  1466                           ; 16 bytes @ 0x50
  1467  0001C3                     	ds	16
  1468  0001D3                     AESCmac@ptr:
  1469                           	opt stack 0
  1470                           
  1471                           ; 2 bytes @ 0x60
  1472  0001D3                     	ds	2
  1473  0001D5                     AESCmac@flag:
  1474                           	opt stack 0
  1475                           
  1476                           ; 1 bytes @ 0x62
  1477  0001D5                     	ds	1
  1478  0001D6                     AESCmac@n:
  1479                           	opt stack 0
  1480                           
  1481                           ; 1 bytes @ 0x63
  1482  0001D6                     	ds	1
  1483  0001D7                     AESCmac@j:
  1484                           	opt stack 0
  1485                           
  1486                           ; 1 bytes @ 0x64
  1487  0001D7                     	ds	1
  1488  0001D8                     AESCmac@i:
  1489                           	opt stack 0
  1490                           
  1491                           ; 1 bytes @ 0x65
  1492  0001D8                     	ds	1
  1493  0001D9                     LORAWAN_RxDone@buffer:
  1494                           	opt stack 0
  1495                           
  1496                           ; 2 bytes @ 0x66
  1497  0001D9                     	ds	2
  1498  0001DB                     LORAWAN_RxDone@bufferLength:
  1499                           	opt stack 0
  1500                           
  1501                           ; 1 bytes @ 0x68
  1502  0001DB                     	ds	1
  1503                           tblptru	equ	0xFF8
  1504                           tblptrh	equ	0xFF7
  1505                           tblptrl	equ	0xFF6
  1506                           tablat	equ	0xFF5
  1507                           postinc0	equ	0xFEE
  1508                           wreg	equ	0xFE8
  1509                           postdec2	equ	0xFDD
  1510                           fsr2h	equ	0xFDA
  1511                           fsr2l	equ	0xFD9
  1512                           
  1513                           	psect	cstackBANK0
  1514  000060                     __pcstackBANK0:
  1515                           	opt stack 0
  1516  000060                     ??_UpdateMinMaxChDataRate:
  1517  000060                     ??_FindSmallestDataRate:
  1518  000060                     ??_CountfOptsLength:
  1519  000060                     ?_TMR1_ReadTimer:
  1520                           	opt stack 0
  1521  000060                     ?_ExecuteDutyCycle:
  1522                           	opt stack 0
  1523  000060                     ?_ExecuteDevStatus:
  1524                           	opt stack 0
  1525  000060                     ?_ExecuteLinkCheck:
  1526                           	opt stack 0
  1527  000060                     ?_ADC_GetConversion:
  1528                           	opt stack 0
  1529  000060                     ?___wmul:
  1530                           	opt stack 0
  1531  000060                     ?___awdiv:
  1532                           	opt stack 0
  1533  000060                     ?___ftpack:
  1534                           	opt stack 0
  1535  000060                     ?_GetRx1Freq:
  1536                           	opt stack 0
  1537  000060                     ?___lldiv:
  1538                           	opt stack 0
  1539  000060                     ?___llmod:
  1540                           	opt stack 0
  1541  000060                     INTERRUPT_GetDioStatus@a:
  1542                           	opt stack 0
  1543  000060                     HALResetPinOutputValue@value:
  1544                           	opt stack 0
  1545  000060                     SwTimerCreate@retVal:
  1546                           	opt stack 0
  1547  000060                     SwTimerIsRunning@timerId:
  1548                           	opt stack 0
  1549  000060                     SwTimerStop@timerId:
  1550                           	opt stack 0
  1551  000060                     RADIO_SetLoRaSyncWord@syncWord:
  1552                           	opt stack 0
  1553  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  1554                           	opt stack 0
  1555  000060                     RADIO_SetOutputPower@power:
  1556                           	opt stack 0
  1557  000060                     RADIO_SetCRC@crc:
  1558                           	opt stack 0
  1559  000060                     RADIO_SetIQInverted@iqInverted:
  1560                           	opt stack 0
  1561  000060                     RADIO_SetBandwidth@bandwidth:
  1562                           	opt stack 0
  1563  000060                     RADIO_SetModulation@modulation:
  1564                           	opt stack 0
  1565  000060                     ValidateDataRate@dataRate:
  1566                           	opt stack 0
  1567  000060                     ValidateTxPower@result:
  1568                           	opt stack 0
  1569  000060                     UpdateDLSettings@dlRx1DrOffset:
  1570                           	opt stack 0
  1571  000060                     UpdateDataRange@dataRangeNew:
  1572                           	opt stack 0
  1573  000060                     UpdateChannelIdStatus@statusNew:
  1574                           	opt stack 0
  1575  000060                     ValidateRxOffset@rxOffset:
  1576                           	opt stack 0
  1577  000060                     ValidateChannelId@allowedForDefaultChannels:
  1578                           	opt stack 0
  1579  000060                     ValidateChannelMaskCntl@result:
  1580                           	opt stack 0
  1581  000060                     UpdateCurrentDataRate@valueNew:
  1582                           	opt stack 0
  1583  000060                     UpdateTxPower@txPowerNew:
  1584                           	opt stack 0
  1585  000060                     UpdateJoinInProgress@state:
  1586                           	opt stack 0
  1587  000060                     SPI2_Exchange8bit@data:
  1588                           	opt stack 0
  1589  000060                     EUSART1_Write@txData:
  1590                           	opt stack 0
  1591  000060                     ___abdiv@divisor:
  1592                           	opt stack 0
  1593  000060                     FillSubKey@source:
  1594                           	opt stack 0
  1595  000060                     SwTimerSetCallback@callback:
  1596                           	opt stack 0
  1597  000060                     EncKeySchedule@key:
  1598                           	opt stack 0
  1599  000060                     EncodeShiftRow@stateTable:
  1600                           	opt stack 0
  1601  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1602                           	opt stack 0
  1603  000060                     ExecuteDutyCycle@ptr:
  1604                           	opt stack 0
  1605  000060                     ExecuteDevStatus@ptr:
  1606                           	opt stack 0
  1607  000060                     UpdateDutyCycle@dutyCycleNew:
  1608                           	opt stack 0
  1609  000060                     ValidateChannelMask@channelMask:
  1610                           	opt stack 0
  1611  000060                     ExecuteLinkCheck@ptr:
  1612                           	opt stack 0
  1613  000060                     IncludeMacCommandsResponse@macBuffer:
  1614                           	opt stack 0
  1615  000060                     CheckFlags@hdr:
  1616                           	opt stack 0
  1617  000060                     CheckMcastFlags@hdr:
  1618                           	opt stack 0
  1619  000060                     INT1_SetInterruptHandler@InterruptHandler:
  1620                           	opt stack 0
  1621  000060                     INT2_SetInterruptHandler@InterruptHandler:
  1622                           	opt stack 0
  1623  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  1624                           	opt stack 0
  1625  000060                     TMR1_WriteTimer@timerVal:
  1626                           	opt stack 0
  1627  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  1628                           	opt stack 0
  1629  000060                     RxData@pData:
  1630                           	opt stack 0
  1631  000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1632                           	opt stack 0
  1633  000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1634                           	opt stack 0
  1635  000060                     EUSART1_SetErrorHandler@interruptHandler:
  1636                           	opt stack 0
  1637  000060                     ___wmul@multiplier:
  1638                           	opt stack 0
  1639  000060                     ___awdiv@dividend:
  1640                           	opt stack 0
  1641  000060                     memcpy@d1:
  1642                           	opt stack 0
  1643  000060                     memset@p1:
  1644                           	opt stack 0
  1645  000060                     ___ftpack@arg:
  1646                           	opt stack 0
  1647  000060                     SystemBlockingWaitMs@ms:
  1648                           	opt stack 0
  1649  000060                     RADIO_SetChannelFrequency@frequency:
  1650                           	opt stack 0
  1651  000060                     ValidateFrequency@frequencyNew:
  1652                           	opt stack 0
  1653  000060                     UpdateFrequency@frequencyNew:
  1654                           	opt stack 0
  1655  000060                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1656                           	opt stack 0
  1657  000060                     UpdateReceiveWindow2Parameters@frequency:
  1658                           	opt stack 0
  1659  000060                     ___lldiv@dividend:
  1660                           	opt stack 0
  1661  000060                     ___llmod@dividend:
  1662                           	opt stack 0
  1663                           
  1664                           ; 4 bytes @ 0x0
  1665  000060                     	ds	1
  1666  000061                     ??_UpdateDataRange:
  1667  000061                     ??_UpdateChannelIdStatus:
  1668  000061                     ??___abdiv:
  1669  000061                     HALSPISend@data:
  1670                           	opt stack 0
  1671  000061                     SwTimerIsRunning@isRunning:
  1672                           	opt stack 0
  1673  000061                     ValidateDataRate@result:
  1674                           	opt stack 0
  1675  000061                     ValidateTxPower@txPowerNew:
  1676                           	opt stack 0
  1677  000061                     UpdateDLSettings@dlRx2Dr:
  1678                           	opt stack 0
  1679  000061                     ValidateRxOffset@result:
  1680                           	opt stack 0
  1681  000061                     ValidateChannelId@result:
  1682                           	opt stack 0
  1683  000061                     ValidateChannelMaskCntl@channelMaskCntl:
  1684                           	opt stack 0
  1685  000061                     UpdateMinMaxChDataRate@i:
  1686                           	opt stack 0
  1687  000061                     FindSmallestDataRate@found:
  1688                           	opt stack 0
  1689  000061                     putch@txData:
  1690                           	opt stack 0
  1691                           
  1692                           ; 1 bytes @ 0x1
  1693  000061                     	ds	1
  1694  000062                     ??_TMR1_ReadTimer:
  1695  000062                     ??_EncKeySchedule:
  1696  000062                     ??_ValidateChannelMask:
  1697  000062                     ??_ExecuteDutyCycle:
  1698  000062                     ??_ADC_GetConversion:
  1699  000062                     ?_printf:
  1700                           	opt stack 0
  1701  000062                     SwTimerSetCallback@callbackParameter:
  1702                           	opt stack 0
  1703  000062                     EncodeShiftRow@temp:
  1704                           	opt stack 0
  1705  000062                     RADIO_RegisterWrite@value:
  1706                           	opt stack 0
  1707  000062                     RADIO_RegisterRead@reg:
  1708                           	opt stack 0
  1709  000062                     UpdateDataRange@channelId:
  1710                           	opt stack 0
  1711  000062                     UpdateChannelIdStatus@channelId:
  1712                           	opt stack 0
  1713  000062                     ValidateDataRange@result:
  1714                           	opt stack 0
  1715  000062                     ValidateChannelId@channelId:
  1716                           	opt stack 0
  1717  000062                     UpdateDutyCycle@channelId:
  1718                           	opt stack 0
  1719  000062                     FindSmallestDataRate@i:
  1720                           	opt stack 0
  1721  000062                     RxData@dataLength:
  1722                           	opt stack 0
  1723  000062                     FillSubKey@key:
  1724                           	opt stack 0
  1725  000062                     IncludeMacCommandsResponse@pBufferIndex:
  1726                           	opt stack 0
  1727  000062                     printf@f:
  1728                           	opt stack 0
  1729  000062                     ___wmul@multiplicand:
  1730                           	opt stack 0
  1731  000062                     ___awdiv@divisor:
  1732                           	opt stack 0
  1733  000062                     memcpy@s1:
  1734                           	opt stack 0
  1735  000062                     memset@c:
  1736                           	opt stack 0
  1737                           
  1738                           ; 2 bytes @ 0x2
  1739  000062                     	ds	1
  1740  000063                     SwTimerSetCallback@timerId:
  1741                           	opt stack 0
  1742  000063                     RADIO_RegisterWrite@reg:
  1743                           	opt stack 0
  1744  000063                     RADIO_RegisterRead@readValue:
  1745                           	opt stack 0
  1746  000063                     UpdateDataRange@i:
  1747                           	opt stack 0
  1748  000063                     UpdateChannelIdStatus@i:
  1749                           	opt stack 0
  1750  000063                     ValidateDataRange@dataRangeNew:
  1751                           	opt stack 0
  1752  000063                     FindSmallestDataRate@dataRate:
  1753                           	opt stack 0
  1754  000063                     RxData@status:
  1755                           	opt stack 0
  1756  000063                     ___abdiv@counter:
  1757                           	opt stack 0
  1758  000063                     ___ftpack@exp:
  1759                           	opt stack 0
  1760                           
  1761                           ; 1 bytes @ 0x3
  1762  000063                     	ds	1
  1763  000064                     ??_SystemBlockingWaitMs:
  1764  000064                     FillSubKey@size:
  1765                           	opt stack 0
  1766  000064                     RADIO_WritePower@ocp:
  1767                           	opt stack 0
  1768  000064                     RADIO_UnhandledInterrupt@modulation:
  1769                           	opt stack 0
  1770  000064                     LORAWAN_SetChannelIdStatus@statusNew:
  1771                           	opt stack 0
  1772  000064                     ValidateFrequency@result:
  1773                           	opt stack 0
  1774  000064                     ValidateDataRange@dataRateMax:
  1775                           	opt stack 0
  1776  000064                     UpdateFrequency@channelId:
  1777                           	opt stack 0
  1778  000064                     ValidateChannelMask@i:
  1779                           	opt stack 0
  1780  000064                     UpdateReceiveWindow2Parameters@dataRate:
  1781                           	opt stack 0
  1782  000064                     IncludeMacCommandsResponse@bIncludeInFopts:
  1783                           	opt stack 0
  1784  000064                     ADC_GetConversion@channel:
  1785                           	opt stack 0
  1786  000064                     ___abdiv@sign:
  1787                           	opt stack 0
  1788  000064                     ___awdiv@counter:
  1789                           	opt stack 0
  1790  000064                     ___ftpack@sign:
  1791                           	opt stack 0
  1792  000064                     _EncKeySchedule$514:
  1793                           	opt stack 0
  1794  000064                     EnableChannels1@channelMask:
  1795                           	opt stack 0
  1796  000064                     TMR1_ReadTimer@readVal:
  1797                           	opt stack 0
  1798  000064                     printf@ap:
  1799                           	opt stack 0
  1800  000064                     ___wmul@product:
  1801                           	opt stack 0
  1802  000064                     memcpy@n:
  1803                           	opt stack 0
  1804  000064                     memset@n:
  1805                           	opt stack 0
  1806  000064                     ___lldiv@divisor:
  1807                           	opt stack 0
  1808  000064                     ___llmod@divisor:
  1809                           	opt stack 0
  1810                           
  1811                           ; 4 bytes @ 0x4
  1812  000064                     	ds	1
  1813  000065                     ??_FillSubKey:
  1814  000065                     ??_IncludeMacCommandsResponse:
  1815  000065                     ??___ftpack:
  1816  000065                     ??_RADIO_DIO3:
  1817  000065                     ??_RADIO_DIO4:
  1818  000065                     ??_RADIO_DIO5:
  1819  000065                     RADIO_WriteMode@newModulation:
  1820                           	opt stack 0
  1821  000065                     RADIO_WritePower@paDac:
  1822                           	opt stack 0
  1823  000065                     LORAWAN_SetChannelIdStatus@result:
  1824                           	opt stack 0
  1825  000065                     ExecuteDutyCycle@maxDCycle:
  1826                           	opt stack 0
  1827  000065                     ValidateDataRange@dataRateMin:
  1828                           	opt stack 0
  1829  000065                     ___abdiv@quotient:
  1830                           	opt stack 0
  1831  000065                     ___awdiv@sign:
  1832                           	opt stack 0
  1833                           
  1834                           ; 1 bytes @ 0x5
  1835  000065                     	ds	1
  1836  000066                     FillSubKey@carry:
  1837                           	opt stack 0
  1838  000066                     RADIO_WriteMode@blocking:
  1839                           	opt stack 0
  1840  000066                     RADIO_WritePower@power:
  1841                           	opt stack 0
  1842  000066                     RADIO_DIO3@dioMapping:
  1843                           	opt stack 0
  1844  000066                     RADIO_DIO5@dioMapping:
  1845                           	opt stack 0
  1846  000066                     LORAWAN_SetChannelIdStatus@channelId:
  1847                           	opt stack 0
  1848  000066                     EnableChannels1@channelMaskCntl:
  1849                           	opt stack 0
  1850  000066                     UpdateReceiveDelays@delay:
  1851                           	opt stack 0
  1852  000066                     CountfOptsLength@macCommandLength:
  1853                           	opt stack 0
  1854  000066                     TMR1_ReadTimer@readValHigh:
  1855                           	opt stack 0
  1856  000066                     printf@c:
  1857                           	opt stack 0
  1858  000066                     ___abdiv@dividend:
  1859                           	opt stack 0
  1860  000066                     memcpy@tmp:
  1861                           	opt stack 0
  1862  000066                     AESEncode@block:
  1863                           	opt stack 0
  1864  000066                     ___awdiv@quotient:
  1865                           	opt stack 0
  1866  000066                     memset@p:
  1867                           	opt stack 0
  1868                           
  1869                           ; 2 bytes @ 0x6
  1870  000066                     	ds	1
  1871  000067                     ?_ExecuteRxTimingSetup:
  1872                           	opt stack 0
  1873  000067                     FillSubKey@i:
  1874                           	opt stack 0
  1875  000067                     RADIO_WriteMode@currentModulation:
  1876                           	opt stack 0
  1877  000067                     RADIO_DIO4@dioMapping:
  1878                           	opt stack 0
  1879  000067                     EnableChannels1@channelIndexMin:
  1880                           	opt stack 0
  1881  000067                     CountfOptsLength@i:
  1882                           	opt stack 0
  1883  000067                     TMR1_ReadTimer@readValLow:
  1884                           	opt stack 0
  1885  000067                     ExecuteRxTimingSetup@ptr:
  1886                           	opt stack 0
  1887  000067                     memcpy@d:
  1888                           	opt stack 0
  1889                           
  1890                           ; 2 bytes @ 0x7
  1891  000067                     	ds	1
  1892  000068                     ??_LORAWAN_GetMaxPayloadSize:
  1893  000068                     ?_TMR_SwapTimer:
  1894                           	opt stack 0
  1895  000068                     ?___lltoft:
  1896                           	opt stack 0
  1897  000068                     ?_TMR_GetDeltaTime:
  1898                           	opt stack 0
  1899  000068                     RADIO_WriteMode@dioMapping:
  1900                           	opt stack 0
  1901  000068                     EnableChannels1@channelIndexMax:
  1902                           	opt stack 0
  1903  000068                     ___llmod@counter:
  1904                           	opt stack 0
  1905  000068                     TMR_SwapTimer@timerVal:
  1906                           	opt stack 0
  1907  000068                     AESEncode@key:
  1908                           	opt stack 0
  1909  000068                     ___lldiv@quotient:
  1910                           	opt stack 0
  1911  000068                     ___lltoft@c:
  1912                           	opt stack 0
  1913                           
  1914                           ; 4 bytes @ 0x8
  1915  000068                     	ds	1
  1916  000069                     ??_EnableChannels1:
  1917  000069                     RADIO_WriteMode@currentMode:
  1918                           	opt stack 0
  1919  000069                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1920                           	opt stack 0
  1921  000069                     ExecuteRxTimingSetup@delay:
  1922                           	opt stack 0
  1923  000069                     memcpy@s:
  1924                           	opt stack 0
  1925                           
  1926                           ; 2 bytes @ 0x9
  1927  000069                     	ds	1
  1928  00006A                     ??_AESEncode:
  1929  00006A                     RADIO_WriteMode@newMode:
  1930                           	opt stack 0
  1931  00006A                     LORAWAN_GetMaxPayloadSize@result:
  1932                           	opt stack 0
  1933  00006A                     TMR_OverrideRemaining@ticksRemaining:
  1934                           	opt stack 0
  1935                           
  1936                           ; 4 bytes @ 0xA
  1937  00006A                     	ds	1
  1938  00006B                     ?_ExtractMic:
  1939                           	opt stack 0
  1940  00006B                     RADIO_WriteMode@opMode:
  1941                           	opt stack 0
  1942  00006B                     InitDefault868Channels@i:
  1943                           	opt stack 0
  1944  00006B                     InitDefault433Channels@i:
  1945                           	opt stack 0
  1946  00006B                     EnableChannels1@i:
  1947                           	opt stack 0
  1948  00006B                     RADIO_SetFSKSyncWord@syncWord:
  1949                           	opt stack 0
  1950  00006B                     LORAWAN_SetDeviceEui@deviceEuiNew:
  1951                           	opt stack 0
  1952  00006B                     LORAWAN_SetApplicationEui@applicationEuiNew:
  1953                           	opt stack 0
  1954  00006B                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1955                           	opt stack 0
  1956  00006B                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1957                           	opt stack 0
  1958  00006B                     LORAWAN_SetApplicationKey@applicationKeyNew:
  1959                           	opt stack 0
  1960  00006B                     PrepareSessionKeys@sessionKey:
  1961                           	opt stack 0
  1962  00006B                     ExtractMic@buffer:
  1963                           	opt stack 0
  1964  00006B                     AssembleEncryptionBlock@frameCounter:
  1965                           	opt stack 0
  1966                           
  1967                           ; 4 bytes @ 0xB
  1968  00006B                     	ds	1
  1969  00006C                     ??_TMR_GetDeltaTime:
  1970  00006C                     ??___lltoft:
  1971  00006C                     ?_RADIO_ReadRandom:
  1972                           	opt stack 0
  1973  00006C                     ___lldiv@counter:
  1974                           	opt stack 0
  1975  00006C                     EnableChannels@channelMask:
  1976                           	opt stack 0
  1977                           
  1978                           ; 2 bytes @ 0xC
  1979  00006C                     	ds	1
  1980  00006D                     RADIO_SetFSKSyncWord@syncWordLen:
  1981                           	opt stack 0
  1982  00006D                     IncludeMacCommandsResponse@i:
  1983                           	opt stack 0
  1984  00006D                     ExtractMic@bufferLength:
  1985                           	opt stack 0
  1986  00006D                     PrepareSessionKeys@appNonce:
  1987                           	opt stack 0
  1988  00006D                     SwTimerSetTimeout@timeout:
  1989                           	opt stack 0
  1990  00006D                     RADIO_WriteFrequency@frequency:
  1991                           	opt stack 0
  1992  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1993                           	opt stack 0
  1994  00006D                     RADIO_WriteFSKBitRate@bitRate:
  1995                           	opt stack 0
  1996                           
  1997                           ; 4 bytes @ 0xD
  1998  00006D                     	ds	1
  1999  00006E                     ??_TMR_OverrideRemaining:
  2000  00006E                     ??_RADIO_ReadRandom:
  2001  00006E                     EnableChannels@channelMaskCntl:
  2002                           	opt stack 0
  2003  00006E                     IncludeMacCommandsResponse@bufferIndex:
  2004                           	opt stack 0
  2005  00006E                     ConfigureRadio@freq:
  2006                           	opt stack 0
  2007                           
  2008                           ; 4 bytes @ 0xE
  2009  00006E                     	ds	1
  2010  00006F                     ??_ExtractMic:
  2011  00006F                     ?_ExecuteLinkAdr:
  2012                           	opt stack 0
  2013  00006F                     AssembleEncryptionBlock@blockId:
  2014                           	opt stack 0
  2015  00006F                     RADIO_ReadRandom@retVal:
  2016                           	opt stack 0
  2017  00006F                     ExecuteLinkAdr@ptr:
  2018                           	opt stack 0
  2019  00006F                     PrepareSessionKeys@networkId:
  2020                           	opt stack 0
  2021                           
  2022                           ; 2 bytes @ 0xF
  2023  00006F                     	ds	1
  2024  000070                     AssembleEncryptionBlock@firstByte:
  2025                           	opt stack 0
  2026  000070                     ___lltoft@exp:
  2027                           	opt stack 0
  2028  000070                     TMR_OverrideRemaining@tmrVal:
  2029                           	opt stack 0
  2030                           
  2031                           ; 2 bytes @ 0x10
  2032  000070                     	ds	1
  2033  000071                     ??_ExecuteLinkAdr:
  2034  000071                     ??_SwTimerSetTimeout:
  2035  000071                     ?___ftmul:
  2036                           	opt stack 0
  2037  000071                     RADIO_ReadRandom@i:
  2038                           	opt stack 0
  2039  000071                     PrepareSessionKeys@index:
  2040                           	opt stack 0
  2041  000071                     AssembleEncryptionBlock@multicastStatus:
  2042                           	opt stack 0
  2043  000071                     ___ftmul@f1:
  2044                           	opt stack 0
  2045  000071                     RADIO_WriteFrequency@num_mod:
  2046                           	opt stack 0
  2047  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  2048                           	opt stack 0
  2049  000071                     RADIO_WriteFSKBitRate@num:
  2050                           	opt stack 0
  2051                           
  2052                           ; 4 bytes @ 0x11
  2053  000071                     	ds	1
  2054  000072                     ConfigureRadio@dataRate:
  2055                           	opt stack 0
  2056  000072                     AssembleEncryptionBlock@dir:
  2057                           	opt stack 0
  2058  000072                     TMR_OverrideRemaining@oldReloadVal:
  2059                           	opt stack 0
  2060  000072                     _AESEncode$509:
  2061                           	opt stack 0
  2062  000072                     srand@x:
  2063                           	opt stack 0
  2064                           
  2065                           ; 2 bytes @ 0x12
  2066  000072                     	ds	1
  2067  000073                     AssembleEncryptionBlock@bufferIndex:
  2068                           	opt stack 0
  2069  000073                     ExecuteLinkAdr@channelMask:
  2070                           	opt stack 0
  2071  000073                     ConfigureRadioTx@freq:
  2072                           	opt stack 0
  2073  000073                     ConfigureRadioRx@freq:
  2074                           	opt stack 0
  2075  000073                     ExtractMic@mic:
  2076                           	opt stack 0
  2077                           
  2078                           ; 4 bytes @ 0x13
  2079  000073                     	ds	1
  2080  000074                     _AESEncode$510:
  2081                           	opt stack 0
  2082  000074                     ___ftmul@f2:
  2083                           	opt stack 0
  2084                           
  2085                           ; 3 bytes @ 0x14
  2086  000074                     	ds	1
  2087  000075                     SwTimerSetTimeout@timerId:
  2088                           	opt stack 0
  2089  000075                     ExecuteLinkAdr@txPower:
  2090                           	opt stack 0
  2091  000075                     RADIO_WriteFrequency@num:
  2092                           	opt stack 0
  2093                           
  2094                           ; 4 bytes @ 0x15
  2095  000075                     	ds	1
  2096  000076                     _AESEncode$511:
  2097                           	opt stack 0
  2098  000076                     ExecuteLinkAdr@redundancy:
  2099                           	opt stack 0
  2100                           
  2101                           ; 2 bytes @ 0x16
  2102  000076                     	ds	1
  2103  000077                     ??___ftmul:
  2104  000077                     ConfigureRadioTx@dataRate:
  2105                           	opt stack 0
  2106  000077                     ConfigureRadioRx@dataRate:
  2107                           	opt stack 0
  2108                           
  2109                           ; 1 bytes @ 0x17
  2110  000077                     	ds	1
  2111  000078                     AESEncode@aux:
  2112                           	opt stack 0
  2113  000078                     ExecuteLinkAdr@dataRate:
  2114                           	opt stack 0
  2115  000078                     ConfigureRadioTx@txPower:
  2116                           	opt stack 0
  2117                           
  2118                           ; 1 bytes @ 0x18
  2119  000078                     	ds	1
  2120  000079                     AESEncode@aux2:
  2121                           	opt stack 0
  2122  000079                     RADIO_FHSSChangeChannel@irqFlags:
  2123                           	opt stack 0
  2124  000079                     RADIO_Init@radioBuffer:
  2125                           	opt stack 0
  2126                           
  2127                           ; 2 bytes @ 0x19
  2128  000079                     	ds	1
  2129  00007A                     ??_RADIO_DIO2:
  2130  00007A                     AESEncode@aux1:
  2131                           	opt stack 0
  2132  00007A                     ___ftmul@exp:
  2133                           	opt stack 0
  2134                           
  2135                           ; 1 bytes @ 0x1A
  2136  00007A                     	ds	1
  2137  00007B                     AESEncode@aux3:
  2138                           	opt stack 0
  2139  00007B                     RADIO_DIO2@opMode:
  2140                           	opt stack 0
  2141  00007B                     ___ftmul@f3_as_product:
  2142                           	opt stack 0
  2143  00007B                     RADIO_Init@frequency:
  2144                           	opt stack 0
  2145                           
  2146                           ; 4 bytes @ 0x1B
  2147  00007B                     	ds	1
  2148  00007C                     AESEncode@i:
  2149                           	opt stack 0
  2150  00007C                     RADIO_DIO2@dioMapping:
  2151                           	opt stack 0
  2152                           
  2153                           ; 1 bytes @ 0x1C
  2154  00007C                     	ds	1
  2155  00007D                     AESEncodeLoRa@block:
  2156                           	opt stack 0
  2157                           
  2158                           ; 2 bytes @ 0x1D
  2159  00007D                     	ds	1
  2160  00007E                     ___ftmul@cntr:
  2161                           	opt stack 0
  2162                           
  2163                           ; 1 bytes @ 0x1E
  2164  00007E                     	ds	1
  2165  00007F                     ??_RADIO_Init:
  2166  00007F                     ___ftmul@sign:
  2167                           	opt stack 0
  2168  00007F                     AESEncodeLoRa@key:
  2169                           	opt stack 0
  2170                           
  2171                           ; 2 bytes @ 0x1F
  2172  00007F                     	ds	1
  2173  000080                     ?_SwTimersInterrupt:
  2174                           	opt stack 0
  2175  000080                     ?___fttol:
  2176                           	opt stack 0
  2177  000080                     ___fttol@f1:
  2178                           	opt stack 0
  2179                           
  2180                           ; 3 bytes @ 0x20
  2181  000080                     	ds	1
  2182  000081                     AESEncodeLoRa@useKey:
  2183                           	opt stack 0
  2184                           
  2185                           ; 16 bytes @ 0x21
  2186  000081                     	ds	3
  2187  000084                     ??___fttol:
  2188                           
  2189                           ; 1 bytes @ 0x24
  2190  000084                     	ds	4
  2191  000088                     SwTimersInterrupt@timeElapsed:
  2192                           	opt stack 0
  2193                           
  2194                           ; 4 bytes @ 0x28
  2195  000088                     	ds	1
  2196  000089                     ___fttol@sign1:
  2197                           	opt stack 0
  2198                           
  2199                           ; 1 bytes @ 0x29
  2200  000089                     	ds	1
  2201  00008A                     ___fttol@lval:
  2202                           	opt stack 0
  2203                           
  2204                           ; 4 bytes @ 0x2A
  2205  00008A                     	ds	2
  2206  00008C                     SwTimersInterrupt@ticksToNextTimerEvent:
  2207                           	opt stack 0
  2208                           
  2209                           ; 4 bytes @ 0x2C
  2210  00008C                     	ds	2
  2211  00008E                     ___fttol@exp1:
  2212                           	opt stack 0
  2213                           
  2214                           ; 1 bytes @ 0x2E
  2215  00008E                     	ds	2
  2216  000090                     SwTimersInterrupt@i:
  2217                           	opt stack 0
  2218                           
  2219                           ; 1 bytes @ 0x30
  2220  000090                     	ds	1
  2221  000091                     ?_SwTimerReadValue:
  2222                           	opt stack 0
  2223  000091                     GenerateSubkey@key:
  2224                           	opt stack 0
  2225  000091                     ComputeSessionKeys@joinAcceptBuffer:
  2226                           	opt stack 0
  2227  000091                     EncryptFRMPayload@buffer:
  2228                           	opt stack 0
  2229                           
  2230                           ; 2 bytes @ 0x31
  2231  000091                     	ds	2
  2232  000093                     EncryptFRMPayload@bufferLength:
  2233                           	opt stack 0
  2234  000093                     GenerateSubkey@k1:
  2235                           	opt stack 0
  2236                           
  2237                           ; 2 bytes @ 0x33
  2238  000093                     	ds	1
  2239  000094                     EncryptFRMPayload@dir:
  2240                           	opt stack 0
  2241                           
  2242                           ; 1 bytes @ 0x34
  2243  000094                     	ds	1
  2244  000095                     GenerateSubkey@k2:
  2245                           	opt stack 0
  2246  000095                     SwTimerReadValue@ticksCount:
  2247                           	opt stack 0
  2248  000095                     SwTimerStart@ticksRemaining:
  2249                           	opt stack 0
  2250  000095                     EncryptFRMPayload@frameCounter:
  2251                           	opt stack 0
  2252                           
  2253                           ; 4 bytes @ 0x35
  2254  000095                     	ds	2
  2255  000097                     ??_GenerateSubkey:
  2256                           
  2257                           ; 1 bytes @ 0x37
  2258  000097                     	ds	1
  2259  000098                     GenerateSubkey@const_Rb:
  2260                           	opt stack 0
  2261                           
  2262                           ; 16 bytes @ 0x38
  2263  000098                     	ds	1
  2264  000099                     SwTimerReadValue@timerId:
  2265                           	opt stack 0
  2266  000099                     SwTimerStart@timerId:
  2267                           	opt stack 0
  2268  000099                     EncryptFRMPayload@key:
  2269                           	opt stack 0
  2270                           
  2271                           ; 2 bytes @ 0x39
  2272  000099                     	ds	1
  2273  00009A                     ??_UpdateRetransmissionAckTimeoutState:
  2274  00009A                     ??_StartReTxTimer:
  2275  00009A                     ?___lmul:
  2276                           	opt stack 0
  2277  00009A                     ___lmul@multiplier:
  2278                           	opt stack 0
  2279                           
  2280                           ; 4 bytes @ 0x3A
  2281  00009A                     	ds	1
  2282  00009B                     EncryptFRMPayload@macBufferIndex:
  2283                           	opt stack 0
  2284                           
  2285                           ; 1 bytes @ 0x3B
  2286  00009B                     	ds	1
  2287  00009C                     EncryptFRMPayload@bufferToBeEncrypted:
  2288                           	opt stack 0
  2289                           
  2290                           ; 2 bytes @ 0x3C
  2291  00009C                     	ds	2
  2292  00009E                     EncryptFRMPayload@multicastStatus:
  2293                           	opt stack 0
  2294  00009E                     StartReTxTimer@minim:
  2295                           	opt stack 0
  2296  00009E                     ___lmul@multiplicand:
  2297                           	opt stack 0
  2298                           
  2299                           ; 4 bytes @ 0x3E
  2300  00009E                     	ds	1
  2301  00009F                     ??_EncryptFRMPayload:
  2302                           
  2303                           ; 1 bytes @ 0x3F
  2304  00009F                     	ds	3
  2305  0000A2                     StartReTxTimer@i:
  2306                           	opt stack 0
  2307  0000A2                     ___lmul@product:
  2308                           	opt stack 0
  2309                           
  2310                           ; 4 bytes @ 0x42
  2311  0000A2                     	ds	2
  2312  0000A4                     EncryptFRMPayload@k:
  2313                           	opt stack 0
  2314                           
  2315                           ; 1 bytes @ 0x44
  2316  0000A4                     	ds	1
  2317  0000A5                     EncryptFRMPayload@i:
  2318                           	opt stack 0
  2319                           
  2320                           ; 1 bytes @ 0x45
  2321  0000A5                     	ds	1
  2322  0000A6                     ?_ExecuteNewChannel:
  2323                           	opt stack 0
  2324  0000A6                     ?_ExecuteRxParamSetupReq:
  2325                           	opt stack 0
  2326  0000A6                     ?_rand:
  2327                           	opt stack 0
  2328  0000A6                     EncryptFRMPayload@j:
  2329                           	opt stack 0
  2330  0000A6                     RADIO_WriteConfiguration@symbolTimeout:
  2331                           	opt stack 0
  2332  0000A6                     ExecuteNewChannel@ptr:
  2333                           	opt stack 0
  2334  0000A6                     ExecuteRxParamSetupReq@ptr:
  2335                           	opt stack 0
  2336  0000A6                     UpdateCfList@joinAccept:
  2337                           	opt stack 0
  2338  0000A6                     LORAWAN_LinkCheckConfigure@period:
  2339                           	opt stack 0
  2340                           
  2341                           ; 2 bytes @ 0x46
  2342  0000A6                     	ds	2
  2343  0000A8                     ??_LORAWAN_LinkCheckConfigure:
  2344  0000A8                     ??_ExecuteNewChannel:
  2345  0000A8                     ??_ExecuteRxParamSetupReq:
  2346  0000A8                     ??_RADIO_WriteConfiguration:
  2347  0000A8                     ?___lwmod:
  2348                           	opt stack 0
  2349  0000A8                     UpdateCfList@bufferLength:
  2350                           	opt stack 0
  2351  0000A8                     ___lwmod@dividend:
  2352                           	opt stack 0
  2353  0000A8                     GenerateSubkey@l:
  2354                           	opt stack 0
  2355                           
  2356                           ; 16 bytes @ 0x48
  2357  0000A8                     	ds	1
  2358  0000A9                     UpdateCfList@frequency:
  2359                           	opt stack 0
  2360                           
  2361                           ; 4 bytes @ 0x49
  2362  0000A9                     	ds	1
  2363  0000AA                     ExecuteNewChannel@drRange:
  2364                           	opt stack 0
  2365  0000AA                     ___lwmod@divisor:
  2366                           	opt stack 0
  2367  0000AA                     ExecuteRxParamSetupReq@frequency:
  2368                           	opt stack 0
  2369                           
  2370                           ; 4 bytes @ 0x4A
  2371  0000AA                     	ds	1
  2372  0000AB                     RADIO_WriteConfiguration@i:
  2373                           	opt stack 0
  2374  0000AB                     ExecuteNewChannel@frequency:
  2375                           	opt stack 0
  2376                           
  2377                           ; 4 bytes @ 0x4B
  2378  0000AB                     	ds	1
  2379  0000AC                     ___lwmod@counter:
  2380                           	opt stack 0
  2381  0000AC                     RADIO_WriteConfiguration@tempValue:
  2382                           	opt stack 0
  2383  0000AC                     _LORAWAN_LinkCheckConfigure$2492:
  2384                           	opt stack 0
  2385                           
  2386                           ; 4 bytes @ 0x4C
  2387  0000AC                     	ds	1
  2388  0000AD                     ?_Random:
  2389                           	opt stack 0
  2390  0000AD                     UpdateCfList@channelIndex:
  2391                           	opt stack 0
  2392  0000AD                     Random@max:
  2393                           	opt stack 0
  2394                           
  2395                           ; 2 bytes @ 0x4D
  2396  0000AD                     	ds	1
  2397  0000AE                     ExecuteRxParamSetupReq@dlSettings:
  2398                           	opt stack 0
  2399  0000AE                     UpdateCfList@i:
  2400                           	opt stack 0
  2401                           
  2402                           ; 1 bytes @ 0x4E
  2403  0000AE                     	ds	1
  2404  0000AF                     ExecuteNewChannel@channelIndex:
  2405                           	opt stack 0
  2406  0000AF                     SearchAvailableChannel@transmissionType:
  2407                           	opt stack 0
  2408                           
  2409                           ; 1 bytes @ 0x4F
  2410  0000AF                     	ds	1
  2411  0000B0                     ?_MacExecuteCommands:
  2412                           	opt stack 0
  2413  0000B0                     RADIO_WriteConfiguration@regValue:
  2414                           	opt stack 0
  2415  0000B0                     LORAWAN_LinkCheckConfigure@iCtr:
  2416                           	opt stack 0
  2417  0000B0                     SearchAvailableChannel@channelIndex:
  2418                           	opt stack 0
  2419  0000B0                     MacExecuteCommands@buffer:
  2420                           	opt stack 0
  2421                           
  2422                           ; 2 bytes @ 0x50
  2423  0000B0                     	ds	1
  2424  0000B1                     ?_RADIO_Transmit:
  2425                           	opt stack 0
  2426  0000B1                     ?_RADIO_ReceiveStart:
  2427                           	opt stack 0
  2428  0000B1                     LORAWAN_Reset@ismBandNew:
  2429                           	opt stack 0
  2430  0000B1                     RADIO_Transmit@buffer:
  2431                           	opt stack 0
  2432  0000B1                     RADIO_ReceiveStart@rxWindowSize:
  2433                           	opt stack 0
  2434                           
  2435                           ; 2 bytes @ 0x51
  2436  0000B1                     	ds	1
  2437  0000B2                     ??_SearchAvailableChannel:
  2438  0000B2                     MacExecuteCommands@fOptsLen:
  2439                           	opt stack 0
  2440  0000B2                     LORAWAN_Init@RxPayload:
  2441                           	opt stack 0
  2442                           
  2443                           ; 2 bytes @ 0x52
  2444  0000B2                     	ds	1
  2445  0000B3                     ??_MacExecuteCommands:
  2446  0000B3                     ??_RADIO_ReceiveStart:
  2447  0000B3                     RADIO_Transmit@bufferLen:
  2448                           	opt stack 0
  2449                           
  2450                           ; 1 bytes @ 0x53
  2451  0000B3                     	ds	1
  2452  0000B4                     ??_RADIO_Transmit:
  2453  0000B4                     LORAWAN_Init@RxJoinResponse:
  2454                           	opt stack 0
  2455                           
  2456                           ; 2 bytes @ 0x54
  2457  0000B4                     	ds	1
  2458  0000B5                     MacExecuteCommands@done:
  2459                           	opt stack 0
  2460                           
  2461                           ; 1 bytes @ 0x55
  2462  0000B5                     	ds	1
  2463  0000B6                     SearchAvailableChannel@randomNumberCopy:
  2464                           	opt stack 0
  2465  0000B6                     MacExecuteCommands@ptr:
  2466                           	opt stack 0
  2467                           
  2468                           ; 2 bytes @ 0x56
  2469  0000B6                     	ds	1
  2470  0000B7                     SearchAvailableChannel@result:
  2471                           	opt stack 0
  2472  0000B7                     _RADIO_ReceiveStart$777:
  2473                           	opt stack 0
  2474                           
  2475                           ; 4 bytes @ 0x57
  2476  0000B7                     	ds	1
  2477  0000B8                     GenerateSubkey@i:
  2478                           	opt stack 0
  2479  0000B8                     SearchAvailableChannel@maxChannels:
  2480                           	opt stack 0
  2481  0000B8                     _RADIO_Transmit$772:
  2482                           	opt stack 0
  2483                           
  2484                           ; 4 bytes @ 0x58
  2485  0000B8                     	ds	1
  2486  0000B9                     SearchAvailableChannel@randomNumber:
  2487                           	opt stack 0
  2488  0000B9                     AESCmac@key:
  2489                           	opt stack 0
  2490                           
  2491                           ; 2 bytes @ 0x59
  2492  0000B9                     	ds	1
  2493  0000BA                     SearchAvailableChannel@i:
  2494                           	opt stack 0
  2495                           
  2496                           ; 1 bytes @ 0x5A
  2497  0000BA                     	ds	1
  2498  0000BB                     SelectChannelForTransmission@transmissionType:
  2499                           	opt stack 0
  2500  0000BB                     AESCmac@output:
  2501                           	opt stack 0
  2502  0000BB                     LORAWAN_TxDone@timeOnAir:
  2503                           	opt stack 0
  2504                           
  2505                           ; 2 bytes @ 0x5B
  2506  0000BB                     	ds	1
  2507  0000BC                     SelectChannelForTransmission@result:
  2508                           	opt stack 0
  2509  0000BC                     _RADIO_Transmit$774:
  2510                           	opt stack 0
  2511                           
  2512                           ; 4 bytes @ 0x5C
  2513  0000BC                     	ds	1
  2514  0000BD                     ??_LORAWAN_TxDone:
  2515  0000BD                     SelectChannelForTransmission@channelIndex:
  2516                           	opt stack 0
  2517  0000BD                     AESCmac@input:
  2518                           	opt stack 0
  2519                           
  2520                           ; 2 bytes @ 0x5D
  2521  0000BD                     	ds	2
  2522  0000BF                     AESCmac@size:
  2523                           	opt stack 0
  2524                           
  2525                           ; 1 bytes @ 0x5F
  2526  0000BF                     	ds	1
  2527  0000C0                     ??_AESCmac:
  2528  0000C0                     RADIO_Transmit@regValue:
  2529                           	opt stack 0
  2530                           
  2531                           ; 1 bytes @ 0x60
  2532  0000C0                     	ds	1
  2533  0000C1                     RADIO_Transmit@i:
  2534                           	opt stack 0
  2535                           
  2536                           ; 1 bytes @ 0x61
  2537  0000C1                     	ds	1
  2538  0000C2                     ??_LORAWAN_RxTimeout:
  2539                           
  2540                           ; 1 bytes @ 0x62
  2541  0000C2                     	ds	4
  2542  0000C6                     LORAWAN_RxTimeout@minim:
  2543                           	opt stack 0
  2544                           
  2545                           ; 4 bytes @ 0x66
  2546  0000C6                     	ds	1
  2547  0000C7                     ?_ComputeMic:
  2548                           	opt stack 0
  2549  0000C7                     AssemblePacket@port:
  2550                           	opt stack 0
  2551  0000C7                     ComputeMic@key:
  2552                           	opt stack 0
  2553                           
  2554                           ; 2 bytes @ 0x67
  2555  0000C7                     	ds	1
  2556  0000C8                     AssemblePacket@buffer:
  2557                           	opt stack 0
  2558                           
  2559                           ; 2 bytes @ 0x68
  2560  0000C8                     	ds	1
  2561  0000C9                     ComputeMic@buffer:
  2562                           	opt stack 0
  2563  0000C9                     _LORAWAN_TxDone$1666:
  2564                           	opt stack 0
  2565                           
  2566                           ; 4 bytes @ 0x69
  2567  0000C9                     	ds	1
  2568  0000CA                     LORAWAN_RxTimeout@i:
  2569                           	opt stack 0
  2570  0000CA                     AssemblePacket@bufferLength:
  2571                           	opt stack 0
  2572                           
  2573                           ; 2 bytes @ 0x6A
  2574  0000CA                     	ds	1
  2575  0000CB                     ??_RADIO_DIO1:
  2576  0000CB                     ComputeMic@bufferLength:
  2577                           	opt stack 0
  2578                           
  2579                           ; 1 bytes @ 0x6B
  2580  0000CB                     	ds	1
  2581  0000CC                     ??_AssemblePacket:
  2582  0000CC                     RADIO_DIO1@dioMapping:
  2583                           	opt stack 0
  2584  0000CC                     ComputeMic@mic:
  2585                           	opt stack 0
  2586                           
  2587                           ; 4 bytes @ 0x6C
  2588  0000CC                     	ds	1
  2589  0000CD                     _LORAWAN_TxDone$1667:
  2590                           	opt stack 0
  2591                           
  2592                           ; 4 bytes @ 0x6D
  2593  0000CD                     	ds	1
  2594  0000CE                     AssemblePacket@confirmed:
  2595                           	opt stack 0
  2596                           
  2597                           ; 1 bytes @ 0x6E
  2598  0000CE                     	ds	1
  2599  0000CF                     AssemblePacket@mhdr:
  2600                           	opt stack 0
  2601                           
  2602                           ; 1 bytes @ 0x6F
  2603  0000CF                     	ds	1
  2604  0000D0                     ??_PrepareJoinRequestFrame:
  2605  0000D0                     AssemblePacket@fCtrl:
  2606                           	opt stack 0
  2607                           
  2608                           ; 1 bytes @ 0x70
  2609  0000D0                     	ds	1
  2610  0000D1                     LORAWAN_TxDone@found:
  2611                           	opt stack 0
  2612  0000D1                     AssemblePacket@macCmdIdx:
  2613                           	opt stack 0
  2614                           
  2615                           ; 1 bytes @ 0x71
  2616  0000D1                     	ds	1
  2617  0000D2                     AssemblePacket@bufferIndex:
  2618                           	opt stack 0
  2619  0000D2                     LORAWAN_TxDone@delta:
  2620                           	opt stack 0
  2621                           
  2622                           ; 4 bytes @ 0x72
  2623  0000D2                     	ds	1
  2624  0000D3                     LORAWAN_Send@port:
  2625                           	opt stack 0
  2626                           
  2627                           ; 1 bytes @ 0x73
  2628  0000D3                     	ds	1
  2629  0000D4                     LORAWAN_Send@buffer:
  2630                           	opt stack 0
  2631  0000D4                     PrepareJoinRequestFrame@mic:
  2632                           	opt stack 0
  2633                           
  2634                           ; 4 bytes @ 0x74
  2635  0000D4                     	ds	2
  2636  0000D6                     LORAWAN_Send@bufferLength:
  2637                           	opt stack 0
  2638  0000D6                     _LORAWAN_TxDone$5616:
  2639                           	opt stack 0
  2640                           
  2641                           ; 4 bytes @ 0x76
  2642  0000D6                     	ds	1
  2643  0000D7                     ??_LORAWAN_Send:
  2644                           
  2645                           ; 1 bytes @ 0x77
  2646  0000D7                     	ds	1
  2647  0000D8                     LORAWAN_Send@result:
  2648                           	opt stack 0
  2649  0000D8                     PrepareJoinRequestFrame@mhdr:
  2650                           	opt stack 0
  2651                           
  2652                           ; 1 bytes @ 0x78
  2653  0000D8                     	ds	1
  2654  0000D9                     LORAWAN_Send@confirmed:
  2655                           	opt stack 0
  2656  0000D9                     PrepareJoinRequestFrame@iCtr:
  2657                           	opt stack 0
  2658                           
  2659                           ; 1 bytes @ 0x79
  2660  0000D9                     	ds	1
  2661  0000DA                     ??_LORAWAN_RxDone:
  2662  0000DA                     ??_SwTimersExecute:
  2663  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  2664                           	opt stack 0
  2665  0000DA                     LORAWAN_TxDone@ticks:
  2666                           	opt stack 0
  2667                           
  2668                           ; 4 bytes @ 0x7A
  2669  0000DA                     	ds	1
  2670  0000DB                     LORAWAN_Join@bufferIndex:
  2671                           	opt stack 0
  2672                           
  2673                           ; 1 bytes @ 0x7B
  2674  0000DB                     	ds	1
  2675  0000DC                     LORAWAN_Join@result:
  2676                           	opt stack 0
  2677                           
  2678                           ; 1 bytes @ 0x7C
  2679  0000DC                     	ds	1
  2680  0000DD                     LORAWAN_Join@activationTypeNew:
  2681                           	opt stack 0
  2682                           
  2683                           ; 1 bytes @ 0x7D
  2684  0000DD                     	ds	1
  2685  0000DE                     SwTimersExecute@i:
  2686                           	opt stack 0
  2687  0000DE                     LORAWAN_TxDone@minim:
  2688                           	opt stack 0
  2689                           
  2690                           ; 4 bytes @ 0x7E
  2691  0000DE                     	ds	1
  2692  0000DF                     LORAWAN_RxDone@fPort:
  2693                           	opt stack 0
  2694                           
  2695                           ; 1 bytes @ 0x7F
  2696  0000DF                     	ds	1
  2697  0000E0                     LORAWAN_RxDone@channelIndex:
  2698                           	opt stack 0
  2699                           
  2700                           ; 1 bytes @ 0x80
  2701  0000E0                     	ds	1
  2702  0000E1                     LORAWAN_RxDone@mhdr:
  2703                           	opt stack 0
  2704                           
  2705                           ; 1 bytes @ 0x81
  2706  0000E1                     	ds	1
  2707  0000E2                     LORAWAN_TxDone@i:
  2708                           	opt stack 0
  2709  0000E2                     LORAWAN_RxDone@extractedMic:
  2710                           	opt stack 0
  2711                           
  2712                           ; 4 bytes @ 0x82
  2713  0000E2                     	ds	1
  2714  0000E3                     ??_RADIO_TxDone:
  2715  0000E3                     ??_RADIO_FSKPacketSent:
  2716                           
  2717                           ; 1 bytes @ 0x83
  2718  0000E3                     	ds	3
  2719  0000E6                     LORAWAN_RxDone@bufferIndex:
  2720                           	opt stack 0
  2721                           
  2722                           ; 1 bytes @ 0x86
  2723  0000E6                     	ds	1
  2724  0000E7                     LORAWAN_RxDone@temp:
  2725                           	opt stack 0
  2726  0000E7                     RADIO_TxDone@timeOnAir:
  2727                           	opt stack 0
  2728  0000E7                     RADIO_FSKPacketSent@timeOnAir:
  2729                           	opt stack 0
  2730                           
  2731                           ; 4 bytes @ 0x87
  2732  0000E7                     	ds	1
  2733  0000E8                     LORAWAN_RxDone@packet:
  2734                           	opt stack 0
  2735                           
  2736                           ; 2 bytes @ 0x88
  2737  0000E8                     	ds	2
  2738  0000EA                     LORAWAN_RxDone@computedMic:
  2739                           	opt stack 0
  2740                           
  2741                           ; 4 bytes @ 0x8A
  2742  0000EA                     	ds	1
  2743  0000EB                     _RADIO_TxDone$789:
  2744                           	opt stack 0
  2745  0000EB                     _RADIO_FSKPacketSent$793:
  2746                           	opt stack 0
  2747                           
  2748                           ; 4 bytes @ 0x8B
  2749  0000EB                     	ds	3
  2750  0000EE                     LORAWAN_RxDone@joinAccept:
  2751                           	opt stack 0
  2752                           
  2753                           ; 2 bytes @ 0x8E
  2754  0000EE                     	ds	1
  2755  0000EF                     RADIO_FSKPacketSent@irqFlags:
  2756                           	opt stack 0
  2757                           
  2758                           ; 1 bytes @ 0x8F
  2759  0000EF                     	ds	1
  2760  0000F0                     LORAWAN_RxDone@frmPayloadLength:
  2761                           	opt stack 0
  2762                           
  2763                           ; 1 bytes @ 0x90
  2764  0000F0                     	ds	1
  2765  0000F1                     LORAWAN_RxDone@hdr:
  2766                           	opt stack 0
  2767                           
  2768                           ; 2 bytes @ 0x91
  2769  0000F1                     	ds	2
  2770  0000F3                     RADIO_RxDone@irqFlags:
  2771                           	opt stack 0
  2772  0000F3                     RADIO_FSKPayloadReady@irqFlags:
  2773                           	opt stack 0
  2774                           
  2775                           ; 1 bytes @ 0x93
  2776  0000F3                     	ds	1
  2777  0000F4                     RADIO_RxDone@i:
  2778                           	opt stack 0
  2779  0000F4                     RADIO_FSKPayloadReady@i:
  2780                           	opt stack 0
  2781                           
  2782                           ; 1 bytes @ 0x94
  2783  0000F4                     	ds	1
  2784  0000F5                     ??_RADIO_DIO0:
  2785                           
  2786                           ; 1 bytes @ 0x95
  2787  0000F5                     	ds	2
  2788  0000F7                     RADIO_DIO0@dioMapping:
  2789                           	opt stack 0
  2790                           
  2791                           ; 1 bytes @ 0x97
  2792  0000F7                     	ds	1
  2793  0000F8                     RADIO_DIO0@opMode:
  2794                           	opt stack 0
  2795                           
  2796                           ; 1 bytes @ 0x98
  2797  0000F8                     	ds	1
  2798  0000F9                     tblptru	equ	0xFF8
  2799                           tblptrh	equ	0xFF7
  2800                           tblptrl	equ	0xFF6
  2801                           tablat	equ	0xFF5
  2802                           postinc0	equ	0xFEE
  2803                           wreg	equ	0xFE8
  2804                           postdec2	equ	0xFDD
  2805                           fsr2h	equ	0xFDA
  2806                           fsr2l	equ	0xFD9
  2807                           
  2808                           ; 1 bytes @ 0x99
  2809                           
  2810                           	psect	cstackCOMRAM
  2811  000001                     __pcstackCOMRAM:
  2812                           	opt stack 0
  2813  000001                     ?i2_TMR1_ReadTimer:
  2814                           	opt stack 0
  2815  000001                     i2TMR1_WriteTimer@timerVal:
  2816                           	opt stack 0
  2817                           
  2818                           ; 2 bytes @ 0x0
  2819  000001                     	ds	2
  2820  000003                     ??i2_TMR1_ReadTimer:
  2821  000003                     
  2822                           ; 1 bytes @ 0x2
  2823  000003                     	ds	2
  2824  000005                     i2TMR1_ReadTimer@readVal:
  2825                           	opt stack 0
  2826                           
  2827                           ; 2 bytes @ 0x4
  2828  000005                     	ds	2
  2829  000007                     i2TMR1_ReadTimer@readValHigh:
  2830                           	opt stack 0
  2831                           
  2832                           ; 1 bytes @ 0x6
  2833  000007                     	ds	1
  2834  000008                     i2TMR1_ReadTimer@readValLow:
  2835                           	opt stack 0
  2836                           
  2837                           ; 1 bytes @ 0x7
  2838  000008                     	ds	1
  2839  000009                     ?i2_TMR_SwapTimer:
  2840                           	opt stack 0
  2841  000009                     ?i2_TMR_GetDeltaTime:
  2842                           	opt stack 0
  2843  000009                     i2TMR_SwapTimer@timerVal:
  2844                           	opt stack 0
  2845                           
  2846                           ; 2 bytes @ 0x8
  2847  000009                     	ds	2
  2848  00000B                     
  2849                           ; 1 bytes @ 0xA
  2850  00000B                     	ds	2
  2851  00000D                     ??i2_TMR_GetDeltaTime:
  2852                           
  2853                           ; 1 bytes @ 0xC
  2854  00000D                     	ds	20
  2855  000021                     ?i2_SwTimersInterrupt:
  2856                           	opt stack 0
  2857                           
  2858                           ; 4 bytes @ 0x20
  2859  000021                     	ds	4
  2860  000025                     
  2861                           ; 1 bytes @ 0x24
  2862  000025                     	ds	4
  2863  000029                     i2SwTimersInterrupt@timeElapsed:
  2864                           	opt stack 0
  2865                           
  2866                           ; 4 bytes @ 0x28
  2867  000029                     	ds	4
  2868  00002D                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2869                           	opt stack 0
  2870                           
  2871                           ; 4 bytes @ 0x2C
  2872  00002D                     	ds	4
  2873  000031                     i2SwTimersInterrupt@i:
  2874                           	opt stack 0
  2875                           
  2876                           ; 1 bytes @ 0x30
  2877  000031                     	ds	1
  2878  000032                     ??_TMR_ISR_lora:
  2879                           
  2880                           ; 1 bytes @ 0x31
  2881  000032                     	ds	2
  2882  000034                     ??_INTERRUPT_InterruptManager:
  2883                           
  2884                           ; 1 bytes @ 0x33
  2885  000034                     	ds	8
  2886                           tblptru	equ	0xFF8
  2887                           tblptrh	equ	0xFF7
  2888                           tblptrl	equ	0xFF6
  2889                           tablat	equ	0xFF5
  2890                           postinc0	equ	0xFEE
  2891                           wreg	equ	0xFE8
  2892                           postdec2	equ	0xFDD
  2893                           fsr2h	equ	0xFDA
  2894                           fsr2l	equ	0xFD9
  2895                           
  2896 ;;
  2897 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2898 ;;
  2899 ;; *************** function _main *****************
  2900 ;; Defined at:
  2901 ;;		line 83 in file "main.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;Total ram usage:        0 bytes
  2920 ;; Hardware stack levels required when called:   19
  2921 ;; This function calls:
  2922 ;;		_ADC_GetConversion
  2923 ;;		_LORAWAN_Init
  2924 ;;		_LORAWAN_Join
  2925 ;;		_LORAWAN_Mainloop
  2926 ;;		_LORAWAN_Send
  2927 ;;		_LORAWAN_SetApplicationEui
  2928 ;;		_LORAWAN_SetApplicationKey
  2929 ;;		_LORAWAN_SetApplicationSessionKey
  2930 ;;		_LORAWAN_SetDeviceAddress
  2931 ;;		_LORAWAN_SetDeviceEui
  2932 ;;		_LORAWAN_SetNetworkSessionKey
  2933 ;;		_SYSTEM_Initialize
  2934 ;;		_TMR5_HasOverflowOccured
  2935 ;;		_TMR5_StartTimer
  2936 ;;		___ftmul
  2937 ;;		___fttol
  2938 ;;		___lltoft
  2939 ;;		_printf
  2940 ;; This function is called by:
  2941 ;;		Startup code after reset
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text0
  2946  0037B0                     __ptext0:
  2947                           	opt stack 0
  2948  0037B0                     _main:
  2949                           	opt stack 12
  2950                           
  2951                           ;main.c: 86: SYSTEM_Initialize();
  2952                           
  2953                           ;incstack = 0
  2954  0037B0  EC5D  F045         	call	_SYSTEM_Initialize	;wreg free
  2955                           
  2956                           ;main.c: 93: (INTCONbits.GIE = 1);
  2957  0037B4  8EF2               	bsf	intcon,7,c	;volatile
  2958                           
  2959                           ;main.c: 99: (INTCONbits.PEIE = 1);
  2960  0037B6  8CF2               	bsf	intcon,6,c	;volatile
  2961                           
  2962                           ;main.c: 104: printf("\rSYSINIT!");
  2963  0037B8  0EF4               	movlw	low STR_1
  2964  0037BA  0100               	movlb	0	; () banked
  2965  0037BC  6F62               	movwf	printf@f& (0+255),b
  2966  0037BE  0EFF               	movlw	high STR_1
  2967  0037C0  6F63               	movwf	(printf@f+1)& (0+255),b
  2968  0037C2  ECE5  F044         	call	_printf	;wreg free
  2969                           
  2970                           ;main.c: 107: LORAWAN_Init(RxData, RxJoinResponse);
  2971  0037C6  0E0C               	movlw	low _RxData
  2972  0037C8  0100               	movlb	0	; () banked
  2973  0037CA  6FB2               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2974  0037CC  0E93               	movlw	high _RxData
  2975  0037CE  6FB3               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2976  0037D0  0E0A               	movlw	low _RxJoinResponse
  2977  0037D2  6FB4               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2978  0037D4  0E93               	movlw	high _RxJoinResponse
  2979  0037D6  6FB5               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2980  0037D8  EC0B  F03F         	call	_LORAWAN_Init	;wreg free
  2981                           
  2982                           ;main.c: 109: if(activationMethod == 0){
  2983  0037DC  0101               	movlb	1	; () banked
  2984  0037DE  511D               	movf	_activationMethod& (0+255),w,b
  2985  0037E0  A4D8               	btfss	status,2,c
  2986  0037E2  D020               	goto	l2536
  2987                           
  2988                           ; BSR set to: 1
  2989                           ;main.c: 111: LORAWAN_SetApplicationEui(applicationEUI);
  2990  0037E4  0EF5               	movlw	low _applicationEUI
  2991  0037E6  0100               	movlb	0	; () banked
  2992  0037E8  6F6B               	movwf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),b
  2993  0037EA  0E02               	movlw	high _applicationEUI
  2994  0037EC  6F6C               	movwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),b
  2995  0037EE  ECD0  F045         	call	_LORAWAN_SetApplicationEui	;wreg free
  2996                           
  2997                           ;main.c: 112: LORAWAN_SetDeviceEui(deviceEUI);
  2998  0037F2  0EF6               	movlw	low _deviceEUI
  2999  0037F4  0100               	movlb	0	; () banked
  3000  0037F6  6F6B               	movwf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),b
  3001  0037F8  0E01               	movlw	high _deviceEUI
  3002  0037FA  6F6C               	movwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),b
  3003  0037FC  EC8B  F045         	call	_LORAWAN_SetDeviceEui	;wreg free
  3004                           
  3005                           ;main.c: 113: LORAWAN_SetApplicationKey(applicationKey);
  3006  003800  0ED0               	movlw	low _applicationKey
  3007  003802  0100               	movlb	0	; () banked
  3008  003804  6F6B               	movwf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),b
  3009  003806  0E03               	movlw	high _applicationKey
  3010  003808  6F6C               	movwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),b
  3011  00380A  ECB9  F045         	call	_LORAWAN_SetApplicationKey	;wreg free
  3012                           
  3013                           ;main.c: 115: LORAWAN_Join(OTAA);
  3014  00380E  0E00               	movlw	0
  3015  003810  ECA7  F038         	call	_LORAWAN_Join
  3016                           
  3017                           ;main.c: 116: printf("\rOTAA Joined!");
  3018  003814  0ED9               	movlw	low STR_2
  3019  003816  0100               	movlb	0	; () banked
  3020  003818  6F62               	movwf	printf@f& (0+255),b
  3021  00381A  0EFF               	movlw	high STR_2
  3022  00381C  6F63               	movwf	(printf@f+1)& (0+255),b
  3023  00381E  ECE5  F044         	call	_printf	;wreg free
  3024                           
  3025                           ;main.c: 117: }
  3026  003822  D022               	goto	l2537
  3027  003824                     l2536:
  3028                           
  3029                           ;main.c: 118: else{
  3030                           ;main.c: 120: LORAWAN_SetNetworkSessionKey(nwkSKey);
  3031  003824  0EC0               	movlw	low _nwkSKey
  3032  003826  0100               	movlb	0	; () banked
  3033  003828  6F6B               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  3034  00382A  0E03               	movlw	high _nwkSKey
  3035  00382C  6F6C               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  3036  00382E  EC74  F045         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  3037                           
  3038                           ;main.c: 121: LORAWAN_SetApplicationSessionKey(appSKey);
  3039  003832  0EB0               	movlw	low _appSKey
  3040  003834  0100               	movlb	0	; () banked
  3041  003836  6F6B               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  3042  003838  0E03               	movlw	high _appSKey
  3043  00383A  6F6C               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  3044  00383C  ECA2  F045         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  3045                           
  3046                           ;main.c: 122: LORAWAN_SetDeviceAddress(deviceAddr);
  3047  003840  C1F2  F060         	movff	_deviceAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  3048  003844  C1F3  F061         	movff	_deviceAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  3049  003848  C1F4  F062         	movff	_deviceAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  3050  00384C  C1F5  F063         	movff	_deviceAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  3051  003850  EC18  F048         	call	_LORAWAN_SetDeviceAddress	;wreg free
  3052                           
  3053                           ;main.c: 124: LORAWAN_Join(ABP);
  3054  003854  0E01               	movlw	1
  3055  003856  ECA7  F038         	call	_LORAWAN_Join
  3056                           
  3057                           ;main.c: 125: printf("\rABP Joined!");
  3058  00385A  0EE7               	movlw	low STR_3
  3059  00385C  0100               	movlb	0	; () banked
  3060  00385E  6F62               	movwf	printf@f& (0+255),b
  3061  003860  0EFF               	movlw	high STR_3
  3062  003862  6F63               	movwf	(printf@f+1)& (0+255),b
  3063  003864  ECE5  F044         	call	_printf	;wreg free
  3064  003868                     l2537:
  3065                           
  3066                           ;main.c: 126: }
  3067                           ;main.c: 129: TMR5_StartTimer();
  3068  003868  EC61  F049         	call	_TMR5_StartTimer	;wreg free
  3069  00386C                     
  3070                           ;main.c: 132: {
  3071                           ;main.c: 134: LORAWAN_Mainloop();
  3072  00386C  EC27  F044         	call	_LORAWAN_Mainloop	;wreg free
  3073                           
  3074                           ;main.c: 139: if (TMR5_HasOverflowOccured())
  3075  003870  ECE6  F048         	call	_TMR5_HasOverflowOccured	;wreg free
  3076  003874  0900               	iorlw	0
  3077  003876  B4D8               	btfsc	status,2,c
  3078  003878  D037               	goto	l2539
  3079                           
  3080                           ;main.c: 140: {
  3081                           ;main.c: 141: counter ++;
  3082  00387A  0101               	movlb	1	; () banked
  3083  00387C  2B1C               	incf	_counter& (0+255),f,b
  3084                           
  3085                           ; BSR set to: 1
  3086                           ;main.c: 143: adcResult = ADC_GetConversion(channel_AN0);
  3087  00387E  0E00               	movlw	0
  3088  003880  EC7F  F044         	call	_ADC_GetConversion
  3089  003884  0100               	movlb	0	; () banked
  3090  003886  C060  F16F         	movff	?_ADC_GetConversion,_adcResult
  3091  00388A  C061  F170         	movff	?_ADC_GetConversion+1,_adcResult+1
  3092  00388E  0101               	movlb	1	; () banked
  3093  003890  6B71               	clrf	(_adcResult+2)& (0+255),b
  3094  003892  6B72               	clrf	(_adcResult+3)& (0+255),b
  3095                           
  3096                           ; BSR set to: 1
  3097                           ;main.c: 144: adcVoltage = 3.25513*adcResult;
  3098  003894  0E54               	movlw	84
  3099  003896  0100               	movlb	0	; () banked
  3100  003898  6F74               	movwf	___ftmul@f2& (0+255),b
  3101  00389A  0E50               	movlw	80
  3102  00389C  6F75               	movwf	(___ftmul@f2+1)& (0+255),b
  3103  00389E  0E40               	movlw	64
  3104  0038A0  6F76               	movwf	(___ftmul@f2+2)& (0+255),b
  3105  0038A2  C16F  F068         	movff	_adcResult,___lltoft@c
  3106  0038A6  C170  F069         	movff	_adcResult+1,___lltoft@c+1
  3107  0038AA  C171  F06A         	movff	_adcResult+2,___lltoft@c+2
  3108  0038AE  C172  F06B         	movff	_adcResult+3,___lltoft@c+3
  3109  0038B2  EC9C  F03F         	call	___lltoft	;wreg free
  3110  0038B6  C068  F071         	movff	?___lltoft,___ftmul@f1
  3111  0038BA  C069  F072         	movff	?___lltoft+1,___ftmul@f1+1
  3112  0038BE  C06A  F073         	movff	?___lltoft+2,___ftmul@f1+2
  3113  0038C2  ECA0  F031         	call	___ftmul	;wreg free
  3114  0038C6  C071  F080         	movff	?___ftmul,___fttol@f1
  3115  0038CA  C072  F081         	movff	?___ftmul+1,___fttol@f1+1
  3116  0038CE  C073  F082         	movff	?___ftmul+2,___fttol@f1+2
  3117  0038D2  EC24  F031         	call	___fttol	;wreg free
  3118  0038D6  C080  F100         	movff	?___fttol,_adcVoltage
  3119  0038DA  C081  F101         	movff	?___fttol+1,_adcVoltage+1
  3120  0038DE  C082  F102         	movff	?___fttol+2,_adcVoltage+2
  3121  0038E2  C083  F103         	movff	?___fttol+3,_adcVoltage+3
  3122                           
  3123                           ;main.c: 154: TMR5IF = 0;
  3124  0038E6  927E               	bcf	3966,1,c	;volatile
  3125  0038E8                     l2539:
  3126                           
  3127                           ;main.c: 155: }
  3128                           ;main.c: 157: if (counter == 1)
  3129  0038E8  0101               	movlb	1	; () banked
  3130  0038EA  051C               	decf	_counter& (0+255),w,b
  3131  0038EC  A4D8               	btfss	status,2,c
  3132  0038EE  D7BE               	goto	l2538
  3133                           
  3134                           ; BSR set to: 1
  3135                           ;main.c: 158: {
  3136                           ;main.c: 159: data[0] = (uint16_t)(temperature * 100) >> 8;
  3137  0038F0  0E00               	movlw	0
  3138  0038F2  0100               	movlb	0	; () banked
  3139  0038F4  6F74               	movwf	___ftmul@f2& (0+255),b
  3140  0038F6  0EC8               	movlw	200
  3141  0038F8  6F75               	movwf	(___ftmul@f2+1)& (0+255),b
  3142  0038FA  0E42               	movlw	66
  3143  0038FC  6F76               	movwf	(___ftmul@f2+2)& (0+255),b
  3144  0038FE  C112  F071         	movff	_temperature,___ftmul@f1
  3145  003902  C113  F072         	movff	_temperature+1,___ftmul@f1+1
  3146  003906  C114  F073         	movff	_temperature+2,___ftmul@f1+2
  3147  00390A  ECA0  F031         	call	___ftmul	;wreg free
  3148  00390E  C071  F080         	movff	?___ftmul,___fttol@f1
  3149  003912  C072  F081         	movff	?___ftmul+1,___fttol@f1+1
  3150  003916  C073  F082         	movff	?___ftmul+2,___fttol@f1+2
  3151  00391A  EC24  F031         	call	___fttol	;wreg free
  3152  00391E  0100               	movlb	0	; () banked
  3153  003920  C081  F080         	movff	?___fttol+1,?___fttol
  3154  003924  6B81               	clrf	(?___fttol+1)& (0+255),b
  3155  003926  5180               	movf	?___fttol& (0+255),w,b
  3156  003928  0101               	movlb	1	; () banked
  3157  00392A  6F67               	movwf	_data& (0+255),b
  3158                           
  3159                           ;main.c: 160: data[1] = (uint16_t)(temperature * 100) & 0xFF;
  3160  00392C  0E00               	movlw	0
  3161  00392E  0100               	movlb	0	; () banked
  3162  003930  6F74               	movwf	___ftmul@f2& (0+255),b
  3163  003932  0EC8               	movlw	200
  3164  003934  6F75               	movwf	(___ftmul@f2+1)& (0+255),b
  3165  003936  0E42               	movlw	66
  3166  003938  6F76               	movwf	(___ftmul@f2+2)& (0+255),b
  3167  00393A  C112  F071         	movff	_temperature,___ftmul@f1
  3168  00393E  C113  F072         	movff	_temperature+1,___ftmul@f1+1
  3169  003942  C114  F073         	movff	_temperature+2,___ftmul@f1+2
  3170  003946  ECA0  F031         	call	___ftmul	;wreg free
  3171  00394A  C071  F080         	movff	?___ftmul,___fttol@f1
  3172  00394E  C072  F081         	movff	?___ftmul+1,___fttol@f1+1
  3173  003952  C073  F082         	movff	?___ftmul+2,___fttol@f1+2
  3174  003956  EC24  F031         	call	___fttol	;wreg free
  3175  00395A  0100               	movlb	0	; () banked
  3176  00395C  5180               	movf	?___fttol& (0+255),w,b
  3177  00395E  0101               	movlb	1	; () banked
  3178  003960  6F68               	movwf	(_data+1)& (0+255),b
  3179                           
  3180                           ;main.c: 161: data[2] = (uint16_t) pressure >>8;
  3181  003962  C10F  F080         	movff	_pressure,___fttol@f1
  3182  003966  C110  F081         	movff	_pressure+1,___fttol@f1+1
  3183  00396A  C111  F082         	movff	_pressure+2,___fttol@f1+2
  3184  00396E  EC24  F031         	call	___fttol	;wreg free
  3185  003972  0100               	movlb	0	; () banked
  3186  003974  C081  F080         	movff	?___fttol+1,?___fttol
  3187  003978  6B81               	clrf	(?___fttol+1)& (0+255),b
  3188  00397A  5180               	movf	?___fttol& (0+255),w,b
  3189  00397C  0101               	movlb	1	; () banked
  3190  00397E  6F69               	movwf	(_data+2)& (0+255),b
  3191                           
  3192                           ;main.c: 162: data[3] = (uint16_t) pressure & 0xFF;
  3193  003980  C10F  F080         	movff	_pressure,___fttol@f1
  3194  003984  C110  F081         	movff	_pressure+1,___fttol@f1+1
  3195  003988  C111  F082         	movff	_pressure+2,___fttol@f1+2
  3196  00398C  EC24  F031         	call	___fttol	;wreg free
  3197  003990  0100               	movlb	0	; () banked
  3198  003992  5180               	movf	?___fttol& (0+255),w,b
  3199  003994  0101               	movlb	1	; () banked
  3200  003996  6F6A               	movwf	(_data+3)& (0+255),b
  3201                           
  3202                           ;main.c: 163: data[4] = (uint16_t)(humidity * 100) >> 8;
  3203  003998  0E00               	movlw	0
  3204  00399A  0100               	movlb	0	; () banked
  3205  00399C  6F74               	movwf	___ftmul@f2& (0+255),b
  3206  00399E  0EC8               	movlw	200
  3207  0039A0  6F75               	movwf	(___ftmul@f2+1)& (0+255),b
  3208  0039A2  0E42               	movlw	66
  3209  0039A4  6F76               	movwf	(___ftmul@f2+2)& (0+255),b
  3210  0039A6  C10C  F071         	movff	_humidity,___ftmul@f1
  3211  0039AA  C10D  F072         	movff	_humidity+1,___ftmul@f1+1
  3212  0039AE  C10E  F073         	movff	_humidity+2,___ftmul@f1+2
  3213  0039B2  ECA0  F031         	call	___ftmul	;wreg free
  3214  0039B6  C071  F080         	movff	?___ftmul,___fttol@f1
  3215  0039BA  C072  F081         	movff	?___ftmul+1,___fttol@f1+1
  3216  0039BE  C073  F082         	movff	?___ftmul+2,___fttol@f1+2
  3217  0039C2  EC24  F031         	call	___fttol	;wreg free
  3218  0039C6  0100               	movlb	0	; () banked
  3219  0039C8  C081  F080         	movff	?___fttol+1,?___fttol
  3220  0039CC  6B81               	clrf	(?___fttol+1)& (0+255),b
  3221  0039CE  5180               	movf	?___fttol& (0+255),w,b
  3222  0039D0  0101               	movlb	1	; () banked
  3223  0039D2  6F6B               	movwf	(_data+4)& (0+255),b
  3224                           
  3225                           ;main.c: 164: data[5] = (uint16_t)(humidity * 100) & 0xFF;
  3226  0039D4  0E00               	movlw	0
  3227  0039D6  0100               	movlb	0	; () banked
  3228  0039D8  6F74               	movwf	___ftmul@f2& (0+255),b
  3229  0039DA  0EC8               	movlw	200
  3230  0039DC  6F75               	movwf	(___ftmul@f2+1)& (0+255),b
  3231  0039DE  0E42               	movlw	66
  3232  0039E0  6F76               	movwf	(___ftmul@f2+2)& (0+255),b
  3233  0039E2  C10C  F071         	movff	_humidity,___ftmul@f1
  3234  0039E6  C10D  F072         	movff	_humidity+1,___ftmul@f1+1
  3235  0039EA  C10E  F073         	movff	_humidity+2,___ftmul@f1+2
  3236  0039EE  ECA0  F031         	call	___ftmul	;wreg free
  3237  0039F2  C071  F080         	movff	?___ftmul,___fttol@f1
  3238  0039F6  C072  F081         	movff	?___ftmul+1,___fttol@f1+1
  3239  0039FA  C073  F082         	movff	?___ftmul+2,___fttol@f1+2
  3240  0039FE  EC24  F031         	call	___fttol	;wreg free
  3241  003A02  0100               	movlb	0	; () banked
  3242  003A04  5180               	movf	?___fttol& (0+255),w,b
  3243  003A06  0101               	movlb	1	; () banked
  3244  003A08  6F6C               	movwf	(_data+5)& (0+255),b
  3245                           
  3246                           ; BSR set to: 1
  3247                           ;main.c: 165: data[6] = (uint16_t) adcVoltage >> 8;
  3248  003A0A  5101               	movf	(_adcVoltage+1)& (0+255),w,b
  3249  003A0C  6F6D               	movwf	(_data+6)& (0+255),b
  3250                           
  3251                           ; BSR set to: 1
  3252                           ;main.c: 166: data[7] = (uint16_t) adcVoltage & 0xFF;
  3253  003A0E  C100  F16E         	movff	_adcVoltage,_data+7
  3254                           
  3255                           ; BSR set to: 1
  3256                           ;main.c: 168: LORAWAN_Send(UNCNF, 2, data, 8);
  3257  003A12  0E02               	movlw	2
  3258  003A14  0100               	movlb	0	; () banked
  3259  003A16  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  3260  003A18  0E67               	movlw	low _data
  3261  003A1A  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  3262  003A1C  0E01               	movlw	high _data
  3263  003A1E  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  3264  003A20  0E08               	movlw	8
  3265  003A22  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  3266  003A24  0E00               	movlw	0
  3267  003A26  EC21  F036         	call	_LORAWAN_Send
  3268                           
  3269                           ;main.c: 170: counter = 0;
  3270  003A2A  0E00               	movlw	0
  3271  003A2C  0101               	movlb	1	; () banked
  3272  003A2E  6F1C               	movwf	_counter& (0+255),b
  3273                           
  3274                           ; BSR set to: 1
  3275                           
  3276                           ; BSR set to: 1
  3277  003A30  D71D               	goto	l2538
  3278  003A32                     __end_of_main:
  3279                           	opt stack 0
  3280                           tblptru	equ	0xFF8
  3281                           tblptrh	equ	0xFF7
  3282                           tblptrl	equ	0xFF6
  3283                           tablat	equ	0xFF5
  3284                           intcon	equ	0xFF2
  3285                           postinc0	equ	0xFEE
  3286                           wreg	equ	0xFE8
  3287                           postdec2	equ	0xFDD
  3288                           fsr2h	equ	0xFDA
  3289                           fsr2l	equ	0xFD9
  3290                           status	equ	0xFD8
  3291                           
  3292 ;; *************** function _printf *****************
  3293 ;; Defined at:
  3294 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  3297 ;;		 -> STR_3(13), STR_2(14), STR_1(10), 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  tmpval          4    0        struct .
  3300 ;;  cp              3    0        PTR const unsigned char 
  3301 ;;  ap              2    4[BANK0 ] PTR void [1]
  3302 ;;		 -> ?_printf(2), 
  3303 ;;  len             2    0        unsigned int 
  3304 ;;  val             2    0        unsigned int 
  3305 ;;  c               1    6[BANK0 ] char 
  3306 ;;  flag            1    0        unsigned char 
  3307 ;;  prec            1    0        char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  2    2[BANK0 ] int 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3317 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;Total ram usage:        5 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    9
  3324 ;; This function calls:
  3325 ;;		_putch
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text1
  3332  0089CA                     __ptext1:
  3333                           	opt stack 0
  3334  0089CA                     _printf:
  3335                           	opt stack 21
  3336                           
  3337                           ;doprnt.c: 466: va_list ap;
  3338                           ;doprnt.c: 499: signed char c;
  3339                           ;doprnt.c: 506: signed char prec;
  3340                           ;doprnt.c: 508: unsigned char flag;
  3341                           ;doprnt.c: 523: union {
  3342                           ;doprnt.c: 524: unsigned long vd;
  3343                           ;doprnt.c: 525: double integ;
  3344                           ;doprnt.c: 526: } tmpval;
  3345                           ;doprnt.c: 528: unsigned int val;
  3346                           ;doprnt.c: 529: unsigned len;
  3347                           ;doprnt.c: 530: const char * cp;
  3348                           ;doprnt.c: 533: *ap = __va_start();
  3349                           
  3350                           ; BSR set to: 1
  3351                           ;incstack = 0
  3352  0089CA  0E64               	movlw	low (?_printf+2)
  3353  0089CC  0100               	movlb	0	; () banked
  3354  0089CE  6F64               	movwf	printf@ap& (0+255),b
  3355  0089D0  0E00               	movlw	high (?_printf+2)
  3356  0089D2  6F65               	movwf	(printf@ap+1)& (0+255),b
  3357                           
  3358                           ;doprnt.c: 536: while(c = *f++) {
  3359  0089D4  D003               	goto	l2738
  3360  0089D6                     
  3361                           ; BSR set to: 0
  3362                           ;doprnt.c: 540: {
  3363                           ;doprnt.c: 541: (putch(c) );
  3364                           
  3365                           ; BSR set to: 0
  3366  0089D6  5166               	movf	printf@c& (0+255),w,b
  3367  0089D8  ECC3  F048         	call	_putch
  3368  0089DC                     l2738:
  3369  0089DC  C062  FFF6         	movff	printf@f,tblptrl
  3370  0089E0  C063  FFF7         	movff	printf@f+1,tblptrh
  3371  0089E4  0100               	movlb	0	; () banked
  3372  0089E6  4B62               	infsnz	printf@f& (0+255),f,b
  3373  0089E8  2B63               	incf	(printf@f+1)& (0+255),f,b
  3374  0089EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3375  0089EA  6AF8               	clrf	tblptru,c
  3376  0089EC                     	endif
  3377  0089EC                     	if	0	;tblptru may be non-zero
  3378  0089EC                     	endif
  3379  0089EC  0008               	tblrd		*
  3380  0089EE  CFF5 F066          	movff	tablat,printf@c
  3381  0089F2  5166               	movf	printf@c& (0+255),w,b
  3382  0089F4  B4D8               	btfsc	status,2,c
  3383  0089F6  0012               	return	
  3384  0089F8  D7EE               	goto	l2739
  3385  0089FA                     __end_of_printf:
  3386                           	opt stack 0
  3387                           tblptru	equ	0xFF8
  3388                           tblptrh	equ	0xFF7
  3389                           tblptrl	equ	0xFF6
  3390                           tablat	equ	0xFF5
  3391                           intcon	equ	0xFF2
  3392                           postinc0	equ	0xFEE
  3393                           wreg	equ	0xFE8
  3394                           postdec2	equ	0xFDD
  3395                           fsr2h	equ	0xFDA
  3396                           fsr2l	equ	0xFD9
  3397                           status	equ	0xFD8
  3398                           
  3399 ;; *************** function _putch *****************
  3400 ;; Defined at:
  3401 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  txData          1    wreg     unsigned char 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  txData          1    1[BANK0 ] unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;Total ram usage:        1 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    8
  3422 ;; This function calls:
  3423 ;;		_EUSART1_Write
  3424 ;; This function is called by:
  3425 ;;		_printf
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text2
  3430  009186                     __ptext2:
  3431                           	opt stack 0
  3432  009186                     _putch:
  3433                           	opt stack 21
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;incstack = 0
  3437                           ;putch@txData stored from wreg
  3438  009186  0100               	movlb	0	; () banked
  3439  009188  6F61               	movwf	putch@txData& (0+255),b
  3440                           
  3441                           ;eusart1.c: 148: EUSART1_Write(txData);
  3442  00918A  0100               	movlb	0	; () banked
  3443  00918C  5161               	movf	putch@txData& (0+255),w,b
  3444  00918E  ECCA  F048         	call	_EUSART1_Write
  3445  009192  0012               	return		;funcret
  3446  009194                     __end_of_putch:
  3447                           	opt stack 0
  3448                           tblptru	equ	0xFF8
  3449                           tblptrh	equ	0xFF7
  3450                           tblptrl	equ	0xFF6
  3451                           tablat	equ	0xFF5
  3452                           intcon	equ	0xFF2
  3453                           postinc0	equ	0xFEE
  3454                           wreg	equ	0xFE8
  3455                           postdec2	equ	0xFDD
  3456                           fsr2h	equ	0xFDA
  3457                           fsr2l	equ	0xFD9
  3458                           status	equ	0xFD8
  3459                           
  3460 ;; *************** function _EUSART1_Write *****************
  3461 ;; Defined at:
  3462 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  txData          1    wreg     unsigned char 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  txData          1    0[BANK0 ] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;Total ram usage:        1 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    7
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_putch
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text3
  3491  009194                     __ptext3:
  3492                           	opt stack 0
  3493  009194                     _EUSART1_Write:
  3494                           	opt stack 21
  3495                           
  3496                           ;incstack = 0
  3497                           ;EUSART1_Write@txData stored from wreg
  3498  009194  0100               	movlb	0	; () banked
  3499  009196  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  3500  009198                     
  3501                           ;eusart1.c: 135: {
  3502                           
  3503                           ;eusart1.c: 134: while(0 == PIR1bits.TX1IF)
  3504  009198  A89E               	btfss	3998,4,c	;volatile
  3505  00919A  D7FE               	goto	l12097
  3506                           
  3507                           ;eusart1.c: 136: }
  3508                           ;eusart1.c: 138: TXREG1 = txData;
  3509  00919C  C060  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3510  0091A0  0012               	return		;funcret
  3511  0091A2                     __end_of_EUSART1_Write:
  3512                           	opt stack 0
  3513                           tblptru	equ	0xFF8
  3514                           tblptrh	equ	0xFF7
  3515                           tblptrl	equ	0xFF6
  3516                           tablat	equ	0xFF5
  3517                           intcon	equ	0xFF2
  3518                           postinc0	equ	0xFEE
  3519                           wreg	equ	0xFE8
  3520                           postdec2	equ	0xFDD
  3521                           fsr2h	equ	0xFDA
  3522                           fsr2l	equ	0xFD9
  3523                           status	equ	0xFD8
  3524                           
  3525 ;; *************** function ___lltoft *****************
  3526 ;; Defined at:
  3527 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  c               4    8[BANK0 ] unsigned long 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  exp             1   16[BANK0 ] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  3    8[BANK0 ] float 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3541 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;Total ram usage:        9 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    8
  3548 ;; This function calls:
  3549 ;;		___ftpack
  3550 ;; This function is called by:
  3551 ;;		_main
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text4
  3556  007F38                     __ptext4:
  3557                           	opt stack 0
  3558  007F38                     ___lltoft:
  3559                           	opt stack 22
  3560                           
  3561                           ;incstack = 0
  3562  007F38  0E8E               	movlw	142
  3563  007F3A  0100               	movlb	0	; () banked
  3564  007F3C  6F70               	movwf	___lltoft@exp& (0+255),b
  3565  007F3E  D006               	goto	l3113
  3566  007F40                     
  3567                           ; BSR set to: 0
  3568                           
  3569                           ; BSR set to: 0
  3570  007F40  90D8               	bcf	status,0,c
  3571  007F42  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  3572  007F44  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  3573  007F46  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
  3574  007F48  3368               	rrcf	___lltoft@c& (0+255),f,b
  3575  007F4A  2B70               	incf	___lltoft@exp& (0+255),f,b
  3576  007F4C                     l3113:
  3577                           
  3578                           ; BSR set to: 0
  3579                           
  3580                           ; BSR set to: 0
  3581  007F4C  0E00               	movlw	0
  3582  007F4E  1568               	andwf	___lltoft@c& (0+255),w,b
  3583  007F50  6F6C               	movwf	??___lltoft& (0+255),b
  3584  007F52  0E00               	movlw	0
  3585  007F54  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
  3586  007F56  6F6D               	movwf	(??___lltoft+1)& (0+255),b
  3587  007F58  0E00               	movlw	0
  3588  007F5A  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
  3589  007F5C  6F6E               	movwf	(??___lltoft+2)& (0+255),b
  3590  007F5E  0EFF               	movlw	255
  3591  007F60  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
  3592  007F62  6F6F               	movwf	(??___lltoft+3)& (0+255),b
  3593  007F64  516C               	movf	??___lltoft& (0+255),w,b
  3594  007F66  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
  3595  007F68  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
  3596  007F6A  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
  3597  007F6C  A4D8               	btfss	status,2,c
  3598  007F6E  D7E8               	goto	l3114
  3599                           
  3600                           ; BSR set to: 0
  3601                           
  3602                           ; BSR set to: 0
  3603  007F70  C068  F060         	movff	___lltoft@c,___ftpack@arg
  3604  007F74  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
  3605  007F78  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
  3606  007F7C  C070  F063         	movff	___lltoft@exp,___ftpack@exp
  3607  007F80  0E00               	movlw	0
  3608  007F82  6F64               	movwf	___ftpack@sign& (0+255),b
  3609  007F84  ECA5  F037         	call	___ftpack	;wreg free
  3610  007F88  C060  F068         	movff	?___ftpack,?___lltoft
  3611  007F8C  C061  F069         	movff	?___ftpack+1,?___lltoft+1
  3612  007F90  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
  3613  007F94  0012               	return	
  3614  007F96                     __end_of___lltoft:
  3615                           	opt stack 0
  3616                           tblptru	equ	0xFF8
  3617                           tblptrh	equ	0xFF7
  3618                           tblptrl	equ	0xFF6
  3619                           tablat	equ	0xFF5
  3620                           intcon	equ	0xFF2
  3621                           postinc0	equ	0xFEE
  3622                           wreg	equ	0xFE8
  3623                           postdec2	equ	0xFDD
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function ___fttol *****************
  3629 ;; Defined at:
  3630 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  f1              3   32[BANK0 ] float 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  lval            4   42[BANK0 ] unsigned long 
  3635 ;;  exp1            1   46[BANK0 ] unsigned char 
  3636 ;;  sign1           1   41[BANK0 ] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  4   32[BANK0 ] long 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3646 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;Total ram usage:       15 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    7
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text5
  3661  006248                     __ptext5:
  3662                           	opt stack 0
  3663  006248                     ___fttol:
  3664                           	opt stack 23
  3665                           
  3666                           ;incstack = 0
  3667  006248  C082  F084         	movff	___fttol@f1+2,??___fttol
  3668  00624C  0100               	movlb	0	; () banked
  3669  00624E  6B85               	clrf	(??___fttol+1)& (0+255),b
  3670  006250  6B86               	clrf	(??___fttol+2)& (0+255),b
  3671  006252  3581               	rlcf	(___fttol@f1+1)& (0+255),w,b
  3672  006254  3784               	rlcf	??___fttol& (0+255),f,b
  3673  006256  E301               	bnc	u14001
  3674  006258  8185               	bsf	(??___fttol+1)& (0+255),0,b
  3675  00625A                     u14001:
  3676  00625A  5184               	movf	??___fttol& (0+255),w,b
  3677  00625C  6F8E               	movwf	___fttol@exp1& (0+255),b
  3678  00625E  518E               	movf	___fttol@exp1& (0+255),w,b
  3679  006260  A4D8               	btfss	status,2,c
  3680  006262  D009               	goto	l3056
  3681                           
  3682                           ; BSR set to: 0
  3683  006264  0E00               	movlw	0
  3684  006266  6F80               	movwf	?___fttol& (0+255),b
  3685  006268  0E00               	movlw	0
  3686  00626A  6F81               	movwf	(?___fttol+1)& (0+255),b
  3687  00626C  0E00               	movlw	0
  3688  00626E  6F82               	movwf	(?___fttol+2)& (0+255),b
  3689  006270  0E00               	movlw	0
  3690  006272  6F83               	movwf	(?___fttol+3)& (0+255),b
  3691                           
  3692                           ; BSR set to: 0
  3693  006274  0012               	return	
  3694  006276                     l3056:
  3695                           
  3696                           ; BSR set to: 0
  3697                           
  3698                           ; BSR set to: 0
  3699  006276  0E17               	movlw	23
  3700  006278  6F84               	movwf	??___fttol& (0+255),b
  3701  00627A  C080  F085         	movff	___fttol@f1,??___fttol+1
  3702  00627E  C081  F086         	movff	___fttol@f1+1,??___fttol+2
  3703  006282  C082  F087         	movff	___fttol@f1+2,??___fttol+3
  3704  006286  2984               	incf	??___fttol& (0+255),w,b
  3705  006288  6F88               	movwf	(??___fttol+4)& (0+255),b
  3706  00628A  D004               	goto	u14020
  3707  00628C                     u14025:
  3708  00628C  90D8               	bcf	status,0,c
  3709  00628E  3387               	rrcf	(??___fttol+3)& (0+255),f,b
  3710  006290  3386               	rrcf	(??___fttol+2)& (0+255),f,b
  3711  006292  3385               	rrcf	(??___fttol+1)& (0+255),f,b
  3712  006294                     u14020:
  3713  006294  2F88               	decfsz	(??___fttol+4)& (0+255),f,b
  3714  006296  D7FA               	goto	u14025
  3715  006298  0100               	movlb	0	; () banked
  3716  00629A  5185               	movf	(??___fttol+1)& (0+255),w,b
  3717  00629C  6F89               	movwf	___fttol@sign1& (0+255),b
  3718                           
  3719                           ; BSR set to: 0
  3720  00629E  8F81               	bsf	(___fttol@f1+1)& (0+255),7,b
  3721                           
  3722                           ; BSR set to: 0
  3723  0062A0  0EFF               	movlw	255
  3724  0062A2  1780               	andwf	___fttol@f1& (0+255),f,b
  3725  0062A4  0EFF               	movlw	255
  3726  0062A6  1781               	andwf	(___fttol@f1+1)& (0+255),f,b
  3727  0062A8  0E00               	movlw	0
  3728  0062AA  1782               	andwf	(___fttol@f1+2)& (0+255),f,b
  3729                           
  3730                           ; BSR set to: 0
  3731  0062AC  5180               	movf	___fttol@f1& (0+255),w,b
  3732  0062AE  6F8A               	movwf	___fttol@lval& (0+255),b
  3733  0062B0  5181               	movf	(___fttol@f1+1)& (0+255),w,b
  3734  0062B2  6F8B               	movwf	(___fttol@lval+1)& (0+255),b
  3735  0062B4  5182               	movf	(___fttol@f1+2)& (0+255),w,b
  3736  0062B6  6F8C               	movwf	(___fttol@lval+2)& (0+255),b
  3737  0062B8  6B8D               	clrf	(___fttol@lval+3)& (0+255),b
  3738                           
  3739                           ; BSR set to: 0
  3740  0062BA  0E8E               	movlw	142
  3741  0062BC  5F8E               	subwf	___fttol@exp1& (0+255),f,b
  3742                           
  3743                           ; BSR set to: 0
  3744  0062BE  AF8E               	btfss	___fttol@exp1& (0+255),7,b
  3745  0062C0  D016               	goto	l3058
  3746                           
  3747                           ; BSR set to: 0
  3748  0062C2  518E               	movf	___fttol@exp1& (0+255),w,b
  3749  0062C4  0A80               	xorlw	128
  3750  0062C6  0F8F               	addlw	143
  3751  0062C8  B0D8               	btfsc	status,0,c
  3752  0062CA  D009               	goto	l3059
  3753                           
  3754                           ; BSR set to: 0
  3755  0062CC  0E00               	movlw	0
  3756  0062CE  6F80               	movwf	?___fttol& (0+255),b
  3757  0062D0  0E00               	movlw	0
  3758  0062D2  6F81               	movwf	(?___fttol+1)& (0+255),b
  3759  0062D4  0E00               	movlw	0
  3760  0062D6  6F82               	movwf	(?___fttol+2)& (0+255),b
  3761  0062D8  0E00               	movlw	0
  3762  0062DA  6F83               	movwf	(?___fttol+3)& (0+255),b
  3763                           
  3764                           ; BSR set to: 0
  3765  0062DC  0012               	return	
  3766  0062DE                     l3059:
  3767                           
  3768                           ; BSR set to: 0
  3769                           
  3770                           ; BSR set to: 0
  3771                           
  3772                           ; BSR set to: 0
  3773  0062DE  90D8               	bcf	status,0,c
  3774  0062E0  338D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  3775  0062E2  338C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  3776  0062E4  338B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  3777  0062E6  338A               	rrcf	___fttol@lval& (0+255),f,b
  3778                           
  3779                           ; BSR set to: 0
  3780  0062E8  3F8E               	incfsz	___fttol@exp1& (0+255),f,b
  3781  0062EA  D7F9               	goto	l3059
  3782                           
  3783                           ; BSR set to: 0
  3784  0062EC  D015               	goto	u14060
  3785  0062EE                     l3058:
  3786                           
  3787                           ; BSR set to: 0
  3788                           
  3789                           ; BSR set to: 0
  3790  0062EE  0E17               	movlw	23
  3791  0062F0  658E               	cpfsgt	___fttol@exp1& (0+255),b
  3792  0062F2  D00F               	goto	l3064
  3793                           
  3794                           ; BSR set to: 0
  3795  0062F4  0E00               	movlw	0
  3796  0062F6  6F80               	movwf	?___fttol& (0+255),b
  3797  0062F8  0E00               	movlw	0
  3798  0062FA  6F81               	movwf	(?___fttol+1)& (0+255),b
  3799  0062FC  0E00               	movlw	0
  3800  0062FE  6F82               	movwf	(?___fttol+2)& (0+255),b
  3801  006300  0E00               	movlw	0
  3802  006302  6F83               	movwf	(?___fttol+3)& (0+255),b
  3803                           
  3804                           ; BSR set to: 0
  3805  006304  0012               	return	
  3806  006306                     
  3807                           ; BSR set to: 0
  3808                           
  3809                           ; BSR set to: 0
  3810  006306  90D8               	bcf	status,0,c
  3811  006308  378A               	rlcf	___fttol@lval& (0+255),f,b
  3812  00630A  378B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  3813  00630C  378C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  3814  00630E  378D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  3815  006310  078E               	decf	___fttol@exp1& (0+255),f,b
  3816  006312                     l3064:
  3817                           
  3818                           ; BSR set to: 0
  3819                           
  3820                           ; BSR set to: 0
  3821  006312  518E               	movf	___fttol@exp1& (0+255),w,b
  3822  006314  A4D8               	btfss	status,2,c
  3823  006316  D7F7               	goto	l3065
  3824  006318                     u14060:
  3825                           
  3826                           ; BSR set to: 0
  3827                           
  3828                           ; BSR set to: 0
  3829                           
  3830                           ; BSR set to: 0
  3831  006318  5189               	movf	___fttol@sign1& (0+255),w,b
  3832  00631A  B4D8               	btfsc	status,2,c
  3833  00631C  D008               	goto	l3067
  3834                           
  3835                           ; BSR set to: 0
  3836  00631E  1F8D               	comf	(___fttol@lval+3)& (0+255),f,b
  3837  006320  1F8C               	comf	(___fttol@lval+2)& (0+255),f,b
  3838  006322  1F8B               	comf	(___fttol@lval+1)& (0+255),f,b
  3839  006324  6D8A               	negf	___fttol@lval& (0+255),b
  3840  006326  0E00               	movlw	0
  3841  006328  238B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  3842  00632A  238C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  3843  00632C  238D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  3844  00632E                     l3067:
  3845                           
  3846                           ; BSR set to: 0
  3847                           
  3848                           ; BSR set to: 0
  3849  00632E  C08A  F080         	movff	___fttol@lval,?___fttol
  3850  006332  C08B  F081         	movff	___fttol@lval+1,?___fttol+1
  3851  006336  C08C  F082         	movff	___fttol@lval+2,?___fttol+2
  3852  00633A  C08D  F083         	movff	___fttol@lval+3,?___fttol+3
  3853  00633E  0012               	return	
  3854  006340                     __end_of___fttol:
  3855                           	opt stack 0
  3856                           tblptru	equ	0xFF8
  3857                           tblptrh	equ	0xFF7
  3858                           tblptrl	equ	0xFF6
  3859                           tablat	equ	0xFF5
  3860                           intcon	equ	0xFF2
  3861                           postinc0	equ	0xFEE
  3862                           wreg	equ	0xFE8
  3863                           postdec2	equ	0xFDD
  3864                           fsr2h	equ	0xFDA
  3865                           fsr2l	equ	0xFD9
  3866                           status	equ	0xFD8
  3867                           
  3868 ;; *************** function ___ftmul *****************
  3869 ;; Defined at:
  3870 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  f1              3   17[BANK0 ] float 
  3873 ;;  f2              3   20[BANK0 ] float 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  3876 ;;  sign            1   31[BANK0 ] unsigned char 
  3877 ;;  cntr            1   30[BANK0 ] unsigned char 
  3878 ;;  exp             1   26[BANK0 ] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  3   17[BANK0 ] float 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3888 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3890 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;Total ram usage:       15 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    8
  3895 ;; This function calls:
  3896 ;;		___ftpack
  3897 ;; This function is called by:
  3898 ;;		_main
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text6
  3903  006340                     __ptext6:
  3904                           	opt stack 0
  3905  006340                     ___ftmul:
  3906                           	opt stack 22
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;incstack = 0
  3910  006340  C073  F077         	movff	___ftmul@f1+2,??___ftmul
  3911  006344  0100               	movlb	0	; () banked
  3912  006346  6B78               	clrf	(??___ftmul+1)& (0+255),b
  3913  006348  6B79               	clrf	(??___ftmul+2)& (0+255),b
  3914  00634A  3572               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  3915  00634C  3777               	rlcf	??___ftmul& (0+255),f,b
  3916  00634E  E301               	bnc	u13941
  3917  006350  8178               	bsf	(??___ftmul+1)& (0+255),0,b
  3918  006352                     u13941:
  3919  006352  5177               	movf	??___ftmul& (0+255),w,b
  3920  006354  6F7A               	movwf	___ftmul@exp& (0+255),b
  3921  006356  517A               	movf	___ftmul@exp& (0+255),w,b
  3922  006358  A4D8               	btfss	status,2,c
  3923  00635A  D007               	goto	l3035
  3924                           
  3925                           ; BSR set to: 0
  3926  00635C  0E00               	movlw	0
  3927  00635E  6F71               	movwf	?___ftmul& (0+255),b
  3928  006360  0E00               	movlw	0
  3929  006362  6F72               	movwf	(?___ftmul+1)& (0+255),b
  3930  006364  0E00               	movlw	0
  3931  006366  6F73               	movwf	(?___ftmul+2)& (0+255),b
  3932                           
  3933                           ; BSR set to: 0
  3934  006368  0012               	return	
  3935  00636A                     l3035:
  3936                           
  3937                           ; BSR set to: 0
  3938                           
  3939                           ; BSR set to: 0
  3940  00636A  C076  F077         	movff	___ftmul@f2+2,??___ftmul
  3941  00636E  6B78               	clrf	(??___ftmul+1)& (0+255),b
  3942  006370  6B79               	clrf	(??___ftmul+2)& (0+255),b
  3943  006372  3575               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  3944  006374  3777               	rlcf	??___ftmul& (0+255),f,b
  3945  006376  E301               	bnc	u13961
  3946  006378  8178               	bsf	(??___ftmul+1)& (0+255),0,b
  3947  00637A                     u13961:
  3948  00637A  5177               	movf	??___ftmul& (0+255),w,b
  3949  00637C  6F7F               	movwf	___ftmul@sign& (0+255),b
  3950  00637E  517F               	movf	___ftmul@sign& (0+255),w,b
  3951  006380  A4D8               	btfss	status,2,c
  3952  006382  D007               	goto	l3037
  3953                           
  3954                           ; BSR set to: 0
  3955  006384  0E00               	movlw	0
  3956  006386  6F71               	movwf	?___ftmul& (0+255),b
  3957  006388  0E00               	movlw	0
  3958  00638A  6F72               	movwf	(?___ftmul+1)& (0+255),b
  3959  00638C  0E00               	movlw	0
  3960  00638E  6F73               	movwf	(?___ftmul+2)& (0+255),b
  3961                           
  3962                           ; BSR set to: 0
  3963  006390  0012               	return	
  3964  006392                     l3037:
  3965                           
  3966                           ; BSR set to: 0
  3967                           
  3968                           ; BSR set to: 0
  3969  006392  517F               	movf	___ftmul@sign& (0+255),w,b
  3970  006394  0F7B               	addlw	123
  3971  006396  277A               	addwf	___ftmul@exp& (0+255),f,b
  3972                           
  3973                           ; BSR set to: 0
  3974  006398  C073  F07F         	movff	___ftmul@f1+2,___ftmul@sign
  3975  00639C  5176               	movf	(___ftmul@f2+2)& (0+255),w,b
  3976  00639E  1B7F               	xorwf	___ftmul@sign& (0+255),f,b
  3977  0063A0  0E80               	movlw	128
  3978  0063A2  177F               	andwf	___ftmul@sign& (0+255),f,b
  3979                           
  3980                           ; BSR set to: 0
  3981  0063A4  8F72               	bsf	(___ftmul@f1+1)& (0+255),7,b
  3982                           
  3983                           ; BSR set to: 0
  3984  0063A6  8F75               	bsf	(___ftmul@f2+1)& (0+255),7,b
  3985                           
  3986                           ; BSR set to: 0
  3987  0063A8  0EFF               	movlw	255
  3988  0063AA  1774               	andwf	___ftmul@f2& (0+255),f,b
  3989  0063AC  0EFF               	movlw	255
  3990  0063AE  1775               	andwf	(___ftmul@f2+1)& (0+255),f,b
  3991  0063B0  0E00               	movlw	0
  3992  0063B2  1776               	andwf	(___ftmul@f2+2)& (0+255),f,b
  3993                           
  3994                           ; BSR set to: 0
  3995  0063B4  0E00               	movlw	0
  3996  0063B6  6F7B               	movwf	___ftmul@f3_as_product& (0+255),b
  3997  0063B8  0E00               	movlw	0
  3998  0063BA  6F7C               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3999  0063BC  0E00               	movlw	0
  4000  0063BE  6F7D               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  4001                           
  4002                           ; BSR set to: 0
  4003  0063C0  0E07               	movlw	7
  4004  0063C2  6F7E               	movwf	___ftmul@cntr& (0+255),b
  4005  0063C4                     
  4006                           ; BSR set to: 0
  4007                           
  4008                           ; BSR set to: 0
  4009  0063C4  A171               	btfss	___ftmul@f1& (0+255),0,b
  4010  0063C6  D006               	goto	l3039
  4011                           
  4012                           ; BSR set to: 0
  4013  0063C8  5174               	movf	___ftmul@f2& (0+255),w,b
  4014  0063CA  277B               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4015  0063CC  5175               	movf	(___ftmul@f2+1)& (0+255),w,b
  4016  0063CE  237C               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4017  0063D0  5176               	movf	(___ftmul@f2+2)& (0+255),w,b
  4018  0063D2  237D               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4019  0063D4                     l3039:
  4020                           
  4021                           ; BSR set to: 0
  4022                           
  4023                           ; BSR set to: 0
  4024  0063D4  90D8               	bcf	status,0,c
  4025  0063D6  3373               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4026  0063D8  3372               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4027  0063DA  3371               	rrcf	___ftmul@f1& (0+255),f,b
  4028  0063DC  90D8               	bcf	status,0,c
  4029  0063DE  3774               	rlcf	___ftmul@f2& (0+255),f,b
  4030  0063E0  3775               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  4031  0063E2  3776               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  4032                           
  4033                           ; BSR set to: 0
  4034  0063E4  2F7E               	decfsz	___ftmul@cntr& (0+255),f,b
  4035  0063E6  D7EE               	goto	l3038
  4036                           
  4037                           ; BSR set to: 0
  4038                           
  4039                           ; BSR set to: 0
  4040  0063E8  0E09               	movlw	9
  4041  0063EA  6F7E               	movwf	___ftmul@cntr& (0+255),b
  4042  0063EC                     
  4043                           ; BSR set to: 0
  4044                           
  4045                           ; BSR set to: 0
  4046  0063EC  A171               	btfss	___ftmul@f1& (0+255),0,b
  4047  0063EE  D006               	goto	l3042
  4048                           
  4049                           ; BSR set to: 0
  4050  0063F0  5174               	movf	___ftmul@f2& (0+255),w,b
  4051  0063F2  277B               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4052  0063F4  5175               	movf	(___ftmul@f2+1)& (0+255),w,b
  4053  0063F6  237C               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4054  0063F8  5176               	movf	(___ftmul@f2+2)& (0+255),w,b
  4055  0063FA  237D               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4056  0063FC                     l3042:
  4057                           
  4058                           ; BSR set to: 0
  4059                           
  4060                           ; BSR set to: 0
  4061  0063FC  90D8               	bcf	status,0,c
  4062  0063FE  3373               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4063  006400  3372               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4064  006402  3371               	rrcf	___ftmul@f1& (0+255),f,b
  4065  006404  90D8               	bcf	status,0,c
  4066  006406  337D               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  4067  006408  337C               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  4068  00640A  337B               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  4069                           
  4070                           ; BSR set to: 0
  4071  00640C  2F7E               	decfsz	___ftmul@cntr& (0+255),f,b
  4072  00640E  D7EE               	goto	l3041
  4073                           
  4074                           ; BSR set to: 0
  4075                           
  4076                           ; BSR set to: 0
  4077  006410  C07B  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  4078  006414  C07C  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4079  006418  C07D  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4080  00641C  C07A  F063         	movff	___ftmul@exp,___ftpack@exp
  4081  006420  C07F  F064         	movff	___ftmul@sign,___ftpack@sign
  4082  006424  ECA5  F037         	call	___ftpack	;wreg free
  4083  006428  C060  F071         	movff	?___ftpack,?___ftmul
  4084  00642C  C061  F072         	movff	?___ftpack+1,?___ftmul+1
  4085  006430  C062  F073         	movff	?___ftpack+2,?___ftmul+2
  4086  006434  0012               	return	
  4087  006436                     __end_of___ftmul:
  4088                           	opt stack 0
  4089                           tblptru	equ	0xFF8
  4090                           tblptrh	equ	0xFF7
  4091                           tblptrl	equ	0xFF6
  4092                           tablat	equ	0xFF5
  4093                           intcon	equ	0xFF2
  4094                           postinc0	equ	0xFEE
  4095                           wreg	equ	0xFE8
  4096                           postdec2	equ	0xFDD
  4097                           fsr2h	equ	0xFDA
  4098                           fsr2l	equ	0xFD9
  4099                           status	equ	0xFD8
  4100                           
  4101 ;; *************** function ___ftpack *****************
  4102 ;; Defined at:
  4103 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  arg             3    0[BANK0 ] unsigned um
  4106 ;;  exp             1    3[BANK0 ] unsigned char 
  4107 ;;  sign            1    4[BANK0 ] unsigned char 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  3    0[BANK0 ] float 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4119 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;Total ram usage:        8 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    7
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		___ftmul
  4130 ;;		___lltoft
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text7
  4135  006F4A                     __ptext7:
  4136                           	opt stack 0
  4137  006F4A                     ___ftpack:
  4138                           	opt stack 22
  4139                           
  4140                           ;incstack = 0
  4141  006F4A  0100               	movlb	0	; () banked
  4142  006F4C  5163               	movf	___ftpack@exp& (0+255),w,b
  4143  006F4E  B4D8               	btfsc	status,2,c
  4144  006F50  D005               	goto	u13560
  4145                           
  4146                           ; BSR set to: 0
  4147  006F52  5160               	movf	___ftpack@arg& (0+255),w,b
  4148  006F54  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  4149  006F56  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  4150  006F58  A4D8               	btfss	status,2,c
  4151  006F5A  D00C               	goto	l2956
  4152  006F5C                     u13560:
  4153                           
  4154                           ; BSR set to: 0
  4155                           
  4156                           ; BSR set to: 0
  4157  006F5C  0E00               	movlw	0
  4158  006F5E  6F60               	movwf	?___ftpack& (0+255),b
  4159  006F60  0E00               	movlw	0
  4160  006F62  6F61               	movwf	(?___ftpack+1)& (0+255),b
  4161  006F64  0E00               	movlw	0
  4162  006F66  6F62               	movwf	(?___ftpack+2)& (0+255),b
  4163                           
  4164                           ; BSR set to: 0
  4165  006F68  0012               	return	
  4166  006F6A                     
  4167                           ; BSR set to: 0
  4168                           
  4169                           ; BSR set to: 0
  4170  006F6A  2B63               	incf	___ftpack@exp& (0+255),f,b
  4171  006F6C  90D8               	bcf	status,0,c
  4172  006F6E  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4173  006F70  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4174  006F72  3360               	rrcf	___ftpack@arg& (0+255),f,b
  4175  006F74                     l2956:
  4176                           
  4177                           ; BSR set to: 0
  4178                           
  4179                           ; BSR set to: 0
  4180  006F74  0E00               	movlw	0
  4181  006F76  1560               	andwf	___ftpack@arg& (0+255),w,b
  4182  006F78  6F65               	movwf	??___ftpack& (0+255),b
  4183  006F7A  0E00               	movlw	0
  4184  006F7C  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4185  006F7E  6F66               	movwf	(??___ftpack+1)& (0+255),b
  4186  006F80  0EFE               	movlw	254
  4187  006F82  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4188  006F84  6F67               	movwf	(??___ftpack+2)& (0+255),b
  4189  006F86  5165               	movf	??___ftpack& (0+255),w,b
  4190  006F88  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  4191  006F8A  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  4192  006F8C  B4D8               	btfsc	status,2,c
  4193  006F8E  D00C               	goto	l2959
  4194  006F90  D7EC               	goto	l2957
  4195  006F92                     
  4196                           ; BSR set to: 0
  4197                           
  4198                           ; BSR set to: 0
  4199  006F92  2B63               	incf	___ftpack@exp& (0+255),f,b
  4200                           
  4201                           ; BSR set to: 0
  4202  006F94  0E01               	movlw	1
  4203  006F96  2760               	addwf	___ftpack@arg& (0+255),f,b
  4204  006F98  0E00               	movlw	0
  4205  006F9A  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  4206  006F9C  0E00               	movlw	0
  4207  006F9E  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  4208  006FA0  90D8               	bcf	status,0,c
  4209  006FA2  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4210  006FA4  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4211  006FA6  3360               	rrcf	___ftpack@arg& (0+255),f,b
  4212  006FA8                     l2959:
  4213                           
  4214                           ; BSR set to: 0
  4215                           
  4216                           ; BSR set to: 0
  4217  006FA8  0E00               	movlw	0
  4218  006FAA  1560               	andwf	___ftpack@arg& (0+255),w,b
  4219  006FAC  6F65               	movwf	??___ftpack& (0+255),b
  4220  006FAE  0E00               	movlw	0
  4221  006FB0  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4222  006FB2  6F66               	movwf	(??___ftpack+1)& (0+255),b
  4223  006FB4  0EFF               	movlw	255
  4224  006FB6  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4225  006FB8  6F67               	movwf	(??___ftpack+2)& (0+255),b
  4226  006FBA  5165               	movf	??___ftpack& (0+255),w,b
  4227  006FBC  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  4228  006FBE  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  4229  006FC0  B4D8               	btfsc	status,2,c
  4230  006FC2  D006               	goto	l2962
  4231  006FC4  D7E6               	goto	l2960
  4232  006FC6                     
  4233                           ; BSR set to: 0
  4234                           
  4235                           ; BSR set to: 0
  4236  006FC6  0763               	decf	___ftpack@exp& (0+255),f,b
  4237  006FC8  90D8               	bcf	status,0,c
  4238  006FCA  3760               	rlcf	___ftpack@arg& (0+255),f,b
  4239  006FCC  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  4240  006FCE  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  4241  006FD0                     l2962:
  4242                           
  4243                           ; BSR set to: 0
  4244                           
  4245                           ; BSR set to: 0
  4246  006FD0  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  4247  006FD2  D003               	goto	u13600
  4248                           
  4249                           ; BSR set to: 0
  4250  006FD4  0E02               	movlw	2
  4251  006FD6  6163               	cpfslt	___ftpack@exp& (0+255),b
  4252  006FD8  D7F6               	goto	l2963
  4253  006FDA                     u13600:
  4254                           
  4255                           ; BSR set to: 0
  4256                           
  4257                           ; BSR set to: 0
  4258  006FDA  A163               	btfss	___ftpack@exp& (0+255),0,b
  4259                           
  4260                           ; BSR set to: 0
  4261  006FDC  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  4262                           
  4263                           ; BSR set to: 0
  4264                           
  4265                           ; BSR set to: 0
  4266  006FDE  90D8               	bcf	status,0,c
  4267  006FE0  3363               	rrcf	___ftpack@exp& (0+255),f,b
  4268  006FE2  5163               	movf	___ftpack@exp& (0+255),w,b
  4269  006FE4  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  4270                           
  4271                           ; BSR set to: 0
  4272  006FE6  5164               	movf	___ftpack@sign& (0+255),w,b
  4273  006FE8  A4D8               	btfss	status,2,c
  4274                           
  4275                           ; BSR set to: 0
  4276  006FEA  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  4277                           
  4278                           ; BSR set to: 0
  4279                           
  4280                           ; BSR set to: 0
  4281  006FEC  C060  F060         	movff	___ftpack@arg,?___ftpack
  4282  006FF0  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  4283  006FF4  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  4284  006FF8  0012               	return	
  4285  006FFA                     __end_of___ftpack:
  4286                           	opt stack 0
  4287                           tblptru	equ	0xFF8
  4288                           tblptrh	equ	0xFF7
  4289                           tblptrl	equ	0xFF6
  4290                           tablat	equ	0xFF5
  4291                           intcon	equ	0xFF2
  4292                           postinc0	equ	0xFEE
  4293                           wreg	equ	0xFE8
  4294                           postdec2	equ	0xFDD
  4295                           fsr2h	equ	0xFDA
  4296                           fsr2l	equ	0xFD9
  4297                           status	equ	0xFD8
  4298                           
  4299 ;; *************** function _TMR5_StartTimer *****************
  4300 ;; Defined at:
  4301 ;;		line 86 in file "mcc_generated_files/tmr5.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		None
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    7
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_main
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text8
  4330  0092C2                     __ptext8:
  4331                           	opt stack 0
  4332  0092C2                     _TMR5_StartTimer:
  4333                           	opt stack 23
  4334                           
  4335                           ;tmr5.c: 89: T5CONbits.TMR5ON = 1;
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;incstack = 0
  4339  0092C2  010F               	movlb	15	; () banked
  4340  0092C4  814E               	bsf	78,0,b	;volatile
  4341                           
  4342                           ; BSR set to: 15
  4343  0092C6  0012               	return		;funcret
  4344  0092C8                     __end_of_TMR5_StartTimer:
  4345                           	opt stack 0
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           intcon	equ	0xFF2
  4351                           postinc0	equ	0xFEE
  4352                           wreg	equ	0xFE8
  4353                           postdec2	equ	0xFDD
  4354                           fsr2h	equ	0xFDA
  4355                           fsr2l	equ	0xFD9
  4356                           status	equ	0xFD8
  4357                           
  4358 ;; *************** function _TMR5_HasOverflowOccured *****************
  4359 ;; Defined at:
  4360 ;;		line 151 in file "mcc_generated_files/tmr5.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;		None
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;		None
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1    wreg      unsigned char 
  4367 ;; Registers used:
  4368 ;;		wreg
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;Total ram usage:        0 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    7
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_main
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text9
  4389  0091CC                     __ptext9:
  4390                           	opt stack 0
  4391  0091CC                     _TMR5_HasOverflowOccured:
  4392                           	opt stack 23
  4393                           
  4394                           ;tmr5.c: 154: return(PIR5bits.TMR5IF);
  4395                           
  4396                           ; BSR set to: 15
  4397                           ;incstack = 0
  4398  0091CC  A27E               	btfss	3966,1,c	;volatile
  4399  0091CE  D002               	goto	u13890
  4400  0091D0  0E01               	movlw	1
  4401  0091D2  0012               	return	
  4402  0091D4                     u13890:
  4403  0091D4  0E00               	movlw	0
  4404  0091D6  0012               	return	
  4405  0091D8                     __end_of_TMR5_HasOverflowOccured:
  4406                           	opt stack 0
  4407                           tblptru	equ	0xFF8
  4408                           tblptrh	equ	0xFF7
  4409                           tblptrl	equ	0xFF6
  4410                           tablat	equ	0xFF5
  4411                           intcon	equ	0xFF2
  4412                           postinc0	equ	0xFEE
  4413                           wreg	equ	0xFE8
  4414                           postdec2	equ	0xFDD
  4415                           fsr2h	equ	0xFDA
  4416                           fsr2l	equ	0xFD9
  4417                           status	equ	0xFD8
  4418                           
  4419 ;; *************** function _SYSTEM_Initialize *****************
  4420 ;; Defined at:
  4421 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;Total ram usage:        0 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:   10
  4442 ;; This function calls:
  4443 ;;		_ADC_Initialize
  4444 ;;		_CCP5_Initialize
  4445 ;;		_EUSART1_Initialize
  4446 ;;		_EXT_INT_Initialize
  4447 ;;		_INTERRUPT_Initialize
  4448 ;;		_LORAWAN_PlatformInit
  4449 ;;		_OSCILLATOR_Initialize
  4450 ;;		_PIN_MANAGER_Initialize
  4451 ;;		_SPI2_Initialize
  4452 ;;		_TMR1_Initialize
  4453 ;;		_TMR5_Initialize
  4454 ;; This function is called by:
  4455 ;;		_main
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text10
  4460  008ABA                     __ptext10:
  4461                           	opt stack 0
  4462  008ABA                     _SYSTEM_Initialize:
  4463                           	opt stack 20
  4464                           
  4465                           ;mcc.c: 53: INTERRUPT_Initialize();
  4466                           
  4467                           ;incstack = 0
  4468  008ABA  EC78  F049         	call	_INTERRUPT_Initialize	;wreg free
  4469                           
  4470                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  4471  008ABE  EC33  F041         	call	_PIN_MANAGER_Initialize	;wreg free
  4472                           
  4473                           ;mcc.c: 55: OSCILLATOR_Initialize();
  4474  008AC2  ECD8  F048         	call	_OSCILLATOR_Initialize	;wreg free
  4475                           
  4476                           ;mcc.c: 56: SPI2_Initialize();
  4477  008AC6  ECD1  F048         	call	_SPI2_Initialize	;wreg free
  4478                           
  4479                           ;mcc.c: 57: ADC_Initialize();
  4480  008ACA  EC3C  F048         	call	_ADC_Initialize	;wreg free
  4481                           
  4482                           ;mcc.c: 58: CCP5_Initialize();
  4483  008ACE  ECB3  F048         	call	_CCP5_Initialize	;wreg free
  4484                           
  4485                           ;mcc.c: 59: TMR5_Initialize();
  4486  008AD2  ECC5  F047         	call	_TMR5_Initialize	;wreg free
  4487                           
  4488                           ;mcc.c: 60: EXT_INT_Initialize();
  4489  008AD6  EC14  F046         	call	_EXT_INT_Initialize	;wreg free
  4490                           
  4491                           ;mcc.c: 61: TMR1_Initialize();
  4492  008ADA  ECFE  F045         	call	_TMR1_Initialize	;wreg free
  4493                           
  4494                           ;mcc.c: 62: EUSART1_Initialize();
  4495  008ADE  EC4E  F042         	call	_EUSART1_Initialize	;wreg free
  4496                           
  4497                           ;mcc.c: 63: LORAWAN_PlatformInit();
  4498  008AE2  ECF1  F046         	call	_LORAWAN_PlatformInit	;wreg free
  4499  008AE6  0012               	return		;funcret
  4500  008AE8                     __end_of_SYSTEM_Initialize:
  4501                           	opt stack 0
  4502                           tblptru	equ	0xFF8
  4503                           tblptrh	equ	0xFF7
  4504                           tblptrl	equ	0xFF6
  4505                           tablat	equ	0xFF5
  4506                           intcon	equ	0xFF2
  4507                           postinc0	equ	0xFEE
  4508                           wreg	equ	0xFE8
  4509                           postdec2	equ	0xFDD
  4510                           fsr2h	equ	0xFDA
  4511                           fsr2l	equ	0xFD9
  4512                           status	equ	0xFD8
  4513                           
  4514 ;; *************** function _TMR5_Initialize *****************
  4515 ;; Defined at:
  4516 ;;		line 63 in file "mcc_generated_files/tmr5.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;Total ram usage:        0 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    7
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_SYSTEM_Initialize
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text11
  4545  008F8A                     __ptext11:
  4546                           	opt stack 0
  4547  008F8A                     _TMR5_Initialize:
  4548                           	opt stack 22
  4549                           
  4550                           ;tmr5.c: 68: T5GCON = 0x00;
  4551                           
  4552                           ;incstack = 0
  4553  008F8A  0E00               	movlw	0
  4554  008F8C  010F               	movlb	15	; () banked
  4555  008F8E  6F4D               	movwf	77,b	;volatile
  4556                           
  4557                           ;tmr5.c: 71: TMR5H = 0x10;
  4558  008F90  0E10               	movlw	16
  4559  008F92  6F50               	movwf	80,b	;volatile
  4560                           
  4561                           ;tmr5.c: 74: TMR5L = 0x00;
  4562  008F94  0E00               	movlw	0
  4563  008F96  6F4F               	movwf	79,b	;volatile
  4564                           
  4565                           ; BSR set to: 15
  4566                           ;tmr5.c: 77: timer5ReloadVal=TMR5;
  4567  008F98  CF4F F1DC          	movff	3919,_timer5ReloadVal	;volatile
  4568  008F9C  CF50 F1DD          	movff	3920,_timer5ReloadVal+1	;volatile
  4569                           
  4570                           ; BSR set to: 15
  4571                           ;tmr5.c: 80: PIR5bits.TMR5IF = 0;
  4572  008FA0  927E               	bcf	3966,1,c	;volatile
  4573                           
  4574                           ;tmr5.c: 83: T5CON = 0xBD;
  4575  008FA2  0EBD               	movlw	189
  4576  008FA4  6F4E               	movwf	78,b	;volatile
  4577                           
  4578                           ; BSR set to: 15
  4579  008FA6  0012               	return		;funcret
  4580  008FA8                     __end_of_TMR5_Initialize:
  4581                           	opt stack 0
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           intcon	equ	0xFF2
  4587                           postinc0	equ	0xFEE
  4588                           wreg	equ	0xFE8
  4589                           postdec2	equ	0xFDD
  4590                           fsr2h	equ	0xFDA
  4591                           fsr2l	equ	0xFD9
  4592                           status	equ	0xFD8
  4593                           
  4594 ;; *************** function _TMR1_Initialize *****************
  4595 ;; Defined at:
  4596 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, status,0, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;Total ram usage:        0 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    8
  4617 ;; This function calls:
  4618 ;;		_TMR1_SetInterruptHandler
  4619 ;; This function is called by:
  4620 ;;		_SYSTEM_Initialize
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text12
  4625  008BFC                     __ptext12:
  4626                           	opt stack 0
  4627  008BFC                     _TMR1_Initialize:
  4628                           	opt stack 21
  4629                           
  4630                           ;tmr1.c: 69: T1GCON = 0x00;
  4631                           
  4632                           ; BSR set to: 15
  4633                           ;incstack = 0
  4634  008BFC  0E00               	movlw	0
  4635  008BFE  6ECC               	movwf	4044,c	;volatile
  4636                           
  4637                           ;tmr1.c: 72: TMR1H = 0x00;
  4638  008C00  0E00               	movlw	0
  4639  008C02  6ECF               	movwf	4047,c	;volatile
  4640                           
  4641                           ;tmr1.c: 75: TMR1L = 0x00;
  4642  008C04  0E00               	movlw	0
  4643  008C06  6ECE               	movwf	4046,c	;volatile
  4644                           
  4645                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  4646  008C08  CFCE F1E6          	movff	4046,_timer1ReloadVal	;volatile
  4647  008C0C  CFCF F1E7          	movff	4047,_timer1ReloadVal+1	;volatile
  4648                           
  4649                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  4650  008C10  909E               	bcf	3998,0,c	;volatile
  4651                           
  4652                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  4653  008C12  809D               	bsf	3997,0,c	;volatile
  4654                           
  4655                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  4656  008C14  0E0E               	movlw	low _TMR1_DefaultInterruptHandler
  4657  008C16  0100               	movlb	0	; () banked
  4658  008C18  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  4659  008C1A  0E93               	movlw	high _TMR1_DefaultInterruptHandler
  4660  008C1C  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4661  008C1E  ECF2  F048         	call	_TMR1_SetInterruptHandler	;wreg free
  4662                           
  4663                           ;tmr1.c: 90: T1CON = 0x8D;
  4664  008C22  0E8D               	movlw	141
  4665  008C24  6ECD               	movwf	4045,c	;volatile
  4666  008C26  0012               	return		;funcret
  4667  008C28                     __end_of_TMR1_Initialize:
  4668                           	opt stack 0
  4669                           tblptru	equ	0xFF8
  4670                           tblptrh	equ	0xFF7
  4671                           tblptrl	equ	0xFF6
  4672                           tablat	equ	0xFF5
  4673                           intcon	equ	0xFF2
  4674                           postinc0	equ	0xFEE
  4675                           wreg	equ	0xFE8
  4676                           postdec2	equ	0xFDD
  4677                           fsr2h	equ	0xFDA
  4678                           fsr2l	equ	0xFD9
  4679                           status	equ	0xFD8
  4680                           
  4681 ;; *************** function _SPI2_Initialize *****************
  4682 ;; Defined at:
  4683 ;;		line 65 in file "mcc_generated_files/spi2.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		wreg, status,2
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    7
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_SYSTEM_Initialize
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text13
  4712  0091A2                     __ptext13:
  4713                           	opt stack 0
  4714  0091A2                     _SPI2_Initialize:
  4715                           	opt stack 22
  4716                           
  4717                           ;spi2.c: 70: SSP2STAT = 0x40;
  4718                           
  4719                           ;incstack = 0
  4720  0091A2  0E40               	movlw	64
  4721  0091A4  6E6D               	movwf	3949,c	;volatile
  4722                           
  4723                           ;spi2.c: 73: SSP2CON1 = 0x20;
  4724  0091A6  0E20               	movlw	32
  4725  0091A8  6E6C               	movwf	3948,c	;volatile
  4726                           
  4727                           ;spi2.c: 76: SSP2ADD = 0x00;
  4728  0091AA  0E00               	movlw	0
  4729  0091AC  6E6E               	movwf	3950,c	;volatile
  4730  0091AE  0012               	return		;funcret
  4731  0091B0                     __end_of_SPI2_Initialize:
  4732                           	opt stack 0
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           intcon	equ	0xFF2
  4738                           postinc0	equ	0xFEE
  4739                           wreg	equ	0xFE8
  4740                           postdec2	equ	0xFDD
  4741                           fsr2h	equ	0xFDA
  4742                           fsr2l	equ	0xFD9
  4743                           status	equ	0xFD8
  4744                           
  4745 ;; *************** function _PIN_MANAGER_Initialize *****************
  4746 ;; Defined at:
  4747 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;Total ram usage:        0 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    8
  4768 ;; This function calls:
  4769 ;;		_IOCB4_SetInterruptHandler
  4770 ;; This function is called by:
  4771 ;;		_SYSTEM_Initialize
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text14
  4776  008266                     __ptext14:
  4777                           	opt stack 0
  4778  008266                     _PIN_MANAGER_Initialize:
  4779                           	opt stack 21
  4780                           
  4781                           ;pin_manager.c: 62: LATE = 0x00;
  4782                           
  4783                           ;incstack = 0
  4784  008266  0E00               	movlw	0
  4785  008268  6E8D               	movwf	3981,c	;volatile
  4786                           
  4787                           ;pin_manager.c: 63: LATD = 0x00;
  4788  00826A  0E00               	movlw	0
  4789  00826C  6E8C               	movwf	3980,c	;volatile
  4790                           
  4791                           ;pin_manager.c: 64: LATA = 0x00;
  4792  00826E  0E00               	movlw	0
  4793  008270  6E89               	movwf	3977,c	;volatile
  4794                           
  4795                           ;pin_manager.c: 65: LATB = 0x00;
  4796  008272  0E00               	movlw	0
  4797  008274  6E8A               	movwf	3978,c	;volatile
  4798                           
  4799                           ;pin_manager.c: 66: LATC = 0x00;
  4800  008276  0E00               	movlw	0
  4801  008278  6E8B               	movwf	3979,c	;volatile
  4802                           
  4803                           ;pin_manager.c: 71: TRISE = 0x07;
  4804  00827A  0E07               	movlw	7
  4805  00827C  6E96               	movwf	3990,c	;volatile
  4806                           
  4807                           ;pin_manager.c: 72: TRISA = 0xFF;
  4808  00827E  6892               	setf	3986,c	;volatile
  4809                           
  4810                           ;pin_manager.c: 73: TRISB = 0xFF;
  4811  008280  6893               	setf	3987,c	;volatile
  4812                           
  4813                           ;pin_manager.c: 74: TRISC = 0xBE;
  4814  008282  0EBE               	movlw	190
  4815  008284  6E94               	movwf	3988,c	;volatile
  4816                           
  4817                           ;pin_manager.c: 75: TRISD = 0xE6;
  4818  008286  0EE6               	movlw	230
  4819  008288  6E95               	movwf	3989,c	;volatile
  4820                           
  4821                           ;pin_manager.c: 80: ANSELD = 0xE4;
  4822  00828A  0EE4               	movlw	228
  4823  00828C  010F               	movlb	15	; () banked
  4824  00828E  6F3B               	movwf	59,b	;volatile
  4825                           
  4826                           ;pin_manager.c: 81: ANSELC = 0x38;
  4827  008290  0E38               	movlw	56
  4828  008292  6F3A               	movwf	58,b	;volatile
  4829                           
  4830                           ;pin_manager.c: 82: ANSELB = 0x28;
  4831  008294  0E28               	movlw	40
  4832  008296  6F39               	movwf	57,b	;volatile
  4833                           
  4834                           ;pin_manager.c: 83: ANSELE = 0x07;
  4835  008298  0E07               	movlw	7
  4836  00829A  6F3C               	movwf	60,b	;volatile
  4837                           
  4838                           ;pin_manager.c: 84: ANSELA = 0x2F;
  4839  00829C  0E2F               	movlw	47
  4840  00829E  6F38               	movwf	56,b	;volatile
  4841                           
  4842                           ;pin_manager.c: 89: WPUB = 0x00;
  4843  0082A0  0E00               	movlw	0
  4844  0082A2  6E61               	movwf	3937,c	;volatile
  4845                           
  4846                           ; BSR set to: 15
  4847                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  4848  0082A4  8EF1               	bsf	intcon2,7,c	;volatile
  4849                           
  4850                           ; BSR set to: 15
  4851                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  4852  0082A6  8862               	bsf	3938,4,c	;volatile
  4853                           
  4854                           ; BSR set to: 15
  4855                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  4856  0082A8  0E10               	movlw	low _IOCB4_DefaultInterruptHandler
  4857  0082AA  0100               	movlb	0	; () banked
  4858  0082AC  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  4859  0082AE  0E93               	movlw	high _IOCB4_DefaultInterruptHandler
  4860  0082B0  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4861  0082B2  ECF7  F048         	call	_IOCB4_SetInterruptHandler	;wreg free
  4862                           
  4863                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  4864  0082B6  86F2               	bsf	intcon,3,c	;volatile
  4865  0082B8  0012               	return		;funcret
  4866  0082BA                     __end_of_PIN_MANAGER_Initialize:
  4867                           	opt stack 0
  4868                           tblptru	equ	0xFF8
  4869                           tblptrh	equ	0xFF7
  4870                           tblptrl	equ	0xFF6
  4871                           tablat	equ	0xFF5
  4872                           intcon	equ	0xFF2
  4873                           intcon2	equ	0xFF1
  4874                           postinc0	equ	0xFEE
  4875                           wreg	equ	0xFE8
  4876                           postdec2	equ	0xFDD
  4877                           fsr2h	equ	0xFDA
  4878                           fsr2l	equ	0xFD9
  4879                           status	equ	0xFD8
  4880                           
  4881 ;; *************** function _OSCILLATOR_Initialize *****************
  4882 ;; Defined at:
  4883 ;;		line 66 in file "mcc_generated_files/mcc.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;		None
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  1    wreg      void 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;Total ram usage:        0 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    7
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_SYSTEM_Initialize
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text15
  4912  0091B0                     __ptext15:
  4913                           	opt stack 0
  4914  0091B0                     _OSCILLATOR_Initialize:
  4915                           	opt stack 22
  4916                           
  4917                           ;mcc.c: 69: OSCCON = 0x70;
  4918                           
  4919                           ;incstack = 0
  4920  0091B0  0E70               	movlw	112
  4921  0091B2  6ED3               	movwf	4051,c	;volatile
  4922                           
  4923                           ;mcc.c: 71: OSCCON2 = 0x04;
  4924  0091B4  0E04               	movlw	4
  4925  0091B6  6ED2               	movwf	4050,c	;volatile
  4926                           
  4927                           ;mcc.c: 73: OSCTUNE = 0x00;
  4928  0091B8  0E00               	movlw	0
  4929  0091BA  6E9B               	movwf	3995,c	;volatile
  4930  0091BC  0012               	return		;funcret
  4931  0091BE                     __end_of_OSCILLATOR_Initialize:
  4932                           	opt stack 0
  4933                           tblptru	equ	0xFF8
  4934                           tblptrh	equ	0xFF7
  4935                           tblptrl	equ	0xFF6
  4936                           tablat	equ	0xFF5
  4937                           intcon	equ	0xFF2
  4938                           intcon2	equ	0xFF1
  4939                           postinc0	equ	0xFEE
  4940                           wreg	equ	0xFE8
  4941                           postdec2	equ	0xFDD
  4942                           fsr2h	equ	0xFDA
  4943                           fsr2l	equ	0xFD9
  4944                           status	equ	0xFD8
  4945                           
  4946 ;; *************** function _LORAWAN_PlatformInit *****************
  4947 ;; Defined at:
  4948 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0, cstack
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;Total ram usage:        0 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    9
  4969 ;; This function calls:
  4970 ;;		_DIO0_ISR_Lora_Init
  4971 ;;		_DIO1_ISR_Lora_Init
  4972 ;;		_DIO2_ISR_Lora_Init
  4973 ;;		_DIO3_ISR_Lora_Init
  4974 ;;		_DIO4_ISR_Lora_Init
  4975 ;;		_DIO5_ISR_Lora_Init
  4976 ;;		_SystemTimerInit
  4977 ;;		_TMR_ISR_Lora_Init
  4978 ;; This function is called by:
  4979 ;;		_SYSTEM_Initialize
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text16
  4984  008DE2                     __ptext16:
  4985                           	opt stack 0
  4986  008DE2                     _LORAWAN_PlatformInit:
  4987                           	opt stack 20
  4988                           
  4989                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
  4990                           
  4991                           ;incstack = 0
  4992  008DE2  EC93  F048         	call	_TMR_ISR_Lora_Init	;wreg free
  4993                           
  4994                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
  4995  008DE6  ECAB  F048         	call	_DIO0_ISR_Lora_Init	;wreg free
  4996                           
  4997                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
  4998  008DEA  ECA3  F048         	call	_DIO1_ISR_Lora_Init	;wreg free
  4999                           
  5000                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
  5001  008DEE  EC9B  F048         	call	_DIO2_ISR_Lora_Init	;wreg free
  5002                           
  5003                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
  5004  008DF2  EC84  F049         	call	_DIO3_ISR_Lora_Init	;wreg free
  5005                           
  5006                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
  5007  008DF6  EC83  F049         	call	_DIO4_ISR_Lora_Init	;wreg free
  5008                           
  5009                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
  5010  008DFA  EC82  F049         	call	_DIO5_ISR_Lora_Init	;wreg free
  5011                           
  5012                           ;lorawan_init.c: 82: SystemTimerInit();
  5013  008DFE  EC55  F049         	call	_SystemTimerInit	;wreg free
  5014  008E02  0012               	return		;funcret
  5015  008E04                     __end_of_LORAWAN_PlatformInit:
  5016                           	opt stack 0
  5017                           tblptru	equ	0xFF8
  5018                           tblptrh	equ	0xFF7
  5019                           tblptrl	equ	0xFF6
  5020                           tablat	equ	0xFF5
  5021                           intcon	equ	0xFF2
  5022                           intcon2	equ	0xFF1
  5023                           postinc0	equ	0xFEE
  5024                           wreg	equ	0xFE8
  5025                           postdec2	equ	0xFDD
  5026                           fsr2h	equ	0xFDA
  5027                           fsr2l	equ	0xFD9
  5028                           status	equ	0xFD8
  5029                           
  5030 ;; *************** function _TMR_ISR_Lora_Init *****************
  5031 ;; Defined at:
  5032 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5050 ;;Total ram usage:        0 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    8
  5053 ;; This function calls:
  5054 ;;		_TMR1_SetInterruptHandler
  5055 ;; This function is called by:
  5056 ;;		_LORAWAN_PlatformInit
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text17
  5061  009126                     __ptext17:
  5062                           	opt stack 0
  5063  009126                     _TMR_ISR_Lora_Init:
  5064                           	opt stack 20
  5065                           
  5066                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  5067                           
  5068                           ;incstack = 0
  5069  009126  0E10               	movlw	low _TMR_ISR_lora
  5070  009128  0100               	movlb	0	; () banked
  5071  00912A  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  5072  00912C  0E82               	movlw	high _TMR_ISR_lora
  5073  00912E  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5074  009130  ECF2  F048         	call	_TMR1_SetInterruptHandler	;wreg free
  5075  009134  0012               	return		;funcret
  5076  009136                     __end_of_TMR_ISR_Lora_Init:
  5077                           	opt stack 0
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           intcon	equ	0xFF2
  5083                           intcon2	equ	0xFF1
  5084                           postinc0	equ	0xFEE
  5085                           wreg	equ	0xFE8
  5086                           postdec2	equ	0xFDD
  5087                           fsr2h	equ	0xFDA
  5088                           fsr2l	equ	0xFD9
  5089                           status	equ	0xFD8
  5090                           
  5091 ;; *************** function _TMR1_SetInterruptHandler *****************
  5092 ;; Defined at:
  5093 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5096 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5108 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;Total ram usage:        2 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    7
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_TMR_ISR_Lora_Init
  5119 ;;		_TMR1_Initialize
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text18
  5124  0091E4                     __ptext18:
  5125                           	opt stack 0
  5126  0091E4                     _TMR1_SetInterruptHandler:
  5127                           	opt stack 21
  5128                           
  5129                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  5130                           
  5131                           ;incstack = 0
  5132  0091E4  C060  F1E4         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  5133  0091E8  C061  F1E5         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  5134  0091EC  0012               	return		;funcret
  5135  0091EE                     __end_of_TMR1_SetInterruptHandler:
  5136                           	opt stack 0
  5137                           tblptru	equ	0xFF8
  5138                           tblptrh	equ	0xFF7
  5139                           tblptrl	equ	0xFF6
  5140                           tablat	equ	0xFF5
  5141                           intcon	equ	0xFF2
  5142                           intcon2	equ	0xFF1
  5143                           postinc0	equ	0xFEE
  5144                           wreg	equ	0xFE8
  5145                           postdec2	equ	0xFDD
  5146                           fsr2h	equ	0xFDA
  5147                           fsr2l	equ	0xFD9
  5148                           status	equ	0xFD8
  5149                           
  5150 ;; *************** function _SystemTimerInit *****************
  5151 ;; Defined at:
  5152 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;Total ram usage:        0 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    7
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_LORAWAN_PlatformInit
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text19
  5181  0092AA                     __ptext19:
  5182                           	opt stack 0
  5183  0092AA                     _SystemTimerInit:
  5184                           	opt stack 21
  5185                           
  5186                           ;sw_timer.c: 137: allocatedTimers = 0;
  5187                           
  5188                           ;incstack = 0
  5189  0092AA  0E00               	movlw	0
  5190  0092AC  0100               	movlb	0	; () banked
  5191  0092AE  6FF9               	movwf	_allocatedTimers& (0+255),b	;volatile
  5192                           
  5193                           ; BSR set to: 0
  5194  0092B0  0012               	return		;funcret
  5195  0092B2                     __end_of_SystemTimerInit:
  5196                           	opt stack 0
  5197                           tblptru	equ	0xFF8
  5198                           tblptrh	equ	0xFF7
  5199                           tblptrl	equ	0xFF6
  5200                           tablat	equ	0xFF5
  5201                           intcon	equ	0xFF2
  5202                           intcon2	equ	0xFF1
  5203                           postinc0	equ	0xFEE
  5204                           wreg	equ	0xFE8
  5205                           postdec2	equ	0xFDD
  5206                           fsr2h	equ	0xFDA
  5207                           fsr2l	equ	0xFD9
  5208                           status	equ	0xFD8
  5209                           
  5210 ;; *************** function _DIO5_ISR_Lora_Init *****************
  5211 ;; Defined at:
  5212 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;		None
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;		None
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      void 
  5219 ;; Registers used:
  5220 ;;		None
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;Total ram usage:        0 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    7
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_LORAWAN_PlatformInit
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text20
  5241  009304                     __ptext20:
  5242                           	opt stack 0
  5243  009304                     _DIO5_ISR_Lora_Init:
  5244                           	opt stack 21
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;incstack = 0
  5248  009304  0012               	return		;funcret
  5249  009306                     __end_of_DIO5_ISR_Lora_Init:
  5250                           	opt stack 0
  5251                           tblptru	equ	0xFF8
  5252                           tblptrh	equ	0xFF7
  5253                           tblptrl	equ	0xFF6
  5254                           tablat	equ	0xFF5
  5255                           intcon	equ	0xFF2
  5256                           intcon2	equ	0xFF1
  5257                           postinc0	equ	0xFEE
  5258                           wreg	equ	0xFE8
  5259                           postdec2	equ	0xFDD
  5260                           fsr2h	equ	0xFDA
  5261                           fsr2l	equ	0xFD9
  5262                           status	equ	0xFD8
  5263                           
  5264 ;; *************** function _DIO4_ISR_Lora_Init *****************
  5265 ;; Defined at:
  5266 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;		None
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;		None
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		None
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;Total ram usage:        0 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    7
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_LORAWAN_PlatformInit
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text21
  5295  009306                     __ptext21:
  5296                           	opt stack 0
  5297  009306                     _DIO4_ISR_Lora_Init:
  5298                           	opt stack 21
  5299                           
  5300                           ;incstack = 0
  5301  009306  0012               	return		;funcret
  5302  009308                     __end_of_DIO4_ISR_Lora_Init:
  5303                           	opt stack 0
  5304                           tblptru	equ	0xFF8
  5305                           tblptrh	equ	0xFF7
  5306                           tblptrl	equ	0xFF6
  5307                           tablat	equ	0xFF5
  5308                           intcon	equ	0xFF2
  5309                           intcon2	equ	0xFF1
  5310                           postinc0	equ	0xFEE
  5311                           wreg	equ	0xFE8
  5312                           postdec2	equ	0xFDD
  5313                           fsr2h	equ	0xFDA
  5314                           fsr2l	equ	0xFD9
  5315                           status	equ	0xFD8
  5316                           
  5317 ;; *************** function _DIO3_ISR_Lora_Init *****************
  5318 ;; Defined at:
  5319 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;		None
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;		None
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		None
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;Total ram usage:        0 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    7
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_LORAWAN_PlatformInit
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text22
  5348  009308                     __ptext22:
  5349                           	opt stack 0
  5350  009308                     _DIO3_ISR_Lora_Init:
  5351                           	opt stack 21
  5352                           
  5353                           ;incstack = 0
  5354  009308  0012               	return		;funcret
  5355  00930A                     __end_of_DIO3_ISR_Lora_Init:
  5356                           	opt stack 0
  5357                           tblptru	equ	0xFF8
  5358                           tblptrh	equ	0xFF7
  5359                           tblptrl	equ	0xFF6
  5360                           tablat	equ	0xFF5
  5361                           intcon	equ	0xFF2
  5362                           intcon2	equ	0xFF1
  5363                           postinc0	equ	0xFEE
  5364                           wreg	equ	0xFE8
  5365                           postdec2	equ	0xFDD
  5366                           fsr2h	equ	0xFDA
  5367                           fsr2l	equ	0xFD9
  5368                           status	equ	0xFD8
  5369                           
  5370 ;; *************** function _DIO2_ISR_Lora_Init *****************
  5371 ;; Defined at:
  5372 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;		None
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;		None
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  1    wreg      void 
  5379 ;; Registers used:
  5380 ;;		wreg, status,2, status,0, cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;Total ram usage:        0 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:    8
  5393 ;; This function calls:
  5394 ;;		_IOCB4_SetInterruptHandler
  5395 ;; This function is called by:
  5396 ;;		_LORAWAN_PlatformInit
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text23
  5401  009136                     __ptext23:
  5402                           	opt stack 0
  5403  009136                     _DIO2_ISR_Lora_Init:
  5404                           	opt stack 20
  5405                           
  5406                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  5407                           
  5408                           ;incstack = 0
  5409  009136  0EDA               	movlw	low _DIO2_ISR_Lora
  5410  009138  0100               	movlb	0	; () banked
  5411  00913A  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  5412  00913C  0E92               	movlw	high _DIO2_ISR_Lora
  5413  00913E  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5414  009140  ECF7  F048         	call	_IOCB4_SetInterruptHandler	;wreg free
  5415  009144  0012               	return		;funcret
  5416  009146                     __end_of_DIO2_ISR_Lora_Init:
  5417                           	opt stack 0
  5418                           tblptru	equ	0xFF8
  5419                           tblptrh	equ	0xFF7
  5420                           tblptrl	equ	0xFF6
  5421                           tablat	equ	0xFF5
  5422                           intcon	equ	0xFF2
  5423                           intcon2	equ	0xFF1
  5424                           postinc0	equ	0xFEE
  5425                           wreg	equ	0xFE8
  5426                           postdec2	equ	0xFDD
  5427                           fsr2h	equ	0xFDA
  5428                           fsr2l	equ	0xFD9
  5429                           status	equ	0xFD8
  5430                           
  5431 ;; *************** function _IOCB4_SetInterruptHandler *****************
  5432 ;; Defined at:
  5433 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5436 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;		None
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      void 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;Total ram usage:        2 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    7
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_DIO2_ISR_Lora_Init
  5459 ;;		_PIN_MANAGER_Initialize
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text24
  5464  0091EE                     __ptext24:
  5465                           	opt stack 0
  5466  0091EE                     _IOCB4_SetInterruptHandler:
  5467                           	opt stack 21
  5468                           
  5469                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  5470                           
  5471                           ;incstack = 0
  5472  0091EE  C060  F1E8         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  5473  0091F2  C061  F1E9         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  5474  0091F6  0012               	return		;funcret
  5475  0091F8                     __end_of_IOCB4_SetInterruptHandler:
  5476                           	opt stack 0
  5477                           tblptru	equ	0xFF8
  5478                           tblptrh	equ	0xFF7
  5479                           tblptrl	equ	0xFF6
  5480                           tablat	equ	0xFF5
  5481                           intcon	equ	0xFF2
  5482                           intcon2	equ	0xFF1
  5483                           postinc0	equ	0xFEE
  5484                           wreg	equ	0xFE8
  5485                           postdec2	equ	0xFDD
  5486                           fsr2h	equ	0xFDA
  5487                           fsr2l	equ	0xFD9
  5488                           status	equ	0xFD8
  5489                           
  5490 ;; *************** function _DIO1_ISR_Lora_Init *****************
  5491 ;; Defined at:
  5492 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;Total ram usage:        0 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    8
  5513 ;; This function calls:
  5514 ;;		_INT2_SetInterruptHandler
  5515 ;; This function is called by:
  5516 ;;		_LORAWAN_PlatformInit
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text25
  5521  009146                     __ptext25:
  5522                           	opt stack 0
  5523  009146                     _DIO1_ISR_Lora_Init:
  5524                           	opt stack 20
  5525                           
  5526                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  5527                           
  5528                           ;incstack = 0
  5529  009146  0EE0               	movlw	low _DIO1_ISR_Lora
  5530  009148  0100               	movlb	0	; () banked
  5531  00914A  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  5532  00914C  0E92               	movlw	high _DIO1_ISR_Lora
  5533  00914E  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5534  009150  ECFC  F048         	call	_INT2_SetInterruptHandler	;wreg free
  5535  009154  0012               	return		;funcret
  5536  009156                     __end_of_DIO1_ISR_Lora_Init:
  5537                           	opt stack 0
  5538                           tblptru	equ	0xFF8
  5539                           tblptrh	equ	0xFF7
  5540                           tblptrl	equ	0xFF6
  5541                           tablat	equ	0xFF5
  5542                           intcon	equ	0xFF2
  5543                           intcon2	equ	0xFF1
  5544                           postinc0	equ	0xFEE
  5545                           wreg	equ	0xFE8
  5546                           postdec2	equ	0xFDD
  5547                           fsr2h	equ	0xFDA
  5548                           fsr2l	equ	0xFD9
  5549                           status	equ	0xFD8
  5550                           
  5551 ;; *************** function _DIO0_ISR_Lora_Init *****************
  5552 ;; Defined at:
  5553 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2, status,0, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    8
  5574 ;; This function calls:
  5575 ;;		_INT1_SetInterruptHandler
  5576 ;; This function is called by:
  5577 ;;		_LORAWAN_PlatformInit
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text26
  5582  009156                     __ptext26:
  5583                           	opt stack 0
  5584  009156                     _DIO0_ISR_Lora_Init:
  5585                           	opt stack 20
  5586                           
  5587                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  5588                           
  5589                           ;incstack = 0
  5590  009156  0EE6               	movlw	low _DIO0_ISR_Lora
  5591  009158  0100               	movlb	0	; () banked
  5592  00915A  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  5593  00915C  0E92               	movlw	high _DIO0_ISR_Lora
  5594  00915E  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5595  009160  EC01  F049         	call	_INT1_SetInterruptHandler	;wreg free
  5596  009164  0012               	return		;funcret
  5597  009166                     __end_of_DIO0_ISR_Lora_Init:
  5598                           	opt stack 0
  5599                           tblptru	equ	0xFF8
  5600                           tblptrh	equ	0xFF7
  5601                           tblptrl	equ	0xFF6
  5602                           tablat	equ	0xFF5
  5603                           intcon	equ	0xFF2
  5604                           intcon2	equ	0xFF1
  5605                           postinc0	equ	0xFEE
  5606                           wreg	equ	0xFE8
  5607                           postdec2	equ	0xFDD
  5608                           fsr2h	equ	0xFDA
  5609                           fsr2l	equ	0xFD9
  5610                           status	equ	0xFD8
  5611                           
  5612 ;; *************** function _INTERRUPT_Initialize *****************
  5613 ;; Defined at:
  5614 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;		None
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;		None
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      void 
  5621 ;; Registers used:
  5622 ;;		None
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;Total ram usage:        0 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    7
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_SYSTEM_Initialize
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text27
  5643  0092F0                     __ptext27:
  5644                           	opt stack 0
  5645  0092F0                     _INTERRUPT_Initialize:
  5646                           	opt stack 22
  5647                           
  5648                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  5649                           
  5650                           ;incstack = 0
  5651  0092F0  9ED0               	bcf	4048,7,c	;volatile
  5652  0092F2  0012               	return		;funcret
  5653  0092F4                     __end_of_INTERRUPT_Initialize:
  5654                           	opt stack 0
  5655                           tblptru	equ	0xFF8
  5656                           tblptrh	equ	0xFF7
  5657                           tblptrl	equ	0xFF6
  5658                           tablat	equ	0xFF5
  5659                           intcon	equ	0xFF2
  5660                           intcon2	equ	0xFF1
  5661                           postinc0	equ	0xFEE
  5662                           wreg	equ	0xFE8
  5663                           postdec2	equ	0xFDD
  5664                           fsr2h	equ	0xFDA
  5665                           fsr2l	equ	0xFD9
  5666                           status	equ	0xFD8
  5667                           
  5668 ;; *************** function _EXT_INT_Initialize *****************
  5669 ;; Defined at:
  5670 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;		None
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      void 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;Total ram usage:        0 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    8
  5691 ;; This function calls:
  5692 ;;		_INT1_SetInterruptHandler
  5693 ;;		_INT2_SetInterruptHandler
  5694 ;; This function is called by:
  5695 ;;		_SYSTEM_Initialize
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text28
  5700  008C28                     __ptext28:
  5701                           	opt stack 0
  5702  008C28                     _EXT_INT_Initialize:
  5703                           	opt stack 21
  5704                           
  5705                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  5706                           
  5707                           ;incstack = 0
  5708  008C28  90F0               	bcf	intcon3,0,c	;volatile
  5709                           
  5710                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  5711  008C2A  8AF1               	bsf	intcon2,5,c	;volatile
  5712                           
  5713                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  5714  008C2C  0E14               	movlw	low _INT1_DefaultInterruptHandler
  5715  008C2E  0100               	movlb	0	; () banked
  5716  008C30  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  5717  008C32  0E93               	movlw	high _INT1_DefaultInterruptHandler
  5718  008C34  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5719  008C36  EC01  F049         	call	_INT1_SetInterruptHandler	;wreg free
  5720                           
  5721                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  5722  008C3A  86F0               	bsf	intcon3,3,c	;volatile
  5723                           
  5724                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  5725  008C3C  92F0               	bcf	intcon3,1,c	;volatile
  5726                           
  5727                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  5728  008C3E  88F1               	bsf	intcon2,4,c	;volatile
  5729                           
  5730                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  5731  008C40  0E12               	movlw	low _INT2_DefaultInterruptHandler
  5732  008C42  0100               	movlb	0	; () banked
  5733  008C44  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  5734  008C46  0E93               	movlw	high _INT2_DefaultInterruptHandler
  5735  008C48  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5736  008C4A  ECFC  F048         	call	_INT2_SetInterruptHandler	;wreg free
  5737                           
  5738                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  5739  008C4E  88F0               	bsf	intcon3,4,c	;volatile
  5740  008C50  0012               	return		;funcret
  5741  008C52                     __end_of_EXT_INT_Initialize:
  5742                           	opt stack 0
  5743                           tblptru	equ	0xFF8
  5744                           tblptrh	equ	0xFF7
  5745                           tblptrl	equ	0xFF6
  5746                           tablat	equ	0xFF5
  5747                           intcon	equ	0xFF2
  5748                           intcon2	equ	0xFF1
  5749                           intcon3	equ	0xFF0
  5750                           postinc0	equ	0xFEE
  5751                           wreg	equ	0xFE8
  5752                           postdec2	equ	0xFDD
  5753                           fsr2h	equ	0xFDA
  5754                           fsr2l	equ	0xFD9
  5755                           status	equ	0xFD8
  5756                           
  5757 ;; *************** function _INT2_SetInterruptHandler *****************
  5758 ;; Defined at:
  5759 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5762 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;		None
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  1    wreg      void 
  5767 ;; Registers used:
  5768 ;;		wreg, status,2, status,0
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5774 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;Total ram usage:        2 bytes
  5779 ;; Hardware stack levels used:    1
  5780 ;; Hardware stack levels required when called:    7
  5781 ;; This function calls:
  5782 ;;		Nothing
  5783 ;; This function is called by:
  5784 ;;		_DIO1_ISR_Lora_Init
  5785 ;;		_EXT_INT_Initialize
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text29
  5790  0091F8                     __ptext29:
  5791                           	opt stack 0
  5792  0091F8                     _INT2_SetInterruptHandler:
  5793                           	opt stack 20
  5794                           
  5795                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  5796                           
  5797                           ;incstack = 0
  5798  0091F8  C060  F1EA         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  5799  0091FC  C061  F1EB         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  5800  009200  0012               	return		;funcret
  5801  009202                     __end_of_INT2_SetInterruptHandler:
  5802                           	opt stack 0
  5803                           tblptru	equ	0xFF8
  5804                           tblptrh	equ	0xFF7
  5805                           tblptrl	equ	0xFF6
  5806                           tablat	equ	0xFF5
  5807                           intcon	equ	0xFF2
  5808                           intcon2	equ	0xFF1
  5809                           intcon3	equ	0xFF0
  5810                           postinc0	equ	0xFEE
  5811                           wreg	equ	0xFE8
  5812                           postdec2	equ	0xFDD
  5813                           fsr2h	equ	0xFDA
  5814                           fsr2l	equ	0xFD9
  5815                           status	equ	0xFD8
  5816                           
  5817 ;; *************** function _INT1_SetInterruptHandler *****************
  5818 ;; Defined at:
  5819 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5822 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		wreg, status,2, status,0
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5834 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5837 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;Total ram usage:        2 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    7
  5841 ;; This function calls:
  5842 ;;		Nothing
  5843 ;; This function is called by:
  5844 ;;		_DIO0_ISR_Lora_Init
  5845 ;;		_EXT_INT_Initialize
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text30
  5850  009202                     __ptext30:
  5851                           	opt stack 0
  5852  009202                     _INT1_SetInterruptHandler:
  5853                           	opt stack 20
  5854                           
  5855                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  5856                           
  5857                           ;incstack = 0
  5858  009202  C060  F1EC         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  5859  009206  C061  F1ED         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  5860  00920A  0012               	return		;funcret
  5861  00920C                     __end_of_INT1_SetInterruptHandler:
  5862                           	opt stack 0
  5863                           tblptru	equ	0xFF8
  5864                           tblptrh	equ	0xFF7
  5865                           tblptrl	equ	0xFF6
  5866                           tablat	equ	0xFF5
  5867                           intcon	equ	0xFF2
  5868                           intcon2	equ	0xFF1
  5869                           intcon3	equ	0xFF0
  5870                           postinc0	equ	0xFEE
  5871                           wreg	equ	0xFE8
  5872                           postdec2	equ	0xFDD
  5873                           fsr2h	equ	0xFDA
  5874                           fsr2l	equ	0xFD9
  5875                           status	equ	0xFD8
  5876                           
  5877 ;; *************** function _EUSART1_Initialize *****************
  5878 ;; Defined at:
  5879 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;		None
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;		None
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      void 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2, status,0, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;Total ram usage:        0 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    8
  5900 ;; This function calls:
  5901 ;;		_EUSART1_SetErrorHandler
  5902 ;;		_EUSART1_SetFramingErrorHandler
  5903 ;;		_EUSART1_SetOverrunErrorHandler
  5904 ;; This function is called by:
  5905 ;;		_SYSTEM_Initialize
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text31
  5910  00849C                     __ptext31:
  5911                           	opt stack 0
  5912  00849C                     _EUSART1_Initialize:
  5913                           	opt stack 21
  5914                           
  5915                           ;eusart1.c: 71: BAUDCON1 = 0x08;
  5916                           
  5917                           ;incstack = 0
  5918  00849C  0E08               	movlw	8
  5919  00849E  6EB8               	movwf	4024,c	;volatile
  5920                           
  5921                           ;eusart1.c: 74: RCSTA1 = 0x90;
  5922  0084A0  0E90               	movlw	144
  5923  0084A2  6EAB               	movwf	4011,c	;volatile
  5924                           
  5925                           ;eusart1.c: 77: TXSTA1 = 0x24;
  5926  0084A4  0E24               	movlw	36
  5927  0084A6  6EAC               	movwf	4012,c	;volatile
  5928                           
  5929                           ;eusart1.c: 80: SPBRG1 = 0xA0;
  5930  0084A8  0EA0               	movlw	160
  5931  0084AA  6EAF               	movwf	4015,c	;volatile
  5932                           
  5933                           ;eusart1.c: 83: SPBRGH1 = 0x01;
  5934  0084AC  0E01               	movlw	1
  5935  0084AE  6EB0               	movwf	4016,c	;volatile
  5936                           
  5937                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  5938  0084B0  0E00               	movlw	0
  5939  0084B2  0100               	movlb	0	; () banked
  5940  0084B4  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  5941  0084B6  0E00               	movlw	0
  5942  0084B8  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  5943  0084BA  EC0B  F049         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5944                           
  5945                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  5946  0084BE  0E00               	movlw	0
  5947  0084C0  0100               	movlb	0	; () banked
  5948  0084C2  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  5949  0084C4  0E00               	movlw	0
  5950  0084C6  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  5951  0084C8  EC06  F049         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5952                           
  5953                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  5954  0084CC  0E00               	movlw	0
  5955  0084CE  0100               	movlb	0	; () banked
  5956  0084D0  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  5957  0084D2  0E00               	movlw	0
  5958  0084D4  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  5959  0084D6  EC10  F049         	call	_EUSART1_SetErrorHandler	;wreg free
  5960                           
  5961                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
  5962  0084DA  0E00               	movlw	0
  5963  0084DC  0101               	movlb	1	; () banked
  5964  0084DE  6F1B               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5965                           
  5966                           ; BSR set to: 1
  5967  0084E0  0012               	return		;funcret
  5968  0084E2                     __end_of_EUSART1_Initialize:
  5969                           	opt stack 0
  5970                           tblptru	equ	0xFF8
  5971                           tblptrh	equ	0xFF7
  5972                           tblptrl	equ	0xFF6
  5973                           tablat	equ	0xFF5
  5974                           intcon	equ	0xFF2
  5975                           intcon2	equ	0xFF1
  5976                           intcon3	equ	0xFF0
  5977                           postinc0	equ	0xFEE
  5978                           wreg	equ	0xFE8
  5979                           postdec2	equ	0xFDD
  5980                           fsr2h	equ	0xFDA
  5981                           fsr2l	equ	0xFD9
  5982                           status	equ	0xFD8
  5983                           
  5984 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5985 ;; Defined at:
  5986 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5989 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6001 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;Total ram usage:        2 bytes
  6006 ;; Hardware stack levels used:    1
  6007 ;; Hardware stack levels required when called:    7
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_EUSART1_Initialize
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text32
  6016  00920C                     __ptext32:
  6017                           	opt stack 0
  6018  00920C                     _EUSART1_SetOverrunErrorHandler:
  6019                           	opt stack 21
  6020                           
  6021                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  6022                           
  6023                           ; BSR set to: 1
  6024                           ;incstack = 0
  6025  00920C  C060  F1E0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6026  009210  C061  F1E1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6027  009214  0012               	return		;funcret
  6028  009216                     __end_of_EUSART1_SetOverrunErrorHandler:
  6029                           	opt stack 0
  6030                           tblptru	equ	0xFF8
  6031                           tblptrh	equ	0xFF7
  6032                           tblptrl	equ	0xFF6
  6033                           tablat	equ	0xFF5
  6034                           intcon	equ	0xFF2
  6035                           intcon2	equ	0xFF1
  6036                           intcon3	equ	0xFF0
  6037                           postinc0	equ	0xFEE
  6038                           wreg	equ	0xFE8
  6039                           postdec2	equ	0xFDD
  6040                           fsr2h	equ	0xFDA
  6041                           fsr2l	equ	0xFD9
  6042                           status	equ	0xFD8
  6043                           
  6044 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6045 ;; Defined at:
  6046 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6049 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;		None
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      void 
  6054 ;; Registers used:
  6055 ;;		wreg, status,2, status,0
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6065 ;;Total ram usage:        2 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:    7
  6068 ;; This function calls:
  6069 ;;		Nothing
  6070 ;; This function is called by:
  6071 ;;		_EUSART1_Initialize
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text33
  6076  009216                     __ptext33:
  6077                           	opt stack 0
  6078  009216                     _EUSART1_SetFramingErrorHandler:
  6079                           	opt stack 21
  6080                           
  6081                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  6082                           
  6083                           ;incstack = 0
  6084  009216  C060  F1E2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6085  00921A  C061  F1E3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6086  00921E  0012               	return		;funcret
  6087  009220                     __end_of_EUSART1_SetFramingErrorHandler:
  6088                           	opt stack 0
  6089                           tblptru	equ	0xFF8
  6090                           tblptrh	equ	0xFF7
  6091                           tblptrl	equ	0xFF6
  6092                           tablat	equ	0xFF5
  6093                           intcon	equ	0xFF2
  6094                           intcon2	equ	0xFF1
  6095                           intcon3	equ	0xFF0
  6096                           postinc0	equ	0xFEE
  6097                           wreg	equ	0xFE8
  6098                           postdec2	equ	0xFDD
  6099                           fsr2h	equ	0xFDA
  6100                           fsr2l	equ	0xFD9
  6101                           status	equ	0xFD8
  6102                           
  6103 ;; *************** function _EUSART1_SetErrorHandler *****************
  6104 ;; Defined at:
  6105 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6108 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;		None
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      void 
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;Total ram usage:        2 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    7
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_EUSART1_Initialize
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text34
  6135  009220                     __ptext34:
  6136                           	opt stack 0
  6137  009220                     _EUSART1_SetErrorHandler:
  6138                           	opt stack 21
  6139                           
  6140                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  6141                           
  6142                           ;incstack = 0
  6143  009220  C060  F1DE         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6144  009224  C061  F1DF         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6145  009228  0012               	return		;funcret
  6146  00922A                     __end_of_EUSART1_SetErrorHandler:
  6147                           	opt stack 0
  6148                           tblptru	equ	0xFF8
  6149                           tblptrh	equ	0xFF7
  6150                           tblptrl	equ	0xFF6
  6151                           tablat	equ	0xFF5
  6152                           intcon	equ	0xFF2
  6153                           intcon2	equ	0xFF1
  6154                           intcon3	equ	0xFF0
  6155                           postinc0	equ	0xFEE
  6156                           wreg	equ	0xFE8
  6157                           postdec2	equ	0xFDD
  6158                           fsr2h	equ	0xFDA
  6159                           fsr2l	equ	0xFD9
  6160                           status	equ	0xFD8
  6161                           
  6162 ;; *************** function _CCP5_Initialize *****************
  6163 ;; Defined at:
  6164 ;;		line 49 in file "mcc_generated_files/ccp5.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;Total ram usage:        0 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:    7
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		_SYSTEM_Initialize
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text35
  6193  009166                     __ptext35:
  6194                           	opt stack 0
  6195  009166                     _CCP5_Initialize:
  6196                           	opt stack 22
  6197                           
  6198                           ;ccp5.c: 53: CCP5CON = 0x00;
  6199                           
  6200                           ;incstack = 0
  6201  009166  0E00               	movlw	0
  6202  009168  010F               	movlb	15	; () banked
  6203  00916A  6F54               	movwf	84,b	;volatile
  6204                           
  6205                           ;ccp5.c: 56: CCPR5L = 0x00;
  6206  00916C  0E00               	movlw	0
  6207  00916E  6F55               	movwf	85,b	;volatile
  6208                           
  6209                           ;ccp5.c: 59: CCPR5H = 0x00;
  6210  009170  0E00               	movlw	0
  6211  009172  6F56               	movwf	86,b	;volatile
  6212                           
  6213                           ; BSR set to: 15
  6214  009174  0012               	return		;funcret
  6215  009176                     __end_of_CCP5_Initialize:
  6216                           	opt stack 0
  6217                           tblptru	equ	0xFF8
  6218                           tblptrh	equ	0xFF7
  6219                           tblptrl	equ	0xFF6
  6220                           tablat	equ	0xFF5
  6221                           intcon	equ	0xFF2
  6222                           intcon2	equ	0xFF1
  6223                           intcon3	equ	0xFF0
  6224                           postinc0	equ	0xFEE
  6225                           wreg	equ	0xFE8
  6226                           postdec2	equ	0xFDD
  6227                           fsr2h	equ	0xFDA
  6228                           fsr2l	equ	0xFD9
  6229                           status	equ	0xFD8
  6230                           
  6231 ;; *************** function _ADC_Initialize *****************
  6232 ;; Defined at:
  6233 ;;		line 60 in file "mcc_generated_files/adc.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;		None
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;		None
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      void 
  6240 ;; Registers used:
  6241 ;;		wreg, status,2
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;Total ram usage:        0 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; Hardware stack levels required when called:    7
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_SYSTEM_Initialize
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text36
  6262  009078                     __ptext36:
  6263                           	opt stack 0
  6264  009078                     _ADC_Initialize:
  6265                           	opt stack 22
  6266                           
  6267                           ;adc.c: 65: ADCON0 = 0x01;
  6268                           
  6269                           ; BSR set to: 15
  6270                           ;incstack = 0
  6271  009078  0E01               	movlw	1
  6272  00907A  6EC2               	movwf	4034,c	;volatile
  6273                           
  6274                           ;adc.c: 68: ADCON1 = 0x00;
  6275  00907C  0E00               	movlw	0
  6276  00907E  6EC1               	movwf	4033,c	;volatile
  6277                           
  6278                           ;adc.c: 71: ADCON2 = 0x85;
  6279  009080  0E85               	movlw	133
  6280  009082  6EC0               	movwf	4032,c	;volatile
  6281                           
  6282                           ;adc.c: 74: ADRESL = 0x00;
  6283  009084  0E00               	movlw	0
  6284  009086  6EC3               	movwf	4035,c	;volatile
  6285                           
  6286                           ;adc.c: 77: ADRESH = 0x00;
  6287  009088  0E00               	movlw	0
  6288  00908A  6EC4               	movwf	4036,c	;volatile
  6289  00908C  0012               	return		;funcret
  6290  00908E                     __end_of_ADC_Initialize:
  6291                           	opt stack 0
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           intcon	equ	0xFF2
  6297                           intcon2	equ	0xFF1
  6298                           intcon3	equ	0xFF0
  6299                           postinc0	equ	0xFEE
  6300                           wreg	equ	0xFE8
  6301                           postdec2	equ	0xFDD
  6302                           fsr2h	equ	0xFDA
  6303                           fsr2l	equ	0xFD9
  6304                           status	equ	0xFD8
  6305                           
  6306 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  6307 ;; Defined at:
  6308 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  networkSessi    2   11[BANK0 ] PTR unsigned char 
  6311 ;;		 -> nwkSKey(16), 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;		None
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1    wreg      void 
  6316 ;; Registers used:
  6317 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6323 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;Total ram usage:        2 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; Hardware stack levels required when called:    8
  6330 ;; This function calls:
  6331 ;;		_memcpy
  6332 ;; This function is called by:
  6333 ;;		_main
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           	psect	text37
  6338  008AE8                     __ptext37:
  6339                           	opt stack 0
  6340  008AE8                     _LORAWAN_SetNetworkSessionKey:
  6341                           	opt stack 22
  6342                           
  6343                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  6344                           
  6345                           ;incstack = 0
  6346  008AE8  0100               	movlb	0	; () banked
  6347  008AEA  516B               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  6348  008AEC  116C               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  6349  008AEE  B4D8               	btfsc	status,2,c
  6350  008AF0  0012               	return	
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;lorawan.c: 382: {
  6354                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  6355  008AF2  0E22               	movlw	low (_loRa+34)
  6356  008AF4  6F60               	movwf	memcpy@d1& (0+255),b
  6357  008AF6  0E02               	movlw	high (_loRa+34)
  6358  008AF8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6359  008AFA  C06B  F062         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  6360  008AFE  C06C  F063         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  6361  008B02  0E00               	movlw	0
  6362  008B04  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6363  008B06  0E10               	movlw	16
  6364  008B08  6F64               	movwf	memcpy@n& (0+255),b
  6365  008B0A  EC6C  F03F         	call	_memcpy	;wreg free
  6366                           
  6367                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  6368  008B0E  0102               	movlb	2	; () banked
  6369  008B10  89A5               	bsf	(_loRa+165)& (0+255),4,b
  6370                           
  6371                           ; BSR set to: 2
  6372                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  6373  008B12  9902               	bcf	(_loRa+2)& (0+255),4,b
  6374  008B14  0012               	return	
  6375  008B16                     __end_of_LORAWAN_SetNetworkSessionKey:
  6376                           	opt stack 0
  6377                           tblptru	equ	0xFF8
  6378                           tblptrh	equ	0xFF7
  6379                           tblptrl	equ	0xFF6
  6380                           tablat	equ	0xFF5
  6381                           intcon	equ	0xFF2
  6382                           intcon2	equ	0xFF1
  6383                           intcon3	equ	0xFF0
  6384                           postinc0	equ	0xFEE
  6385                           wreg	equ	0xFE8
  6386                           postdec2	equ	0xFDD
  6387                           fsr2h	equ	0xFDA
  6388                           fsr2l	equ	0xFD9
  6389                           status	equ	0xFD8
  6390                           
  6391 ;; *************** function _LORAWAN_SetDeviceEui *****************
  6392 ;; Defined at:
  6393 ;;		line 337 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  deviceEuiNew    2   11[BANK0 ] PTR unsigned char 
  6396 ;;		 -> deviceEUI(8), 
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;		None
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      void 
  6401 ;; Registers used:
  6402 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6408 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;Total ram usage:        2 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    8
  6415 ;; This function calls:
  6416 ;;		_memcpy
  6417 ;; This function is called by:
  6418 ;;		_main
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text38
  6423  008B16                     __ptext38:
  6424                           	opt stack 0
  6425  008B16                     _LORAWAN_SetDeviceEui:
  6426                           	opt stack 22
  6427                           
  6428                           ;lorawan.c: 339: if (deviceEuiNew != (0))
  6429                           
  6430                           ;incstack = 0
  6431  008B16  0100               	movlb	0	; () banked
  6432  008B18  516B               	movf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),w,b
  6433  008B1A  116C               	iorwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),w,b
  6434  008B1C  B4D8               	btfsc	status,2,c
  6435  008B1E  0012               	return	
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;lorawan.c: 340: {
  6439                           ;lorawan.c: 341: memcpy(loRa.activationParameters.deviceEui.buffer, deviceEuiNew, sizeof
      +                          (loRa.activationParameters.deviceEui) );
  6440  008B20  0E5A               	movlw	low (_loRa+90)
  6441  008B22  6F60               	movwf	memcpy@d1& (0+255),b
  6442  008B24  0E02               	movlw	high (_loRa+90)
  6443  008B26  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6444  008B28  C06B  F062         	movff	LORAWAN_SetDeviceEui@deviceEuiNew,memcpy@s1
  6445  008B2C  C06C  F063         	movff	LORAWAN_SetDeviceEui@deviceEuiNew+1,memcpy@s1+1
  6446  008B30  0E00               	movlw	0
  6447  008B32  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6448  008B34  0E08               	movlw	8
  6449  008B36  6F64               	movwf	memcpy@n& (0+255),b
  6450  008B38  EC6C  F03F         	call	_memcpy	;wreg free
  6451                           
  6452                           ;lorawan.c: 342: loRa.macKeys.deviceEui = 1;
  6453  008B3C  0102               	movlb	2	; () banked
  6454  008B3E  81A5               	bsf	(_loRa+165)& (0+255),0,b
  6455                           
  6456                           ; BSR set to: 2
  6457                           ;lorawan.c: 343: loRa.macStatus.networkJoined = 0;
  6458  008B40  9902               	bcf	(_loRa+2)& (0+255),4,b
  6459  008B42  0012               	return	
  6460  008B44                     __end_of_LORAWAN_SetDeviceEui:
  6461                           	opt stack 0
  6462                           tblptru	equ	0xFF8
  6463                           tblptrh	equ	0xFF7
  6464                           tblptrl	equ	0xFF6
  6465                           tablat	equ	0xFF5
  6466                           intcon	equ	0xFF2
  6467                           intcon2	equ	0xFF1
  6468                           intcon3	equ	0xFF0
  6469                           postinc0	equ	0xFEE
  6470                           wreg	equ	0xFE8
  6471                           postdec2	equ	0xFDD
  6472                           fsr2h	equ	0xFDA
  6473                           fsr2l	equ	0xFD9
  6474                           status	equ	0xFD8
  6475                           
  6476 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  6477 ;; Defined at:
  6478 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  deviceAddres    4    0[BANK0 ] unsigned long 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;		None
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      void 
  6485 ;; Registers used:
  6486 ;;		None
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6492 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6495 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6496 ;;Total ram usage:        4 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:    7
  6499 ;; This function calls:
  6500 ;;		Nothing
  6501 ;; This function is called by:
  6502 ;;		_main
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text39
  6507  009030                     __ptext39:
  6508                           	opt stack 0
  6509  009030                     _LORAWAN_SetDeviceAddress:
  6510                           	opt stack 23
  6511                           
  6512                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  6513                           
  6514                           ;incstack = 0
  6515  009030  C060  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  6516  009034  C061  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  6517  009038  C062  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  6518  00903C  C063  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  6519                           
  6520                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  6521  009040  0102               	movlb	2	; () banked
  6522  009042  85A5               	bsf	(_loRa+165)& (0+255),2,b
  6523                           
  6524                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  6525  009044  9902               	bcf	(_loRa+2)& (0+255),4,b
  6526                           
  6527                           ; BSR set to: 2
  6528  009046  0012               	return		;funcret
  6529  009048                     __end_of_LORAWAN_SetDeviceAddress:
  6530                           	opt stack 0
  6531                           tblptru	equ	0xFF8
  6532                           tblptrh	equ	0xFF7
  6533                           tblptrl	equ	0xFF6
  6534                           tablat	equ	0xFF5
  6535                           intcon	equ	0xFF2
  6536                           intcon2	equ	0xFF1
  6537                           intcon3	equ	0xFF0
  6538                           postinc0	equ	0xFEE
  6539                           wreg	equ	0xFE8
  6540                           postdec2	equ	0xFDD
  6541                           fsr2h	equ	0xFDA
  6542                           fsr2l	equ	0xFD9
  6543                           status	equ	0xFD8
  6544                           
  6545 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  6546 ;; Defined at:
  6547 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  applicationS    2   11[BANK0 ] PTR unsigned char 
  6550 ;;		 -> appSKey(16), 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;		None
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  1    wreg      void 
  6555 ;; Registers used:
  6556 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6562 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;Total ram usage:        2 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:    8
  6569 ;; This function calls:
  6570 ;;		_memcpy
  6571 ;; This function is called by:
  6572 ;;		_main
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text40
  6577  008B44                     __ptext40:
  6578                           	opt stack 0
  6579  008B44                     _LORAWAN_SetApplicationSessionKey:
  6580                           	opt stack 22
  6581                           
  6582                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  6583                           
  6584                           ; BSR set to: 2
  6585                           ;incstack = 0
  6586  008B44  0100               	movlb	0	; () banked
  6587  008B46  516B               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  6588  008B48  116C               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  6589  008B4A  B4D8               	btfsc	status,2,c
  6590  008B4C  0012               	return	
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;lorawan.c: 397: {
  6594                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  6595  008B4E  0E32               	movlw	low (_loRa+50)
  6596  008B50  6F60               	movwf	memcpy@d1& (0+255),b
  6597  008B52  0E02               	movlw	high (_loRa+50)
  6598  008B54  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6599  008B56  C06B  F062         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  6600  008B5A  C06C  F063         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  6601  008B5E  0E00               	movlw	0
  6602  008B60  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6603  008B62  0E10               	movlw	16
  6604  008B64  6F64               	movwf	memcpy@n& (0+255),b
  6605  008B66  EC6C  F03F         	call	_memcpy	;wreg free
  6606                           
  6607                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  6608  008B6A  0102               	movlb	2	; () banked
  6609  008B6C  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  6610                           
  6611                           ; BSR set to: 2
  6612                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  6613  008B6E  9902               	bcf	(_loRa+2)& (0+255),4,b
  6614  008B70  0012               	return	
  6615  008B72                     __end_of_LORAWAN_SetApplicationSessionKey:
  6616                           	opt stack 0
  6617                           tblptru	equ	0xFF8
  6618                           tblptrh	equ	0xFF7
  6619                           tblptrl	equ	0xFF6
  6620                           tablat	equ	0xFF5
  6621                           intcon	equ	0xFF2
  6622                           intcon2	equ	0xFF1
  6623                           intcon3	equ	0xFF0
  6624                           postinc0	equ	0xFEE
  6625                           wreg	equ	0xFE8
  6626                           postdec2	equ	0xFDD
  6627                           fsr2h	equ	0xFDA
  6628                           fsr2l	equ	0xFD9
  6629                           status	equ	0xFD8
  6630                           
  6631 ;; *************** function _LORAWAN_SetApplicationKey *****************
  6632 ;; Defined at:
  6633 ;;		line 409 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  applicationK    2   11[BANK0 ] PTR unsigned char 
  6636 ;;		 -> applicationKey(16), 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6648 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6652 ;;Total ram usage:        2 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:    8
  6655 ;; This function calls:
  6656 ;;		_memcpy
  6657 ;; This function is called by:
  6658 ;;		_main
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           	psect	text41
  6663  008B72                     __ptext41:
  6664                           	opt stack 0
  6665  008B72                     _LORAWAN_SetApplicationKey:
  6666                           	opt stack 22
  6667                           
  6668                           ;lorawan.c: 411: if (applicationKeyNew != (0))
  6669                           
  6670                           ;incstack = 0
  6671  008B72  0100               	movlb	0	; () banked
  6672  008B74  516B               	movf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),w,b
  6673  008B76  116C               	iorwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),w,b
  6674  008B78  B4D8               	btfsc	status,2,c
  6675  008B7A  0012               	return	
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;lorawan.c: 412: {
  6679                           ;lorawan.c: 413: memcpy( loRa.activationParameters.applicationKey, applicationKeyNew, 16
      +                          );
  6680  008B7C  0E42               	movlw	low (_loRa+66)
  6681  008B7E  6F60               	movwf	memcpy@d1& (0+255),b
  6682  008B80  0E02               	movlw	high (_loRa+66)
  6683  008B82  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6684  008B84  C06B  F062         	movff	LORAWAN_SetApplicationKey@applicationKeyNew,memcpy@s1
  6685  008B88  C06C  F063         	movff	LORAWAN_SetApplicationKey@applicationKeyNew+1,memcpy@s1+1
  6686  008B8C  0E00               	movlw	0
  6687  008B8E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6688  008B90  0E10               	movlw	16
  6689  008B92  6F64               	movwf	memcpy@n& (0+255),b
  6690  008B94  EC6C  F03F         	call	_memcpy	;wreg free
  6691                           
  6692                           ;lorawan.c: 414: loRa.macKeys.applicationKey = 1;
  6693  008B98  0102               	movlb	2	; () banked
  6694  008B9A  87A5               	bsf	(_loRa+165)& (0+255),3,b
  6695                           
  6696                           ; BSR set to: 2
  6697                           ;lorawan.c: 415: loRa.macStatus.networkJoined = 0;
  6698  008B9C  9902               	bcf	(_loRa+2)& (0+255),4,b
  6699  008B9E  0012               	return	
  6700  008BA0                     __end_of_LORAWAN_SetApplicationKey:
  6701                           	opt stack 0
  6702                           tblptru	equ	0xFF8
  6703                           tblptrh	equ	0xFF7
  6704                           tblptrl	equ	0xFF6
  6705                           tablat	equ	0xFF5
  6706                           intcon	equ	0xFF2
  6707                           intcon2	equ	0xFF1
  6708                           intcon3	equ	0xFF0
  6709                           postinc0	equ	0xFEE
  6710                           wreg	equ	0xFE8
  6711                           postdec2	equ	0xFDD
  6712                           fsr2h	equ	0xFDA
  6713                           fsr2l	equ	0xFD9
  6714                           status	equ	0xFD8
  6715                           
  6716 ;; *************** function _LORAWAN_SetApplicationEui *****************
  6717 ;; Defined at:
  6718 ;;		line 352 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  applicationE    2   11[BANK0 ] PTR unsigned char 
  6721 ;;		 -> applicationEUI(8), 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;		None
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  1    wreg      void 
  6726 ;; Registers used:
  6727 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6733 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6737 ;;Total ram usage:        2 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; Hardware stack levels required when called:    8
  6740 ;; This function calls:
  6741 ;;		_memcpy
  6742 ;; This function is called by:
  6743 ;;		_main
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text42
  6748  008BA0                     __ptext42:
  6749                           	opt stack 0
  6750  008BA0                     _LORAWAN_SetApplicationEui:
  6751                           	opt stack 22
  6752                           
  6753                           ;lorawan.c: 354: if (applicationEuiNew != (0))
  6754                           
  6755                           ;incstack = 0
  6756  008BA0  0100               	movlb	0	; () banked
  6757  008BA2  516B               	movf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),w,b
  6758  008BA4  116C               	iorwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),w,b
  6759  008BA6  B4D8               	btfsc	status,2,c
  6760  008BA8  0012               	return	
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;lorawan.c: 355: {
  6764                           ;lorawan.c: 356: memcpy(loRa.activationParameters.applicationEui.buffer, applicationEuiN
      +                          ew, 8);
  6765  008BAA  0E52               	movlw	low (_loRa+82)
  6766  008BAC  6F60               	movwf	memcpy@d1& (0+255),b
  6767  008BAE  0E02               	movlw	high (_loRa+82)
  6768  008BB0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6769  008BB2  C06B  F062         	movff	LORAWAN_SetApplicationEui@applicationEuiNew,memcpy@s1
  6770  008BB6  C06C  F063         	movff	LORAWAN_SetApplicationEui@applicationEuiNew+1,memcpy@s1+1
  6771  008BBA  0E00               	movlw	0
  6772  008BBC  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6773  008BBE  0E08               	movlw	8
  6774  008BC0  6F64               	movwf	memcpy@n& (0+255),b
  6775  008BC2  EC6C  F03F         	call	_memcpy	;wreg free
  6776                           
  6777                           ;lorawan.c: 357: loRa.macKeys.applicationEui = 1;
  6778  008BC6  0102               	movlb	2	; () banked
  6779  008BC8  83A5               	bsf	(_loRa+165)& (0+255),1,b
  6780                           
  6781                           ; BSR set to: 2
  6782                           ;lorawan.c: 358: loRa.macStatus.networkJoined = 0;
  6783  008BCA  9902               	bcf	(_loRa+2)& (0+255),4,b
  6784  008BCC  0012               	return	
  6785  008BCE                     __end_of_LORAWAN_SetApplicationEui:
  6786                           	opt stack 0
  6787                           tblptru	equ	0xFF8
  6788                           tblptrh	equ	0xFF7
  6789                           tblptrl	equ	0xFF6
  6790                           tablat	equ	0xFF5
  6791                           intcon	equ	0xFF2
  6792                           intcon2	equ	0xFF1
  6793                           intcon3	equ	0xFF0
  6794                           postinc0	equ	0xFEE
  6795                           wreg	equ	0xFE8
  6796                           postdec2	equ	0xFDD
  6797                           fsr2h	equ	0xFDA
  6798                           fsr2l	equ	0xFD9
  6799                           status	equ	0xFD8
  6800                           
  6801 ;; *************** function _LORAWAN_Mainloop *****************
  6802 ;; Defined at:
  6803 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;		None
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      void 
  6810 ;; Registers used:
  6811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;Total ram usage:        0 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:   18
  6824 ;; This function calls:
  6825 ;;		_INTERRUPT_GetDioStatus
  6826 ;;		_RADIO_DIO0
  6827 ;;		_RADIO_DIO1
  6828 ;;		_RADIO_DIO2
  6829 ;;		_RADIO_DIO3
  6830 ;;		_RADIO_DIO4
  6831 ;;		_RADIO_DIO5
  6832 ;;		_SwTimersExecute
  6833 ;; This function is called by:
  6834 ;;		_main
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text43
  6839  00884E                     __ptext43:
  6840                           	opt stack 0
  6841  00884E                     _LORAWAN_Mainloop:
  6842                           	opt stack 12
  6843                           
  6844                           ;lorawan.c: 2240: SwTimersExecute();
  6845                           
  6846                           ;incstack = 0
  6847  00884E  EC85  F033         	call	_SwTimersExecute	;wreg free
  6848                           
  6849                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  6850  008852  EC5C  F048         	call	_INTERRUPT_GetDioStatus	;wreg free
  6851  008856  0101               	movlb	1	; () banked
  6852  008858  6F1E               	movwf	_localDioStatus& (0+255),b
  6853                           
  6854                           ; BSR set to: 1
  6855                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  6856  00885A  B11E               	btfsc	_localDioStatus& (0+255),0,b
  6857                           
  6858                           ; BSR set to: 1
  6859                           ;lorawan.c: 2246: {
  6860                           ;lorawan.c: 2247: RADIO_DIO0();
  6861  00885C  ECE1  F039         	call	_RADIO_DIO0	;wreg free
  6862                           
  6863                           ;lorawan.c: 2248: }
  6864                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  6865  008860  0101               	movlb	1	; () banked
  6866  008862  B31E               	btfsc	_localDioStatus& (0+255),1,b
  6867                           
  6868                           ; BSR set to: 1
  6869                           ;lorawan.c: 2250: {
  6870                           ;lorawan.c: 2251: RADIO_DIO1();
  6871  008864  EC02  F042         	call	_RADIO_DIO1	;wreg free
  6872                           
  6873                           ;lorawan.c: 2252: }
  6874                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  6875  008868  0101               	movlb	1	; () banked
  6876  00886A  B51E               	btfsc	_localDioStatus& (0+255),2,b
  6877                           
  6878                           ; BSR set to: 1
  6879                           ;lorawan.c: 2254: {
  6880                           ;lorawan.c: 2255: RADIO_DIO2();
  6881  00886C  ECDD  F040         	call	_RADIO_DIO2	;wreg free
  6882                           
  6883                           ;lorawan.c: 2256: }
  6884                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  6885  008870  0101               	movlb	1	; () banked
  6886  008872  B71E               	btfsc	_localDioStatus& (0+255),3,b
  6887                           
  6888                           ; BSR set to: 1
  6889                           ;lorawan.c: 2258: {
  6890                           ;lorawan.c: 2259: RADIO_DIO3();
  6891  008874  EC02  F047         	call	_RADIO_DIO3	;wreg free
  6892                           
  6893                           ;lorawan.c: 2260: }
  6894                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  6895  008878  0101               	movlb	1	; () banked
  6896  00887A  B91E               	btfsc	_localDioStatus& (0+255),4,b
  6897                           
  6898                           ; BSR set to: 1
  6899                           ;lorawan.c: 2262: {
  6900                           ;lorawan.c: 2263: RADIO_DIO4();
  6901  00887C  EC9A  F044         	call	_RADIO_DIO4	;wreg free
  6902                           
  6903                           ;lorawan.c: 2264: }
  6904                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  6905  008880  0101               	movlb	1	; () banked
  6906  008882  AB1E               	btfss	_localDioStatus& (0+255),5,b
  6907  008884  0012               	return	
  6908                           
  6909                           ; BSR set to: 1
  6910                           ;lorawan.c: 2266: {
  6911                           ;lorawan.c: 2267: RADIO_DIO5();
  6912  008886  EC68  F046         	call	_RADIO_DIO5	;wreg free
  6913  00888A  0012               	return	
  6914  00888C                     __end_of_LORAWAN_Mainloop:
  6915                           	opt stack 0
  6916                           tblptru	equ	0xFF8
  6917                           tblptrh	equ	0xFF7
  6918                           tblptrl	equ	0xFF6
  6919                           tablat	equ	0xFF5
  6920                           intcon	equ	0xFF2
  6921                           intcon2	equ	0xFF1
  6922                           intcon3	equ	0xFF0
  6923                           postinc0	equ	0xFEE
  6924                           wreg	equ	0xFE8
  6925                           postdec2	equ	0xFDD
  6926                           fsr2h	equ	0xFDA
  6927                           fsr2l	equ	0xFD9
  6928                           status	equ	0xFD8
  6929                           
  6930 ;; *************** function _SwTimersExecute *****************
  6931 ;; Defined at:
  6932 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;		None
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  i               1  126[BANK0 ] unsigned char 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1    wreg      void 
  6939 ;; Registers used:
  6940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6947 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6948 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6949 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6950 ;;Total ram usage:        5 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:   17
  6953 ;; This function calls:
  6954 ;;		Absolute function
  6955 ;;		_AckRetransmissionCallback
  6956 ;;		_AutomaticReplyCallback
  6957 ;;		_DutyCycleCallback
  6958 ;;		_LORAWAN_LinkCheckCallback
  6959 ;;		_LORAWAN_ReceiveWindow1Callback
  6960 ;;		_LORAWAN_ReceiveWindow2Callback
  6961 ;;		_RADIO_RxFSKTimeout
  6962 ;;		_RADIO_WatchdogTimeout
  6963 ;;		_UnconfirmedTransmissionCallback
  6964 ;;		_UpdateJoinSuccessState
  6965 ;; This function is called by:
  6966 ;;		_LORAWAN_Mainloop
  6967 ;; This function uses a non-reentrant model
  6968 ;;
  6969                           
  6970                           	psect	text44
  6971  00670A                     __ptext44:
  6972                           	opt stack 0
  6973  00670A                     _SwTimersExecute:
  6974                           	opt stack 12
  6975                           
  6976                           ;sw_timer.c: 262: uint8_t i;
  6977                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  6978                           
  6979                           ;incstack = 0
  6980  00670A  9EF2               	bcf	intcon,7,c	;volatile
  6981                           
  6982                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  6983  00670C  0E00               	movlw	0
  6984  00670E  0100               	movlb	0	; () banked
  6985  006710  6FDE               	movwf	SwTimersExecute@i& (0+255),b
  6986  006712  D068               	goto	l274
  6987  006714                     
  6988                           ; BSR set to: 0
  6989                           ;sw_timer.c: 266: {
  6990                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  6991                           
  6992                           ; BSR set to: 0
  6993  006714  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  6994  006716  0D08               	mullw	8
  6995  006718  0E04               	movlw	4
  6996  00671A  26F3               	addwf	prodl,f,c
  6997  00671C  0E00               	movlw	0
  6998  00671E  22F4               	addwfc	prodh,f,c
  6999  006720  0E00               	movlw	low _swTimers
  7000  006722  24F3               	addwf	prodl,w,c
  7001  006724  6ED9               	movwf	fsr2l,c
  7002  006726  0E03               	movlw	high _swTimers
  7003  006728  20F4               	addwfc	prodh,w,c
  7004  00672A  6EDA               	movwf	fsr2h,c
  7005  00672C  04DE               	decf	postinc2,w,c
  7006  00672E  A4D8               	btfss	status,2,c
  7007  006730  D057               	goto	l278
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;sw_timer.c: 270: {
  7011                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  7012  006732  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  7013  006734  0D08               	mullw	8
  7014  006736  0E00               	movlw	low _swTimers
  7015  006738  24F3               	addwf	prodl,w,c
  7016  00673A  6ED9               	movwf	fsr2l,c
  7017  00673C  0E03               	movlw	high _swTimers
  7018  00673E  20F4               	addwfc	prodh,w,c
  7019  006740  6EDA               	movwf	fsr2h,c
  7020  006742  50DE               	movf	postinc2,w,c
  7021  006744  10DE               	iorwf	postinc2,w,c
  7022  006746  10DE               	iorwf	postinc2,w,c
  7023  006748  10DE               	iorwf	postinc2,w,c
  7024  00674A  A4D8               	btfss	status,2,c
  7025  00674C  D049               	goto	l278
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;sw_timer.c: 272: {
  7029                           ;sw_timer.c: 273: swTimers[i].running = 0;
  7030  00674E  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  7031  006750  0D08               	mullw	8
  7032  006752  0E04               	movlw	4
  7033  006754  26F3               	addwf	prodl,f,c
  7034  006756  0E00               	movlw	0
  7035  006758  22F4               	addwfc	prodh,f,c
  7036  00675A  0E00               	movlw	low _swTimers
  7037  00675C  24F3               	addwf	prodl,w,c
  7038  00675E  6ED9               	movwf	fsr2l,c
  7039  006760  0E03               	movlw	high _swTimers
  7040  006762  20F4               	addwfc	prodh,w,c
  7041  006764  6EDA               	movwf	fsr2h,c
  7042  006766  0E00               	movlw	0
  7043  006768  6EDF               	movwf	indf2,c
  7044                           
  7045                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  7046  00676A  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  7047  00676C  0D08               	mullw	8
  7048  00676E  0E06               	movlw	6
  7049  006770  26F3               	addwf	prodl,f,c
  7050  006772  0E00               	movlw	0
  7051  006774  22F4               	addwfc	prodh,f,c
  7052  006776  0E00               	movlw	low _swTimers
  7053  006778  24F3               	addwf	prodl,w,c
  7054  00677A  6ED9               	movwf	fsr2l,c
  7055  00677C  0E03               	movlw	high _swTimers
  7056  00677E  20F4               	addwfc	prodh,w,c
  7057  006780  6EDA               	movwf	fsr2h,c
  7058  006782  50DE               	movf	postinc2,w,c
  7059  006784  10DE               	iorwf	postinc2,w,c
  7060  006786  B4D8               	btfsc	status,2,c
  7061  006788  D02B               	goto	l278
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;sw_timer.c: 275: {
  7065                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  7066  00678A  8EF2               	bsf	intcon,7,c	;volatile
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  7070  00678C  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  7071  00678E  0D08               	mullw	8
  7072  006790  0E05               	movlw	5
  7073  006792  26F3               	addwf	prodl,f,c
  7074  006794  0E00               	movlw	0
  7075  006796  22F4               	addwfc	prodh,f,c
  7076  006798  0E00               	movlw	low _swTimers
  7077  00679A  24F3               	addwf	prodl,w,c
  7078  00679C  6ED9               	movwf	fsr2l,c
  7079  00679E  0E03               	movlw	high _swTimers
  7080  0067A0  20F4               	addwfc	prodh,w,c
  7081  0067A2  6EDA               	movwf	fsr2h,c
  7082  0067A4  50DF               	movf	indf2,w,c
  7083  0067A6  6EE6               	movwf	postinc1,c
  7084  0067A8  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  7085  0067AA  0D08               	mullw	8
  7086  0067AC  0E06               	movlw	6
  7087  0067AE  26F3               	addwf	prodl,f,c
  7088  0067B0  0E00               	movlw	0
  7089  0067B2  22F4               	addwfc	prodh,f,c
  7090  0067B4  0E00               	movlw	low _swTimers
  7091  0067B6  24F3               	addwf	prodl,w,c
  7092  0067B8  6ED9               	movwf	fsr2l,c
  7093  0067BA  0E03               	movlw	high _swTimers
  7094  0067BC  20F4               	addwfc	prodh,w,c
  7095  0067BE  6EDA               	movwf	fsr2h,c
  7096  0067C0  CFDE F0DA          	movff	postinc2,??_SwTimersExecute
  7097  0067C4  CFDD F0DB          	movff	postdec2,??_SwTimersExecute+1
  7098  0067C8  D801               	call	u22248
  7099  0067CA  D009               	goto	u22249
  7100  0067CC                     u22248:
  7101  0067CC  0005               	push	
  7102  0067CE  6EFA               	movwf	pclath,c
  7103  0067D0  51DA               	movf	??_SwTimersExecute& (0+255),w,b
  7104  0067D2  6EFD               	movwf	tosl,c
  7105  0067D4  51DB               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  7106  0067D6  6EFE               	movwf	tosh,c
  7107  0067D8  6AFF               	clrf	tosu,c
  7108  0067DA  50FA               	movf	pclath,w,c
  7109  0067DC  0012               	return		;indir
  7110  0067DE                     u22249:
  7111                           
  7112                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  7113  0067DE  9EF2               	bcf	intcon,7,c	;volatile
  7114  0067E0                     l278:
  7115  0067E0  0100               	movlb	0	; () banked
  7116  0067E2  2BDE               	incf	SwTimersExecute@i& (0+255),f,b
  7117  0067E4                     l274:
  7118                           
  7119                           ; BSR set to: 0
  7120                           
  7121                           ; BSR set to: 0
  7122  0067E4  51F9               	movf	_allocatedTimers& (0+255),w,b	;volatile
  7123  0067E6  5DDE               	subwf	SwTimersExecute@i& (0+255),w,b
  7124  0067E8  A0D8               	btfss	status,0,c
  7125  0067EA  D794               	goto	l275
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;sw_timer.c: 279: }
  7129                           ;sw_timer.c: 280: }
  7130                           ;sw_timer.c: 281: }
  7131                           ;sw_timer.c: 282: }
  7132                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  7133  0067EC  8EF2               	bsf	intcon,7,c	;volatile
  7134                           
  7135                           ; BSR set to: 0
  7136  0067EE  0012               	return		;funcret
  7137  0067F0                     __end_of_SwTimersExecute:
  7138                           	opt stack 0
  7139                           tosu	equ	0xFFF
  7140                           tosh	equ	0xFFE
  7141                           tosl	equ	0xFFD
  7142                           pclath	equ	0xFFA
  7143                           tblptru	equ	0xFF8
  7144                           tblptrh	equ	0xFF7
  7145                           tblptrl	equ	0xFF6
  7146                           tablat	equ	0xFF5
  7147                           prodh	equ	0xFF4
  7148                           prodl	equ	0xFF3
  7149                           intcon	equ	0xFF2
  7150                           intcon2	equ	0xFF1
  7151                           intcon3	equ	0xFF0
  7152                           postinc0	equ	0xFEE
  7153                           wreg	equ	0xFE8
  7154                           postinc1	equ	0xFE6
  7155                           indf2	equ	0xFDF
  7156                           postinc2	equ	0xFDE
  7157                           postdec2	equ	0xFDD
  7158                           fsr2h	equ	0xFDA
  7159                           fsr2l	equ	0xFD9
  7160                           status	equ	0xFD8
  7161                           
  7162 ;; *************** function _DutyCycleCallback *****************
  7163 ;; Defined at:
  7164 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  param           1  [STACK] unsigned char 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  minim           4  [STACK] unsigned long 
  7169 ;;  i               1  [STACK] unsigned char 
  7170 ;;  found           1  [STACK] unsigned char 
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1  [STACK] void 
  7173 ;; Registers used:
  7174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
  7175 ;; Tracked objects:
  7176 ;;		On entry : 3F/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7184 ;;Total ram usage:        0 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; Hardware stack levels required when called:   11
  7187 ;; This function calls:
  7188 ;;		_SwTimerSetTimeout
  7189 ;;		_SwTimerStart
  7190 ;;		___lldiv
  7191 ;; This function is called by:
  7192 ;;		_SetCallbackSoftwareTimers
  7193 ;;		_SwTimersExecute
  7194 ;; This function uses a reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text45
  7198  002C48                     __ptext45:
  7199                           	opt stack 0
  7200  002C48                     _DutyCycleCallback:
  7201                           	opt stack 0
  7202                           
  7203                           ; BSR set to: 0
  7204                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  7205  002C48  0E0A               	movlw	10
  7206  002C4A  26E1               	addwf	fsr1l,f,c
  7207  002C4C  0E00               	movlw	0
  7208  002C4E  22E2               	addwfc	fsr1h,f,c
  7209                           
  7210                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  7211                           
  7212                           ;incstack = 0
  7213  002C50  0EFF               	movlw	255
  7214  002C52  6E50               	movwf	btemp+8,c
  7215  002C54  0EFF               	movlw	255
  7216  002C56  6E51               	movwf	btemp+9,c
  7217  002C58  0EFF               	movlw	255
  7218  002C5A  6E52               	movwf	btemp+10,c
  7219  002C5C  0EFF               	movlw	255
  7220  002C5E  6E53               	movwf	btemp+11,c
  7221                           
  7222                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  7223  002C60  0EFA               	movlw	-6
  7224  002C62  C050  FFE3         	movff	btemp+8,plusw1
  7225  002C66  0EFB               	movlw	-5
  7226  002C68  C051  FFE3         	movff	btemp+9,plusw1
  7227  002C6C  0EFC               	movlw	-4
  7228  002C6E  C052  FFE3         	movff	btemp+10,plusw1
  7229  002C72  0EFD               	movlw	-3
  7230  002C74  C053  FFE3         	movff	btemp+11,plusw1
  7231                           
  7232                           ;lorawan_eu.c: 1224: bool found = 0;
  7233                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  7234  002C78  0EFF               	movlw	-1
  7235  002C7A  6AE3               	clrf	plusw1,c
  7236                           
  7237                           ;lorawan_eu.c: 1225: uint8_t i;
  7238                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  7239                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7240  002C7C  0EFE               	movlw	-2
  7241  002C7E  6AE3               	clrf	plusw1,c
  7242  002C80                     l16609:
  7243                           
  7244                           ;lorawan_eu.c: 1228: {
  7245                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  7246                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7247  002C80  0EFE               	movlw	-2
  7248  002C82  50E3               	movf	plusw1,w,c
  7249  002C84  0D0E               	mullw	14
  7250  002C86  0E04               	movlw	low (_Channels+4)
  7251  002C88  24F3               	addwf	prodl,w,c
  7252  002C8A  6ED9               	movwf	fsr2l,c
  7253  002C8C  0E04               	movlw	high (_Channels+4)
  7254  002C8E  20F4               	addwfc	prodh,w,c
  7255  002C90  6EDA               	movwf	fsr2h,c
  7256  002C92  04DE               	decf	postinc2,w,c
  7257  002C94  A4D8               	btfss	status,2,c
  7258  002C96  D0AD               	goto	l16627
  7259                           
  7260                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7261  002C98  0EFE               	movlw	-2
  7262  002C9A  50E3               	movf	plusw1,w,c
  7263  002C9C  0D0E               	mullw	14
  7264  002C9E  0E08               	movlw	low (_Channels+8)
  7265  002CA0  24F3               	addwf	prodl,w,c
  7266  002CA2  6ED9               	movwf	fsr2l,c
  7267  002CA4  0E04               	movlw	high (_Channels+8)
  7268  002CA6  20F4               	addwfc	prodh,w,c
  7269  002CA8  6EDA               	movwf	fsr2h,c
  7270  002CAA  50DE               	movf	postinc2,w,c
  7271  002CAC  10DE               	iorwf	postinc2,w,c
  7272  002CAE  10DE               	iorwf	postinc2,w,c
  7273  002CB0  10DE               	iorwf	postinc2,w,c
  7274  002CB2  B4D8               	btfsc	status,2,c
  7275  002CB4  D09E               	goto	l16627
  7276                           
  7277                           ;lorawan_eu.c: 1231: {
  7278                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  7279                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7280  002CB6  0EFE               	movlw	-2
  7281  002CB8  50E3               	movf	plusw1,w,c
  7282  002CBA  0D0E               	mullw	14
  7283  002CBC  0E08               	movlw	low (_Channels+8)
  7284  002CBE  24F3               	addwf	prodl,w,c
  7285  002CC0  6ED9               	movwf	fsr2l,c
  7286  002CC2  0E04               	movlw	high (_Channels+8)
  7287  002CC4  20F4               	addwfc	prodh,w,c
  7288  002CC6  6EDA               	movwf	fsr2h,c
  7289  002CC8  50DE               	movf	postinc2,w,c
  7290  002CCA  0102               	movlb	2	; () banked
  7291  002CCC  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  7292  002CCE  50DE               	movf	postinc2,w,c
  7293  002CD0  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  7294  002CD2  50DE               	movf	postinc2,w,c
  7295  002CD4  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  7296  002CD6  50DE               	movf	postinc2,w,c
  7297  002CD8  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  7298  002CDA  B0D8               	btfsc	status,0,c
  7299  002CDC  D02F               	goto	l16617
  7300                           
  7301                           ; BSR set to: 2
  7302                           ;lorawan_eu.c: 1233: {
  7303                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  7304                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7305  002CDE  0EFE               	movlw	-2
  7306  002CE0  50E3               	movf	plusw1,w,c
  7307  002CE2  0D0E               	mullw	14
  7308  002CE4  0E08               	movlw	low (_Channels+8)
  7309  002CE6  24F3               	addwf	prodl,w,c
  7310  002CE8  6ED9               	movwf	fsr2l,c
  7311  002CEA  0E04               	movlw	high (_Channels+8)
  7312  002CEC  20F4               	addwfc	prodh,w,c
  7313  002CEE  6EDA               	movwf	fsr2h,c
  7314  002CF0  CFDE F050          	movff	postinc2,btemp+8
  7315  002CF4  CFDE F051          	movff	postinc2,btemp+9
  7316  002CF8  CFDE F052          	movff	postinc2,btemp+10
  7317  002CFC  CFDE F053          	movff	postinc2,btemp+11
  7318  002D00  51C8               	movf	(_loRa+200)& (0+255),w,b
  7319  002D02  5C50               	subwf	btemp+8,w,c
  7320  002D04  6E4C               	movwf	btemp+4,c
  7321  002D06  51C9               	movf	(_loRa+201)& (0+255),w,b
  7322  002D08  5851               	subwfb	btemp+9,w,c
  7323  002D0A  6E4D               	movwf	btemp+5,c
  7324  002D0C  51CA               	movf	(_loRa+202)& (0+255),w,b
  7325  002D0E  5852               	subwfb	btemp+10,w,c
  7326  002D10  6E4E               	movwf	btemp+6,c
  7327  002D12  51CB               	movf	(_loRa+203)& (0+255),w,b
  7328  002D14  5853               	subwfb	btemp+11,w,c
  7329  002D16  6E4F               	movwf	btemp+7,c
  7330                           
  7331                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7332  002D18  0EFE               	movlw	-2
  7333  002D1A  50E3               	movf	plusw1,w,c
  7334  002D1C  0D0E               	mullw	14
  7335  002D1E  0E08               	movlw	low (_Channels+8)
  7336  002D20  24F3               	addwf	prodl,w,c
  7337  002D22  6ED9               	movwf	fsr2l,c
  7338  002D24  0E04               	movlw	high (_Channels+8)
  7339  002D26  20F4               	addwfc	prodh,w,c
  7340  002D28  6EDA               	movwf	fsr2h,c
  7341  002D2A  C04C  FFDE         	movff	btemp+4,postinc2
  7342  002D2E  C04D  FFDE         	movff	btemp+5,postinc2
  7343  002D32  C04E  FFDE         	movff	btemp+6,postinc2
  7344  002D36  C04F  FFDE         	movff	btemp+7,postinc2
  7345                           
  7346                           ;lorawan_eu.c: 1235: }
  7347  002D3A  D00D               	goto	l16619
  7348  002D3C                     l16617:
  7349                           
  7350                           ; BSR set to: 2
  7351                           ;lorawan_eu.c: 1236: else
  7352                           ;lorawan_eu.c: 1237: {
  7353                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  7354                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7355  002D3C  0EFE               	movlw	-2
  7356  002D3E  50E3               	movf	plusw1,w,c
  7357  002D40  0D0E               	mullw	14
  7358  002D42  0E08               	movlw	low (_Channels+8)
  7359  002D44  24F3               	addwf	prodl,w,c
  7360  002D46  6ED9               	movwf	fsr2l,c
  7361  002D48  0E04               	movlw	high (_Channels+8)
  7362  002D4A  20F4               	addwfc	prodh,w,c
  7363  002D4C  6EDA               	movwf	fsr2h,c
  7364  002D4E  6ADE               	clrf	postinc2,c
  7365  002D50  6ADE               	clrf	postinc2,c
  7366  002D52  6ADE               	clrf	postinc2,c
  7367  002D54  6ADD               	clrf	postdec2,c
  7368  002D56                     l16619:
  7369                           
  7370                           ; BSR set to: 2
  7371                           ;lorawan_eu.c: 1239: }
  7372                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  7373                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7374  002D56  0EFE               	movlw	-2
  7375  002D58  50E3               	movf	plusw1,w,c
  7376  002D5A  0D0E               	mullw	14
  7377  002D5C  0E08               	movlw	low (_Channels+8)
  7378  002D5E  24F3               	addwf	prodl,w,c
  7379  002D60  6ED9               	movwf	fsr2l,c
  7380  002D62  0E04               	movlw	high (_Channels+8)
  7381  002D64  20F4               	addwfc	prodh,w,c
  7382  002D66  6EDA               	movwf	fsr2h,c
  7383                           
  7384                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  7385  002D68  0EFA               	movlw	-6
  7386  002D6A  CFE3 F048          	movff	plusw1,btemp
  7387  002D6E  50DE               	movf	postinc2,w,c
  7388  002D70  5C48               	subwf	btemp,w,c
  7389  002D72  0EFB               	movlw	-5
  7390  002D74  CFE3 F048          	movff	plusw1,btemp
  7391  002D78  50DE               	movf	postinc2,w,c
  7392  002D7A  5848               	subwfb	btemp,w,c
  7393  002D7C  0EFC               	movlw	-4
  7394  002D7E  CFE3 F048          	movff	plusw1,btemp
  7395  002D82  50DE               	movf	postinc2,w,c
  7396  002D84  5848               	subwfb	btemp,w,c
  7397  002D86  0EFD               	movlw	-3
  7398  002D88  CFE3 F048          	movff	plusw1,btemp
  7399  002D8C  50DE               	movf	postinc2,w,c
  7400  002D8E  5848               	subwfb	btemp,w,c
  7401  002D90  A0D8               	btfss	status,0,c
  7402  002D92  D02F               	goto	l16627
  7403                           
  7404                           ; BSR set to: 2
  7405                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7406  002D94  0EFE               	movlw	-2
  7407  002D96  50E3               	movf	plusw1,w,c
  7408  002D98  0D0E               	mullw	14
  7409  002D9A  0E08               	movlw	low (_Channels+8)
  7410  002D9C  24F3               	addwf	prodl,w,c
  7411  002D9E  6ED9               	movwf	fsr2l,c
  7412  002DA0  0E04               	movlw	high (_Channels+8)
  7413  002DA2  20F4               	addwfc	prodh,w,c
  7414  002DA4  6EDA               	movwf	fsr2h,c
  7415  002DA6  50DE               	movf	postinc2,w,c
  7416  002DA8  10DE               	iorwf	postinc2,w,c
  7417  002DAA  10DE               	iorwf	postinc2,w,c
  7418  002DAC  10DE               	iorwf	postinc2,w,c
  7419  002DAE  B4D8               	btfsc	status,2,c
  7420  002DB0  D020               	goto	l16627
  7421                           
  7422                           ; BSR set to: 2
  7423                           ;lorawan_eu.c: 1241: {
  7424                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  7425                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7426  002DB2  0EFE               	movlw	-2
  7427  002DB4  50E3               	movf	plusw1,w,c
  7428  002DB6  0D0E               	mullw	14
  7429  002DB8  0E08               	movlw	low (_Channels+8)
  7430  002DBA  24F3               	addwf	prodl,w,c
  7431  002DBC  6ED9               	movwf	fsr2l,c
  7432  002DBE  0E04               	movlw	high (_Channels+8)
  7433  002DC0  20F4               	addwfc	prodh,w,c
  7434  002DC2  6EDA               	movwf	fsr2h,c
  7435  002DC4  CFDE F050          	movff	postinc2,btemp+8
  7436  002DC8  CFDE F051          	movff	postinc2,btemp+9
  7437  002DCC  CFDE F052          	movff	postinc2,btemp+10
  7438  002DD0  CFDE F053          	movff	postinc2,btemp+11
  7439                           
  7440                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  7441  002DD4  0EFA               	movlw	-6
  7442  002DD6  C050  FFE3         	movff	btemp+8,plusw1
  7443  002DDA  0EFB               	movlw	-5
  7444  002DDC  C051  FFE3         	movff	btemp+9,plusw1
  7445  002DE0  0EFC               	movlw	-4
  7446  002DE2  C052  FFE3         	movff	btemp+10,plusw1
  7447  002DE6  0EFD               	movlw	-3
  7448  002DE8  C053  FFE3         	movff	btemp+11,plusw1
  7449                           
  7450                           ; BSR set to: 2
  7451                           ;lorawan_eu.c: 1243: found = 1;
  7452                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  7453  002DEC  0EFF               	movlw	-1
  7454  002DEE  6AE3               	clrf	plusw1,c
  7455  002DF0  2AE3               	incf	plusw1,f,c
  7456  002DF2                     l16627:
  7457                           
  7458                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7459  002DF2  0EFE               	movlw	-2
  7460  002DF4  2AE3               	incf	plusw1,f,c
  7461                           
  7462                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  7463  002DF6  0EFE               	movlw	-2
  7464  002DF8  CFE3 F048          	movff	plusw1,btemp
  7465  002DFC  0E0F               	movlw	15
  7466  002DFE  6448               	cpfsgt	btemp,c
  7467  002E00  D73F               	goto	l16609
  7468                           
  7469                           ;lorawan_eu.c: 1244: }
  7470                           ;lorawan_eu.c: 1245: }
  7471                           ;lorawan_eu.c: 1246: }
  7472                           ;lorawan_eu.c: 1247: if ( found == 1 )
  7473                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  7474  002E02  0EFF               	movlw	-1
  7475  002E04  04E3               	decf	plusw1,w,c
  7476  002E06  A4D8               	btfss	status,2,c
  7477  002E08  D09D               	goto	l1306
  7478                           
  7479                           ;lorawan_eu.c: 1248: {
  7480                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  7481                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  7482  002E0A  50E1               	movf	fsr1l,w,c
  7483  002E0C  0FFA               	addlw	-6
  7484  002E0E  6ED9               	movwf	fsr2l,c
  7485  002E10  50E2               	movf	fsr1h,w,c
  7486  002E12  6EDA               	movwf	fsr2h,c
  7487  002E14  0EFF               	movlw	255
  7488  002E16  22DA               	addwfc	fsr2h,f,c
  7489  002E18  CFDE F2C8          	movff	postinc2,_loRa+200
  7490  002E1C  CFDE F2C9          	movff	postinc2,_loRa+201
  7491  002E20  CFDE F2CA          	movff	postinc2,_loRa+202
  7492  002E24  CFDE F2CB          	movff	postinc2,_loRa+203
  7493                           
  7494                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  7495                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  7496  002E28  0EFD               	movlw	-3
  7497  002E2A  50E3               	movf	plusw1,w,c
  7498  002E2C  E10E               	bnz	u20090
  7499  002E2E  0EFA               	movlw	-6
  7500  002E30  28E3               	incf	plusw1,w,c
  7501  002E32  0EFB               	movlw	-5
  7502  002E34  CFE3 F048          	movff	plusw1,btemp
  7503  002E38  0EFF               	movlw	255
  7504  002E3A  5A48               	subwfb	btemp,f,c
  7505  002E3C  0EFC               	movlw	-4
  7506  002E3E  CFE3 F048          	movff	plusw1,btemp
  7507  002E42  0E0F               	movlw	15
  7508  002E44  5A48               	subwfb	btemp,f,c
  7509  002E46  A0D8               	btfss	status,0,c
  7510  002E48  D02B               	goto	l16639
  7511  002E4A                     u20090:
  7512                           
  7513                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  7514  002E4A  50E1               	movf	fsr1l,w,c
  7515  002E4C  0FFA               	addlw	-6
  7516  002E4E  6ED9               	movwf	fsr2l,c
  7517  002E50  50E2               	movf	fsr1h,w,c
  7518  002E52  6EDA               	movwf	fsr2h,c
  7519  002E54  0EFF               	movlw	255
  7520  002E56  22DA               	addwfc	fsr2h,f,c
  7521  002E58  CFDE F060          	movff	postinc2,___lldiv@dividend
  7522  002E5C  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  7523  002E60  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  7524  002E64  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  7525  002E68  0E7D               	movlw	125
  7526  002E6A  0100               	movlb	0	; () banked
  7527  002E6C  6F64               	movwf	___lldiv@divisor& (0+255),b
  7528  002E6E  0E00               	movlw	0
  7529  002E70  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  7530  002E72  0E00               	movlw	0
  7531  002E74  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  7532  002E76  0E00               	movlw	0
  7533  002E78  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  7534  002E7A  ECC4  F03B         	call	___lldiv	;wreg free
  7535  002E7E  C060  F050         	movff	?___lldiv,btemp+8
  7536  002E82  C061  F051         	movff	?___lldiv+1,btemp+9
  7537  002E86  C062  F052         	movff	?___lldiv+2,btemp+10
  7538  002E8A  C063  F053         	movff	?___lldiv+3,btemp+11
  7539  002E8E  0E0C               	movlw	12
  7540  002E90                     u20105:
  7541  002E90  90D8               	bcf	status,0,c
  7542  002E92  3650               	rlcf	btemp+8,f,c
  7543  002E94  3651               	rlcf	btemp+9,f,c
  7544  002E96  3652               	rlcf	btemp+10,f,c
  7545  002E98  3653               	rlcf	btemp+11,f,c
  7546  002E9A  2EE8               	decfsz	wreg,f,c
  7547  002E9C  D7F9               	goto	u20105
  7548  002E9E  D02F               	goto	L1
  7549  002EA0                     l16639:
  7550                           
  7551                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  7552  002EA0  0EFA               	movlw	-6
  7553  002EA2  CFE3 F050          	movff	plusw1,btemp+8
  7554  002EA6  0EFB               	movlw	-5
  7555  002EA8  CFE3 F051          	movff	plusw1,btemp+9
  7556  002EAC  0EFC               	movlw	-4
  7557  002EAE  CFE3 F052          	movff	plusw1,btemp+10
  7558  002EB2  0EFD               	movlw	-3
  7559  002EB4  CFE3 F053          	movff	plusw1,btemp+11
  7560  002EB8  0E0C               	movlw	12
  7561  002EBA                     u20115:
  7562  002EBA  90D8               	bcf	status,0,c
  7563  002EBC  3650               	rlcf	btemp+8,f,c
  7564  002EBE  3651               	rlcf	btemp+9,f,c
  7565  002EC0  3652               	rlcf	btemp+10,f,c
  7566  002EC2  3653               	rlcf	btemp+11,f,c
  7567  002EC4  2EE8               	decfsz	wreg,f,c
  7568  002EC6  D7F9               	goto	u20115
  7569  002EC8  C050  F060         	movff	btemp+8,___lldiv@dividend
  7570  002ECC  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  7571  002ED0  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  7572  002ED4  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  7573  002ED8  0E7D               	movlw	125
  7574  002EDA  0100               	movlb	0	; () banked
  7575  002EDC  6F64               	movwf	___lldiv@divisor& (0+255),b
  7576  002EDE  0E00               	movlw	0
  7577  002EE0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  7578  002EE2  0E00               	movlw	0
  7579  002EE4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  7580  002EE6  0E00               	movlw	0
  7581  002EE8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  7582  002EEA  ECC4  F03B         	call	___lldiv	;wreg free
  7583  002EEE  C060  F050         	movff	?___lldiv,btemp+8
  7584  002EF2  C061  F051         	movff	?___lldiv+1,btemp+9
  7585  002EF6  C062  F052         	movff	?___lldiv+2,btemp+10
  7586  002EFA  C063  F053         	movff	?___lldiv+3,btemp+11
  7587  002EFE                     L1:
  7588                           
  7589                           ;stkvar	_DutyCycleCallback$1852 @ sp[(-10)+0]
  7590  002EFE  0EF6               	movlw	-10
  7591  002F00  C050  FFE3         	movff	btemp+8,plusw1
  7592  002F04  0EF7               	movlw	-9
  7593  002F06  C051  FFE3         	movff	btemp+9,plusw1
  7594  002F0A  0EF8               	movlw	-8
  7595  002F0C  C052  FFE3         	movff	btemp+10,plusw1
  7596  002F10  0EF9               	movlw	-7
  7597  002F12  C053  FFE3         	movff	btemp+11,plusw1
  7598                           
  7599                           ;stkvar	_DutyCycleCallback$1852 @ sp[(-10)+0]
  7600  002F16  50E1               	movf	fsr1l,w,c
  7601  002F18  0FF6               	addlw	-10
  7602  002F1A  6ED9               	movwf	fsr2l,c
  7603  002F1C  50E2               	movf	fsr1h,w,c
  7604  002F1E  6EDA               	movwf	fsr2h,c
  7605  002F20  0EFF               	movlw	255
  7606  002F22  22DA               	addwfc	fsr2h,f,c
  7607  002F24  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  7608  002F28  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  7609  002F2C  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  7610  002F30  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  7611  002F34  0102               	movlb	2	; () banked
  7612  002F36  51E9               	movf	(_loRa+233)& (0+255),w,b
  7613  002F38  EC62  F043         	call	_SwTimerSetTimeout
  7614                           
  7615                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  7616  002F3C  0102               	movlb	2	; () banked
  7617  002F3E  51E9               	movf	(_loRa+233)& (0+255),w,b
  7618  002F40  EC4B  F039         	call	_SwTimerStart
  7619  002F44                     l1306:
  7620                           
  7621                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7622  002F44  0EF5               	movlw	245
  7623  002F46  26E1               	addwf	fsr1l,f,c
  7624  002F48  0EFF               	movlw	255
  7625  002F4A  22E2               	addwfc	fsr1h,f,c
  7626  002F4C  0012               	return		;funcret
  7627  002F4E                     __end_of_DutyCycleCallback:
  7628                           	opt stack 0
  7629                           tosu	equ	0xFFF
  7630                           tosh	equ	0xFFE
  7631                           tosl	equ	0xFFD
  7632                           pclath	equ	0xFFA
  7633                           tblptru	equ	0xFF8
  7634                           tblptrh	equ	0xFF7
  7635                           tblptrl	equ	0xFF6
  7636                           tablat	equ	0xFF5
  7637                           prodh	equ	0xFF4
  7638                           prodl	equ	0xFF3
  7639                           intcon	equ	0xFF2
  7640                           intcon2	equ	0xFF1
  7641                           intcon3	equ	0xFF0
  7642                           postinc0	equ	0xFEE
  7643                           wreg	equ	0xFE8
  7644                           postinc1	equ	0xFE6
  7645                           plusw1	equ	0xFE3
  7646                           fsr1h	equ	0xFE2
  7647                           fsr1l	equ	0xFE1
  7648                           indf2	equ	0xFDF
  7649                           postinc2	equ	0xFDE
  7650                           postdec2	equ	0xFDD
  7651                           fsr2h	equ	0xFDA
  7652                           fsr2l	equ	0xFD9
  7653                           status	equ	0xFD8
  7654                           
  7655 ;; *************** function _UpdateJoinSuccessState *****************
  7656 ;; Defined at:
  7657 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  param           1  [STACK] unsigned char 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1  [STACK] void 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, pro
      +dh, cstack
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;Total ram usage:        0 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:   11
  7678 ;; This function calls:
  7679 ;;		_RxJoinResponse
  7680 ;;		_SwTimerSetTimeout
  7681 ;;		_SwTimerStart
  7682 ;;		___lldiv
  7683 ;; This function is called by:
  7684 ;;		_SetCallbackSoftwareTimers
  7685 ;;		_LORAWAN_RxDone
  7686 ;;		_SwTimersExecute
  7687 ;; This function uses a reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text46
  7691  005874                     __ptext46:
  7692                           	opt stack 0
  7693  005874                     _UpdateJoinSuccessState:
  7694                           	opt stack 0
  7695                           
  7696                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7697  005874  52E6               	movf	postinc1,f,c
  7698  005876  52E6               	movf	postinc1,f,c
  7699  005878  52E6               	movf	postinc1,f,c
  7700  00587A  52E6               	movf	postinc1,f,c
  7701                           
  7702                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  7703                           
  7704                           ;incstack = 0
  7705  00587C  0102               	movlb	2	; () banked
  7706  00587E  9500               	bcf	_loRa& (0+255),2,b
  7707                           
  7708                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  7709  005880  8902               	bsf	(_loRa+2)& (0+255),4,b
  7710                           
  7711                           ; BSR set to: 2
  7712                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  7713  005882  0EF0               	movlw	-16
  7714  005884  1702               	andwf	(_loRa+2)& (0+255),f,b
  7715                           
  7716                           ; BSR set to: 2
  7717                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  7718  005886  6BD0               	clrf	(_loRa+208)& (0+255),b
  7719  005888  6BD1               	clrf	(_loRa+209)& (0+255),b
  7720                           
  7721                           ; BSR set to: 2
  7722                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  7723  00588A  6BEE               	clrf	(_loRa+238)& (0+255),b
  7724                           
  7725                           ; BSR set to: 2
  7726                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  7727  00588C  A503               	btfss	(_loRa+3)& (0+255),2,b
  7728  00588E  D07B               	goto	l15527
  7729                           
  7730                           ; BSR set to: 2
  7731                           ;lorawan.c: 1052: {
  7732                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  7733  005890  51CF               	movf	(_loRa+207)& (0+255),w,b
  7734  005892  E107               	bnz	u18040
  7735  005894  29CC               	incf	(_loRa+204)& (0+255),w,b
  7736  005896  0EFF               	movlw	255
  7737  005898  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  7738  00589A  0E0F               	movlw	15
  7739  00589C  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  7740  00589E  A0D8               	btfss	status,0,c
  7741  0058A0  D024               	goto	l15521
  7742  0058A2                     u18040:
  7743                           
  7744                           ; BSR set to: 2
  7745  0058A2  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
  7746  0058A6  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
  7747  0058AA  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
  7748  0058AE  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
  7749  0058B2  0E7D               	movlw	125
  7750  0058B4  0100               	movlb	0	; () banked
  7751  0058B6  6F64               	movwf	___lldiv@divisor& (0+255),b
  7752  0058B8  0E00               	movlw	0
  7753  0058BA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  7754  0058BC  0E00               	movlw	0
  7755  0058BE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  7756  0058C0  0E00               	movlw	0
  7757  0058C2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  7758  0058C4  ECC4  F03B         	call	___lldiv	;wreg free
  7759  0058C8  C060  F050         	movff	?___lldiv,btemp+8
  7760  0058CC  C061  F051         	movff	?___lldiv+1,btemp+9
  7761  0058D0  C062  F052         	movff	?___lldiv+2,btemp+10
  7762  0058D4  C063  F053         	movff	?___lldiv+3,btemp+11
  7763  0058D8  0E0C               	movlw	12
  7764  0058DA                     u18055:
  7765  0058DA  90D8               	bcf	status,0,c
  7766  0058DC  3650               	rlcf	btemp+8,f,c
  7767  0058DE  3651               	rlcf	btemp+9,f,c
  7768  0058E0  3652               	rlcf	btemp+10,f,c
  7769  0058E2  3653               	rlcf	btemp+11,f,c
  7770  0058E4  2EE8               	decfsz	wreg,f,c
  7771  0058E6  D7F9               	goto	u18055
  7772  0058E8  D02B               	goto	L2
  7773  0058EA                     l15521:
  7774                           
  7775                           ; BSR set to: 2
  7776  0058EA  C2CC  F050         	movff	_loRa+204,btemp+8
  7777  0058EE  C2CD  F051         	movff	_loRa+205,btemp+9
  7778  0058F2  C2CE  F052         	movff	_loRa+206,btemp+10
  7779  0058F6  C2CF  F053         	movff	_loRa+207,btemp+11
  7780  0058FA  0E0C               	movlw	12
  7781  0058FC                     u18065:
  7782  0058FC  90D8               	bcf	status,0,c
  7783  0058FE  3650               	rlcf	btemp+8,f,c
  7784  005900  3651               	rlcf	btemp+9,f,c
  7785  005902  3652               	rlcf	btemp+10,f,c
  7786  005904  3653               	rlcf	btemp+11,f,c
  7787  005906  2EE8               	decfsz	wreg,f,c
  7788  005908  D7F9               	goto	u18065
  7789  00590A  C050  F060         	movff	btemp+8,___lldiv@dividend
  7790  00590E  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  7791  005912  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  7792  005916  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  7793  00591A  0E7D               	movlw	125
  7794  00591C  0100               	movlb	0	; () banked
  7795  00591E  6F64               	movwf	___lldiv@divisor& (0+255),b
  7796  005920  0E00               	movlw	0
  7797  005922  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  7798  005924  0E00               	movlw	0
  7799  005926  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  7800  005928  0E00               	movlw	0
  7801  00592A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  7802  00592C  ECC4  F03B         	call	___lldiv	;wreg free
  7803  005930  C060  F050         	movff	?___lldiv,btemp+8
  7804  005934  C061  F051         	movff	?___lldiv+1,btemp+9
  7805  005938  C062  F052         	movff	?___lldiv+2,btemp+10
  7806  00593C  C063  F053         	movff	?___lldiv+3,btemp+11
  7807  005940                     L2:
  7808                           
  7809                           ;stkvar	_UpdateJoinSuccessState$2523 @ sp[(-4)+0]
  7810  005940  0EFC               	movlw	-4
  7811  005942  C050  FFE3         	movff	btemp+8,plusw1
  7812  005946  0EFD               	movlw	-3
  7813  005948  C051  FFE3         	movff	btemp+9,plusw1
  7814  00594C  0EFE               	movlw	-2
  7815  00594E  C052  FFE3         	movff	btemp+10,plusw1
  7816  005952  0EFF               	movlw	-1
  7817  005954  C053  FFE3         	movff	btemp+11,plusw1
  7818                           
  7819                           ;stkvar	_UpdateJoinSuccessState$2523 @ sp[(-4)+0]
  7820  005958  50E1               	movf	fsr1l,w,c
  7821  00595A  0FFC               	addlw	-4
  7822  00595C  6ED9               	movwf	fsr2l,c
  7823  00595E  50E2               	movf	fsr1h,w,c
  7824  005960  6EDA               	movwf	fsr2h,c
  7825  005962  0EFF               	movlw	255
  7826  005964  22DA               	addwfc	fsr2h,f,c
  7827  005966  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  7828  00596A  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  7829  00596E  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  7830  005972  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  7831  005976  0102               	movlb	2	; () banked
  7832  005978  51E7               	movf	(_loRa+231)& (0+255),w,b
  7833  00597A  EC62  F043         	call	_SwTimerSetTimeout
  7834                           
  7835                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  7836  00597E  0102               	movlb	2	; () banked
  7837  005980  51E7               	movf	(_loRa+231)& (0+255),w,b
  7838  005982  EC4B  F039         	call	_SwTimerStart
  7839  005986                     l15527:
  7840                           
  7841                           ;lorawan.c: 1055: }
  7842                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  7843  005986  0101               	movlb	1	; () banked
  7844  005988  5106               	movf	(_rxPayload+2)& (0+255),w,b
  7845  00598A  1107               	iorwf	(_rxPayload+3)& (0+255),w,b
  7846  00598C  B4D8               	btfsc	status,2,c
  7847  00598E  D00C               	goto	u18089
  7848                           
  7849                           ; BSR set to: 1
  7850                           ;lorawan.c: 1058: {
  7851                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  7852  005990  D801               	call	u18088
  7853  005992  D00A               	goto	u18089
  7854  005994                     u18088:
  7855  005994  0005               	push	
  7856  005996  6EFA               	movwf	pclath,c
  7857  005998  5106               	movf	(_rxPayload+2)& (0+255),w,b
  7858  00599A  6EFD               	movwf	tosl,c
  7859  00599C  5107               	movf	(_rxPayload+3)& (0+255),w,b
  7860  00599E  6EFE               	movwf	tosh,c
  7861  0059A0  6AFF               	clrf	tosu,c
  7862  0059A2  50FA               	movf	pclath,w,c
  7863  0059A4  0E01               	movlw	1
  7864  0059A6  0012               	return		;indir
  7865  0059A8                     u18089:
  7866                           
  7867                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  7868  0059A8  0EFB               	movlw	251
  7869  0059AA  26E1               	addwf	fsr1l,f,c
  7870  0059AC  0EFF               	movlw	255
  7871  0059AE  22E2               	addwfc	fsr1h,f,c
  7872  0059B0  0012               	return		;funcret
  7873  0059B2                     __end_of_UpdateJoinSuccessState:
  7874                           	opt stack 0
  7875                           tosu	equ	0xFFF
  7876                           tosh	equ	0xFFE
  7877                           tosl	equ	0xFFD
  7878                           pclath	equ	0xFFA
  7879                           tblptru	equ	0xFF8
  7880                           tblptrh	equ	0xFF7
  7881                           tblptrl	equ	0xFF6
  7882                           tablat	equ	0xFF5
  7883                           prodh	equ	0xFF4
  7884                           prodl	equ	0xFF3
  7885                           intcon	equ	0xFF2
  7886                           intcon2	equ	0xFF1
  7887                           intcon3	equ	0xFF0
  7888                           postinc0	equ	0xFEE
  7889                           wreg	equ	0xFE8
  7890                           postinc1	equ	0xFE6
  7891                           plusw1	equ	0xFE3
  7892                           fsr1h	equ	0xFE2
  7893                           fsr1l	equ	0xFE1
  7894                           indf2	equ	0xFDF
  7895                           postinc2	equ	0xFDE
  7896                           postdec2	equ	0xFDD
  7897                           fsr2h	equ	0xFDA
  7898                           fsr2l	equ	0xFD9
  7899                           status	equ	0xFD8
  7900                           
  7901 ;; *************** function _AutomaticReplyCallback *****************
  7902 ;; Defined at:
  7903 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  param           1  [STACK] unsigned char 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;		None
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  1  [STACK] void 
  7910 ;; Registers used:
  7911 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7912 ;; Tracked objects:
  7913 ;;		On entry : 3F/0
  7914 ;;		On exit  : 3F/2
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7921 ;;Total ram usage:        0 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; Hardware stack levels required when called:   14
  7924 ;; This function calls:
  7925 ;;		_LORAWAN_Send
  7926 ;; This function is called by:
  7927 ;;		_SetCallbackSoftwareTimers
  7928 ;;		_SwTimersExecute
  7929 ;; This function uses a reentrant model
  7930 ;;
  7931                           
  7932                           	psect	text47
  7933  008D98                     __ptext47:
  7934                           	opt stack 0
  7935  008D98                     _AutomaticReplyCallback:
  7936                           	opt stack 14
  7937                           
  7938                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  7939                           
  7940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7941                           ;incstack = 0
  7942  008D98  0EF0               	movlw	-16
  7943  008D9A  0102               	movlb	2	; () banked
  7944  008D9C  1702               	andwf	(_loRa+2)& (0+255),f,b
  7945                           
  7946                           ; BSR set to: 2
  7947                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  7948  008D9E  0E00               	movlw	0
  7949  008DA0  0100               	movlb	0	; () banked
  7950  008DA2  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  7951  008DA4  0E00               	movlw	0
  7952  008DA6  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  7953  008DA8  0E00               	movlw	0
  7954  008DAA  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  7955  008DAC  0E00               	movlw	0
  7956  008DAE  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  7957  008DB0  0E00               	movlw	0
  7958  008DB2  EC21  F036         	call	_LORAWAN_Send
  7959                           
  7960                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  7961  008DB6  0102               	movlb	2	; () banked
  7962  008DB8  9700               	bcf	_loRa& (0+255),3,b
  7963                           
  7964                           ; BSR set to: 2
  7965                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  7966  008DBA  52E5               	movf	postdec1,f,c
  7967  008DBC  0012               	return		;funcret
  7968  008DBE                     __end_of_AutomaticReplyCallback:
  7969                           	opt stack 0
  7970                           tosu	equ	0xFFF
  7971                           tosh	equ	0xFFE
  7972                           tosl	equ	0xFFD
  7973                           pclath	equ	0xFFA
  7974                           tblptru	equ	0xFF8
  7975                           tblptrh	equ	0xFF7
  7976                           tblptrl	equ	0xFF6
  7977                           tablat	equ	0xFF5
  7978                           prodh	equ	0xFF4
  7979                           prodl	equ	0xFF3
  7980                           intcon	equ	0xFF2
  7981                           intcon2	equ	0xFF1
  7982                           intcon3	equ	0xFF0
  7983                           postinc0	equ	0xFEE
  7984                           wreg	equ	0xFE8
  7985                           postinc1	equ	0xFE6
  7986                           postdec1	equ	0xFE5
  7987                           plusw1	equ	0xFE3
  7988                           fsr1h	equ	0xFE2
  7989                           fsr1l	equ	0xFE1
  7990                           indf2	equ	0xFDF
  7991                           postinc2	equ	0xFDE
  7992                           postdec2	equ	0xFDD
  7993                           fsr2h	equ	0xFDA
  7994                           fsr2l	equ	0xFD9
  7995                           status	equ	0xFD8
  7996                           
  7997 ;; *************** function _AckRetransmissionCallback *****************
  7998 ;; Defined at:
  7999 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;  param           1  [STACK] unsigned char 
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;  maximumPacke    1  [STACK] unsigned char 
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  1  [STACK] void 
  8006 ;; Registers used:
  8007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8008 ;; Tracked objects:
  8009 ;;		On entry : 3F/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8017 ;;Total ram usage:        0 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; Hardware stack levels required when called:   13
  8020 ;; This function calls:
  8021 ;;		_FindSmallestDataRate
  8022 ;;		_LORAWAN_GetMaxPayloadSize
  8023 ;;		_RADIO_Transmit
  8024 ;;		_ResetParametersForConfirmedTransmission
  8025 ;;		_RxData
  8026 ;;		_SelectChannelForTransmission
  8027 ;;		_UpdateRetransmissionAckTimeoutState
  8028 ;; This function is called by:
  8029 ;;		_SetCallbackSoftwareTimers
  8030 ;;		_SwTimersExecute
  8031 ;; This function uses a reentrant model
  8032 ;;
  8033                           
  8034                           	psect	text48
  8035  005D30                     __ptext48:
  8036                           	opt stack 0
  8037  005D30                     _AckRetransmissionCallback:
  8038                           	opt stack 0
  8039                           
  8040                           ; BSR set to: 2
  8041                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  8042  005D30  52E6               	movf	postinc1,f,c
  8043                           
  8044                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  8045                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  8046                           
  8047                           ;incstack = 0
  8048  005D32  0102               	movlb	2	; () banked
  8049  005D34  B103               	btfsc	(_loRa+3)& (0+255),0,b
  8050  005D36  D086               	goto	l16745
  8051                           
  8052                           ; BSR set to: 2
  8053                           ;lorawan.c: 939: {
  8054                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  8055  005D38  51D9               	movf	(_loRa+217)& (0+255),w,b
  8056  005D3A  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  8057  005D3C  A0D8               	btfss	status,0,c
  8058  005D3E  D061               	goto	l16735
  8059                           
  8060                           ; BSR set to: 2
  8061                           ;lorawan.c: 941: {
  8062                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  8063  005D40  EC3C  F03F         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  8064  005D44  6E53               	movwf	btemp+11,c
  8065  005D46  0E0D               	movlw	13
  8066  005D48  2653               	addwf	btemp+11,f,c
  8067                           
  8068                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  8069  005D4A  0EFF               	movlw	-1
  8070  005D4C  C053  FFE3         	movff	btemp+11,plusw1
  8071                           
  8072                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  8073                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  8074  005D50  0EFF               	movlw	-1
  8075  005D52  50E3               	movf	plusw1,w,c
  8076  005D54  6E49               	movwf	btemp+1,c
  8077  005D56  6A4A               	clrf	btemp+2,c
  8078  005D58  0102               	movlb	2	; () banked
  8079  005D5A  51D4               	movf	(_loRa+212)& (0+255),w,b
  8080  005D5C  5C49               	subwf	btemp+1,w,c
  8081  005D5E  51D5               	movf	(_loRa+213)& (0+255),w,b
  8082  005D60  584A               	subwfb	btemp+2,w,c
  8083  005D62  A0D8               	btfss	status,0,c
  8084  005D64  D039               	goto	l16729
  8085                           
  8086                           ; BSR set to: 2
  8087                           ;lorawan.c: 946: {
  8088                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  8089  005D66  0E01               	movlw	1
  8090  005D68  EC70  F03D         	call	_SelectChannelForTransmission
  8091  005D6C  0900               	iorlw	0
  8092  005D6E  A4D8               	btfss	status,2,c
  8093  005D70  D030               	goto	l16725
  8094                           
  8095                           ;lorawan.c: 948: {
  8096                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  8097  005D72  0EF0               	movlw	low (_macBuffer+16)
  8098  005D74  0100               	movlb	0	; () banked
  8099  005D76  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  8100  005D78  0E04               	movlw	high (_macBuffer+16)
  8101  005D7A  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  8102  005D7C  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
  8103  005D80  EC51  F01E         	call	_RADIO_Transmit	;wreg free
  8104  005D84  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
  8105  005D88  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
  8106  005D8C  5049               	movf	btemp+1,w,c
  8107  005D8E  104A               	iorwf	btemp+2,w,c
  8108  005D90  A4D8               	btfss	status,2,c
  8109  005D92  D01F               	goto	l16725
  8110                           
  8111                           ;lorawan.c: 951: {
  8112                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  8113  005D94  0102               	movlb	2	; () banked
  8114  005D96  5102               	movf	(_loRa+2)& (0+255),w,b
  8115  005D98  0BF0               	andlw	-16
  8116  005D9A  0901               	iorlw	1
  8117  005D9C  6F02               	movwf	(_loRa+2)& (0+255),b
  8118                           
  8119                           ; BSR set to: 2
  8120                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  8121  005D9E  2BD9               	incf	(_loRa+217)& (0+255),f,b
  8122                           
  8123                           ; BSR set to: 2
  8124                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  8125  005DA0  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  8126  005DA2  D052               	goto	l1847
  8127                           
  8128                           ; BSR set to: 2
  8129  005DA4  51DF               	movf	(_loRa+223)& (0+255),w,b
  8130  005DA6  B4D8               	btfsc	status,2,c
  8131  005DA8  D04F               	goto	l1847
  8132                           
  8133                           ; BSR set to: 2
  8134  005DAA  51D9               	movf	(_loRa+217)& (0+255),w,b
  8135  005DAC  6E49               	movwf	btemp+1,c
  8136  005DAE  6A4A               	clrf	btemp+2,c
  8137  005DB0  51D7               	movf	(_loRa+215)& (0+255),w,b
  8138  005DB2  6E52               	movwf	btemp+10,c
  8139  005DB4  6A53               	clrf	btemp+11,c
  8140  005DB6  0E01               	movlw	1
  8141  005DB8  2652               	addwf	btemp+10,f,c
  8142  005DBA  0E00               	movlw	0
  8143  005DBC  2253               	addwfc	btemp+11,f,c
  8144  005DBE  5049               	movf	btemp+1,w,c
  8145  005DC0  1852               	xorwf	btemp+10,w,c
  8146  005DC2  E104               	bnz	u20320
  8147  005DC4  504A               	movf	btemp+2,w,c
  8148  005DC6  1853               	xorwf	btemp+11,w,c
  8149  005DC8  B4D8               	btfsc	status,2,c
  8150  005DCA  D03E               	goto	l1847
  8151  005DCC                     u20320:
  8152                           
  8153                           ; BSR set to: 2
  8154                           ;lorawan.c: 957: {
  8155                           ;lorawan.c: 958: FindSmallestDataRate();
  8156  005DCC  EC6A  F034         	call	_FindSmallestDataRate	;wreg free
  8157  005DD0  D03B               	goto	l1847
  8158  005DD2                     l16725:
  8159                           
  8160                           ;lorawan.c: 961: else
  8161                           ;lorawan.c: 962: {
  8162                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  8163  005DD2  EC01  F03D         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  8164  005DD6  D038               	goto	l1847
  8165  005DD8                     l16729:
  8166                           
  8167                           ; BSR set to: 2
  8168                           ;lorawan.c: 973: else
  8169                           ;lorawan.c: 974: {
  8170                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  8171  005DD8  EC79  F048         	call	_ResetParametersForConfirmedTransmission	;wreg free
  8172                           
  8173                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  8174  005DDC  0101               	movlb	1	; () banked
  8175  005DDE  5104               	movf	_rxPayload& (0+255),w,b
  8176  005DE0  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
  8177  005DE2  B4D8               	btfsc	status,2,c
  8178  005DE4  D031               	goto	l1847
  8179                           
  8180                           ; BSR set to: 1
  8181                           ;lorawan.c: 977: {
  8182                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  8183  005DE6  0E00               	movlw	0
  8184  005DE8  0100               	movlb	0	; () banked
  8185  005DEA  6F60               	movwf	RxData@pData& (0+255),b
  8186  005DEC  0E00               	movlw	0
  8187  005DEE  6F61               	movwf	(RxData@pData+1)& (0+255),b
  8188  005DF0  0E00               	movlw	0
  8189  005DF2  6F62               	movwf	RxData@dataLength& (0+255),b
  8190  005DF4  0E04               	movlw	4
  8191  005DF6  6F63               	movwf	RxData@status& (0+255),b
  8192  005DF8  D801               	call	u20348
  8193  005DFA  D026               	goto	l1847
  8194  005DFC                     u20348:
  8195  005DFC  0005               	push	
  8196  005DFE  6EFA               	movwf	pclath,c
  8197  005E00  D019               	goto	L3
  8198  005E02                     l16735:
  8199                           
  8200                           ; BSR set to: 2
  8201                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  8202  005E02  51D9               	movf	(_loRa+217)& (0+255),w,b
  8203  005E04  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  8204  005E06  A0D8               	btfss	status,0,c
  8205                           
  8206                           ; BSR set to: 2
  8207  005E08  B103               	btfsc	(_loRa+3)& (0+255),0,b
  8208  005E0A  D01E               	goto	l1847
  8209                           
  8210                           ; BSR set to: 2
  8211                           ;lorawan.c: 983: {
  8212                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  8213  005E0C  EC79  F048         	call	_ResetParametersForConfirmedTransmission	;wreg free
  8214                           
  8215                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  8216  005E10  0101               	movlb	1	; () banked
  8217  005E12  5104               	movf	_rxPayload& (0+255),w,b
  8218  005E14  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
  8219  005E16  B4D8               	btfsc	status,2,c
  8220  005E18  D017               	goto	l1847
  8221                           
  8222                           ; BSR set to: 1
  8223                           ;lorawan.c: 986: {
  8224                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  8225  005E1A  0E00               	movlw	0
  8226  005E1C  0100               	movlb	0	; () banked
  8227  005E1E  6F60               	movwf	RxData@pData& (0+255),b
  8228  005E20  0E00               	movlw	0
  8229  005E22  6F61               	movwf	(RxData@pData+1)& (0+255),b
  8230  005E24  0E00               	movlw	0
  8231  005E26  6F62               	movwf	RxData@dataLength& (0+255),b
  8232  005E28  0E00               	movlw	0
  8233  005E2A  6F63               	movwf	RxData@status& (0+255),b
  8234  005E2C  D801               	call	u20388
  8235  005E2E  D00C               	goto	l1847
  8236  005E30                     u20388:
  8237  005E30  0005               	push	
  8238  005E32  6EFA               	movwf	pclath,c
  8239  005E34                     L3:
  8240  005E34  0101               	movlb	1	; () banked
  8241  005E36  5104               	movf	_rxPayload& (0+255),w,b
  8242  005E38  6EFD               	movwf	tosl,c
  8243  005E3A  5105               	movf	(_rxPayload+1)& (0+255),w,b
  8244  005E3C  6EFE               	movwf	tosh,c
  8245  005E3E  6AFF               	clrf	tosu,c
  8246  005E40  50FA               	movf	pclath,w,c
  8247  005E42  0012               	return		;indir
  8248  005E44                     l16745:
  8249                           
  8250                           ; BSR set to: 2
  8251                           ;lorawan.c: 991: else
  8252                           ;lorawan.c: 992: {
  8253                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  8254  005E44  EC79  F048         	call	_ResetParametersForConfirmedTransmission	;wreg free
  8255  005E48                     l1847:
  8256                           
  8257                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  8258  005E48  52E5               	movf	postdec1,f,c
  8259  005E4A  52E5               	movf	postdec1,f,c
  8260  005E4C  0012               	return		;funcret
  8261  005E4E                     __end_of_AckRetransmissionCallback:
  8262                           	opt stack 0
  8263                           tosu	equ	0xFFF
  8264                           tosh	equ	0xFFE
  8265                           tosl	equ	0xFFD
  8266                           pclath	equ	0xFFA
  8267                           tblptru	equ	0xFF8
  8268                           tblptrh	equ	0xFF7
  8269                           tblptrl	equ	0xFF6
  8270                           tablat	equ	0xFF5
  8271                           prodh	equ	0xFF4
  8272                           prodl	equ	0xFF3
  8273                           intcon	equ	0xFF2
  8274                           intcon2	equ	0xFF1
  8275                           intcon3	equ	0xFF0
  8276                           postinc0	equ	0xFEE
  8277                           wreg	equ	0xFE8
  8278                           postinc1	equ	0xFE6
  8279                           postdec1	equ	0xFE5
  8280                           plusw1	equ	0xFE3
  8281                           fsr1h	equ	0xFE2
  8282                           fsr1l	equ	0xFE1
  8283                           indf2	equ	0xFDF
  8284                           postinc2	equ	0xFDE
  8285                           postdec2	equ	0xFDD
  8286                           fsr2h	equ	0xFDA
  8287                           fsr2l	equ	0xFD9
  8288                           status	equ	0xFD8
  8289                           
  8290 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  8291 ;; Defined at:
  8292 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  param           1  [STACK] unsigned char 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;  iCtr            1  [STACK] unsigned char 
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1  [STACK] void 
  8299 ;; Registers used:
  8300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
  8301 ;; Tracked objects:
  8302 ;;		On entry : 3F/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;Total ram usage:        0 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:   11
  8313 ;; This function calls:
  8314 ;;		_SwTimerSetTimeout
  8315 ;;		_SwTimerStart
  8316 ;;		___lldiv
  8317 ;; This function is called by:
  8318 ;;		_SetCallbackSoftwareTimers
  8319 ;;		_SwTimersExecute
  8320 ;; This function uses a reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text49
  8324  004EDA                     __ptext49:
  8325                           	opt stack 0
  8326  004EDA                     _LORAWAN_LinkCheckCallback:
  8327                           	opt stack 0
  8328                           
  8329                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  8330  004EDA  0E05               	movlw	5
  8331  004EDC  26E1               	addwf	fsr1l,f,c
  8332  004EDE  0E00               	movlw	0
  8333  004EE0  22E2               	addwfc	fsr1h,f,c
  8334                           
  8335                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  8336                           
  8337                           ;incstack = 0
  8338  004EE2  0102               	movlb	2	; () banked
  8339  004EE4  A103               	btfss	(_loRa+3)& (0+255),0,b
  8340                           
  8341                           ; BSR set to: 2
  8342  004EE6  A503               	btfss	(_loRa+3)& (0+255),2,b
  8343  004EE8  D02C               	goto	l16689
  8344                           
  8345                           ; BSR set to: 2
  8346                           ;lorawan.c: 886: {
  8347                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  8348                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  8349  004EEA  0EFF               	movlw	-1
  8350  004EEC  6AE3               	clrf	plusw1,c
  8351  004EEE  D00F               	goto	l16679
  8352  004EF0                     l16673:
  8353                           
  8354                           ; BSR set to: 2
  8355                           ;lorawan.c: 889: {
  8356                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  8357                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  8358  004EF0  0EFF               	movlw	-1
  8359  004EF2  50E3               	movf	plusw1,w,c
  8360  004EF4  0D02               	mullw	2
  8361  004EF6  0EA8               	movlw	low (_loRa+168)
  8362  004EF8  24F3               	addwf	prodl,w,c
  8363  004EFA  6ED9               	movwf	fsr2l,c
  8364  004EFC  0E02               	movlw	high (_loRa+168)
  8365  004EFE  20F4               	addwfc	prodh,w,c
  8366  004F00  6EDA               	movwf	fsr2h,c
  8367  004F02  0E02               	movlw	2
  8368  004F04  18DE               	xorwf	postinc2,w,c
  8369  004F06  B4D8               	btfsc	status,2,c
  8370  004F08  D009               	goto	u20180
  8371                           
  8372                           ; BSR set to: 2
  8373                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  8374  004F0A  0EFF               	movlw	-1
  8375  004F0C  2AE3               	incf	plusw1,f,c
  8376  004F0E                     l16679:
  8377                           
  8378                           ; BSR set to: 2
  8379                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  8380  004F0E  0EFF               	movlw	-1
  8381  004F10  CFE3 F048          	movff	plusw1,btemp
  8382  004F14  51A7               	movf	(_loRa+167)& (0+255),w,b
  8383  004F16  5C48               	subwf	btemp,w,c
  8384  004F18  A0D8               	btfss	status,0,c
  8385  004F1A  D7EA               	goto	l16673
  8386  004F1C                     u20180:
  8387                           
  8388                           ; BSR set to: 2
  8389                           ;lorawan.c: 893: }
  8390                           ;lorawan.c: 894: }
  8391                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  8392                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  8393  004F1C  0EFF               	movlw	-1
  8394  004F1E  50E3               	movf	plusw1,w,c
  8395  004F20  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  8396  004F22  A4D8               	btfss	status,2,c
  8397  004F24  D00E               	goto	l16689
  8398                           
  8399                           ; BSR set to: 2
  8400                           ;lorawan.c: 897: {
  8401                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  8402  004F26  51A7               	movf	(_loRa+167)& (0+255),w,b
  8403  004F28  0D02               	mullw	2
  8404  004F2A  0EA8               	movlw	low (_loRa+168)
  8405  004F2C  24F3               	addwf	prodl,w,c
  8406  004F2E  6ED9               	movwf	fsr2l,c
  8407  004F30  0E02               	movlw	high (_loRa+168)
  8408  004F32  20F4               	addwfc	prodh,w,c
  8409  004F34  6EDA               	movwf	fsr2h,c
  8410  004F36  0E02               	movlw	2
  8411  004F38  6EDF               	movwf	indf2,c
  8412                           
  8413                           ; BSR set to: 2
  8414                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  8415  004F3A  0E10               	movlw	16
  8416  004F3C  61A7               	cpfslt	(_loRa+167)& (0+255),b
  8417  004F3E  D001               	goto	l16689
  8418                           
  8419                           ; BSR set to: 2
  8420                           ;lorawan.c: 901: {
  8421                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  8422  004F40  2BA7               	incf	(_loRa+167)& (0+255),f,b
  8423  004F42                     l16689:
  8424                           
  8425                           ; BSR set to: 2
  8426                           ;lorawan.c: 903: }
  8427                           ;lorawan.c: 904: }
  8428                           ;lorawan.c: 905: }
  8429                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  8430  004F42  A503               	btfss	(_loRa+3)& (0+255),2,b
  8431  004F44  D07B               	goto	l1825
  8432                           
  8433                           ; BSR set to: 2
  8434                           ;lorawan.c: 909: {
  8435                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  8436  004F46  51CF               	movf	(_loRa+207)& (0+255),w,b
  8437  004F48  E107               	bnz	u20220
  8438  004F4A  29CC               	incf	(_loRa+204)& (0+255),w,b
  8439  004F4C  0EFF               	movlw	255
  8440  004F4E  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  8441  004F50  0E0F               	movlw	15
  8442  004F52  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  8443  004F54  A0D8               	btfss	status,0,c
  8444  004F56  D024               	goto	l16695
  8445  004F58                     u20220:
  8446                           
  8447                           ; BSR set to: 2
  8448  004F58  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
  8449  004F5C  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
  8450  004F60  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
  8451  004F64  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
  8452  004F68  0E7D               	movlw	125
  8453  004F6A  0100               	movlb	0	; () banked
  8454  004F6C  6F64               	movwf	___lldiv@divisor& (0+255),b
  8455  004F6E  0E00               	movlw	0
  8456  004F70  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8457  004F72  0E00               	movlw	0
  8458  004F74  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8459  004F76  0E00               	movlw	0
  8460  004F78  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8461  004F7A  ECC4  F03B         	call	___lldiv	;wreg free
  8462  004F7E  C060  F050         	movff	?___lldiv,btemp+8
  8463  004F82  C061  F051         	movff	?___lldiv+1,btemp+9
  8464  004F86  C062  F052         	movff	?___lldiv+2,btemp+10
  8465  004F8A  C063  F053         	movff	?___lldiv+3,btemp+11
  8466  004F8E  0E0C               	movlw	12
  8467  004F90                     u20235:
  8468  004F90  90D8               	bcf	status,0,c
  8469  004F92  3650               	rlcf	btemp+8,f,c
  8470  004F94  3651               	rlcf	btemp+9,f,c
  8471  004F96  3652               	rlcf	btemp+10,f,c
  8472  004F98  3653               	rlcf	btemp+11,f,c
  8473  004F9A  2EE8               	decfsz	wreg,f,c
  8474  004F9C  D7F9               	goto	u20235
  8475  004F9E  D02B               	goto	L4
  8476  004FA0                     l16695:
  8477                           
  8478                           ; BSR set to: 2
  8479  004FA0  C2CC  F050         	movff	_loRa+204,btemp+8
  8480  004FA4  C2CD  F051         	movff	_loRa+205,btemp+9
  8481  004FA8  C2CE  F052         	movff	_loRa+206,btemp+10
  8482  004FAC  C2CF  F053         	movff	_loRa+207,btemp+11
  8483  004FB0  0E0C               	movlw	12
  8484  004FB2                     u20245:
  8485  004FB2  90D8               	bcf	status,0,c
  8486  004FB4  3650               	rlcf	btemp+8,f,c
  8487  004FB6  3651               	rlcf	btemp+9,f,c
  8488  004FB8  3652               	rlcf	btemp+10,f,c
  8489  004FBA  3653               	rlcf	btemp+11,f,c
  8490  004FBC  2EE8               	decfsz	wreg,f,c
  8491  004FBE  D7F9               	goto	u20245
  8492  004FC0  C050  F060         	movff	btemp+8,___lldiv@dividend
  8493  004FC4  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  8494  004FC8  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  8495  004FCC  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  8496  004FD0  0E7D               	movlw	125
  8497  004FD2  0100               	movlb	0	; () banked
  8498  004FD4  6F64               	movwf	___lldiv@divisor& (0+255),b
  8499  004FD6  0E00               	movlw	0
  8500  004FD8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8501  004FDA  0E00               	movlw	0
  8502  004FDC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8503  004FDE  0E00               	movlw	0
  8504  004FE0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8505  004FE2  ECC4  F03B         	call	___lldiv	;wreg free
  8506  004FE6  C060  F050         	movff	?___lldiv,btemp+8
  8507  004FEA  C061  F051         	movff	?___lldiv+1,btemp+9
  8508  004FEE  C062  F052         	movff	?___lldiv+2,btemp+10
  8509  004FF2  C063  F053         	movff	?___lldiv+3,btemp+11
  8510  004FF6                     L4:
  8511                           
  8512                           ;stkvar	_LORAWAN_LinkCheckCallback$2506 @ sp[(-5)+0]
  8513  004FF6  0EFB               	movlw	-5
  8514  004FF8  C050  FFE3         	movff	btemp+8,plusw1
  8515  004FFC  0EFC               	movlw	-4
  8516  004FFE  C051  FFE3         	movff	btemp+9,plusw1
  8517  005002  0EFD               	movlw	-3
  8518  005004  C052  FFE3         	movff	btemp+10,plusw1
  8519  005008  0EFE               	movlw	-2
  8520  00500A  C053  FFE3         	movff	btemp+11,plusw1
  8521                           
  8522                           ;stkvar	_LORAWAN_LinkCheckCallback$2506 @ sp[(-5)+0]
  8523  00500E  50E1               	movf	fsr1l,w,c
  8524  005010  0FFB               	addlw	-5
  8525  005012  6ED9               	movwf	fsr2l,c
  8526  005014  50E2               	movf	fsr1h,w,c
  8527  005016  6EDA               	movwf	fsr2h,c
  8528  005018  0EFF               	movlw	255
  8529  00501A  22DA               	addwfc	fsr2h,f,c
  8530  00501C  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  8531  005020  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  8532  005024  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  8533  005028  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  8534  00502C  0102               	movlb	2	; () banked
  8535  00502E  51E7               	movf	(_loRa+231)& (0+255),w,b
  8536  005030  EC62  F043         	call	_SwTimerSetTimeout
  8537                           
  8538                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  8539  005034  0102               	movlb	2	; () banked
  8540  005036  51E7               	movf	(_loRa+231)& (0+255),w,b
  8541  005038  EC4B  F039         	call	_SwTimerStart
  8542  00503C                     l1825:
  8543                           
  8544                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  8545  00503C  0EFA               	movlw	250
  8546  00503E  26E1               	addwf	fsr1l,f,c
  8547  005040  0EFF               	movlw	255
  8548  005042  22E2               	addwfc	fsr1h,f,c
  8549  005044  0012               	return		;funcret
  8550  005046                     __end_of_LORAWAN_LinkCheckCallback:
  8551                           	opt stack 0
  8552                           tosu	equ	0xFFF
  8553                           tosh	equ	0xFFE
  8554                           tosl	equ	0xFFD
  8555                           pclath	equ	0xFFA
  8556                           tblptru	equ	0xFF8
  8557                           tblptrh	equ	0xFF7
  8558                           tblptrl	equ	0xFF6
  8559                           tablat	equ	0xFF5
  8560                           prodh	equ	0xFF4
  8561                           prodl	equ	0xFF3
  8562                           intcon	equ	0xFF2
  8563                           intcon2	equ	0xFF1
  8564                           intcon3	equ	0xFF0
  8565                           postinc0	equ	0xFEE
  8566                           wreg	equ	0xFE8
  8567                           postinc1	equ	0xFE6
  8568                           postdec1	equ	0xFE5
  8569                           plusw1	equ	0xFE3
  8570                           fsr1h	equ	0xFE2
  8571                           fsr1l	equ	0xFE1
  8572                           indf2	equ	0xFDF
  8573                           postinc2	equ	0xFDE
  8574                           postdec2	equ	0xFDD
  8575                           fsr2h	equ	0xFDA
  8576                           fsr2l	equ	0xFD9
  8577                           status	equ	0xFD8
  8578                           
  8579 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  8580 ;; Defined at:
  8581 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  param           1  [STACK] unsigned char 
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;  freq            4  [STACK] unsigned long 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1  [STACK] void 
  8588 ;; Registers used:
  8589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  8590 ;; Tracked objects:
  8591 ;;		On entry : 3F/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;Total ram usage:        0 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:   13
  8602 ;; This function calls:
  8603 ;;		_ConfigureRadioRx
  8604 ;;		_GetRx1Freq
  8605 ;;		_RADIO_ReceiveStart
  8606 ;;		_RADIO_ReceiveStop
  8607 ;;		_RADIO_ReleaseData
  8608 ;; This function is called by:
  8609 ;;		_SetCallbackSoftwareTimers
  8610 ;;		_SwTimersExecute
  8611 ;; This function uses a reentrant model
  8612 ;;
  8613                           
  8614                           	psect	text50
  8615  006DDE                     __ptext50:
  8616                           	opt stack 0
  8617  006DDE                     _LORAWAN_ReceiveWindow1Callback:
  8618                           	opt stack 0
  8619                           
  8620                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  8621  006DDE  52E6               	movf	postinc1,f,c
  8622  006DE0  52E6               	movf	postinc1,f,c
  8623  006DE2  52E6               	movf	postinc1,f,c
  8624  006DE4  52E6               	movf	postinc1,f,c
  8625                           
  8626                           ;lorawan.c: 798: uint32_t freq;
  8627                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  8628                           
  8629                           ;incstack = 0
  8630  006DE6  0102               	movlb	2	; () banked
  8631  006DE8  B103               	btfsc	(_loRa+3)& (0+255),0,b
  8632  006DEA  D050               	goto	l1798
  8633                           
  8634                           ; BSR set to: 2
  8635                           ;lorawan.c: 801: {
  8636                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  8637  006DEC  0E02               	movlw	2
  8638  006DEE  1912               	xorwf	(_loRa+18)& (0+255),w,b
  8639  006DF0  B4D8               	btfsc	status,2,c
  8640                           
  8641                           ; BSR set to: 2
  8642                           ;lorawan.c: 803: {
  8643                           ;lorawan.c: 804: RADIO_ReceiveStop();
  8644  006DF2  EC45  F047         	call	_RADIO_ReceiveStop	;wreg free
  8645                           
  8646                           ;lorawan.c: 805: }
  8647                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  8648  006DF6  0102               	movlb	2	; () banked
  8649  006DF8  51EF               	movf	(_loRa+239)& (0+255),w,b
  8650  006DFA  5D17               	subwf	(_loRa+23)& (0+255),w,b
  8651  006DFC  A0D8               	btfss	status,0,c
  8652  006DFE  D004               	goto	l1796
  8653                           
  8654                           ; BSR set to: 2
  8655                           ;lorawan.c: 807: {
  8656                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  8657  006E00  51EF               	movf	(_loRa+239)& (0+255),w,b
  8658  006E02  5D17               	subwf	(_loRa+23)& (0+255),w,b
  8659  006E04  6F17               	movwf	(_loRa+23)& (0+255),b
  8660                           
  8661                           ;lorawan.c: 809: }
  8662  006E06  D001               	goto	l16655
  8663  006E08                     l1796:
  8664                           
  8665                           ; BSR set to: 2
  8666                           ;lorawan.c: 810: else
  8667                           ;lorawan.c: 811: {
  8668                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  8669  006E08  6B17               	clrf	(_loRa+23)& (0+255),b
  8670  006E0A                     l16655:
  8671                           
  8672                           ; BSR set to: 2
  8673                           ;lorawan.c: 813: }
  8674                           ;lorawan.c: 815: freq = GetRx1Freq();
  8675  006E0A  EC70  F048         	call	_GetRx1Freq	;wreg free
  8676  006E0E  C060  F050         	movff	?_GetRx1Freq,btemp+8
  8677  006E12  C061  F051         	movff	?_GetRx1Freq+1,btemp+9
  8678  006E16  C062  F052         	movff	?_GetRx1Freq+2,btemp+10
  8679  006E1A  C063  F053         	movff	?_GetRx1Freq+3,btemp+11
  8680                           
  8681                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  8682  006E1E  0EFC               	movlw	-4
  8683  006E20  C050  FFE3         	movff	btemp+8,plusw1
  8684  006E24  0EFD               	movlw	-3
  8685  006E26  C051  FFE3         	movff	btemp+9,plusw1
  8686  006E2A  0EFE               	movlw	-2
  8687  006E2C  C052  FFE3         	movff	btemp+10,plusw1
  8688  006E30  0EFF               	movlw	-1
  8689  006E32  C053  FFE3         	movff	btemp+11,plusw1
  8690                           
  8691                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  8692  006E36  0102               	movlb	2	; () banked
  8693  006E38  5102               	movf	(_loRa+2)& (0+255),w,b
  8694  006E3A  0BF0               	andlw	-16
  8695  006E3C  0903               	iorlw	3
  8696  006E3E  6F02               	movwf	(_loRa+2)& (0+255),b
  8697                           
  8698                           ; BSR set to: 2
  8699                           ;lorawan.c: 819: RADIO_ReleaseData();
  8700  006E40  EC6A  F049         	call	_RADIO_ReleaseData	;wreg free
  8701                           
  8702                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  8703                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  8704  006E44  50E1               	movf	fsr1l,w,c
  8705  006E46  0FFC               	addlw	-4
  8706  006E48  6ED9               	movwf	fsr2l,c
  8707  006E4A  50E2               	movf	fsr1h,w,c
  8708  006E4C  6EDA               	movwf	fsr2h,c
  8709  006E4E  0EFF               	movlw	255
  8710  006E50  22DA               	addwfc	fsr2h,f,c
  8711  006E52  CFDE F073          	movff	postinc2,ConfigureRadioRx@freq
  8712  006E56  CFDE F074          	movff	postinc2,ConfigureRadioRx@freq+1
  8713  006E5A  CFDE F075          	movff	postinc2,ConfigureRadioRx@freq+2
  8714  006E5E  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq+3
  8715  006E62  0102               	movlb	2	; () banked
  8716  006E64  5117               	movf	(_loRa+23)& (0+255),w,b
  8717  006E66  EC53  F046         	call	_ConfigureRadioRx
  8718                           
  8719                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  8720  006E6A  0E59               	movlw	low _rxWindowSize
  8721  006E6C  0102               	movlb	2	; () banked
  8722  006E6E  2517               	addwf	(_loRa+23)& (0+255),w,b
  8723  006E70  6EF6               	movwf	tblptrl,c
  8724  006E72  6AF7               	clrf	tblptrh,c
  8725  006E74  0EFF               	movlw	high _rxWindowSize
  8726  006E76  22F7               	addwfc	tblptrh,f,c
  8727  006E78                     	if	1	;There are 3 active tblptr bytes
  8728  006E78  6AF8               	clrf	tblptru,c
  8729  006E7A  0E00               	movlw	low (__mediumconst shr (0+16))
  8730  006E7C  22F8               	addwfc	tblptru,f,c
  8731  006E7E                     	endif
  8732  006E7E  0008               	tblrd		*
  8733  006E80  50F5               	movf	tablat,w,c
  8734  006E82  0100               	movlb	0	; () banked
  8735  006E84  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  8736  006E86  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  8737  006E88  EC6D  F01F         	call	_RADIO_ReceiveStart	;wreg free
  8738  006E8C                     l1798:
  8739                           
  8740                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  8741  006E8C  0EFB               	movlw	251
  8742  006E8E  26E1               	addwf	fsr1l,f,c
  8743  006E90  0EFF               	movlw	255
  8744  006E92  22E2               	addwfc	fsr1h,f,c
  8745  006E94  0012               	return		;funcret
  8746  006E96                     __end_of_LORAWAN_ReceiveWindow1Callback:
  8747                           	opt stack 0
  8748                           tosu	equ	0xFFF
  8749                           tosh	equ	0xFFE
  8750                           tosl	equ	0xFFD
  8751                           pclath	equ	0xFFA
  8752                           tblptru	equ	0xFF8
  8753                           tblptrh	equ	0xFF7
  8754                           tblptrl	equ	0xFF6
  8755                           tablat	equ	0xFF5
  8756                           prodh	equ	0xFF4
  8757                           prodl	equ	0xFF3
  8758                           intcon	equ	0xFF2
  8759                           intcon2	equ	0xFF1
  8760                           intcon3	equ	0xFF0
  8761                           postinc0	equ	0xFEE
  8762                           wreg	equ	0xFE8
  8763                           postinc1	equ	0xFE6
  8764                           postdec1	equ	0xFE5
  8765                           plusw1	equ	0xFE3
  8766                           fsr1h	equ	0xFE2
  8767                           fsr1l	equ	0xFE1
  8768                           indf2	equ	0xFDF
  8769                           postinc2	equ	0xFDE
  8770                           postdec2	equ	0xFDD
  8771                           fsr2h	equ	0xFDA
  8772                           fsr2l	equ	0xFD9
  8773                           status	equ	0xFD8
  8774                           
  8775 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  8776 ;; Defined at:
  8777 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  param           1  [STACK] unsigned char 
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;		None
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  1  [STACK] void 
  8784 ;; Registers used:
  8785 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  8786 ;; Tracked objects:
  8787 ;;		On entry : 3D/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8795 ;;Total ram usage:        0 bytes
  8796 ;; Hardware stack levels used:    1
  8797 ;; Hardware stack levels required when called:   14
  8798 ;; This function calls:
  8799 ;;		_ConfigureRadioRx
  8800 ;;		_LORAWAN_EnterContinuousReceive
  8801 ;;		_RADIO_GetStatus
  8802 ;;		_RADIO_ReceiveStart
  8803 ;;		_RADIO_ReceiveStop
  8804 ;;		_RADIO_ReleaseData
  8805 ;;		_ResetParametersForConfirmedTransmission
  8806 ;;		_ResetParametersForUnconfirmedTransmission
  8807 ;;		_RxData
  8808 ;; This function is called by:
  8809 ;;		_LORAWAN_RxTimeout
  8810 ;;		_SetCallbackSoftwareTimers
  8811 ;;		_SwTimersExecute
  8812 ;; This function uses a reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text51
  8816  006B6A                     __ptext51:
  8817                           	opt stack 0
  8818  006B6A                     _LORAWAN_ReceiveWindow2Callback:
  8819                           	opt stack 12
  8820                           
  8821                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  8822                           
  8823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  8824                           ;incstack = 0
  8825  006B6A  0102               	movlb	2	; () banked
  8826  006B6C  B103               	btfsc	(_loRa+3)& (0+255),0,b
  8827  006B6E  D05F               	goto	l1801
  8828                           
  8829                           ; BSR set to: 2
  8830                           ;lorawan.c: 831: {
  8831                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  8832  006B70  EC67  F049         	call	_RADIO_GetStatus	;wreg free
  8833  006B74  6E53               	movwf	btemp+11,c
  8834  006B76  B253               	btfsc	btemp+11,1,c
  8835  006B78  D056               	goto	l15377
  8836                           
  8837                           ;lorawan.c: 833: {
  8838                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  8839  006B7A  0102               	movlb	2	; () banked
  8840  006B7C  5102               	movf	(_loRa+2)& (0+255),w,b
  8841  006B7E  0BF0               	andlw	-16
  8842  006B80  0905               	iorlw	5
  8843  006B82  6F02               	movwf	(_loRa+2)& (0+255),b
  8844                           
  8845                           ; BSR set to: 2
  8846                           ;lorawan.c: 836: RADIO_ReceiveStop();
  8847  006B84  EC45  F047         	call	_RADIO_ReceiveStop	;wreg free
  8848                           
  8849                           ;lorawan.c: 837: RADIO_ReleaseData();
  8850  006B88  EC6A  F049         	call	_RADIO_ReleaseData	;wreg free
  8851                           
  8852                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  8853  006B8C  C218  F073         	movff	_loRa+24,ConfigureRadioRx@freq
  8854  006B90  C219  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
  8855  006B94  C21A  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
  8856  006B98  C21B  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
  8857  006B9C  0102               	movlb	2	; () banked
  8858  006B9E  511C               	movf	(_loRa+28)& (0+255),w,b
  8859  006BA0  EC53  F046         	call	_ConfigureRadioRx
  8860                           
  8861                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  8862  006BA4  0102               	movlb	2	; () banked
  8863  006BA6  5112               	movf	(_loRa+18)& (0+255),w,b
  8864  006BA8  A4D8               	btfss	status,2,c
  8865  006BAA  D036               	goto	l15373
  8866                           
  8867                           ; BSR set to: 2
  8868                           ;lorawan.c: 842: {
  8869                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  8870  006BAC  0E59               	movlw	low _rxWindowSize
  8871  006BAE  251C               	addwf	(_loRa+28)& (0+255),w,b
  8872  006BB0  6EF6               	movwf	tblptrl,c
  8873  006BB2  6AF7               	clrf	tblptrh,c
  8874  006BB4  0EFF               	movlw	high _rxWindowSize
  8875  006BB6  22F7               	addwfc	tblptrh,f,c
  8876  006BB8                     	if	1	;There are 3 active tblptr bytes
  8877  006BB8  6AF8               	clrf	tblptru,c
  8878  006BBA  0E00               	movlw	low (__mediumconst shr (0+16))
  8879  006BBC  22F8               	addwfc	tblptru,f,c
  8880  006BBE                     	endif
  8881  006BBE  0008               	tblrd		*
  8882  006BC0  50F5               	movf	tablat,w,c
  8883  006BC2  0100               	movlb	0	; () banked
  8884  006BC4  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  8885  006BC6  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  8886  006BC8  EC6D  F01F         	call	_RADIO_ReceiveStart	;wreg free
  8887  006BCC  C0B1  F049         	movff	?_RADIO_ReceiveStart,btemp+1
  8888  006BD0  C0B2  F04A         	movff	?_RADIO_ReceiveStart+1,btemp+2
  8889  006BD4  5049               	movf	btemp+1,w,c
  8890  006BD6  104A               	iorwf	btemp+2,w,c
  8891  006BD8  B4D8               	btfsc	status,2,c
  8892  006BDA  D031               	goto	l1810
  8893                           
  8894                           ;lorawan.c: 844: {
  8895                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  8896  006BDC  EC79  F048         	call	_ResetParametersForConfirmedTransmission	;wreg free
  8897                           
  8898                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  8899  006BE0  EC52  F048         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  8900                           
  8901                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  8902  006BE4  0101               	movlb	1	; () banked
  8903  006BE6  5104               	movf	_rxPayload& (0+255),w,b
  8904  006BE8  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
  8905  006BEA  B4D8               	btfsc	status,2,c
  8906  006BEC  D028               	goto	l1810
  8907                           
  8908                           ; BSR set to: 1
  8909                           ;lorawan.c: 848: {
  8910                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  8911  006BEE  0E00               	movlw	0
  8912  006BF0  0100               	movlb	0	; () banked
  8913  006BF2  6F60               	movwf	RxData@pData& (0+255),b
  8914  006BF4  0E00               	movlw	0
  8915  006BF6  6F61               	movwf	(RxData@pData+1)& (0+255),b
  8916  006BF8  0E00               	movlw	0
  8917  006BFA  6F62               	movwf	RxData@dataLength& (0+255),b
  8918  006BFC  0E00               	movlw	0
  8919  006BFE  6F63               	movwf	RxData@status& (0+255),b
  8920  006C00  D801               	call	u17718
  8921  006C02  D01D               	goto	l1810
  8922  006C04                     u17718:
  8923  006C04  0005               	push	
  8924  006C06  6EFA               	movwf	pclath,c
  8925  006C08  0101               	movlb	1	; () banked
  8926  006C0A  5104               	movf	_rxPayload& (0+255),w,b
  8927  006C0C  6EFD               	movwf	tosl,c
  8928  006C0E  5105               	movf	(_rxPayload+1)& (0+255),w,b
  8929  006C10  6EFE               	movwf	tosh,c
  8930  006C12  6AFF               	clrf	tosu,c
  8931  006C14  50FA               	movf	pclath,w,c
  8932  006C16  0012               	return		;indir
  8933  006C18                     l15373:
  8934                           
  8935                           ; BSR set to: 2
  8936                           ;lorawan.c: 853: else
  8937                           ;lorawan.c: 854: {
  8938                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  8939  006C18  5102               	movf	(_loRa+2)& (0+255),w,b
  8940  006C1A  0BF0               	andlw	-16
  8941  006C1C  0909               	iorlw	9
  8942  006C1E  6F02               	movwf	(_loRa+2)& (0+255),b
  8943                           
  8944                           ; BSR set to: 2
  8945                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  8946  006C20  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  8947  006C24  D00C               	goto	l1810
  8948  006C26                     l15377:
  8949                           
  8950                           ;lorawan.c: 859: else
  8951                           ;lorawan.c: 860: {
  8952                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  8953  006C26  0E01               	movlw	1
  8954  006C28  0102               	movlb	2	; () banked
  8955  006C2A  6FF1               	movwf	(_loRa+241)& (0+255),b
  8956                           
  8957                           ; BSR set to: 1
  8958                           ;lorawan.c: 864: }
  8959                           ;lorawan.c: 865: }
  8960  006C2C  D008               	goto	l1810
  8961  006C2E                     l1801:
  8962                           
  8963                           ; BSR set to: 2
  8964                           ;lorawan.c: 866: else
  8965                           ;lorawan.c: 867: {
  8966                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  8967  006C2E  A500               	btfss	_loRa& (0+255),2,b
  8968  006C30  D002               	goto	l15381
  8969                           
  8970                           ; BSR set to: 2
  8971                           ;lorawan.c: 871: {
  8972                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  8973  006C32  9500               	bcf	_loRa& (0+255),2,b
  8974                           
  8975                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  8976  006C34  9902               	bcf	(_loRa+2)& (0+255),4,b
  8977  006C36                     l15381:
  8978                           
  8979                           ; BSR set to: 2
  8980                           ;lorawan.c: 874: }
  8981                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  8982  006C36  EC52  F048         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  8983                           
  8984                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  8985  006C3A  EC79  F048         	call	_ResetParametersForConfirmedTransmission	;wreg free
  8986  006C3E                     l1810:
  8987                           
  8988                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  8989  006C3E  52E5               	movf	postdec1,f,c
  8990  006C40  0012               	return		;funcret
  8991  006C42                     __end_of_LORAWAN_ReceiveWindow2Callback:
  8992                           	opt stack 0
  8993                           tosu	equ	0xFFF
  8994                           tosh	equ	0xFFE
  8995                           tosl	equ	0xFFD
  8996                           pclath	equ	0xFFA
  8997                           tblptru	equ	0xFF8
  8998                           tblptrh	equ	0xFF7
  8999                           tblptrl	equ	0xFF6
  9000                           tablat	equ	0xFF5
  9001                           prodh	equ	0xFF4
  9002                           prodl	equ	0xFF3
  9003                           intcon	equ	0xFF2
  9004                           intcon2	equ	0xFF1
  9005                           intcon3	equ	0xFF0
  9006                           postinc0	equ	0xFEE
  9007                           wreg	equ	0xFE8
  9008                           postinc1	equ	0xFE6
  9009                           postdec1	equ	0xFE5
  9010                           plusw1	equ	0xFE3
  9011                           fsr1h	equ	0xFE2
  9012                           fsr1l	equ	0xFE1
  9013                           indf2	equ	0xFDF
  9014                           postinc2	equ	0xFDE
  9015                           postdec2	equ	0xFDD
  9016                           fsr2h	equ	0xFDA
  9017                           fsr2l	equ	0xFD9
  9018                           status	equ	0xFD8
  9019                           
  9020 ;; *************** function _RADIO_WatchdogTimeout *****************
  9021 ;; Defined at:
  9022 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;  param           1  [STACK] unsigned char 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;		None
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  1  [STACK] void 
  9029 ;; Registers used:
  9030 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  9031 ;; Tracked objects:
  9032 ;;		On entry : 3F/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;Total ram usage:        0 bytes
  9041 ;; Hardware stack levels used:    1
  9042 ;; Hardware stack levels required when called:   16
  9043 ;; This function calls:
  9044 ;;		_LORAWAN_RxTimeout
  9045 ;;		_LORAWAN_TxDone
  9046 ;;		_RADIO_WriteMode
  9047 ;; This function is called by:
  9048 ;;		_RADIO_Init
  9049 ;;		_SwTimersExecute
  9050 ;; This function uses a reentrant model
  9051 ;;
  9052                           
  9053                           	psect	text52
  9054  0084E2                     __ptext52:
  9055                           	opt stack 0
  9056  0084E2                     _RADIO_WatchdogTimeout:
  9057                           	opt stack 12
  9058                           
  9059                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  9060                           
  9061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  9062                           ;incstack = 0
  9063  0084E2  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9064  0084E6  0E01               	movlw	1
  9065  0084E8  0100               	movlb	0	; () banked
  9066  0084EA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9067  0084EC  0E01               	movlw	1
  9068  0084EE  EC28  F030         	call	_RADIO_WriteMode
  9069                           
  9070                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9071  0084F2  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9072  0084F6  0E00               	movlw	0
  9073  0084F8  0100               	movlb	0	; () banked
  9074  0084FA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9075  0084FC  0E00               	movlw	0
  9076  0084FE  EC28  F030         	call	_RADIO_WriteMode
  9077                           
  9078                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  9079  008502  0101               	movlb	1	; () banked
  9080  008504  8944               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  9081                           
  9082                           ; BSR set to: 1
  9083                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  9084  008506  A344               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  9085  008508  D004               	goto	l682
  9086                           
  9087                           ; BSR set to: 1
  9088                           ;radio_driver_SX1276.c: 1414: {
  9089                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  9090  00850A  9344               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9091                           
  9092                           ; BSR set to: 1
  9093                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  9094  00850C  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  9095                           
  9096                           ;radio_driver_SX1276.c: 1417: }
  9097  008510  D009               	goto	l685
  9098  008512                     l682:
  9099                           
  9100                           ; BSR set to: 1
  9101                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  9102  008512  A144               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  9103  008514  D007               	goto	l685
  9104                           
  9105                           ; BSR set to: 1
  9106                           ;radio_driver_SX1276.c: 1419: {
  9107                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  9108  008516  9144               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  9109                           
  9110                           ; BSR set to: 1
  9111                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  9112  008518  C14B  F0BB         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  9113  00851C  C14C  F0BC         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  9114  008520  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
  9115  008524                     l685:
  9116                           
  9117                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  9118  008524  52E5               	movf	postdec1,f,c
  9119  008526  0012               	return		;funcret
  9120  008528                     __end_of_RADIO_WatchdogTimeout:
  9121                           	opt stack 0
  9122                           tosu	equ	0xFFF
  9123                           tosh	equ	0xFFE
  9124                           tosl	equ	0xFFD
  9125                           pclath	equ	0xFFA
  9126                           tblptru	equ	0xFF8
  9127                           tblptrh	equ	0xFF7
  9128                           tblptrl	equ	0xFF6
  9129                           tablat	equ	0xFF5
  9130                           prodh	equ	0xFF4
  9131                           prodl	equ	0xFF3
  9132                           intcon	equ	0xFF2
  9133                           intcon2	equ	0xFF1
  9134                           intcon3	equ	0xFF0
  9135                           postinc0	equ	0xFEE
  9136                           wreg	equ	0xFE8
  9137                           postinc1	equ	0xFE6
  9138                           postdec1	equ	0xFE5
  9139                           plusw1	equ	0xFE3
  9140                           fsr1h	equ	0xFE2
  9141                           fsr1l	equ	0xFE1
  9142                           indf2	equ	0xFDF
  9143                           postinc2	equ	0xFDE
  9144                           postdec2	equ	0xFDD
  9145                           fsr2h	equ	0xFDA
  9146                           fsr2l	equ	0xFD9
  9147                           status	equ	0xFD8
  9148                           
  9149 ;; *************** function _RADIO_RxFSKTimeout *****************
  9150 ;; Defined at:
  9151 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;  param           1  [STACK] unsigned char 
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;  irqFlags        1  [STACK] unsigned char 
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  1  [STACK] void 
  9158 ;; Registers used:
  9159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptr
      +l, tblptrh, tblptru, prodl, prodh, cstack
  9160 ;; Tracked objects:
  9161 ;;		On entry : 3F/0
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9169 ;;Total ram usage:        0 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; Hardware stack levels required when called:   16
  9172 ;; This function calls:
  9173 ;;		_LORAWAN_RxTimeout
  9174 ;;		_RADIO_RegisterRead
  9175 ;;		_RADIO_WriteMode
  9176 ;;		_SwTimerStop
  9177 ;; This function is called by:
  9178 ;;		_RADIO_Init
  9179 ;;		_SwTimersExecute
  9180 ;; This function uses a reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text53
  9184  00888C                     __ptext53:
  9185                           	opt stack 0
  9186  00888C                     _RADIO_RxFSKTimeout:
  9187                           	opt stack 0
  9188                           
  9189                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  9190  00888C  52E6               	movf	postinc1,f,c
  9191                           
  9192                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  9193                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  9194                           
  9195                           ;incstack = 0
  9196  00888E  0E3E               	movlw	62
  9197  008890  ECA4  F046         	call	_RADIO_RegisterRead
  9198  008894  6E53               	movwf	btemp+11,c
  9199                           
  9200                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  9201  008896  0EFF               	movlw	-1
  9202  008898  C053  FFE3         	movff	btemp+11,plusw1
  9203                           
  9204                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  9205                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  9206  00889C  0EFF               	movlw	-1
  9207  00889E  B0E3               	btfsc	plusw1,0,c
  9208  0088A0  D010               	goto	l679
  9209                           
  9210                           ;radio_driver_SX1276.c: 1397: {
  9211                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9212  0088A2  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9213  0088A6  0E00               	movlw	0
  9214  0088A8  0100               	movlb	0	; () banked
  9215  0088AA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9216  0088AC  0E00               	movlw	0
  9217  0088AE  EC28  F030         	call	_RADIO_WriteMode
  9218                           
  9219                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9220  0088B2  0101               	movlb	1	; () banked
  9221  0088B4  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9222  0088B6  ECB8  F046         	call	_SwTimerStop
  9223                           
  9224                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  9225  0088BA  0101               	movlb	1	; () banked
  9226  0088BC  9344               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9227                           
  9228                           ; BSR set to: 1
  9229                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  9230  0088BE  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  9231  0088C2                     l679:
  9232                           
  9233                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9234  0088C2  52E5               	movf	postdec1,f,c
  9235  0088C4  52E5               	movf	postdec1,f,c
  9236  0088C6  0012               	return		;funcret
  9237  0088C8                     __end_of_RADIO_RxFSKTimeout:
  9238                           	opt stack 0
  9239                           tosu	equ	0xFFF
  9240                           tosh	equ	0xFFE
  9241                           tosl	equ	0xFFD
  9242                           pclath	equ	0xFFA
  9243                           tblptru	equ	0xFF8
  9244                           tblptrh	equ	0xFF7
  9245                           tblptrl	equ	0xFF6
  9246                           tablat	equ	0xFF5
  9247                           prodh	equ	0xFF4
  9248                           prodl	equ	0xFF3
  9249                           intcon	equ	0xFF2
  9250                           intcon2	equ	0xFF1
  9251                           intcon3	equ	0xFF0
  9252                           postinc0	equ	0xFEE
  9253                           wreg	equ	0xFE8
  9254                           postinc1	equ	0xFE6
  9255                           postdec1	equ	0xFE5
  9256                           plusw1	equ	0xFE3
  9257                           fsr1h	equ	0xFE2
  9258                           fsr1l	equ	0xFE1
  9259                           indf2	equ	0xFDF
  9260                           postinc2	equ	0xFDE
  9261                           postdec2	equ	0xFDD
  9262                           fsr2h	equ	0xFDA
  9263                           fsr2l	equ	0xFD9
  9264                           status	equ	0xFD8
  9265                           
  9266 ;; *************** function _UnconfirmedTransmissionCallback *****************
  9267 ;; Defined at:
  9268 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  param           1  [STACK] unsigned char 
  9271 ;; Auto vars:     Size  Location     Type
  9272 ;;		None
  9273 ;; Return value:  Size  Location     Type
  9274 ;;                  1  [STACK] void 
  9275 ;; Registers used:
  9276 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, pro
      +dl, prodh, cstack
  9277 ;; Tracked objects:
  9278 ;;		On entry : 3F/0
  9279 ;;		On exit  : 0/0
  9280 ;;		Unchanged: 0/0
  9281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9286 ;;Total ram usage:        0 bytes
  9287 ;; Hardware stack levels used:    1
  9288 ;; Hardware stack levels required when called:   13
  9289 ;; This function calls:
  9290 ;;		_RADIO_Transmit
  9291 ;;		_ResetParametersForUnconfirmedTransmission
  9292 ;;		_RxData
  9293 ;;		_SelectChannelForTransmission
  9294 ;; This function is called by:
  9295 ;;		_SetCallbackSoftwareTimers
  9296 ;;		_SwTimersExecute
  9297 ;; This function uses a reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text54
  9301  00798A                     __ptext54:
  9302                           	opt stack 0
  9303  00798A                     _UnconfirmedTransmissionCallback:
  9304                           	opt stack 15
  9305                           
  9306                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  9307                           
  9308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  9309                           ;incstack = 0
  9310  00798A  0E01               	movlw	1
  9311  00798C  EC70  F03D         	call	_SelectChannelForTransmission
  9312  007990  0900               	iorlw	0
  9313  007992  A4D8               	btfss	status,2,c
  9314  007994  D018               	goto	l16755
  9315  007996  0EF0               	movlw	low (_macBuffer+16)
  9316  007998  0100               	movlb	0	; () banked
  9317  00799A  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  9318  00799C  0E04               	movlw	high (_macBuffer+16)
  9319  00799E  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  9320  0079A0  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
  9321  0079A4  EC51  F01E         	call	_RADIO_Transmit	;wreg free
  9322  0079A8  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
  9323  0079AC  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
  9324  0079B0  5049               	movf	btemp+1,w,c
  9325  0079B2  104A               	iorwf	btemp+2,w,c
  9326  0079B4  A4D8               	btfss	status,2,c
  9327  0079B6  D007               	goto	l16755
  9328                           
  9329                           ;lorawan.c: 1001: {
  9330                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  9331  0079B8  0102               	movlb	2	; () banked
  9332  0079BA  2BD8               	incf	(_loRa+216)& (0+255),f,b
  9333                           
  9334                           ; BSR set to: 2
  9335                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  9336  0079BC  5102               	movf	(_loRa+2)& (0+255),w,b
  9337  0079BE  0BF0               	andlw	-16
  9338  0079C0  0901               	iorlw	1
  9339  0079C2  6F02               	movwf	(_loRa+2)& (0+255),b
  9340                           
  9341                           ;lorawan.c: 1005: }
  9342  0079C4  D01C               	goto	u20429
  9343  0079C6                     l16755:
  9344                           
  9345                           ;lorawan.c: 1006: else
  9346                           ;lorawan.c: 1008: {
  9347                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  9348  0079C6  EC52  F048         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9349                           
  9350                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  9351  0079CA  0101               	movlb	1	; () banked
  9352  0079CC  5104               	movf	_rxPayload& (0+255),w,b
  9353  0079CE  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
  9354  0079D0  B4D8               	btfsc	status,2,c
  9355  0079D2  D015               	goto	u20429
  9356                           
  9357                           ; BSR set to: 1
  9358                           ;lorawan.c: 1011: {
  9359                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  9360  0079D4  0E00               	movlw	0
  9361  0079D6  0100               	movlb	0	; () banked
  9362  0079D8  6F60               	movwf	RxData@pData& (0+255),b
  9363  0079DA  0E00               	movlw	0
  9364  0079DC  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9365  0079DE  0E00               	movlw	0
  9366  0079E0  6F62               	movwf	RxData@dataLength& (0+255),b
  9367  0079E2  0E00               	movlw	0
  9368  0079E4  6F63               	movwf	RxData@status& (0+255),b
  9369  0079E6  D801               	call	u20428
  9370  0079E8  D00A               	goto	u20429
  9371  0079EA                     u20428:
  9372  0079EA  0005               	push	
  9373  0079EC  6EFA               	movwf	pclath,c
  9374  0079EE  0101               	movlb	1	; () banked
  9375  0079F0  5104               	movf	_rxPayload& (0+255),w,b
  9376  0079F2  6EFD               	movwf	tosl,c
  9377  0079F4  5105               	movf	(_rxPayload+1)& (0+255),w,b
  9378  0079F6  6EFE               	movwf	tosh,c
  9379  0079F8  6AFF               	clrf	tosu,c
  9380  0079FA  50FA               	movf	pclath,w,c
  9381  0079FC  0012               	return		;indir
  9382  0079FE                     u20429:
  9383                           
  9384                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  9385  0079FE  52E5               	movf	postdec1,f,c
  9386  007A00  0012               	return		;funcret
  9387  007A02                     __end_of_UnconfirmedTransmissionCallback:
  9388                           	opt stack 0
  9389                           tosu	equ	0xFFF
  9390                           tosh	equ	0xFFE
  9391                           tosl	equ	0xFFD
  9392                           pclath	equ	0xFFA
  9393                           tblptru	equ	0xFF8
  9394                           tblptrh	equ	0xFF7
  9395                           tblptrl	equ	0xFF6
  9396                           tablat	equ	0xFF5
  9397                           prodh	equ	0xFF4
  9398                           prodl	equ	0xFF3
  9399                           intcon	equ	0xFF2
  9400                           intcon2	equ	0xFF1
  9401                           intcon3	equ	0xFF0
  9402                           postinc0	equ	0xFEE
  9403                           wreg	equ	0xFE8
  9404                           postinc1	equ	0xFE6
  9405                           postdec1	equ	0xFE5
  9406                           plusw1	equ	0xFE3
  9407                           fsr1h	equ	0xFE2
  9408                           fsr1l	equ	0xFE1
  9409                           indf2	equ	0xFDF
  9410                           postinc2	equ	0xFDE
  9411                           postdec2	equ	0xFDD
  9412                           fsr2h	equ	0xFDA
  9413                           fsr2l	equ	0xFD9
  9414                           status	equ	0xFD8
  9415                           
  9416 ;; *************** function _GetRx1Freq *****************
  9417 ;; Defined at:
  9418 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;		None
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;		None
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  4    0[BANK0 ] unsigned long 
  9425 ;; Registers used:
  9426 ;;		None
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9432 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9435 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9436 ;;Total ram usage:        4 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; Hardware stack levels required when called:    7
  9439 ;; This function calls:
  9440 ;;		Nothing
  9441 ;; This function is called by:
  9442 ;;		_LORAWAN_ReceiveWindow1Callback
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text55
  9447  0090E0                     __ptext55:
  9448                           	opt stack 0
  9449  0090E0                     _GetRx1Freq:
  9450                           	opt stack 20
  9451                           
  9452                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  9453                           
  9454                           ;incstack = 0
  9455  0090E0  C213  F060         	movff	_loRa+19,?_GetRx1Freq
  9456  0090E4  C214  F061         	movff	_loRa+20,?_GetRx1Freq+1
  9457  0090E8  C215  F062         	movff	_loRa+21,?_GetRx1Freq+2
  9458  0090EC  C216  F063         	movff	_loRa+22,?_GetRx1Freq+3
  9459  0090F0  0012               	return		;funcret
  9460  0090F2                     __end_of_GetRx1Freq:
  9461                           	opt stack 0
  9462                           tosu	equ	0xFFF
  9463                           tosh	equ	0xFFE
  9464                           tosl	equ	0xFFD
  9465                           pclath	equ	0xFFA
  9466                           tblptru	equ	0xFF8
  9467                           tblptrh	equ	0xFF7
  9468                           tblptrl	equ	0xFF6
  9469                           tablat	equ	0xFF5
  9470                           prodh	equ	0xFF4
  9471                           prodl	equ	0xFF3
  9472                           intcon	equ	0xFF2
  9473                           intcon2	equ	0xFF1
  9474                           intcon3	equ	0xFF0
  9475                           postinc0	equ	0xFEE
  9476                           wreg	equ	0xFE8
  9477                           postinc1	equ	0xFE6
  9478                           postdec1	equ	0xFE5
  9479                           plusw1	equ	0xFE3
  9480                           fsr1h	equ	0xFE2
  9481                           fsr1l	equ	0xFE1
  9482                           indf2	equ	0xFDF
  9483                           postinc2	equ	0xFDE
  9484                           postdec2	equ	0xFDD
  9485                           fsr2h	equ	0xFDA
  9486                           fsr2l	equ	0xFD9
  9487                           status	equ	0xFD8
  9488                           
  9489 ;; *************** function _RADIO_DIO5 *****************
  9490 ;; Defined at:
  9491 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;		None
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;  dioMapping      1    6[BANK0 ] unsigned char 
  9496 ;; Return value:  Size  Location     Type
  9497 ;;                  1    wreg      void 
  9498 ;; Registers used:
  9499 ;;		wreg, status,2, status,0, cstack
  9500 ;; Tracked objects:
  9501 ;;		On entry : 0/0
  9502 ;;		On exit  : 0/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9507 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9508 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9509 ;;Total ram usage:        2 bytes
  9510 ;; Hardware stack levels used:    1
  9511 ;; Hardware stack levels required when called:   11
  9512 ;; This function calls:
  9513 ;;		_RADIO_RegisterRead
  9514 ;;		_RADIO_UnhandledInterrupt
  9515 ;; This function is called by:
  9516 ;;		_LORAWAN_Mainloop
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text56
  9521  008CD0                     __ptext56:
  9522                           	opt stack 0
  9523  008CD0                     _RADIO_DIO5:
  9524                           	opt stack 18
  9525                           
  9526                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  9527                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  9528                           
  9529                           ;incstack = 0
  9530  008CD0  0E41               	movlw	65
  9531  008CD2  ECA4  F046         	call	_RADIO_RegisterRead
  9532  008CD6  0100               	movlb	0	; () banked
  9533  008CD8  6F65               	movwf	??_RADIO_DIO5& (0+255),b
  9534  008CDA  3965               	swapf	??_RADIO_DIO5& (0+255),w,b
  9535  008CDC  0B0F               	andlw	15
  9536  008CDE  0B03               	andlw	3
  9537  008CE0  6F66               	movwf	RADIO_DIO5@dioMapping& (0+255),b
  9538                           
  9539                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  9540  008CE2  0E01               	movlw	1
  9541  008CE4  ECA4  F046         	call	_RADIO_RegisterRead
  9542  008CE8  0100               	movlb	0	; () banked
  9543  008CEA  6F65               	movwf	??_RADIO_DIO5& (0+255),b
  9544  008CEC  AF65               	btfss	??_RADIO_DIO5& (0+255),7,b
  9545  008CEE  0012               	return	
  9546                           
  9547                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  9548                           
  9549                           ; BSR set to: 0
  9550                           
  9551                           ;radio_driver_SX1276.c: 1354: {
  9552                           ;radio_driver_SX1276.c: 1355: default:
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;radio_driver_SX1276.c: 1351: {
  9556                           ;radio_driver_SX1276.c: 1353: switch (dioMapping)
  9557  008CF0  0E01               	movlw	1
  9558  008CF2  ECB3  F044         	call	_RADIO_UnhandledInterrupt
  9559                           
  9560                           ;radio_driver_SX1276.c: 1358: }
  9561                           
  9562                           ;radio_driver_SX1276.c: 1357: break;
  9563  008CF6  0012               	return	
  9564  008CF8                     __end_of_RADIO_DIO5:
  9565                           	opt stack 0
  9566                           tosu	equ	0xFFF
  9567                           tosh	equ	0xFFE
  9568                           tosl	equ	0xFFD
  9569                           pclath	equ	0xFFA
  9570                           tblptru	equ	0xFF8
  9571                           tblptrh	equ	0xFF7
  9572                           tblptrl	equ	0xFF6
  9573                           tablat	equ	0xFF5
  9574                           prodh	equ	0xFF4
  9575                           prodl	equ	0xFF3
  9576                           intcon	equ	0xFF2
  9577                           intcon2	equ	0xFF1
  9578                           intcon3	equ	0xFF0
  9579                           postinc0	equ	0xFEE
  9580                           wreg	equ	0xFE8
  9581                           postinc1	equ	0xFE6
  9582                           postdec1	equ	0xFE5
  9583                           plusw1	equ	0xFE3
  9584                           fsr1h	equ	0xFE2
  9585                           fsr1l	equ	0xFE1
  9586                           indf2	equ	0xFDF
  9587                           postinc2	equ	0xFDE
  9588                           postdec2	equ	0xFDD
  9589                           fsr2h	equ	0xFDA
  9590                           fsr2l	equ	0xFD9
  9591                           status	equ	0xFD8
  9592                           
  9593 ;; *************** function _RADIO_DIO4 *****************
  9594 ;; Defined at:
  9595 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;		None
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  dioMapping      1    7[BANK0 ] unsigned char 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, status,2, status,0, cstack
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;Total ram usage:        3 bytes
  9614 ;; Hardware stack levels used:    1
  9615 ;; Hardware stack levels required when called:   11
  9616 ;; This function calls:
  9617 ;;		_RADIO_RegisterRead
  9618 ;;		_RADIO_UnhandledInterrupt
  9619 ;; This function is called by:
  9620 ;;		_LORAWAN_Mainloop
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text57
  9625  008934                     __ptext57:
  9626                           	opt stack 0
  9627  008934                     _RADIO_DIO4:
  9628                           	opt stack 18
  9629                           
  9630                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  9631                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  9632                           
  9633                           ;incstack = 0
  9634  008934  0E41               	movlw	65
  9635  008936  ECA4  F046         	call	_RADIO_RegisterRead
  9636  00893A  0100               	movlb	0	; () banked
  9637  00893C  6F65               	movwf	??_RADIO_DIO4& (0+255),b
  9638  00893E  0E06               	movlw	6
  9639  008940  6F66               	movwf	(??_RADIO_DIO4+1)& (0+255),b
  9640  008942                     u20555:
  9641  008942  90D8               	bcf	status,0,c
  9642  008944  3365               	rrcf	??_RADIO_DIO4& (0+255),f,b
  9643  008946  2F66               	decfsz	(??_RADIO_DIO4+1)& (0+255),f,b
  9644  008948  D7FC               	goto	u20555
  9645  00894A  5165               	movf	??_RADIO_DIO4& (0+255),w,b
  9646  00894C  0B03               	andlw	3
  9647  00894E  6F67               	movwf	RADIO_DIO4@dioMapping& (0+255),b
  9648                           
  9649                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  9650  008950  0E01               	movlw	1
  9651  008952  ECA4  F046         	call	_RADIO_RegisterRead
  9652  008956  0100               	movlb	0	; () banked
  9653  008958  6F65               	movwf	??_RADIO_DIO4& (0+255),b
  9654  00895A  AF65               	btfss	??_RADIO_DIO4& (0+255),7,b
  9655  00895C  0012               	return	
  9656                           
  9657                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  9658                           
  9659                           ; BSR set to: 0
  9660                           
  9661                           ;radio_driver_SX1276.c: 1331: {
  9662                           ;radio_driver_SX1276.c: 1332: default:
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;radio_driver_SX1276.c: 1328: {
  9666                           ;radio_driver_SX1276.c: 1330: switch (dioMapping)
  9667  00895E  0E01               	movlw	1
  9668  008960  ECB3  F044         	call	_RADIO_UnhandledInterrupt
  9669                           
  9670                           ;radio_driver_SX1276.c: 1335: }
  9671                           
  9672                           ;radio_driver_SX1276.c: 1334: break;
  9673  008964  0012               	return	
  9674  008966                     __end_of_RADIO_DIO4:
  9675                           	opt stack 0
  9676                           tosu	equ	0xFFF
  9677                           tosh	equ	0xFFE
  9678                           tosl	equ	0xFFD
  9679                           pclath	equ	0xFFA
  9680                           tblptru	equ	0xFF8
  9681                           tblptrh	equ	0xFF7
  9682                           tblptrl	equ	0xFF6
  9683                           tablat	equ	0xFF5
  9684                           prodh	equ	0xFF4
  9685                           prodl	equ	0xFF3
  9686                           intcon	equ	0xFF2
  9687                           intcon2	equ	0xFF1
  9688                           intcon3	equ	0xFF0
  9689                           postinc0	equ	0xFEE
  9690                           wreg	equ	0xFE8
  9691                           postinc1	equ	0xFE6
  9692                           postdec1	equ	0xFE5
  9693                           plusw1	equ	0xFE3
  9694                           fsr1h	equ	0xFE2
  9695                           fsr1l	equ	0xFE1
  9696                           indf2	equ	0xFDF
  9697                           postinc2	equ	0xFDE
  9698                           postdec2	equ	0xFDD
  9699                           fsr2h	equ	0xFDA
  9700                           fsr2l	equ	0xFD9
  9701                           status	equ	0xFD8
  9702                           
  9703 ;; *************** function _RADIO_DIO3 *****************
  9704 ;; Defined at:
  9705 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;		None
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;  dioMapping      1    6[BANK0 ] unsigned char 
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  1    wreg      void 
  9712 ;; Registers used:
  9713 ;;		wreg, status,2, status,0, cstack
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;Total ram usage:        2 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; Hardware stack levels required when called:   11
  9726 ;; This function calls:
  9727 ;;		_RADIO_RegisterRead
  9728 ;;		_RADIO_UnhandledInterrupt
  9729 ;; This function is called by:
  9730 ;;		_LORAWAN_Mainloop
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           	psect	text58
  9735  008E04                     __ptext58:
  9736                           	opt stack 0
  9737  008E04                     _RADIO_DIO3:
  9738                           	opt stack 18
  9739                           
  9740                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  9741                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  9742                           
  9743                           ;incstack = 0
  9744  008E04  0E40               	movlw	64
  9745  008E06  ECA4  F046         	call	_RADIO_RegisterRead
  9746  008E0A  0B03               	andlw	3
  9747  008E0C  0100               	movlb	0	; () banked
  9748  008E0E  6F66               	movwf	RADIO_DIO3@dioMapping& (0+255),b
  9749                           
  9750                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  9751  008E10  0E01               	movlw	1
  9752  008E12  ECA4  F046         	call	_RADIO_RegisterRead
  9753  008E16  0100               	movlb	0	; () banked
  9754  008E18  6F65               	movwf	??_RADIO_DIO3& (0+255),b
  9755  008E1A  AF65               	btfss	??_RADIO_DIO3& (0+255),7,b
  9756  008E1C  0012               	return	
  9757                           
  9758                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  9759                           
  9760                           ; BSR set to: 0
  9761                           
  9762                           ;radio_driver_SX1276.c: 1308: {
  9763                           ;radio_driver_SX1276.c: 1309: default:
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;radio_driver_SX1276.c: 1305: {
  9767                           ;radio_driver_SX1276.c: 1307: switch (dioMapping)
  9768  008E1E  0E01               	movlw	1
  9769  008E20  ECB3  F044         	call	_RADIO_UnhandledInterrupt
  9770                           
  9771                           ;radio_driver_SX1276.c: 1312: }
  9772                           
  9773                           ;radio_driver_SX1276.c: 1311: break;
  9774  008E24  0012               	return	
  9775  008E26                     __end_of_RADIO_DIO3:
  9776                           	opt stack 0
  9777                           tosu	equ	0xFFF
  9778                           tosh	equ	0xFFE
  9779                           tosl	equ	0xFFD
  9780                           pclath	equ	0xFFA
  9781                           tblptru	equ	0xFF8
  9782                           tblptrh	equ	0xFF7
  9783                           tblptrl	equ	0xFF6
  9784                           tablat	equ	0xFF5
  9785                           prodh	equ	0xFF4
  9786                           prodl	equ	0xFF3
  9787                           intcon	equ	0xFF2
  9788                           intcon2	equ	0xFF1
  9789                           intcon3	equ	0xFF0
  9790                           postinc0	equ	0xFEE
  9791                           wreg	equ	0xFE8
  9792                           postinc1	equ	0xFE6
  9793                           postdec1	equ	0xFE5
  9794                           plusw1	equ	0xFE3
  9795                           fsr1h	equ	0xFE2
  9796                           fsr1l	equ	0xFE1
  9797                           indf2	equ	0xFDF
  9798                           postinc2	equ	0xFDE
  9799                           postdec2	equ	0xFDD
  9800                           fsr2h	equ	0xFDA
  9801                           fsr2l	equ	0xFD9
  9802                           status	equ	0xFD8
  9803                           
  9804 ;; *************** function _RADIO_DIO2 *****************
  9805 ;; Defined at:
  9806 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;		None
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;  dioMapping      1   28[BANK0 ] unsigned char 
  9811 ;;  opMode          1   27[BANK0 ] unsigned char 
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  1    wreg      void 
  9814 ;; Registers used:
  9815 ;;		wreg, status,2, status,0, cstack
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9823 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9824 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9825 ;;Total ram usage:        3 bytes
  9826 ;; Hardware stack levels used:    1
  9827 ;; Hardware stack levels required when called:   12
  9828 ;; This function calls:
  9829 ;;		_RADIO_FHSSChangeChannel
  9830 ;;		_RADIO_RegisterRead
  9831 ;;		_RADIO_UnhandledInterrupt
  9832 ;; This function is called by:
  9833 ;;		_LORAWAN_Mainloop
  9834 ;; This function uses a non-reentrant model
  9835 ;;
  9836                           
  9837                           	psect	text59
  9838  0081BA                     __ptext59:
  9839                           	opt stack 0
  9840  0081BA                     _RADIO_DIO2:
  9841                           	opt stack 17
  9842                           
  9843                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  9844                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  9845                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  9846                           
  9847                           ;incstack = 0
  9848  0081BA  0E40               	movlw	64
  9849  0081BC  ECA4  F046         	call	_RADIO_RegisterRead
  9850  0081C0  0100               	movlb	0	; () banked
  9851  0081C2  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
  9852  0081C4  90D8               	bcf	status,0,c
  9853  0081C6  337A               	rrcf	??_RADIO_DIO2& (0+255),f,b
  9854  0081C8  90D8               	bcf	status,0,c
  9855  0081CA  317A               	rrcf	??_RADIO_DIO2& (0+255),w,b
  9856  0081CC  0B03               	andlw	3
  9857  0081CE  6F7C               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  9858                           
  9859                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  9860  0081D0  0E01               	movlw	1
  9861  0081D2  ECA4  F046         	call	_RADIO_RegisterRead
  9862  0081D6  0100               	movlb	0	; () banked
  9863  0081D8  6F7B               	movwf	RADIO_DIO2@opMode& (0+255),b
  9864                           
  9865                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  9866  0081DA  0E01               	movlw	1
  9867  0081DC  ECA4  F046         	call	_RADIO_RegisterRead
  9868  0081E0  0100               	movlb	0	; () banked
  9869  0081E2  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
  9870  0081E4  AF7A               	btfss	??_RADIO_DIO2& (0+255),7,b
  9871  0081E6  0012               	return	
  9872  0081E8  D007               	goto	l639
  9873  0081EA                     
  9874                           ; BSR set to: 0
  9875                           ;radio_driver_SX1276.c: 1283: case 0x01:
  9876                           ;radio_driver_SX1276.c: 1284: case 0x02:
  9877                           ;radio_driver_SX1276.c: 1285: RADIO_FHSSChangeChannel();
  9878                           
  9879                           ; BSR set to: 0
  9880                           
  9881                           ; BSR set to: 0
  9882                           
  9883                           ; BSR set to: 0
  9884  0081EA  ECE7  F043         	call	_RADIO_FHSSChangeChannel	;wreg free
  9885                           
  9886                           ;radio_driver_SX1276.c: 1286: break;
  9887  0081EE  0012               	return	
  9888  0081F0                     
  9889                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  9890  0081F0  0E01               	movlw	1
  9891  0081F2  ECB3  F044         	call	_RADIO_UnhandledInterrupt
  9892                           
  9893                           ;radio_driver_SX1276.c: 1290: }
  9894                           
  9895                           ;radio_driver_SX1276.c: 1289: break;
  9896  0081F6  0012               	return	
  9897  0081F8                     l639:
  9898  0081F8  0100               	movlb	0	; () banked
  9899  0081FA  517C               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  9900                           
  9901                           ; Switch size 1, requested type "space"
  9902                           ; Number of cases is 3, Range of values is 0 to 2
  9903                           ; switch strategies available:
  9904                           ; Name         Instructions Cycles
  9905                           ; simple_byte           10     6 (average)
  9906                           ;	Chosen strategy is simple_byte
  9907  0081FC  0A00               	xorlw	0	; case 0
  9908  0081FE  B4D8               	btfsc	status,2,c
  9909  008200  D7F4               	goto	l640
  9910  008202  0A01               	xorlw	1	; case 1
  9911  008204  B4D8               	btfsc	status,2,c
  9912  008206  D7F1               	goto	l640
  9913  008208  0A03               	xorlw	3	; case 2
  9914  00820A  B4D8               	btfsc	status,2,c
  9915  00820C  D7EE               	goto	l640
  9916  00820E  D7F0               	goto	l644
  9917  008210                     __end_of_RADIO_DIO2:
  9918                           	opt stack 0
  9919                           tosu	equ	0xFFF
  9920                           tosh	equ	0xFFE
  9921                           tosl	equ	0xFFD
  9922                           pclath	equ	0xFFA
  9923                           tblptru	equ	0xFF8
  9924                           tblptrh	equ	0xFF7
  9925                           tblptrl	equ	0xFF6
  9926                           tablat	equ	0xFF5
  9927                           prodh	equ	0xFF4
  9928                           prodl	equ	0xFF3
  9929                           intcon	equ	0xFF2
  9930                           intcon2	equ	0xFF1
  9931                           intcon3	equ	0xFF0
  9932                           postinc0	equ	0xFEE
  9933                           wreg	equ	0xFE8
  9934                           postinc1	equ	0xFE6
  9935                           postdec1	equ	0xFE5
  9936                           plusw1	equ	0xFE3
  9937                           fsr1h	equ	0xFE2
  9938                           fsr1l	equ	0xFE1
  9939                           indf2	equ	0xFDF
  9940                           postinc2	equ	0xFDE
  9941                           postdec2	equ	0xFDD
  9942                           fsr2h	equ	0xFDA
  9943                           fsr2l	equ	0xFD9
  9944                           status	equ	0xFD8
  9945                           
  9946 ;; *************** function _RADIO_DIO1 *****************
  9947 ;; Defined at:
  9948 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;		None
  9951 ;; Auto vars:     Size  Location     Type
  9952 ;;  dioMapping      1  108[BANK0 ] unsigned char 
  9953 ;; Return value:  Size  Location     Type
  9954 ;;                  1    wreg      void 
  9955 ;; Registers used:
  9956 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  9957 ;; Tracked objects:
  9958 ;;		On entry : 0/0
  9959 ;;		On exit  : 0/0
  9960 ;;		Unchanged: 0/0
  9961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9964 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9965 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9966 ;;Total ram usage:        2 bytes
  9967 ;; Hardware stack levels used:    1
  9968 ;; Hardware stack levels required when called:   17
  9969 ;; This function calls:
  9970 ;;		_RADIO_FHSSChangeChannel
  9971 ;;		_RADIO_RegisterRead
  9972 ;;		_RADIO_RxTimeout
  9973 ;;		_RADIO_UnhandledInterrupt
  9974 ;; This function is called by:
  9975 ;;		_LORAWAN_Mainloop
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           	psect	text60
  9980  008404                     __ptext60:
  9981                           	opt stack 0
  9982  008404                     _RADIO_DIO1:
  9983                           	opt stack 12
  9984                           
  9985                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  9986                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  9987                           
  9988                           ;incstack = 0
  9989  008404  0E40               	movlw	64
  9990  008406  ECA4  F046         	call	_RADIO_RegisterRead
  9991  00840A  0100               	movlb	0	; () banked
  9992  00840C  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
  9993  00840E  39CB               	swapf	??_RADIO_DIO1& (0+255),w,b
  9994  008410  0B0F               	andlw	15
  9995  008412  0B03               	andlw	3
  9996  008414  6FCC               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  9997                           
  9998                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  9999  008416  0E01               	movlw	1
 10000  008418  ECA4  F046         	call	_RADIO_RegisterRead
 10001  00841C  0100               	movlb	0	; () banked
 10002  00841E  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
 10003  008420  BFCB               	btfsc	??_RADIO_DIO1& (0+255),7,b
 10004  008422  D00B               	goto	l625
 10005  008424  D013               	goto	l631
 10006  008426                     
 10007                           ; BSR set to: 0
 10008                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
 10009                           
 10010                           ; BSR set to: 0
 10011  008426  ECE7  F045         	call	_RADIO_RxTimeout	;wreg free
 10012                           
 10013                           ;radio_driver_SX1276.c: 1244: break;
 10014  00842A  0012               	return	
 10015  00842C                     
 10016                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
 10017  00842C  ECE7  F043         	call	_RADIO_FHSSChangeChannel	;wreg free
 10018                           
 10019                           ;radio_driver_SX1276.c: 1247: break;
 10020  008430  0012               	return	
 10021  008432                     
 10022                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10023  008432  0E01               	movlw	1
 10024  008434  ECB3  F044         	call	_RADIO_UnhandledInterrupt
 10025                           
 10026                           ;radio_driver_SX1276.c: 1251: }
 10027                           
 10028                           ;radio_driver_SX1276.c: 1250: break;
 10029  008438  0012               	return	
 10030  00843A                     l625:
 10031  00843A  0100               	movlb	0	; () banked
 10032  00843C  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 10033                           
 10034                           ; Switch size 1, requested type "space"
 10035                           ; Number of cases is 2, Range of values is 0 to 1
 10036                           ; switch strategies available:
 10037                           ; Name         Instructions Cycles
 10038                           ; simple_byte            7     4 (average)
 10039                           ;	Chosen strategy is simple_byte
 10040  00843E  0A00               	xorlw	0	; case 0
 10041  008440  B4D8               	btfsc	status,2,c
 10042  008442  D7F1               	goto	l626
 10043  008444  0A01               	xorlw	1	; case 1
 10044  008446  B4D8               	btfsc	status,2,c
 10045  008448  D7F1               	goto	l628
 10046  00844A  D7F3               	goto	l629
 10047  00844C                     l631:
 10048                           
 10049                           ; BSR set to: 0
 10050                           
 10051                           ; BSR set to: 0
 10052  00844C  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 10053                           
 10054                           ; Switch size 1, requested type "space"
 10055                           ; Number of cases is 1, Range of values is 0 to 0
 10056                           ; switch strategies available:
 10057                           ; Name         Instructions Cycles
 10058                           ; simple_byte            4     3 (average)
 10059                           ;	Chosen strategy is simple_byte
 10060  00844E  0A00               	xorlw	0	; case 0
 10061                           
 10062                           ; BSR set to: 0
 10063  008450  0012               	return	
 10064  008452                     __end_of_RADIO_DIO1:
 10065                           	opt stack 0
 10066                           tosu	equ	0xFFF
 10067                           tosh	equ	0xFFE
 10068                           tosl	equ	0xFFD
 10069                           pclath	equ	0xFFA
 10070                           tblptru	equ	0xFF8
 10071                           tblptrh	equ	0xFF7
 10072                           tblptrl	equ	0xFF6
 10073                           tablat	equ	0xFF5
 10074                           prodh	equ	0xFF4
 10075                           prodl	equ	0xFF3
 10076                           intcon	equ	0xFF2
 10077                           intcon2	equ	0xFF1
 10078                           intcon3	equ	0xFF0
 10079                           postinc0	equ	0xFEE
 10080                           wreg	equ	0xFE8
 10081                           postinc1	equ	0xFE6
 10082                           postdec1	equ	0xFE5
 10083                           plusw1	equ	0xFE3
 10084                           fsr1h	equ	0xFE2
 10085                           fsr1l	equ	0xFE1
 10086                           indf2	equ	0xFDF
 10087                           postinc2	equ	0xFDE
 10088                           postdec2	equ	0xFDD
 10089                           fsr2h	equ	0xFDA
 10090                           fsr2l	equ	0xFD9
 10091                           status	equ	0xFD8
 10092                           
 10093 ;; *************** function _RADIO_RxTimeout *****************
 10094 ;; Defined at:
 10095 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10096 ;; Parameters:    Size  Location     Type
 10097 ;;		None
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;		None
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  1    wreg      void 
 10102 ;; Registers used:
 10103 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10113 ;;Total ram usage:        0 bytes
 10114 ;; Hardware stack levels used:    1
 10115 ;; Hardware stack levels required when called:   16
 10116 ;; This function calls:
 10117 ;;		_LORAWAN_RxTimeout
 10118 ;;		_RADIO_RegisterWrite
 10119 ;;		_RADIO_WriteMode
 10120 ;;		_SwTimerStop
 10121 ;; This function is called by:
 10122 ;;		_RADIO_DIO1
 10123 ;; This function uses a non-reentrant model
 10124 ;;
 10125                           
 10126                           	psect	text61
 10127  008BCE                     __ptext61:
 10128                           	opt stack 0
 10129  008BCE                     _RADIO_RxTimeout:
 10130                           	opt stack 12
 10131                           
 10132                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
 10133                           
 10134                           ;incstack = 0
 10135  008BCE  0101               	movlb	1	; () banked
 10136  008BD0  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
 10137  008BD2  ECB8  F046         	call	_SwTimerStop
 10138                           
 10139                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
 10140  008BD6  0E80               	movlw	128
 10141  008BD8  0100               	movlb	0	; () banked
 10142  008BDA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10143  008BDC  0E12               	movlw	18
 10144  008BDE  EC55  F047         	call	_RADIO_RegisterWrite
 10145                           
 10146                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 10147  008BE2  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 10148  008BE6  0E00               	movlw	0
 10149  008BE8  0100               	movlb	0	; () banked
 10150  008BEA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 10151  008BEC  0E00               	movlw	0
 10152  008BEE  EC28  F030         	call	_RADIO_WriteMode
 10153                           
 10154                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
 10155  008BF2  0101               	movlb	1	; () banked
 10156  008BF4  9344               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 10157                           
 10158                           ; BSR set to: 1
 10159                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
 10160  008BF6  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
 10161  008BFA  0012               	return		;funcret
 10162  008BFC                     __end_of_RADIO_RxTimeout:
 10163                           	opt stack 0
 10164                           tosu	equ	0xFFF
 10165                           tosh	equ	0xFFE
 10166                           tosl	equ	0xFFD
 10167                           pclath	equ	0xFFA
 10168                           tblptru	equ	0xFF8
 10169                           tblptrh	equ	0xFF7
 10170                           tblptrl	equ	0xFF6
 10171                           tablat	equ	0xFF5
 10172                           prodh	equ	0xFF4
 10173                           prodl	equ	0xFF3
 10174                           intcon	equ	0xFF2
 10175                           intcon2	equ	0xFF1
 10176                           intcon3	equ	0xFF0
 10177                           postinc0	equ	0xFEE
 10178                           wreg	equ	0xFE8
 10179                           postinc1	equ	0xFE6
 10180                           postdec1	equ	0xFE5
 10181                           plusw1	equ	0xFE3
 10182                           fsr1h	equ	0xFE2
 10183                           fsr1l	equ	0xFE1
 10184                           indf2	equ	0xFDF
 10185                           postinc2	equ	0xFDE
 10186                           postdec2	equ	0xFDD
 10187                           fsr2h	equ	0xFDA
 10188                           fsr2l	equ	0xFD9
 10189                           status	equ	0xFD8
 10190                           
 10191 ;; *************** function _RADIO_FHSSChangeChannel *****************
 10192 ;; Defined at:
 10193 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;		None
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;  irqFlags        1   25[BANK0 ] unsigned char 
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1    wreg      void 
 10200 ;; Registers used:
 10201 ;;		wreg, status,2, status,0, cstack
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10208 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10210 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;Total ram usage:        1 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; Hardware stack levels required when called:   11
 10214 ;; This function calls:
 10215 ;;		_RADIO_RegisterRead
 10216 ;;		_RADIO_RegisterWrite
 10217 ;;		_RADIO_WriteFrequency
 10218 ;; This function is called by:
 10219 ;;		_RADIO_DIO1
 10220 ;;		_RADIO_DIO2
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           	psect	text62
 10225  0087CE                     __ptext62:
 10226                           	opt stack 0
 10227  0087CE                     _RADIO_FHSSChangeChannel:
 10228                           	opt stack 17
 10229                           
 10230                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
 10231                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
 10232                           
 10233                           ;incstack = 0
 10234  0087CE  0E12               	movlw	18
 10235  0087D0  ECA4  F046         	call	_RADIO_RegisterRead
 10236  0087D4  0100               	movlb	0	; () banked
 10237  0087D6  6F79               	movwf	RADIO_FHSSChangeChannel@irqFlags& (0+255),b
 10238                           
 10239                           ; BSR set to: 0
 10240                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
 10241  0087D8  0101               	movlb	1	; () banked
 10242  0087DA  513F               	movf	(_RadioConfiguration+30)& (0+255),w,b
 10243  0087DC  1140               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 10244  0087DE  B4D8               	btfsc	status,2,c
 10245  0087E0  D00F               	goto	l602
 10246                           
 10247                           ; BSR set to: 1
 10248                           ;radio_driver_SX1276.c: 1164: {
 10249                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
 10250  0087E2  5150               	movf	(_RadioConfiguration+47)& (0+255),w,b
 10251  0087E4  1151               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
 10252  0087E6  B4D8               	btfsc	status,2,c
 10253  0087E8  D00B               	goto	l602
 10254                           
 10255                           ; BSR set to: 1
 10256                           ;radio_driver_SX1276.c: 1166: {
 10257                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
 10258  0087EA  0E00               	movlw	0
 10259  0087EC  0100               	movlb	0	; () banked
 10260  0087EE  6F6D               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
 10261  0087F0  0E00               	movlw	0
 10262  0087F2  6F6E               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
 10263  0087F4  0E00               	movlw	0
 10264  0087F6  6F6F               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
 10265  0087F8  0E00               	movlw	0
 10266  0087FA  6F70               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
 10267  0087FC  EC0D  F033         	call	_RADIO_WriteFrequency	;wreg free
 10268  008800                     l602:
 10269                           
 10270                           ;radio_driver_SX1276.c: 1168: }
 10271                           ;radio_driver_SX1276.c: 1169: }
 10272                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
 10273  008800  0E02               	movlw	2
 10274  008802  0100               	movlb	0	; () banked
 10275  008804  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10276  008806  0E12               	movlw	18
 10277  008808  EC55  F047         	call	_RADIO_RegisterWrite
 10278  00880C  0012               	return		;funcret
 10279  00880E                     __end_of_RADIO_FHSSChangeChannel:
 10280                           	opt stack 0
 10281                           tosu	equ	0xFFF
 10282                           tosh	equ	0xFFE
 10283                           tosl	equ	0xFFD
 10284                           pclath	equ	0xFFA
 10285                           tblptru	equ	0xFF8
 10286                           tblptrh	equ	0xFF7
 10287                           tblptrl	equ	0xFF6
 10288                           tablat	equ	0xFF5
 10289                           prodh	equ	0xFF4
 10290                           prodl	equ	0xFF3
 10291                           intcon	equ	0xFF2
 10292                           intcon2	equ	0xFF1
 10293                           intcon3	equ	0xFF0
 10294                           postinc0	equ	0xFEE
 10295                           wreg	equ	0xFE8
 10296                           postinc1	equ	0xFE6
 10297                           postdec1	equ	0xFE5
 10298                           plusw1	equ	0xFE3
 10299                           fsr1h	equ	0xFE2
 10300                           fsr1l	equ	0xFE1
 10301                           indf2	equ	0xFDF
 10302                           postinc2	equ	0xFDE
 10303                           postdec2	equ	0xFDD
 10304                           fsr2h	equ	0xFDA
 10305                           fsr2l	equ	0xFD9
 10306                           status	equ	0xFD8
 10307                           
 10308 ;; *************** function _RADIO_DIO0 *****************
 10309 ;; Defined at:
 10310 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10311 ;; Parameters:    Size  Location     Type
 10312 ;;		None
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;  opMode          1  152[BANK0 ] unsigned char 
 10315 ;;  dioMapping      1  151[BANK0 ] unsigned char 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1    wreg      void 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10328 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10329 ;;Total ram usage:        4 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:   17
 10332 ;; This function calls:
 10333 ;;		_RADIO_FSKPacketSent
 10334 ;;		_RADIO_FSKPayloadReady
 10335 ;;		_RADIO_RegisterRead
 10336 ;;		_RADIO_RxDone
 10337 ;;		_RADIO_TxDone
 10338 ;;		_RADIO_UnhandledInterrupt
 10339 ;; This function is called by:
 10340 ;;		_LORAWAN_Mainloop
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           
 10344                           	psect	text63
 10345  0073C2                     __ptext63:
 10346                           	opt stack 0
 10347  0073C2                     _RADIO_DIO0:
 10348                           	opt stack 12
 10349                           
 10350                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
 10351                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
 10352                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
 10353                           
 10354                           ;incstack = 0
 10355  0073C2  0E40               	movlw	64
 10356  0073C4  ECA4  F046         	call	_RADIO_RegisterRead
 10357  0073C8  0100               	movlb	0	; () banked
 10358  0073CA  6FF5               	movwf	??_RADIO_DIO0& (0+255),b
 10359  0073CC  0E06               	movlw	6
 10360  0073CE  6FF6               	movwf	(??_RADIO_DIO0+1)& (0+255),b
 10361  0073D0                     u20485:
 10362  0073D0  90D8               	bcf	status,0,c
 10363  0073D2  33F5               	rrcf	??_RADIO_DIO0& (0+255),f,b
 10364  0073D4  2FF6               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
 10365  0073D6  D7FC               	goto	u20485
 10366  0073D8  51F5               	movf	??_RADIO_DIO0& (0+255),w,b
 10367  0073DA  0B03               	andlw	3
 10368  0073DC  6FF7               	movwf	RADIO_DIO0@dioMapping& (0+255),b
 10369                           
 10370                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
 10371  0073DE  0E01               	movlw	1
 10372  0073E0  ECA4  F046         	call	_RADIO_RegisterRead
 10373  0073E4  0100               	movlb	0	; () banked
 10374  0073E6  6FF8               	movwf	RADIO_DIO0@opMode& (0+255),b
 10375                           
 10376                           ; BSR set to: 0
 10377                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
 10378  0073E8  BFF8               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
 10379  0073EA  D00B               	goto	l607
 10380  0073EC  D02C               	goto	l613
 10381  0073EE                     
 10382                           ; BSR set to: 0
 10383                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
 10384                           
 10385                           ; BSR set to: 0
 10386  0073EE  ECF8  F033         	call	_RADIO_RxDone	;wreg free
 10387                           
 10388                           ;radio_driver_SX1276.c: 1191: break;
 10389  0073F2  0012               	return	
 10390  0073F4                     
 10391                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
 10392  0073F4  EC05  F02E         	call	_RADIO_TxDone	;wreg free
 10393                           
 10394                           ;radio_driver_SX1276.c: 1194: break;
 10395  0073F8  0012               	return	
 10396  0073FA                     
 10397                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10398  0073FA  0E01               	movlw	1
 10399  0073FC  ECB3  F044         	call	_RADIO_UnhandledInterrupt
 10400                           
 10401                           ;radio_driver_SX1276.c: 1198: }
 10402                           
 10403                           ;radio_driver_SX1276.c: 1197: break;
 10404  007400  0012               	return	
 10405  007402                     l607:
 10406  007402  0100               	movlb	0	; () banked
 10407  007404  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 10408                           
 10409                           ; Switch size 1, requested type "space"
 10410                           ; Number of cases is 2, Range of values is 0 to 1
 10411                           ; switch strategies available:
 10412                           ; Name         Instructions Cycles
 10413                           ; simple_byte            7     4 (average)
 10414                           ;	Chosen strategy is simple_byte
 10415  007406  0A00               	xorlw	0	; case 0
 10416  007408  B4D8               	btfsc	status,2,c
 10417  00740A  D7F1               	goto	l608
 10418  00740C  0A01               	xorlw	1	; case 1
 10419  00740E  B4D8               	btfsc	status,2,c
 10420  007410  D7F1               	goto	l610
 10421  007412  D7F3               	goto	l611
 10422  007414                     
 10423                           ; BSR set to: 0
 10424                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
 10425                           
 10426                           ; BSR set to: 0
 10427  007414  0E07               	movlw	7
 10428  007416  17F8               	andwf	RADIO_DIO0@opMode& (0+255),f,b
 10429                           
 10430                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
 10431  007418  0E03               	movlw	3
 10432  00741A  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 10433  00741C  A4D8               	btfss	status,2,c
 10434  00741E  D003               	goto	l615
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;radio_driver_SX1276.c: 1209: {
 10438                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
 10439  007420  ECD9  F02C         	call	_RADIO_FSKPacketSent	;wreg free
 10440                           
 10441                           ;radio_driver_SX1276.c: 1212: }
 10442  007424  0012               	return	
 10443  007426                     l615:
 10444                           
 10445                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
 10446  007426  0E05               	movlw	5
 10447  007428  0100               	movlb	0	; () banked
 10448  00742A  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 10449  00742C  A4D8               	btfss	status,2,c
 10450  00742E  D003               	goto	l617
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;radio_driver_SX1276.c: 1214: {
 10454                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
 10455  007430  EC4B  F037         	call	_RADIO_FSKPayloadReady	;wreg free
 10456                           
 10457                           ;radio_driver_SX1276.c: 1217: }
 10458  007434  0012               	return	
 10459  007436                     l617:
 10460                           
 10461                           ;radio_driver_SX1276.c: 1218: else
 10462                           ;radio_driver_SX1276.c: 1219: {
 10463                           ;radio_driver_SX1276.c: 1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
 10464  007436  0E00               	movlw	0
 10465  007438  ECB3  F044         	call	_RADIO_UnhandledInterrupt
 10466                           
 10467                           ;radio_driver_SX1276.c: 1221: }
 10468                           ;radio_driver_SX1276.c: 1222: break;
 10469  00743C  0012               	return	
 10470  00743E                     
 10471                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
 10472  00743E  0E00               	movlw	0
 10473  007440  ECB3  F044         	call	_RADIO_UnhandledInterrupt
 10474                           
 10475                           ;radio_driver_SX1276.c: 1226: }
 10476                           
 10477                           ;radio_driver_SX1276.c: 1225: break;
 10478  007444  0012               	return	
 10479  007446                     l613:
 10480  007446  0100               	movlb	0	; () banked
 10481  007448  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 10482                           
 10483                           ; Switch size 1, requested type "space"
 10484                           ; Number of cases is 1, Range of values is 0 to 0
 10485                           ; switch strategies available:
 10486                           ; Name         Instructions Cycles
 10487                           ; simple_byte            4     3 (average)
 10488                           ;	Chosen strategy is simple_byte
 10489  00744A  0A00               	xorlw	0	; case 0
 10490  00744C  B4D8               	btfsc	status,2,c
 10491  00744E  D7E2               	goto	l614
 10492  007450  D7F6               	goto	l620
 10493  007452                     __end_of_RADIO_DIO0:
 10494                           	opt stack 0
 10495                           tosu	equ	0xFFF
 10496                           tosh	equ	0xFFE
 10497                           tosl	equ	0xFFD
 10498                           pclath	equ	0xFFA
 10499                           tblptru	equ	0xFF8
 10500                           tblptrh	equ	0xFF7
 10501                           tblptrl	equ	0xFF6
 10502                           tablat	equ	0xFF5
 10503                           prodh	equ	0xFF4
 10504                           prodl	equ	0xFF3
 10505                           intcon	equ	0xFF2
 10506                           intcon2	equ	0xFF1
 10507                           intcon3	equ	0xFF0
 10508                           postinc0	equ	0xFEE
 10509                           wreg	equ	0xFE8
 10510                           postinc1	equ	0xFE6
 10511                           postdec1	equ	0xFE5
 10512                           plusw1	equ	0xFE3
 10513                           fsr1h	equ	0xFE2
 10514                           fsr1l	equ	0xFE1
 10515                           indf2	equ	0xFDF
 10516                           postinc2	equ	0xFDE
 10517                           postdec2	equ	0xFDD
 10518                           fsr2h	equ	0xFDA
 10519                           fsr2l	equ	0xFD9
 10520                           status	equ	0xFD8
 10521                           
 10522 ;; *************** function _RADIO_UnhandledInterrupt *****************
 10523 ;; Defined at:
 10524 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;  modulation      1    wreg     enum E6984
 10527 ;; Auto vars:     Size  Location     Type
 10528 ;;  modulation      1    4[BANK0 ] enum E6984
 10529 ;; Return value:  Size  Location     Type
 10530 ;;                  1    wreg      void 
 10531 ;; Registers used:
 10532 ;;		wreg, status,2, status,0, cstack
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10541 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10542 ;;Total ram usage:        1 bytes
 10543 ;; Hardware stack levels used:    1
 10544 ;; Hardware stack levels required when called:   10
 10545 ;; This function calls:
 10546 ;;		_RADIO_RegisterWrite
 10547 ;; This function is called by:
 10548 ;;		_RADIO_DIO0
 10549 ;;		_RADIO_DIO1
 10550 ;;		_RADIO_DIO2
 10551 ;;		_RADIO_DIO3
 10552 ;;		_RADIO_DIO4
 10553 ;;		_RADIO_DIO5
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text64
 10558  008966                     __ptext64:
 10559                           	opt stack 0
 10560  008966                     _RADIO_UnhandledInterrupt:
 10561                           	opt stack 18
 10562                           
 10563                           ;incstack = 0
 10564                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
 10565  008966  0100               	movlb	0	; () banked
 10566  008968  6F64               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
 10567                           
 10568                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
 10569  00896A  0100               	movlb	0	; () banked
 10570  00896C  0564               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
 10571  00896E  A4D8               	btfss	status,2,c
 10572  008970  D006               	goto	l596
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;radio_driver_SX1276.c: 1145: {
 10576                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
 10577  008972  0EFF               	movlw	255
 10578  008974  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10579  008976  0E12               	movlw	18
 10580  008978  EC55  F047         	call	_RADIO_RegisterWrite
 10581                           
 10582                           ;radio_driver_SX1276.c: 1147: }
 10583  00897C  0012               	return	
 10584  00897E                     l596:
 10585                           
 10586                           ;radio_driver_SX1276.c: 1148: else
 10587                           ;radio_driver_SX1276.c: 1149: {
 10588                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
 10589  00897E  0EFF               	movlw	255
 10590  008980  0100               	movlb	0	; () banked
 10591  008982  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10592  008984  0E3E               	movlw	62
 10593  008986  EC55  F047         	call	_RADIO_RegisterWrite
 10594                           
 10595                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
 10596  00898A  0EFF               	movlw	255
 10597  00898C  0100               	movlb	0	; () banked
 10598  00898E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10599  008990  0E3F               	movlw	63
 10600  008992  EC55  F047         	call	_RADIO_RegisterWrite
 10601  008996  0012               	return	
 10602  008998                     __end_of_RADIO_UnhandledInterrupt:
 10603                           	opt stack 0
 10604                           tosu	equ	0xFFF
 10605                           tosh	equ	0xFFE
 10606                           tosl	equ	0xFFD
 10607                           pclath	equ	0xFFA
 10608                           tblptru	equ	0xFF8
 10609                           tblptrh	equ	0xFF7
 10610                           tblptrl	equ	0xFF6
 10611                           tablat	equ	0xFF5
 10612                           prodh	equ	0xFF4
 10613                           prodl	equ	0xFF3
 10614                           intcon	equ	0xFF2
 10615                           intcon2	equ	0xFF1
 10616                           intcon3	equ	0xFF0
 10617                           postinc0	equ	0xFEE
 10618                           wreg	equ	0xFE8
 10619                           postinc1	equ	0xFE6
 10620                           postdec1	equ	0xFE5
 10621                           plusw1	equ	0xFE3
 10622                           fsr1h	equ	0xFE2
 10623                           fsr1l	equ	0xFE1
 10624                           indf2	equ	0xFDF
 10625                           postinc2	equ	0xFDE
 10626                           postdec2	equ	0xFDD
 10627                           fsr2h	equ	0xFDA
 10628                           fsr2l	equ	0xFD9
 10629                           status	equ	0xFD8
 10630                           
 10631 ;; *************** function _RADIO_TxDone *****************
 10632 ;; Defined at:
 10633 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;		None
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  1    wreg      void 
 10640 ;; Registers used:
 10641 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10648 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10649 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10650 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10651 ;;Total ram usage:       12 bytes
 10652 ;; Hardware stack levels used:    1
 10653 ;; Hardware stack levels required when called:   15
 10654 ;; This function calls:
 10655 ;;		_LORAWAN_TxDone
 10656 ;;		_RADIO_RegisterWrite
 10657 ;;		_RADIO_WriteMode
 10658 ;;		_SwTimerReadValue
 10659 ;;		_SwTimerStop
 10660 ;;		___lmul
 10661 ;; This function is called by:
 10662 ;;		_RADIO_DIO0
 10663 ;; This function uses a non-reentrant model
 10664 ;;
 10665                           
 10666                           	psect	text65
 10667  005C0A                     __ptext65:
 10668                           	opt stack 0
 10669  005C0A                     _RADIO_TxDone:
 10670                           	opt stack 13
 10671                           
 10672                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
 10673                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
 10674                           
 10675                           ;incstack = 0
 10676  005C0A  0101               	movlb	1	; () banked
 10677  005C0C  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
 10678  005C0E  ECB8  F046         	call	_SwTimerStop
 10679                           
 10680                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
 10681  005C12  0E08               	movlw	8
 10682  005C14  0100               	movlb	0	; () banked
 10683  005C16  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10684  005C18  0E12               	movlw	18
 10685  005C1A  EC55  F047         	call	_RADIO_RegisterWrite
 10686                           
 10687                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 10688  005C1E  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 10689  005C22  0E00               	movlw	0
 10690  005C24  0100               	movlb	0	; () banked
 10691  005C26  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 10692  005C28  0E00               	movlw	0
 10693  005C2A  EC28  F030         	call	_RADIO_WriteMode
 10694                           
 10695                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
 10696  005C2E  0101               	movlb	1	; () banked
 10697  005C30  9144               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 10698                           
 10699                           ; BSR set to: 1
 10700                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 10701  005C32  B944               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 10702  005C34  0012               	return	
 10703                           
 10704                           ; BSR set to: 1
 10705                           ;radio_driver_SX1276.c: 1087: {
 10706                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 10707  005C36  5148               	movf	(_RadioConfiguration+39)& (0+255),w,b
 10708  005C38  EC07  F044         	call	_SwTimerReadValue
 10709  005C3C  0100               	movlb	0	; () banked
 10710  005C3E  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 10711  005C40  E108               	bnz	u19770
 10712  005C42  0E1F               	movlw	31
 10713  005C44  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
 10714  005C46  0EAC               	movlw	172
 10715  005C48  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 10716  005C4A  0EDF               	movlw	223
 10717  005C4C  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 10718  005C4E  A0D8               	btfss	status,0,c
 10719  005C50  D021               	goto	l571
 10720  005C52                     u19770:
 10721                           
 10722                           ; BSR set to: 0
 10723  005C52  0101               	movlb	1	; () banked
 10724  005C54  5148               	movf	(_RadioConfiguration+39)& (0+255),w,b
 10725  005C56  EC07  F044         	call	_SwTimerReadValue
 10726  005C5A  0E0D               	movlw	13
 10727  005C5C  D006               	goto	u19780
 10728  005C5E                     u19785:
 10729  005C5E  0100               	movlb	0	; () banked
 10730  005C60  90D8               	bcf	status,0,c
 10731  005C62  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 10732  005C64  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 10733  005C66  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 10734  005C68  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
 10735  005C6A                     u19780:
 10736  005C6A  2EE8               	decfsz	wreg,f,c
 10737  005C6C  D7F8               	goto	u19785
 10738  005C6E  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 10739  005C72  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 10740  005C76  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 10741  005C7A  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 10742  005C7E  0E7D               	movlw	125
 10743  005C80  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 10744  005C82  0E00               	movlw	0
 10745  005C84  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10746  005C86  0E00               	movlw	0
 10747  005C88  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10748  005C8A  0E00               	movlw	0
 10749  005C8C  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10750  005C8E  ECB1  F040         	call	___lmul	;wreg free
 10751  005C92  D021               	goto	L5
 10752  005C94                     l571:
 10753  005C94  0101               	movlb	1	; () banked
 10754  005C96  5148               	movf	(_RadioConfiguration+39)& (0+255),w,b
 10755  005C98  EC07  F044         	call	_SwTimerReadValue
 10756  005C9C  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 10757  005CA0  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 10758  005CA4  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 10759  005CA8  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 10760  005CAC  0E7D               	movlw	125
 10761  005CAE  0100               	movlb	0	; () banked
 10762  005CB0  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 10763  005CB2  0E00               	movlw	0
 10764  005CB4  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10765  005CB6  0E00               	movlw	0
 10766  005CB8  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10767  005CBA  0E00               	movlw	0
 10768  005CBC  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10769  005CBE  ECB1  F040         	call	___lmul	;wreg free
 10770  005CC2  0E0D               	movlw	13
 10771  005CC4  D006               	goto	u19790
 10772  005CC6                     u19795:
 10773  005CC6  0100               	movlb	0	; () banked
 10774  005CC8  90D8               	bcf	status,0,c
 10775  005CCA  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 10776  005CCC  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 10777  005CCE  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 10778  005CD0  339A               	rrcf	?___lmul& (0+255),f,b
 10779  005CD2                     u19790:
 10780  005CD2  2EE8               	decfsz	wreg,f,c
 10781  005CD4  D7F8               	goto	u19795
 10782  005CD6                     L5:
 10783  005CD6  C09A  F0EB         	movff	?___lmul,_RADIO_TxDone$789
 10784  005CDA  C09B  F0EC         	movff	?___lmul+1,_RADIO_TxDone$789+1
 10785  005CDE  C09C  F0ED         	movff	?___lmul+2,_RADIO_TxDone$789+2
 10786  005CE2  C09D  F0EE         	movff	?___lmul+3,_RADIO_TxDone$789+3
 10787                           
 10788                           ; BSR set to: 0
 10789  005CE6  C0EB  F0E3         	movff	_RADIO_TxDone$789,??_RADIO_TxDone
 10790  005CEA  C0EC  F0E4         	movff	_RADIO_TxDone$789+1,??_RADIO_TxDone+1
 10791  005CEE  C0ED  F0E5         	movff	_RADIO_TxDone$789+2,??_RADIO_TxDone+2
 10792  005CF2  C0EE  F0E6         	movff	_RADIO_TxDone$789+3,??_RADIO_TxDone+3
 10793  005CF6  0100               	movlb	0	; () banked
 10794  005CF8  1FE3               	comf	??_RADIO_TxDone& (0+255),f,b
 10795  005CFA  1FE4               	comf	(??_RADIO_TxDone+1)& (0+255),f,b
 10796  005CFC  1FE5               	comf	(??_RADIO_TxDone+2)& (0+255),f,b
 10797  005CFE  1FE6               	comf	(??_RADIO_TxDone+3)& (0+255),f,b
 10798  005D00  2BE3               	incf	??_RADIO_TxDone& (0+255),f,b
 10799  005D02  0E00               	movlw	0
 10800  005D04  23E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),f,b
 10801  005D06  23E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
 10802  005D08  23E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
 10803  005D0A  0E20               	movlw	32
 10804  005D0C  25E3               	addwf	??_RADIO_TxDone& (0+255),w,b
 10805  005D0E  6FE7               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
 10806  005D10  0E4E               	movlw	78
 10807  005D12  21E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),w,b
 10808  005D14  6FE8               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
 10809  005D16  0E00               	movlw	0
 10810  005D18  21E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),w,b
 10811  005D1A  6FE9               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
 10812  005D1C  0E00               	movlw	0
 10813  005D1E  21E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),w,b
 10814  005D20  6FEA               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
 10818  005D22  C0E7  F0BB         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
 10819  005D26  C0E8  F0BC         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 10820  005D2A  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
 10821  005D2E  0012               	return	
 10822  005D30                     __end_of_RADIO_TxDone:
 10823                           	opt stack 0
 10824                           tosu	equ	0xFFF
 10825                           tosh	equ	0xFFE
 10826                           tosl	equ	0xFFD
 10827                           pclath	equ	0xFFA
 10828                           tblptru	equ	0xFF8
 10829                           tblptrh	equ	0xFF7
 10830                           tblptrl	equ	0xFF6
 10831                           tablat	equ	0xFF5
 10832                           prodh	equ	0xFF4
 10833                           prodl	equ	0xFF3
 10834                           intcon	equ	0xFF2
 10835                           intcon2	equ	0xFF1
 10836                           intcon3	equ	0xFF0
 10837                           postinc0	equ	0xFEE
 10838                           wreg	equ	0xFE8
 10839                           postinc1	equ	0xFE6
 10840                           postdec1	equ	0xFE5
 10841                           plusw1	equ	0xFE3
 10842                           fsr1h	equ	0xFE2
 10843                           fsr1l	equ	0xFE1
 10844                           indf2	equ	0xFDF
 10845                           postinc2	equ	0xFDE
 10846                           postdec2	equ	0xFDD
 10847                           fsr2h	equ	0xFDA
 10848                           fsr2l	equ	0xFD9
 10849                           status	equ	0xFD8
 10850                           
 10851 ;; *************** function _RADIO_RxDone *****************
 10852 ;; Defined at:
 10853 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;		None
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;  i               1  148[BANK0 ] unsigned char 
 10858 ;;  irqFlags        1  147[BANK0 ] unsigned char 
 10859 ;; Return value:  Size  Location     Type
 10860 ;;                  1    wreg      void 
 10861 ;; Registers used:
 10862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10863 ;; Tracked objects:
 10864 ;;		On entry : 0/0
 10865 ;;		On exit  : 0/0
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10869 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10871 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10872 ;;Total ram usage:        2 bytes
 10873 ;; Hardware stack levels used:    1
 10874 ;; Hardware stack levels required when called:   16
 10875 ;; This function calls:
 10876 ;;		_HALSPICSAssert
 10877 ;;		_HALSPICSDeassert
 10878 ;;		_HALSPISend
 10879 ;;		_LORAWAN_RxDone
 10880 ;;		_RADIO_RegisterRead
 10881 ;;		_RADIO_RegisterWrite
 10882 ;;		_RADIO_WriteMode
 10883 ;;		_SwTimerStop
 10884 ;;		___abdiv
 10885 ;; This function is called by:
 10886 ;;		_RADIO_DIO0
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890                           	psect	text66
 10891  0067F0                     __ptext66:
 10892                           	opt stack 0
 10893  0067F0                     _RADIO_RxDone:
 10894                           	opt stack 12
 10895                           
 10896                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
 10897                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
 10898                           
 10899                           ;incstack = 0
 10900  0067F0  0E12               	movlw	18
 10901  0067F2  ECA4  F046         	call	_RADIO_RegisterRead
 10902  0067F6  0100               	movlb	0	; () banked
 10903  0067F8  6FF3               	movwf	RADIO_RxDone@irqFlags& (0+255),b
 10904                           
 10905                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
 10906  0067FA  0E70               	movlw	112
 10907  0067FC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10908  0067FE  0E12               	movlw	18
 10909  006800  EC55  F047         	call	_RADIO_RegisterWrite
 10910                           
 10911                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
 10912  006804  0100               	movlb	0	; () banked
 10913  006806  51F3               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
 10914  006808  0B50               	andlw	80
 10915  00680A  0A50               	xorlw	80
 10916  00680C  A4D8               	btfss	status,2,c
 10917  00680E  0012               	return	
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;radio_driver_SX1276.c: 969: {
 10921                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
 10922  006810  0101               	movlb	1	; () banked
 10923  006812  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
 10924  006814  ECB8  F046         	call	_SwTimerStop
 10925                           
 10926                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
 10927  006818  0E1C               	movlw	28
 10928  00681A  ECA4  F046         	call	_RADIO_RegisterRead
 10929  00681E  0100               	movlb	0	; () banked
 10930  006820  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
 10931                           
 10932                           ; BSR set to: 0
 10933                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
 10934  006822  0101               	movlb	1	; () banked
 10935  006824  513D               	movf	(_RadioConfiguration+28)& (0+255),w,b
 10936  006826  B4D8               	btfsc	status,2,c
 10937  006828  D004               	goto	u19690
 10938                           
 10939                           ; BSR set to: 1
 10940  00682A  0100               	movlb	0	; () banked
 10941  00682C  ABF3               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
 10942                           
 10943                           ; BSR set to: 0
 10944  00682E  ADF4               	btfss	RADIO_RxDone@i& (0+255),6,b
 10945  006830  D03C               	goto	l543
 10946  006832                     u19690:
 10947                           
 10948                           ;radio_driver_SX1276.c: 976: {
 10949                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
 10950                           
 10951                           ; BSR set to: 0
 10952  006832  0E13               	movlw	19
 10953  006834  ECA4  F046         	call	_RADIO_RegisterRead
 10954  006838  0101               	movlb	1	; () banked
 10955  00683A  6F45               	movwf	(_RadioConfiguration+36)& (0+255),b
 10956                           
 10957                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
 10958  00683C  0E00               	movlw	0
 10959  00683E  0100               	movlb	0	; () banked
 10960  006840  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10961  006842  0E0D               	movlw	13
 10962  006844  EC55  F047         	call	_RADIO_RegisterWrite
 10963                           
 10964                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
 10965  006848  EC7C  F049         	call	_HALSPICSAssert	;wreg free
 10966                           
 10967                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
 10968  00684C  0E00               	movlw	0
 10969  00684E  ECDF  F048         	call	_HALSPISend
 10970                           
 10971                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 10972  006852  0E00               	movlw	0
 10973  006854  0100               	movlb	0	; () banked
 10974  006856  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
 10975  006858  D00F               	goto	l546
 10976  00685A                     
 10977                           ; BSR set to: 0
 10978                           ;radio_driver_SX1276.c: 990: {
 10979                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
 10980                           
 10981                           ; BSR set to: 0
 10982  00685A  51F4               	movf	RADIO_RxDone@i& (0+255),w,b
 10983  00685C  0D01               	mullw	1
 10984  00685E  50F3               	movf	prodl,w,c
 10985  006860  0101               	movlb	1	; () banked
 10986  006862  2546               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 10987  006864  6ED9               	movwf	fsr2l,c
 10988  006866  50F4               	movf	prodh,w,c
 10989  006868  2147               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 10990  00686A  6EDA               	movwf	fsr2h,c
 10991  00686C  0EFF               	movlw	255
 10992  00686E  ECDF  F048         	call	_HALSPISend
 10993  006872  6EDF               	movwf	indf2,c
 10994  006874  0100               	movlb	0	; () banked
 10995  006876  2BF4               	incf	RADIO_RxDone@i& (0+255),f,b
 10996  006878                     l546:
 10997                           
 10998                           ; BSR set to: 0
 10999                           
 11000                           ; BSR set to: 0
 11001  006878  0101               	movlb	1	; () banked
 11002  00687A  5145               	movf	(_RadioConfiguration+36)& (0+255),w,b
 11003  00687C  0100               	movlb	0	; () banked
 11004  00687E  5DF4               	subwf	RADIO_RxDone@i& (0+255),w,b
 11005  006880  A0D8               	btfss	status,0,c
 11006  006882  D7EB               	goto	l547
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;radio_driver_SX1276.c: 992: }
 11010                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
 11011                           
 11012                           ; BSR set to: 0
 11013  006884  EC7A  F049         	call	_HALSPICSDeassert	;wreg free
 11014                           
 11015                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
 11016  006888  0101               	movlb	1	; () banked
 11017  00688A  8544               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 11018                           
 11019                           ; BSR set to: 1
 11020                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
 11021  00688C  0E19               	movlw	25
 11022  00688E  ECA4  F046         	call	_RADIO_RegisterRead
 11023  006892  0101               	movlb	1	; () banked
 11024  006894  6F53               	movwf	(_RadioConfiguration+50)& (0+255),b
 11025                           
 11026                           ; BSR set to: 1
 11027                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
 11028  006896  0E04               	movlw	4
 11029  006898  0100               	movlb	0	; () banked
 11030  00689A  6F60               	movwf	___abdiv@divisor& (0+255),b
 11031  00689C  0101               	movlb	1	; () banked
 11032  00689E  5153               	movf	(_RadioConfiguration+50)& (0+255),w,b
 11033  0068A0  EC43  F03E         	call	___abdiv
 11034  0068A4  0101               	movlb	1	; () banked
 11035  0068A6  6F53               	movwf	(_RadioConfiguration+50)& (0+255),b
 11036                           
 11037                           ;radio_driver_SX1276.c: 998: }
 11038  0068A8  D002               	goto	l549
 11039  0068AA                     l543:
 11040                           
 11041                           ;radio_driver_SX1276.c: 999: else
 11042                           ;radio_driver_SX1276.c: 1000: {
 11043                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
 11044                           
 11045                           ; BSR set to: 1
 11046  0068AA  0101               	movlb	1	; () banked
 11047  0068AC  8744               	bsf	(_RadioConfiguration+35)& (0+255),3,b
 11048  0068AE                     l549:
 11049                           
 11050                           ; BSR set to: 1
 11051                           ;radio_driver_SX1276.c: 1003: }
 11052                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 11053                           
 11054                           ; BSR set to: 1
 11055  0068AE  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 11056  0068B2  0E00               	movlw	0
 11057  0068B4  0100               	movlb	0	; () banked
 11058  0068B6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11059  0068B8  0E00               	movlw	0
 11060  0068BA  EC28  F030         	call	_RADIO_WriteMode
 11061                           
 11062                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
 11063  0068BE  0101               	movlb	1	; () banked
 11064  0068C0  9344               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 11065                           
 11066                           ; BSR set to: 1
 11067                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 11068  0068C2  C146  F1D9         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 11069  0068C6  C147  F1DA         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 11070  0068CA  C145  F1DB         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 11071  0068CE  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
 11072  0068D2  0012               	return	
 11073  0068D4                     __end_of_RADIO_RxDone:
 11074                           	opt stack 0
 11075                           tosu	equ	0xFFF
 11076                           tosh	equ	0xFFE
 11077                           tosl	equ	0xFFD
 11078                           pclath	equ	0xFFA
 11079                           tblptru	equ	0xFF8
 11080                           tblptrh	equ	0xFF7
 11081                           tblptrl	equ	0xFF6
 11082                           tablat	equ	0xFF5
 11083                           prodh	equ	0xFF4
 11084                           prodl	equ	0xFF3
 11085                           intcon	equ	0xFF2
 11086                           intcon2	equ	0xFF1
 11087                           intcon3	equ	0xFF0
 11088                           postinc0	equ	0xFEE
 11089                           wreg	equ	0xFE8
 11090                           postinc1	equ	0xFE6
 11091                           postdec1	equ	0xFE5
 11092                           plusw1	equ	0xFE3
 11093                           fsr1h	equ	0xFE2
 11094                           fsr1l	equ	0xFE1
 11095                           indf2	equ	0xFDF
 11096                           postinc2	equ	0xFDE
 11097                           postdec2	equ	0xFDD
 11098                           fsr2h	equ	0xFDA
 11099                           fsr2l	equ	0xFD9
 11100                           status	equ	0xFD8
 11101                           
 11102 ;; *************** function ___abdiv *****************
 11103 ;; Defined at:
 11104 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abdiv.c"
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;  dividend        1    wreg     char 
 11107 ;;  divisor         1    0[BANK0 ] char 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;  dividend        1    6[BANK0 ] char 
 11110 ;;  quotient        1    5[BANK0 ] char 
 11111 ;;  sign            1    4[BANK0 ] unsigned char 
 11112 ;;  counter         1    3[BANK0 ] unsigned char 
 11113 ;; Return value:  Size  Location     Type
 11114 ;;                  1    wreg      char 
 11115 ;; Registers used:
 11116 ;;		wreg, status,2, status,0
 11117 ;; Tracked objects:
 11118 ;;		On entry : 0/0
 11119 ;;		On exit  : 0/0
 11120 ;;		Unchanged: 0/0
 11121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11122 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11123 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11124 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11125 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11126 ;;Total ram usage:        7 bytes
 11127 ;; Hardware stack levels used:    1
 11128 ;; Hardware stack levels required when called:    7
 11129 ;; This function calls:
 11130 ;;		Nothing
 11131 ;; This function is called by:
 11132 ;;		_RADIO_RxDone
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           	psect	text67
 11137  007C86                     __ptext67:
 11138                           	opt stack 0
 11139  007C86                     ___abdiv:
 11140                           	opt stack 20
 11141                           
 11142                           ;incstack = 0
 11143                           ;___abdiv@dividend stored from wreg
 11144  007C86  0100               	movlb	0	; () banked
 11145  007C88  6F66               	movwf	___abdiv@dividend& (0+255),b
 11146  007C8A  0E00               	movlw	0
 11147  007C8C  0100               	movlb	0	; () banked
 11148  007C8E  6F64               	movwf	___abdiv@sign& (0+255),b
 11149                           
 11150                           ; BSR set to: 0
 11151  007C90  AF60               	btfss	___abdiv@divisor& (0+255),7,b
 11152  007C92  D003               	goto	l2765
 11153                           
 11154                           ; BSR set to: 0
 11155  007C94  6D60               	negf	___abdiv@divisor& (0+255),b
 11156                           
 11157                           ; BSR set to: 0
 11158  007C96  0E01               	movlw	1
 11159  007C98  6F64               	movwf	___abdiv@sign& (0+255),b
 11160  007C9A                     l2765:
 11161                           
 11162                           ; BSR set to: 0
 11163                           
 11164                           ; BSR set to: 0
 11165  007C9A  AF66               	btfss	___abdiv@dividend& (0+255),7,b
 11166  007C9C  D003               	goto	l2766
 11167                           
 11168                           ; BSR set to: 0
 11169  007C9E  6D66               	negf	___abdiv@dividend& (0+255),b
 11170                           
 11171                           ; BSR set to: 0
 11172  007CA0  0E01               	movlw	1
 11173  007CA2  1B64               	xorwf	___abdiv@sign& (0+255),f,b
 11174  007CA4                     l2766:
 11175                           
 11176                           ; BSR set to: 0
 11177                           
 11178                           ; BSR set to: 0
 11179  007CA4  0E00               	movlw	0
 11180  007CA6  6F65               	movwf	___abdiv@quotient& (0+255),b
 11181                           
 11182                           ; BSR set to: 0
 11183  007CA8  5160               	movf	___abdiv@divisor& (0+255),w,b
 11184  007CAA  B4D8               	btfsc	status,2,c
 11185  007CAC  D01A               	goto	l2773
 11186                           
 11187                           ; BSR set to: 0
 11188  007CAE  0E01               	movlw	1
 11189  007CB0  6F63               	movwf	___abdiv@counter& (0+255),b
 11190  007CB2  D003               	goto	l2768
 11191  007CB4                     
 11192                           ; BSR set to: 0
 11193                           
 11194                           ; BSR set to: 0
 11195  007CB4  90D8               	bcf	status,0,c
 11196  007CB6  3760               	rlcf	___abdiv@divisor& (0+255),f,b
 11197                           
 11198                           ; BSR set to: 0
 11199  007CB8  2B63               	incf	___abdiv@counter& (0+255),f,b
 11200  007CBA                     l2768:
 11201                           
 11202                           ; BSR set to: 0
 11203                           
 11204                           ; BSR set to: 0
 11205  007CBA  C060  F061         	movff	___abdiv@divisor,??___abdiv
 11206  007CBE  6B62               	clrf	(??___abdiv+1)& (0+255),b
 11207  007CC0  BF61               	btfsc	??___abdiv& (0+255),7,b
 11208  007CC2  0762               	decf	(??___abdiv+1)& (0+255),f,b
 11209  007CC4  AF61               	btfss	??___abdiv& (0+255),7,b
 11210  007CC6  D7F6               	goto	l2769
 11211  007CC8                     u19610:
 11212                           
 11213                           ; BSR set to: 0
 11214                           
 11215                           ; BSR set to: 0
 11216                           
 11217                           ; BSR set to: 0
 11218  007CC8  90D8               	bcf	status,0,c
 11219  007CCA  3765               	rlcf	___abdiv@quotient& (0+255),f,b
 11220  007CCC  5160               	movf	___abdiv@divisor& (0+255),w,b
 11221  007CCE  5D66               	subwf	___abdiv@dividend& (0+255),w,b
 11222  007CD0  A0D8               	btfss	status,0,c
 11223  007CD2  D003               	goto	l2772
 11224                           
 11225                           ; BSR set to: 0
 11226  007CD4  5160               	movf	___abdiv@divisor& (0+255),w,b
 11227  007CD6  5F66               	subwf	___abdiv@dividend& (0+255),f,b
 11228                           
 11229                           ; BSR set to: 0
 11230  007CD8  8165               	bsf	___abdiv@quotient& (0+255),0,b
 11231  007CDA                     l2772:
 11232                           
 11233                           ; BSR set to: 0
 11234                           
 11235                           ; BSR set to: 0
 11236  007CDA  90D8               	bcf	status,0,c
 11237  007CDC  3360               	rrcf	___abdiv@divisor& (0+255),f,b
 11238                           
 11239                           ; BSR set to: 0
 11240  007CDE  2F63               	decfsz	___abdiv@counter& (0+255),f,b
 11241  007CE0  D7F3               	goto	u19610
 11242  007CE2                     l2773:
 11243                           
 11244                           ; BSR set to: 0
 11245                           
 11246                           ; BSR set to: 0
 11247                           
 11248                           ; BSR set to: 0
 11249  007CE2  5164               	movf	___abdiv@sign& (0+255),w,b
 11250  007CE4  A4D8               	btfss	status,2,c
 11251                           
 11252                           ; BSR set to: 0
 11253  007CE6  6D65               	negf	___abdiv@quotient& (0+255),b
 11254                           
 11255                           ; BSR set to: 0
 11256                           
 11257                           ; BSR set to: 0
 11258  007CE8  5165               	movf	___abdiv@quotient& (0+255),w,b
 11259  007CEA  0012               	return	
 11260  007CEC                     __end_of___abdiv:
 11261                           	opt stack 0
 11262                           tosu	equ	0xFFF
 11263                           tosh	equ	0xFFE
 11264                           tosl	equ	0xFFD
 11265                           pclath	equ	0xFFA
 11266                           tblptru	equ	0xFF8
 11267                           tblptrh	equ	0xFF7
 11268                           tblptrl	equ	0xFF6
 11269                           tablat	equ	0xFF5
 11270                           prodh	equ	0xFF4
 11271                           prodl	equ	0xFF3
 11272                           intcon	equ	0xFF2
 11273                           intcon2	equ	0xFF1
 11274                           intcon3	equ	0xFF0
 11275                           postinc0	equ	0xFEE
 11276                           wreg	equ	0xFE8
 11277                           postinc1	equ	0xFE6
 11278                           postdec1	equ	0xFE5
 11279                           plusw1	equ	0xFE3
 11280                           fsr1h	equ	0xFE2
 11281                           fsr1l	equ	0xFE1
 11282                           indf2	equ	0xFDF
 11283                           postinc2	equ	0xFDE
 11284                           postdec2	equ	0xFDD
 11285                           fsr2h	equ	0xFDA
 11286                           fsr2l	equ	0xFD9
 11287                           status	equ	0xFD8
 11288                           
 11289 ;; *************** function _RADIO_FSKPayloadReady *****************
 11290 ;; Defined at:
 11291 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;		None
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;  i               1  148[BANK0 ] unsigned char 
 11296 ;;  irqFlags        1  147[BANK0 ] unsigned char 
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  1    wreg      void 
 11299 ;; Registers used:
 11300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11309 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11310 ;;Total ram usage:        2 bytes
 11311 ;; Hardware stack levels used:    1
 11312 ;; Hardware stack levels required when called:   16
 11313 ;; This function calls:
 11314 ;;		_HALSPICSAssert
 11315 ;;		_HALSPICSDeassert
 11316 ;;		_HALSPISend
 11317 ;;		_LORAWAN_RxDone
 11318 ;;		_LORAWAN_RxTimeout
 11319 ;;		_RADIO_RegisterRead
 11320 ;;		_RADIO_WriteMode
 11321 ;;		_SwTimerStop
 11322 ;; This function is called by:
 11323 ;;		_RADIO_DIO0
 11324 ;; This function uses a non-reentrant model
 11325 ;;
 11326                           
 11327                           	psect	text68
 11328  006E96                     __ptext68:
 11329                           	opt stack 0
 11330  006E96                     _RADIO_FSKPayloadReady:
 11331                           	opt stack 12
 11332                           
 11333                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
 11334                           ;radio_driver_SX1276.c: 1013: uint8_t i;
 11335                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
 11336                           
 11337                           ; BSR set to: 0
 11338                           ;incstack = 0
 11339  006E96  0E3F               	movlw	63
 11340  006E98  ECA4  F046         	call	_RADIO_RegisterRead
 11341  006E9C  0100               	movlb	0	; () banked
 11342  006E9E  6FF3               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
 11343                           
 11344                           ; BSR set to: 0
 11345                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
 11346  006EA0  A5F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
 11347  006EA2  0012               	return	
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;radio_driver_SX1276.c: 1017: {
 11351                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
 11352  006EA4  0101               	movlb	1	; () banked
 11353  006EA6  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
 11354  006EA8  ECB8  F046         	call	_SwTimerStop
 11355                           
 11356                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 11357  006EAC  0101               	movlb	1	; () banked
 11358  006EAE  5149               	movf	(_RadioConfiguration+40)& (0+255),w,b
 11359  006EB0  ECB8  F046         	call	_SwTimerStop
 11360                           
 11361                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
 11362  006EB4  EC7C  F049         	call	_HALSPICSAssert	;wreg free
 11363                           
 11364                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
 11365  006EB8  0E00               	movlw	0
 11366  006EBA  ECDF  F048         	call	_HALSPISend
 11367                           
 11368                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
 11369  006EBE  0EFF               	movlw	255
 11370  006EC0  ECDF  F048         	call	_HALSPISend
 11371  006EC4  0101               	movlb	1	; () banked
 11372  006EC6  6F45               	movwf	(_RadioConfiguration+36)& (0+255),b
 11373                           
 11374                           ; BSR set to: 1
 11375                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 11376  006EC8  0E00               	movlw	0
 11377  006ECA  0100               	movlb	0	; () banked
 11378  006ECC  6FF4               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
 11379  006ECE  D00F               	goto	l554
 11380  006ED0                     
 11381                           ; BSR set to: 0
 11382                           ;radio_driver_SX1276.c: 1029: {
 11383                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
 11384                           
 11385                           ; BSR set to: 0
 11386  006ED0  51F4               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
 11387  006ED2  0D01               	mullw	1
 11388  006ED4  50F3               	movf	prodl,w,c
 11389  006ED6  0101               	movlb	1	; () banked
 11390  006ED8  2546               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 11391  006EDA  6ED9               	movwf	fsr2l,c
 11392  006EDC  50F4               	movf	prodh,w,c
 11393  006EDE  2147               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 11394  006EE0  6EDA               	movwf	fsr2h,c
 11395  006EE2  0EFF               	movlw	255
 11396  006EE4  ECDF  F048         	call	_HALSPISend
 11397  006EE8  6EDF               	movwf	indf2,c
 11398  006EEA  0100               	movlb	0	; () banked
 11399  006EEC  2BF4               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
 11400  006EEE                     l554:
 11401                           
 11402                           ; BSR set to: 0
 11403                           
 11404                           ; BSR set to: 0
 11405  006EEE  0101               	movlb	1	; () banked
 11406  006EF0  5145               	movf	(_RadioConfiguration+36)& (0+255),w,b
 11407  006EF2  0100               	movlb	0	; () banked
 11408  006EF4  5DF4               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
 11409  006EF6  A0D8               	btfss	status,0,c
 11410  006EF8  D7EB               	goto	l555
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;radio_driver_SX1276.c: 1031: }
 11414                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
 11415                           
 11416                           ; BSR set to: 0
 11417  006EFA  EC7A  F049         	call	_HALSPICSDeassert	;wreg free
 11418                           
 11419                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 11420  006EFE  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 11421  006F02  0E00               	movlw	0
 11422  006F04  0100               	movlb	0	; () banked
 11423  006F06  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11424  006F08  0E00               	movlw	0
 11425  006F0A  EC28  F030         	call	_RADIO_WriteMode
 11426                           
 11427                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
 11428  006F0E  0101               	movlb	1	; () banked
 11429  006F10  9344               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 11430                           
 11431                           ; BSR set to: 1
 11432                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
 11433  006F12  0E80               	movlw	128
 11434  006F14  6F53               	movwf	(_RadioConfiguration+50)& (0+255),b
 11435                           
 11436                           ; BSR set to: 1
 11437                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
 11438  006F16  053D               	decf	(_RadioConfiguration+28)& (0+255),w,b
 11439  006F18  A4D8               	btfss	status,2,c
 11440  006F1A  D008               	goto	l557
 11441                           
 11442                           ; BSR set to: 1
 11443                           ;radio_driver_SX1276.c: 1040: {
 11444                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
 11445  006F1C  0100               	movlb	0	; () banked
 11446  006F1E  A3F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
 11447  006F20  D002               	goto	l558
 11448                           
 11449                           ; BSR set to: 0
 11450                           ;radio_driver_SX1276.c: 1042: {
 11451                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
 11452  006F22  0101               	movlb	1	; () banked
 11453  006F24  D003               	goto	l557
 11454  006F26                     l558:
 11455                           
 11456                           ;radio_driver_SX1276.c: 1045: else
 11457                           ;radio_driver_SX1276.c: 1046: {
 11458                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
 11459                           
 11460                           ; BSR set to: 1
 11461  006F26  0101               	movlb	1	; () banked
 11462  006F28  9544               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 11463                           
 11464                           ; BSR set to: 1
 11465                           ;radio_driver_SX1276.c: 1048: }
 11466                           ;radio_driver_SX1276.c: 1049: }
 11467  006F2A  D001               	goto	l560
 11468  006F2C                     l557:
 11469                           
 11470                           ; BSR set to: 1
 11471                           ;radio_driver_SX1276.c: 1050: else
 11472                           ;radio_driver_SX1276.c: 1051: {
 11473                           ;radio_driver_SX1276.c: 1052: RadioConfiguration.flags |= (1 << (2));
 11474                           
 11475                           ; BSR set to: 1
 11476  006F2C  8544               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 11477  006F2E                     l560:
 11478                           
 11479                           ; BSR set to: 1
 11480                           ;radio_driver_SX1276.c: 1053: }
 11481                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 11482                           
 11483                           ; BSR set to: 1
 11484  006F2E  A544               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 11485  006F30  D009               	goto	l561
 11486                           
 11487                           ; BSR set to: 1
 11488                           ;radio_driver_SX1276.c: 1056: {
 11489                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 11490  006F32  C146  F1D9         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 11491  006F36  C147  F1DA         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 11492  006F3A  C145  F1DB         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 11493  006F3E  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
 11494                           
 11495                           ;radio_driver_SX1276.c: 1058: }
 11496  006F42  0012               	return	
 11497  006F44                     l561:
 11498                           
 11499                           ;radio_driver_SX1276.c: 1059: else
 11500                           ;radio_driver_SX1276.c: 1060: {
 11501                           ;radio_driver_SX1276.c: 1061: LORAWAN_RxTimeout();
 11502  006F44  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
 11503  006F48  0012               	return	
 11504  006F4A                     __end_of_RADIO_FSKPayloadReady:
 11505                           	opt stack 0
 11506                           tosu	equ	0xFFF
 11507                           tosh	equ	0xFFE
 11508                           tosl	equ	0xFFD
 11509                           pclath	equ	0xFFA
 11510                           tblptru	equ	0xFF8
 11511                           tblptrh	equ	0xFF7
 11512                           tblptrl	equ	0xFF6
 11513                           tablat	equ	0xFF5
 11514                           prodh	equ	0xFF4
 11515                           prodl	equ	0xFF3
 11516                           intcon	equ	0xFF2
 11517                           intcon2	equ	0xFF1
 11518                           intcon3	equ	0xFF0
 11519                           postinc0	equ	0xFEE
 11520                           wreg	equ	0xFE8
 11521                           postinc1	equ	0xFE6
 11522                           postdec1	equ	0xFE5
 11523                           plusw1	equ	0xFE3
 11524                           fsr1h	equ	0xFE2
 11525                           fsr1l	equ	0xFE1
 11526                           indf2	equ	0xFDF
 11527                           postinc2	equ	0xFDE
 11528                           postdec2	equ	0xFDD
 11529                           fsr2h	equ	0xFDA
 11530                           fsr2l	equ	0xFD9
 11531                           status	equ	0xFD8
 11532                           
 11533 ;; *************** function _LORAWAN_RxTimeout *****************
 11534 ;; Defined at:
 11535 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;		None
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;  minim           4  102[BANK0 ] unsigned long 
 11540 ;;  i               1  106[BANK0 ] unsigned char 
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11551 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11552 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11553 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11554 ;;Total ram usage:        9 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:   15
 11557 ;; This function calls:
 11558 ;;		_LORAWAN_ReceiveWindow2Callback
 11559 ;;		_RADIO_Transmit
 11560 ;;		_ResetParametersForConfirmedTransmission
 11561 ;;		_ResetParametersForUnconfirmedTransmission
 11562 ;;		_RxData
 11563 ;;		_SelectChannelForTransmission
 11564 ;;		_SetJoinFailState
 11565 ;;		_SwTimerSetTimeout
 11566 ;;		_SwTimerStart
 11567 ;;		___lldiv
 11568 ;; This function is called by:
 11569 ;;		_RADIO_FSKPayloadReady
 11570 ;;		_RADIO_RxTimeout
 11571 ;;		_RADIO_RxFSKTimeout
 11572 ;;		_RADIO_WatchdogTimeout
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           
 11576                           	psect	text69
 11577  00259A                     __ptext69:
 11578                           	opt stack 0
 11579  00259A                     _LORAWAN_RxTimeout:
 11580                           	opt stack 12
 11581                           
 11582                           ;lorawan_eu.c: 466: uint8_t i;
 11583                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
 11584                           
 11585                           ;incstack = 0
 11586  00259A  0100               	movlb	0	; () banked
 11587  00259C  69C6               	setf	LORAWAN_RxTimeout@minim& (0+255),b
 11588  00259E  69C7               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
 11589  0025A0  69C8               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
 11590  0025A2  69C9               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
 11591                           
 11592                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
 11593  0025A4  0102               	movlb	2	; () banked
 11594  0025A6  B103               	btfsc	(_loRa+3)& (0+255),0,b
 11595  0025A8  D190               	goto	l1057
 11596                           
 11597                           ; BSR set to: 2
 11598                           ;lorawan_eu.c: 470: {
 11599                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
 11600  0025AA  5102               	movf	(_loRa+2)& (0+255),w,b
 11601  0025AC  0B0F               	andlw	15
 11602  0025AE  0A03               	xorlw	3
 11603  0025B0  A4D8               	btfss	status,2,c
 11604  0025B2  D011               	goto	l1058
 11605                           
 11606                           ; BSR set to: 2
 11607                           ;lorawan_eu.c: 473: {
 11608                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
 11609  0025B4  5112               	movf	(_loRa+18)& (0+255),w,b
 11610  0025B6  A4D8               	btfss	status,2,c
 11611  0025B8  D005               	goto	l1059
 11612                           
 11613                           ; BSR set to: 2
 11614                           ;lorawan_eu.c: 475: {
 11615                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
 11616  0025BA  5102               	movf	(_loRa+2)& (0+255),w,b
 11617  0025BC  0BF0               	andlw	-16
 11618  0025BE  0904               	iorlw	4
 11619  0025C0  6F02               	movwf	(_loRa+2)& (0+255),b
 11620                           
 11621                           ;lorawan_eu.c: 477: }
 11622  0025C2  0012               	return	
 11623  0025C4                     l1059:
 11624                           
 11625                           ; BSR set to: 2
 11626                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
 11627                           
 11628                           ; BSR set to: 2
 11629  0025C4  0E02               	movlw	2
 11630  0025C6  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11631  0025C8  A4D8               	btfss	status,2,c
 11632  0025CA  0012               	return	
 11633                           
 11634                           ; BSR set to: 2
 11635                           ;lorawan_eu.c: 479: {
 11636                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
 11637  0025CC  0E00               	movlw	0
 11638  0025CE  6EE6               	movwf	postinc1,c
 11639  0025D0  ECB5  F035         	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
 11640                           
 11641                           ;lorawan_eu.c: 481: }
 11642                           ;lorawan_eu.c: 482: }
 11643  0025D4  0012               	return	
 11644  0025D6                     l1058:
 11645                           
 11646                           ; BSR set to: 2
 11647                           ;lorawan_eu.c: 483: else
 11648                           ;lorawan_eu.c: 484: {
 11649                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
 11650  0025D6  A500               	btfss	_loRa& (0+255),2,b
 11651  0025D8  D003               	goto	l1063
 11652                           
 11653                           ; BSR set to: 2
 11654                           ;lorawan_eu.c: 487: {
 11655                           ;lorawan_eu.c: 488: SetJoinFailState();
 11656  0025DA  ECFD  F044         	call	_SetJoinFailState	;wreg free
 11657                           
 11658                           ;lorawan_eu.c: 489: }
 11659  0025DE  0012               	return	
 11660  0025E0                     l1063:
 11661                           
 11662                           ; BSR set to: 2
 11663                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
 11664  0025E0  A902               	btfss	(_loRa+2)& (0+255),4,b
 11665  0025E2  0012               	return	
 11666                           
 11667                           ; BSR set to: 2
 11668                           ;lorawan_eu.c: 492: {
 11669                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
 11670  0025E4  A100               	btfss	_loRa& (0+255),0,b
 11671  0025E6  D058               	goto	l1066
 11672                           
 11673                           ; BSR set to: 2
 11674                           ;lorawan_eu.c: 494: {
 11675                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
 11676  0025E8  51D9               	movf	(_loRa+217)& (0+255),w,b
 11677  0025EA  5DD7               	subwf	(_loRa+215)& (0+255),w,b
 11678  0025EC  A0D8               	btfss	status,0,c
 11679  0025EE  D038               	goto	l1067
 11680                           
 11681                           ; BSR set to: 2
 11682                           ;lorawan_eu.c: 496: {
 11683                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 11684  0025F0  5102               	movf	(_loRa+2)& (0+255),w,b
 11685  0025F2  0BF0               	andlw	-16
 11686  0025F4  0906               	iorlw	6
 11687  0025F6  6F02               	movwf	(_loRa+2)& (0+255),b
 11688                           
 11689                           ; BSR set to: 2
 11690                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
 11691  0025F8  51A0               	movf	(_loRa+160)& (0+255),w,b
 11692  0025FA  0100               	movlb	0	; () banked
 11693  0025FC  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 11694  0025FE  0102               	movlb	2	; () banked
 11695  002600  51A1               	movf	(_loRa+161)& (0+255),w,b
 11696  002602  0100               	movlb	0	; () banked
 11697  002604  6FC3               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
 11698  002606  6BC4               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
 11699  002608  6BC5               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
 11700  00260A  0E0C               	movlw	12
 11701  00260C                     u19115:
 11702  00260C  90D8               	bcf	status,0,c
 11703  00260E  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 11704  002610  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 11705  002612  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 11706  002614  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 11707  002616  2EE8               	decfsz	wreg,f,c
 11708  002618  D7F9               	goto	u19115
 11709  00261A  C0C2  F060         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
 11710  00261E  C0C3  F061         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
 11711  002622  C0C4  F062         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
 11712  002626  C0C5  F063         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
 11713  00262A  0E7D               	movlw	125
 11714  00262C  6F64               	movwf	___lldiv@divisor& (0+255),b
 11715  00262E  0E00               	movlw	0
 11716  002630  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11717  002632  0E00               	movlw	0
 11718  002634  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11719  002636  0E00               	movlw	0
 11720  002638  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11721  00263A  ECC4  F03B         	call	___lldiv	;wreg free
 11722  00263E  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 11723  002642  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 11724  002646  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 11725  00264A  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 11726  00264E  0102               	movlb	2	; () banked
 11727  002650  51E8               	movf	(_loRa+232)& (0+255),w,b
 11728  002652  EC62  F043         	call	_SwTimerSetTimeout
 11729                           
 11730                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
 11731  002656  0102               	movlb	2	; () banked
 11732  002658  51E8               	movf	(_loRa+232)& (0+255),w,b
 11733  00265A  EC4B  F039         	call	_SwTimerStart
 11734                           
 11735                           ;lorawan_eu.c: 500: }
 11736  00265E  0012               	return	
 11737  002660                     l1067:
 11738                           
 11739                           ;lorawan_eu.c: 501: else
 11740                           ;lorawan_eu.c: 502: {
 11741                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
 11742  002660  EC79  F048         	call	_ResetParametersForConfirmedTransmission	;wreg free
 11743                           
 11744                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
 11745  002664  0101               	movlb	1	; () banked
 11746  002666  5104               	movf	_rxPayload& (0+255),w,b
 11747  002668  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 11748  00266A  B4D8               	btfsc	status,2,c
 11749  00266C  0012               	return	
 11750                           
 11751                           ; BSR set to: 1
 11752                           ;lorawan_eu.c: 505: {
 11753                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11754  00266E  0E00               	movlw	0
 11755  002670  0100               	movlb	0	; () banked
 11756  002672  6F60               	movwf	RxData@pData& (0+255),b
 11757  002674  0E00               	movlw	0
 11758  002676  6F61               	movwf	(RxData@pData+1)& (0+255),b
 11759  002678  0E00               	movlw	0
 11760  00267A  6F62               	movwf	RxData@dataLength& (0+255),b
 11761  00267C  0E00               	movlw	0
 11762  00267E  6F63               	movwf	RxData@status& (0+255),b
 11763  002680  D801               	call	u19138
 11764  002682  0012               	return	
 11765  002684                     u19138:
 11766  002684  0005               	push	
 11767  002686  6EFA               	movwf	pclath,c
 11768  002688  0101               	movlb	1	; () banked
 11769  00268A  5104               	movf	_rxPayload& (0+255),w,b
 11770  00268C  6EFD               	movwf	tosl,c
 11771  00268E  5105               	movf	(_rxPayload+1)& (0+255),w,b
 11772  002690  6EFE               	movwf	tosh,c
 11773  002692  6AFF               	clrf	tosu,c
 11774  002694  50FA               	movf	pclath,w,c
 11775  002696  0012               	return		;indir
 11776  002698                     l1066:
 11777                           
 11778                           ;lorawan_eu.c: 511: else
 11779                           ;lorawan_eu.c: 512: {
 11780                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 11781  002698  0102               	movlb	2	; () banked
 11782  00269A  51D8               	movf	(_loRa+216)& (0+255),w,b
 11783  00269C  5DD6               	subwf	(_loRa+214)& (0+255),w,b
 11784  00269E  A0D8               	btfss	status,0,c
 11785  0026A0  D0F8               	goto	l1071
 11786                           
 11787                           ; BSR set to: 2
 11788                           ;lorawan_eu.c: 514: {
 11789                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 11790  0026A2  5102               	movf	(_loRa+2)& (0+255),w,b
 11791  0026A4  0BF0               	andlw	-16
 11792  0026A6  0906               	iorlw	6
 11793  0026A8  6F02               	movwf	(_loRa+2)& (0+255),b
 11794                           
 11795                           ; BSR set to: 2
 11796                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 11797  0026AA  0E01               	movlw	1
 11798  0026AC  EC70  F03D         	call	_SelectChannelForTransmission
 11799  0026B0  0900               	iorlw	0
 11800  0026B2  A4D8               	btfss	status,2,c
 11801  0026B4  D031               	goto	l1072
 11802                           
 11803                           ;lorawan_eu.c: 517: {
 11804                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 11805  0026B6  0EF0               	movlw	low (_macBuffer+16)
 11806  0026B8  0100               	movlb	0	; () banked
 11807  0026BA  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 11808  0026BC  0E04               	movlw	high (_macBuffer+16)
 11809  0026BE  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 11810  0026C0  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 11811  0026C4  EC51  F01E         	call	_RADIO_Transmit	;wreg free
 11812  0026C8  0100               	movlb	0	; () banked
 11813  0026CA  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 11814  0026CC  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 11815  0026CE  A4D8               	btfss	status,2,c
 11816  0026D0  D007               	goto	l1073
 11817                           
 11818                           ; BSR set to: 0
 11819                           ;lorawan_eu.c: 520: {
 11820                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 11821  0026D2  0102               	movlb	2	; () banked
 11822  0026D4  2BD8               	incf	(_loRa+216)& (0+255),f,b
 11823                           
 11824                           ; BSR set to: 2
 11825                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 11826  0026D6  5102               	movf	(_loRa+2)& (0+255),w,b
 11827  0026D8  0BF0               	andlw	-16
 11828  0026DA  0901               	iorlw	1
 11829  0026DC  6F02               	movwf	(_loRa+2)& (0+255),b
 11830                           
 11831                           ;lorawan_eu.c: 523: }
 11832  0026DE  0012               	return	
 11833  0026E0                     l1073:
 11834                           
 11835                           ;lorawan_eu.c: 524: else
 11836                           ;lorawan_eu.c: 526: {
 11837                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 11838                           
 11839                           ; BSR set to: 2
 11840  0026E0  EC52  F048         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 11841                           
 11842                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 11843  0026E4  0101               	movlb	1	; () banked
 11844  0026E6  5104               	movf	_rxPayload& (0+255),w,b
 11845  0026E8  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 11846  0026EA  B4D8               	btfsc	status,2,c
 11847  0026EC  0012               	return	
 11848                           
 11849                           ; BSR set to: 1
 11850                           ;lorawan_eu.c: 529: {
 11851                           ;lorawan_eu.c: 530: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
 11852  0026EE  0E00               	movlw	0
 11853  0026F0  0100               	movlb	0	; () banked
 11854  0026F2  6F60               	movwf	RxData@pData& (0+255),b
 11855  0026F4  0E00               	movlw	0
 11856  0026F6  6F61               	movwf	(RxData@pData+1)& (0+255),b
 11857  0026F8  0E00               	movlw	0
 11858  0026FA  6F62               	movwf	RxData@dataLength& (0+255),b
 11859  0026FC  0E00               	movlw	0
 11860  0026FE  6F63               	movwf	RxData@status& (0+255),b
 11861  002700  D801               	call	u19188
 11862  002702  0012               	return	
 11863  002704                     u19188:
 11864  002704  0005               	push	
 11865  002706  6EFA               	movwf	pclath,c
 11866  002708  0101               	movlb	1	; () banked
 11867  00270A  5104               	movf	_rxPayload& (0+255),w,b
 11868  00270C  6EFD               	movwf	tosl,c
 11869  00270E  5105               	movf	(_rxPayload+1)& (0+255),w,b
 11870  002710  6EFE               	movwf	tosh,c
 11871  002712  6AFF               	clrf	tosu,c
 11872  002714  50FA               	movf	pclath,w,c
 11873  002716  0012               	return		;indir
 11874  002718                     l1072:
 11875                           
 11876                           ;lorawan_eu.c: 534: else
 11877                           ;lorawan_eu.c: 535: {
 11878                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 11879  002718  0E00               	movlw	0
 11880  00271A  0100               	movlb	0	; () banked
 11881  00271C  6FCA               	movwf	LORAWAN_RxTimeout@i& (0+255),b
 11882  00271E  D07C               	goto	l1077
 11883  002720                     
 11884                           ;lorawan_eu.c: 538: {
 11885                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 11886                           
 11887                           ; BSR set to: 0
 11888  002720  0100               	movlb	0	; () banked
 11889  002722  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11890  002724  0D0E               	mullw	14
 11891  002726  0E04               	movlw	4
 11892  002728  26F3               	addwf	prodl,f,c
 11893  00272A  0E00               	movlw	0
 11894  00272C  22F4               	addwfc	prodh,f,c
 11895  00272E  0E00               	movlw	low _Channels
 11896  002730  24F3               	addwf	prodl,w,c
 11897  002732  6ED9               	movwf	fsr2l,c
 11898  002734  0E04               	movlw	high _Channels
 11899  002736  20F4               	addwfc	prodh,w,c
 11900  002738  6EDA               	movwf	fsr2h,c
 11901  00273A  04DE               	decf	postinc2,w,c
 11902  00273C  A4D8               	btfss	status,2,c
 11903  00273E  D06A               	goto	l1079
 11904                           
 11905                           ; BSR set to: 0
 11906  002740  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11907  002742  0D0E               	mullw	14
 11908  002744  0E08               	movlw	8
 11909  002746  26F3               	addwf	prodl,f,c
 11910  002748  0E00               	movlw	0
 11911  00274A  22F4               	addwfc	prodh,f,c
 11912  00274C  0E00               	movlw	low _Channels
 11913  00274E  24F3               	addwf	prodl,w,c
 11914  002750  6ED9               	movwf	fsr2l,c
 11915  002752  0E04               	movlw	high _Channels
 11916  002754  20F4               	addwfc	prodh,w,c
 11917  002756  6EDA               	movwf	fsr2h,c
 11918  002758  50DE               	movf	postinc2,w,c
 11919  00275A  10DE               	iorwf	postinc2,w,c
 11920  00275C  10DE               	iorwf	postinc2,w,c
 11921  00275E  10DE               	iorwf	postinc2,w,c
 11922  002760  B4D8               	btfsc	status,2,c
 11923  002762  D058               	goto	l1079
 11924                           
 11925                           ; BSR set to: 0
 11926  002764  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11927  002766  0D0E               	mullw	14
 11928  002768  0E08               	movlw	8
 11929  00276A  26F3               	addwf	prodl,f,c
 11930  00276C  0E00               	movlw	0
 11931  00276E  22F4               	addwfc	prodh,f,c
 11932  002770  0E00               	movlw	low _Channels
 11933  002772  24F3               	addwf	prodl,w,c
 11934  002774  6ED9               	movwf	fsr2l,c
 11935  002776  0E04               	movlw	high _Channels
 11936  002778  20F4               	addwfc	prodh,w,c
 11937  00277A  6EDA               	movwf	fsr2h,c
 11938  00277C  50DE               	movf	postinc2,w,c
 11939  00277E  5DC6               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 11940  002780  50DE               	movf	postinc2,w,c
 11941  002782  59C7               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 11942  002784  50DE               	movf	postinc2,w,c
 11943  002786  59C8               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 11944  002788  50DE               	movf	postinc2,w,c
 11945  00278A  59C9               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 11946  00278C  A0D8               	btfss	status,0,c
 11947  00278E  D042               	goto	l1079
 11948                           
 11949                           ; BSR set to: 0
 11950  002790  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11951  002792  0D0E               	mullw	14
 11952  002794  0E05               	movlw	5
 11953  002796  26F3               	addwf	prodl,f,c
 11954  002798  0E00               	movlw	0
 11955  00279A  22F4               	addwfc	prodh,f,c
 11956  00279C  0E00               	movlw	low _Channels
 11957  00279E  24F3               	addwf	prodl,w,c
 11958  0027A0  6ED9               	movwf	fsr2l,c
 11959  0027A2  0E04               	movlw	high _Channels
 11960  0027A4  20F4               	addwfc	prodh,w,c
 11961  0027A6  6EDA               	movwf	fsr2h,c
 11962  0027A8  0104               	movlb	4	; () banked
 11963  0027AA  50DF               	movf	223,w,c
 11964  0027AC  0B0F               	andlw	15
 11965  0027AE  0100               	movlb	0	; () banked
 11966  0027B0  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 11967  0027B2  51C2               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 11968  0027B4  0102               	movlb	2	; () banked
 11969  0027B6  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 11970  0027B8  A0D8               	btfss	status,0,c
 11971  0027BA  D02C               	goto	l1079
 11972                           
 11973                           ; BSR set to: 2
 11974  0027BC  0100               	movlb	0	; () banked
 11975  0027BE  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11976  0027C0  0D0E               	mullw	14
 11977  0027C2  0E05               	movlw	5
 11978  0027C4  26F3               	addwf	prodl,f,c
 11979  0027C6  0E00               	movlw	0
 11980  0027C8  22F4               	addwfc	prodh,f,c
 11981  0027CA  0E00               	movlw	low _Channels
 11982  0027CC  24F3               	addwf	prodl,w,c
 11983  0027CE  6ED9               	movwf	fsr2l,c
 11984  0027D0  0E04               	movlw	high _Channels
 11985  0027D2  20F4               	addwfc	prodh,w,c
 11986  0027D4  6EDA               	movwf	fsr2h,c
 11987  0027D6  0104               	movlb	4	; () banked
 11988  0027D8  38DF               	swapf	223,w,c
 11989  0027DA  0B0F               	andlw	15
 11990  0027DC  0100               	movlb	0	; () banked
 11991  0027DE  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 11992  0027E0  0102               	movlb	2	; () banked
 11993  0027E2  51DF               	movf	(_loRa+223)& (0+255),w,b
 11994  0027E4  0100               	movlb	0	; () banked
 11995  0027E6  5DC2               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 11996  0027E8  A0D8               	btfss	status,0,c
 11997  0027EA  D014               	goto	l1079
 11998                           
 11999                           ; BSR set to: 0
 12000                           ;lorawan_eu.c: 540: {
 12001                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 12002  0027EC  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 12003  0027EE  0D0E               	mullw	14
 12004  0027F0  0E08               	movlw	8
 12005  0027F2  26F3               	addwf	prodl,f,c
 12006  0027F4  0E00               	movlw	0
 12007  0027F6  22F4               	addwfc	prodh,f,c
 12008  0027F8  0E00               	movlw	low _Channels
 12009  0027FA  24F3               	addwf	prodl,w,c
 12010  0027FC  6ED9               	movwf	fsr2l,c
 12011  0027FE  0E04               	movlw	high _Channels
 12012  002800  20F4               	addwfc	prodh,w,c
 12013  002802  6EDA               	movwf	fsr2h,c
 12014  002804  CFDE F0C6          	movff	postinc2,LORAWAN_RxTimeout@minim
 12015  002808  CFDE F0C7          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 12016  00280C  CFDE F0C8          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 12017  002810  CFDE F0C9          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 12018  002814                     l1079:
 12019                           
 12020                           ; BSR set to: 0
 12021  002814  0100               	movlb	0	; () banked
 12022  002816  2BCA               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 12023  002818                     l1077:
 12024                           
 12025                           ; BSR set to: 0
 12026                           
 12027                           ; BSR set to: 0
 12028  002818  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 12029  00281A  0102               	movlb	2	; () banked
 12030  00281C  5DED               	subwf	(_loRa+237)& (0+255),w,b
 12031  00281E  B0D8               	btfsc	status,0,c
 12032  002820  D77F               	goto	l1078
 12033                           
 12034                           ; BSR set to: 2
 12035                           ;lorawan_eu.c: 542: }
 12036                           ;lorawan_eu.c: 543: }
 12037                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 12038                           
 12039                           ; BSR set to: 2
 12040  002822  C0C6  F0C2         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 12041  002826  C0C7  F0C3         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 12042  00282A  C0C8  F0C4         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 12043  00282E  C0C9  F0C5         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 12044  002832  0E0C               	movlw	12
 12045  002834                     u19255:
 12046  002834  90D8               	bcf	status,0,c
 12047  002836  0100               	movlb	0	; () banked
 12048  002838  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 12049  00283A  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 12050  00283C  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 12051  00283E  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 12052  002840  2EE8               	decfsz	wreg,f,c
 12053  002842  D7F8               	goto	u19255
 12054  002844  0E00               	movlw	0
 12055  002846  25C2               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 12056  002848  6F60               	movwf	___lldiv@dividend& (0+255),b
 12057  00284A  0E20               	movlw	32
 12058  00284C  21C3               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 12059  00284E  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12060  002850  0E03               	movlw	3
 12061  002852  21C4               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 12062  002854  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12063  002856  0E00               	movlw	0
 12064  002858  21C5               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 12065  00285A  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12066  00285C  0E7D               	movlw	125
 12067  00285E  6F64               	movwf	___lldiv@divisor& (0+255),b
 12068  002860  0E00               	movlw	0
 12069  002862  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12070  002864  0E00               	movlw	0
 12071  002866  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12072  002868  0E00               	movlw	0
 12073  00286A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12074  00286C  ECC4  F03B         	call	___lldiv	;wreg free
 12075  002870  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12076  002874  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12077  002878  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12078  00287C  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12079  002880  0102               	movlb	2	; () banked
 12080  002882  51EA               	movf	(_loRa+234)& (0+255),w,b
 12081  002884  EC62  F043         	call	_SwTimerSetTimeout
 12082                           
 12083                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 12084  002888  0102               	movlb	2	; () banked
 12085  00288A  51EA               	movf	(_loRa+234)& (0+255),w,b
 12086  00288C  EC4B  F039         	call	_SwTimerStart
 12087                           
 12088                           ;lorawan_eu.c: 546: }
 12089                           ;lorawan_eu.c: 547: }
 12090  002890  0012               	return	
 12091  002892                     l1071:
 12092                           
 12093                           ;lorawan_eu.c: 548: else
 12094                           ;lorawan_eu.c: 549: {
 12095                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 12096  002892  EC52  F048         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 12097                           
 12098                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 12099  002896  0101               	movlb	1	; () banked
 12100  002898  5104               	movf	_rxPayload& (0+255),w,b
 12101  00289A  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 12102  00289C  B4D8               	btfsc	status,2,c
 12103  00289E  0012               	return	
 12104                           
 12105                           ; BSR set to: 1
 12106                           ;lorawan_eu.c: 552: {
 12107                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 12108  0028A0  0E00               	movlw	0
 12109  0028A2  0100               	movlb	0	; () banked
 12110  0028A4  6F60               	movwf	RxData@pData& (0+255),b
 12111  0028A6  0E00               	movlw	0
 12112  0028A8  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12113  0028AA  0E00               	movlw	0
 12114  0028AC  6F62               	movwf	RxData@dataLength& (0+255),b
 12115  0028AE  0E01               	movlw	1
 12116  0028B0  6F63               	movwf	RxData@status& (0+255),b
 12117  0028B2  D801               	call	u19278
 12118  0028B4  0012               	return	
 12119  0028B6                     u19278:
 12120  0028B6  0005               	push	
 12121  0028B8  6EFA               	movwf	pclath,c
 12122  0028BA  0101               	movlb	1	; () banked
 12123  0028BC  5104               	movf	_rxPayload& (0+255),w,b
 12124  0028BE  6EFD               	movwf	tosl,c
 12125  0028C0  5105               	movf	(_rxPayload+1)& (0+255),w,b
 12126  0028C2  6EFE               	movwf	tosh,c
 12127  0028C4  6AFF               	clrf	tosu,c
 12128  0028C6  50FA               	movf	pclath,w,c
 12129  0028C8  0012               	return		;indir
 12130  0028CA                     l1057:
 12131                           
 12132                           ;lorawan_eu.c: 560: else
 12133                           ;lorawan_eu.c: 561: {
 12134                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 12135  0028CA  0101               	movlb	1	; () banked
 12136  0028CC  5104               	movf	_rxPayload& (0+255),w,b
 12137  0028CE  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 12138  0028D0  B4D8               	btfsc	status,2,c
 12139  0028D2  0012               	return	
 12140                           
 12141                           ; BSR set to: 1
 12142                           ;lorawan_eu.c: 564: {
 12143                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 12144  0028D4  0E00               	movlw	0
 12145  0028D6  0100               	movlb	0	; () banked
 12146  0028D8  6F60               	movwf	RxData@pData& (0+255),b
 12147  0028DA  0E00               	movlw	0
 12148  0028DC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12149  0028DE  0E00               	movlw	0
 12150  0028E0  6F62               	movwf	RxData@dataLength& (0+255),b
 12151  0028E2  0E02               	movlw	2
 12152  0028E4  6F63               	movwf	RxData@status& (0+255),b
 12153  0028E6  D801               	call	u19298
 12154  0028E8  0012               	return	
 12155  0028EA                     u19298:
 12156  0028EA  0005               	push	
 12157  0028EC  6EFA               	movwf	pclath,c
 12158  0028EE  0101               	movlb	1	; () banked
 12159  0028F0  5104               	movf	_rxPayload& (0+255),w,b
 12160  0028F2  6EFD               	movwf	tosl,c
 12161  0028F4  5105               	movf	(_rxPayload+1)& (0+255),w,b
 12162  0028F6  6EFE               	movwf	tosh,c
 12163  0028F8  6AFF               	clrf	tosu,c
 12164  0028FA  50FA               	movf	pclath,w,c
 12165  0028FC  0012               	return		;indir
 12166  0028FE                     __end_of_LORAWAN_RxTimeout:
 12167                           	opt stack 0
 12168                           tosu	equ	0xFFF
 12169                           tosh	equ	0xFFE
 12170                           tosl	equ	0xFFD
 12171                           pclath	equ	0xFFA
 12172                           tblptru	equ	0xFF8
 12173                           tblptrh	equ	0xFF7
 12174                           tblptrl	equ	0xFF6
 12175                           tablat	equ	0xFF5
 12176                           prodh	equ	0xFF4
 12177                           prodl	equ	0xFF3
 12178                           intcon	equ	0xFF2
 12179                           intcon2	equ	0xFF1
 12180                           intcon3	equ	0xFF0
 12181                           postinc0	equ	0xFEE
 12182                           wreg	equ	0xFE8
 12183                           postinc1	equ	0xFE6
 12184                           postdec1	equ	0xFE5
 12185                           plusw1	equ	0xFE3
 12186                           fsr1h	equ	0xFE2
 12187                           fsr1l	equ	0xFE1
 12188                           indf2	equ	0xFDF
 12189                           postinc2	equ	0xFDE
 12190                           postdec2	equ	0xFDD
 12191                           fsr2h	equ	0xFDA
 12192                           fsr2l	equ	0xFD9
 12193                           status	equ	0xFD8
 12194                           
 12195 ;; *************** function _LORAWAN_RxDone *****************
 12196 ;; Defined at:
 12197 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 12200 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12201 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;  hdr             2  145[BANK0 ] PTR struct .
 12204 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12205 ;;  joinAccept      2  142[BANK0 ] PTR struct .
 12206 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12207 ;;  computedMic     4  138[BANK0 ] unsigned long 
 12208 ;;  extractedMic    4  130[BANK0 ] unsigned long 
 12209 ;;  packet          2  136[BANK0 ] PTR unsigned char 
 12210 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 12211 ;;  frmPayloadLe    1  144[BANK0 ] unsigned char 
 12212 ;;  temp            1  135[BANK0 ] unsigned char 
 12213 ;;  bufferIndex     1  134[BANK0 ] unsigned char 
 12214 ;;  mhdr            1  129[BANK0 ] struct .
 12215 ;;  channelIndex    1  128[BANK0 ] unsigned char 
 12216 ;;  fPort           1  127[BANK0 ] unsigned char 
 12217 ;; Return value:  Size  Location     Type
 12218 ;;                  1    wreg      enum E7426
 12219 ;; Registers used:
 12220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12221 ;; Tracked objects:
 12222 ;;		On entry : 0/0
 12223 ;;		On exit  : 0/0
 12224 ;;		Unchanged: 0/0
 12225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12226 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12227 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12228 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12229 ;;      Totals:         0      25       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12230 ;;Total ram usage:       28 bytes
 12231 ;; Hardware stack levels used:    1
 12232 ;; Hardware stack levels required when called:   15
 12233 ;; This function calls:
 12234 ;;		_AESCmac
 12235 ;;		_AESEncodeLoRa
 12236 ;;		_AssembleEncryptionBlock
 12237 ;;		_CheckFlags
 12238 ;;		_CheckMcastFlags
 12239 ;;		_ComputeMic
 12240 ;;		_ComputeSessionKeys
 12241 ;;		_EncryptFRMPayload
 12242 ;;		_ExtractMic
 12243 ;;		_LORAWAN_EnterContinuousReceive
 12244 ;;		_LORAWAN_Send
 12245 ;;		_MacExecuteCommands
 12246 ;;		_RADIO_GetStatus
 12247 ;;		_RADIO_ReleaseData
 12248 ;;		_RxData
 12249 ;;		_SearchAvailableChannel
 12250 ;;		_SetJoinFailState
 12251 ;;		_SetReceptionNotOkState
 12252 ;;		_StartReTxTimer
 12253 ;;		_SwTimerStop
 12254 ;;		_UpdateCfList
 12255 ;;		_UpdateDLSettings
 12256 ;;		_UpdateJoinSuccessState
 12257 ;;		_UpdateReceiveDelays
 12258 ;;		_UpdateRetransmissionAckTimeoutState
 12259 ;;		_memcpy
 12260 ;; This function is called by:
 12261 ;;		_RADIO_RxDone
 12262 ;;		_RADIO_FSKPayloadReady
 12263 ;; This function uses a non-reentrant model
 12264 ;;
 12265                           
 12266                           	psect	text70
 12267  000086                     __ptext70:
 12268                           	opt stack 0
 12269  000086                     _LORAWAN_RxDone:
 12270                           	opt stack 12
 12271                           
 12272                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 12273                           ;lorawan.c: 1124: Mhdr_t mhdr;
 12274                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 12275                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 12276                           ;lorawan.c: 1127: uint8_t *packet;
 12277                           ;lorawan.c: 1128: uint8_t temp;
 12278                           ;lorawan.c: 1130: RADIO_ReleaseData();
 12279                           
 12280                           ;incstack = 0
 12281  000086  EC6A  F049         	call	_RADIO_ReleaseData	;wreg free
 12282                           
 12283                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 12284  00008A  0102               	movlb	2	; () banked
 12285  00008C  B103               	btfsc	(_loRa+3)& (0+255),0,b
 12286  00008E  EF62  F006         	goto	l1901
 12287                           
 12288                           ; BSR set to: 2
 12289                           ;lorawan.c: 1133: {
 12290                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 12291  000092  C1D9  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12292  000096  C1DA  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12293  00009A  50DF               	movf	indf2,w,c
 12294  00009C  0100               	movlb	0	; () banked
 12295  00009E  6FE1               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 12296                           
 12297                           ; BSR set to: 0
 12298                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 12299  0000A0  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12300  0000A2  32E8               	rrcf	wreg,f,c
 12301  0000A4  0B07               	andlw	7
 12302  0000A6  06E8               	decf	wreg,f,c
 12303  0000A8  A4D8               	btfss	status,2,c
 12304  0000AA  D0D8               	goto	l1902
 12305                           
 12306                           ; BSR set to: 0
 12307  0000AC  0102               	movlb	2	; () banked
 12308  0000AE  511D               	movf	(_loRa+29)& (0+255),w,b
 12309  0000B0  A4D8               	btfss	status,2,c
 12310  0000B2  D0D4               	goto	l1902
 12311                           
 12312                           ; BSR set to: 2
 12313                           ;lorawan.c: 1136: {
 12314                           ;lorawan.c: 1137: temp = bufferLength - 1;
 12315  0000B4  0101               	movlb	1	; () banked
 12316  0000B6  05DB               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12317  0000B8  0100               	movlb	0	; () banked
 12318  0000BA  D028               	goto	L6
 12319  0000BC                     
 12320                           ; BSR set to: 0
 12321                           ;lorawan.c: 1139: {
 12322                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 12323                           
 12324                           ; BSR set to: 0
 12325  0000BC  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 12326  0000BE  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 12327  0000C0  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12328  0000C2  1FDA               	comf	??_LORAWAN_RxDone& (0+255),f,b
 12329  0000C4  1FDB               	comf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 12330  0000C6  4BDA               	infsnz	??_LORAWAN_RxDone& (0+255),f,b
 12331  0000C8  2BDB               	incf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 12332  0000CA  0101               	movlb	1	; () banked
 12333  0000CC  51DB               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12334  0000CE  0100               	movlb	0	; () banked
 12335  0000D0  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12336  0000D2  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12337  0000D4  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12338  0000D6  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12339  0000D8  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12340  0000DA  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12341  0000DC  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12342  0000DE  0101               	movlb	1	; () banked
 12343  0000E0  25D9               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12344  0000E2  0100               	movlb	0	; () banked
 12345  0000E4  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 12346  0000E6  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12347  0000E8  0101               	movlb	1	; () banked
 12348  0000EA  21DA               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12349  0000EC  0100               	movlb	0	; () banked
 12350  0000EE  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 12351  0000F0  0E42               	movlw	low (_loRa+66)
 12352  0000F2  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 12353  0000F4  0E02               	movlw	high (_loRa+66)
 12354  0000F6  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 12355  0000F8  EC64  F044         	call	_AESEncodeLoRa	;wreg free
 12356                           
 12357                           ;lorawan.c: 1142: if (temp > 16)
 12358  0000FC  0E10               	movlw	16
 12359  0000FE  0100               	movlb	0	; () banked
 12360  000100  65E7               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 12361  000102  D003               	goto	l1905
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;lorawan.c: 1143: {
 12365                           ;lorawan.c: 1144: temp -= 16;
 12366  000104  0E10               	movlw	16
 12367  000106  5FE7               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 12368                           
 12369                           ;lorawan.c: 1145: }
 12370  000108  D002               	goto	l1906
 12371  00010A                     l1905:
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;lorawan.c: 1146: else
 12375                           ;lorawan.c: 1147: {
 12376                           ;lorawan.c: 1148: temp = 0;
 12377                           
 12378                           ; BSR set to: 0
 12379  00010A  0E00               	movlw	0
 12380  00010C                     L6:
 12381  00010C  6FE7               	movwf	LORAWAN_RxDone@temp& (0+255),b
 12382  00010E                     l1906:
 12383                           
 12384                           ; BSR set to: 0
 12385                           
 12386                           ; BSR set to: 0
 12387  00010E  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 12388  000110  A4D8               	btfss	status,2,c
 12389  000112  D7D4               	goto	l1904
 12390                           
 12391                           ; BSR set to: 0
 12392                           ;lorawan.c: 1149: }
 12393                           ;lorawan.c: 1150: }
 12394                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 12395                           
 12396                           ; BSR set to: 0
 12397  000114  0E42               	movlw	low (_loRa+66)
 12398  000116  6FC7               	movwf	ComputeMic@key& (0+255),b
 12399  000118  0E02               	movlw	high (_loRa+66)
 12400  00011A  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 12401  00011C  C1D9  F0C9         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 12402  000120  C1DA  F0CA         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 12403  000124  0101               	movlb	1	; () banked
 12404  000126  51DB               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12405  000128  0FFC               	addlw	252
 12406  00012A  0100               	movlb	0	; () banked
 12407  00012C  6FCB               	movwf	ComputeMic@bufferLength& (0+255),b
 12408  00012E  ECA9  F03E         	call	_ComputeMic	;wreg free
 12409  000132  C0C7  F0EA         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 12410  000136  C0C8  F0EB         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 12411  00013A  C0C9  F0EC         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 12412  00013E  C0CA  F0ED         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 12413                           
 12414                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 12415  000142  C1D9  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 12416  000146  C1DA  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 12417  00014A  C1DB  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 12418  00014E  EC84  F040         	call	_ExtractMic	;wreg free
 12419  000152  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 12420  000156  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 12421  00015A  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 12422  00015E  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 12423                           
 12424                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 12425  000162  0100               	movlb	0	; () banked
 12426  000164  51EA               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 12427  000166  19E2               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 12428  000168  E10A               	bnz	u18350
 12429  00016A  51EB               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 12430  00016C  19E3               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 12431  00016E  E107               	bnz	u18350
 12432  000170  51EC               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 12433  000172  19E4               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 12434  000174  E104               	bnz	u18350
 12435  000176  51ED               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 12436  000178  19E5               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 12437  00017A  B4D8               	btfsc	status,2,c
 12438  00017C  D011               	goto	l1908
 12439  00017E                     u18350:
 12440                           
 12441                           ; BSR set to: 0
 12442                           ;lorawan.c: 1156: {
 12443                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 12444  00017E  0102               	movlb	2	; () banked
 12445  000180  5102               	movf	(_loRa+2)& (0+255),w,b
 12446  000182  0B0F               	andlw	15
 12447  000184  0A05               	xorlw	5
 12448  000186  B4D8               	btfsc	status,2,c
 12449  000188  D008               	goto	u18380
 12450                           
 12451                           ; BSR set to: 2
 12452  00018A  5102               	movf	(_loRa+2)& (0+255),w,b
 12453  00018C  0B0F               	andlw	15
 12454  00018E  0A03               	xorlw	3
 12455  000190  A4D8               	btfss	status,2,c
 12456  000192  0012               	return	
 12457                           
 12458                           ; BSR set to: 2
 12459  000194  51F1               	movf	(_loRa+241)& (0+255),w,b
 12460  000196  B4D8               	btfsc	status,2,c
 12461  000198  0012               	return	
 12462  00019A                     u18380:
 12463                           
 12464                           ; BSR set to: 2
 12465                           ;lorawan.c: 1158: {
 12466                           ;lorawan.c: 1159: SetJoinFailState();
 12467                           
 12468                           ; BSR set to: 2
 12469  00019A  ECFD  F044         	call	_SetJoinFailState	;wreg free
 12470                           
 12471                           ;lorawan.c: 1160: }
 12472                           ;lorawan.c: 1162: return INVALID_PARAMETER;
 12473                           ;	Return value of _LORAWAN_RxDone is never used
 12474  00019E  0012               	return	
 12475  0001A0                     l1908:
 12476                           
 12477                           ;lorawan.c: 1163: }
 12478                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 12479  0001A0  0102               	movlb	2	; () banked
 12480  0001A2  5102               	movf	(_loRa+2)& (0+255),w,b
 12481  0001A4  0B0F               	andlw	15
 12482  0001A6  0A03               	xorlw	3
 12483  0001A8  A4D8               	btfss	status,2,c
 12484  0001AA  D003               	goto	l1913
 12485                           
 12486                           ; BSR set to: 2
 12487                           ;lorawan.c: 1167: {
 12488                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 12489  0001AC  51E3               	movf	(_loRa+227)& (0+255),w,b
 12490  0001AE  ECB8  F046         	call	_SwTimerStop
 12491  0001B2                     l1913:
 12492                           
 12493                           ;lorawan.c: 1169: }
 12494                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 12495                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 12496  0001B2  C1D9  F0EE         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 12497  0001B6  C1DA  F0EF         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 12498                           
 12499                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 12500  0001BA  0100               	movlb	0	; () banked
 12501  0001BC  EE20 F007          	lfsr	2,7
 12502  0001C0  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12503  0001C2  26D9               	addwf	fsr2l,f,c
 12504  0001C4  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12505  0001C6  22DA               	addwfc	fsr2h,f,c
 12506  0001C8  CFDE F21E          	movff	postinc2,_loRa+30
 12507  0001CC  CFDE F21F          	movff	postinc2,_loRa+31
 12508  0001D0  CFDE F220          	movff	postinc2,_loRa+32
 12509  0001D4  CFDE F221          	movff	postinc2,_loRa+33
 12510                           
 12511                           ; BSR set to: 0
 12512                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 12513  0001D8  EE20 F00C          	lfsr	2,12
 12514  0001DC  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12515  0001DE  26D9               	addwf	fsr2l,f,c
 12516  0001E0  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12517  0001E2  22DA               	addwfc	fsr2h,f,c
 12518  0001E4  50DF               	movf	indf2,w,c
 12519  0001E6  0B0F               	andlw	15
 12520  0001E8  ECA6  F043         	call	_UpdateReceiveDelays
 12521                           
 12522                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 12523  0001EC  0100               	movlb	0	; () banked
 12524  0001EE  EE20 F00B          	lfsr	2,11
 12525  0001F2  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12526  0001F4  26D9               	addwf	fsr2l,f,c
 12527  0001F6  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12528  0001F8  22DA               	addwfc	fsr2h,f,c
 12529  0001FA  38DF               	swapf	223,w,c
 12530  0001FC  0B07               	andlw	7
 12531  0001FE  6F60               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12532  000200  EE20 F00B          	lfsr	2,11
 12533  000204  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12534  000206  26D9               	addwf	fsr2l,f,c
 12535  000208  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12536  00020A  22DA               	addwfc	fsr2h,f,c
 12537  00020C  50DF               	movf	223,w,c
 12538  00020E  0B0F               	andlw	15
 12539  000210  ECD4  F047         	call	_UpdateDLSettings
 12540                           
 12541                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 12542  000214  C0EE  F0A6         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 12543  000218  C0EF  F0A7         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 12544  00021C  0101               	movlb	1	; () banked
 12545  00021E  51DB               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12546  000220  EC8F  F021         	call	_UpdateCfList
 12547                           
 12548                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 12549  000224  C0EE  F091         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 12550  000228  C0EF  F092         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 12551  00022C  EC81  F03B         	call	_ComputeSessionKeys	;wreg free
 12552                           
 12553                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 12554  000230  0E00               	movlw	0
 12555  000232  6EE6               	movwf	postinc1,c
 12556  000234  EC3A  F02C         	call	_UpdateJoinSuccessState	;wreg free
 12557                           
 12558                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 12559  000238  0E00               	movlw	0
 12560  00023A  0102               	movlb	2	; () banked
 12561  00023C  6F06               	movwf	(_loRa+6)& (0+255),b
 12562  00023E  0E00               	movlw	0
 12563  000240  6F07               	movwf	(_loRa+7)& (0+255),b
 12564  000242  0E00               	movlw	0
 12565  000244  6F08               	movwf	(_loRa+8)& (0+255),b
 12566  000246  0E00               	movlw	0
 12567  000248  6F09               	movwf	(_loRa+9)& (0+255),b
 12568                           
 12569                           ; BSR set to: 2
 12570                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 12571  00024A  0E00               	movlw	0
 12572  00024C  6F0A               	movwf	(_loRa+10)& (0+255),b
 12573  00024E  0E00               	movlw	0
 12574  000250  6F0B               	movwf	(_loRa+11)& (0+255),b
 12575  000252  0E00               	movlw	0
 12576  000254  6F0C               	movwf	(_loRa+12)& (0+255),b
 12577  000256  0E00               	movlw	0
 12578  000258  6F0D               	movwf	(_loRa+13)& (0+255),b
 12579                           
 12580                           ; BSR set to: 2
 12581                           ;lorawan.c: 1190: }
 12582                           
 12583                           ; BSR set to: 2
 12584                           ;lorawan.c: 1189: return OK;
 12585                           ;	Return value of _LORAWAN_RxDone is never used
 12586  00025A  0012               	return	
 12587  00025C                     l1902:
 12588                           
 12589                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 12590                           
 12591                           ; BSR set to: 2
 12592  00025C  0100               	movlb	0	; () banked
 12593  00025E  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12594  000260  32E8               	rrcf	wreg,f,c
 12595  000262  0B07               	andlw	7
 12596  000264  0A03               	xorlw	3
 12597  000266  B4D8               	btfsc	status,2,c
 12598  000268  D007               	goto	u18410
 12599                           
 12600                           ; BSR set to: 0
 12601  00026A  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12602  00026C  32E8               	rrcf	wreg,f,c
 12603  00026E  0B07               	andlw	7
 12604  000270  0A05               	xorlw	5
 12605  000272  A4D8               	btfss	status,2,c
 12606  000274  EF5F  F006         	goto	l1915
 12607  000278                     u18410:
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;lorawan.c: 1192: {
 12611                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 12612                           
 12613                           ; BSR set to: 0
 12614  000278  0E00               	movlw	0
 12615  00027A  0102               	movlb	2	; () banked
 12616  00027C  6FA7               	movwf	(_loRa+167)& (0+255),b
 12617                           
 12618                           ; BSR set to: 2
 12619                           ;lorawan.c: 1195: Hdr_t *hdr;
 12620                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 12621  00027E  C1D9  F0F1         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 12622  000282  C1DA  F0F2         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 12623                           
 12624                           ; BSR set to: 2
 12625                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 12626  000286  0E02               	movlw	2
 12627  000288  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12628  00028A  A4D8               	btfss	status,2,c
 12629  00028C  D210               	goto	l1918
 12630                           
 12631                           ; BSR set to: 2
 12632  00028E  0100               	movlb	0	; () banked
 12633  000290  EE20 F001          	lfsr	2,1
 12634  000294  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12635  000296  26D9               	addwf	fsr2l,f,c
 12636  000298  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12637  00029A  22DA               	addwfc	fsr2h,f,c
 12638  00029C  0102               	movlb	2	; () banked
 12639  00029E  5162               	movf	(_loRa+98)& (0+255),w,b
 12640  0002A0  18DE               	xorwf	postinc2,w,c
 12641  0002A2  E109               	bnz	u18431
 12642  0002A4  5163               	movf	(_loRa+99)& (0+255),w,b
 12643  0002A6  18DE               	xorwf	postinc2,w,c
 12644  0002A8  E106               	bnz	u18431
 12645  0002AA  5164               	movf	(_loRa+100)& (0+255),w,b
 12646  0002AC  18DE               	xorwf	postinc2,w,c
 12647  0002AE  E103               	bnz	u18431
 12648  0002B0  5165               	movf	(_loRa+101)& (0+255),w,b
 12649  0002B2  18DE               	xorwf	postinc2,w,c
 12650  0002B4  A4D8               	btfss	status,2,c
 12651  0002B6                     u18431:
 12652  0002B6  D1FB               	goto	l1918
 12653                           
 12654                           ; BSR set to: 2
 12655  0002B8  A504               	btfss	(_loRa+4)& (0+255),2,b
 12656  0002BA  D1F9               	goto	l1918
 12657                           
 12658                           ; BSR set to: 2
 12659                           ;lorawan.c: 1200: {
 12660                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 12661  0002BC  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 12662  0002C0  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 12663  0002C4  EC06  F03C         	call	_CheckMcastFlags	;wreg free
 12664  0002C8  0900               	iorlw	0
 12665  0002CA  A4D8               	btfss	status,2,c
 12666  0002CC  D008               	goto	l1919
 12667                           
 12668                           ;lorawan.c: 1203: {
 12669                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12670  0002CE  0102               	movlb	2	; () banked
 12671  0002D0  5102               	movf	(_loRa+2)& (0+255),w,b
 12672  0002D2  0BF0               	andlw	-16
 12673  0002D4  0909               	iorlw	9
 12674  0002D6  6F02               	movwf	(_loRa+2)& (0+255),b
 12675                           
 12676                           ; BSR set to: 2
 12677                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 12678  0002D8  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12679                           
 12680                           ;lorawan.c: 1206: return MCAST_MSG_ERROR;
 12681                           ;	Return value of _LORAWAN_RxDone is never used
 12682  0002DC  0012               	return	
 12683  0002DE                     l1919:
 12684                           
 12685                           ;lorawan.c: 1207: }
 12686                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 12687  0002DE  0100               	movlb	0	; () banked
 12688  0002E0  EE20 F006          	lfsr	2,6
 12689  0002E4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12690  0002E6  26D9               	addwf	fsr2l,f,c
 12691  0002E8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12692  0002EA  22DA               	addwfc	fsr2h,f,c
 12693  0002EC  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 12694  0002F0  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 12695  0002F4  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 12696  0002F8  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 12697  0002FC  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 12698  0002FE  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 12699  000300  0101               	movlb	1	; () banked
 12700  000302  51DB               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12701  000304  0FFC               	addlw	252
 12702  000306  0100               	movlb	0	; () banked
 12703  000308  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 12704  00030A  0E49               	movlw	73
 12705  00030C  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 12706  00030E  0E01               	movlw	1
 12707  000310  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 12708  000312  0E01               	movlw	1
 12709  000314  EC1B  F032         	call	_AssembleEncryptionBlock
 12710                           
 12711                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 12712  000318  0EEF               	movlw	low _radioBuffer
 12713  00031A  0100               	movlb	0	; () banked
 12714  00031C  6F60               	movwf	memcpy@d1& (0+255),b
 12715  00031E  0E05               	movlw	high _radioBuffer
 12716  000320  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12717  000322  0E57               	movlw	low _aesBuffer
 12718  000324  6F62               	movwf	memcpy@s1& (0+255),b
 12719  000326  0E01               	movlw	high _aesBuffer
 12720  000328  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12721  00032A  0E00               	movlw	0
 12722  00032C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12723  00032E  0E10               	movlw	16
 12724  000330  6F64               	movwf	memcpy@n& (0+255),b
 12725  000332  EC6C  F03F         	call	_memcpy	;wreg free
 12726                           
 12727                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 12728  000336  0EFF               	movlw	low (_radioBuffer+16)
 12729  000338  0100               	movlb	0	; () banked
 12730  00033A  6F60               	movwf	memcpy@d1& (0+255),b
 12731  00033C  0E05               	movlw	high (_radioBuffer+16)
 12732  00033E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12733  000340  C1D9  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 12734  000344  C1DA  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 12735  000348  0EFC               	movlw	252
 12736  00034A  0101               	movlb	1	; () banked
 12737  00034C  25DB               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12738  00034E  0100               	movlb	0	; () banked
 12739  000350  6F64               	movwf	memcpy@n& (0+255),b
 12740  000352  6B65               	clrf	(memcpy@n+1)& (0+255),b
 12741  000354  0EFF               	movlw	255
 12742  000356  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 12743  000358  EC6C  F03F         	call	_memcpy	;wreg free
 12744                           
 12745                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 12746  00035C  0E66               	movlw	low (_loRa+102)
 12747  00035E  0100               	movlb	0	; () banked
 12748  000360  6FB9               	movwf	AESCmac@key& (0+255),b
 12749  000362  0E02               	movlw	high (_loRa+102)
 12750  000364  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 12751  000366  0E57               	movlw	low _aesBuffer
 12752  000368  6FBB               	movwf	AESCmac@output& (0+255),b
 12753  00036A  0E01               	movlw	high _aesBuffer
 12754  00036C  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 12755  00036E  0EEF               	movlw	low _radioBuffer
 12756  000370  6FBD               	movwf	AESCmac@input& (0+255),b
 12757  000372  0E05               	movlw	high _radioBuffer
 12758  000374  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 12759  000376  0101               	movlb	1	; () banked
 12760  000378  51DB               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12761  00037A  0F0C               	addlw	12
 12762  00037C  0100               	movlb	0	; () banked
 12763  00037E  6FBF               	movwf	AESCmac@size& (0+255),b
 12764  000380  ECF8  F010         	call	_AESCmac	;wreg free
 12765                           
 12766                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 12767  000384  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 12768  000386  0100               	movlb	0	; () banked
 12769  000388  6F60               	movwf	memcpy@d1& (0+255),b
 12770  00038A  0E00               	movlw	high LORAWAN_RxDone@computedMic
 12771  00038C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12772  00038E  0E57               	movlw	low _aesBuffer
 12773  000390  6F62               	movwf	memcpy@s1& (0+255),b
 12774  000392  0E01               	movlw	high _aesBuffer
 12775  000394  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12776  000396  0E00               	movlw	0
 12777  000398  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12778  00039A  0E04               	movlw	4
 12779  00039C  6F64               	movwf	memcpy@n& (0+255),b
 12780  00039E  EC6C  F03F         	call	_memcpy	;wreg free
 12781                           
 12782                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 12783  0003A2  C1D9  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 12784  0003A6  C1DA  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 12785  0003AA  C1DB  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 12786  0003AE  EC84  F040         	call	_ExtractMic	;wreg free
 12787  0003B2  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 12788  0003B6  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 12789  0003BA  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 12790  0003BE  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 12791                           
 12792                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 12793  0003C2  0100               	movlb	0	; () banked
 12794  0003C4  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 12795  0003C6  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 12796  0003C8  E10A               	bnz	u18460
 12797  0003CA  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 12798  0003CC  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 12799  0003CE  E107               	bnz	u18460
 12800  0003D0  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 12801  0003D2  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 12802  0003D4  E104               	bnz	u18460
 12803  0003D6  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 12804  0003D8  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 12805  0003DA  B4D8               	btfsc	status,2,c
 12806  0003DC  D008               	goto	l1920
 12807  0003DE                     u18460:
 12808                           
 12809                           ; BSR set to: 0
 12810                           ;lorawan.c: 1218: {
 12811                           ;lorawan.c: 1219: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12812  0003DE  0102               	movlb	2	; () banked
 12813  0003E0  5102               	movf	(_loRa+2)& (0+255),w,b
 12814  0003E2  0BF0               	andlw	-16
 12815  0003E4  0909               	iorlw	9
 12816  0003E6  6F02               	movwf	(_loRa+2)& (0+255),b
 12817                           
 12818                           ; BSR set to: 2
 12819                           ;lorawan.c: 1220: LORAWAN_EnterContinuousReceive();
 12820  0003E8  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12821                           
 12822                           ;lorawan.c: 1221: return MCAST_MSG_ERROR;
 12823                           ;	Return value of _LORAWAN_RxDone is never used
 12824  0003EC  0012               	return	
 12825  0003EE                     l1920:
 12826                           
 12827                           ;lorawan.c: 1222: }
 12828                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 12829  0003EE  0100               	movlb	0	; () banked
 12830  0003F0  EE20 F006          	lfsr	2,6
 12831  0003F4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12832  0003F6  26D9               	addwf	fsr2l,f,c
 12833  0003F8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12834  0003FA  22DA               	addwfc	fsr2h,f,c
 12835  0003FC  0102               	movlb	2	; () banked
 12836  0003FE  510E               	movf	(_loRa+14)& (0+255),w,b
 12837  000400  5CDE               	subwf	postinc2,w,c
 12838  000402  510F               	movf	(_loRa+15)& (0+255),w,b
 12839  000404  58DE               	subwfb	postinc2,w,c
 12840  000406  A0D8               	btfss	status,0,c
 12841  000408  D050               	goto	l1921
 12842                           
 12843                           ; BSR set to: 2
 12844                           ;lorawan.c: 1225: {
 12845                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 12846  00040A  0100               	movlb	0	; () banked
 12847  00040C  EE20 F006          	lfsr	2,6
 12848  000410  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12849  000412  26D9               	addwf	fsr2l,f,c
 12850  000414  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12851  000416  22DA               	addwfc	fsr2h,f,c
 12852  000418  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 12853  00041C  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 12854  000420  EE22  F00E         	lfsr	2,_loRa+14
 12855  000424  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 12856  000428  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 12857  00042C  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12858  00042E  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12859  000430  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12860  000432  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12861  000434  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12862  000436  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12863  000438  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12864  00043A  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12865  00043C  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12866  00043E  0102               	movlb	2	; () banked
 12867  000440  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 12868  000442  0100               	movlb	0	; () banked
 12869  000444  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12870  000446  0102               	movlb	2	; () banked
 12871  000448  599F               	subwfb	(_loRa+159)& (0+255),w,b
 12872  00044A  B0D8               	btfsc	status,0,c
 12873  00044C  D022               	goto	l1922
 12874                           
 12875                           ; BSR set to: 2
 12876                           ;lorawan.c: 1227: {
 12877                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 12878  00044E  0101               	movlb	1	; () banked
 12879  000450  5104               	movf	_rxPayload& (0+255),w,b
 12880  000452  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 12881  000454  B4D8               	btfsc	status,2,c
 12882  000456  D015               	goto	u18509
 12883                           
 12884                           ; BSR set to: 1
 12885                           ;lorawan.c: 1229: {
 12886                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 12887  000458  0E00               	movlw	0
 12888  00045A  0100               	movlb	0	; () banked
 12889  00045C  6F60               	movwf	RxData@pData& (0+255),b
 12890  00045E  0E00               	movlw	0
 12891  000460  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12892  000462  0E00               	movlw	0
 12893  000464  6F62               	movwf	RxData@dataLength& (0+255),b
 12894  000466  0E05               	movlw	5
 12895  000468  6F63               	movwf	RxData@status& (0+255),b
 12896  00046A  D801               	call	u18508
 12897  00046C  D00A               	goto	u18509
 12898  00046E                     u18508:
 12899  00046E  0005               	push	
 12900  000470  6EFA               	movwf	pclath,c
 12901  000472  0101               	movlb	1	; () banked
 12902  000474  5104               	movf	_rxPayload& (0+255),w,b
 12903  000476  6EFD               	movwf	tosl,c
 12904  000478  5105               	movf	(_rxPayload+1)& (0+255),w,b
 12905  00047A  6EFE               	movwf	tosh,c
 12906  00047C  6AFF               	clrf	tosu,c
 12907  00047E  50FA               	movf	pclath,w,c
 12908  000480  0012               	return		;indir
 12909  000482                     u18509:
 12910                           
 12911                           ;lorawan.c: 1231: }
 12912                           ;lorawan.c: 1233: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12913  000482  0102               	movlb	2	; () banked
 12914  000484  5102               	movf	(_loRa+2)& (0+255),w,b
 12915  000486  0BF0               	andlw	-16
 12916  000488  0909               	iorlw	9
 12917  00048A  6F02               	movwf	(_loRa+2)& (0+255),b
 12918                           
 12919                           ; BSR set to: 2
 12920                           ;lorawan.c: 1234: LORAWAN_EnterContinuousReceive();
 12921  00048C  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12922                           
 12923                           ;lorawan.c: 1235: return MCAST_MSG_ERROR;
 12924                           ;	Return value of _LORAWAN_RxDone is never used
 12925  000490  0012               	return	
 12926  000492                     l1922:
 12927                           
 12928                           ;lorawan.c: 1237: else
 12929                           ;lorawan.c: 1238: {
 12930                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 12931  000492  0100               	movlb	0	; () banked
 12932  000494  EE20 F006          	lfsr	2,6
 12933  000498  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12934  00049A  26D9               	addwf	fsr2l,f,c
 12935  00049C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12936  00049E  22DA               	addwfc	fsr2h,f,c
 12937  0004A0  CFDE F20E          	movff	postinc2,_loRa+14
 12938  0004A4  CFDD F20F          	movff	postdec2,_loRa+15
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;lorawan.c: 1240: }
 12942                           ;lorawan.c: 1241: }
 12943  0004A8  D03A               	goto	l1927
 12944  0004AA                     l1921:
 12945                           
 12946                           ;lorawan.c: 1242: else
 12947                           ;lorawan.c: 1243: {
 12948                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 12949                           
 12950                           ; BSR set to: 0
 12951  0004AA  0100               	movlb	0	; () banked
 12952  0004AC  EE20 F006          	lfsr	2,6
 12953  0004B0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12954  0004B2  26D9               	addwf	fsr2l,f,c
 12955  0004B4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12956  0004B6  22DA               	addwfc	fsr2h,f,c
 12957  0004B8  50DE               	movf	postinc2,w,c
 12958  0004BA  10DE               	iorwf	postinc2,w,c
 12959  0004BC  A4D8               	btfss	status,2,c
 12960  0004BE  D00D               	goto	l1926
 12961                           
 12962                           ; BSR set to: 0
 12963  0004C0  0102               	movlb	2	; () banked
 12964  0004C2  290E               	incf	(_loRa+14)& (0+255),w,b
 12965  0004C4  E10A               	bnz	l15815
 12966  0004C6  290F               	incf	(_loRa+15)& (0+255),w,b
 12967  0004C8  A4D8               	btfss	status,2,c
 12968  0004CA  D007               	goto	l1926
 12969                           
 12970                           ; BSR set to: 2
 12971                           ;lorawan.c: 1245: {
 12972                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 12973  0004CC  0E00               	movlw	0
 12974  0004CE  6F0F               	movwf	(_loRa+15)& (0+255),b
 12975  0004D0  0E00               	movlw	0
 12976  0004D2  6F0E               	movwf	(_loRa+14)& (0+255),b
 12977                           
 12978                           ; BSR set to: 2
 12979                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 12980  0004D4  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 12981  0004D6  2B11               	incf	(_loRa+17)& (0+255),f,b
 12982                           
 12983                           ;lorawan.c: 1248: }
 12984  0004D8  D022               	goto	l1927
 12985  0004DA                     l1926:
 12986  0004DA                     l15815:
 12987                           
 12988                           ;lorawan.c: 1249: else
 12989                           ;lorawan.c: 1250: {
 12990                           ;lorawan.c: 1251: if (rxPayload.RxAppData != (0))
 12991  0004DA  0101               	movlb	1	; () banked
 12992  0004DC  5104               	movf	_rxPayload& (0+255),w,b
 12993  0004DE  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 12994  0004E0  B4D8               	btfsc	status,2,c
 12995  0004E2  D015               	goto	u18549
 12996                           
 12997                           ; BSR set to: 1
 12998                           ;lorawan.c: 1252: {
 12999                           ;lorawan.c: 1253: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 13000  0004E4  0E00               	movlw	0
 13001  0004E6  0100               	movlb	0	; () banked
 13002  0004E8  6F60               	movwf	RxData@pData& (0+255),b
 13003  0004EA  0E00               	movlw	0
 13004  0004EC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 13005  0004EE  0E00               	movlw	0
 13006  0004F0  6F62               	movwf	RxData@dataLength& (0+255),b
 13007  0004F2  0E05               	movlw	5
 13008  0004F4  6F63               	movwf	RxData@status& (0+255),b
 13009  0004F6  D801               	call	u18548
 13010  0004F8  D00A               	goto	u18549
 13011  0004FA                     u18548:
 13012  0004FA  0005               	push	
 13013  0004FC  6EFA               	movwf	pclath,c
 13014  0004FE  0101               	movlb	1	; () banked
 13015  000500  5104               	movf	_rxPayload& (0+255),w,b
 13016  000502  6EFD               	movwf	tosl,c
 13017  000504  5105               	movf	(_rxPayload+1)& (0+255),w,b
 13018  000506  6EFE               	movwf	tosh,c
 13019  000508  6AFF               	clrf	tosu,c
 13020  00050A  50FA               	movf	pclath,w,c
 13021  00050C  0012               	return		;indir
 13022  00050E                     u18549:
 13023                           
 13024                           ;lorawan.c: 1254: }
 13025                           ;lorawan.c: 1256: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13026  00050E  0102               	movlb	2	; () banked
 13027  000510  5102               	movf	(_loRa+2)& (0+255),w,b
 13028  000512  0BF0               	andlw	-16
 13029  000514  0909               	iorlw	9
 13030  000516  6F02               	movwf	(_loRa+2)& (0+255),b
 13031                           
 13032                           ; BSR set to: 2
 13033                           ;lorawan.c: 1257: LORAWAN_EnterContinuousReceive();
 13034  000518  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13035                           
 13036                           ;lorawan.c: 1258: return MCAST_MSG_ERROR;
 13037                           ;	Return value of _LORAWAN_RxDone is never used
 13038  00051C  0012               	return	
 13039  00051E                     l1927:
 13040                           
 13041                           ;lorawan.c: 1259: }
 13042                           ;lorawan.c: 1260: }
 13043                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 13044  00051E  0102               	movlb	2	; () banked
 13045  000520  290E               	incf	(_loRa+14)& (0+255),w,b
 13046  000522  E129               	bnz	l15837
 13047  000524  290F               	incf	(_loRa+15)& (0+255),w,b
 13048  000526  E127               	bnz	l15837
 13049  000528  2910               	incf	(_loRa+16)& (0+255),w,b
 13050  00052A  E125               	bnz	l15837
 13051  00052C  2911               	incf	(_loRa+17)& (0+255),w,b
 13052  00052E  A4D8               	btfss	status,2,c
 13053  000530  D022               	goto	l1929
 13054                           
 13055                           ; BSR set to: 2
 13056                           ;lorawan.c: 1263: {
 13057                           ;lorawan.c: 1264: if (rxPayload.RxAppData != (0))
 13058  000532  0101               	movlb	1	; () banked
 13059  000534  5104               	movf	_rxPayload& (0+255),w,b
 13060  000536  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 13061  000538  B4D8               	btfsc	status,2,c
 13062  00053A  D015               	goto	u18579
 13063                           
 13064                           ; BSR set to: 1
 13065                           ;lorawan.c: 1265: {
 13066                           ;lorawan.c: 1266: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 13067  00053C  0E00               	movlw	0
 13068  00053E  0100               	movlb	0	; () banked
 13069  000540  6F60               	movwf	RxData@pData& (0+255),b
 13070  000542  0E00               	movlw	0
 13071  000544  6F61               	movwf	(RxData@pData+1)& (0+255),b
 13072  000546  0E00               	movlw	0
 13073  000548  6F62               	movwf	RxData@dataLength& (0+255),b
 13074  00054A  0E05               	movlw	5
 13075  00054C  6F63               	movwf	RxData@status& (0+255),b
 13076  00054E  D801               	call	u18578
 13077  000550  D00A               	goto	u18579
 13078  000552                     u18578:
 13079  000552  0005               	push	
 13080  000554  6EFA               	movwf	pclath,c
 13081  000556  0101               	movlb	1	; () banked
 13082  000558  5104               	movf	_rxPayload& (0+255),w,b
 13083  00055A  6EFD               	movwf	tosl,c
 13084  00055C  5105               	movf	(_rxPayload+1)& (0+255),w,b
 13085  00055E  6EFE               	movwf	tosh,c
 13086  000560  6AFF               	clrf	tosu,c
 13087  000562  50FA               	movf	pclath,w,c
 13088  000564  0012               	return		;indir
 13089  000566                     u18579:
 13090                           
 13091                           ;lorawan.c: 1267: }
 13092                           ;lorawan.c: 1269: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13093  000566  0102               	movlb	2	; () banked
 13094  000568  5102               	movf	(_loRa+2)& (0+255),w,b
 13095  00056A  0BF0               	andlw	-16
 13096  00056C  0909               	iorlw	9
 13097  00056E  6F02               	movwf	(_loRa+2)& (0+255),b
 13098                           
 13099                           ; BSR set to: 2
 13100                           ;lorawan.c: 1270: LORAWAN_EnterContinuousReceive();
 13101  000570  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13102                           
 13103                           ;lorawan.c: 1271: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 13104                           ;	Return value of _LORAWAN_RxDone is never used
 13105  000574  0012               	return	
 13106  000576                     l1929:
 13107  000576                     l15837:
 13108                           
 13109                           ;lorawan.c: 1272: }
 13110                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 13111  000576  0102               	movlb	2	; () banked
 13112  000578  5102               	movf	(_loRa+2)& (0+255),w,b
 13113  00057A  0B0F               	andlw	15
 13114  00057C  0A08               	xorlw	8
 13115  00057E  A4D8               	btfss	status,2,c
 13116  000580  D008               	goto	l1931
 13117                           
 13118                           ; BSR set to: 2
 13119                           ;lorawan.c: 1275: {
 13120                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 13121  000582  51E4               	movf	(_loRa+228)& (0+255),w,b
 13122  000584  ECB8  F046         	call	_SwTimerStop
 13123                           
 13124                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 13125  000588  0102               	movlb	2	; () banked
 13126  00058A  51E5               	movf	(_loRa+229)& (0+255),w,b
 13127  00058C  ECB8  F046         	call	_SwTimerStop
 13128                           
 13129                           ;lorawan.c: 1278: }
 13130  000590  D009               	goto	l1933
 13131  000592                     l1931:
 13132                           
 13133                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 13134  000592  0102               	movlb	2	; () banked
 13135  000594  5102               	movf	(_loRa+2)& (0+255),w,b
 13136  000596  0B0F               	andlw	15
 13137  000598  0A03               	xorlw	3
 13138  00059A  A4D8               	btfss	status,2,c
 13139  00059C  D003               	goto	l1933
 13140                           
 13141                           ; BSR set to: 2
 13142                           ;lorawan.c: 1280: {
 13143                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 13144  00059E  51E5               	movf	(_loRa+229)& (0+255),w,b
 13145  0005A0  ECB8  F046         	call	_SwTimerStop
 13146  0005A4                     l1933:
 13147                           
 13148                           ;lorawan.c: 1282: }
 13149                           ;lorawan.c: 1284: buffer = buffer + 8;
 13150  0005A4  0E08               	movlw	8
 13151  0005A6  0101               	movlb	1	; () banked
 13152  0005A8  25D9               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13153  0005AA  6FD9               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 13154  0005AC  0E00               	movlw	0
 13155  0005AE  21DA               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 13156  0005B0  6FDA               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 13157                           
 13158                           ; BSR set to: 1
 13159                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 13160  0005B2  51DB               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13161  0005B4  0100               	movlb	0	; () banked
 13162  0005B6  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 13163  0005B8  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 13164  0005BA  EE20 F005          	lfsr	2,5
 13165  0005BE  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13166  0005C0  26D9               	addwf	fsr2l,f,c
 13167  0005C2  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13168  0005C4  22DA               	addwfc	fsr2h,f,c
 13169  0005C6  50DF               	movf	223,w,c
 13170  0005C8  0B0F               	andlw	15
 13171  0005CA  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 13172  0005CC  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 13173  0005CE  0E0C               	movlw	12
 13174  0005D0  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13175  0005D2  0E00               	movlw	0
 13176  0005D4  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13177  0005D6  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13178  0005D8  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 13179  0005DA  E104               	bnz	u18600
 13180  0005DC  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13181  0005DE  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13182  0005E0  B4D8               	btfsc	status,2,c
 13183  0005E2  D037               	goto	l1934
 13184  0005E4                     u18600:
 13185                           
 13186                           ; BSR set to: 0
 13187                           ;lorawan.c: 1287: {
 13188                           ;lorawan.c: 1288: fPort = *(buffer++);
 13189  0005E4  C1D9  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 13190  0005E8  C1DA  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 13191  0005EC  50DF               	movf	indf2,w,c
 13192  0005EE  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 13193                           
 13194                           ; BSR set to: 0
 13195  0005F0  0101               	movlb	1	; () banked
 13196  0005F2  4BD9               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 13197  0005F4  2BDA               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 13198                           
 13199                           ; BSR set to: 1
 13200                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 13201  0005F6  51DB               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13202  0005F8  0FF4               	addlw	244
 13203  0005FA  0100               	movlb	0	; () banked
 13204  0005FC  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 13208  0005FE  0E19               	movlw	25
 13209  000600  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 13213  000602  C1D9  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13214  000606  C1DA  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13215  00060A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13216  00060C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13217  00060E  0E01               	movlw	1
 13218  000610  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 13219  000612  C20E  F095         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 13220  000616  C20F  F096         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 13221  00061A  C210  F097         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 13222  00061E  C211  F098         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 13223  000622  0E76               	movlw	low (_loRa+118)
 13224  000624  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 13225  000626  0E02               	movlw	high (_loRa+118)
 13226  000628  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13227  00062A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13228  00062E  0EEF               	movlw	low _radioBuffer
 13229  000630  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13230  000632  0E05               	movlw	high _radioBuffer
 13231  000634  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13232  000636  0E01               	movlw	1
 13233  000638  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13234  00063A  ECE6  F025         	call	_EncryptFRMPayload	;wreg free
 13235                           
 13236                           ;lorawan.c: 1294: packet = buffer - 1;
 13237  00063E  0EFF               	movlw	255
 13238  000640  0101               	movlb	1	; () banked
 13239  000642  25D9               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13240  000644  0100               	movlb	0	; () banked
 13241  000646  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13242  000648  0EFF               	movlw	255
 13243  00064A  0101               	movlb	1	; () banked
 13244  00064C  21DA               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 13245  00064E  0100               	movlb	0	; () banked
 13246  000650  D005               	goto	L7
 13247  000652                     l1934:
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;lorawan.c: 1296: else
 13251                           ;lorawan.c: 1297: {
 13252                           ;lorawan.c: 1298: frmPayloadLength = 0;
 13253                           
 13254                           ; BSR set to: 0
 13255  000652  0E00               	movlw	0
 13256  000654  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;lorawan.c: 1299: packet = (0);
 13260  000656  0E00               	movlw	0
 13261  000658  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13262  00065A  0E00               	movlw	0
 13263  00065C                     L7:
 13264  00065C  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 13265                           
 13266                           ; BSR set to: 0
 13267                           ;lorawan.c: 1300: }
 13268                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 13269                           
 13270                           ; BSR set to: 0
 13271  00065E  0102               	movlb	2	; () banked
 13272  000660  8303               	bsf	(_loRa+3)& (0+255),1,b
 13273                           
 13274                           ; BSR set to: 2
 13275                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 13276  000662  9102               	bcf	(_loRa+2)& (0+255),0,b
 13277  000664  9302               	bcf	(_loRa+2)& (0+255),1,b
 13278  000666  9502               	bcf	(_loRa+2)& (0+255),2,b
 13279  000668  9702               	bcf	(_loRa+2)& (0+255),3,b
 13280                           
 13281                           ; BSR set to: 2
 13282                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 13283  00066A  0101               	movlb	1	; () banked
 13284  00066C  5104               	movf	_rxPayload& (0+255),w,b
 13285  00066E  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 13286  000670  B4D8               	btfsc	status,2,c
 13287  000672  D015               	goto	u18629
 13288                           
 13289                           ; BSR set to: 1
 13290                           ;lorawan.c: 1306: {
 13291                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 13292  000674  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 13293  000678  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 13294  00067C  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 13295  000680  0E01               	movlw	1
 13296  000682  0100               	movlb	0	; () banked
 13297  000684  6F63               	movwf	RxData@status& (0+255),b
 13298  000686  D801               	call	u18628
 13299  000688  D00A               	goto	u18629
 13300  00068A                     u18628:
 13301  00068A  0005               	push	
 13302  00068C  6EFA               	movwf	pclath,c
 13303  00068E  0101               	movlb	1	; () banked
 13304  000690  5104               	movf	_rxPayload& (0+255),w,b
 13305  000692  6EFD               	movwf	tosl,c
 13306  000694  5105               	movf	(_rxPayload+1)& (0+255),w,b
 13307  000696  6EFE               	movwf	tosh,c
 13308  000698  6AFF               	clrf	tosu,c
 13309  00069A  50FA               	movf	pclath,w,c
 13310  00069C  0012               	return		;indir
 13311  00069E                     u18629:
 13312                           
 13313                           ;lorawan.c: 1308: }
 13314                           ;lorawan.c: 1310: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13315  00069E  0102               	movlb	2	; () banked
 13316  0006A0  5102               	movf	(_loRa+2)& (0+255),w,b
 13317  0006A2  0BF0               	andlw	-16
 13318  0006A4  0909               	iorlw	9
 13319  0006A6  6F02               	movwf	(_loRa+2)& (0+255),b
 13320                           
 13321                           ; BSR set to: 2
 13322                           ;lorawan.c: 1311: LORAWAN_EnterContinuousReceive();
 13323  0006A8  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13324                           
 13325                           ;lorawan.c: 1312: return MAC_OK;
 13326                           ;	Return value of _LORAWAN_RxDone is never used
 13327  0006AC  0012               	return	
 13328  0006AE                     l1918:
 13329                           
 13330                           ;lorawan.c: 1313: }
 13331                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 13332  0006AE  0100               	movlb	0	; () banked
 13333  0006B0  EE20 F001          	lfsr	2,1
 13334  0006B4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13335  0006B6  26D9               	addwf	fsr2l,f,c
 13336  0006B8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13337  0006BA  22DA               	addwfc	fsr2h,f,c
 13338  0006BC  0102               	movlb	2	; () banked
 13339  0006BE  511E               	movf	(_loRa+30)& (0+255),w,b
 13340  0006C0  18DE               	xorwf	postinc2,w,c
 13341  0006C2  E10A               	bnz	u18630
 13342  0006C4  511F               	movf	(_loRa+31)& (0+255),w,b
 13343  0006C6  18DE               	xorwf	postinc2,w,c
 13344  0006C8  E107               	bnz	u18630
 13345  0006CA  5120               	movf	(_loRa+32)& (0+255),w,b
 13346  0006CC  18DE               	xorwf	postinc2,w,c
 13347  0006CE  E104               	bnz	u18630
 13348  0006D0  5121               	movf	(_loRa+33)& (0+255),w,b
 13349  0006D2  18DE               	xorwf	postinc2,w,c
 13350  0006D4  B4D8               	btfsc	status,2,c
 13351  0006D6  D00E               	goto	l1937
 13352  0006D8                     u18630:
 13353                           
 13354                           ; BSR set to: 2
 13355                           ;lorawan.c: 1317: {
 13356                           ;lorawan.c: 1318: SetReceptionNotOkState();
 13357  0006D8  EC47  F03C         	call	_SetReceptionNotOkState	;wreg free
 13358                           
 13359                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 13360  0006DC  0E02               	movlw	2
 13361  0006DE  0102               	movlb	2	; () banked
 13362  0006E0  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13363  0006E2  A4D8               	btfss	status,2,c
 13364  0006E4  0012               	return	
 13365                           
 13366                           ; BSR set to: 2
 13367                           ;lorawan.c: 1320: {
 13368                           ;lorawan.c: 1321: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13369  0006E6  5102               	movf	(_loRa+2)& (0+255),w,b
 13370  0006E8  0BF0               	andlw	-16
 13371  0006EA  0909               	iorlw	9
 13372  0006EC  6F02               	movwf	(_loRa+2)& (0+255),b
 13373                           
 13374                           ; BSR set to: 2
 13375                           ;lorawan.c: 1322: LORAWAN_EnterContinuousReceive();
 13376  0006EE  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13377                           
 13378                           ;lorawan.c: 1323: }
 13379                           ;lorawan.c: 1324: return INVALID_PARAMETER;
 13380                           ;	Return value of _LORAWAN_RxDone is never used
 13381  0006F2  0012               	return	
 13382  0006F4                     l1937:
 13383                           
 13384                           ;lorawan.c: 1325: }
 13385                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 13386  0006F4  0100               	movlb	0	; () banked
 13387  0006F6  EE20 F006          	lfsr	2,6
 13388  0006FA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13389  0006FC  26D9               	addwf	fsr2l,f,c
 13390  0006FE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13391  000700  22DA               	addwfc	fsr2h,f,c
 13392  000702  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 13393  000706  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 13394  00070A  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 13395  00070E  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 13396  000712  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 13397  000714  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 13398  000716  0101               	movlb	1	; () banked
 13399  000718  51DB               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13400  00071A  0FFC               	addlw	252
 13401  00071C  0100               	movlb	0	; () banked
 13402  00071E  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 13403  000720  0E49               	movlw	73
 13404  000722  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 13405  000724  0E00               	movlw	0
 13406  000726  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 13407  000728  0E01               	movlw	1
 13408  00072A  EC1B  F032         	call	_AssembleEncryptionBlock
 13409                           
 13410                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 13411  00072E  0EEF               	movlw	low _radioBuffer
 13412  000730  0100               	movlb	0	; () banked
 13413  000732  6F60               	movwf	memcpy@d1& (0+255),b
 13414  000734  0E05               	movlw	high _radioBuffer
 13415  000736  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13416  000738  0E57               	movlw	low _aesBuffer
 13417  00073A  6F62               	movwf	memcpy@s1& (0+255),b
 13418  00073C  0E01               	movlw	high _aesBuffer
 13419  00073E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13420  000740  0E00               	movlw	0
 13421  000742  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13422  000744  0E10               	movlw	16
 13423  000746  6F64               	movwf	memcpy@n& (0+255),b
 13424  000748  EC6C  F03F         	call	_memcpy	;wreg free
 13425                           
 13426                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 13427  00074C  0EFF               	movlw	low (_radioBuffer+16)
 13428  00074E  0100               	movlb	0	; () banked
 13429  000750  6F60               	movwf	memcpy@d1& (0+255),b
 13430  000752  0E05               	movlw	high (_radioBuffer+16)
 13431  000754  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13432  000756  C1D9  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 13433  00075A  C1DA  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 13434  00075E  0EFC               	movlw	252
 13435  000760  0101               	movlb	1	; () banked
 13436  000762  25DB               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13437  000764  0100               	movlb	0	; () banked
 13438  000766  6F64               	movwf	memcpy@n& (0+255),b
 13439  000768  6B65               	clrf	(memcpy@n+1)& (0+255),b
 13440  00076A  0EFF               	movlw	255
 13441  00076C  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 13442  00076E  EC6C  F03F         	call	_memcpy	;wreg free
 13443                           
 13444                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 13445  000772  0E22               	movlw	low (_loRa+34)
 13446  000774  0100               	movlb	0	; () banked
 13447  000776  6FB9               	movwf	AESCmac@key& (0+255),b
 13448  000778  0E02               	movlw	high (_loRa+34)
 13449  00077A  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 13450  00077C  0E57               	movlw	low _aesBuffer
 13451  00077E  6FBB               	movwf	AESCmac@output& (0+255),b
 13452  000780  0E01               	movlw	high _aesBuffer
 13453  000782  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 13454  000784  0EEF               	movlw	low _radioBuffer
 13455  000786  6FBD               	movwf	AESCmac@input& (0+255),b
 13456  000788  0E05               	movlw	high _radioBuffer
 13457  00078A  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 13458  00078C  0101               	movlb	1	; () banked
 13459  00078E  51DB               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13460  000790  0F0C               	addlw	12
 13461  000792  0100               	movlb	0	; () banked
 13462  000794  6FBF               	movwf	AESCmac@size& (0+255),b
 13463  000796  ECF8  F010         	call	_AESCmac	;wreg free
 13464                           
 13465                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 13466  00079A  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 13467  00079C  0100               	movlb	0	; () banked
 13468  00079E  6F60               	movwf	memcpy@d1& (0+255),b
 13469  0007A0  0E00               	movlw	high LORAWAN_RxDone@computedMic
 13470  0007A2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13471  0007A4  0E57               	movlw	low _aesBuffer
 13472  0007A6  6F62               	movwf	memcpy@s1& (0+255),b
 13473  0007A8  0E01               	movlw	high _aesBuffer
 13474  0007AA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13475  0007AC  0E00               	movlw	0
 13476  0007AE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13477  0007B0  0E04               	movlw	4
 13478  0007B2  6F64               	movwf	memcpy@n& (0+255),b
 13479  0007B4  EC6C  F03F         	call	_memcpy	;wreg free
 13480                           
 13481                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 13482  0007B8  C1D9  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 13483  0007BC  C1DA  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 13484  0007C0  C1DB  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 13485  0007C4  EC84  F040         	call	_ExtractMic	;wreg free
 13486  0007C8  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 13487  0007CC  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 13488  0007D0  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 13489  0007D4  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 13490                           
 13491                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 13492  0007D8  0100               	movlb	0	; () banked
 13493  0007DA  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 13494  0007DC  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 13495  0007DE  E10A               	bnz	u18650
 13496  0007E0  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 13497  0007E2  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 13498  0007E4  E107               	bnz	u18650
 13499  0007E6  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 13500  0007E8  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 13501  0007EA  E104               	bnz	u18650
 13502  0007EC  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 13503  0007EE  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 13504  0007F0  B4D8               	btfsc	status,2,c
 13505  0007F2  D00E               	goto	l1939
 13506  0007F4                     u18650:
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;lorawan.c: 1337: {
 13510                           ;lorawan.c: 1338: SetReceptionNotOkState();
 13511  0007F4  EC47  F03C         	call	_SetReceptionNotOkState	;wreg free
 13512                           
 13513                           ;lorawan.c: 1339: if (CLASS_C == loRa.deviceClass)
 13514  0007F8  0E02               	movlw	2
 13515  0007FA  0102               	movlb	2	; () banked
 13516  0007FC  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13517  0007FE  A4D8               	btfss	status,2,c
 13518  000800  0012               	return	
 13519                           
 13520                           ; BSR set to: 2
 13521                           ;lorawan.c: 1340: {
 13522                           ;lorawan.c: 1341: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13523  000802  5102               	movf	(_loRa+2)& (0+255),w,b
 13524  000804  0BF0               	andlw	-16
 13525  000806  0909               	iorlw	9
 13526  000808  6F02               	movwf	(_loRa+2)& (0+255),b
 13527                           
 13528                           ; BSR set to: 2
 13529                           ;lorawan.c: 1342: LORAWAN_EnterContinuousReceive();
 13530  00080A  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13531                           
 13532                           ;lorawan.c: 1343: }
 13533                           ;lorawan.c: 1344: return INVALID_PARAMETER;
 13534                           ;	Return value of _LORAWAN_RxDone is never used
 13535  00080E  0012               	return	
 13536  000810                     l1939:
 13537                           
 13538                           ;lorawan.c: 1345: }
 13539                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 13540  000810  0100               	movlb	0	; () banked
 13541  000812  EE20 F006          	lfsr	2,6
 13542  000816  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13543  000818  26D9               	addwf	fsr2l,f,c
 13544  00081A  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13545  00081C  22DA               	addwfc	fsr2h,f,c
 13546  00081E  0102               	movlb	2	; () banked
 13547  000820  510A               	movf	(_loRa+10)& (0+255),w,b
 13548  000822  5CDE               	subwf	postinc2,w,c
 13549  000824  510B               	movf	(_loRa+11)& (0+255),w,b
 13550  000826  58DE               	subwfb	postinc2,w,c
 13551  000828  A0D8               	btfss	status,0,c
 13552  00082A  D05D               	goto	l1941
 13553                           
 13554                           ; BSR set to: 2
 13555                           ;lorawan.c: 1349: {
 13556                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 13557  00082C  0100               	movlb	0	; () banked
 13558  00082E  EE20 F006          	lfsr	2,6
 13559  000832  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13560  000834  26D9               	addwf	fsr2l,f,c
 13561  000836  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13562  000838  22DA               	addwfc	fsr2h,f,c
 13563  00083A  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 13564  00083E  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 13565  000842  EE22  F00A         	lfsr	2,_loRa+10
 13566  000846  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 13567  00084A  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 13568  00084E  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13569  000850  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13570  000852  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13571  000854  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13572  000856  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13573  000858  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13574  00085A  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13575  00085C  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13576  00085E  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 13577  000860  0102               	movlb	2	; () banked
 13578  000862  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 13579  000864  0100               	movlb	0	; () banked
 13580  000866  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13581  000868  0102               	movlb	2	; () banked
 13582  00086A  599D               	subwfb	(_loRa+157)& (0+255),w,b
 13583  00086C  B0D8               	btfsc	status,0,c
 13584  00086E  D02F               	goto	l1942
 13585                           
 13586                           ; BSR set to: 2
 13587                           ;lorawan.c: 1351: {
 13588                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13589  000870  9100               	bcf	_loRa& (0+255),0,b
 13590                           
 13591                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 13592  000872  9102               	bcf	(_loRa+2)& (0+255),0,b
 13593  000874  9302               	bcf	(_loRa+2)& (0+255),1,b
 13594  000876  9502               	bcf	(_loRa+2)& (0+255),2,b
 13595  000878  9702               	bcf	(_loRa+2)& (0+255),3,b
 13596                           
 13597                           ; BSR set to: 2
 13598                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 13599  00087A  0101               	movlb	1	; () banked
 13600  00087C  5104               	movf	_rxPayload& (0+255),w,b
 13601  00087E  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 13602  000880  B4D8               	btfsc	status,2,c
 13603  000882  D017               	goto	u18709
 13604                           
 13605                           ; BSR set to: 1
 13606                           ;lorawan.c: 1355: {
 13607                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 13608  000884  0102               	movlb	2	; () banked
 13609  000886  9B00               	bcf	_loRa& (0+255),5,b
 13610                           
 13611                           ; BSR set to: 2
 13612                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13613  000888  0E00               	movlw	0
 13614  00088A  0100               	movlb	0	; () banked
 13615  00088C  6F60               	movwf	RxData@pData& (0+255),b
 13616  00088E  0E00               	movlw	0
 13617  000890  6F61               	movwf	(RxData@pData+1)& (0+255),b
 13618  000892  0E00               	movlw	0
 13619  000894  6F62               	movwf	RxData@dataLength& (0+255),b
 13620  000896  0E00               	movlw	0
 13621  000898  6F63               	movwf	RxData@status& (0+255),b
 13622  00089A  D801               	call	u18708
 13623  00089C  D00A               	goto	u18709
 13624  00089E                     u18708:
 13625  00089E  0005               	push	
 13626  0008A0  6EFA               	movwf	pclath,c
 13627  0008A2  0101               	movlb	1	; () banked
 13628  0008A4  5104               	movf	_rxPayload& (0+255),w,b
 13629  0008A6  6EFD               	movwf	tosl,c
 13630  0008A8  5105               	movf	(_rxPayload+1)& (0+255),w,b
 13631  0008AA  6EFE               	movwf	tosh,c
 13632  0008AC  6AFF               	clrf	tosu,c
 13633  0008AE  50FA               	movf	pclath,w,c
 13634  0008B0  0012               	return		;indir
 13635  0008B2                     u18709:
 13636                           
 13637                           ;lorawan.c: 1358: }
 13638                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 13639  0008B2  0102               	movlb	2	; () banked
 13640  0008B4  9303               	bcf	(_loRa+3)& (0+255),1,b
 13641                           
 13642                           ; BSR set to: 2
 13643                           ;lorawan.c: 1362: loRa.macStatus.rejoinNeeded = 1;
 13644  0008B6  8304               	bsf	(_loRa+4)& (0+255),1,b
 13645                           
 13646                           ; BSR set to: 2
 13647                           ;lorawan.c: 1363: if (CLASS_C == loRa.deviceClass)
 13648  0008B8  0E02               	movlw	2
 13649  0008BA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13650  0008BC  A4D8               	btfss	status,2,c
 13651  0008BE  0012               	return	
 13652                           
 13653                           ; BSR set to: 2
 13654                           ;lorawan.c: 1364: {
 13655                           ;lorawan.c: 1365: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13656  0008C0  5102               	movf	(_loRa+2)& (0+255),w,b
 13657  0008C2  0BF0               	andlw	-16
 13658  0008C4  0909               	iorlw	9
 13659  0008C6  6F02               	movwf	(_loRa+2)& (0+255),b
 13660                           
 13661                           ; BSR set to: 2
 13662                           ;lorawan.c: 1366: LORAWAN_EnterContinuousReceive();
 13663  0008C8  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13664                           
 13665                           ;lorawan.c: 1367: }
 13666                           ;lorawan.c: 1368: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 13667                           ;	Return value of _LORAWAN_RxDone is never used
 13668  0008CC  0012               	return	
 13669  0008CE                     l1942:
 13670                           
 13671                           ;lorawan.c: 1370: else
 13672                           ;lorawan.c: 1371: {
 13673                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 13674  0008CE  0100               	movlb	0	; () banked
 13675  0008D0  EE20 F006          	lfsr	2,6
 13676  0008D4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13677  0008D6  26D9               	addwf	fsr2l,f,c
 13678  0008D8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13679  0008DA  22DA               	addwfc	fsr2h,f,c
 13680  0008DC  CFDE F20A          	movff	postinc2,_loRa+10
 13681  0008E0  CFDD F20B          	movff	postdec2,_loRa+11
 13682                           
 13683                           ; BSR set to: 0
 13684                           ;lorawan.c: 1373: }
 13685                           ;lorawan.c: 1374: }
 13686  0008E4  D02E               	goto	l1948
 13687  0008E6                     l1941:
 13688                           
 13689                           ;lorawan.c: 1375: else
 13690                           ;lorawan.c: 1376: {
 13691                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 13692                           
 13693                           ; BSR set to: 0
 13694  0008E6  0100               	movlb	0	; () banked
 13695  0008E8  EE20 F006          	lfsr	2,6
 13696  0008EC  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13697  0008EE  26D9               	addwf	fsr2l,f,c
 13698  0008F0  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13699  0008F2  22DA               	addwfc	fsr2h,f,c
 13700  0008F4  50DE               	movf	postinc2,w,c
 13701  0008F6  10DE               	iorwf	postinc2,w,c
 13702  0008F8  A4D8               	btfss	status,2,c
 13703  0008FA  D015               	goto	l1947
 13704                           
 13705                           ; BSR set to: 0
 13706  0008FC  0102               	movlb	2	; () banked
 13707  0008FE  290A               	incf	(_loRa+10)& (0+255),w,b
 13708  000900  E112               	bnz	l15949
 13709  000902  290B               	incf	(_loRa+11)& (0+255),w,b
 13710  000904  A4D8               	btfss	status,2,c
 13711  000906  D00F               	goto	l1947
 13712                           
 13713                           ; BSR set to: 2
 13714                           ;lorawan.c: 1378: {
 13715                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 13716  000908  0100               	movlb	0	; () banked
 13717  00090A  EE20 F006          	lfsr	2,6
 13718  00090E  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13719  000910  26D9               	addwf	fsr2l,f,c
 13720  000912  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13721  000914  22DA               	addwfc	fsr2h,f,c
 13722  000916  CFDE F20A          	movff	postinc2,_loRa+10
 13723  00091A  CFDD F20B          	movff	postdec2,_loRa+11
 13724                           
 13725                           ; BSR set to: 0
 13726                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 13727  00091E  0102               	movlb	2	; () banked
 13728  000920  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 13729  000922  2B0D               	incf	(_loRa+13)& (0+255),f,b
 13730                           
 13731                           ;lorawan.c: 1382: }
 13732  000924  D00E               	goto	l1948
 13733  000926                     l1947:
 13734  000926                     l15949:
 13735                           
 13736                           ;lorawan.c: 1383: else
 13737                           ;lorawan.c: 1384: {
 13738                           ;lorawan.c: 1385: SetReceptionNotOkState();
 13739  000926  EC47  F03C         	call	_SetReceptionNotOkState	;wreg free
 13740                           
 13741                           ;lorawan.c: 1386: if (CLASS_C == loRa.deviceClass)
 13742  00092A  0E02               	movlw	2
 13743  00092C  0102               	movlb	2	; () banked
 13744  00092E  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13745  000930  A4D8               	btfss	status,2,c
 13746  000932  0012               	return	
 13747                           
 13748                           ; BSR set to: 2
 13749                           ;lorawan.c: 1387: {
 13750                           ;lorawan.c: 1388: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13751  000934  5102               	movf	(_loRa+2)& (0+255),w,b
 13752  000936  0BF0               	andlw	-16
 13753  000938  0909               	iorlw	9
 13754  00093A  6F02               	movwf	(_loRa+2)& (0+255),b
 13755                           
 13756                           ; BSR set to: 2
 13757                           ;lorawan.c: 1389: LORAWAN_EnterContinuousReceive();
 13758  00093C  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13759                           
 13760                           ;lorawan.c: 1390: }
 13761                           ;lorawan.c: 1392: return INVALID_PARAMETER;
 13762                           ;	Return value of _LORAWAN_RxDone is never used
 13763  000940  0012               	return	
 13764  000942                     l1948:
 13765                           
 13766                           ;lorawan.c: 1393: }
 13767                           ;lorawan.c: 1394: }
 13768                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 13769  000942  0102               	movlb	2	; () banked
 13770  000944  290A               	incf	(_loRa+10)& (0+255),w,b
 13771  000946  E113               	bnz	l15971
 13772  000948  290B               	incf	(_loRa+11)& (0+255),w,b
 13773  00094A  E111               	bnz	l15971
 13774  00094C  290C               	incf	(_loRa+12)& (0+255),w,b
 13775  00094E  E10F               	bnz	l15971
 13776  000950  290D               	incf	(_loRa+13)& (0+255),w,b
 13777  000952  A4D8               	btfss	status,2,c
 13778  000954  D00C               	goto	l1950
 13779                           
 13780                           ; BSR set to: 2
 13781                           ;lorawan.c: 1397: {
 13782                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 13783  000956  8304               	bsf	(_loRa+4)& (0+255),1,b
 13784                           
 13785                           ; BSR set to: 2
 13786                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 13787  000958  0E02               	movlw	2
 13788  00095A  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13789  00095C  A4D8               	btfss	status,2,c
 13790  00095E  0012               	return	
 13791                           
 13792                           ; BSR set to: 2
 13793                           ;lorawan.c: 1402: {
 13794                           ;lorawan.c: 1403: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13795  000960  5102               	movf	(_loRa+2)& (0+255),w,b
 13796  000962  0BF0               	andlw	-16
 13797  000964  0909               	iorlw	9
 13798  000966  6F02               	movwf	(_loRa+2)& (0+255),b
 13799                           
 13800                           ; BSR set to: 2
 13801                           ;lorawan.c: 1404: LORAWAN_EnterContinuousReceive();
 13802  000968  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13803                           
 13804                           ;lorawan.c: 1405: }
 13805                           ;lorawan.c: 1406: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 13806                           ;	Return value of _LORAWAN_RxDone is never used
 13807  00096C  0012               	return	
 13808  00096E                     l1950:
 13809  00096E                     l15971:
 13810                           
 13811                           ;lorawan.c: 1407: }
 13812                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 13813  00096E  0102               	movlb	2	; () banked
 13814  000970  5102               	movf	(_loRa+2)& (0+255),w,b
 13815  000972  0B0F               	andlw	15
 13816  000974  0A03               	xorlw	3
 13817  000976  A4D8               	btfss	status,2,c
 13818  000978  D003               	goto	l1952
 13819                           
 13820                           ; BSR set to: 2
 13821                           ;lorawan.c: 1411: {
 13822                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 13823  00097A  51E5               	movf	(_loRa+229)& (0+255),w,b
 13824  00097C  ECB8  F046         	call	_SwTimerStop
 13825  000980                     l1952:
 13826                           
 13827                           ;lorawan.c: 1413: }
 13828                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 13829  000980  0E01               	movlw	1
 13830  000982  0102               	movlb	2	; () banked
 13831  000984  6FD8               	movwf	(_loRa+216)& (0+255),b
 13832                           
 13833                           ; BSR set to: 2
 13834                           ;lorawan.c: 1417: CheckFlags (hdr);
 13835  000986  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 13836  00098A  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 13837  00098E  ECFA  F03F         	call	_CheckFlags	;wreg free
 13838                           
 13839                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 13840  000992  0100               	movlb	0	; () banked
 13841  000994  EE20 F005          	lfsr	2,5
 13842  000998  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13843  00099A  26D9               	addwf	fsr2l,f,c
 13844  00099C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13845  00099E  22DA               	addwfc	fsr2h,f,c
 13846  0009A0  50DF               	movf	223,w,c
 13847  0009A2  0B0F               	andlw	15
 13848  0009A4  0900               	iorlw	0
 13849  0009A6  B4D8               	btfsc	status,2,c
 13850  0009A8  D016               	goto	l1953
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;lorawan.c: 1420: {
 13854                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 13855  0009AA  0E08               	movlw	8
 13856  0009AC  25F1               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 13857  0009AE  6FB0               	movwf	MacExecuteCommands@buffer& (0+255),b
 13858  0009B0  0E00               	movlw	0
 13859  0009B2  21F2               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13860  0009B4  6FB1               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 13861  0009B6  EE20 F005          	lfsr	2,5
 13862  0009BA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13863  0009BC  26D9               	addwf	fsr2l,f,c
 13864  0009BE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13865  0009C0  22DA               	addwfc	fsr2h,f,c
 13866  0009C2  50DF               	movf	223,w,c
 13867  0009C4  0B0F               	andlw	15
 13868  0009C6  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 13869  0009C8  ECA7  F017         	call	_MacExecuteCommands	;wreg free
 13870  0009CC  C0B0  F1D9         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 13871  0009D0  C0B1  F1DA         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 13872                           
 13873                           ;lorawan.c: 1422: }
 13874  0009D4  D007               	goto	l1954
 13875  0009D6                     l1953:
 13876                           
 13877                           ;lorawan.c: 1423: else
 13878                           ;lorawan.c: 1424: {
 13879                           ;lorawan.c: 1425: buffer = buffer + 8;
 13880  0009D6  0E08               	movlw	8
 13881  0009D8  0101               	movlb	1	; () banked
 13882  0009DA  25D9               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13883  0009DC  6FD9               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 13884  0009DE  0E00               	movlw	0
 13885  0009E0  21DA               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 13886  0009E2  6FDA               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 13887  0009E4                     l1954:
 13888                           
 13889                           ;lorawan.c: 1426: }
 13890                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 13891                           
 13892                           ; BSR set to: 1
 13893  0009E4  0101               	movlb	1	; () banked
 13894  0009E6  51DB               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13895  0009E8  0100               	movlb	0	; () banked
 13896  0009EA  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 13897  0009EC  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 13898  0009EE  EE20 F005          	lfsr	2,5
 13899  0009F2  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13900  0009F4  26D9               	addwf	fsr2l,f,c
 13901  0009F6  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13902  0009F8  22DA               	addwfc	fsr2h,f,c
 13903  0009FA  50DF               	movf	223,w,c
 13904  0009FC  0B0F               	andlw	15
 13905  0009FE  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 13906  000A00  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 13907  000A02  0E0C               	movlw	12
 13908  000A04  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13909  000A06  0E00               	movlw	0
 13910  000A08  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13911  000A0A  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13912  000A0C  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 13913  000A0E  E104               	bnz	u18790
 13914  000A10  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13915  000A12  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13916  000A14  B4D8               	btfsc	status,2,c
 13917  000A16  D098               	goto	l1955
 13918  000A18                     u18790:
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;lorawan.c: 1428: {
 13922                           ;lorawan.c: 1429: fPort = *(buffer++);
 13923  000A18  C1D9  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 13924  000A1C  C1DA  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 13925  000A20  50DF               	movf	indf2,w,c
 13926  000A22  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 13927                           
 13928                           ; BSR set to: 0
 13929  000A24  0101               	movlb	1	; () banked
 13930  000A26  4BD9               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 13931  000A28  2BDA               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 13932                           
 13933                           ; BSR set to: 1
 13934                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 13935  000A2A  0100               	movlb	0	; () banked
 13936  000A2C  EE20 F005          	lfsr	2,5
 13937  000A30  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13938  000A32  26D9               	addwf	fsr2l,f,c
 13939  000A34  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13940  000A36  22DA               	addwfc	fsr2h,f,c
 13941  000A38  50DF               	movf	223,w,c
 13942  000A3A  0B0F               	andlw	15
 13943  000A3C  0800               	sublw	0
 13944  000A3E  0101               	movlb	1	; () banked
 13945  000A40  25DB               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13946  000A42  0FF4               	addlw	244
 13947  000A44  0100               	movlb	0	; () banked
 13948  000A46  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13949                           
 13950                           ; BSR set to: 0
 13951                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 13952  000A48  EE20 F005          	lfsr	2,5
 13953  000A4C  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13954  000A4E  26D9               	addwf	fsr2l,f,c
 13955  000A50  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13956  000A52  22DA               	addwfc	fsr2h,f,c
 13957  000A54  50DF               	movf	223,w,c
 13958  000A56  0B0F               	andlw	15
 13959  000A58  0F19               	addlw	25
 13960  000A5A  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;lorawan.c: 1434: if (fPort != 0)
 13964  000A5C  51DF               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 13965  000A5E  B4D8               	btfsc	status,2,c
 13966  000A60  D028               	goto	l1956
 13967                           
 13968                           ; BSR set to: 0
 13969                           ;lorawan.c: 1435: {
 13970                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 13971  000A62  C1D9  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13972  000A66  C1DA  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13973  000A6A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13974  000A6C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13975  000A6E  0E01               	movlw	1
 13976  000A70  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 13977  000A72  C20A  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 13978  000A76  C20B  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 13979  000A7A  C20C  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 13980  000A7E  C20D  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 13981  000A82  0E32               	movlw	low (_loRa+50)
 13982  000A84  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 13983  000A86  0E02               	movlw	high (_loRa+50)
 13984  000A88  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13985  000A8A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13986  000A8E  0EEF               	movlw	low _radioBuffer
 13987  000A90  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13988  000A92  0E05               	movlw	high _radioBuffer
 13989  000A94  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13990  000A96  0E00               	movlw	0
 13991  000A98  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13992  000A9A  ECE6  F025         	call	_EncryptFRMPayload	;wreg free
 13993                           
 13994                           ;lorawan.c: 1437: packet = buffer - 1;
 13995  000A9E  0EFF               	movlw	255
 13996  000AA0  0101               	movlb	1	; () banked
 13997  000AA2  25D9               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13998  000AA4  0100               	movlb	0	; () banked
 13999  000AA6  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 14000  000AA8  0EFF               	movlw	255
 14001  000AAA  0101               	movlb	1	; () banked
 14002  000AAC  21DA               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 14003  000AAE  0100               	movlb	0	; () banked
 14004  000AB0  D050               	goto	L29
 14005  000AB2                     l1956:
 14006                           
 14007                           ; BSR set to: 0
 14008                           ;lorawan.c: 1439: else
 14009                           ;lorawan.c: 1440: {
 14010                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 14011                           
 14012                           ; BSR set to: 0
 14013  000AB2  0101               	movlb	1	; () banked
 14014  000AB4  51DB               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 14015  000AB6  0100               	movlb	0	; () banked
 14016  000AB8  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 14017  000ABA  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 14018  000ABC  EE20 F005          	lfsr	2,5
 14019  000AC0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 14020  000AC2  26D9               	addwf	fsr2l,f,c
 14021  000AC4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 14022  000AC6  22DA               	addwfc	fsr2h,f,c
 14023  000AC8  50DF               	movf	223,w,c
 14024  000ACA  0B0F               	andlw	15
 14025  000ACC  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 14026  000ACE  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 14027  000AD0  0E0D               	movlw	13
 14028  000AD2  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 14029  000AD4  0E00               	movlw	0
 14030  000AD6  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 14031  000AD8  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 14032  000ADA  5DDC               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 14033  000ADC  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 14034  000ADE  0A80               	xorlw	128
 14035  000AE0  6FDE               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 14036  000AE2  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 14037  000AE4  0A80               	xorlw	128
 14038  000AE6  59DE               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 14039  000AE8  B0D8               	btfsc	status,0,c
 14040  000AEA  D02B               	goto	l1958
 14041                           
 14042                           ; BSR set to: 0
 14043                           ;lorawan.c: 1443: {
 14044                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 14045  000AEC  C1D9  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 14046  000AF0  C1DA  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 14047  000AF4  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 14048  000AF6  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 14049  000AF8  0E01               	movlw	1
 14050  000AFA  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 14051  000AFC  C20A  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 14052  000B00  C20B  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 14053  000B04  C20C  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 14054  000B08  C20D  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 14055  000B0C  0E22               	movlw	low (_loRa+34)
 14056  000B0E  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 14057  000B10  0E02               	movlw	high (_loRa+34)
 14058  000B12  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 14059  000B14  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 14060  000B18  0EEF               	movlw	low _radioBuffer
 14061  000B1A  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 14062  000B1C  0E05               	movlw	high _radioBuffer
 14063  000B1E  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 14064  000B20  0E00               	movlw	0
 14065  000B22  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 14066  000B24  ECE6  F025         	call	_EncryptFRMPayload	;wreg free
 14067                           
 14068                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 14069  000B28  C1D9  F0B0         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 14070  000B2C  C1DA  F0B1         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 14071  000B30  0100               	movlb	0	; () banked
 14072  000B32  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 14073  000B34  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 14074  000B36  ECA7  F017         	call	_MacExecuteCommands	;wreg free
 14075  000B3A  C0B0  F1D9         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 14076  000B3E  C0B1  F1DA         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 14077  000B42                     l1958:
 14078                           
 14079                           ;lorawan.c: 1447: }
 14080                           ;lorawan.c: 1449: frmPayloadLength = 0;
 14081  000B42  0E00               	movlw	0
 14082  000B44  0100               	movlb	0	; () banked
 14083  000B46  D001               	goto	L9
 14084  000B48                     l1955:
 14085                           
 14086                           ; BSR set to: 0
 14087                           ;lorawan.c: 1453: else
 14088                           ;lorawan.c: 1454: {
 14089                           ;lorawan.c: 1455: frmPayloadLength = 0;
 14090                           
 14091                           ; BSR set to: 0
 14092  000B48  0E00               	movlw	0
 14093  000B4A                     L9:
 14094  000B4A  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 14095                           
 14096                           ; BSR set to: 0
 14097                           ;lorawan.c: 1456: packet = (0);
 14098  000B4C  0E00               	movlw	0
 14099  000B4E  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 14100  000B50  0E00               	movlw	0
 14101  000B52                     L29:
 14102  000B52  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 14103                           
 14104                           ; BSR set to: 0
 14105                           ;lorawan.c: 1457: }
 14106                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 14107                           
 14108                           ; BSR set to: 0
 14109  000B54  0E01               	movlw	1
 14110  000B56  0102               	movlb	2	; () banked
 14111  000B58  6FD8               	movwf	(_loRa+216)& (0+255),b
 14112                           
 14113                           ; BSR set to: 2
 14114                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 14115  000B5A  0E00               	movlw	0
 14116  000B5C  6FD1               	movwf	(_loRa+209)& (0+255),b
 14117  000B5E  0E00               	movlw	0
 14118  000B60  6FD0               	movwf	(_loRa+208)& (0+255),b
 14119                           
 14120                           ; BSR set to: 2
 14121                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 14122  000B62  0E00               	movlw	0
 14123  000B64  6FEE               	movwf	(_loRa+238)& (0+255),b
 14124                           
 14125                           ; BSR set to: 2
 14126                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 14127  000B66  9900               	bcf	_loRa& (0+255),4,b
 14128                           
 14129                           ; BSR set to: 2
 14130                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 14131  000B68  8303               	bsf	(_loRa+3)& (0+255),1,b
 14132                           
 14133                           ; BSR set to: 2
 14134                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 14135  000B6A  A100               	btfss	_loRa& (0+255),0,b
 14136  000B6C  D055               	goto	l1960
 14137                           
 14138                           ; BSR set to: 2
 14139                           ;lorawan.c: 1468: {
 14140                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 14141  000B6E  0100               	movlb	0	; () banked
 14142  000B70  EE20 F005          	lfsr	2,5
 14143  000B74  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 14144  000B76  26D9               	addwf	fsr2l,f,c
 14145  000B78  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 14146  000B7A  22DA               	addwfc	fsr2h,f,c
 14147  000B7C  AADF               	btfss	indf2,5,c
 14148  000B7E  D049               	goto	l1961
 14149                           
 14150                           ; BSR set to: 0
 14151                           ;lorawan.c: 1470: {
 14152                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 14153  000B80  0102               	movlb	2	; () banked
 14154  000B82  9100               	bcf	_loRa& (0+255),0,b
 14155                           
 14156                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 14157  000B84  9102               	bcf	(_loRa+2)& (0+255),0,b
 14158  000B86  9302               	bcf	(_loRa+2)& (0+255),1,b
 14159  000B88  9502               	bcf	(_loRa+2)& (0+255),2,b
 14160  000B8A  9702               	bcf	(_loRa+2)& (0+255),3,b
 14161                           
 14162                           ; BSR set to: 2
 14163                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 14164  000B8C  0101               	movlb	1	; () banked
 14165  000B8E  5104               	movf	_rxPayload& (0+255),w,b
 14166  000B90  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 14167  000B92  B4D8               	btfsc	status,2,c
 14168  000B94  D017               	goto	u18859
 14169                           
 14170                           ; BSR set to: 1
 14171                           ;lorawan.c: 1474: {
 14172                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 14173  000B96  0102               	movlb	2	; () banked
 14174  000B98  9B00               	bcf	_loRa& (0+255),5,b
 14175                           
 14176                           ; BSR set to: 2
 14177                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 14178  000B9A  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 14179  000B9E  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 14180  000BA2  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 14181  000BA6  0E01               	movlw	1
 14182  000BA8  0100               	movlb	0	; () banked
 14183  000BAA  6F63               	movwf	RxData@status& (0+255),b
 14184  000BAC  D801               	call	u18858
 14185  000BAE  D00A               	goto	u18859
 14186  000BB0                     u18858:
 14187  000BB0  0005               	push	
 14188  000BB2  6EFA               	movwf	pclath,c
 14189  000BB4  0101               	movlb	1	; () banked
 14190  000BB6  5104               	movf	_rxPayload& (0+255),w,b
 14191  000BB8  6EFD               	movwf	tosl,c
 14192  000BBA  5105               	movf	(_rxPayload+1)& (0+255),w,b
 14193  000BBC  6EFE               	movwf	tosh,c
 14194  000BBE  6AFF               	clrf	tosu,c
 14195  000BC0  50FA               	movf	pclath,w,c
 14196  000BC2  0012               	return		;indir
 14197  000BC4                     u18859:
 14198                           
 14199                           ;lorawan.c: 1477: }
 14200                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 14201  000BC4  0102               	movlb	2	; () banked
 14202  000BC6  9303               	bcf	(_loRa+3)& (0+255),1,b
 14203                           
 14204                           ; BSR set to: 2
 14205                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 14206  000BC8  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 14207                           
 14208                           ; BSR set to: 2
 14209  000BCA  BB00               	btfsc	_loRa& (0+255),5,b
 14210  000BCC  D06C               	goto	l1975
 14211                           
 14212                           ; BSR set to: 2
 14213  000BCE  B300               	btfsc	_loRa& (0+255),1,b
 14214  000BD0  D002               	goto	u18890
 14215                           
 14216                           ; BSR set to: 2
 14217  000BD2  A700               	btfss	_loRa& (0+255),3,b
 14218  000BD4  D068               	goto	l1975
 14219  000BD6                     u18890:
 14220                           
 14221                           ; BSR set to: 2
 14222                           ;lorawan.c: 1480: {
 14223                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 14224                           
 14225                           ; BSR set to: 2
 14226  000BD6  0E01               	movlw	1
 14227  000BD8  0100               	movlb	0	; () banked
 14228  000BDA  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 14229  000BDC  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 14230  000BDE  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 14231  000BE0  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 14232  000BE2  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 14233  000BE4  0102               	movlb	2	; () banked
 14234  000BE6  51ED               	movf	(_loRa+237)& (0+255),w,b
 14235  000BE8  EC70  F02D         	call	_SearchAvailableChannel
 14236  000BEC  0900               	iorlw	0
 14237  000BEE  A4D8               	btfss	status,2,c
 14238  000BF0  D00D               	goto	l1966
 14239                           
 14240                           ;lorawan.c: 1482: {
 14241                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 14242  000BF2  0E00               	movlw	0
 14243  000BF4  0100               	movlb	0	; () banked
 14244  000BF6  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 14245  000BF8  0E00               	movlw	0
 14246  000BFA  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 14247  000BFC  0E00               	movlw	0
 14248  000BFE  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 14249  000C00  0E00               	movlw	0
 14250  000C02  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 14251  000C04  0E00               	movlw	0
 14252  000C06  EC21  F036         	call	_LORAWAN_Send
 14253  000C0A  D048               	goto	l16075
 14254  000C0C                     l1966:
 14255                           
 14256                           ;lorawan.c: 1486: else
 14257                           ;lorawan.c: 1487: {
 14258                           ;lorawan.c: 1489: StartReTxTimer();
 14259                           
 14260                           ; BSR set to: 2
 14261  000C0C  ECAC  F026         	call	_StartReTxTimer	;wreg free
 14262                           
 14263                           ;lorawan.c: 1490: }
 14264                           ;lorawan.c: 1491: }
 14265                           ;lorawan.c: 1492: }
 14266  000C10  D04A               	goto	l1975
 14267  000C12                     l1961:
 14268                           
 14269                           ;lorawan.c: 1494: else
 14270                           ;lorawan.c: 1495: {
 14271                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 14272  000C12  EC01  F03D         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 14273                           
 14274                           ;lorawan.c: 1497: }
 14275                           ;lorawan.c: 1498: }
 14276  000C16  D047               	goto	l1975
 14277  000C18                     l1960:
 14278                           
 14279                           ; BSR set to: 2
 14280                           ;lorawan.c: 1499: else
 14281                           ;lorawan.c: 1500: {
 14282                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 14283  000C18  9102               	bcf	(_loRa+2)& (0+255),0,b
 14284  000C1A  9302               	bcf	(_loRa+2)& (0+255),1,b
 14285  000C1C  9502               	bcf	(_loRa+2)& (0+255),2,b
 14286  000C1E  9702               	bcf	(_loRa+2)& (0+255),3,b
 14287                           
 14288                           ; BSR set to: 2
 14289                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 14290  000C20  0101               	movlb	1	; () banked
 14291  000C22  5104               	movf	_rxPayload& (0+255),w,b
 14292  000C24  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 14293  000C26  B4D8               	btfsc	status,2,c
 14294  000C28  D017               	goto	u18929
 14295                           
 14296                           ; BSR set to: 1
 14297                           ;lorawan.c: 1504: {
 14298                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 14299  000C2A  0102               	movlb	2	; () banked
 14300  000C2C  9B00               	bcf	_loRa& (0+255),5,b
 14301                           
 14302                           ; BSR set to: 2
 14303                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 14304  000C2E  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 14305  000C32  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 14306  000C36  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 14307  000C3A  0E01               	movlw	1
 14308  000C3C  0100               	movlb	0	; () banked
 14309  000C3E  6F63               	movwf	RxData@status& (0+255),b
 14310  000C40  D801               	call	u18928
 14311  000C42  D00A               	goto	u18929
 14312  000C44                     u18928:
 14313  000C44  0005               	push	
 14314  000C46  6EFA               	movwf	pclath,c
 14315  000C48  0101               	movlb	1	; () banked
 14316  000C4A  5104               	movf	_rxPayload& (0+255),w,b
 14317  000C4C  6EFD               	movwf	tosl,c
 14318  000C4E  5105               	movf	(_rxPayload+1)& (0+255),w,b
 14319  000C50  6EFE               	movwf	tosh,c
 14320  000C52  6AFF               	clrf	tosu,c
 14321  000C54  50FA               	movf	pclath,w,c
 14322  000C56  0012               	return		;indir
 14323  000C58                     u18929:
 14324                           
 14325                           ;lorawan.c: 1507: }
 14326                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 14327  000C58  0102               	movlb	2	; () banked
 14328  000C5A  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 14329                           
 14330                           ; BSR set to: 2
 14331  000C5C  BB00               	btfsc	_loRa& (0+255),5,b
 14332  000C5E  D023               	goto	l1975
 14333                           
 14334                           ; BSR set to: 2
 14335  000C60  B300               	btfsc	_loRa& (0+255),1,b
 14336  000C62  D002               	goto	u18960
 14337                           
 14338                           ; BSR set to: 2
 14339  000C64  A700               	btfss	_loRa& (0+255),3,b
 14340  000C66  D01F               	goto	l1975
 14341  000C68                     u18960:
 14342                           
 14343                           ; BSR set to: 2
 14344                           ;lorawan.c: 1510: {
 14345                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 14346                           
 14347                           ; BSR set to: 2
 14348  000C68  0E01               	movlw	1
 14349  000C6A  0100               	movlb	0	; () banked
 14350  000C6C  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 14351  000C6E  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 14352  000C70  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 14353  000C72  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 14354  000C74  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 14355  000C76  0102               	movlb	2	; () banked
 14356  000C78  51ED               	movf	(_loRa+237)& (0+255),w,b
 14357  000C7A  EC70  F02D         	call	_SearchAvailableChannel
 14358  000C7E  0900               	iorlw	0
 14359  000C80  A4D8               	btfss	status,2,c
 14360  000C82  D00F               	goto	l1974
 14361                           
 14362                           ;lorawan.c: 1512: {
 14363                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 14364  000C84  0E00               	movlw	0
 14365  000C86  0100               	movlb	0	; () banked
 14366  000C88  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 14367  000C8A  0E00               	movlw	0
 14368  000C8C  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 14369  000C8E  0E00               	movlw	0
 14370  000C90  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 14371  000C92  0E00               	movlw	0
 14372  000C94  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 14373  000C96  0E00               	movlw	0
 14374  000C98  EC21  F036         	call	_LORAWAN_Send
 14375  000C9C                     l16075:
 14376                           
 14377                           ;lorawan.c: 1514: loRa.lorawanMacStatus.fPending = 0;
 14378  000C9C  0102               	movlb	2	; () banked
 14379  000C9E  9700               	bcf	_loRa& (0+255),3,b
 14380                           
 14381                           ;lorawan.c: 1515: }
 14382  000CA0  D002               	goto	l1975
 14383  000CA2                     l1974:
 14384                           
 14385                           ;lorawan.c: 1516: else
 14386                           ;lorawan.c: 1517: {
 14387                           ;lorawan.c: 1519: StartReTxTimer();
 14388                           
 14389                           ; BSR set to: 2
 14390  000CA2  ECAC  F026         	call	_StartReTxTimer	;wreg free
 14391  000CA6                     l1975:
 14392                           
 14393                           ;lorawan.c: 1520: }
 14394                           ;lorawan.c: 1521: }
 14395                           ;lorawan.c: 1522: }
 14396                           ;lorawan.c: 1524: if (CLASS_C == loRa.deviceClass)
 14397  000CA6  0E02               	movlw	2
 14398  000CA8  0102               	movlb	2	; () banked
 14399  000CAA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 14400  000CAC  A4D8               	btfss	status,2,c
 14401  000CAE  0012               	return	
 14402                           
 14403                           ; BSR set to: 2
 14404                           ;lorawan.c: 1525: {
 14405                           ;lorawan.c: 1526: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 14406  000CB0  5102               	movf	(_loRa+2)& (0+255),w,b
 14407  000CB2  0BF0               	andlw	-16
 14408  000CB4  0909               	iorlw	9
 14409  000CB6  6F02               	movwf	(_loRa+2)& (0+255),b
 14410                           
 14411                           ; BSR set to: 2
 14412                           ;lorawan.c: 1527: LORAWAN_EnterContinuousReceive();
 14413  000CB8  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 14414                           
 14415                           ;lorawan.c: 1528: }
 14416                           ;lorawan.c: 1529: }
 14417  000CBC  0012               	return	
 14418  000CBE                     l1915:
 14419                           
 14420                           ;lorawan.c: 1530: else
 14421                           ;lorawan.c: 1531: {
 14422                           ;lorawan.c: 1533: SetReceptionNotOkState ();
 14423  000CBE  EC47  F03C         	call	_SetReceptionNotOkState	;wreg free
 14424                           
 14425                           ;lorawan.c: 1535: }
 14426                           ;lorawan.c: 1536: }
 14427                           
 14428                           ;lorawan.c: 1534: return INVALID_PARAMETER;
 14429                           ;	Return value of _LORAWAN_RxDone is never used
 14430  000CC2  0012               	return	
 14431  000CC4                     l1901:
 14432                           
 14433                           ;lorawan.c: 1537: else
 14434                           ;lorawan.c: 1538: {
 14435                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 14436  000CC4  0101               	movlb	1	; () banked
 14437  000CC6  5104               	movf	_rxPayload& (0+255),w,b
 14438  000CC8  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 14439  000CCA  B4D8               	btfsc	status,2,c
 14440  000CCC  0012               	return	
 14441                           
 14442                           ; BSR set to: 1
 14443                           ;lorawan.c: 1541: {
 14444                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 14445  000CCE  EC67  F049         	call	_RADIO_GetStatus	;wreg free
 14446  000CD2  0100               	movlb	0	; () banked
 14447  000CD4  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 14448  000CD6  B7DA               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 14449  000CD8  D014               	goto	l1980
 14450                           
 14451                           ; BSR set to: 0
 14452                           ;lorawan.c: 1543: {
 14453                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 14454  000CDA  C1D9  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 14455  000CDE  C1DA  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 14456  000CE2  C1DB  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 14457  000CE6  0E03               	movlw	3
 14458  000CE8  6F63               	movwf	RxData@status& (0+255),b
 14459  000CEA  D801               	call	u19018
 14460  000CEC  0012               	return	
 14461  000CEE                     u19018:
 14462  000CEE  0005               	push	
 14463  000CF0  6EFA               	movwf	pclath,c
 14464  000CF2  0101               	movlb	1	; () banked
 14465  000CF4  5104               	movf	_rxPayload& (0+255),w,b
 14466  000CF6  6EFD               	movwf	tosl,c
 14467  000CF8  5105               	movf	(_rxPayload+1)& (0+255),w,b
 14468  000CFA  6EFE               	movwf	tosh,c
 14469  000CFC  6AFF               	clrf	tosu,c
 14470  000CFE  50FA               	movf	pclath,w,c
 14471  000D00  0012               	return		;indir
 14472  000D02                     l1980:
 14473                           
 14474                           ;lorawan.c: 1546: else
 14475                           ;lorawan.c: 1547: {
 14476                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 14477  000D02  C1D9  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 14478  000D06  C1DA  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 14479  000D0A  C1DB  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 14480  000D0E  0E02               	movlw	2
 14481  000D10  0100               	movlb	0	; () banked
 14482  000D12  6F63               	movwf	RxData@status& (0+255),b
 14483  000D14  D801               	call	u19028
 14484  000D16  0012               	return	
 14485  000D18                     u19028:
 14486  000D18  0005               	push	
 14487  000D1A  6EFA               	movwf	pclath,c
 14488  000D1C  0101               	movlb	1	; () banked
 14489  000D1E  5104               	movf	_rxPayload& (0+255),w,b
 14490  000D20  6EFD               	movwf	tosl,c
 14491  000D22  5105               	movf	(_rxPayload+1)& (0+255),w,b
 14492  000D24  6EFE               	movwf	tosh,c
 14493  000D26  6AFF               	clrf	tosu,c
 14494  000D28  50FA               	movf	pclath,w,c
 14495  000D2A  0012               	return		;indir
 14496  000D2C                     __end_of_LORAWAN_RxDone:
 14497                           	opt stack 0
 14498                           tosu	equ	0xFFF
 14499                           tosh	equ	0xFFE
 14500                           tosl	equ	0xFFD
 14501                           pclath	equ	0xFFA
 14502                           tblptru	equ	0xFF8
 14503                           tblptrh	equ	0xFF7
 14504                           tblptrl	equ	0xFF6
 14505                           tablat	equ	0xFF5
 14506                           prodh	equ	0xFF4
 14507                           prodl	equ	0xFF3
 14508                           intcon	equ	0xFF2
 14509                           intcon2	equ	0xFF1
 14510                           intcon3	equ	0xFF0
 14511                           postinc0	equ	0xFEE
 14512                           wreg	equ	0xFE8
 14513                           postinc1	equ	0xFE6
 14514                           postdec1	equ	0xFE5
 14515                           plusw1	equ	0xFE3
 14516                           fsr1h	equ	0xFE2
 14517                           fsr1l	equ	0xFE1
 14518                           indf2	equ	0xFDF
 14519                           postinc2	equ	0xFDE
 14520                           postdec2	equ	0xFDD
 14521                           fsr2h	equ	0xFDA
 14522                           fsr2l	equ	0xFD9
 14523                           status	equ	0xFD8
 14524                           
 14525 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 14526 ;; Defined at:
 14527 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14528 ;; Parameters:    Size  Location     Type
 14529 ;;		None
 14530 ;; Auto vars:     Size  Location     Type
 14531 ;;		None
 14532 ;; Return value:  Size  Location     Type
 14533 ;;                  1    wreg      void 
 14534 ;; Registers used:
 14535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14536 ;; Tracked objects:
 14537 ;;		On entry : 0/0
 14538 ;;		On exit  : 0/0
 14539 ;;		Unchanged: 0/0
 14540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14543 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14544 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14545 ;;Total ram usage:        4 bytes
 14546 ;; Hardware stack levels used:    1
 14547 ;; Hardware stack levels required when called:   11
 14548 ;; This function calls:
 14549 ;;		_SwTimerSetTimeout
 14550 ;;		_SwTimerStart
 14551 ;;		___lldiv
 14552 ;; This function is called by:
 14553 ;;		_AckRetransmissionCallback
 14554 ;;		_LORAWAN_RxDone
 14555 ;; This function uses a non-reentrant model
 14556 ;;
 14557                           
 14558                           	psect	text71
 14559  007A02                     __ptext71:
 14560                           	opt stack 0
 14561  007A02                     _UpdateRetransmissionAckTimeoutState:
 14562                           	opt stack 16
 14563                           
 14564                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 14565                           
 14566                           ;incstack = 0
 14567  007A02  0102               	movlb	2	; () banked
 14568  007A04  5102               	movf	(_loRa+2)& (0+255),w,b
 14569  007A06  0BF0               	andlw	-16
 14570  007A08  0906               	iorlw	6
 14571  007A0A  6F02               	movwf	(_loRa+2)& (0+255),b
 14572                           
 14573                           ; BSR set to: 2
 14574                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 14575  007A0C  51A0               	movf	(_loRa+160)& (0+255),w,b
 14576  007A0E  0100               	movlb	0	; () banked
 14577  007A10  6F9A               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 14578  007A12  0102               	movlb	2	; () banked
 14579  007A14  51A1               	movf	(_loRa+161)& (0+255),w,b
 14580  007A16  0100               	movlb	0	; () banked
 14581  007A18  6F9B               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 14582  007A1A  6B9C               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 14583  007A1C  6B9D               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 14584  007A1E  0E0C               	movlw	12
 14585  007A20                     u18025:
 14586  007A20  90D8               	bcf	status,0,c
 14587  007A22  379A               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 14588  007A24  379B               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 14589  007A26  379C               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 14590  007A28  379D               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 14591  007A2A  2EE8               	decfsz	wreg,f,c
 14592  007A2C  D7F9               	goto	u18025
 14593  007A2E  C09A  F060         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 14594  007A32  C09B  F061         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 14595  007A36  C09C  F062         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 14596  007A3A  C09D  F063         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 14597  007A3E  0E7D               	movlw	125
 14598  007A40  6F64               	movwf	___lldiv@divisor& (0+255),b
 14599  007A42  0E00               	movlw	0
 14600  007A44  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14601  007A46  0E00               	movlw	0
 14602  007A48  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14603  007A4A  0E00               	movlw	0
 14604  007A4C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14605  007A4E  ECC4  F03B         	call	___lldiv	;wreg free
 14606  007A52  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 14607  007A56  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 14608  007A5A  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 14609  007A5E  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 14610  007A62  0102               	movlb	2	; () banked
 14611  007A64  51E8               	movf	(_loRa+232)& (0+255),w,b
 14612  007A66  EC62  F043         	call	_SwTimerSetTimeout
 14613                           
 14614                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 14615  007A6A  0102               	movlb	2	; () banked
 14616  007A6C  51E8               	movf	(_loRa+232)& (0+255),w,b
 14617  007A6E  EC4B  F039         	call	_SwTimerStart
 14618  007A72  0012               	return		;funcret
 14619  007A74                     __end_of_UpdateRetransmissionAckTimeoutState:
 14620                           	opt stack 0
 14621                           tosu	equ	0xFFF
 14622                           tosh	equ	0xFFE
 14623                           tosl	equ	0xFFD
 14624                           pclath	equ	0xFFA
 14625                           tblptru	equ	0xFF8
 14626                           tblptrh	equ	0xFF7
 14627                           tblptrl	equ	0xFF6
 14628                           tablat	equ	0xFF5
 14629                           prodh	equ	0xFF4
 14630                           prodl	equ	0xFF3
 14631                           intcon	equ	0xFF2
 14632                           intcon2	equ	0xFF1
 14633                           intcon3	equ	0xFF0
 14634                           postinc0	equ	0xFEE
 14635                           wreg	equ	0xFE8
 14636                           postinc1	equ	0xFE6
 14637                           postdec1	equ	0xFE5
 14638                           plusw1	equ	0xFE3
 14639                           fsr1h	equ	0xFE2
 14640                           fsr1l	equ	0xFE1
 14641                           indf2	equ	0xFDF
 14642                           postinc2	equ	0xFDE
 14643                           postdec2	equ	0xFDD
 14644                           fsr2h	equ	0xFDA
 14645                           fsr2l	equ	0xFD9
 14646                           status	equ	0xFD8
 14647                           
 14648 ;; *************** function _UpdateDLSettings *****************
 14649 ;; Defined at:
 14650 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14651 ;; Parameters:    Size  Location     Type
 14652 ;;  dlRx2Dr         1    wreg     unsigned char 
 14653 ;;  dlRx1DrOffse    1    0[BANK0 ] unsigned char 
 14654 ;; Auto vars:     Size  Location     Type
 14655 ;;  dlRx2Dr         1    1[BANK0 ] unsigned char 
 14656 ;; Return value:  Size  Location     Type
 14657 ;;                  1    wreg      void 
 14658 ;; Registers used:
 14659 ;;		wreg, status,2, status,0
 14660 ;; Tracked objects:
 14661 ;;		On entry : 0/0
 14662 ;;		On exit  : 0/0
 14663 ;;		Unchanged: 0/0
 14664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14665 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14668 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14669 ;;Total ram usage:        2 bytes
 14670 ;; Hardware stack levels used:    1
 14671 ;; Hardware stack levels required when called:    7
 14672 ;; This function calls:
 14673 ;;		Nothing
 14674 ;; This function is called by:
 14675 ;;		_LORAWAN_RxDone
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679                           	psect	text72
 14680  008FA8                     __ptext72:
 14681                           	opt stack 0
 14682  008FA8                     _UpdateDLSettings:
 14683                           	opt stack 19
 14684                           
 14685                           ;incstack = 0
 14686                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 14687  008FA8  0100               	movlb	0	; () banked
 14688  008FAA  6F61               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 14689                           
 14690                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 14691  008FAC  0E08               	movlw	8
 14692  008FAE  0100               	movlb	0	; () banked
 14693  008FB0  6161               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 14694  008FB2  D002               	goto	l1176
 14695                           
 14696                           ; BSR set to: 0
 14697                           ;lorawan_eu.c: 891: {
 14698                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 14699  008FB4  C061  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 14700  008FB8                     l1176:
 14701                           
 14702                           ; BSR set to: 0
 14703                           ;lorawan_eu.c: 893: }
 14704                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 14705                           
 14706                           ; BSR set to: 0
 14707  008FB8  0E06               	movlw	6
 14708  008FBA  6160               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 14709  008FBC  0012               	return	
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;lorawan_eu.c: 896: {
 14713                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 14714  008FBE  C060  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 14715  008FC2  0012               	return	
 14716  008FC4                     __end_of_UpdateDLSettings:
 14717                           	opt stack 0
 14718                           tosu	equ	0xFFF
 14719                           tosh	equ	0xFFE
 14720                           tosl	equ	0xFFD
 14721                           pclath	equ	0xFFA
 14722                           tblptru	equ	0xFF8
 14723                           tblptrh	equ	0xFF7
 14724                           tblptrl	equ	0xFF6
 14725                           tablat	equ	0xFF5
 14726                           prodh	equ	0xFF4
 14727                           prodl	equ	0xFF3
 14728                           intcon	equ	0xFF2
 14729                           intcon2	equ	0xFF1
 14730                           intcon3	equ	0xFF0
 14731                           postinc0	equ	0xFEE
 14732                           wreg	equ	0xFE8
 14733                           postinc1	equ	0xFE6
 14734                           postdec1	equ	0xFE5
 14735                           plusw1	equ	0xFE3
 14736                           fsr1h	equ	0xFE2
 14737                           fsr1l	equ	0xFE1
 14738                           indf2	equ	0xFDF
 14739                           postinc2	equ	0xFDE
 14740                           postdec2	equ	0xFDD
 14741                           fsr2h	equ	0xFDA
 14742                           fsr2l	equ	0xFD9
 14743                           status	equ	0xFD8
 14744                           
 14745 ;; *************** function _UpdateCfList *****************
 14746 ;; Defined at:
 14747 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;  bufferLength    1    wreg     unsigned char 
 14750 ;;  joinAccept      2   70[BANK0 ] PTR struct .
 14751 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14752 ;; Auto vars:     Size  Location     Type
 14753 ;;  bufferLength    1   72[BANK0 ] unsigned char 
 14754 ;;  frequency       4   73[BANK0 ] unsigned long 
 14755 ;;  i               1   78[BANK0 ] unsigned char 
 14756 ;;  channelIndex    1   77[BANK0 ] unsigned char 
 14757 ;; Return value:  Size  Location     Type
 14758 ;;                  1    wreg      void 
 14759 ;; Registers used:
 14760 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14761 ;; Tracked objects:
 14762 ;;		On entry : 0/0
 14763 ;;		On exit  : 0/0
 14764 ;;		Unchanged: 0/0
 14765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14767 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14769 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14770 ;;Total ram usage:        9 bytes
 14771 ;; Hardware stack levels used:    1
 14772 ;; Hardware stack levels required when called:    9
 14773 ;; This function calls:
 14774 ;;		_LORAWAN_SetChannelIdStatus
 14775 ;;		_ValidateFrequency
 14776 ;;		___lmul
 14777 ;;		___wmul
 14778 ;;		_memcpy
 14779 ;; This function is called by:
 14780 ;;		_LORAWAN_RxDone
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           	psect	text73
 14785  00431E                     __ptext73:
 14786                           	opt stack 0
 14787  00431E                     _UpdateCfList:
 14788                           	opt stack 17
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;incstack = 0
 14792                           ;UpdateCfList@bufferLength stored from wreg
 14793  00431E  0100               	movlb	0	; () banked
 14794  004320  6FA8               	movwf	UpdateCfList@bufferLength& (0+255),b
 14795                           
 14796                           ;lorawan_eu.c: 826: uint8_t i;
 14797                           ;lorawan_eu.c: 827: uint32_t frequency;
 14798                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 14799                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 14800  004322  0E21               	movlw	33
 14801  004324  0100               	movlb	0	; () banked
 14802  004326  19A8               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 14803  004328  A4D8               	btfss	status,2,c
 14804  00432A  0012               	return	
 14805                           
 14806                           ; BSR set to: 0
 14807                           ;lorawan_eu.c: 831: {
 14808                           ;lorawan_eu.c: 833: channelIndex = 3;
 14809  00432C  0E03               	movlw	3
 14810  00432E  6FAD               	movwf	UpdateCfList@channelIndex& (0+255),b
 14811                           
 14812                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 14813  004330  0E00               	movlw	0
 14814  004332  6FAE               	movwf	UpdateCfList@i& (0+255),b
 14815  004334                     l15393:
 14816                           
 14817                           ; BSR set to: 0
 14818  004334  0E04               	movlw	4
 14819  004336  65AE               	cpfsgt	UpdateCfList@i& (0+255),b
 14820  004338  D001               	goto	l1160
 14821  00433A  D0E5               	goto	u17790
 14822  00433C                     l1160:
 14823                           
 14824                           ; BSR set to: 0
 14825                           ;lorawan_eu.c: 836: {
 14826                           ;lorawan_eu.c: 837: frequency = 0;
 14827                           
 14828                           ; BSR set to: 0
 14829  00433C  0E00               	movlw	0
 14830  00433E  6FA9               	movwf	UpdateCfList@frequency& (0+255),b
 14831  004340  0E00               	movlw	0
 14832  004342  6FAA               	movwf	(UpdateCfList@frequency+1)& (0+255),b
 14833  004344  0E00               	movlw	0
 14834  004346  6FAB               	movwf	(UpdateCfList@frequency+2)& (0+255),b
 14835  004348  0E00               	movlw	0
 14836  00434A  6FAC               	movwf	(UpdateCfList@frequency+3)& (0+255),b
 14837                           
 14838                           ; BSR set to: 0
 14839                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 14840  00434C  0EA9               	movlw	low UpdateCfList@frequency
 14841  00434E  6F60               	movwf	memcpy@d1& (0+255),b
 14842  004350  0E00               	movlw	high UpdateCfList@frequency
 14843  004352  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14844  004354  51AE               	movf	UpdateCfList@i& (0+255),w,b
 14845  004356  0D03               	mullw	3
 14846  004358  0E0D               	movlw	13
 14847  00435A  26F3               	addwf	prodl,f,c
 14848  00435C  0E00               	movlw	0
 14849  00435E  22F4               	addwfc	prodh,f,c
 14850  004360  50F3               	movf	prodl,w,c
 14851  004362  25A6               	addwf	UpdateCfList@joinAccept& (0+255),w,b
 14852  004364  6F62               	movwf	memcpy@s1& (0+255),b
 14853  004366  50F4               	movf	prodh,w,c
 14854  004368  21A7               	addwfc	(UpdateCfList@joinAccept+1)& (0+255),w,b
 14855  00436A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14856  00436C  0E00               	movlw	0
 14857  00436E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14858  004370  0E03               	movlw	3
 14859  004372  6F64               	movwf	memcpy@n& (0+255),b
 14860  004374  EC6C  F03F         	call	_memcpy	;wreg free
 14861                           
 14862                           ;lorawan_eu.c: 839: frequency *= 100;
 14863  004378  C0A9  F09A         	movff	UpdateCfList@frequency,___lmul@multiplier
 14864  00437C  C0AA  F09B         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 14865  004380  C0AB  F09C         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 14866  004384  C0AC  F09D         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 14867  004388  0E64               	movlw	100
 14868  00438A  0100               	movlb	0	; () banked
 14869  00438C  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 14870  00438E  0E00               	movlw	0
 14871  004390  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14872  004392  0E00               	movlw	0
 14873  004394  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14874  004396  0E00               	movlw	0
 14875  004398  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14876  00439A  ECB1  F040         	call	___lmul	;wreg free
 14877  00439E  C09A  F0A9         	movff	?___lmul,UpdateCfList@frequency
 14878  0043A2  C09B  F0AA         	movff	?___lmul+1,UpdateCfList@frequency+1
 14879  0043A6  C09C  F0AB         	movff	?___lmul+2,UpdateCfList@frequency+2
 14880  0043AA  C09D  F0AC         	movff	?___lmul+3,UpdateCfList@frequency+3
 14881                           
 14882                           ;lorawan_eu.c: 840: if (frequency != 0)
 14883  0043AE  0100               	movlb	0	; () banked
 14884  0043B0  51A9               	movf	UpdateCfList@frequency& (0+255),w,b
 14885  0043B2  11AA               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 14886  0043B4  11AB               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 14887  0043B6  11AC               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 14888  0043B8  B4D8               	btfsc	status,2,c
 14889  0043BA  D09B               	goto	l1162
 14890                           
 14891                           ; BSR set to: 0
 14892                           ;lorawan_eu.c: 841: {
 14893                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 14894  0043BC  C0A9  F060         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 14895  0043C0  C0AA  F061         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 14896  0043C4  C0AB  F062         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 14897  0043C8  C0AC  F063         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 14898  0043CC  EC76  F03E         	call	_ValidateFrequency	;wreg free
 14899  0043D0  0900               	iorlw	0
 14900  0043D2  A4D8               	btfss	status,2,c
 14901  0043D4  D095               	goto	l1164
 14902                           
 14903                           ;lorawan_eu.c: 843: {
 14904                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 14905  0043D6  0100               	movlb	0	; () banked
 14906  0043D8  51AE               	movf	UpdateCfList@i& (0+255),w,b
 14907  0043DA  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14908  0043DC  6F60               	movwf	___wmul@multiplier& (0+255),b
 14909  0043DE  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 14910  0043E0  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14911  0043E2  0E00               	movlw	0
 14912  0043E4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14913  0043E6  0E0E               	movlw	14
 14914  0043E8  6F62               	movwf	___wmul@multiplicand& (0+255),b
 14915  0043EA  EC90  F046         	call	___wmul	;wreg free
 14916  0043EE  0E00               	movlw	low _Channels
 14917  0043F0  0100               	movlb	0	; () banked
 14918  0043F2  2560               	addwf	?___wmul& (0+255),w,b
 14919  0043F4  6ED9               	movwf	fsr2l,c
 14920  0043F6  0E04               	movlw	high _Channels
 14921  0043F8  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 14922  0043FA  6EDA               	movwf	fsr2h,c
 14923  0043FC  C0A9  FFDE         	movff	UpdateCfList@frequency,postinc2
 14924  004400  C0AA  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 14925  004404  C0AB  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 14926  004408  C0AC  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 14927                           
 14928                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 14929  00440C  51AE               	movf	UpdateCfList@i& (0+255),w,b
 14930  00440E  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14931  004410  6F60               	movwf	___wmul@multiplier& (0+255),b
 14932  004412  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 14933  004414  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14934  004416  0E00               	movlw	0
 14935  004418  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14936  00441A  0E0E               	movlw	14
 14937  00441C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 14938  00441E  EC90  F046         	call	___wmul	;wreg free
 14939  004422  0E05               	movlw	5
 14940  004424  0100               	movlb	0	; () banked
 14941  004426  2760               	addwf	?___wmul& (0+255),f,b
 14942  004428  0E00               	movlw	0
 14943  00442A  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 14944  00442C  0E00               	movlw	low _Channels
 14945  00442E  2560               	addwf	?___wmul& (0+255),w,b
 14946  004430  6ED9               	movwf	fsr2l,c
 14947  004432  0E04               	movlw	high _Channels
 14948  004434  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 14949  004436  6EDA               	movwf	fsr2h,c
 14950  004438  0104               	movlb	4	; () banked
 14951  00443A  50DF               	movf	223,w,c
 14952  00443C  0B0F               	andlw	-241
 14953  00443E  0950               	iorlw	80
 14954  004440  6EDF               	movwf	223,c
 14955                           
 14956                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 14957  004442  0100               	movlb	0	; () banked
 14958  004444  51AE               	movf	UpdateCfList@i& (0+255),w,b
 14959  004446  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14960  004448  6F60               	movwf	___wmul@multiplier& (0+255),b
 14961  00444A  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 14962  00444C  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14963  00444E  0E00               	movlw	0
 14964  004450  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14965  004452  0E0E               	movlw	14
 14966  004454  6F62               	movwf	___wmul@multiplicand& (0+255),b
 14967  004456  EC90  F046         	call	___wmul	;wreg free
 14968  00445A  0E05               	movlw	5
 14969  00445C  0100               	movlb	0	; () banked
 14970  00445E  2760               	addwf	?___wmul& (0+255),f,b
 14971  004460  0E00               	movlw	0
 14972  004462  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 14973  004464  0E00               	movlw	low _Channels
 14974  004466  2560               	addwf	?___wmul& (0+255),w,b
 14975  004468  6ED9               	movwf	fsr2l,c
 14976  00446A  0E04               	movlw	high _Channels
 14977  00446C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 14978  00446E  6EDA               	movwf	fsr2h,c
 14979  004470  0104               	movlb	4	; () banked
 14980  004472  90DF               	bcf	223,0,c
 14981  004474  92DF               	bcf	223,1,c
 14982  004476  94DF               	bcf	223,2,c
 14983  004478  96DF               	bcf	223,3,c
 14984                           
 14985                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 14986  00447A  0100               	movlb	0	; () banked
 14987  00447C  51AE               	movf	UpdateCfList@i& (0+255),w,b
 14988  00447E  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14989  004480  6F60               	movwf	___wmul@multiplier& (0+255),b
 14990  004482  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 14991  004484  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14992  004486  0E00               	movlw	0
 14993  004488  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14994  00448A  0E0E               	movlw	14
 14995  00448C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 14996  00448E  EC90  F046         	call	___wmul	;wreg free
 14997  004492  0E06               	movlw	6
 14998  004494  0100               	movlb	0	; () banked
 14999  004496  2760               	addwf	?___wmul& (0+255),f,b
 15000  004498  0E00               	movlw	0
 15001  00449A  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 15002  00449C  0E00               	movlw	low _Channels
 15003  00449E  2560               	addwf	?___wmul& (0+255),w,b
 15004  0044A0  6ED9               	movwf	fsr2l,c
 15005  0044A2  0E04               	movlw	high _Channels
 15006  0044A4  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 15007  0044A6  6EDA               	movwf	fsr2h,c
 15008  0044A8  0EE7               	movlw	231
 15009  0044AA  6EDE               	movwf	postinc2,c
 15010  0044AC  0E03               	movlw	3
 15011  0044AE  6EDD               	movwf	postdec2,c
 15012                           
 15013                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 15014  0044B0  51AE               	movf	UpdateCfList@i& (0+255),w,b
 15015  0044B2  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 15016  0044B4  6F60               	movwf	___wmul@multiplier& (0+255),b
 15017  0044B6  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 15018  0044B8  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 15019  0044BA  0E00               	movlw	0
 15020  0044BC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15021  0044BE  0E0E               	movlw	14
 15022  0044C0  6F62               	movwf	___wmul@multiplicand& (0+255),b
 15023  0044C2  EC90  F046         	call	___wmul	;wreg free
 15024  0044C6  0E0D               	movlw	13
 15025  0044C8  0100               	movlb	0	; () banked
 15026  0044CA  2760               	addwf	?___wmul& (0+255),f,b
 15027  0044CC  0E00               	movlw	0
 15028  0044CE  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 15029  0044D0  0E00               	movlw	low _Channels
 15030  0044D2  2560               	addwf	?___wmul& (0+255),w,b
 15031  0044D4  6ED9               	movwf	fsr2l,c
 15032  0044D6  0E04               	movlw	high _Channels
 15033  0044D8  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 15034  0044DA  6EDA               	movwf	fsr2h,c
 15035  0044DC  0EFF               	movlw	255
 15036  0044DE  6EDF               	movwf	indf2,c
 15037                           
 15038                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 15039  0044E0  0E01               	movlw	1
 15040  0044E2  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 15041  0044E4  51AE               	movf	UpdateCfList@i& (0+255),w,b
 15042  0044E6  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 15043  0044E8  EC57  F040         	call	_LORAWAN_SetChannelIdStatus
 15044                           
 15045                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 15046  0044EC  0102               	movlb	2	; () banked
 15047  0044EE  8703               	bsf	(_loRa+3)& (0+255),3,b
 15048                           
 15049                           ; BSR set to: 2
 15050                           ;lorawan_eu.c: 851: }
 15051                           ;lorawan_eu.c: 852: }
 15052  0044F0  D007               	goto	l1164
 15053  0044F2                     l1162:
 15054                           
 15055                           ;lorawan_eu.c: 853: else
 15056                           ;lorawan_eu.c: 854: {
 15057                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 15058                           
 15059                           ; BSR set to: 2
 15060  0044F2  0E00               	movlw	0
 15061  0044F4  0100               	movlb	0	; () banked
 15062  0044F6  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 15063  0044F8  51AE               	movf	UpdateCfList@i& (0+255),w,b
 15064  0044FA  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 15065  0044FC  EC57  F040         	call	_LORAWAN_SetChannelIdStatus
 15066  004500                     l1164:
 15067  004500  0100               	movlb	0	; () banked
 15068  004502  2BAE               	incf	UpdateCfList@i& (0+255),f,b
 15069  004504  D717               	goto	l15393
 15070  004506                     u17790:
 15071                           
 15072                           ; BSR set to: 0
 15073                           ;lorawan_eu.c: 856: }
 15074                           ;lorawan_eu.c: 857: }
 15075                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 15076  004506  0102               	movlb	2	; () banked
 15077  004508  8703               	bsf	(_loRa+3)& (0+255),3,b
 15078  00450A  0012               	return	
 15079  00450C                     __end_of_UpdateCfList:
 15080                           	opt stack 0
 15081                           tosu	equ	0xFFF
 15082                           tosh	equ	0xFFE
 15083                           tosl	equ	0xFFD
 15084                           pclath	equ	0xFFA
 15085                           tblptru	equ	0xFF8
 15086                           tblptrh	equ	0xFF7
 15087                           tblptrl	equ	0xFF6
 15088                           tablat	equ	0xFF5
 15089                           prodh	equ	0xFF4
 15090                           prodl	equ	0xFF3
 15091                           intcon	equ	0xFF2
 15092                           intcon2	equ	0xFF1
 15093                           intcon3	equ	0xFF0
 15094                           postinc0	equ	0xFEE
 15095                           wreg	equ	0xFE8
 15096                           postinc1	equ	0xFE6
 15097                           postdec1	equ	0xFE5
 15098                           plusw1	equ	0xFE3
 15099                           fsr1h	equ	0xFE2
 15100                           fsr1l	equ	0xFE1
 15101                           indf2	equ	0xFDF
 15102                           postinc2	equ	0xFDE
 15103                           postdec2	equ	0xFDD
 15104                           fsr2h	equ	0xFDA
 15105                           fsr2l	equ	0xFD9
 15106                           status	equ	0xFD8
 15107                           
 15108 ;; *************** function _StartReTxTimer *****************
 15109 ;; Defined at:
 15110 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15111 ;; Parameters:    Size  Location     Type
 15112 ;;		None
 15113 ;; Auto vars:     Size  Location     Type
 15114 ;;  minim           4   62[BANK0 ] unsigned long 
 15115 ;;  i               1   66[BANK0 ] unsigned char 
 15116 ;; Return value:  Size  Location     Type
 15117 ;;                  1    wreg      void 
 15118 ;; Registers used:
 15119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15120 ;; Tracked objects:
 15121 ;;		On entry : 0/0
 15122 ;;		On exit  : 0/0
 15123 ;;		Unchanged: 0/0
 15124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15126 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15127 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15128 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;Total ram usage:        9 bytes
 15130 ;; Hardware stack levels used:    1
 15131 ;; Hardware stack levels required when called:   11
 15132 ;; This function calls:
 15133 ;;		_SwTimerSetTimeout
 15134 ;;		_SwTimerStart
 15135 ;;		___lldiv
 15136 ;; This function is called by:
 15137 ;;		_LORAWAN_RxDone
 15138 ;; This function uses a non-reentrant model
 15139 ;;
 15140                           
 15141                           	psect	text74
 15142  004D58                     __ptext74:
 15143                           	opt stack 0
 15144  004D58                     _StartReTxTimer:
 15145                           	opt stack 15
 15146                           
 15147                           ;lorawan_eu.c: 904: uint8_t i;
 15148                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 15149                           
 15150                           ;incstack = 0
 15151  004D58  0100               	movlb	0	; () banked
 15152  004D5A  699E               	setf	StartReTxTimer@minim& (0+255),b
 15153  004D5C  699F               	setf	(StartReTxTimer@minim+1)& (0+255),b
 15154  004D5E  69A0               	setf	(StartReTxTimer@minim+2)& (0+255),b
 15155  004D60  69A1               	setf	(StartReTxTimer@minim+3)& (0+255),b
 15156                           
 15157                           ; BSR set to: 0
 15158                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 15159  004D62  0E00               	movlw	0
 15160  004D64  6FA2               	movwf	StartReTxTimer@i& (0+255),b
 15161  004D66  D07C               	goto	l1181
 15162  004D68                     
 15163                           ;lorawan_eu.c: 908: {
 15164                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 15165                           
 15166                           ; BSR set to: 0
 15167  004D68  0100               	movlb	0	; () banked
 15168  004D6A  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 15169  004D6C  0D0E               	mullw	14
 15170  004D6E  0E04               	movlw	4
 15171  004D70  26F3               	addwf	prodl,f,c
 15172  004D72  0E00               	movlw	0
 15173  004D74  22F4               	addwfc	prodh,f,c
 15174  004D76  0E00               	movlw	low _Channels
 15175  004D78  24F3               	addwf	prodl,w,c
 15176  004D7A  6ED9               	movwf	fsr2l,c
 15177  004D7C  0E04               	movlw	high _Channels
 15178  004D7E  20F4               	addwfc	prodh,w,c
 15179  004D80  6EDA               	movwf	fsr2h,c
 15180  004D82  04DE               	decf	postinc2,w,c
 15181  004D84  A4D8               	btfss	status,2,c
 15182  004D86  D06A               	goto	l1183
 15183                           
 15184                           ; BSR set to: 0
 15185  004D88  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 15186  004D8A  0D0E               	mullw	14
 15187  004D8C  0E08               	movlw	8
 15188  004D8E  26F3               	addwf	prodl,f,c
 15189  004D90  0E00               	movlw	0
 15190  004D92  22F4               	addwfc	prodh,f,c
 15191  004D94  0E00               	movlw	low _Channels
 15192  004D96  24F3               	addwf	prodl,w,c
 15193  004D98  6ED9               	movwf	fsr2l,c
 15194  004D9A  0E04               	movlw	high _Channels
 15195  004D9C  20F4               	addwfc	prodh,w,c
 15196  004D9E  6EDA               	movwf	fsr2h,c
 15197  004DA0  50DE               	movf	postinc2,w,c
 15198  004DA2  10DE               	iorwf	postinc2,w,c
 15199  004DA4  10DE               	iorwf	postinc2,w,c
 15200  004DA6  10DE               	iorwf	postinc2,w,c
 15201  004DA8  B4D8               	btfsc	status,2,c
 15202  004DAA  D058               	goto	l1183
 15203                           
 15204                           ; BSR set to: 0
 15205  004DAC  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 15206  004DAE  0D0E               	mullw	14
 15207  004DB0  0E08               	movlw	8
 15208  004DB2  26F3               	addwf	prodl,f,c
 15209  004DB4  0E00               	movlw	0
 15210  004DB6  22F4               	addwfc	prodh,f,c
 15211  004DB8  0E00               	movlw	low _Channels
 15212  004DBA  24F3               	addwf	prodl,w,c
 15213  004DBC  6ED9               	movwf	fsr2l,c
 15214  004DBE  0E04               	movlw	high _Channels
 15215  004DC0  20F4               	addwfc	prodh,w,c
 15216  004DC2  6EDA               	movwf	fsr2h,c
 15217  004DC4  50DE               	movf	postinc2,w,c
 15218  004DC6  5D9E               	subwf	StartReTxTimer@minim& (0+255),w,b
 15219  004DC8  50DE               	movf	postinc2,w,c
 15220  004DCA  599F               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 15221  004DCC  50DE               	movf	postinc2,w,c
 15222  004DCE  59A0               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 15223  004DD0  50DE               	movf	postinc2,w,c
 15224  004DD2  59A1               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 15225  004DD4  A0D8               	btfss	status,0,c
 15226  004DD6  D042               	goto	l1183
 15227                           
 15228                           ; BSR set to: 0
 15229  004DD8  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 15230  004DDA  0D0E               	mullw	14
 15231  004DDC  0E05               	movlw	5
 15232  004DDE  26F3               	addwf	prodl,f,c
 15233  004DE0  0E00               	movlw	0
 15234  004DE2  22F4               	addwfc	prodh,f,c
 15235  004DE4  0E00               	movlw	low _Channels
 15236  004DE6  24F3               	addwf	prodl,w,c
 15237  004DE8  6ED9               	movwf	fsr2l,c
 15238  004DEA  0E04               	movlw	high _Channels
 15239  004DEC  20F4               	addwfc	prodh,w,c
 15240  004DEE  6EDA               	movwf	fsr2h,c
 15241  004DF0  0104               	movlb	4	; () banked
 15242  004DF2  50DF               	movf	223,w,c
 15243  004DF4  0B0F               	andlw	15
 15244  004DF6  0100               	movlb	0	; () banked
 15245  004DF8  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 15246  004DFA  519A               	movf	??_StartReTxTimer& (0+255),w,b
 15247  004DFC  0102               	movlb	2	; () banked
 15248  004DFE  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 15249  004E00  A0D8               	btfss	status,0,c
 15250  004E02  D02C               	goto	l1183
 15251                           
 15252                           ; BSR set to: 2
 15253  004E04  0100               	movlb	0	; () banked
 15254  004E06  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 15255  004E08  0D0E               	mullw	14
 15256  004E0A  0E05               	movlw	5
 15257  004E0C  26F3               	addwf	prodl,f,c
 15258  004E0E  0E00               	movlw	0
 15259  004E10  22F4               	addwfc	prodh,f,c
 15260  004E12  0E00               	movlw	low _Channels
 15261  004E14  24F3               	addwf	prodl,w,c
 15262  004E16  6ED9               	movwf	fsr2l,c
 15263  004E18  0E04               	movlw	high _Channels
 15264  004E1A  20F4               	addwfc	prodh,w,c
 15265  004E1C  6EDA               	movwf	fsr2h,c
 15266  004E1E  0104               	movlb	4	; () banked
 15267  004E20  38DF               	swapf	223,w,c
 15268  004E22  0B0F               	andlw	15
 15269  004E24  0100               	movlb	0	; () banked
 15270  004E26  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 15271  004E28  0102               	movlb	2	; () banked
 15272  004E2A  51DF               	movf	(_loRa+223)& (0+255),w,b
 15273  004E2C  0100               	movlb	0	; () banked
 15274  004E2E  5D9A               	subwf	??_StartReTxTimer& (0+255),w,b
 15275  004E30  A0D8               	btfss	status,0,c
 15276  004E32  D014               	goto	l1183
 15277                           
 15278                           ; BSR set to: 0
 15279                           ;lorawan_eu.c: 910: {
 15280                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 15281  004E34  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 15282  004E36  0D0E               	mullw	14
 15283  004E38  0E08               	movlw	8
 15284  004E3A  26F3               	addwf	prodl,f,c
 15285  004E3C  0E00               	movlw	0
 15286  004E3E  22F4               	addwfc	prodh,f,c
 15287  004E40  0E00               	movlw	low _Channels
 15288  004E42  24F3               	addwf	prodl,w,c
 15289  004E44  6ED9               	movwf	fsr2l,c
 15290  004E46  0E04               	movlw	high _Channels
 15291  004E48  20F4               	addwfc	prodh,w,c
 15292  004E4A  6EDA               	movwf	fsr2h,c
 15293  004E4C  CFDE F09E          	movff	postinc2,StartReTxTimer@minim
 15294  004E50  CFDE F09F          	movff	postinc2,StartReTxTimer@minim+1
 15295  004E54  CFDE F0A0          	movff	postinc2,StartReTxTimer@minim+2
 15296  004E58  CFDE F0A1          	movff	postinc2,StartReTxTimer@minim+3
 15297  004E5C                     l1183:
 15298                           
 15299                           ; BSR set to: 0
 15300  004E5C  0100               	movlb	0	; () banked
 15301  004E5E  2BA2               	incf	StartReTxTimer@i& (0+255),f,b
 15302  004E60                     l1181:
 15303                           
 15304                           ; BSR set to: 0
 15305                           
 15306                           ; BSR set to: 0
 15307  004E60  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 15308  004E62  0102               	movlb	2	; () banked
 15309  004E64  5DED               	subwf	(_loRa+237)& (0+255),w,b
 15310  004E66  B0D8               	btfsc	status,0,c
 15311  004E68  D77F               	goto	l1182
 15312                           
 15313                           ; BSR set to: 2
 15314                           ;lorawan_eu.c: 912: }
 15315                           ;lorawan_eu.c: 913: }
 15316                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 15317                           
 15318                           ; BSR set to: 2
 15319  004E6A  5102               	movf	(_loRa+2)& (0+255),w,b
 15320  004E6C  0BF0               	andlw	-16
 15321  004E6E  0906               	iorlw	6
 15322  004E70  6F02               	movwf	(_loRa+2)& (0+255),b
 15323                           
 15324                           ; BSR set to: 2
 15325                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 15326  004E72  C09E  F09A         	movff	StartReTxTimer@minim,??_StartReTxTimer
 15327  004E76  C09F  F09B         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 15328  004E7A  C0A0  F09C         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 15329  004E7E  C0A1  F09D         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 15330  004E82  0E0C               	movlw	12
 15331  004E84                     u17885:
 15332  004E84  90D8               	bcf	status,0,c
 15333  004E86  0100               	movlb	0	; () banked
 15334  004E88  379A               	rlcf	??_StartReTxTimer& (0+255),f,b
 15335  004E8A  379B               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 15336  004E8C  379C               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 15337  004E8E  379D               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 15338  004E90  2EE8               	decfsz	wreg,f,c
 15339  004E92  D7F8               	goto	u17885
 15340  004E94  C09A  F060         	movff	??_StartReTxTimer,___lldiv@dividend
 15341  004E98  C09B  F061         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 15342  004E9C  C09C  F062         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 15343  004EA0  C09D  F063         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 15344  004EA4  0E7D               	movlw	125
 15345  004EA6  6F64               	movwf	___lldiv@divisor& (0+255),b
 15346  004EA8  0E00               	movlw	0
 15347  004EAA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 15348  004EAC  0E00               	movlw	0
 15349  004EAE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15350  004EB0  0E00               	movlw	0
 15351  004EB2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15352  004EB4  ECC4  F03B         	call	___lldiv	;wreg free
 15353  004EB8  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 15354  004EBC  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 15355  004EC0  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 15356  004EC4  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 15357  004EC8  0102               	movlb	2	; () banked
 15358  004ECA  51E6               	movf	(_loRa+230)& (0+255),w,b
 15359  004ECC  EC62  F043         	call	_SwTimerSetTimeout
 15360                           
 15361                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 15362  004ED0  0102               	movlb	2	; () banked
 15363  004ED2  51E6               	movf	(_loRa+230)& (0+255),w,b
 15364  004ED4  EC4B  F039         	call	_SwTimerStart
 15365  004ED8  0012               	return		;funcret
 15366  004EDA                     __end_of_StartReTxTimer:
 15367                           	opt stack 0
 15368                           tosu	equ	0xFFF
 15369                           tosh	equ	0xFFE
 15370                           tosl	equ	0xFFD
 15371                           pclath	equ	0xFFA
 15372                           tblptru	equ	0xFF8
 15373                           tblptrh	equ	0xFF7
 15374                           tblptrl	equ	0xFF6
 15375                           tablat	equ	0xFF5
 15376                           prodh	equ	0xFF4
 15377                           prodl	equ	0xFF3
 15378                           intcon	equ	0xFF2
 15379                           intcon2	equ	0xFF1
 15380                           intcon3	equ	0xFF0
 15381                           postinc0	equ	0xFEE
 15382                           wreg	equ	0xFE8
 15383                           postinc1	equ	0xFE6
 15384                           postdec1	equ	0xFE5
 15385                           plusw1	equ	0xFE3
 15386                           fsr1h	equ	0xFE2
 15387                           fsr1l	equ	0xFE1
 15388                           indf2	equ	0xFDF
 15389                           postinc2	equ	0xFDE
 15390                           postdec2	equ	0xFDD
 15391                           fsr2h	equ	0xFDA
 15392                           fsr2l	equ	0xFD9
 15393                           status	equ	0xFD8
 15394                           
 15395 ;; *************** function _SetReceptionNotOkState *****************
 15396 ;; Defined at:
 15397 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15398 ;; Parameters:    Size  Location     Type
 15399 ;;		None
 15400 ;; Auto vars:     Size  Location     Type
 15401 ;;		None
 15402 ;; Return value:  Size  Location     Type
 15403 ;;                  1    wreg      void 
 15404 ;; Registers used:
 15405 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15406 ;; Tracked objects:
 15407 ;;		On entry : 0/0
 15408 ;;		On exit  : 0/0
 15409 ;;		Unchanged: 0/0
 15410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15415 ;;Total ram usage:        0 bytes
 15416 ;; Hardware stack levels used:    1
 15417 ;; Hardware stack levels required when called:   14
 15418 ;; This function calls:
 15419 ;;		_LORAWAN_EnterContinuousReceive
 15420 ;;		_RxData
 15421 ;; This function is called by:
 15422 ;;		_LORAWAN_RxDone
 15423 ;; This function uses a non-reentrant model
 15424 ;;
 15425                           
 15426                           	psect	text75
 15427  00788E                     __ptext75:
 15428                           	opt stack 0
 15429  00788E                     _SetReceptionNotOkState:
 15430                           	opt stack 12
 15431                           
 15432                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 15433                           
 15434                           ;incstack = 0
 15435  00788E  0102               	movlb	2	; () banked
 15436  007890  5102               	movf	(_loRa+2)& (0+255),w,b
 15437  007892  0B0F               	andlw	15
 15438  007894  0A05               	xorlw	5
 15439  007896  B4D8               	btfsc	status,2,c
 15440  007898  D008               	goto	u18170
 15441                           
 15442                           ; BSR set to: 2
 15443  00789A  5102               	movf	(_loRa+2)& (0+255),w,b
 15444  00789C  0B0F               	andlw	15
 15445  00789E  0A03               	xorlw	3
 15446  0078A0  A4D8               	btfss	status,2,c
 15447  0078A2  D029               	goto	l2089
 15448                           
 15449                           ; BSR set to: 2
 15450  0078A4  51F1               	movf	(_loRa+241)& (0+255),w,b
 15451  0078A6  B4D8               	btfsc	status,2,c
 15452  0078A8  D026               	goto	l2089
 15453  0078AA                     u18170:
 15454                           
 15455                           ; BSR set to: 2
 15456                           ;lorawan.c: 2000: {
 15457                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 15458  0078AA  9100               	bcf	_loRa& (0+255),0,b
 15459                           
 15460                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 15461  0078AC  9102               	bcf	(_loRa+2)& (0+255),0,b
 15462  0078AE  9302               	bcf	(_loRa+2)& (0+255),1,b
 15463  0078B0  9502               	bcf	(_loRa+2)& (0+255),2,b
 15464  0078B2  9702               	bcf	(_loRa+2)& (0+255),3,b
 15465                           
 15466                           ; BSR set to: 2
 15467                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 15468  0078B4  5112               	movf	(_loRa+18)& (0+255),w,b
 15469  0078B6  A4D8               	btfss	status,2,c
 15470  0078B8  D01C               	goto	u18209
 15471                           
 15472                           ; BSR set to: 2
 15473  0078BA  0101               	movlb	1	; () banked
 15474  0078BC  5104               	movf	_rxPayload& (0+255),w,b
 15475  0078BE  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 15476  0078C0  B4D8               	btfsc	status,2,c
 15477  0078C2  D017               	goto	u18209
 15478                           
 15479                           ; BSR set to: 1
 15480                           ;lorawan.c: 2005: {
 15481                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 15482  0078C4  0102               	movlb	2	; () banked
 15483  0078C6  9B00               	bcf	_loRa& (0+255),5,b
 15484                           
 15485                           ; BSR set to: 2
 15486                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 15487  0078C8  0E00               	movlw	0
 15488  0078CA  0100               	movlb	0	; () banked
 15489  0078CC  6F60               	movwf	RxData@pData& (0+255),b
 15490  0078CE  0E00               	movlw	0
 15491  0078D0  6F61               	movwf	(RxData@pData+1)& (0+255),b
 15492  0078D2  0E00               	movlw	0
 15493  0078D4  6F62               	movwf	RxData@dataLength& (0+255),b
 15494  0078D6  0E00               	movlw	0
 15495  0078D8  6F63               	movwf	RxData@status& (0+255),b
 15496  0078DA  D801               	call	u18208
 15497  0078DC  D00A               	goto	u18209
 15498  0078DE                     u18208:
 15499  0078DE  0005               	push	
 15500  0078E0  6EFA               	movwf	pclath,c
 15501  0078E2  0101               	movlb	1	; () banked
 15502  0078E4  5104               	movf	_rxPayload& (0+255),w,b
 15503  0078E6  6EFD               	movwf	tosl,c
 15504  0078E8  5105               	movf	(_rxPayload+1)& (0+255),w,b
 15505  0078EA  6EFE               	movwf	tosh,c
 15506  0078EC  6AFF               	clrf	tosu,c
 15507  0078EE  50FA               	movf	pclath,w,c
 15508  0078F0  0012               	return		;indir
 15509  0078F2                     u18209:
 15510                           
 15511                           ;lorawan.c: 2008: }
 15512                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 15513  0078F2  0102               	movlb	2	; () banked
 15514  0078F4  9303               	bcf	(_loRa+3)& (0+255),1,b
 15515  0078F6                     l2089:
 15516                           
 15517                           ; BSR set to: 2
 15518                           ;lorawan.c: 2010: }
 15519                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 15520                           
 15521                           ; BSR set to: 2
 15522  0078F6  0E02               	movlw	2
 15523  0078F8  1912               	xorwf	(_loRa+18)& (0+255),w,b
 15524  0078FA  A4D8               	btfss	status,2,c
 15525  0078FC  0012               	return	
 15526                           
 15527                           ; BSR set to: 2
 15528                           ;lorawan.c: 2013: {
 15529                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 15530  0078FE  5102               	movf	(_loRa+2)& (0+255),w,b
 15531  007900  0BF0               	andlw	-16
 15532  007902  0909               	iorlw	9
 15533  007904  6F02               	movwf	(_loRa+2)& (0+255),b
 15534                           
 15535                           ; BSR set to: 2
 15536                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 15537  007906  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 15538  00790A  0012               	return	
 15539  00790C                     __end_of_SetReceptionNotOkState:
 15540                           	opt stack 0
 15541                           tosu	equ	0xFFF
 15542                           tosh	equ	0xFFE
 15543                           tosl	equ	0xFFD
 15544                           pclath	equ	0xFFA
 15545                           tblptru	equ	0xFF8
 15546                           tblptrh	equ	0xFF7
 15547                           tblptrl	equ	0xFF6
 15548                           tablat	equ	0xFF5
 15549                           prodh	equ	0xFF4
 15550                           prodl	equ	0xFF3
 15551                           intcon	equ	0xFF2
 15552                           intcon2	equ	0xFF1
 15553                           intcon3	equ	0xFF0
 15554                           postinc0	equ	0xFEE
 15555                           wreg	equ	0xFE8
 15556                           postinc1	equ	0xFE6
 15557                           postdec1	equ	0xFE5
 15558                           plusw1	equ	0xFE3
 15559                           fsr1h	equ	0xFE2
 15560                           fsr1l	equ	0xFE1
 15561                           indf2	equ	0xFDF
 15562                           postinc2	equ	0xFDE
 15563                           postdec2	equ	0xFDD
 15564                           fsr2h	equ	0xFDA
 15565                           fsr2l	equ	0xFD9
 15566                           status	equ	0xFD8
 15567                           
 15568 ;; *************** function _SetJoinFailState *****************
 15569 ;; Defined at:
 15570 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15571 ;; Parameters:    Size  Location     Type
 15572 ;;		None
 15573 ;; Auto vars:     Size  Location     Type
 15574 ;;		None
 15575 ;; Return value:  Size  Location     Type
 15576 ;;                  1    wreg      void 
 15577 ;; Registers used:
 15578 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15579 ;; Tracked objects:
 15580 ;;		On entry : 0/0
 15581 ;;		On exit  : 0/0
 15582 ;;		Unchanged: 0/0
 15583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15588 ;;Total ram usage:        0 bytes
 15589 ;; Hardware stack levels used:    1
 15590 ;; Hardware stack levels required when called:    8
 15591 ;; This function calls:
 15592 ;;		_RxJoinResponse
 15593 ;; This function is called by:
 15594 ;;		_LORAWAN_RxTimeout
 15595 ;;		_LORAWAN_RxDone
 15596 ;; This function uses a non-reentrant model
 15597 ;;
 15598                           
 15599                           	psect	text76
 15600  0089FA                     __ptext76:
 15601                           	opt stack 0
 15602  0089FA                     _SetJoinFailState:
 15603                           	opt stack 18
 15604                           
 15605                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 15606                           
 15607                           ;incstack = 0
 15608  0089FA  0102               	movlb	2	; () banked
 15609  0089FC  9902               	bcf	(_loRa+2)& (0+255),4,b
 15610                           
 15611                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 15612  0089FE  9500               	bcf	_loRa& (0+255),2,b
 15613                           
 15614                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 15615  008A00  9102               	bcf	(_loRa+2)& (0+255),0,b
 15616  008A02  9302               	bcf	(_loRa+2)& (0+255),1,b
 15617  008A04  9502               	bcf	(_loRa+2)& (0+255),2,b
 15618  008A06  9702               	bcf	(_loRa+2)& (0+255),3,b
 15619                           
 15620                           ; BSR set to: 2
 15621                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 15622  008A08  0101               	movlb	1	; () banked
 15623  008A0A  5106               	movf	(_rxPayload+2)& (0+255),w,b
 15624  008A0C  1107               	iorwf	(_rxPayload+3)& (0+255),w,b
 15625  008A0E  B4D8               	btfsc	status,2,c
 15626  008A10  0012               	return	
 15627                           
 15628                           ; BSR set to: 1
 15629                           ;lorawan.c: 1110: {
 15630                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 15631  008A12  D801               	call	u17748
 15632  008A14  0012               	return	
 15633  008A16                     u17748:
 15634  008A16  0005               	push	
 15635  008A18  6EFA               	movwf	pclath,c
 15636  008A1A  5106               	movf	(_rxPayload+2)& (0+255),w,b
 15637  008A1C  6EFD               	movwf	tosl,c
 15638  008A1E  5107               	movf	(_rxPayload+3)& (0+255),w,b
 15639  008A20  6EFE               	movwf	tosh,c
 15640  008A22  6AFF               	clrf	tosu,c
 15641  008A24  50FA               	movf	pclath,w,c
 15642  008A26  0E00               	movlw	0
 15643  008A28  0012               	return		;indir
 15644  008A2A                     __end_of_SetJoinFailState:
 15645                           	opt stack 0
 15646                           tosu	equ	0xFFF
 15647                           tosh	equ	0xFFE
 15648                           tosl	equ	0xFFD
 15649                           pclath	equ	0xFFA
 15650                           tblptru	equ	0xFF8
 15651                           tblptrh	equ	0xFF7
 15652                           tblptrl	equ	0xFF6
 15653                           tablat	equ	0xFF5
 15654                           prodh	equ	0xFF4
 15655                           prodl	equ	0xFF3
 15656                           intcon	equ	0xFF2
 15657                           intcon2	equ	0xFF1
 15658                           intcon3	equ	0xFF0
 15659                           postinc0	equ	0xFEE
 15660                           wreg	equ	0xFE8
 15661                           postinc1	equ	0xFE6
 15662                           postdec1	equ	0xFE5
 15663                           plusw1	equ	0xFE3
 15664                           fsr1h	equ	0xFE2
 15665                           fsr1l	equ	0xFE1
 15666                           indf2	equ	0xFDF
 15667                           postinc2	equ	0xFDE
 15668                           postdec2	equ	0xFDD
 15669                           fsr2h	equ	0xFDA
 15670                           fsr2l	equ	0xFD9
 15671                           status	equ	0xFD8
 15672                           
 15673 ;; *************** function _RxJoinResponse *****************
 15674 ;; Defined at:
 15675 ;;		line 77 in file "main.c"
 15676 ;; Parameters:    Size  Location     Type
 15677 ;;  status          1    wreg     unsigned char 
 15678 ;; Auto vars:     Size  Location     Type
 15679 ;;  status          1    0[COMRAM] unsigned char 
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  1    wreg      void 
 15682 ;; Registers used:
 15683 ;;		wreg
 15684 ;; Tracked objects:
 15685 ;;		On entry : 0/0
 15686 ;;		On exit  : 0/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15693 ;;Total ram usage:        0 bytes
 15694 ;; Hardware stack levels used:    1
 15695 ;; Hardware stack levels required when called:    7
 15696 ;; This function calls:
 15697 ;;		Nothing
 15698 ;; This function is called by:
 15699 ;;		_main
 15700 ;;		_SetJoinFailState
 15701 ;;		_UpdateJoinSuccessState
 15702 ;; This function uses a non-reentrant model
 15703 ;;
 15704                           
 15705                           	psect	text77
 15706  00930A                     __ptext77:
 15707                           	opt stack 0
 15708  00930A                     _RxJoinResponse:
 15709                           	opt stack 20
 15710                           
 15711                           ;incstack = 0
 15712  00930A  0012               	return		;funcret
 15713  00930C                     __end_of_RxJoinResponse:
 15714                           	opt stack 0
 15715                           tosu	equ	0xFFF
 15716                           tosh	equ	0xFFE
 15717                           tosl	equ	0xFFD
 15718                           pclath	equ	0xFFA
 15719                           tblptru	equ	0xFF8
 15720                           tblptrh	equ	0xFF7
 15721                           tblptrl	equ	0xFF6
 15722                           tablat	equ	0xFF5
 15723                           prodh	equ	0xFF4
 15724                           prodl	equ	0xFF3
 15725                           intcon	equ	0xFF2
 15726                           intcon2	equ	0xFF1
 15727                           intcon3	equ	0xFF0
 15728                           postinc0	equ	0xFEE
 15729                           wreg	equ	0xFE8
 15730                           postinc1	equ	0xFE6
 15731                           postdec1	equ	0xFE5
 15732                           plusw1	equ	0xFE3
 15733                           fsr1h	equ	0xFE2
 15734                           fsr1l	equ	0xFE1
 15735                           indf2	equ	0xFDF
 15736                           postinc2	equ	0xFDE
 15737                           postdec2	equ	0xFDD
 15738                           fsr2h	equ	0xFDA
 15739                           fsr2l	equ	0xFD9
 15740                           status	equ	0xFD8
 15741                           
 15742 ;; *************** function _MacExecuteCommands *****************
 15743 ;; Defined at:
 15744 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15745 ;; Parameters:    Size  Location     Type
 15746 ;;  buffer          2   80[BANK0 ] PTR unsigned char 
 15747 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15748 ;;  fOptsLen        1   82[BANK0 ] unsigned char 
 15749 ;; Auto vars:     Size  Location     Type
 15750 ;;  ptr             2   86[BANK0 ] PTR unsigned char 
 15751 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15752 ;;  done            1   85[BANK0 ] unsigned char 
 15753 ;; Return value:  Size  Location     Type
 15754 ;;                  2   80[BANK0 ] PTR unsigned char 
 15755 ;; Registers used:
 15756 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15757 ;; Tracked objects:
 15758 ;;		On entry : 0/0
 15759 ;;		On exit  : 0/0
 15760 ;;		Unchanged: 0/0
 15761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15762 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15763 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15764 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15765 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15766 ;;Total ram usage:        8 bytes
 15767 ;; Hardware stack levels used:    1
 15768 ;; Hardware stack levels required when called:   11
 15769 ;; This function calls:
 15770 ;;		_ExecuteDevStatus
 15771 ;;		_ExecuteDutyCycle
 15772 ;;		_ExecuteLinkAdr
 15773 ;;		_ExecuteLinkCheck
 15774 ;;		_ExecuteNewChannel
 15775 ;;		_ExecuteRxParamSetupReq
 15776 ;;		_ExecuteRxTimingSetup
 15777 ;; This function is called by:
 15778 ;;		_LORAWAN_RxDone
 15779 ;; This function uses a non-reentrant model
 15780 ;;
 15781                           
 15782                           	psect	text78
 15783  002F4E                     __ptext78:
 15784                           	opt stack 0
 15785  002F4E                     _MacExecuteCommands:
 15786                           	opt stack 15
 15787                           
 15788                           ;lorawan.c: 1577: bool done = 0;
 15789                           
 15790                           ;incstack = 0
 15791  002F4E  0E00               	movlw	0
 15792  002F50  0100               	movlb	0	; () banked
 15793  002F52  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;lorawan.c: 1578: uint8_t *ptr;
 15797                           ;lorawan.c: 1579: ptr = buffer;
 15798  002F54  C0B0  F0B6         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 15799  002F58  C0B1  F0B7         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 15800                           
 15801                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 15802  002F5C  D15A               	goto	l2001
 15803  002F5E                     
 15804                           ; BSR set to: 0
 15805                           ;lorawan.c: 1581: {
 15806                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 15807                           
 15808                           ; BSR set to: 0
 15809  002F5E  0102               	movlb	2	; () banked
 15810  002F60  51A7               	movf	(_loRa+167)& (0+255),w,b
 15811  002F62  0D02               	mullw	2
 15812  002F64  0E00               	movlw	low _loRa
 15813  002F66  0100               	movlb	0	; () banked
 15814  002F68  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 15815  002F6A  0E02               	movlw	high _loRa
 15816  002F6C  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15817  002F6E  0EA8               	movlw	168
 15818  002F70  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15819  002F72  0E00               	movlw	0
 15820  002F74  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15821  002F76  50F3               	movf	prodl,w,c
 15822  002F78  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15823  002F7A  50F4               	movf	prodh,w,c
 15824  002F7C  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15825  002F7E  0E01               	movlw	1
 15826  002F80  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 15827  002F82  6ED9               	movwf	fsr2l,c
 15828  002F84  0E00               	movlw	0
 15829  002F86  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15830  002F88  6EDA               	movwf	fsr2h,c
 15831  002F8A  0102               	movlb	2	; () banked
 15832  002F8C  90DF               	bcf	indf2,0,c
 15833                           
 15834                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 15835  002F8E  51A7               	movf	(_loRa+167)& (0+255),w,b
 15836  002F90  0D02               	mullw	2
 15837  002F92  0E00               	movlw	low _loRa
 15838  002F94  0100               	movlb	0	; () banked
 15839  002F96  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 15840  002F98  0E02               	movlw	high _loRa
 15841  002F9A  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15842  002F9C  0EA8               	movlw	168
 15843  002F9E  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15844  002FA0  0E00               	movlw	0
 15845  002FA2  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15846  002FA4  50F3               	movf	prodl,w,c
 15847  002FA6  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15848  002FA8  50F4               	movf	prodh,w,c
 15849  002FAA  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15850  002FAC  0E01               	movlw	1
 15851  002FAE  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 15852  002FB0  6ED9               	movwf	fsr2l,c
 15853  002FB2  0E00               	movlw	0
 15854  002FB4  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15855  002FB6  6EDA               	movwf	fsr2h,c
 15856  002FB8  0102               	movlb	2	; () banked
 15857  002FBA  92DF               	bcf	indf2,1,c
 15858                           
 15859                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 15860  002FBC  51A7               	movf	(_loRa+167)& (0+255),w,b
 15861  002FBE  0D02               	mullw	2
 15862  002FC0  0E00               	movlw	low _loRa
 15863  002FC2  0100               	movlb	0	; () banked
 15864  002FC4  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 15865  002FC6  0E02               	movlw	high _loRa
 15866  002FC8  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15867  002FCA  0EA8               	movlw	168
 15868  002FCC  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15869  002FCE  0E00               	movlw	0
 15870  002FD0  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15871  002FD2  50F3               	movf	prodl,w,c
 15872  002FD4  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15873  002FD6  50F4               	movf	prodh,w,c
 15874  002FD8  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15875  002FDA  0E01               	movlw	1
 15876  002FDC  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 15877  002FDE  6ED9               	movwf	fsr2l,c
 15878  002FE0  0E00               	movlw	0
 15879  002FE2  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15880  002FE4  6EDA               	movwf	fsr2h,c
 15881  002FE6  0102               	movlb	2	; () banked
 15882  002FE8  94DF               	bcf	indf2,2,c
 15883                           
 15884                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 15885  002FEA  51A7               	movf	(_loRa+167)& (0+255),w,b
 15886  002FEC  0D02               	mullw	2
 15887  002FEE  0E00               	movlw	low _loRa
 15888  002FF0  0100               	movlb	0	; () banked
 15889  002FF2  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 15890  002FF4  0E02               	movlw	high _loRa
 15891  002FF6  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15892  002FF8  0EA8               	movlw	168
 15893  002FFA  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15894  002FFC  0E00               	movlw	0
 15895  002FFE  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15896  003000  50F3               	movf	prodl,w,c
 15897  003002  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15898  003004  50F4               	movf	prodh,w,c
 15899  003006  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15900  003008  0E01               	movlw	1
 15901  00300A  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 15902  00300C  6ED9               	movwf	fsr2l,c
 15903  00300E  0E00               	movlw	0
 15904  003010  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15905  003012  6EDA               	movwf	fsr2h,c
 15906  003014  0102               	movlb	2	; () banked
 15907  003016  96DF               	bcf	indf2,3,c
 15908                           
 15909                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 15910  003018  51A7               	movf	(_loRa+167)& (0+255),w,b
 15911  00301A  0D02               	mullw	2
 15912  00301C  0E00               	movlw	low _loRa
 15913  00301E  0100               	movlb	0	; () banked
 15914  003020  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 15915  003022  0E02               	movlw	high _loRa
 15916  003024  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15917  003026  0EA8               	movlw	168
 15918  003028  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15919  00302A  0E00               	movlw	0
 15920  00302C  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15921  00302E  50F3               	movf	prodl,w,c
 15922  003030  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15923  003032  50F4               	movf	prodh,w,c
 15924  003034  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15925  003036  0E01               	movlw	1
 15926  003038  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 15927  00303A  6ED9               	movwf	fsr2l,c
 15928  00303C  0E00               	movlw	0
 15929  00303E  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15930  003040  6EDA               	movwf	fsr2h,c
 15931  003042  0102               	movlb	2	; () banked
 15932  003044  98DF               	bcf	indf2,4,c
 15933                           
 15934                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 15935  003046  51A7               	movf	(_loRa+167)& (0+255),w,b
 15936  003048  0D02               	mullw	2
 15937  00304A  0E00               	movlw	low _loRa
 15938  00304C  0100               	movlb	0	; () banked
 15939  00304E  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 15940  003050  0E02               	movlw	high _loRa
 15941  003052  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15942  003054  0EA8               	movlw	168
 15943  003056  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15944  003058  0E00               	movlw	0
 15945  00305A  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15946  00305C  50F3               	movf	prodl,w,c
 15947  00305E  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15948  003060  50F4               	movf	prodh,w,c
 15949  003062  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15950  003064  0E01               	movlw	1
 15951  003066  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 15952  003068  6ED9               	movwf	fsr2l,c
 15953  00306A  0E00               	movlw	0
 15954  00306C  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15955  00306E  6EDA               	movwf	fsr2h,c
 15956  003070  0102               	movlb	2	; () banked
 15957  003072  9ADF               	bcf	indf2,5,c
 15958                           
 15959                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 15960  003074  51A7               	movf	(_loRa+167)& (0+255),w,b
 15961  003076  0D02               	mullw	2
 15962  003078  0E00               	movlw	low _loRa
 15963  00307A  0100               	movlb	0	; () banked
 15964  00307C  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 15965  00307E  0E02               	movlw	high _loRa
 15966  003080  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15967  003082  0EA8               	movlw	168
 15968  003084  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15969  003086  0E00               	movlw	0
 15970  003088  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15971  00308A  50F3               	movf	prodl,w,c
 15972  00308C  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15973  00308E  50F4               	movf	prodh,w,c
 15974  003090  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15975  003092  0E01               	movlw	1
 15976  003094  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 15977  003096  6ED9               	movwf	fsr2l,c
 15978  003098  0E00               	movlw	0
 15979  00309A  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15980  00309C  6EDA               	movwf	fsr2h,c
 15981  00309E  0102               	movlb	2	; () banked
 15982  0030A0  9CDF               	bcf	indf2,6,c
 15983                           
 15984                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 15985  0030A2  51A7               	movf	(_loRa+167)& (0+255),w,b
 15986  0030A4  0D02               	mullw	2
 15987  0030A6  0E00               	movlw	low _loRa
 15988  0030A8  0100               	movlb	0	; () banked
 15989  0030AA  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 15990  0030AC  0E02               	movlw	high _loRa
 15991  0030AE  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15992  0030B0  0EA8               	movlw	168
 15993  0030B2  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15994  0030B4  0E00               	movlw	0
 15995  0030B6  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15996  0030B8  50F3               	movf	prodl,w,c
 15997  0030BA  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 15998  0030BC  50F4               	movf	prodh,w,c
 15999  0030BE  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 16000  0030C0  0E01               	movlw	1
 16001  0030C2  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 16002  0030C4  6ED9               	movwf	fsr2l,c
 16003  0030C6  0E00               	movlw	0
 16004  0030C8  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 16005  0030CA  6EDA               	movwf	fsr2h,c
 16006  0030CC  0102               	movlb	2	; () banked
 16007  0030CE  9EDF               	bcf	indf2,7,c
 16008                           
 16009                           ; BSR set to: 2
 16010                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 16011  0030D0  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 16012  0030D4  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 16013  0030D8  51A7               	movf	(_loRa+167)& (0+255),w,b
 16014  0030DA  0D02               	mullw	2
 16015  0030DC  0EA8               	movlw	low (_loRa+168)
 16016  0030DE  24F3               	addwf	prodl,w,c
 16017  0030E0  6EE9               	movwf	fsr0l,c
 16018  0030E2  0E02               	movlw	high (_loRa+168)
 16019  0030E4  20F4               	addwfc	prodh,w,c
 16020  0030E6  6EEA               	movwf	fsr0h,c
 16021  0030E8  CFDF FFEF          	movff	indf2,indf0
 16022                           
 16023                           ;lorawan.c: 1595: switch (*ptr ++)
 16024  0030EC  D064               	goto	l1991
 16025  0030EE                     
 16026                           ;lorawan.c: 1598: {
 16027                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 16028                           
 16029                           ; BSR set to: 2
 16030  0030EE  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 16031  0030F2  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 16032  0030F6  ECCC  F044         	call	_ExecuteLinkCheck
 16033  0030FA  C060  F0B6         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 16034  0030FE  C061  F0B7         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 16035  003102  D04D               	goto	l15657
 16036  003104                     
 16037                           ;lorawan.c: 1605: {
 16038                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 16039                           
 16040                           ; BSR set to: 2
 16041  003104  C0B6  F06F         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 16042  003108  C0B7  F070         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 16043  00310C  EC22  F019         	call	_ExecuteLinkAdr	;wreg free
 16044  003110  C06F  F0B6         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 16045  003114  C070  F0B7         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 16046                           
 16047                           ;lorawan.c: 1607: } break;
 16048  003118  D06C               	goto	l1993
 16049  00311A                     
 16050                           ;lorawan.c: 1610: {
 16051                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 16052  00311A  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 16053  00311E  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 16054  003122  EC5D  F041         	call	_ExecuteDutyCycle	;wreg free
 16055  003126  C060  F0B6         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 16056  00312A  C061  F0B7         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 16057                           
 16058                           ;lorawan.c: 1612: } break;
 16059  00312E  D061               	goto	l1993
 16060  003130                     
 16061                           ;lorawan.c: 1615: {
 16062                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 16063  003130  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 16064  003134  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 16065  003138  EC85  F020         	call	_ExecuteRxParamSetupReq	;wreg free
 16066  00313C  C0A6  F0B6         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 16067  003140  C0A7  F0B7         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 16068                           
 16069                           ;lorawan.c: 1617: } break;
 16070  003144  D056               	goto	l1993
 16071  003146                     
 16072                           ;lorawan.c: 1620: {
 16073                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 16074  003146  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 16075  00314A  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 16076  00314E  EC1F  F049         	call	_ExecuteDevStatus	;wreg free
 16077  003152  C060  F0B6         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 16078  003156  C061  F0B7         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 16079                           
 16080                           ;lorawan.c: 1622: } break;
 16081  00315A  D04B               	goto	l1993
 16082  00315C                     
 16083                           ;lorawan.c: 1625: {
 16084                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 16085  00315C  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 16086  003160  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 16087  003164  EC19  F01D         	call	_ExecuteNewChannel	;wreg free
 16088  003168  C0A6  F0B6         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 16089  00316C  C0A7  F0B7         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 16090                           
 16091                           ;lorawan.c: 1628: } break;
 16092  003170  D040               	goto	l1993
 16093  003172                     
 16094                           ;lorawan.c: 1631: {
 16095                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 16096  003172  C0B6  F067         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 16097  003176  C0B7  F068         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 16098  00317A  EC7C  F046         	call	_ExecuteRxTimingSetup	;wreg free
 16099  00317E  C067  F0B6         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 16100  003182  C068  F0B7         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 16101                           
 16102                           ;lorawan.c: 1633: } break;
 16103  003186  D035               	goto	l1993
 16104  003188                     
 16105                           ;lorawan.c: 1636: {
 16106                           ;lorawan.c: 1637: done = 1;
 16107  003188  0E01               	movlw	1
 16108  00318A  0100               	movlb	0	; () banked
 16109  00318C  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 16110                           
 16111                           ; BSR set to: 0
 16112                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 16113  00318E  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 16114  003190  0D01               	mullw	1
 16115  003192  50F3               	movf	prodl,w,c
 16116  003194  25B0               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 16117  003196  6FB6               	movwf	MacExecuteCommands@ptr& (0+255),b
 16118  003198  50F4               	movf	prodh,w,c
 16119  00319A  21B1               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 16120  00319C  6FB7               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 16121  00319E                     l15657:
 16122                           
 16123                           ; BSR set to: 0
 16124                           ;lorawan.c: 1639: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 16125  00319E  0102               	movlb	2	; () banked
 16126  0031A0  51A7               	movf	(_loRa+167)& (0+255),w,b
 16127  0031A2  0D02               	mullw	2
 16128  0031A4  0EA8               	movlw	low (_loRa+168)
 16129  0031A6  24F3               	addwf	prodl,w,c
 16130  0031A8  6ED9               	movwf	fsr2l,c
 16131  0031AA  0E02               	movlw	high (_loRa+168)
 16132  0031AC  20F4               	addwfc	prodh,w,c
 16133  0031AE  6EDA               	movwf	fsr2h,c
 16134  0031B0  0EFF               	movlw	255
 16135  0031B2  6EDF               	movwf	indf2,c
 16136                           
 16137                           ; BSR set to: 2
 16138                           ;lorawan.c: 1641: }
 16139                           
 16140                           ;lorawan.c: 1640: } break;
 16141  0031B4  D01E               	goto	l1993
 16142  0031B6                     l1991:
 16143                           
 16144                           ; BSR set to: 2
 16145                           
 16146                           ; BSR set to: 2
 16147  0031B6  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 16148  0031BA  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 16149  0031BE  0100               	movlb	0	; () banked
 16150  0031C0  4BB6               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 16151  0031C2  2BB7               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 16152  0031C4  50DF               	movf	indf2,w,c
 16153                           
 16154                           ; Switch size 1, requested type "space"
 16155                           ; Number of cases is 7, Range of values is 2 to 8
 16156                           ; switch strategies available:
 16157                           ; Name         Instructions Cycles
 16158                           ; simple_byte           22    12 (average)
 16159                           ;	Chosen strategy is simple_byte
 16160  0031C6  0A02               	xorlw	2	; case 2
 16161  0031C8  B4D8               	btfsc	status,2,c
 16162  0031CA  D791               	goto	l1992
 16163  0031CC  0A01               	xorlw	1	; case 3
 16164  0031CE  B4D8               	btfsc	status,2,c
 16165  0031D0  D799               	goto	l1994
 16166  0031D2  0A07               	xorlw	7	; case 4
 16167  0031D4  B4D8               	btfsc	status,2,c
 16168  0031D6  D7A1               	goto	l1995
 16169  0031D8  0A01               	xorlw	1	; case 5
 16170  0031DA  B4D8               	btfsc	status,2,c
 16171  0031DC  D7A9               	goto	l1996
 16172  0031DE  0A03               	xorlw	3	; case 6
 16173  0031E0  B4D8               	btfsc	status,2,c
 16174  0031E2  D7B1               	goto	l1997
 16175  0031E4  0A01               	xorlw	1	; case 7
 16176  0031E6  B4D8               	btfsc	status,2,c
 16177  0031E8  D7B9               	goto	l1998
 16178  0031EA  0A0F               	xorlw	15	; case 8
 16179  0031EC  B4D8               	btfsc	status,2,c
 16180  0031EE  D7C1               	goto	l1999
 16181  0031F0  D7CB               	goto	l2000
 16182  0031F2                     l1993:
 16183                           
 16184                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 16185                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 16186                           
 16187                           ; BSR set to: 0
 16188  0031F2  0102               	movlb	2	; () banked
 16189  0031F4  51A7               	movf	(_loRa+167)& (0+255),w,b
 16190  0031F6  0D02               	mullw	2
 16191  0031F8  0EA8               	movlw	low (_loRa+168)
 16192  0031FA  24F3               	addwf	prodl,w,c
 16193  0031FC  6ED9               	movwf	fsr2l,c
 16194  0031FE  0E02               	movlw	high (_loRa+168)
 16195  003200  20F4               	addwfc	prodh,w,c
 16196  003202  6EDA               	movwf	fsr2h,c
 16197  003204  28DE               	incf	postinc2,w,c
 16198  003206  B4D8               	btfsc	status,2,c
 16199  003208  D004               	goto	l2001
 16200                           
 16201                           ; BSR set to: 2
 16202  00320A  0E10               	movlw	16
 16203  00320C  61A7               	cpfslt	(_loRa+167)& (0+255),b
 16204  00320E  D001               	goto	l2001
 16205                           
 16206                           ; BSR set to: 2
 16207                           ;lorawan.c: 1645: {
 16208                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 16209  003210  2BA7               	incf	(_loRa+167)& (0+255),f,b
 16210  003212                     l2001:
 16211                           
 16212                           ; BSR set to: 2
 16213                           
 16214                           ; BSR set to: 2
 16215  003212  0100               	movlb	0	; () banked
 16216  003214  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 16217  003216  0D01               	mullw	1
 16218  003218  C0B0  F0B3         	movff	MacExecuteCommands@buffer,??_MacExecuteCommands
 16219  00321C  C0B1  F0B4         	movff	MacExecuteCommands@buffer+1,??_MacExecuteCommands+1
 16220  003220  50F3               	movf	prodl,w,c
 16221  003222  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 16222  003224  50F4               	movf	prodh,w,c
 16223  003226  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 16224  003228  51B3               	movf	??_MacExecuteCommands& (0+255),w,b
 16225  00322A  5DB6               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 16226  00322C  51B4               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 16227  00322E  59B7               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 16228  003230  B0D8               	btfsc	status,0,c
 16229  003232  D003               	goto	u18290
 16230                           
 16231                           ; BSR set to: 0
 16232  003234  51B5               	movf	MacExecuteCommands@done& (0+255),w,b
 16233  003236  B4D8               	btfsc	status,2,c
 16234  003238  D692               	goto	l1990
 16235  00323A                     u18290:
 16236                           
 16237                           ; BSR set to: 0
 16238                           ;lorawan.c: 1647: }
 16239                           ;lorawan.c: 1648: }
 16240                           ;lorawan.c: 1649: return ptr;
 16241                           
 16242                           ; BSR set to: 0
 16243                           
 16244                           ; BSR set to: 0
 16245  00323A  C0B6  F0B0         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 16246  00323E  C0B7  F0B1         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 16247  003242  0012               	return	
 16248  003244                     __end_of_MacExecuteCommands:
 16249                           	opt stack 0
 16250                           tosu	equ	0xFFF
 16251                           tosh	equ	0xFFE
 16252                           tosl	equ	0xFFD
 16253                           pclath	equ	0xFFA
 16254                           tblptru	equ	0xFF8
 16255                           tblptrh	equ	0xFF7
 16256                           tblptrl	equ	0xFF6
 16257                           tablat	equ	0xFF5
 16258                           prodh	equ	0xFF4
 16259                           prodl	equ	0xFF3
 16260                           intcon	equ	0xFF2
 16261                           intcon2	equ	0xFF1
 16262                           intcon3	equ	0xFF0
 16263                           indf0	equ	0xFEF
 16264                           postinc0	equ	0xFEE
 16265                           fsr0h	equ	0xFEA
 16266                           fsr0l	equ	0xFE9
 16267                           wreg	equ	0xFE8
 16268                           postinc1	equ	0xFE6
 16269                           postdec1	equ	0xFE5
 16270                           plusw1	equ	0xFE3
 16271                           fsr1h	equ	0xFE2
 16272                           fsr1l	equ	0xFE1
 16273                           indf2	equ	0xFDF
 16274                           postinc2	equ	0xFDE
 16275                           postdec2	equ	0xFDD
 16276                           fsr2h	equ	0xFDA
 16277                           fsr2l	equ	0xFD9
 16278                           status	equ	0xFD8
 16279                           
 16280 ;; *************** function _ExecuteRxTimingSetup *****************
 16281 ;; Defined at:
 16282 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16283 ;; Parameters:    Size  Location     Type
 16284 ;;  ptr             2    7[BANK0 ] PTR unsigned char 
 16285 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16286 ;; Auto vars:     Size  Location     Type
 16287 ;;  delay           1    9[BANK0 ] unsigned char 
 16288 ;; Return value:  Size  Location     Type
 16289 ;;                  2    7[BANK0 ] PTR unsigned char 
 16290 ;; Registers used:
 16291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16292 ;; Tracked objects:
 16293 ;;		On entry : 0/0
 16294 ;;		On exit  : 0/0
 16295 ;;		Unchanged: 0/0
 16296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16297 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16300 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16301 ;;Total ram usage:        3 bytes
 16302 ;; Hardware stack levels used:    1
 16303 ;; Hardware stack levels required when called:    9
 16304 ;; This function calls:
 16305 ;;		_UpdateReceiveDelays
 16306 ;; This function is called by:
 16307 ;;		_MacExecuteCommands
 16308 ;; This function uses a non-reentrant model
 16309 ;;
 16310                           
 16311                           	psect	text79
 16312  008CF8                     __ptext79:
 16313                           	opt stack 0
 16314  008CF8                     _ExecuteRxTimingSetup:
 16315                           	opt stack 16
 16316                           
 16317                           ;lorawan.c: 1661: uint8_t delay;
 16318                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 16319                           
 16320                           ; BSR set to: 0
 16321                           ;incstack = 0
 16322  008CF8  C067  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 16323  008CFC  C068  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 16324  008D00  50DF               	movf	indf2,w,c
 16325  008D02  0B0F               	andlw	15
 16326  008D04  0100               	movlb	0	; () banked
 16327  008D06  6F69               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 16328                           
 16329                           ; BSR set to: 0
 16330                           ;lorawan.c: 1664: ptr++;
 16331  008D08  4B67               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 16332  008D0A  2B68               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 16333                           
 16334                           ; BSR set to: 0
 16335                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 16336  008D0C  5169               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 16337  008D0E  ECA6  F043         	call	_UpdateReceiveDelays
 16338                           
 16339                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 16340  008D12  0102               	movlb	2	; () banked
 16341  008D14  8104               	bsf	(_loRa+4)& (0+255),0,b
 16342                           
 16343                           ; BSR set to: 2
 16344                           ;lorawan.c: 1669: return ptr;
 16345  008D16  C067  F067         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 16346  008D1A  C068  F068         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 16347  008D1E  0012               	return	
 16348  008D20                     __end_of_ExecuteRxTimingSetup:
 16349                           	opt stack 0
 16350                           tosu	equ	0xFFF
 16351                           tosh	equ	0xFFE
 16352                           tosl	equ	0xFFD
 16353                           pclath	equ	0xFFA
 16354                           tblptru	equ	0xFF8
 16355                           tblptrh	equ	0xFF7
 16356                           tblptrl	equ	0xFF6
 16357                           tablat	equ	0xFF5
 16358                           prodh	equ	0xFF4
 16359                           prodl	equ	0xFF3
 16360                           intcon	equ	0xFF2
 16361                           intcon2	equ	0xFF1
 16362                           intcon3	equ	0xFF0
 16363                           indf0	equ	0xFEF
 16364                           postinc0	equ	0xFEE
 16365                           fsr0h	equ	0xFEA
 16366                           fsr0l	equ	0xFE9
 16367                           wreg	equ	0xFE8
 16368                           postinc1	equ	0xFE6
 16369                           postdec1	equ	0xFE5
 16370                           plusw1	equ	0xFE3
 16371                           fsr1h	equ	0xFE2
 16372                           fsr1l	equ	0xFE1
 16373                           indf2	equ	0xFDF
 16374                           postinc2	equ	0xFDE
 16375                           postdec2	equ	0xFDD
 16376                           fsr2h	equ	0xFDA
 16377                           fsr2l	equ	0xFD9
 16378                           status	equ	0xFD8
 16379                           
 16380 ;; *************** function _UpdateReceiveDelays *****************
 16381 ;; Defined at:
 16382 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16383 ;; Parameters:    Size  Location     Type
 16384 ;;  delay           1    wreg     unsigned char 
 16385 ;; Auto vars:     Size  Location     Type
 16386 ;;  delay           1    6[BANK0 ] unsigned char 
 16387 ;; Return value:  Size  Location     Type
 16388 ;;                  1    wreg      void 
 16389 ;; Registers used:
 16390 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16391 ;; Tracked objects:
 16392 ;;		On entry : 0/0
 16393 ;;		On exit  : 0/0
 16394 ;;		Unchanged: 0/0
 16395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16397 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16399 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16400 ;;Total ram usage:        1 bytes
 16401 ;; Hardware stack levels used:    1
 16402 ;; Hardware stack levels required when called:    8
 16403 ;; This function calls:
 16404 ;;		___wmul
 16405 ;; This function is called by:
 16406 ;;		_LORAWAN_RxDone
 16407 ;;		_ExecuteRxTimingSetup
 16408 ;; This function uses a non-reentrant model
 16409 ;;
 16410                           
 16411                           	psect	text80
 16412  00874C                     __ptext80:
 16413                           	opt stack 0
 16414  00874C                     _UpdateReceiveDelays:
 16415                           	opt stack 18
 16416                           
 16417                           ; BSR set to: 2
 16418                           ;incstack = 0
 16419                           ;UpdateReceiveDelays@delay stored from wreg
 16420  00874C  0100               	movlb	0	; () banked
 16421  00874E  6F66               	movwf	UpdateReceiveDelays@delay& (0+255),b
 16422                           
 16423                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 16424  008750  C066  F060         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 16425  008754  0100               	movlb	0	; () banked
 16426  008756  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 16427  008758  0E03               	movlw	3
 16428  00875A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16429  00875C  0EE8               	movlw	232
 16430  00875E  6F62               	movwf	___wmul@multiplicand& (0+255),b
 16431  008760  EC90  F046         	call	___wmul	;wreg free
 16432  008764  C060  F294         	movff	?___wmul,_loRa+148
 16433  008768  C061  F295         	movff	?___wmul+1,_loRa+149
 16434                           
 16435                           ;lorawan.c: 2029: if (delay == 0)
 16436  00876C  0100               	movlb	0	; () banked
 16437  00876E  5166               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 16438  008770  A4D8               	btfss	status,2,c
 16439  008772  D005               	goto	l2100
 16440                           
 16441                           ; BSR set to: 0
 16442                           ;lorawan.c: 2030: {
 16443                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 16444  008774  0E03               	movlw	3
 16445  008776  0102               	movlb	2	; () banked
 16446  008778  6F95               	movwf	(_loRa+149)& (0+255),b
 16447  00877A  0EE8               	movlw	232
 16448  00877C  6F94               	movwf	(_loRa+148)& (0+255),b
 16449  00877E                     l2100:
 16450                           
 16451                           ;lorawan.c: 2032: }
 16452                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 16453                           
 16454                           ; BSR set to: 2
 16455  00877E  0EE8               	movlw	232
 16456  008780  0102               	movlb	2	; () banked
 16457  008782  2594               	addwf	(_loRa+148)& (0+255),w,b
 16458  008784  6F96               	movwf	(_loRa+150)& (0+255),b
 16459  008786  0E03               	movlw	3
 16460  008788  2195               	addwfc	(_loRa+149)& (0+255),w,b
 16461  00878A  6F97               	movwf	(_loRa+151)& (0+255),b
 16462                           
 16463                           ; BSR set to: 2
 16464  00878C  0012               	return		;funcret
 16465  00878E                     __end_of_UpdateReceiveDelays:
 16466                           	opt stack 0
 16467                           tosu	equ	0xFFF
 16468                           tosh	equ	0xFFE
 16469                           tosl	equ	0xFFD
 16470                           pclath	equ	0xFFA
 16471                           tblptru	equ	0xFF8
 16472                           tblptrh	equ	0xFF7
 16473                           tblptrl	equ	0xFF6
 16474                           tablat	equ	0xFF5
 16475                           prodh	equ	0xFF4
 16476                           prodl	equ	0xFF3
 16477                           intcon	equ	0xFF2
 16478                           intcon2	equ	0xFF1
 16479                           intcon3	equ	0xFF0
 16480                           indf0	equ	0xFEF
 16481                           postinc0	equ	0xFEE
 16482                           fsr0h	equ	0xFEA
 16483                           fsr0l	equ	0xFE9
 16484                           wreg	equ	0xFE8
 16485                           postinc1	equ	0xFE6
 16486                           postdec1	equ	0xFE5
 16487                           plusw1	equ	0xFE3
 16488                           fsr1h	equ	0xFE2
 16489                           fsr1l	equ	0xFE1
 16490                           indf2	equ	0xFDF
 16491                           postinc2	equ	0xFDE
 16492                           postdec2	equ	0xFDD
 16493                           fsr2h	equ	0xFDA
 16494                           fsr2l	equ	0xFD9
 16495                           status	equ	0xFD8
 16496                           
 16497 ;; *************** function ___wmul *****************
 16498 ;; Defined at:
 16499 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 16500 ;; Parameters:    Size  Location     Type
 16501 ;;  multiplier      2    0[BANK0 ] unsigned int 
 16502 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;  product         2    4[BANK0 ] unsigned int 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  2    0[BANK0 ] unsigned int 
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0, prodl, prodh
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16514 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16515 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16517 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16518 ;;Total ram usage:        6 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:    7
 16521 ;; This function calls:
 16522 ;;		Nothing
 16523 ;; This function is called by:
 16524 ;;		_UpdateCfList
 16525 ;;		_UpdateReceiveDelays
 16526 ;; This function uses a non-reentrant model
 16527 ;;
 16528                           
 16529                           	psect	text81
 16530  008D20                     __ptext81:
 16531                           	opt stack 0
 16532  008D20                     ___wmul:
 16533                           	opt stack 18
 16534                           
 16535                           ; BSR set to: 2
 16536                           ;incstack = 0
 16537  008D20  0100               	movlb	0	; () banked
 16538  008D22  5160               	movf	___wmul@multiplier& (0+255),w,b
 16539  008D24  0362               	mulwf	___wmul@multiplicand& (0+255),b
 16540  008D26  CFF3 F064          	movff	prodl,___wmul@product
 16541  008D2A  CFF4 F065          	movff	prodh,___wmul@product+1
 16542  008D2E  5160               	movf	___wmul@multiplier& (0+255),w,b
 16543  008D30  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16544  008D32  50F3               	movf	prodl,w,c
 16545  008D34  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 16546  008D36  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16547  008D38  0362               	mulwf	___wmul@multiplicand& (0+255),b
 16548  008D3A  50F3               	movf	prodl,w,c
 16549  008D3C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 16550                           
 16551                           ; BSR set to: 0
 16552  008D3E  C064  F060         	movff	___wmul@product,?___wmul
 16553  008D42  C065  F061         	movff	___wmul@product+1,?___wmul+1
 16554  008D46  0012               	return	
 16555  008D48                     __end_of___wmul:
 16556                           	opt stack 0
 16557                           tosu	equ	0xFFF
 16558                           tosh	equ	0xFFE
 16559                           tosl	equ	0xFFD
 16560                           pclath	equ	0xFFA
 16561                           tblptru	equ	0xFF8
 16562                           tblptrh	equ	0xFF7
 16563                           tblptrl	equ	0xFF6
 16564                           tablat	equ	0xFF5
 16565                           prodh	equ	0xFF4
 16566                           prodl	equ	0xFF3
 16567                           intcon	equ	0xFF2
 16568                           intcon2	equ	0xFF1
 16569                           intcon3	equ	0xFF0
 16570                           indf0	equ	0xFEF
 16571                           postinc0	equ	0xFEE
 16572                           fsr0h	equ	0xFEA
 16573                           fsr0l	equ	0xFE9
 16574                           wreg	equ	0xFE8
 16575                           postinc1	equ	0xFE6
 16576                           postdec1	equ	0xFE5
 16577                           plusw1	equ	0xFE3
 16578                           fsr1h	equ	0xFE2
 16579                           fsr1l	equ	0xFE1
 16580                           indf2	equ	0xFDF
 16581                           postinc2	equ	0xFDE
 16582                           postdec2	equ	0xFDD
 16583                           fsr2h	equ	0xFDA
 16584                           fsr2l	equ	0xFD9
 16585                           status	equ	0xFD8
 16586                           
 16587 ;; *************** function _ExecuteRxParamSetupReq *****************
 16588 ;; Defined at:
 16589 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16590 ;; Parameters:    Size  Location     Type
 16591 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 16592 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16593 ;; Auto vars:     Size  Location     Type
 16594 ;;  frequency       4   74[BANK0 ] unsigned long 
 16595 ;;  dlSettings      1   78[BANK0 ] struct .
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  2   70[BANK0 ] PTR unsigned char 
 16598 ;; Registers used:
 16599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16605 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16606 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16607 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16608 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16609 ;;Total ram usage:        9 bytes
 16610 ;; Hardware stack levels used:    1
 16611 ;; Hardware stack levels required when called:    8
 16612 ;; This function calls:
 16613 ;;		_UpdateReceiveWindow2Parameters
 16614 ;;		_ValidateDataRate
 16615 ;;		_ValidateFrequency
 16616 ;;		_ValidateRxOffset
 16617 ;;		___lmul
 16618 ;; This function is called by:
 16619 ;;		_MacExecuteCommands
 16620 ;; This function uses a non-reentrant model
 16621 ;;
 16622                           
 16623                           	psect	text82
 16624  00410A                     __ptext82:
 16625                           	opt stack 0
 16626  00410A                     _ExecuteRxParamSetupReq:
 16627                           	opt stack 17
 16628                           
 16629                           ;lorawan_eu.c: 742: DlSettings_t dlSettings;
 16630                           ;lorawan_eu.c: 743: uint32_t frequency = 0;
 16631                           
 16632                           ; BSR set to: 0
 16633                           ;incstack = 0
 16634  00410A  0E00               	movlw	0
 16635  00410C  0100               	movlb	0	; () banked
 16636  00410E  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 16637  004110  0E00               	movlw	0
 16638  004112  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 16639  004114  0E00               	movlw	0
 16640  004116  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 16641  004118  0E00               	movlw	0
 16642  00411A  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 16643                           
 16644                           ; BSR set to: 0
 16645                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 16646  00411C  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 16647  004120  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 16648  004124  50DF               	movf	indf2,w,c
 16649  004126  6FAE               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 16650                           
 16651                           ; BSR set to: 0
 16652  004128  4BA6               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 16653  00412A  2BA7               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 16654                           
 16655                           ; BSR set to: 0
 16656                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 16657  00412C  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 16658  004130  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 16659  004134  0EFF               	movlw	255
 16660  004136  14DE               	andwf	postinc2,w,c
 16661  004138  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 16662  00413A  0EFF               	movlw	255
 16663  00413C  14DE               	andwf	postinc2,w,c
 16664  00413E  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 16665  004140  0EFF               	movlw	255
 16666  004142  14DE               	andwf	postinc2,w,c
 16667  004144  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 16668  004146  0E00               	movlw	0
 16669  004148  14DE               	andwf	postinc2,w,c
 16670  00414A  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 16671                           
 16672                           ; BSR set to: 0
 16673                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 16674  00414C  C0AA  F09A         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 16675  004150  C0AB  F09B         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 16676  004154  C0AC  F09C         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 16677  004158  C0AD  F09D         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 16678  00415C  0E64               	movlw	100
 16679  00415E  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 16680  004160  0E00               	movlw	0
 16681  004162  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 16682  004164  0E00               	movlw	0
 16683  004166  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16684  004168  0E00               	movlw	0
 16685  00416A  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16686  00416C  ECB1  F040         	call	___lmul	;wreg free
 16687  004170  C09A  F0AA         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 16688  004174  C09B  F0AB         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 16689  004178  C09C  F0AC         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 16690  00417C  C09D  F0AD         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 16691                           
 16692                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 16693  004180  0E03               	movlw	3
 16694  004182  0100               	movlb	0	; () banked
 16695  004184  25A6               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 16696  004186  6FA6               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 16697  004188  0E00               	movlw	0
 16698  00418A  21A7               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 16699  00418C  6FA7               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 16700                           
 16701                           ; BSR set to: 0
 16702                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 16703  00418E  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 16704  004192  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 16705  004196  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 16706  00419A  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 16707  00419E  EC76  F03E         	call	_ValidateFrequency	;wreg free
 16708  0041A2  0900               	iorlw	0
 16709  0041A4  A4D8               	btfss	status,2,c
 16710  0041A6  D018               	goto	l1134
 16711                           
 16712                           ;lorawan_eu.c: 754: {
 16713                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 16714  0041A8  0102               	movlb	2	; () banked
 16715  0041AA  51A7               	movf	(_loRa+167)& (0+255),w,b
 16716  0041AC  0D02               	mullw	2
 16717  0041AE  0E00               	movlw	low _loRa
 16718  0041B0  0100               	movlb	0	; () banked
 16719  0041B2  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16720  0041B4  0E02               	movlw	high _loRa
 16721  0041B6  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16722  0041B8  0EA8               	movlw	168
 16723  0041BA  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16724  0041BC  0E00               	movlw	0
 16725  0041BE  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16726  0041C0  50F3               	movf	prodl,w,c
 16727  0041C2  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16728  0041C4  50F4               	movf	prodh,w,c
 16729  0041C6  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16730  0041C8  0E01               	movlw	1
 16731  0041CA  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16732  0041CC  6ED9               	movwf	fsr2l,c
 16733  0041CE  0E00               	movlw	0
 16734  0041D0  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16735  0041D2  6EDA               	movwf	fsr2h,c
 16736  0041D4  0102               	movlb	2	; () banked
 16737  0041D6  86DF               	bsf	indf2,3,c
 16738  0041D8                     l1134:
 16739                           
 16740                           ;lorawan_eu.c: 756: }
 16741                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 16742                           
 16743                           ; BSR set to: 2
 16744  0041D8  0100               	movlb	0	; () banked
 16745  0041DA  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 16746  0041DC  0B0F               	andlw	15
 16747  0041DE  EC30  F048         	call	_ValidateDataRate
 16748  0041E2  0900               	iorlw	0
 16749  0041E4  A4D8               	btfss	status,2,c
 16750  0041E6  D018               	goto	l1135
 16751                           
 16752                           ;lorawan_eu.c: 759: {
 16753                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 16754  0041E8  0102               	movlb	2	; () banked
 16755  0041EA  51A7               	movf	(_loRa+167)& (0+255),w,b
 16756  0041EC  0D02               	mullw	2
 16757  0041EE  0E00               	movlw	low _loRa
 16758  0041F0  0100               	movlb	0	; () banked
 16759  0041F2  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16760  0041F4  0E02               	movlw	high _loRa
 16761  0041F6  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16762  0041F8  0EA8               	movlw	168
 16763  0041FA  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16764  0041FC  0E00               	movlw	0
 16765  0041FE  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16766  004200  50F3               	movf	prodl,w,c
 16767  004202  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16768  004204  50F4               	movf	prodh,w,c
 16769  004206  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16770  004208  0E01               	movlw	1
 16771  00420A  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16772  00420C  6ED9               	movwf	fsr2l,c
 16773  00420E  0E00               	movlw	0
 16774  004210  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16775  004212  6EDA               	movwf	fsr2h,c
 16776  004214  0102               	movlb	2	; () banked
 16777  004216  88DF               	bsf	indf2,4,c
 16778  004218                     l1135:
 16779                           
 16780                           ;lorawan_eu.c: 761: }
 16781                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 16782                           
 16783                           ; BSR set to: 2
 16784  004218  0100               	movlb	0	; () banked
 16785  00421A  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 16786  00421C  0B07               	andlw	7
 16787  00421E  EC24  F048         	call	_ValidateRxOffset
 16788  004222  0900               	iorlw	0
 16789  004224  A4D8               	btfss	status,2,c
 16790  004226  D018               	goto	l1136
 16791                           
 16792                           ;lorawan_eu.c: 764: {
 16793                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 16794  004228  0102               	movlb	2	; () banked
 16795  00422A  51A7               	movf	(_loRa+167)& (0+255),w,b
 16796  00422C  0D02               	mullw	2
 16797  00422E  0E00               	movlw	low _loRa
 16798  004230  0100               	movlb	0	; () banked
 16799  004232  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16800  004234  0E02               	movlw	high _loRa
 16801  004236  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16802  004238  0EA8               	movlw	168
 16803  00423A  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16804  00423C  0E00               	movlw	0
 16805  00423E  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16806  004240  50F3               	movf	prodl,w,c
 16807  004242  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16808  004244  50F4               	movf	prodh,w,c
 16809  004246  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16810  004248  0E01               	movlw	1
 16811  00424A  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16812  00424C  6ED9               	movwf	fsr2l,c
 16813  00424E  0E00               	movlw	0
 16814  004250  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16815  004252  6EDA               	movwf	fsr2h,c
 16816  004254  0102               	movlb	2	; () banked
 16817  004256  8ADF               	bsf	indf2,5,c
 16818  004258                     l1136:
 16819                           
 16820                           ;lorawan_eu.c: 766: }
 16821                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 16822  004258  0102               	movlb	2	; () banked
 16823  00425A  51A7               	movf	(_loRa+167)& (0+255),w,b
 16824  00425C  0D02               	mullw	2
 16825  00425E  0E00               	movlw	low _loRa
 16826  004260  0100               	movlb	0	; () banked
 16827  004262  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16828  004264  0E02               	movlw	high _loRa
 16829  004266  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16830  004268  0EA8               	movlw	168
 16831  00426A  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16832  00426C  0E00               	movlw	0
 16833  00426E  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16834  004270  50F3               	movf	prodl,w,c
 16835  004272  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16836  004274  50F4               	movf	prodh,w,c
 16837  004276  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16838  004278  0E01               	movlw	1
 16839  00427A  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16840  00427C  6ED9               	movwf	fsr2l,c
 16841  00427E  0E00               	movlw	0
 16842  004280  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16843  004282  6EDA               	movwf	fsr2h,c
 16844  004284  0102               	movlb	2	; () banked
 16845  004286  A8DF               	btfss	indf2,4,c
 16846  004288  D045               	goto	l1137
 16847                           
 16848                           ; BSR set to: 2
 16849  00428A  51A7               	movf	(_loRa+167)& (0+255),w,b
 16850  00428C  0D02               	mullw	2
 16851  00428E  0E00               	movlw	low _loRa
 16852  004290  0100               	movlb	0	; () banked
 16853  004292  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16854  004294  0E02               	movlw	high _loRa
 16855  004296  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16856  004298  0EA8               	movlw	168
 16857  00429A  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16858  00429C  0E00               	movlw	0
 16859  00429E  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16860  0042A0  50F3               	movf	prodl,w,c
 16861  0042A2  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16862  0042A4  50F4               	movf	prodh,w,c
 16863  0042A6  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16864  0042A8  0E01               	movlw	1
 16865  0042AA  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16866  0042AC  6ED9               	movwf	fsr2l,c
 16867  0042AE  0E00               	movlw	0
 16868  0042B0  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16869  0042B2  6EDA               	movwf	fsr2h,c
 16870  0042B4  0102               	movlb	2	; () banked
 16871  0042B6  A6DF               	btfss	indf2,3,c
 16872  0042B8  D02D               	goto	l1137
 16873                           
 16874                           ; BSR set to: 2
 16875  0042BA  51A7               	movf	(_loRa+167)& (0+255),w,b
 16876  0042BC  0D02               	mullw	2
 16877  0042BE  0E00               	movlw	low _loRa
 16878  0042C0  0100               	movlb	0	; () banked
 16879  0042C2  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16880  0042C4  0E02               	movlw	high _loRa
 16881  0042C6  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16882  0042C8  0EA8               	movlw	168
 16883  0042CA  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16884  0042CC  0E00               	movlw	0
 16885  0042CE  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16886  0042D0  50F3               	movf	prodl,w,c
 16887  0042D2  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16888  0042D4  50F4               	movf	prodh,w,c
 16889  0042D6  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16890  0042D8  0E01               	movlw	1
 16891  0042DA  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16892  0042DC  6ED9               	movwf	fsr2l,c
 16893  0042DE  0E00               	movlw	0
 16894  0042E0  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16895  0042E2  6EDA               	movwf	fsr2h,c
 16896  0042E4  0102               	movlb	2	; () banked
 16897  0042E6  AADF               	btfss	indf2,5,c
 16898  0042E8  D015               	goto	l1137
 16899                           
 16900                           ; BSR set to: 2
 16901                           ;lorawan_eu.c: 769: {
 16902                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 16903  0042EA  0100               	movlb	0	; () banked
 16904  0042EC  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 16905  0042EE  0B07               	andlw	7
 16906  0042F0  0102               	movlb	2	; () banked
 16907  0042F2  6FEF               	movwf	(_loRa+239)& (0+255),b
 16908                           
 16909                           ; BSR set to: 2
 16910                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 16911  0042F4  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 16912  0042F8  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 16913  0042FC  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 16914  004300  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 16915  004304  0100               	movlb	0	; () banked
 16916  004306  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 16917  004308  0B0F               	andlw	15
 16918  00430A  6F64               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 16919  00430C  EC47  F048         	call	_UpdateReceiveWindow2Parameters	;wreg free
 16920                           
 16921                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 16922  004310  0102               	movlb	2	; () banked
 16923  004312  8F03               	bsf	(_loRa+3)& (0+255),7,b
 16924  004314                     l1137:
 16925                           
 16926                           ; BSR set to: 2
 16927                           ;lorawan_eu.c: 773: }
 16928                           ;lorawan_eu.c: 775: return ptr;
 16929                           
 16930                           ; BSR set to: 2
 16931  004314  C0A6  F0A6         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 16932  004318  C0A7  F0A7         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 16933  00431C  0012               	return	
 16934  00431E                     __end_of_ExecuteRxParamSetupReq:
 16935                           	opt stack 0
 16936                           tosu	equ	0xFFF
 16937                           tosh	equ	0xFFE
 16938                           tosl	equ	0xFFD
 16939                           pclath	equ	0xFFA
 16940                           tblptru	equ	0xFF8
 16941                           tblptrh	equ	0xFF7
 16942                           tblptrl	equ	0xFF6
 16943                           tablat	equ	0xFF5
 16944                           prodh	equ	0xFF4
 16945                           prodl	equ	0xFF3
 16946                           intcon	equ	0xFF2
 16947                           intcon2	equ	0xFF1
 16948                           intcon3	equ	0xFF0
 16949                           indf0	equ	0xFEF
 16950                           postinc0	equ	0xFEE
 16951                           fsr0h	equ	0xFEA
 16952                           fsr0l	equ	0xFE9
 16953                           wreg	equ	0xFE8
 16954                           postinc1	equ	0xFE6
 16955                           postdec1	equ	0xFE5
 16956                           plusw1	equ	0xFE3
 16957                           fsr1h	equ	0xFE2
 16958                           fsr1l	equ	0xFE1
 16959                           indf2	equ	0xFDF
 16960                           postinc2	equ	0xFDE
 16961                           postdec2	equ	0xFDD
 16962                           fsr2h	equ	0xFDA
 16963                           fsr2l	equ	0xFD9
 16964                           status	equ	0xFD8
 16965                           
 16966 ;; *************** function _ValidateRxOffset *****************
 16967 ;; Defined at:
 16968 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16969 ;; Parameters:    Size  Location     Type
 16970 ;;  rxOffset        1    wreg     unsigned char 
 16971 ;; Auto vars:     Size  Location     Type
 16972 ;;  rxOffset        1    0[BANK0 ] unsigned char 
 16973 ;;  result          1    1[BANK0 ] enum E7249
 16974 ;; Return value:  Size  Location     Type
 16975 ;;                  1    wreg      enum E7249
 16976 ;; Registers used:
 16977 ;;		wreg, status,2, status,0
 16978 ;; Tracked objects:
 16979 ;;		On entry : 0/0
 16980 ;;		On exit  : 0/0
 16981 ;;		Unchanged: 0/0
 16982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16984 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16986 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16987 ;;Total ram usage:        2 bytes
 16988 ;; Hardware stack levels used:    1
 16989 ;; Hardware stack levels required when called:    7
 16990 ;; This function calls:
 16991 ;;		Nothing
 16992 ;; This function is called by:
 16993 ;;		_ExecuteRxParamSetupReq
 16994 ;; This function uses a non-reentrant model
 16995 ;;
 16996                           
 16997                           	psect	text83
 16998  009048                     __ptext83:
 16999                           	opt stack 0
 17000  009048                     _ValidateRxOffset:
 17001                           	opt stack 17
 17002                           
 17003                           ; BSR set to: 2
 17004                           ;incstack = 0
 17005                           ;ValidateRxOffset@rxOffset stored from wreg
 17006  009048  0100               	movlb	0	; () banked
 17007  00904A  6F60               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 17008                           
 17009                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 17010  00904C  0E00               	movlw	0
 17011  00904E  0100               	movlb	0	; () banked
 17012  009050  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 17013                           
 17014                           ; BSR set to: 0
 17015                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 17016  009052  0E05               	movlw	5
 17017  009054  6560               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 17018  009056  D002               	goto	l1232
 17019                           
 17020                           ; BSR set to: 0
 17021                           ;lorawan_eu.c: 1081: {
 17022                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 17023  009058  0E03               	movlw	3
 17024  00905A  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 17025  00905C                     l1232:
 17026                           
 17027                           ; BSR set to: 0
 17028                           ;lorawan_eu.c: 1083: }
 17029                           ;lorawan_eu.c: 1085: return result;
 17030  00905C  5161               	movf	ValidateRxOffset@result& (0+255),w,b
 17031  00905E  0012               	return	
 17032  009060                     __end_of_ValidateRxOffset:
 17033                           	opt stack 0
 17034                           tosu	equ	0xFFF
 17035                           tosh	equ	0xFFE
 17036                           tosl	equ	0xFFD
 17037                           pclath	equ	0xFFA
 17038                           tblptru	equ	0xFF8
 17039                           tblptrh	equ	0xFF7
 17040                           tblptrl	equ	0xFF6
 17041                           tablat	equ	0xFF5
 17042                           prodh	equ	0xFF4
 17043                           prodl	equ	0xFF3
 17044                           intcon	equ	0xFF2
 17045                           intcon2	equ	0xFF1
 17046                           intcon3	equ	0xFF0
 17047                           indf0	equ	0xFEF
 17048                           postinc0	equ	0xFEE
 17049                           fsr0h	equ	0xFEA
 17050                           fsr0l	equ	0xFE9
 17051                           wreg	equ	0xFE8
 17052                           postinc1	equ	0xFE6
 17053                           postdec1	equ	0xFE5
 17054                           plusw1	equ	0xFE3
 17055                           fsr1h	equ	0xFE2
 17056                           fsr1l	equ	0xFE1
 17057                           indf2	equ	0xFDF
 17058                           postinc2	equ	0xFDE
 17059                           postdec2	equ	0xFDD
 17060                           fsr2h	equ	0xFDA
 17061                           fsr2l	equ	0xFD9
 17062                           status	equ	0xFD8
 17063                           
 17064 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 17065 ;; Defined at:
 17066 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17067 ;; Parameters:    Size  Location     Type
 17068 ;;  frequency       4    0[BANK0 ] unsigned long 
 17069 ;;  dataRate        1    4[BANK0 ] unsigned char 
 17070 ;; Auto vars:     Size  Location     Type
 17071 ;;		None
 17072 ;; Return value:  Size  Location     Type
 17073 ;;                  1    wreg      void 
 17074 ;; Registers used:
 17075 ;;		None
 17076 ;; Tracked objects:
 17077 ;;		On entry : 0/0
 17078 ;;		On exit  : 0/0
 17079 ;;		Unchanged: 0/0
 17080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17081 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17084 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17085 ;;Total ram usage:        5 bytes
 17086 ;; Hardware stack levels used:    1
 17087 ;; Hardware stack levels required when called:    7
 17088 ;; This function calls:
 17089 ;;		Nothing
 17090 ;; This function is called by:
 17091 ;;		_ExecuteRxParamSetupReq
 17092 ;;		_LORAWAN_SetReceiveWindow2Parameters
 17093 ;; This function uses a non-reentrant model
 17094 ;;
 17095                           
 17096                           	psect	text84
 17097  00908E                     __ptext84:
 17098                           	opt stack 0
 17099  00908E                     _UpdateReceiveWindow2Parameters:
 17100                           	opt stack 17
 17101                           
 17102                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 17103                           
 17104                           ; BSR set to: 0
 17105                           ;incstack = 0
 17106  00908E  C064  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 17107                           
 17108                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 17109  009092  C060  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 17110  009096  C061  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 17111  00909A  C062  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 17112  00909E  C063  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 17113  0090A2  0012               	return		;funcret
 17114  0090A4                     __end_of_UpdateReceiveWindow2Parameters:
 17115                           	opt stack 0
 17116                           tosu	equ	0xFFF
 17117                           tosh	equ	0xFFE
 17118                           tosl	equ	0xFFD
 17119                           pclath	equ	0xFFA
 17120                           tblptru	equ	0xFF8
 17121                           tblptrh	equ	0xFF7
 17122                           tblptrl	equ	0xFF6
 17123                           tablat	equ	0xFF5
 17124                           prodh	equ	0xFF4
 17125                           prodl	equ	0xFF3
 17126                           intcon	equ	0xFF2
 17127                           intcon2	equ	0xFF1
 17128                           intcon3	equ	0xFF0
 17129                           indf0	equ	0xFEF
 17130                           postinc0	equ	0xFEE
 17131                           fsr0h	equ	0xFEA
 17132                           fsr0l	equ	0xFE9
 17133                           wreg	equ	0xFE8
 17134                           postinc1	equ	0xFE6
 17135                           postdec1	equ	0xFE5
 17136                           plusw1	equ	0xFE3
 17137                           fsr1h	equ	0xFE2
 17138                           fsr1l	equ	0xFE1
 17139                           indf2	equ	0xFDF
 17140                           postinc2	equ	0xFDE
 17141                           postdec2	equ	0xFDD
 17142                           fsr2h	equ	0xFDA
 17143                           fsr2l	equ	0xFD9
 17144                           status	equ	0xFD8
 17145                           
 17146 ;; *************** function _ExecuteNewChannel *****************
 17147 ;; Defined at:
 17148 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17149 ;; Parameters:    Size  Location     Type
 17150 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 17151 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17152 ;; Auto vars:     Size  Location     Type
 17153 ;;  frequency       4   75[BANK0 ] unsigned long 
 17154 ;;  channelIndex    1   79[BANK0 ] unsigned char 
 17155 ;;  drRange         1   74[BANK0 ] struct .
 17156 ;; Return value:  Size  Location     Type
 17157 ;;                  2   70[BANK0 ] PTR unsigned char 
 17158 ;; Registers used:
 17159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17160 ;; Tracked objects:
 17161 ;;		On entry : 0/0
 17162 ;;		On exit  : 0/0
 17163 ;;		Unchanged: 0/0
 17164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17166 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17167 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17168 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17169 ;;Total ram usage:       10 bytes
 17170 ;; Hardware stack levels used:    1
 17171 ;; Hardware stack levels required when called:    9
 17172 ;; This function calls:
 17173 ;;		_LORAWAN_SetChannelIdStatus
 17174 ;;		_UpdateChannelIdStatus
 17175 ;;		_UpdateDataRange
 17176 ;;		_UpdateDutyCycle
 17177 ;;		_UpdateFrequency
 17178 ;;		_ValidateChannelId
 17179 ;;		_ValidateDataRange
 17180 ;;		_ValidateFrequency
 17181 ;;		___lmul
 17182 ;; This function is called by:
 17183 ;;		_MacExecuteCommands
 17184 ;; This function uses a non-reentrant model
 17185 ;;
 17186                           
 17187                           	psect	text85
 17188  003A32                     __ptext85:
 17189                           	opt stack 0
 17190  003A32                     _ExecuteNewChannel:
 17191                           	opt stack 16
 17192                           
 17193                           ;lorawan_eu.c: 679: uint8_t channelIndex;
 17194                           ;lorawan_eu.c: 680: DataRange_t drRange;
 17195                           ;lorawan_eu.c: 681: uint32_t frequency = 0;
 17196                           
 17197                           ;incstack = 0
 17198  003A32  0E00               	movlw	0
 17199  003A34  0100               	movlb	0	; () banked
 17200  003A36  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 17201  003A38  0E00               	movlw	0
 17202  003A3A  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 17203  003A3C  0E00               	movlw	0
 17204  003A3E  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 17205  003A40  0E00               	movlw	0
 17206  003A42  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 17207                           
 17208                           ; BSR set to: 0
 17209                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 17210  003A44  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 17211  003A48  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 17212  003A4C  50DF               	movf	indf2,w,c
 17213  003A4E  6FAF               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 17214                           
 17215                           ; BSR set to: 0
 17216  003A50  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 17217  003A52  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 17218                           
 17219                           ; BSR set to: 0
 17220                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 17221  003A54  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 17222  003A58  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 17223  003A5C  0EFF               	movlw	255
 17224  003A5E  14DE               	andwf	postinc2,w,c
 17225  003A60  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 17226  003A62  0EFF               	movlw	255
 17227  003A64  14DE               	andwf	postinc2,w,c
 17228  003A66  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 17229  003A68  0EFF               	movlw	255
 17230  003A6A  14DE               	andwf	postinc2,w,c
 17231  003A6C  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 17232  003A6E  0E00               	movlw	0
 17233  003A70  14DE               	andwf	postinc2,w,c
 17234  003A72  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 17235                           
 17236                           ; BSR set to: 0
 17237                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 17238  003A74  C0AB  F09A         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 17239  003A78  C0AC  F09B         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 17240  003A7C  C0AD  F09C         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 17241  003A80  C0AE  F09D         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 17242  003A84  0E64               	movlw	100
 17243  003A86  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 17244  003A88  0E00               	movlw	0
 17245  003A8A  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 17246  003A8C  0E00               	movlw	0
 17247  003A8E  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17248  003A90  0E00               	movlw	0
 17249  003A92  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17250  003A94  ECB1  F040         	call	___lmul	;wreg free
 17251  003A98  C09A  F0AB         	movff	?___lmul,ExecuteNewChannel@frequency
 17252  003A9C  C09B  F0AC         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 17253  003AA0  C09C  F0AD         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 17254  003AA4  C09D  F0AE         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 17255                           
 17256                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 17257  003AA8  0E03               	movlw	3
 17258  003AAA  0100               	movlb	0	; () banked
 17259  003AAC  25A6               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 17260  003AAE  6FA6               	movwf	ExecuteNewChannel@ptr& (0+255),b
 17261  003AB0  0E00               	movlw	0
 17262  003AB2  21A7               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 17263  003AB4  6FA7               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 17264                           
 17265                           ; BSR set to: 0
 17266                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 17267  003AB6  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 17268  003ABA  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 17269  003ABE  50DF               	movf	indf2,w,c
 17270  003AC0  6FAA               	movwf	ExecuteNewChannel@drRange& (0+255),b
 17271                           
 17272                           ; BSR set to: 0
 17273  003AC2  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 17274  003AC4  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 17278  003AC6  0E00               	movlw	0
 17279  003AC8  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 17280  003ACA  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 17281  003ACC  ECDF  F046         	call	_ValidateChannelId
 17282  003AD0  0900               	iorlw	0
 17283  003AD2  A4D8               	btfss	status,2,c
 17284  003AD4  D04B               	goto	l1123
 17285                           
 17286                           ;lorawan_eu.c: 692: {
 17287                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 17288  003AD6  C0AB  F060         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 17289  003ADA  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 17290  003ADE  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 17291  003AE2  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 17292  003AE6  EC76  F03E         	call	_ValidateFrequency	;wreg free
 17293  003AEA  0900               	iorlw	0
 17294  003AEC  B4D8               	btfsc	status,2,c
 17295  003AEE  D007               	goto	u17380
 17296  003AF0  0100               	movlb	0	; () banked
 17297  003AF2  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 17298  003AF4  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 17299  003AF6  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 17300  003AF8  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 17301  003AFA  A4D8               	btfss	status,2,c
 17302  003AFC  D018               	goto	l1120
 17303  003AFE                     u17380:
 17304                           
 17305                           ;lorawan_eu.c: 694: {
 17306                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 17307                           
 17308                           ; BSR set to: 0
 17309  003AFE  0102               	movlb	2	; () banked
 17310  003B00  51A7               	movf	(_loRa+167)& (0+255),w,b
 17311  003B02  0D02               	mullw	2
 17312  003B04  0E00               	movlw	low _loRa
 17313  003B06  0100               	movlb	0	; () banked
 17314  003B08  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 17315  003B0A  0E02               	movlw	high _loRa
 17316  003B0C  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 17317  003B0E  0EA8               	movlw	168
 17318  003B10  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 17319  003B12  0E00               	movlw	0
 17320  003B14  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 17321  003B16  50F3               	movf	prodl,w,c
 17322  003B18  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 17323  003B1A  50F4               	movf	prodh,w,c
 17324  003B1C  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 17325  003B1E  0E01               	movlw	1
 17326  003B20  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 17327  003B22  6ED9               	movwf	fsr2l,c
 17328  003B24  0E00               	movlw	0
 17329  003B26  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 17330  003B28  6EDA               	movwf	fsr2h,c
 17331  003B2A  0102               	movlb	2	; () banked
 17332  003B2C  8EDF               	bsf	indf2,7,c
 17333  003B2E                     l1120:
 17334                           
 17335                           ;lorawan_eu.c: 696: }
 17336                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 17337                           
 17338                           ; BSR set to: 2
 17339  003B2E  0100               	movlb	0	; () banked
 17340  003B30  51AA               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 17341  003B32  EC94  F042         	call	_ValidateDataRange
 17342  003B36  0900               	iorlw	0
 17343  003B38  A4D8               	btfss	status,2,c
 17344  003B3A  D018               	goto	l1123
 17345                           
 17346                           ;lorawan_eu.c: 699: {
 17347                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 17348  003B3C  0102               	movlb	2	; () banked
 17349  003B3E  51A7               	movf	(_loRa+167)& (0+255),w,b
 17350  003B40  0D02               	mullw	2
 17351  003B42  0E00               	movlw	low _loRa
 17352  003B44  0100               	movlb	0	; () banked
 17353  003B46  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 17354  003B48  0E02               	movlw	high _loRa
 17355  003B4A  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 17356  003B4C  0EA8               	movlw	168
 17357  003B4E  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 17358  003B50  0E00               	movlw	0
 17359  003B52  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 17360  003B54  50F3               	movf	prodl,w,c
 17361  003B56  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 17362  003B58  50F4               	movf	prodh,w,c
 17363  003B5A  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 17364  003B5C  0E01               	movlw	1
 17365  003B5E  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 17366  003B60  6ED9               	movwf	fsr2l,c
 17367  003B62  0E00               	movlw	0
 17368  003B64  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 17369  003B66  6EDA               	movwf	fsr2h,c
 17370  003B68  0102               	movlb	2	; () banked
 17371  003B6A  8CDF               	bsf	indf2,6,c
 17372  003B6C                     l1123:
 17373                           
 17374                           ;lorawan_eu.c: 701: }
 17375                           ;lorawan_eu.c: 702: }
 17376                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 17377                           
 17378                           ; BSR set to: 2
 17379  003B6C  0102               	movlb	2	; () banked
 17380  003B6E  51A7               	movf	(_loRa+167)& (0+255),w,b
 17381  003B70  0D02               	mullw	2
 17382  003B72  0E00               	movlw	low _loRa
 17383  003B74  0100               	movlb	0	; () banked
 17384  003B76  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 17385  003B78  0E02               	movlw	high _loRa
 17386  003B7A  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 17387  003B7C  0EA8               	movlw	168
 17388  003B7E  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 17389  003B80  0E00               	movlw	0
 17390  003B82  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 17391  003B84  50F3               	movf	prodl,w,c
 17392  003B86  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 17393  003B88  50F4               	movf	prodh,w,c
 17394  003B8A  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 17395  003B8C  0E01               	movlw	1
 17396  003B8E  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 17397  003B90  6ED9               	movwf	fsr2l,c
 17398  003B92  0E00               	movlw	0
 17399  003B94  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 17400  003B96  6EDA               	movwf	fsr2h,c
 17401  003B98  0102               	movlb	2	; () banked
 17402  003B9A  AEDF               	btfss	indf2,7,c
 17403  003B9C  D07D               	goto	l1124
 17404                           
 17405                           ; BSR set to: 2
 17406  003B9E  51A7               	movf	(_loRa+167)& (0+255),w,b
 17407  003BA0  0D02               	mullw	2
 17408  003BA2  0E00               	movlw	low _loRa
 17409  003BA4  0100               	movlb	0	; () banked
 17410  003BA6  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 17411  003BA8  0E02               	movlw	high _loRa
 17412  003BAA  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 17413  003BAC  0EA8               	movlw	168
 17414  003BAE  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 17415  003BB0  0E00               	movlw	0
 17416  003BB2  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 17417  003BB4  50F3               	movf	prodl,w,c
 17418  003BB6  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 17419  003BB8  50F4               	movf	prodh,w,c
 17420  003BBA  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 17421  003BBC  0E01               	movlw	1
 17422  003BBE  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 17423  003BC0  6ED9               	movwf	fsr2l,c
 17424  003BC2  0E00               	movlw	0
 17425  003BC4  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 17426  003BC6  6EDA               	movwf	fsr2h,c
 17427  003BC8  0102               	movlb	2	; () banked
 17428  003BCA  ACDF               	btfss	indf2,6,c
 17429  003BCC  D065               	goto	l1124
 17430                           
 17431                           ; BSR set to: 2
 17432                           ;lorawan_eu.c: 705: {
 17433                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 17434  003BCE  0E10               	movlw	16
 17435  003BD0  61DA               	cpfslt	(_loRa+218)& (0+255),b
 17436  003BD2  D02E               	goto	l1125
 17437                           
 17438                           ; BSR set to: 2
 17439                           ;lorawan_eu.c: 707: {
 17440                           ;lorawan_eu.c: 708: if (frequency != 0)
 17441  003BD4  0100               	movlb	0	; () banked
 17442  003BD6  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 17443  003BD8  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 17444  003BDA  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 17445  003BDC  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 17446  003BDE  B4D8               	btfsc	status,2,c
 17447  003BE0  D020               	goto	l1126
 17448                           
 17449                           ; BSR set to: 0
 17450                           ;lorawan_eu.c: 709: {
 17451                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 17452  003BE2  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 17453  003BE6  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 17454  003BEA  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 17455  003BEE  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 17456  003BF2  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 17457  003BF4  ECDA  F042         	call	_UpdateFrequency
 17458                           
 17459                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 17460  003BF8  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 17461  003BFC  0100               	movlb	0	; () banked
 17462  003BFE  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 17463  003C00  ECED  F02A         	call	_UpdateDataRange
 17464                           
 17465                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 17466  003C04  0E01               	movlw	1
 17467  003C06  0100               	movlb	0	; () banked
 17468  003C08  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 17469  003C0A  0E2E               	movlw	46
 17470  003C0C  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 17471  003C0E  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 17472  003C10  ECFC  F042         	call	_UpdateDutyCycle
 17473                           
 17474                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 17475  003C14  0E01               	movlw	1
 17476  003C16  0100               	movlb	0	; () banked
 17477  003C18  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17478  003C1A  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 17479  003C1C  ECD9  F028         	call	_UpdateChannelIdStatus
 17480                           
 17481                           ;lorawan_eu.c: 714: }
 17482  003C20  D039               	goto	l1130
 17483  003C22                     l1126:
 17484                           
 17485                           ;lorawan_eu.c: 715: else
 17486                           ;lorawan_eu.c: 716: {
 17487                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 17488  003C22  0E00               	movlw	0
 17489  003C24  0100               	movlb	0	; () banked
 17490  003C26  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 17491  003C28  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 17492  003C2A  EC57  F040         	call	_LORAWAN_SetChannelIdStatus
 17493                           
 17494                           ;lorawan_eu.c: 718: }
 17495                           ;lorawan_eu.c: 719: }
 17496  003C2E  D032               	goto	l1130
 17497  003C30                     l1125:
 17498                           
 17499                           ;lorawan_eu.c: 720: else
 17500                           ;lorawan_eu.c: 721: {
 17501                           ;lorawan_eu.c: 722: if (frequency != 0)
 17502  003C30  0100               	movlb	0	; () banked
 17503  003C32  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 17504  003C34  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 17505  003C36  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 17506  003C38  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 17507  003C3A  B4D8               	btfsc	status,2,c
 17508  003C3C  D024               	goto	l1129
 17509                           
 17510                           ; BSR set to: 0
 17511                           ;lorawan_eu.c: 723: {
 17512                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 17513  003C3E  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 17514  003C42  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 17515  003C46  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 17516  003C4A  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 17517  003C4E  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 17518  003C50  0F10               	addlw	16
 17519  003C52  ECDA  F042         	call	_UpdateFrequency
 17520                           
 17521                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 17522  003C56  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 17523  003C5A  0100               	movlb	0	; () banked
 17524  003C5C  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 17525  003C5E  0F10               	addlw	16
 17526  003C60  ECED  F02A         	call	_UpdateDataRange
 17527                           
 17528                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 17529  003C64  0E01               	movlw	1
 17530  003C66  0100               	movlb	0	; () banked
 17531  003C68  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 17532  003C6A  0E2E               	movlw	46
 17533  003C6C  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 17534  003C6E  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 17535  003C70  0F10               	addlw	16
 17536  003C72  ECFC  F042         	call	_UpdateDutyCycle
 17537                           
 17538                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 17539  003C76  0E01               	movlw	1
 17540  003C78  0100               	movlb	0	; () banked
 17541  003C7A  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17542  003C7C  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 17543  003C7E  0F10               	addlw	16
 17544  003C80  ECD9  F028         	call	_UpdateChannelIdStatus
 17545                           
 17546                           ;lorawan_eu.c: 728: }
 17547  003C84  D007               	goto	l1130
 17548  003C86                     l1129:
 17549                           
 17550                           ;lorawan_eu.c: 729: else
 17551                           ;lorawan_eu.c: 730: {
 17552                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 17553  003C86  0E00               	movlw	0
 17554  003C88  0100               	movlb	0	; () banked
 17555  003C8A  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 17556  003C8C  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 17557  003C8E  0F10               	addlw	16
 17558  003C90  EC57  F040         	call	_LORAWAN_SetChannelIdStatus
 17559  003C94                     l1130:
 17560                           
 17561                           ;lorawan_eu.c: 732: }
 17562                           ;lorawan_eu.c: 733: }
 17563                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 17564  003C94  0102               	movlb	2	; () banked
 17565  003C96  8703               	bsf	(_loRa+3)& (0+255),3,b
 17566  003C98                     l1124:
 17567                           
 17568                           ; BSR set to: 2
 17569                           ;lorawan_eu.c: 736: }
 17570                           ;lorawan_eu.c: 737: return ptr;
 17571                           
 17572                           ; BSR set to: 2
 17573  003C98  C0A6  F0A6         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 17574  003C9C  C0A7  F0A7         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 17575  003CA0  0012               	return	
 17576  003CA2                     __end_of_ExecuteNewChannel:
 17577                           	opt stack 0
 17578                           tosu	equ	0xFFF
 17579                           tosh	equ	0xFFE
 17580                           tosl	equ	0xFFD
 17581                           pclath	equ	0xFFA
 17582                           tblptru	equ	0xFF8
 17583                           tblptrh	equ	0xFF7
 17584                           tblptrl	equ	0xFF6
 17585                           tablat	equ	0xFF5
 17586                           prodh	equ	0xFF4
 17587                           prodl	equ	0xFF3
 17588                           intcon	equ	0xFF2
 17589                           intcon2	equ	0xFF1
 17590                           intcon3	equ	0xFF0
 17591                           indf0	equ	0xFEF
 17592                           postinc0	equ	0xFEE
 17593                           fsr0h	equ	0xFEA
 17594                           fsr0l	equ	0xFE9
 17595                           wreg	equ	0xFE8
 17596                           postinc1	equ	0xFE6
 17597                           postdec1	equ	0xFE5
 17598                           plusw1	equ	0xFE3
 17599                           fsr1h	equ	0xFE2
 17600                           fsr1l	equ	0xFE1
 17601                           indf2	equ	0xFDF
 17602                           postinc2	equ	0xFDE
 17603                           postdec2	equ	0xFDD
 17604                           fsr2h	equ	0xFDA
 17605                           fsr2l	equ	0xFD9
 17606                           status	equ	0xFD8
 17607                           
 17608 ;; *************** function _ValidateFrequency *****************
 17609 ;; Defined at:
 17610 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17611 ;; Parameters:    Size  Location     Type
 17612 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 17613 ;; Auto vars:     Size  Location     Type
 17614 ;;  result          1    4[BANK0 ] enum E7249
 17615 ;; Return value:  Size  Location     Type
 17616 ;;                  1    wreg      enum E7249
 17617 ;; Registers used:
 17618 ;;		wreg, status,2, status,0
 17619 ;; Tracked objects:
 17620 ;;		On entry : 0/0
 17621 ;;		On exit  : 0/0
 17622 ;;		Unchanged: 0/0
 17623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17624 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17625 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17627 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17628 ;;Total ram usage:        5 bytes
 17629 ;; Hardware stack levels used:    1
 17630 ;; Hardware stack levels required when called:    7
 17631 ;; This function calls:
 17632 ;;		Nothing
 17633 ;; This function is called by:
 17634 ;;		_ExecuteNewChannel
 17635 ;;		_ExecuteRxParamSetupReq
 17636 ;;		_UpdateCfList
 17637 ;;		_LORAWAN_SetReceiveWindow2Parameters
 17638 ;;		_LORAWAN_SetFrequency
 17639 ;; This function uses a non-reentrant model
 17640 ;;
 17641                           
 17642                           	psect	text86
 17643  007CEC                     __ptext86:
 17644                           	opt stack 0
 17645  007CEC                     _ValidateFrequency:
 17646                           	opt stack 18
 17647                           
 17648                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 17649                           
 17650                           ; BSR set to: 2
 17651                           ;incstack = 0
 17652  007CEC  0E00               	movlw	0
 17653  007CEE  0100               	movlb	0	; () banked
 17654  007CF0  6F64               	movwf	ValidateFrequency@result& (0+255),b
 17655                           
 17656                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 17657  007CF2  0102               	movlb	2	; () banked
 17658  007CF4  51A4               	movf	(_loRa+164)& (0+255),w,b
 17659  007CF6  A4D8               	btfss	status,2,c
 17660  007CF8  D013               	goto	l1236
 17661                           
 17662                           ; BSR set to: 2
 17663                           ;lorawan_eu.c: 1093: {
 17664                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 17665  007CFA  0E81               	movlw	129
 17666  007CFC  0100               	movlb	0	; () banked
 17667  007CFE  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 17668  007D00  0E25               	movlw	37
 17669  007D02  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 17670  007D04  0EDB               	movlw	219
 17671  007D06  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 17672  007D08  0E33               	movlw	51
 17673  007D0A  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 17674  007D0C  B0D8               	btfsc	status,0,c
 17675  007D0E  D01D               	goto	u16380
 17676                           
 17677                           ; BSR set to: 0
 17678  007D10  0EC0               	movlw	192
 17679  007D12  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 17680  007D14  0E55               	movlw	85
 17681  007D16  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 17682  007D18  0E70               	movlw	112
 17683  007D1A  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 17684  007D1C  0E33               	movlw	51
 17685  007D1E  D012               	goto	L30
 17686  007D20                     l1236:
 17687                           
 17688                           ;lorawan_eu.c: 1099: else
 17689                           ;lorawan_eu.c: 1100: {
 17690                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 17691                           
 17692                           ; BSR set to: 0
 17693  007D20  0E71               	movlw	113
 17694  007D22  0100               	movlb	0	; () banked
 17695  007D24  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 17696  007D26  0E5E               	movlw	94
 17697  007D28  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 17698  007D2A  0EEA               	movlw	234
 17699  007D2C  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 17700  007D2E  0E19               	movlw	25
 17701  007D30  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 17702  007D32  B0D8               	btfsc	status,0,c
 17703  007D34  D00A               	goto	u16380
 17704                           
 17705                           ; BSR set to: 0
 17706  007D36  0E90               	movlw	144
 17707  007D38  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 17708  007D3A  0ED1               	movlw	209
 17709  007D3C  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 17710  007D3E  0ECF               	movlw	207
 17711  007D40  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 17712  007D42  0E19               	movlw	25
 17713  007D44                     L30:
 17714  007D44  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 17715  007D46  B0D8               	btfsc	status,0,c
 17716  007D48  D002               	goto	l1241
 17717  007D4A                     u16380:
 17718                           
 17719                           ; BSR set to: 0
 17720                           ;lorawan_eu.c: 1102: {
 17721                           ;lorawan_eu.c: 1103: result = INVALID_PARAMETER ;
 17722                           
 17723                           ; BSR set to: 0
 17724  007D4A  0E03               	movlw	3
 17725  007D4C  6F64               	movwf	ValidateFrequency@result& (0+255),b
 17726  007D4E                     l1241:
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;lorawan_eu.c: 1104: }
 17730                           ;lorawan_eu.c: 1105: }
 17731                           ;lorawan_eu.c: 1107: return result;
 17732                           
 17733                           ; BSR set to: 0
 17734  007D4E  5164               	movf	ValidateFrequency@result& (0+255),w,b
 17735  007D50  0012               	return	
 17736  007D52                     __end_of_ValidateFrequency:
 17737                           	opt stack 0
 17738                           tosu	equ	0xFFF
 17739                           tosh	equ	0xFFE
 17740                           tosl	equ	0xFFD
 17741                           pclath	equ	0xFFA
 17742                           tblptru	equ	0xFF8
 17743                           tblptrh	equ	0xFF7
 17744                           tblptrl	equ	0xFF6
 17745                           tablat	equ	0xFF5
 17746                           prodh	equ	0xFF4
 17747                           prodl	equ	0xFF3
 17748                           intcon	equ	0xFF2
 17749                           intcon2	equ	0xFF1
 17750                           intcon3	equ	0xFF0
 17751                           indf0	equ	0xFEF
 17752                           postinc0	equ	0xFEE
 17753                           fsr0h	equ	0xFEA
 17754                           fsr0l	equ	0xFE9
 17755                           wreg	equ	0xFE8
 17756                           postinc1	equ	0xFE6
 17757                           postdec1	equ	0xFE5
 17758                           plusw1	equ	0xFE3
 17759                           fsr1h	equ	0xFE2
 17760                           fsr1l	equ	0xFE1
 17761                           indf2	equ	0xFDF
 17762                           postinc2	equ	0xFDE
 17763                           postdec2	equ	0xFDD
 17764                           fsr2h	equ	0xFDA
 17765                           fsr2l	equ	0xFD9
 17766                           status	equ	0xFD8
 17767                           
 17768 ;; *************** function _ValidateDataRange *****************
 17769 ;; Defined at:
 17770 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17771 ;; Parameters:    Size  Location     Type
 17772 ;;  dataRangeNew    1    wreg     unsigned char 
 17773 ;; Auto vars:     Size  Location     Type
 17774 ;;  dataRangeNew    1    3[BANK0 ] unsigned char 
 17775 ;;  dataRateMin     1    5[BANK0 ] unsigned char 
 17776 ;;  dataRateMax     1    4[BANK0 ] unsigned char 
 17777 ;;  result          1    2[BANK0 ] enum E7249
 17778 ;; Return value:  Size  Location     Type
 17779 ;;                  1    wreg      enum E7249
 17780 ;; Registers used:
 17781 ;;		wreg, status,2, status,0, cstack
 17782 ;; Tracked objects:
 17783 ;;		On entry : 0/0
 17784 ;;		On exit  : 0/0
 17785 ;;		Unchanged: 0/0
 17786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17788 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17790 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17791 ;;Total ram usage:        4 bytes
 17792 ;; Hardware stack levels used:    1
 17793 ;; Hardware stack levels required when called:    8
 17794 ;; This function calls:
 17795 ;;		_ValidateDataRate
 17796 ;; This function is called by:
 17797 ;;		_ExecuteNewChannel
 17798 ;;		_LORAWAN_SetDataRange
 17799 ;; This function uses a non-reentrant model
 17800 ;;
 17801                           
 17802                           	psect	text87
 17803  008528                     __ptext87:
 17804                           	opt stack 0
 17805  008528                     _ValidateDataRange:
 17806                           	opt stack 16
 17807                           
 17808                           ; BSR set to: 0
 17809                           ;incstack = 0
 17810                           ;ValidateDataRange@dataRangeNew stored from wreg
 17811  008528  0100               	movlb	0	; () banked
 17812  00852A  6F63               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 17813                           
 17814                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 17815  00852C  0E00               	movlw	0
 17816  00852E  0100               	movlb	0	; () banked
 17817  008530  6F62               	movwf	ValidateDataRange@result& (0+255),b
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 17821                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 17822  008532  5163               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 17823  008534  0B0F               	andlw	15
 17824  008536  6F65               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 17825                           
 17826                           ; BSR set to: 0
 17827                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 17828  008538  3963               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 17829  00853A  0B0F               	andlw	15
 17830  00853C  0B0F               	andlw	15
 17831  00853E  6F64               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 17832                           
 17833                           ; BSR set to: 0
 17834                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 17835  008540  5164               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 17836  008542  EC30  F048         	call	_ValidateDataRate
 17837  008546  0900               	iorlw	0
 17838  008548  A4D8               	btfss	status,2,c
 17839  00854A  D00C               	goto	u16410
 17840  00854C  0100               	movlb	0	; () banked
 17841  00854E  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 17842  008550  EC30  F048         	call	_ValidateDataRate
 17843  008554  0900               	iorlw	0
 17844  008556  A4D8               	btfss	status,2,c
 17845  008558  D005               	goto	u16410
 17846  00855A  0100               	movlb	0	; () banked
 17847  00855C  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 17848  00855E  5D64               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 17849  008560  B0D8               	btfsc	status,0,c
 17850  008562  D003               	goto	l1247
 17851  008564                     u16410:
 17852                           
 17853                           ;lorawan_eu.c: 1119: {
 17854                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 17855                           
 17856                           ; BSR set to: 0
 17857  008564  0E03               	movlw	3
 17858  008566  0100               	movlb	0	; () banked
 17859  008568  6F62               	movwf	ValidateDataRange@result& (0+255),b
 17860  00856A                     l1247:
 17861                           
 17862                           ; BSR set to: 0
 17863                           ;lorawan_eu.c: 1121: }
 17864                           ;lorawan_eu.c: 1122: return result;
 17865  00856A  5162               	movf	ValidateDataRange@result& (0+255),w,b
 17866  00856C  0012               	return	
 17867  00856E                     __end_of_ValidateDataRange:
 17868                           	opt stack 0
 17869                           tosu	equ	0xFFF
 17870                           tosh	equ	0xFFE
 17871                           tosl	equ	0xFFD
 17872                           pclath	equ	0xFFA
 17873                           tblptru	equ	0xFF8
 17874                           tblptrh	equ	0xFF7
 17875                           tblptrl	equ	0xFF6
 17876                           tablat	equ	0xFF5
 17877                           prodh	equ	0xFF4
 17878                           prodl	equ	0xFF3
 17879                           intcon	equ	0xFF2
 17880                           intcon2	equ	0xFF1
 17881                           intcon3	equ	0xFF0
 17882                           indf0	equ	0xFEF
 17883                           postinc0	equ	0xFEE
 17884                           fsr0h	equ	0xFEA
 17885                           fsr0l	equ	0xFE9
 17886                           wreg	equ	0xFE8
 17887                           postinc1	equ	0xFE6
 17888                           postdec1	equ	0xFE5
 17889                           plusw1	equ	0xFE3
 17890                           fsr1h	equ	0xFE2
 17891                           fsr1l	equ	0xFE1
 17892                           indf2	equ	0xFDF
 17893                           postinc2	equ	0xFDE
 17894                           postdec2	equ	0xFDD
 17895                           fsr2h	equ	0xFDA
 17896                           fsr2l	equ	0xFD9
 17897                           status	equ	0xFD8
 17898                           
 17899 ;; *************** function _UpdateFrequency *****************
 17900 ;; Defined at:
 17901 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17902 ;; Parameters:    Size  Location     Type
 17903 ;;  channelId       1    wreg     unsigned char 
 17904 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 17905 ;; Auto vars:     Size  Location     Type
 17906 ;;  channelId       1    4[BANK0 ] unsigned char 
 17907 ;; Return value:  Size  Location     Type
 17908 ;;                  1    wreg      void 
 17909 ;; Registers used:
 17910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17911 ;; Tracked objects:
 17912 ;;		On entry : 0/0
 17913 ;;		On exit  : 0/0
 17914 ;;		Unchanged: 0/0
 17915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17916 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17919 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17920 ;;Total ram usage:        5 bytes
 17921 ;; Hardware stack levels used:    1
 17922 ;; Hardware stack levels required when called:    7
 17923 ;; This function calls:
 17924 ;;		Nothing
 17925 ;; This function is called by:
 17926 ;;		_ExecuteNewChannel
 17927 ;;		_LORAWAN_SetFrequency
 17928 ;; This function uses a non-reentrant model
 17929 ;;
 17930                           
 17931                           	psect	text88
 17932  0085B4                     __ptext88:
 17933                           	opt stack 0
 17934  0085B4                     _UpdateFrequency:
 17935                           	opt stack 17
 17936                           
 17937                           ; BSR set to: 0
 17938                           ;incstack = 0
 17939                           ;UpdateFrequency@channelId stored from wreg
 17940  0085B4  0100               	movlb	0	; () banked
 17941  0085B6  6F64               	movwf	UpdateFrequency@channelId& (0+255),b
 17942                           
 17943                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 17944  0085B8  0100               	movlb	0	; () banked
 17945  0085BA  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 17946  0085BC  0D0E               	mullw	14
 17947  0085BE  0E00               	movlw	low _Channels
 17948  0085C0  24F3               	addwf	prodl,w,c
 17949  0085C2  6ED9               	movwf	fsr2l,c
 17950  0085C4  0E04               	movlw	high _Channels
 17951  0085C6  20F4               	addwfc	prodh,w,c
 17952  0085C8  6EDA               	movwf	fsr2h,c
 17953  0085CA  C060  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 17954  0085CE  C061  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 17955  0085D2  C062  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 17956  0085D6  C063  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 17957                           
 17958                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 17959  0085DA  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 17960  0085DC  0D0E               	mullw	14
 17961  0085DE  0E0D               	movlw	13
 17962  0085E0  26F3               	addwf	prodl,f,c
 17963  0085E2  0E00               	movlw	0
 17964  0085E4  22F4               	addwfc	prodh,f,c
 17965  0085E6  0E00               	movlw	low _Channels
 17966  0085E8  24F3               	addwf	prodl,w,c
 17967  0085EA  6ED9               	movwf	fsr2l,c
 17968  0085EC  0E04               	movlw	high _Channels
 17969  0085EE  20F4               	addwfc	prodh,w,c
 17970  0085F0  6EDA               	movwf	fsr2h,c
 17971  0085F2  0E00               	movlw	0
 17972  0085F4  80DB               	bsf	plusw2,0,c
 17973                           
 17974                           ; BSR set to: 0
 17975  0085F6  0012               	return		;funcret
 17976  0085F8                     __end_of_UpdateFrequency:
 17977                           	opt stack 0
 17978                           tosu	equ	0xFFF
 17979                           tosh	equ	0xFFE
 17980                           tosl	equ	0xFFD
 17981                           pclath	equ	0xFFA
 17982                           tblptru	equ	0xFF8
 17983                           tblptrh	equ	0xFF7
 17984                           tblptrl	equ	0xFF6
 17985                           tablat	equ	0xFF5
 17986                           prodh	equ	0xFF4
 17987                           prodl	equ	0xFF3
 17988                           intcon	equ	0xFF2
 17989                           intcon2	equ	0xFF1
 17990                           intcon3	equ	0xFF0
 17991                           indf0	equ	0xFEF
 17992                           postinc0	equ	0xFEE
 17993                           fsr0h	equ	0xFEA
 17994                           fsr0l	equ	0xFE9
 17995                           wreg	equ	0xFE8
 17996                           postinc1	equ	0xFE6
 17997                           postdec1	equ	0xFE5
 17998                           plusw1	equ	0xFE3
 17999                           fsr1h	equ	0xFE2
 18000                           fsr1l	equ	0xFE1
 18001                           indf2	equ	0xFDF
 18002                           postinc2	equ	0xFDE
 18003                           postdec2	equ	0xFDD
 18004                           plusw2	equ	0xFDB
 18005                           fsr2h	equ	0xFDA
 18006                           fsr2l	equ	0xFD9
 18007                           status	equ	0xFD8
 18008                           
 18009 ;; *************** function _UpdateDutyCycle *****************
 18010 ;; Defined at:
 18011 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18012 ;; Parameters:    Size  Location     Type
 18013 ;;  channelId       1    wreg     unsigned char 
 18014 ;;  dutyCycleNew    2    0[BANK0 ] unsigned int 
 18015 ;; Auto vars:     Size  Location     Type
 18016 ;;  channelId       1    2[BANK0 ] unsigned char 
 18017 ;; Return value:  Size  Location     Type
 18018 ;;                  1    wreg      void 
 18019 ;; Registers used:
 18020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18021 ;; Tracked objects:
 18022 ;;		On entry : 0/0
 18023 ;;		On exit  : 0/0
 18024 ;;		Unchanged: 0/0
 18025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18026 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18029 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18030 ;;Total ram usage:        3 bytes
 18031 ;; Hardware stack levels used:    1
 18032 ;; Hardware stack levels required when called:    7
 18033 ;; This function calls:
 18034 ;;		Nothing
 18035 ;; This function is called by:
 18036 ;;		_ExecuteNewChannel
 18037 ;;		_LORAWAN_SetDutyCycle
 18038 ;; This function uses a non-reentrant model
 18039 ;;
 18040                           
 18041                           	psect	text89
 18042  0085F8                     __ptext89:
 18043                           	opt stack 0
 18044  0085F8                     _UpdateDutyCycle:
 18045                           	opt stack 17
 18046                           
 18047                           ; BSR set to: 0
 18048                           ;incstack = 0
 18049                           ;UpdateDutyCycle@channelId stored from wreg
 18050  0085F8  0100               	movlb	0	; () banked
 18051  0085FA  6F62               	movwf	UpdateDutyCycle@channelId& (0+255),b
 18052                           
 18053                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 18054  0085FC  0100               	movlb	0	; () banked
 18055  0085FE  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 18056  008600  0D0E               	mullw	14
 18057  008602  0E06               	movlw	6
 18058  008604  26F3               	addwf	prodl,f,c
 18059  008606  0E00               	movlw	0
 18060  008608  22F4               	addwfc	prodh,f,c
 18061  00860A  0E00               	movlw	low _Channels
 18062  00860C  24F3               	addwf	prodl,w,c
 18063  00860E  6ED9               	movwf	fsr2l,c
 18064  008610  0E04               	movlw	high _Channels
 18065  008612  20F4               	addwfc	prodh,w,c
 18066  008614  6EDA               	movwf	fsr2h,c
 18067  008616  C060  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 18068  00861A  C061  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 18069                           
 18070                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 18071  00861E  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 18072  008620  0D0E               	mullw	14
 18073  008622  0E0D               	movlw	13
 18074  008624  26F3               	addwf	prodl,f,c
 18075  008626  0E00               	movlw	0
 18076  008628  22F4               	addwfc	prodh,f,c
 18077  00862A  0E00               	movlw	low _Channels
 18078  00862C  24F3               	addwf	prodl,w,c
 18079  00862E  6ED9               	movwf	fsr2l,c
 18080  008630  0E04               	movlw	high _Channels
 18081  008632  20F4               	addwfc	prodh,w,c
 18082  008634  6EDA               	movwf	fsr2h,c
 18083  008636  0E00               	movlw	0
 18084  008638  84DB               	bsf	plusw2,2,c
 18085                           
 18086                           ; BSR set to: 0
 18087  00863A  0012               	return		;funcret
 18088  00863C                     __end_of_UpdateDutyCycle:
 18089                           	opt stack 0
 18090                           tosu	equ	0xFFF
 18091                           tosh	equ	0xFFE
 18092                           tosl	equ	0xFFD
 18093                           pclath	equ	0xFFA
 18094                           tblptru	equ	0xFF8
 18095                           tblptrh	equ	0xFF7
 18096                           tblptrl	equ	0xFF6
 18097                           tablat	equ	0xFF5
 18098                           prodh	equ	0xFF4
 18099                           prodl	equ	0xFF3
 18100                           intcon	equ	0xFF2
 18101                           intcon2	equ	0xFF1
 18102                           intcon3	equ	0xFF0
 18103                           indf0	equ	0xFEF
 18104                           postinc0	equ	0xFEE
 18105                           fsr0h	equ	0xFEA
 18106                           fsr0l	equ	0xFE9
 18107                           wreg	equ	0xFE8
 18108                           postinc1	equ	0xFE6
 18109                           postdec1	equ	0xFE5
 18110                           plusw1	equ	0xFE3
 18111                           fsr1h	equ	0xFE2
 18112                           fsr1l	equ	0xFE1
 18113                           indf2	equ	0xFDF
 18114                           postinc2	equ	0xFDE
 18115                           postdec2	equ	0xFDD
 18116                           plusw2	equ	0xFDB
 18117                           fsr2h	equ	0xFDA
 18118                           fsr2l	equ	0xFD9
 18119                           status	equ	0xFD8
 18120                           
 18121 ;; *************** function _UpdateDataRange *****************
 18122 ;; Defined at:
 18123 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18124 ;; Parameters:    Size  Location     Type
 18125 ;;  channelId       1    wreg     unsigned char 
 18126 ;;  dataRangeNew    1    0[BANK0 ] unsigned char 
 18127 ;; Auto vars:     Size  Location     Type
 18128 ;;  channelId       1    2[BANK0 ] unsigned char 
 18129 ;;  i               1    3[BANK0 ] unsigned char 
 18130 ;; Return value:  Size  Location     Type
 18131 ;;                  1    wreg      void 
 18132 ;; Registers used:
 18133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18134 ;; Tracked objects:
 18135 ;;		On entry : 0/0
 18136 ;;		On exit  : 0/0
 18137 ;;		Unchanged: 0/0
 18138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18139 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18140 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18141 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18142 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18143 ;;Total ram usage:        4 bytes
 18144 ;; Hardware stack levels used:    1
 18145 ;; Hardware stack levels required when called:    7
 18146 ;; This function calls:
 18147 ;;		Nothing
 18148 ;; This function is called by:
 18149 ;;		_ExecuteNewChannel
 18150 ;;		_LORAWAN_SetDataRange
 18151 ;; This function uses a non-reentrant model
 18152 ;;
 18153                           
 18154                           	psect	text90
 18155  0055DA                     __ptext90:
 18156                           	opt stack 0
 18157  0055DA                     _UpdateDataRange:
 18158                           	opt stack 17
 18159                           
 18160                           ; BSR set to: 0
 18161                           ;incstack = 0
 18162                           ;UpdateDataRange@channelId stored from wreg
 18163  0055DA  0100               	movlb	0	; () banked
 18164  0055DC  6F62               	movwf	UpdateDataRange@channelId& (0+255),b
 18165                           
 18166                           ;lorawan_eu.c: 1011: uint8_t i;
 18167                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 18168  0055DE  0E07               	movlw	7
 18169  0055E0  0102               	movlb	2	; () banked
 18170  0055E2  6FEB               	movwf	(_loRa+235)& (0+255),b
 18171                           
 18172                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 18173  0055E4  0E00               	movlw	0
 18174  0055E6  6FEC               	movwf	(_loRa+236)& (0+255),b
 18175                           
 18176                           ; BSR set to: 2
 18177                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 18178  0055E8  0100               	movlb	0	; () banked
 18179  0055EA  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 18180  0055EC  0D0E               	mullw	14
 18181  0055EE  0E05               	movlw	5
 18182  0055F0  26F3               	addwf	prodl,f,c
 18183  0055F2  0E00               	movlw	0
 18184  0055F4  22F4               	addwfc	prodh,f,c
 18185  0055F6  0E00               	movlw	low _Channels
 18186  0055F8  24F3               	addwf	prodl,w,c
 18187  0055FA  6ED9               	movwf	fsr2l,c
 18188  0055FC  0E04               	movlw	high _Channels
 18189  0055FE  20F4               	addwfc	prodh,w,c
 18190  005600  6EDA               	movwf	fsr2h,c
 18191  005602  C060  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 18192                           
 18193                           ; BSR set to: 0
 18194                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 18195  005606  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 18196  005608  0D0E               	mullw	14
 18197  00560A  0E0D               	movlw	13
 18198  00560C  26F3               	addwf	prodl,f,c
 18199  00560E  0E00               	movlw	0
 18200  005610  22F4               	addwfc	prodh,f,c
 18201  005612  0E00               	movlw	low _Channels
 18202  005614  24F3               	addwf	prodl,w,c
 18203  005616  6ED9               	movwf	fsr2l,c
 18204  005618  0E04               	movlw	high _Channels
 18205  00561A  20F4               	addwfc	prodh,w,c
 18206  00561C  6EDA               	movwf	fsr2h,c
 18207  00561E  0E00               	movlw	0
 18208  005620  82DB               	bsf	plusw2,1,c
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 18212  005622  0E00               	movlw	0
 18213  005624  6F63               	movwf	UpdateDataRange@i& (0+255),b
 18214  005626  D06D               	goto	l1211
 18215  005628                     
 18216                           ; BSR set to: 0
 18217                           ;lorawan_eu.c: 1020: {
 18218                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 18219                           
 18220                           ; BSR set to: 0
 18221  005628  5163               	movf	UpdateDataRange@i& (0+255),w,b
 18222  00562A  0D0E               	mullw	14
 18223  00562C  0E05               	movlw	5
 18224  00562E  26F3               	addwf	prodl,f,c
 18225  005630  0E00               	movlw	0
 18226  005632  22F4               	addwfc	prodh,f,c
 18227  005634  0E00               	movlw	low _Channels
 18228  005636  24F3               	addwf	prodl,w,c
 18229  005638  6ED9               	movwf	fsr2l,c
 18230  00563A  0E04               	movlw	high _Channels
 18231  00563C  20F4               	addwfc	prodh,w,c
 18232  00563E  6EDA               	movwf	fsr2h,c
 18233  005640  0104               	movlb	4	; () banked
 18234  005642  50DF               	movf	223,w,c
 18235  005644  0B0F               	andlw	15
 18236  005646  0100               	movlb	0	; () banked
 18237  005648  6F61               	movwf	??_UpdateDataRange& (0+255),b
 18238  00564A  0102               	movlb	2	; () banked
 18239  00564C  51EB               	movf	(_loRa+235)& (0+255),w,b
 18240  00564E  0100               	movlb	0	; () banked
 18241  005650  5D61               	subwf	??_UpdateDataRange& (0+255),w,b
 18242  005652  B0D8               	btfsc	status,0,c
 18243  005654  D020               	goto	l1213
 18244                           
 18245                           ; BSR set to: 0
 18246  005656  5163               	movf	UpdateDataRange@i& (0+255),w,b
 18247  005658  0D0E               	mullw	14
 18248  00565A  0E04               	movlw	4
 18249  00565C  26F3               	addwf	prodl,f,c
 18250  00565E  0E00               	movlw	0
 18251  005660  22F4               	addwfc	prodh,f,c
 18252  005662  0E00               	movlw	low _Channels
 18253  005664  24F3               	addwf	prodl,w,c
 18254  005666  6ED9               	movwf	fsr2l,c
 18255  005668  0E04               	movlw	high _Channels
 18256  00566A  20F4               	addwfc	prodh,w,c
 18257  00566C  6EDA               	movwf	fsr2h,c
 18258  00566E  04DE               	decf	postinc2,w,c
 18259  005670  A4D8               	btfss	status,2,c
 18260  005672  D011               	goto	l1213
 18261                           
 18262                           ; BSR set to: 0
 18263                           ;lorawan_eu.c: 1022: {
 18264                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 18265  005674  5163               	movf	UpdateDataRange@i& (0+255),w,b
 18266  005676  0D0E               	mullw	14
 18267  005678  0E05               	movlw	5
 18268  00567A  26F3               	addwf	prodl,f,c
 18269  00567C  0E00               	movlw	0
 18270  00567E  22F4               	addwfc	prodh,f,c
 18271  005680  0E00               	movlw	low _Channels
 18272  005682  24F3               	addwf	prodl,w,c
 18273  005684  6ED9               	movwf	fsr2l,c
 18274  005686  0E04               	movlw	high _Channels
 18275  005688  20F4               	addwfc	prodh,w,c
 18276  00568A  6EDA               	movwf	fsr2h,c
 18277  00568C  0104               	movlb	4	; () banked
 18278  00568E  50DF               	movf	223,w,c
 18279  005690  0B0F               	andlw	15
 18280  005692  0102               	movlb	2	; () banked
 18281  005694  6FEB               	movwf	(_loRa+235)& (0+255),b
 18282  005696                     l1213:
 18283                           
 18284                           ;lorawan_eu.c: 1024: }
 18285                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 18286  005696  0100               	movlb	0	; () banked
 18287  005698  5163               	movf	UpdateDataRange@i& (0+255),w,b
 18288  00569A  0D0E               	mullw	14
 18289  00569C  0E05               	movlw	5
 18290  00569E  26F3               	addwf	prodl,f,c
 18291  0056A0  0E00               	movlw	0
 18292  0056A2  22F4               	addwfc	prodh,f,c
 18293  0056A4  0E00               	movlw	low _Channels
 18294  0056A6  24F3               	addwf	prodl,w,c
 18295  0056A8  6ED9               	movwf	fsr2l,c
 18296  0056AA  0E04               	movlw	high _Channels
 18297  0056AC  20F4               	addwfc	prodh,w,c
 18298  0056AE  6EDA               	movwf	fsr2h,c
 18299  0056B0  0104               	movlb	4	; () banked
 18300  0056B2  38DF               	swapf	223,w,c
 18301  0056B4  0B0F               	andlw	15
 18302  0056B6  0102               	movlb	2	; () banked
 18303  0056B8  61EC               	cpfslt	(_loRa+236)& (0+255),b
 18304  0056BA  D021               	goto	l1214
 18305                           
 18306                           ; BSR set to: 2
 18307  0056BC  0100               	movlb	0	; () banked
 18308  0056BE  5163               	movf	UpdateDataRange@i& (0+255),w,b
 18309  0056C0  0D0E               	mullw	14
 18310  0056C2  0E04               	movlw	4
 18311  0056C4  26F3               	addwf	prodl,f,c
 18312  0056C6  0E00               	movlw	0
 18313  0056C8  22F4               	addwfc	prodh,f,c
 18314  0056CA  0E00               	movlw	low _Channels
 18315  0056CC  24F3               	addwf	prodl,w,c
 18316  0056CE  6ED9               	movwf	fsr2l,c
 18317  0056D0  0E04               	movlw	high _Channels
 18318  0056D2  20F4               	addwfc	prodh,w,c
 18319  0056D4  6EDA               	movwf	fsr2h,c
 18320  0056D6  04DE               	decf	postinc2,w,c
 18321  0056D8  A4D8               	btfss	status,2,c
 18322  0056DA  D011               	goto	l1214
 18323                           
 18324                           ; BSR set to: 0
 18325                           ;lorawan_eu.c: 1026: {
 18326                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 18327  0056DC  5163               	movf	UpdateDataRange@i& (0+255),w,b
 18328  0056DE  0D0E               	mullw	14
 18329  0056E0  0E05               	movlw	5
 18330  0056E2  26F3               	addwf	prodl,f,c
 18331  0056E4  0E00               	movlw	0
 18332  0056E6  22F4               	addwfc	prodh,f,c
 18333  0056E8  0E00               	movlw	low _Channels
 18334  0056EA  24F3               	addwf	prodl,w,c
 18335  0056EC  6ED9               	movwf	fsr2l,c
 18336  0056EE  0E04               	movlw	high _Channels
 18337  0056F0  20F4               	addwfc	prodh,w,c
 18338  0056F2  6EDA               	movwf	fsr2h,c
 18339  0056F4  0104               	movlb	4	; () banked
 18340  0056F6  38DF               	swapf	223,w,c
 18341  0056F8  0B0F               	andlw	15
 18342  0056FA  0102               	movlb	2	; () banked
 18343  0056FC  6FEC               	movwf	(_loRa+236)& (0+255),b
 18344  0056FE                     l1214:
 18345                           
 18346                           ; BSR set to: 2
 18347  0056FE  0100               	movlb	0	; () banked
 18348  005700  2B63               	incf	UpdateDataRange@i& (0+255),f,b
 18349  005702                     l1211:
 18350                           
 18351                           ; BSR set to: 0
 18352                           
 18353                           ; BSR set to: 0
 18354  005702  0102               	movlb	2	; () banked
 18355  005704  51ED               	movf	(_loRa+237)& (0+255),w,b
 18356  005706  0100               	movlb	0	; () banked
 18357  005708  5D63               	subwf	UpdateDataRange@i& (0+255),w,b
 18358  00570A  A0D8               	btfss	status,0,c
 18359  00570C  D78D               	goto	l1212
 18360                           
 18361                           ; BSR set to: 0
 18362                           ;lorawan_eu.c: 1028: }
 18363                           ;lorawan_eu.c: 1029: }
 18364                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 18365                           
 18366                           ; BSR set to: 0
 18367  00570E  0102               	movlb	2	; () banked
 18368  005710  51DF               	movf	(_loRa+223)& (0+255),w,b
 18369  005712  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 18370  005714  A0D8               	btfss	status,0,c
 18371                           
 18372                           ; BSR set to: 2
 18373                           ;lorawan_eu.c: 1032: {
 18374                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 18375  005716  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 18376                           
 18377                           ; BSR set to: 2
 18378                           ;lorawan_eu.c: 1034: }
 18379                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 18380                           
 18381                           ; BSR set to: 2
 18382  00571A  51EB               	movf	(_loRa+235)& (0+255),w,b
 18383  00571C  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 18384  00571E  B0D8               	btfsc	status,0,c
 18385  005720  0012               	return	
 18386                           
 18387                           ; BSR set to: 2
 18388                           ;lorawan_eu.c: 1037: {
 18389                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 18390  005722  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 18391  005726  0012               	return	
 18392  005728                     __end_of_UpdateDataRange:
 18393                           	opt stack 0
 18394                           tosu	equ	0xFFF
 18395                           tosh	equ	0xFFE
 18396                           tosl	equ	0xFFD
 18397                           pclath	equ	0xFFA
 18398                           tblptru	equ	0xFF8
 18399                           tblptrh	equ	0xFF7
 18400                           tblptrl	equ	0xFF6
 18401                           tablat	equ	0xFF5
 18402                           prodh	equ	0xFF4
 18403                           prodl	equ	0xFF3
 18404                           intcon	equ	0xFF2
 18405                           intcon2	equ	0xFF1
 18406                           intcon3	equ	0xFF0
 18407                           indf0	equ	0xFEF
 18408                           postinc0	equ	0xFEE
 18409                           fsr0h	equ	0xFEA
 18410                           fsr0l	equ	0xFE9
 18411                           wreg	equ	0xFE8
 18412                           postinc1	equ	0xFE6
 18413                           postdec1	equ	0xFE5
 18414                           plusw1	equ	0xFE3
 18415                           fsr1h	equ	0xFE2
 18416                           fsr1l	equ	0xFE1
 18417                           indf2	equ	0xFDF
 18418                           postinc2	equ	0xFDE
 18419                           postdec2	equ	0xFDD
 18420                           plusw2	equ	0xFDB
 18421                           fsr2h	equ	0xFDA
 18422                           fsr2l	equ	0xFD9
 18423                           status	equ	0xFD8
 18424                           
 18425 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 18426 ;; Defined at:
 18427 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18428 ;; Parameters:    Size  Location     Type
 18429 ;;  channelId       1    wreg     unsigned char 
 18430 ;;  statusNew       1    4[BANK0 ] unsigned char 
 18431 ;; Auto vars:     Size  Location     Type
 18432 ;;  channelId       1    6[BANK0 ] unsigned char 
 18433 ;;  result          1    5[BANK0 ] enum E7249
 18434 ;; Return value:  Size  Location     Type
 18435 ;;                  1    wreg      enum E7249
 18436 ;; Registers used:
 18437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18438 ;; Tracked objects:
 18439 ;;		On entry : 0/0
 18440 ;;		On exit  : 0/0
 18441 ;;		Unchanged: 0/0
 18442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18443 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18444 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18446 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18447 ;;Total ram usage:        3 bytes
 18448 ;; Hardware stack levels used:    1
 18449 ;; Hardware stack levels required when called:    8
 18450 ;; This function calls:
 18451 ;;		_UpdateChannelIdStatus
 18452 ;;		_ValidateChannelId
 18453 ;; This function is called by:
 18454 ;;		_ExecuteNewChannel
 18455 ;;		_UpdateCfList
 18456 ;; This function uses a non-reentrant model
 18457 ;;
 18458                           
 18459                           	psect	text91
 18460  0080AE                     __ptext91:
 18461                           	opt stack 0
 18462  0080AE                     _LORAWAN_SetChannelIdStatus:
 18463                           	opt stack 17
 18464                           
 18465                           ; BSR set to: 2
 18466                           ;incstack = 0
 18467                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 18468  0080AE  0100               	movlb	0	; () banked
 18469  0080B0  6F66               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 18470                           
 18471                           ;lorawan_eu.c: 284: LorawanError_t result = OK;
 18472  0080B2  0E00               	movlw	0
 18473  0080B4  0100               	movlb	0	; () banked
 18474  0080B6  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 18475                           
 18476                           ; BSR set to: 0
 18477                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 18478  0080B8  0E01               	movlw	1
 18479  0080BA  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 18480  0080BC  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 18481  0080BE  ECDF  F046         	call	_ValidateChannelId
 18482  0080C2  0900               	iorlw	0
 18483  0080C4  B4D8               	btfsc	status,2,c
 18484  0080C6  D004               	goto	l999
 18485                           
 18486                           ;lorawan_eu.c: 288: {
 18487                           ;lorawan_eu.c: 289: result = INVALID_PARAMETER;
 18488  0080C8  0E03               	movlw	3
 18489  0080CA  0100               	movlb	0	; () banked
 18490  0080CC  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 18491                           
 18492                           ;lorawan_eu.c: 290: }
 18493  0080CE  0012               	return	
 18494  0080D0                     l999:
 18495                           
 18496                           ;lorawan_eu.c: 292: else
 18497                           ;lorawan_eu.c: 293: {
 18498                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 18499                           
 18500                           ; BSR set to: 0
 18501  0080D0  0100               	movlb	0	; () banked
 18502  0080D2  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 18503  0080D4  0D0E               	mullw	14
 18504  0080D6  0E0D               	movlw	13
 18505  0080D8  26F3               	addwf	prodl,f,c
 18506  0080DA  0E00               	movlw	0
 18507  0080DC  22F4               	addwfc	prodh,f,c
 18508  0080DE  0E00               	movlw	low _Channels
 18509  0080E0  24F3               	addwf	prodl,w,c
 18510  0080E2  6ED9               	movwf	fsr2l,c
 18511  0080E4  0E04               	movlw	high _Channels
 18512  0080E6  20F4               	addwfc	prodh,w,c
 18513  0080E8  6EDA               	movwf	fsr2h,c
 18514  0080EA  50DF               	movf	indf2,w,c
 18515  0080EC  0B07               	andlw	7
 18516  0080EE  0A07               	xorlw	7
 18517  0080F0  A4D8               	btfss	status,2,c
 18518  0080F2  D006               	goto	l1001
 18519                           
 18520                           ; BSR set to: 0
 18521                           ;lorawan_eu.c: 295: {
 18522                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 18523  0080F4  C064  F060         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 18524  0080F8  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 18525  0080FA  ECD9  F028         	call	_UpdateChannelIdStatus
 18526                           
 18527                           ;lorawan_eu.c: 297: }
 18528  0080FE  0012               	return	
 18529  008100                     l1001:
 18530                           
 18531                           ;lorawan_eu.c: 298: else
 18532                           ;lorawan_eu.c: 299: {
 18533                           ;lorawan_eu.c: 300: result = INVALID_PARAMETER;
 18534  008100  0E03               	movlw	3
 18535  008102  0100               	movlb	0	; () banked
 18536  008104  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 18537                           
 18538                           ; BSR set to: 0
 18539                           
 18540                           ; BSR set to: 0
 18541  008106  0012               	return	
 18542  008108                     __end_of_LORAWAN_SetChannelIdStatus:
 18543                           	opt stack 0
 18544                           tosu	equ	0xFFF
 18545                           tosh	equ	0xFFE
 18546                           tosl	equ	0xFFD
 18547                           pclath	equ	0xFFA
 18548                           tblptru	equ	0xFF8
 18549                           tblptrh	equ	0xFF7
 18550                           tblptrl	equ	0xFF6
 18551                           tablat	equ	0xFF5
 18552                           prodh	equ	0xFF4
 18553                           prodl	equ	0xFF3
 18554                           intcon	equ	0xFF2
 18555                           intcon2	equ	0xFF1
 18556                           intcon3	equ	0xFF0
 18557                           indf0	equ	0xFEF
 18558                           postinc0	equ	0xFEE
 18559                           fsr0h	equ	0xFEA
 18560                           fsr0l	equ	0xFE9
 18561                           wreg	equ	0xFE8
 18562                           postinc1	equ	0xFE6
 18563                           postdec1	equ	0xFE5
 18564                           plusw1	equ	0xFE3
 18565                           fsr1h	equ	0xFE2
 18566                           fsr1l	equ	0xFE1
 18567                           indf2	equ	0xFDF
 18568                           postinc2	equ	0xFDE
 18569                           postdec2	equ	0xFDD
 18570                           plusw2	equ	0xFDB
 18571                           fsr2h	equ	0xFDA
 18572                           fsr2l	equ	0xFD9
 18573                           status	equ	0xFD8
 18574                           
 18575 ;; *************** function _ValidateChannelId *****************
 18576 ;; Defined at:
 18577 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18578 ;; Parameters:    Size  Location     Type
 18579 ;;  channelId       1    wreg     unsigned char 
 18580 ;;  allowedForDe    1    0[BANK0 ] unsigned char 
 18581 ;; Auto vars:     Size  Location     Type
 18582 ;;  channelId       1    2[BANK0 ] unsigned char 
 18583 ;;  result          1    1[BANK0 ] enum E7249
 18584 ;; Return value:  Size  Location     Type
 18585 ;;                  1    wreg      enum E7249
 18586 ;; Registers used:
 18587 ;;		wreg, status,2, status,0
 18588 ;; Tracked objects:
 18589 ;;		On entry : 0/0
 18590 ;;		On exit  : 0/0
 18591 ;;		Unchanged: 0/0
 18592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18593 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18594 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18596 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18597 ;;Total ram usage:        3 bytes
 18598 ;; Hardware stack levels used:    1
 18599 ;; Hardware stack levels required when called:    7
 18600 ;; This function calls:
 18601 ;;		Nothing
 18602 ;; This function is called by:
 18603 ;;		_LORAWAN_SetChannelIdStatus
 18604 ;;		_ExecuteNewChannel
 18605 ;;		_LORAWAN_SetDataRange
 18606 ;;		_LORAWAN_GetDataRange
 18607 ;;		_LORAWAN_GetChannelIdStatus
 18608 ;;		_LORAWAN_SetFrequency
 18609 ;;		_LORAWAN_SetDutyCycle
 18610 ;;		_LORAWAN_GetDutyCycle
 18611 ;; This function uses a non-reentrant model
 18612 ;;
 18613                           
 18614                           	psect	text92
 18615  008DBE                     __ptext92:
 18616                           	opt stack 0
 18617  008DBE                     _ValidateChannelId:
 18618                           	opt stack 17
 18619                           
 18620                           ;incstack = 0
 18621                           ;ValidateChannelId@channelId stored from wreg
 18622  008DBE  0100               	movlb	0	; () banked
 18623  008DC0  6F62               	movwf	ValidateChannelId@channelId& (0+255),b
 18624                           
 18625                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 18626  008DC2  0E00               	movlw	0
 18627  008DC4  0100               	movlb	0	; () banked
 18628  008DC6  6F61               	movwf	ValidateChannelId@result& (0+255),b
 18629                           
 18630                           ; BSR set to: 0
 18631                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 18632  008DC8  0E10               	movlw	16
 18633  008DCA  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 18634  008DCC  D006               	goto	u15910
 18635                           
 18636                           ; BSR set to: 0
 18637  008DCE  5160               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 18638  008DD0  A4D8               	btfss	status,2,c
 18639  008DD2  D005               	goto	l1253
 18640                           
 18641                           ; BSR set to: 0
 18642  008DD4  0E03               	movlw	3
 18643  008DD6  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 18644  008DD8  D002               	goto	l1253
 18645  008DDA                     u15910:
 18646                           
 18647                           ; BSR set to: 0
 18648                           ;lorawan_eu.c: 1130: {
 18649                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 18650                           
 18651                           ; BSR set to: 0
 18652  008DDA  0E03               	movlw	3
 18653  008DDC  6F61               	movwf	ValidateChannelId@result& (0+255),b
 18654  008DDE                     l1253:
 18655                           
 18656                           ; BSR set to: 0
 18657                           ;lorawan_eu.c: 1132: }
 18658                           ;lorawan_eu.c: 1134: return result;
 18659  008DDE  5161               	movf	ValidateChannelId@result& (0+255),w,b
 18660  008DE0  0012               	return	
 18661  008DE2                     __end_of_ValidateChannelId:
 18662                           	opt stack 0
 18663                           tosu	equ	0xFFF
 18664                           tosh	equ	0xFFE
 18665                           tosl	equ	0xFFD
 18666                           pclath	equ	0xFFA
 18667                           tblptru	equ	0xFF8
 18668                           tblptrh	equ	0xFF7
 18669                           tblptrl	equ	0xFF6
 18670                           tablat	equ	0xFF5
 18671                           prodh	equ	0xFF4
 18672                           prodl	equ	0xFF3
 18673                           intcon	equ	0xFF2
 18674                           intcon2	equ	0xFF1
 18675                           intcon3	equ	0xFF0
 18676                           indf0	equ	0xFEF
 18677                           postinc0	equ	0xFEE
 18678                           fsr0h	equ	0xFEA
 18679                           fsr0l	equ	0xFE9
 18680                           wreg	equ	0xFE8
 18681                           postinc1	equ	0xFE6
 18682                           postdec1	equ	0xFE5
 18683                           plusw1	equ	0xFE3
 18684                           fsr1h	equ	0xFE2
 18685                           fsr1l	equ	0xFE1
 18686                           indf2	equ	0xFDF
 18687                           postinc2	equ	0xFDE
 18688                           postdec2	equ	0xFDD
 18689                           plusw2	equ	0xFDB
 18690                           fsr2h	equ	0xFDA
 18691                           fsr2l	equ	0xFD9
 18692                           status	equ	0xFD8
 18693                           
 18694 ;; *************** function _ExecuteLinkCheck *****************
 18695 ;; Defined at:
 18696 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18697 ;; Parameters:    Size  Location     Type
 18698 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18699 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18700 ;; Auto vars:     Size  Location     Type
 18701 ;;		None
 18702 ;; Return value:  Size  Location     Type
 18703 ;;                  2    0[BANK0 ] PTR unsigned char 
 18704 ;; Registers used:
 18705 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18706 ;; Tracked objects:
 18707 ;;		On entry : 0/0
 18708 ;;		On exit  : 0/0
 18709 ;;		Unchanged: 0/0
 18710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18714 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18715 ;;Total ram usage:        2 bytes
 18716 ;; Hardware stack levels used:    1
 18717 ;; Hardware stack levels required when called:    7
 18718 ;; This function calls:
 18719 ;;		Nothing
 18720 ;; This function is called by:
 18721 ;;		_MacExecuteCommands
 18722 ;; This function uses a non-reentrant model
 18723 ;;
 18724                           
 18725                           	psect	text93
 18726  008998                     __ptext93:
 18727                           	opt stack 0
 18728  008998                     _ExecuteLinkCheck:
 18729                           	opt stack 18
 18730                           
 18731                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 18732                           
 18733                           ; BSR set to: 0
 18734                           ;incstack = 0
 18735  008998  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 18736  00899C  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 18737  0089A0  50DF               	movf	indf2,w,c
 18738  0089A2  0102               	movlb	2	; () banked
 18739  0089A4  6FDD               	movwf	(_loRa+221)& (0+255),b
 18740                           
 18741                           ; BSR set to: 2
 18742  0089A6  0100               	movlb	0	; () banked
 18743  0089A8  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 18744  0089AA  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 18745                           
 18746                           ; BSR set to: 0
 18747                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 18748  0089AC  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 18749  0089B0  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 18750  0089B4  50DF               	movf	indf2,w,c
 18751  0089B6  0102               	movlb	2	; () banked
 18752  0089B8  6FDE               	movwf	(_loRa+222)& (0+255),b
 18753  0089BA  0100               	movlb	0	; () banked
 18754  0089BC  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 18755  0089BE  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 18756                           
 18757                           ; BSR set to: 0
 18758                           ;lorawan.c: 1656: return ptr;
 18759  0089C0  C060  F060         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 18760  0089C4  C061  F061         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 18761  0089C8  0012               	return	
 18762  0089CA                     __end_of_ExecuteLinkCheck:
 18763                           	opt stack 0
 18764                           tosu	equ	0xFFF
 18765                           tosh	equ	0xFFE
 18766                           tosl	equ	0xFFD
 18767                           pclath	equ	0xFFA
 18768                           tblptru	equ	0xFF8
 18769                           tblptrh	equ	0xFF7
 18770                           tblptrl	equ	0xFF6
 18771                           tablat	equ	0xFF5
 18772                           prodh	equ	0xFF4
 18773                           prodl	equ	0xFF3
 18774                           intcon	equ	0xFF2
 18775                           intcon2	equ	0xFF1
 18776                           intcon3	equ	0xFF0
 18777                           indf0	equ	0xFEF
 18778                           postinc0	equ	0xFEE
 18779                           fsr0h	equ	0xFEA
 18780                           fsr0l	equ	0xFE9
 18781                           wreg	equ	0xFE8
 18782                           postinc1	equ	0xFE6
 18783                           postdec1	equ	0xFE5
 18784                           plusw1	equ	0xFE3
 18785                           fsr1h	equ	0xFE2
 18786                           fsr1l	equ	0xFE1
 18787                           indf2	equ	0xFDF
 18788                           postinc2	equ	0xFDE
 18789                           postdec2	equ	0xFDD
 18790                           plusw2	equ	0xFDB
 18791                           fsr2h	equ	0xFDA
 18792                           fsr2l	equ	0xFD9
 18793                           status	equ	0xFD8
 18794                           
 18795 ;; *************** function _ExecuteLinkAdr *****************
 18796 ;; Defined at:
 18797 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18798 ;; Parameters:    Size  Location     Type
 18799 ;;  ptr             2   15[BANK0 ] PTR unsigned char 
 18800 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18801 ;; Auto vars:     Size  Location     Type
 18802 ;;  redundancy      2   22[BANK0 ] PTR struct .
 18803 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18804 ;;  channelMask     2   19[BANK0 ] unsigned int 
 18805 ;;  dataRate        1   24[BANK0 ] unsigned char 
 18806 ;;  txPower         1   21[BANK0 ] unsigned char 
 18807 ;; Return value:  Size  Location     Type
 18808 ;;                  2   15[BANK0 ] PTR unsigned char 
 18809 ;; Registers used:
 18810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18811 ;; Tracked objects:
 18812 ;;		On entry : 0/0
 18813 ;;		On exit  : 0/0
 18814 ;;		Unchanged: 0/0
 18815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18816 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18817 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18819 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18820 ;;Total ram usage:       10 bytes
 18821 ;; Hardware stack levels used:    1
 18822 ;; Hardware stack levels required when called:   10
 18823 ;; This function calls:
 18824 ;;		_EnableChannels
 18825 ;;		_UpdateCurrentDataRate
 18826 ;;		_UpdateTxPower
 18827 ;;		_ValidateChannelMask
 18828 ;;		_ValidateChannelMaskCntl
 18829 ;;		_ValidateDataRate
 18830 ;;		_ValidateTxPower
 18831 ;; This function is called by:
 18832 ;;		_MacExecuteCommands
 18833 ;; This function uses a non-reentrant model
 18834 ;;
 18835                           
 18836                           	psect	text94
 18837  003244                     __ptext94:
 18838                           	opt stack 0
 18839  003244                     _ExecuteLinkAdr:
 18840                           	opt stack 15
 18841                           
 18842                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 18843                           ;lorawan_eu.c: 616: uint16_t channelMask;
 18844                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 18845                           
 18846                           ; BSR set to: 0
 18847                           ;incstack = 0
 18848  003244  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 18849  003248  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 18850  00324C  50DF               	movf	indf2,w,c
 18851  00324E  0B0F               	andlw	15
 18852  003250  0100               	movlb	0	; () banked
 18853  003252  6F75               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 18854                           
 18855                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 18856  003254  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 18857  003258  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 18858  00325C  50DF               	movf	indf2,w,c
 18859  00325E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 18860  003260  3971               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 18861  003262  0B0F               	andlw	15
 18862  003264  0B0F               	andlw	15
 18863  003266  6F78               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 18864                           
 18865                           ; BSR set to: 0
 18866                           ;lorawan_eu.c: 620: ptr++;
 18867  003268  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 18868  00326A  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 18869                           
 18870                           ; BSR set to: 0
 18871                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 18872  00326C  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 18873  003270  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 18874  003274  CFDE F073          	movff	postinc2,ExecuteLinkAdr@channelMask
 18875  003278  CFDD F074          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 18876                           
 18877                           ; BSR set to: 0
 18878                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 18879  00327C  0E02               	movlw	2
 18880  00327E  256F               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 18881  003280  6F6F               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 18882  003282  0E00               	movlw	0
 18883  003284  2170               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 18884  003286  6F70               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 18885                           
 18886                           ; BSR set to: 0
 18887                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 18888                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 18889  003288  C06F  F076         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 18890  00328C  C070  F077         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 18891                           
 18892                           ; BSR set to: 0
 18893  003290  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 18894  003292  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 18898  003294  0102               	movlb	2	; () banked
 18899  003296  AD02               	btfss	(_loRa+2)& (0+255),6,b
 18900  003298  D0EF               	goto	l1105
 18901                           
 18902                           ; BSR set to: 2
 18903                           ;lorawan_eu.c: 627: {
 18904                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 18905  00329A  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 18906  00329E  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 18907  0032A2  0100               	movlb	0	; () banked
 18908  0032A4  38DF               	swapf	223,w,c
 18909  0032A6  0B07               	andlw	7
 18910  0032A8  EC35  F047         	call	_ValidateChannelMaskCntl
 18911  0032AC  0900               	iorlw	0
 18912  0032AE  A4D8               	btfss	status,2,c
 18913  0032B0  D021               	goto	l1106
 18914  0032B2  C073  F060         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 18915  0032B6  C074  F061         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 18916  0032BA  ECCB  F03F         	call	_ValidateChannelMask	;wreg free
 18917  0032BE  0900               	iorlw	0
 18918  0032C0  A4D8               	btfss	status,2,c
 18919  0032C2  D018               	goto	l1106
 18920                           
 18921                           ;lorawan_eu.c: 629: {
 18922                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 18923  0032C4  0102               	movlb	2	; () banked
 18924  0032C6  51A7               	movf	(_loRa+167)& (0+255),w,b
 18925  0032C8  0D02               	mullw	2
 18926  0032CA  0E00               	movlw	low _loRa
 18927  0032CC  0100               	movlb	0	; () banked
 18928  0032CE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 18929  0032D0  0E02               	movlw	high _loRa
 18930  0032D2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18931  0032D4  0EA8               	movlw	168
 18932  0032D6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18933  0032D8  0E00               	movlw	0
 18934  0032DA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18935  0032DC  50F3               	movf	prodl,w,c
 18936  0032DE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18937  0032E0  50F4               	movf	prodh,w,c
 18938  0032E2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18939  0032E4  0E01               	movlw	1
 18940  0032E6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18941  0032E8  6ED9               	movwf	fsr2l,c
 18942  0032EA  0E00               	movlw	0
 18943  0032EC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18944  0032EE  6EDA               	movwf	fsr2h,c
 18945  0032F0  0102               	movlb	2	; () banked
 18946  0032F2  80DF               	bsf	indf2,0,c
 18947  0032F4                     l1106:
 18948                           
 18949                           ;lorawan_eu.c: 631: }
 18950                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 18951                           
 18952                           ; BSR set to: 2
 18953  0032F4  0100               	movlb	0	; () banked
 18954  0032F6  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 18955  0032F8  EC30  F048         	call	_ValidateDataRate
 18956  0032FC  0900               	iorlw	0
 18957  0032FE  A4D8               	btfss	status,2,c
 18958  003300  D022               	goto	l1107
 18959  003302  0102               	movlb	2	; () banked
 18960  003304  51EB               	movf	(_loRa+235)& (0+255),w,b
 18961  003306  0100               	movlb	0	; () banked
 18962  003308  5D78               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 18963  00330A  A0D8               	btfss	status,0,c
 18964  00330C  D01C               	goto	l1107
 18965                           
 18966                           ; BSR set to: 0
 18967  00330E  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 18968  003310  0102               	movlb	2	; () banked
 18969  003312  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 18970  003314  A0D8               	btfss	status,0,c
 18971  003316  D017               	goto	l1107
 18972                           
 18973                           ; BSR set to: 2
 18974                           ;lorawan_eu.c: 634: {
 18975                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 18976  003318  51A7               	movf	(_loRa+167)& (0+255),w,b
 18977  00331A  0D02               	mullw	2
 18978  00331C  0E00               	movlw	low _loRa
 18979  00331E  0100               	movlb	0	; () banked
 18980  003320  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 18981  003322  0E02               	movlw	high _loRa
 18982  003324  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18983  003326  0EA8               	movlw	168
 18984  003328  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18985  00332A  0E00               	movlw	0
 18986  00332C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18987  00332E  50F3               	movf	prodl,w,c
 18988  003330  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18989  003332  50F4               	movf	prodh,w,c
 18990  003334  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18991  003336  0E01               	movlw	1
 18992  003338  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18993  00333A  6ED9               	movwf	fsr2l,c
 18994  00333C  0E00               	movlw	0
 18995  00333E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18996  003340  6EDA               	movwf	fsr2h,c
 18997  003342  0102               	movlb	2	; () banked
 18998  003344  82DF               	bsf	indf2,1,c
 18999  003346                     l1107:
 19000                           
 19001                           ;lorawan_eu.c: 636: }
 19002                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 19003                           
 19004                           ; BSR set to: 2
 19005  003346  0100               	movlb	0	; () banked
 19006  003348  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 19007  00334A  EC29  F046         	call	_ValidateTxPower
 19008  00334E  0900               	iorlw	0
 19009  003350  A4D8               	btfss	status,2,c
 19010  003352  D018               	goto	l1108
 19011                           
 19012                           ;lorawan_eu.c: 639: {
 19013                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 19014  003354  0102               	movlb	2	; () banked
 19015  003356  51A7               	movf	(_loRa+167)& (0+255),w,b
 19016  003358  0D02               	mullw	2
 19017  00335A  0E00               	movlw	low _loRa
 19018  00335C  0100               	movlb	0	; () banked
 19019  00335E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 19020  003360  0E02               	movlw	high _loRa
 19021  003362  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 19022  003364  0EA8               	movlw	168
 19023  003366  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19024  003368  0E00               	movlw	0
 19025  00336A  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19026  00336C  50F3               	movf	prodl,w,c
 19027  00336E  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19028  003370  50F4               	movf	prodh,w,c
 19029  003372  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19030  003374  0E01               	movlw	1
 19031  003376  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 19032  003378  6ED9               	movwf	fsr2l,c
 19033  00337A  0E00               	movlw	0
 19034  00337C  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 19035  00337E  6EDA               	movwf	fsr2h,c
 19036  003380  0102               	movlb	2	; () banked
 19037  003382  84DF               	bsf	indf2,2,c
 19038  003384                     l1108:
 19039                           
 19040                           ;lorawan_eu.c: 641: }
 19041                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 19042  003384  0102               	movlb	2	; () banked
 19043  003386  51A7               	movf	(_loRa+167)& (0+255),w,b
 19044  003388  0D02               	mullw	2
 19045  00338A  0E00               	movlw	low _loRa
 19046  00338C  0100               	movlb	0	; () banked
 19047  00338E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 19048  003390  0E02               	movlw	high _loRa
 19049  003392  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 19050  003394  0EA8               	movlw	168
 19051  003396  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19052  003398  0E00               	movlw	0
 19053  00339A  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19054  00339C  50F3               	movf	prodl,w,c
 19055  00339E  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19056  0033A0  50F4               	movf	prodh,w,c
 19057  0033A2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19058  0033A4  0E01               	movlw	1
 19059  0033A6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 19060  0033A8  6ED9               	movwf	fsr2l,c
 19061  0033AA  0E00               	movlw	0
 19062  0033AC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 19063  0033AE  6EDA               	movwf	fsr2h,c
 19064  0033B0  0102               	movlb	2	; () banked
 19065  0033B2  A4DF               	btfss	indf2,2,c
 19066  0033B4  D0A6               	goto	l1112
 19067                           
 19068                           ; BSR set to: 2
 19069  0033B6  51A7               	movf	(_loRa+167)& (0+255),w,b
 19070  0033B8  0D02               	mullw	2
 19071  0033BA  0E00               	movlw	low _loRa
 19072  0033BC  0100               	movlb	0	; () banked
 19073  0033BE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 19074  0033C0  0E02               	movlw	high _loRa
 19075  0033C2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 19076  0033C4  0EA8               	movlw	168
 19077  0033C6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19078  0033C8  0E00               	movlw	0
 19079  0033CA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19080  0033CC  50F3               	movf	prodl,w,c
 19081  0033CE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19082  0033D0  50F4               	movf	prodh,w,c
 19083  0033D2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19084  0033D4  0E01               	movlw	1
 19085  0033D6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 19086  0033D8  6ED9               	movwf	fsr2l,c
 19087  0033DA  0E00               	movlw	0
 19088  0033DC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 19089  0033DE  6EDA               	movwf	fsr2h,c
 19090  0033E0  0102               	movlb	2	; () banked
 19091  0033E2  A2DF               	btfss	indf2,1,c
 19092  0033E4  D08E               	goto	l1112
 19093                           
 19094                           ; BSR set to: 2
 19095  0033E6  51A7               	movf	(_loRa+167)& (0+255),w,b
 19096  0033E8  0D02               	mullw	2
 19097  0033EA  0E00               	movlw	low _loRa
 19098  0033EC  0100               	movlb	0	; () banked
 19099  0033EE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 19100  0033F0  0E02               	movlw	high _loRa
 19101  0033F2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 19102  0033F4  0EA8               	movlw	168
 19103  0033F6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19104  0033F8  0E00               	movlw	0
 19105  0033FA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19106  0033FC  50F3               	movf	prodl,w,c
 19107  0033FE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19108  003400  50F4               	movf	prodh,w,c
 19109  003402  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19110  003404  0E01               	movlw	1
 19111  003406  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 19112  003408  6ED9               	movwf	fsr2l,c
 19113  00340A  0E00               	movlw	0
 19114  00340C  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 19115  00340E  6EDA               	movwf	fsr2h,c
 19116  003410  0102               	movlb	2	; () banked
 19117  003412  A0DF               	btfss	indf2,0,c
 19118  003414  D076               	goto	l1112
 19119                           
 19120                           ; BSR set to: 2
 19121                           ;lorawan_eu.c: 644: {
 19122                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 19123  003416  C073  F06C         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 19124  00341A  C074  F06D         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 19125  00341E  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 19126  003422  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 19127  003426  0100               	movlb	0	; () banked
 19128  003428  38DF               	swapf	223,w,c
 19129  00342A  0B07               	andlw	7
 19130  00342C  6F6E               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 19131  00342E  ECE2  F047         	call	_EnableChannels	;wreg free
 19132                           
 19133                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 19134  003432  0100               	movlb	0	; () banked
 19135  003434  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 19136  003436  EC15  F049         	call	_UpdateTxPower
 19137                           
 19138                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 19139  00343A  0102               	movlb	2	; () banked
 19140  00343C  8903               	bsf	(_loRa+3)& (0+255),4,b
 19141                           
 19142                           ; BSR set to: 2
 19143                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 19144  00343E  0100               	movlb	0	; () banked
 19145  003440  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 19146  003442  EC1A  F049         	call	_UpdateCurrentDataRate
 19147                           
 19148                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 19149  003446  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 19150  00344A  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 19151  00344E  0100               	movlb	0	; () banked
 19152  003450  50DF               	movf	223,w,c
 19153  003452  0B0F               	andlw	15
 19154  003454  0900               	iorlw	0
 19155  003456  A4D8               	btfss	status,2,c
 19156  003458  D002               	goto	l1110
 19157                           
 19158                           ; BSR set to: 0
 19159                           ;lorawan_eu.c: 652: {
 19160                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 19161  00345A  0E00               	movlw	0
 19162  00345C  D009               	goto	L10
 19163  00345E                     l1110:
 19164                           
 19165                           ;lorawan_eu.c: 655: else
 19166                           ;lorawan_eu.c: 656: {
 19167                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 19168                           
 19169                           ; BSR set to: 2
 19170  00345E  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 19171  003462  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 19172  003466  0100               	movlb	0	; () banked
 19173  003468  50DF               	movf	223,w,c
 19174  00346A  0B0F               	andlw	15
 19175  00346C  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 19176  00346E  0571               	decf	??_ExecuteLinkAdr& (0+255),w,b
 19177  003470                     L10:
 19178  003470  0102               	movlb	2	; () banked
 19179  003472  6FD6               	movwf	(_loRa+214)& (0+255),b
 19180                           
 19181                           ; BSR set to: 2
 19182                           ;lorawan_eu.c: 658: }
 19183                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 19184                           
 19185                           ; BSR set to: 2
 19186  003474  8B03               	bsf	(_loRa+3)& (0+255),5,b
 19187                           
 19188                           ; BSR set to: 2
 19189                           ;lorawan_eu.c: 660: }
 19190                           ;lorawan_eu.c: 661: }
 19191  003476  D045               	goto	l1112
 19192  003478                     l1105:
 19193                           
 19194                           ; BSR set to: 2
 19195                           ;lorawan_eu.c: 662: else
 19196                           ;lorawan_eu.c: 663: {
 19197                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 19198                           
 19199                           ; BSR set to: 2
 19200  003478  51A7               	movf	(_loRa+167)& (0+255),w,b
 19201  00347A  0D02               	mullw	2
 19202  00347C  0E00               	movlw	low _loRa
 19203  00347E  0100               	movlb	0	; () banked
 19204  003480  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 19205  003482  0E02               	movlw	high _loRa
 19206  003484  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 19207  003486  0EA8               	movlw	168
 19208  003488  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19209  00348A  0E00               	movlw	0
 19210  00348C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19211  00348E  50F3               	movf	prodl,w,c
 19212  003490  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19213  003492  50F4               	movf	prodh,w,c
 19214  003494  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19215  003496  0E01               	movlw	1
 19216  003498  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 19217  00349A  6ED9               	movwf	fsr2l,c
 19218  00349C  0E00               	movlw	0
 19219  00349E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 19220  0034A0  6EDA               	movwf	fsr2h,c
 19221  0034A2  0102               	movlb	2	; () banked
 19222  0034A4  90DF               	bcf	indf2,0,c
 19223                           
 19224                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 19225  0034A6  51A7               	movf	(_loRa+167)& (0+255),w,b
 19226  0034A8  0D02               	mullw	2
 19227  0034AA  0E00               	movlw	low _loRa
 19228  0034AC  0100               	movlb	0	; () banked
 19229  0034AE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 19230  0034B0  0E02               	movlw	high _loRa
 19231  0034B2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 19232  0034B4  0EA8               	movlw	168
 19233  0034B6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19234  0034B8  0E00               	movlw	0
 19235  0034BA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19236  0034BC  50F3               	movf	prodl,w,c
 19237  0034BE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19238  0034C0  50F4               	movf	prodh,w,c
 19239  0034C2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19240  0034C4  0E01               	movlw	1
 19241  0034C6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 19242  0034C8  6ED9               	movwf	fsr2l,c
 19243  0034CA  0E00               	movlw	0
 19244  0034CC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 19245  0034CE  6EDA               	movwf	fsr2h,c
 19246  0034D0  0102               	movlb	2	; () banked
 19247  0034D2  92DF               	bcf	indf2,1,c
 19248                           
 19249                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 19250  0034D4  51A7               	movf	(_loRa+167)& (0+255),w,b
 19251  0034D6  0D02               	mullw	2
 19252  0034D8  0E00               	movlw	low _loRa
 19253  0034DA  0100               	movlb	0	; () banked
 19254  0034DC  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 19255  0034DE  0E02               	movlw	high _loRa
 19256  0034E0  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 19257  0034E2  0EA8               	movlw	168
 19258  0034E4  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19259  0034E6  0E00               	movlw	0
 19260  0034E8  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19261  0034EA  50F3               	movf	prodl,w,c
 19262  0034EC  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 19263  0034EE  50F4               	movf	prodh,w,c
 19264  0034F0  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 19265  0034F2  0E01               	movlw	1
 19266  0034F4  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 19267  0034F6  6ED9               	movwf	fsr2l,c
 19268  0034F8  0E00               	movlw	0
 19269  0034FA  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 19270  0034FC  6EDA               	movwf	fsr2h,c
 19271  0034FE  0102               	movlb	2	; () banked
 19272  003500  94DF               	bcf	indf2,2,c
 19273  003502                     l1112:
 19274                           
 19275                           ; BSR set to: 2
 19276                           ;lorawan_eu.c: 667: }
 19277                           ;lorawan_eu.c: 669: return ptr;
 19278                           
 19279                           ; BSR set to: 2
 19280  003502  C06F  F06F         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 19281  003506  C070  F070         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 19282  00350A  0012               	return	
 19283  00350C                     __end_of_ExecuteLinkAdr:
 19284                           	opt stack 0
 19285                           tosu	equ	0xFFF
 19286                           tosh	equ	0xFFE
 19287                           tosl	equ	0xFFD
 19288                           pclath	equ	0xFFA
 19289                           tblptru	equ	0xFF8
 19290                           tblptrh	equ	0xFF7
 19291                           tblptrl	equ	0xFF6
 19292                           tablat	equ	0xFF5
 19293                           prodh	equ	0xFF4
 19294                           prodl	equ	0xFF3
 19295                           intcon	equ	0xFF2
 19296                           intcon2	equ	0xFF1
 19297                           intcon3	equ	0xFF0
 19298                           indf0	equ	0xFEF
 19299                           postinc0	equ	0xFEE
 19300                           fsr0h	equ	0xFEA
 19301                           fsr0l	equ	0xFE9
 19302                           wreg	equ	0xFE8
 19303                           postinc1	equ	0xFE6
 19304                           postdec1	equ	0xFE5
 19305                           plusw1	equ	0xFE3
 19306                           fsr1h	equ	0xFE2
 19307                           fsr1l	equ	0xFE1
 19308                           indf2	equ	0xFDF
 19309                           postinc2	equ	0xFDE
 19310                           postdec2	equ	0xFDD
 19311                           plusw2	equ	0xFDB
 19312                           fsr2h	equ	0xFDA
 19313                           fsr2l	equ	0xFD9
 19314                           status	equ	0xFD8
 19315                           
 19316 ;; *************** function _ValidateTxPower *****************
 19317 ;; Defined at:
 19318 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19319 ;; Parameters:    Size  Location     Type
 19320 ;;  txPowerNew      1    wreg     unsigned char 
 19321 ;; Auto vars:     Size  Location     Type
 19322 ;;  txPowerNew      1    1[BANK0 ] unsigned char 
 19323 ;;  result          1    0[BANK0 ] enum E7249
 19324 ;; Return value:  Size  Location     Type
 19325 ;;                  1    wreg      enum E7249
 19326 ;; Registers used:
 19327 ;;		wreg, status,2, status,0
 19328 ;; Tracked objects:
 19329 ;;		On entry : 0/0
 19330 ;;		On exit  : 0/0
 19331 ;;		Unchanged: 0/0
 19332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19334 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19336 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19337 ;;Total ram usage:        2 bytes
 19338 ;; Hardware stack levels used:    1
 19339 ;; Hardware stack levels required when called:    7
 19340 ;; This function calls:
 19341 ;;		Nothing
 19342 ;; This function is called by:
 19343 ;;		_ExecuteLinkAdr
 19344 ;;		_LORAWAN_SetTxPower
 19345 ;; This function uses a non-reentrant model
 19346 ;;
 19347                           
 19348                           	psect	text95
 19349  008C52                     __ptext95:
 19350                           	opt stack 0
 19351  008C52                     _ValidateTxPower:
 19352                           	opt stack 17
 19353                           
 19354                           ; BSR set to: 2
 19355                           ;incstack = 0
 19356                           ;ValidateTxPower@txPowerNew stored from wreg
 19357  008C52  0100               	movlb	0	; () banked
 19358  008C54  6F61               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 19359                           
 19360                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 19361  008C56  0E00               	movlw	0
 19362  008C58  0100               	movlb	0	; () banked
 19363  008C5A  6F60               	movwf	ValidateTxPower@result& (0+255),b
 19364                           
 19365                           ; BSR set to: 0
 19366                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 19367  008C5C  0102               	movlb	2	; () banked
 19368  008C5E  51A4               	movf	(_loRa+164)& (0+255),w,b
 19369  008C60  A4D8               	btfss	status,2,c
 19370  008C62  D004               	goto	u16520
 19371                           
 19372                           ; BSR set to: 2
 19373  008C64  0100               	movlb	0	; () banked
 19374  008C66  5161               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 19375  008C68  B4D8               	btfsc	status,2,c
 19376  008C6A  D004               	goto	u16530
 19377  008C6C                     u16520:
 19378                           
 19379                           ; BSR set to: 0
 19380  008C6C  0E05               	movlw	5
 19381  008C6E  0100               	movlb	0	; () banked
 19382  008C70  6561               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 19383  008C72  D002               	goto	l1092
 19384  008C74                     u16530:
 19385                           
 19386                           ; BSR set to: 0
 19387                           ;lorawan_eu.c: 587: {
 19388                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 19389                           
 19390                           ; BSR set to: 0
 19391  008C74  0E03               	movlw	3
 19392  008C76  6F60               	movwf	ValidateTxPower@result& (0+255),b
 19393  008C78                     l1092:
 19394                           
 19395                           ; BSR set to: 0
 19396                           ;lorawan_eu.c: 589: }
 19397                           ;lorawan_eu.c: 591: return result;
 19398  008C78  5160               	movf	ValidateTxPower@result& (0+255),w,b
 19399  008C7A  0012               	return	
 19400  008C7C                     __end_of_ValidateTxPower:
 19401                           	opt stack 0
 19402                           tosu	equ	0xFFF
 19403                           tosh	equ	0xFFE
 19404                           tosl	equ	0xFFD
 19405                           pclath	equ	0xFFA
 19406                           tblptru	equ	0xFF8
 19407                           tblptrh	equ	0xFF7
 19408                           tblptrl	equ	0xFF6
 19409                           tablat	equ	0xFF5
 19410                           prodh	equ	0xFF4
 19411                           prodl	equ	0xFF3
 19412                           intcon	equ	0xFF2
 19413                           intcon2	equ	0xFF1
 19414                           intcon3	equ	0xFF0
 19415                           indf0	equ	0xFEF
 19416                           postinc0	equ	0xFEE
 19417                           fsr0h	equ	0xFEA
 19418                           fsr0l	equ	0xFE9
 19419                           wreg	equ	0xFE8
 19420                           postinc1	equ	0xFE6
 19421                           postdec1	equ	0xFE5
 19422                           plusw1	equ	0xFE3
 19423                           fsr1h	equ	0xFE2
 19424                           fsr1l	equ	0xFE1
 19425                           indf2	equ	0xFDF
 19426                           postinc2	equ	0xFDE
 19427                           postdec2	equ	0xFDD
 19428                           plusw2	equ	0xFDB
 19429                           fsr2h	equ	0xFDA
 19430                           fsr2l	equ	0xFD9
 19431                           status	equ	0xFD8
 19432                           
 19433 ;; *************** function _ValidateDataRate *****************
 19434 ;; Defined at:
 19435 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19436 ;; Parameters:    Size  Location     Type
 19437 ;;  dataRate        1    wreg     unsigned char 
 19438 ;; Auto vars:     Size  Location     Type
 19439 ;;  dataRate        1    0[BANK0 ] unsigned char 
 19440 ;;  result          1    1[BANK0 ] enum E7249
 19441 ;; Return value:  Size  Location     Type
 19442 ;;                  1    wreg      enum E7249
 19443 ;; Registers used:
 19444 ;;		wreg, status,2, status,0
 19445 ;; Tracked objects:
 19446 ;;		On entry : 0/0
 19447 ;;		On exit  : 0/0
 19448 ;;		Unchanged: 0/0
 19449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19451 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19454 ;;Total ram usage:        2 bytes
 19455 ;; Hardware stack levels used:    1
 19456 ;; Hardware stack levels required when called:    7
 19457 ;; This function calls:
 19458 ;;		Nothing
 19459 ;; This function is called by:
 19460 ;;		_ExecuteLinkAdr
 19461 ;;		_ExecuteRxParamSetupReq
 19462 ;;		_ValidateDataRange
 19463 ;;		_LORAWAN_SetReceiveWindow2Parameters
 19464 ;;		_LORAWAN_SetCurrentDataRate
 19465 ;; This function uses a non-reentrant model
 19466 ;;
 19467                           
 19468                           	psect	text96
 19469  009060                     __ptext96:
 19470                           	opt stack 0
 19471  009060                     _ValidateDataRate:
 19472                           	opt stack 17
 19473                           
 19474                           ; BSR set to: 0
 19475                           ;incstack = 0
 19476                           ;ValidateDataRate@dataRate stored from wreg
 19477  009060  0100               	movlb	0	; () banked
 19478  009062  6F60               	movwf	ValidateDataRate@dataRate& (0+255),b
 19479                           
 19480                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 19481  009064  0E00               	movlw	0
 19482  009066  0100               	movlb	0	; () banked
 19483  009068  6F61               	movwf	ValidateDataRate@result& (0+255),b
 19484                           
 19485                           ; BSR set to: 0
 19486                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 19487  00906A  0E07               	movlw	7
 19488  00906C  6560               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 19489  00906E  D002               	goto	l1088
 19490                           
 19491                           ; BSR set to: 0
 19492                           ;lorawan_eu.c: 575: {
 19493                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 19494  009070  0E03               	movlw	3
 19495  009072  6F61               	movwf	ValidateDataRate@result& (0+255),b
 19496  009074                     l1088:
 19497                           
 19498                           ; BSR set to: 0
 19499                           ;lorawan_eu.c: 577: }
 19500                           ;lorawan_eu.c: 579: return result;
 19501  009074  5161               	movf	ValidateDataRate@result& (0+255),w,b
 19502  009076  0012               	return	
 19503  009078                     __end_of_ValidateDataRate:
 19504                           	opt stack 0
 19505                           tosu	equ	0xFFF
 19506                           tosh	equ	0xFFE
 19507                           tosl	equ	0xFFD
 19508                           pclath	equ	0xFFA
 19509                           tblptru	equ	0xFF8
 19510                           tblptrh	equ	0xFF7
 19511                           tblptrl	equ	0xFF6
 19512                           tablat	equ	0xFF5
 19513                           prodh	equ	0xFF4
 19514                           prodl	equ	0xFF3
 19515                           intcon	equ	0xFF2
 19516                           intcon2	equ	0xFF1
 19517                           intcon3	equ	0xFF0
 19518                           indf0	equ	0xFEF
 19519                           postinc0	equ	0xFEE
 19520                           fsr0h	equ	0xFEA
 19521                           fsr0l	equ	0xFE9
 19522                           wreg	equ	0xFE8
 19523                           postinc1	equ	0xFE6
 19524                           postdec1	equ	0xFE5
 19525                           plusw1	equ	0xFE3
 19526                           fsr1h	equ	0xFE2
 19527                           fsr1l	equ	0xFE1
 19528                           indf2	equ	0xFDF
 19529                           postinc2	equ	0xFDE
 19530                           postdec2	equ	0xFDD
 19531                           plusw2	equ	0xFDB
 19532                           fsr2h	equ	0xFDA
 19533                           fsr2l	equ	0xFD9
 19534                           status	equ	0xFD8
 19535                           
 19536 ;; *************** function _ValidateChannelMaskCntl *****************
 19537 ;; Defined at:
 19538 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19539 ;; Parameters:    Size  Location     Type
 19540 ;;  channelMaskC    1    wreg     unsigned char 
 19541 ;; Auto vars:     Size  Location     Type
 19542 ;;  channelMaskC    1    1[BANK0 ] unsigned char 
 19543 ;;  result          1    0[BANK0 ] enum E7249
 19544 ;; Return value:  Size  Location     Type
 19545 ;;                  1    wreg      enum E7249
 19546 ;; Registers used:
 19547 ;;		wreg, status,2, status,0
 19548 ;; Tracked objects:
 19549 ;;		On entry : 0/0
 19550 ;;		On exit  : 0/0
 19551 ;;		Unchanged: 0/0
 19552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19554 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19556 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19557 ;;Total ram usage:        2 bytes
 19558 ;; Hardware stack levels used:    1
 19559 ;; Hardware stack levels required when called:    7
 19560 ;; This function calls:
 19561 ;;		Nothing
 19562 ;; This function is called by:
 19563 ;;		_ExecuteLinkAdr
 19564 ;; This function uses a non-reentrant model
 19565 ;;
 19566                           
 19567                           	psect	text97
 19568  008E6A                     __ptext97:
 19569                           	opt stack 0
 19570  008E6A                     _ValidateChannelMaskCntl:
 19571                           	opt stack 17
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;incstack = 0
 19575                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 19576  008E6A  0100               	movlb	0	; () banked
 19577  008E6C  6F61               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 19578                           
 19579                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 19580  008E6E  0E00               	movlw	0
 19581  008E70  0100               	movlb	0	; () banked
 19582  008E72  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 19586  008E74  5161               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 19587  008E76  B4D8               	btfsc	status,2,c
 19588  008E78  D006               	goto	l1259
 19589                           
 19590                           ; BSR set to: 0
 19591  008E7A  0E06               	movlw	6
 19592  008E7C  1961               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 19593  008E7E  B4D8               	btfsc	status,2,c
 19594  008E80  D002               	goto	l1259
 19595                           
 19596                           ; BSR set to: 0
 19597                           ;lorawan_eu.c: 1142: {
 19598                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 19599  008E82  0E03               	movlw	3
 19600  008E84  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 19601  008E86                     l1259:
 19602                           
 19603                           ; BSR set to: 0
 19604                           ;lorawan_eu.c: 1144: }
 19605                           ;lorawan_eu.c: 1146: return result;
 19606  008E86  5160               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 19607  008E88  0012               	return	
 19608  008E8A                     __end_of_ValidateChannelMaskCntl:
 19609                           	opt stack 0
 19610                           tosu	equ	0xFFF
 19611                           tosh	equ	0xFFE
 19612                           tosl	equ	0xFFD
 19613                           pclath	equ	0xFFA
 19614                           tblptru	equ	0xFF8
 19615                           tblptrh	equ	0xFF7
 19616                           tblptrl	equ	0xFF6
 19617                           tablat	equ	0xFF5
 19618                           prodh	equ	0xFF4
 19619                           prodl	equ	0xFF3
 19620                           intcon	equ	0xFF2
 19621                           intcon2	equ	0xFF1
 19622                           intcon3	equ	0xFF0
 19623                           indf0	equ	0xFEF
 19624                           postinc0	equ	0xFEE
 19625                           fsr0h	equ	0xFEA
 19626                           fsr0l	equ	0xFE9
 19627                           wreg	equ	0xFE8
 19628                           postinc1	equ	0xFE6
 19629                           postdec1	equ	0xFE5
 19630                           plusw1	equ	0xFE3
 19631                           fsr1h	equ	0xFE2
 19632                           fsr1l	equ	0xFE1
 19633                           indf2	equ	0xFDF
 19634                           postinc2	equ	0xFDE
 19635                           postdec2	equ	0xFDD
 19636                           plusw2	equ	0xFDB
 19637                           fsr2h	equ	0xFDA
 19638                           fsr2l	equ	0xFD9
 19639                           status	equ	0xFD8
 19640                           
 19641 ;; *************** function _ValidateChannelMask *****************
 19642 ;; Defined at:
 19643 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19644 ;; Parameters:    Size  Location     Type
 19645 ;;  channelMask     2    0[BANK0 ] unsigned int 
 19646 ;; Auto vars:     Size  Location     Type
 19647 ;;  i               1    4[BANK0 ] unsigned char 
 19648 ;; Return value:  Size  Location     Type
 19649 ;;                  1    wreg      enum E7249
 19650 ;; Registers used:
 19651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19652 ;; Tracked objects:
 19653 ;;		On entry : 0/0
 19654 ;;		On exit  : 0/0
 19655 ;;		Unchanged: 0/0
 19656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19659 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19660 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19661 ;;Total ram usage:        5 bytes
 19662 ;; Hardware stack levels used:    1
 19663 ;; Hardware stack levels required when called:    7
 19664 ;; This function calls:
 19665 ;;		Nothing
 19666 ;; This function is called by:
 19667 ;;		_ExecuteLinkAdr
 19668 ;; This function uses a non-reentrant model
 19669 ;;
 19670                           
 19671                           	psect	text98
 19672  007F96                     __ptext98:
 19673                           	opt stack 0
 19674  007F96                     _ValidateChannelMask:
 19675                           	opt stack 17
 19676                           
 19677                           ;lorawan_eu.c: 1168: uint8_t i = 0;
 19678                           
 19679                           ; BSR set to: 0
 19680                           ;incstack = 0
 19681  007F96  0E00               	movlw	0
 19682  007F98  0100               	movlb	0	; () banked
 19683  007F9A  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 19684                           
 19685                           ; BSR set to: 0
 19686                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 19687  007F9C  5160               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 19688  007F9E  1161               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 19689  007FA0  B4D8               	btfsc	status,2,c
 19690  007FA2  D026               	goto	l1272
 19691                           
 19692                           ; BSR set to: 0
 19693                           ;lorawan_eu.c: 1171: {
 19694                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 19695  007FA4  0E00               	movlw	0
 19696  007FA6  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 19697  007FA8                     l14569:
 19698                           
 19699                           ; BSR set to: 0
 19700  007FA8  0E0F               	movlw	15
 19701  007FAA  6564               	cpfsgt	ValidateChannelMask@i& (0+255),b
 19702  007FAC  D001               	goto	l1273
 19703  007FAE  D01E               	goto	u16600
 19704  007FB0                     l1273:
 19705                           
 19706                           ; BSR set to: 0
 19707                           ;lorawan_eu.c: 1173: {
 19708                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 19709  007FB0  A160               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 19710  007FB2  D013               	goto	l1275
 19711                           
 19712                           ; BSR set to: 0
 19713  007FB4  5164               	movf	ValidateChannelMask@i& (0+255),w,b
 19714  007FB6  0D0E               	mullw	14
 19715  007FB8  0E0D               	movlw	13
 19716  007FBA  26F3               	addwf	prodl,f,c
 19717  007FBC  0E00               	movlw	0
 19718  007FBE  22F4               	addwfc	prodh,f,c
 19719  007FC0  0E00               	movlw	low _Channels
 19720  007FC2  24F3               	addwf	prodl,w,c
 19721  007FC4  6ED9               	movwf	fsr2l,c
 19722  007FC6  0E04               	movlw	high _Channels
 19723  007FC8  20F4               	addwfc	prodh,w,c
 19724  007FCA  6EDA               	movwf	fsr2h,c
 19725  007FCC  50DF               	movf	indf2,w,c
 19726  007FCE  0B07               	andlw	7
 19727  007FD0  0A07               	xorlw	7
 19728  007FD2  B4D8               	btfsc	status,2,c
 19729  007FD4  D002               	goto	l1275
 19730                           
 19731                           ; BSR set to: 0
 19732                           ;lorawan_eu.c: 1175: {
 19733                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 19734  007FD6  0E03               	movlw	3
 19735                           
 19736                           ; BSR set to: 0
 19737  007FD8  0012               	return	
 19738  007FDA                     l1275:
 19739                           
 19740                           ; BSR set to: 0
 19741                           ;lorawan_eu.c: 1178: else
 19742                           ;lorawan_eu.c: 1179: {
 19743                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 19744                           
 19745                           ; BSR set to: 0
 19746  007FDA  90D8               	bcf	status,0,c
 19747  007FDC  3161               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 19748  007FDE  6F62               	movwf	??_ValidateChannelMask& (0+255),b
 19749  007FE0  3160               	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 19750  007FE2  6F60               	movwf	ValidateChannelMask@channelMask& (0+255),b
 19751  007FE4  C062  F061         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 19752                           
 19753                           ; BSR set to: 0
 19754                           
 19755                           ; BSR set to: 0
 19756  007FE8  2B64               	incf	ValidateChannelMask@i& (0+255),f,b
 19757  007FEA  D7DE               	goto	l14569
 19758  007FEC                     u16600:
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;lorawan_eu.c: 1181: }
 19762                           ;lorawan_eu.c: 1182: }
 19763                           ;lorawan_eu.c: 1184: return OK;
 19764                           
 19765                           ; BSR set to: 0
 19766  007FEC  0E00               	movlw	0
 19767                           
 19768                           ; BSR set to: 0
 19769                           ;lorawan_eu.c: 1185: }
 19770                           
 19771                           ; BSR set to: 0
 19772  007FEE  0012               	return	
 19773  007FF0                     l1272:
 19774                           
 19775                           ; BSR set to: 0
 19776                           ;lorawan_eu.c: 1186: else
 19777                           ;lorawan_eu.c: 1187: {
 19778                           ;lorawan_eu.c: 1189: return INVALID_PARAMETER;
 19779                           
 19780                           ; BSR set to: 0
 19781  007FF0  0E03               	movlw	3
 19782                           
 19783                           ; BSR set to: 0
 19784  007FF2  0012               	return	
 19785  007FF4                     __end_of_ValidateChannelMask:
 19786                           	opt stack 0
 19787                           tosu	equ	0xFFF
 19788                           tosh	equ	0xFFE
 19789                           tosl	equ	0xFFD
 19790                           pclath	equ	0xFFA
 19791                           tblptru	equ	0xFF8
 19792                           tblptrh	equ	0xFF7
 19793                           tblptrl	equ	0xFF6
 19794                           tablat	equ	0xFF5
 19795                           prodh	equ	0xFF4
 19796                           prodl	equ	0xFF3
 19797                           intcon	equ	0xFF2
 19798                           intcon2	equ	0xFF1
 19799                           intcon3	equ	0xFF0
 19800                           indf0	equ	0xFEF
 19801                           postinc0	equ	0xFEE
 19802                           fsr0h	equ	0xFEA
 19803                           fsr0l	equ	0xFE9
 19804                           wreg	equ	0xFE8
 19805                           postinc1	equ	0xFE6
 19806                           postdec1	equ	0xFE5
 19807                           plusw1	equ	0xFE3
 19808                           fsr1h	equ	0xFE2
 19809                           fsr1l	equ	0xFE1
 19810                           indf2	equ	0xFDF
 19811                           postinc2	equ	0xFDE
 19812                           postdec2	equ	0xFDD
 19813                           plusw2	equ	0xFDB
 19814                           fsr2h	equ	0xFDA
 19815                           fsr2l	equ	0xFD9
 19816                           status	equ	0xFD8
 19817                           
 19818 ;; *************** function _UpdateTxPower *****************
 19819 ;; Defined at:
 19820 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19821 ;; Parameters:    Size  Location     Type
 19822 ;;  txPowerNew      1    wreg     unsigned char 
 19823 ;; Auto vars:     Size  Location     Type
 19824 ;;  txPowerNew      1    0[BANK0 ] unsigned char 
 19825 ;; Return value:  Size  Location     Type
 19826 ;;                  1    wreg      void 
 19827 ;; Registers used:
 19828 ;;		wreg
 19829 ;; Tracked objects:
 19830 ;;		On entry : 0/0
 19831 ;;		On exit  : 0/0
 19832 ;;		Unchanged: 0/0
 19833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19837 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19838 ;;Total ram usage:        1 bytes
 19839 ;; Hardware stack levels used:    1
 19840 ;; Hardware stack levels required when called:    7
 19841 ;; This function calls:
 19842 ;;		Nothing
 19843 ;; This function is called by:
 19844 ;;		_ExecuteLinkAdr
 19845 ;;		_LORAWAN_SetTxPower
 19846 ;; This function uses a non-reentrant model
 19847 ;;
 19848                           
 19849                           	psect	text99
 19850  00922A                     __ptext99:
 19851                           	opt stack 0
 19852  00922A                     _UpdateTxPower:
 19853                           	opt stack 17
 19854                           
 19855                           ; BSR set to: 0
 19856                           ;incstack = 0
 19857                           ;UpdateTxPower@txPowerNew stored from wreg
 19858  00922A  0100               	movlb	0	; () banked
 19859  00922C  6F60               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 19860                           
 19861                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 19862  00922E  C060  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 19863  009232  0012               	return		;funcret
 19864  009234                     __end_of_UpdateTxPower:
 19865                           	opt stack 0
 19866                           tosu	equ	0xFFF
 19867                           tosh	equ	0xFFE
 19868                           tosl	equ	0xFFD
 19869                           pclath	equ	0xFFA
 19870                           tblptru	equ	0xFF8
 19871                           tblptrh	equ	0xFF7
 19872                           tblptrl	equ	0xFF6
 19873                           tablat	equ	0xFF5
 19874                           prodh	equ	0xFF4
 19875                           prodl	equ	0xFF3
 19876                           intcon	equ	0xFF2
 19877                           intcon2	equ	0xFF1
 19878                           intcon3	equ	0xFF0
 19879                           indf0	equ	0xFEF
 19880                           postinc0	equ	0xFEE
 19881                           fsr0h	equ	0xFEA
 19882                           fsr0l	equ	0xFE9
 19883                           wreg	equ	0xFE8
 19884                           postinc1	equ	0xFE6
 19885                           postdec1	equ	0xFE5
 19886                           plusw1	equ	0xFE3
 19887                           fsr1h	equ	0xFE2
 19888                           fsr1l	equ	0xFE1
 19889                           indf2	equ	0xFDF
 19890                           postinc2	equ	0xFDE
 19891                           postdec2	equ	0xFDD
 19892                           plusw2	equ	0xFDB
 19893                           fsr2h	equ	0xFDA
 19894                           fsr2l	equ	0xFD9
 19895                           status	equ	0xFD8
 19896                           
 19897 ;; *************** function _UpdateCurrentDataRate *****************
 19898 ;; Defined at:
 19899 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19900 ;; Parameters:    Size  Location     Type
 19901 ;;  valueNew        1    wreg     unsigned char 
 19902 ;; Auto vars:     Size  Location     Type
 19903 ;;  valueNew        1    0[BANK0 ] unsigned char 
 19904 ;; Return value:  Size  Location     Type
 19905 ;;                  1    wreg      void 
 19906 ;; Registers used:
 19907 ;;		wreg
 19908 ;; Tracked objects:
 19909 ;;		On entry : 0/0
 19910 ;;		On exit  : 0/0
 19911 ;;		Unchanged: 0/0
 19912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19916 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19917 ;;Total ram usage:        1 bytes
 19918 ;; Hardware stack levels used:    1
 19919 ;; Hardware stack levels required when called:    7
 19920 ;; This function calls:
 19921 ;;		Nothing
 19922 ;; This function is called by:
 19923 ;;		_ExecuteLinkAdr
 19924 ;;		_LORAWAN_SetCurrentDataRate
 19925 ;; This function uses a non-reentrant model
 19926 ;;
 19927                           
 19928                           	psect	text100
 19929  009234                     __ptext100:
 19930                           	opt stack 0
 19931  009234                     _UpdateCurrentDataRate:
 19932                           	opt stack 17
 19933                           
 19934                           ;incstack = 0
 19935                           ;UpdateCurrentDataRate@valueNew stored from wreg
 19936  009234  0100               	movlb	0	; () banked
 19937  009236  6F60               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 19938                           
 19939                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 19940  009238  C060  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 19941  00923C  0012               	return		;funcret
 19942  00923E                     __end_of_UpdateCurrentDataRate:
 19943                           	opt stack 0
 19944                           tosu	equ	0xFFF
 19945                           tosh	equ	0xFFE
 19946                           tosl	equ	0xFFD
 19947                           pclath	equ	0xFFA
 19948                           tblptru	equ	0xFF8
 19949                           tblptrh	equ	0xFF7
 19950                           tblptrl	equ	0xFF6
 19951                           tablat	equ	0xFF5
 19952                           prodh	equ	0xFF4
 19953                           prodl	equ	0xFF3
 19954                           intcon	equ	0xFF2
 19955                           intcon2	equ	0xFF1
 19956                           intcon3	equ	0xFF0
 19957                           indf0	equ	0xFEF
 19958                           postinc0	equ	0xFEE
 19959                           fsr0h	equ	0xFEA
 19960                           fsr0l	equ	0xFE9
 19961                           wreg	equ	0xFE8
 19962                           postinc1	equ	0xFE6
 19963                           postdec1	equ	0xFE5
 19964                           plusw1	equ	0xFE3
 19965                           fsr1h	equ	0xFE2
 19966                           fsr1l	equ	0xFE1
 19967                           indf2	equ	0xFDF
 19968                           postinc2	equ	0xFDE
 19969                           postdec2	equ	0xFDD
 19970                           plusw2	equ	0xFDB
 19971                           fsr2h	equ	0xFDA
 19972                           fsr2l	equ	0xFD9
 19973                           status	equ	0xFD8
 19974                           
 19975 ;; *************** function _EnableChannels *****************
 19976 ;; Defined at:
 19977 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19978 ;; Parameters:    Size  Location     Type
 19979 ;;  channelMask     2   12[BANK0 ] unsigned int 
 19980 ;;  channelMaskC    1   14[BANK0 ] unsigned char 
 19981 ;; Auto vars:     Size  Location     Type
 19982 ;;		None
 19983 ;; Return value:  Size  Location     Type
 19984 ;;                  1    wreg      void 
 19985 ;; Registers used:
 19986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19987 ;; Tracked objects:
 19988 ;;		On entry : 0/0
 19989 ;;		On exit  : 0/0
 19990 ;;		Unchanged: 0/0
 19991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19992 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19995 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19996 ;;Total ram usage:        3 bytes
 19997 ;; Hardware stack levels used:    1
 19998 ;; Hardware stack levels required when called:    9
 19999 ;; This function calls:
 20000 ;;		_EnableChannels1
 20001 ;; This function is called by:
 20002 ;;		_ExecuteLinkAdr
 20003 ;; This function uses a non-reentrant model
 20004 ;;
 20005                           
 20006                           	psect	text101
 20007  008FC4                     __ptext101:
 20008                           	opt stack 0
 20009  008FC4                     _EnableChannels:
 20010                           	opt stack 15
 20011                           
 20012                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 20013                           
 20014                           ;incstack = 0
 20015  008FC4  C06C  F064         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 20016  008FC8  C06D  F065         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 20017  008FCC  C06E  F066         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 20018  008FD0  0E00               	movlw	0
 20019  008FD2  0100               	movlb	0	; () banked
 20020  008FD4  6F67               	movwf	EnableChannels1@channelIndexMin& (0+255),b
 20021  008FD6  0E10               	movlw	16
 20022  008FD8  6F68               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 20023  008FDA  EC3A  F03D         	call	_EnableChannels1	;wreg free
 20024  008FDE  0012               	return		;funcret
 20025  008FE0                     __end_of_EnableChannels:
 20026                           	opt stack 0
 20027                           tosu	equ	0xFFF
 20028                           tosh	equ	0xFFE
 20029                           tosl	equ	0xFFD
 20030                           pclath	equ	0xFFA
 20031                           tblptru	equ	0xFF8
 20032                           tblptrh	equ	0xFF7
 20033                           tblptrl	equ	0xFF6
 20034                           tablat	equ	0xFF5
 20035                           prodh	equ	0xFF4
 20036                           prodl	equ	0xFF3
 20037                           intcon	equ	0xFF2
 20038                           intcon2	equ	0xFF1
 20039                           intcon3	equ	0xFF0
 20040                           indf0	equ	0xFEF
 20041                           postinc0	equ	0xFEE
 20042                           fsr0h	equ	0xFEA
 20043                           fsr0l	equ	0xFE9
 20044                           wreg	equ	0xFE8
 20045                           postinc1	equ	0xFE6
 20046                           postdec1	equ	0xFE5
 20047                           plusw1	equ	0xFE3
 20048                           fsr1h	equ	0xFE2
 20049                           fsr1l	equ	0xFE1
 20050                           indf2	equ	0xFDF
 20051                           postinc2	equ	0xFDE
 20052                           postdec2	equ	0xFDD
 20053                           plusw2	equ	0xFDB
 20054                           fsr2h	equ	0xFDA
 20055                           fsr2l	equ	0xFD9
 20056                           status	equ	0xFD8
 20057                           
 20058 ;; *************** function _EnableChannels1 *****************
 20059 ;; Defined at:
 20060 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 20061 ;; Parameters:    Size  Location     Type
 20062 ;;  channelMask     2    4[BANK0 ] unsigned int 
 20063 ;;  channelMaskC    1    6[BANK0 ] unsigned char 
 20064 ;;  channelIndex    1    7[BANK0 ] unsigned char 
 20065 ;;  channelIndex    1    8[BANK0 ] unsigned char 
 20066 ;; Auto vars:     Size  Location     Type
 20067 ;;  i               1   11[BANK0 ] unsigned char 
 20068 ;; Return value:  Size  Location     Type
 20069 ;;                  1    wreg      void 
 20070 ;; Registers used:
 20071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20072 ;; Tracked objects:
 20073 ;;		On entry : 0/0
 20074 ;;		On exit  : 0/0
 20075 ;;		Unchanged: 0/0
 20076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20077 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20078 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20079 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20080 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20081 ;;Total ram usage:        8 bytes
 20082 ;; Hardware stack levels used:    1
 20083 ;; Hardware stack levels required when called:    8
 20084 ;; This function calls:
 20085 ;;		_UpdateChannelIdStatus
 20086 ;; This function is called by:
 20087 ;;		_EnableChannels
 20088 ;; This function uses a non-reentrant model
 20089 ;;
 20090                           
 20091                           	psect	text102
 20092  007A74                     __ptext102:
 20093                           	opt stack 0
 20094  007A74                     _EnableChannels1:
 20095                           	opt stack 15
 20096                           
 20097                           ;lorawan_eu.c: 1195: uint8_t i;
 20098                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 20099                           
 20100                           ;incstack = 0
 20101  007A74  0E06               	movlw	6
 20102  007A76  0100               	movlb	0	; () banked
 20103  007A78  1966               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 20104  007A7A  A4D8               	btfss	status,2,c
 20105  007A7C  D00F               	goto	l1281
 20106                           
 20107                           ; BSR set to: 0
 20108                           ;lorawan_eu.c: 1198: {
 20109                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 20110  007A7E  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 20111  007A82  D007               	goto	l1282
 20112  007A84                     
 20113                           ; BSR set to: 0
 20114                           ;lorawan_eu.c: 1200: {
 20115                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 20116                           
 20117                           ; BSR set to: 0
 20118  007A84  0E01               	movlw	1
 20119  007A86  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 20120  007A88  516B               	movf	EnableChannels1@i& (0+255),w,b
 20121  007A8A  ECD9  F028         	call	_UpdateChannelIdStatus
 20122  007A8E  0100               	movlb	0	; () banked
 20123  007A90  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 20124  007A92                     l1282:
 20125                           
 20126                           ; BSR set to: 0
 20127                           
 20128                           ; BSR set to: 0
 20129  007A92  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 20130  007A94  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 20131  007A96  B0D8               	btfsc	status,0,c
 20132  007A98  0012               	return	
 20133  007A9A  D7F4               	goto	l1283
 20134  007A9C                     l1281:
 20135                           
 20136                           ; BSR set to: 0
 20137                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 20138                           
 20139                           ; BSR set to: 0
 20140  007A9C  5166               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 20141  007A9E  A4D8               	btfss	status,2,c
 20142  007AA0  0012               	return	
 20143                           
 20144                           ; BSR set to: 0
 20145                           ;lorawan_eu.c: 1205: {
 20146                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 20147  007AA2  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 20148  007AA6  D017               	goto	l1287
 20149  007AA8                     l1288:
 20150                           
 20151                           ; BSR set to: 0
 20152                           ;lorawan_eu.c: 1207: {
 20153                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 20154  007AA8  A164               	btfss	EnableChannels1@channelMask& (0+255),0,b
 20155  007AAA  D006               	goto	l1289
 20156                           
 20157                           ; BSR set to: 0
 20158                           ;lorawan_eu.c: 1209: {
 20159                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 20160  007AAC  0E01               	movlw	1
 20161  007AAE  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 20162  007AB0  516B               	movf	EnableChannels1@i& (0+255),w,b
 20163  007AB2  ECD9  F028         	call	_UpdateChannelIdStatus
 20164                           
 20165                           ;lorawan_eu.c: 1211: }
 20166  007AB6  D006               	goto	l1290
 20167  007AB8                     l1289:
 20168                           
 20169                           ;lorawan_eu.c: 1212: else
 20170                           ;lorawan_eu.c: 1213: {
 20171                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 20172  007AB8  0E00               	movlw	0
 20173  007ABA  0100               	movlb	0	; () banked
 20174  007ABC  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 20175  007ABE  516B               	movf	EnableChannels1@i& (0+255),w,b
 20176  007AC0  ECD9  F028         	call	_UpdateChannelIdStatus
 20177  007AC4                     l1290:
 20178                           
 20179                           ;lorawan_eu.c: 1215: }
 20180                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 20181  007AC4  90D8               	bcf	status,0,c
 20182  007AC6  0100               	movlb	0	; () banked
 20183  007AC8  3165               	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 20184  007ACA  6F69               	movwf	??_EnableChannels1& (0+255),b
 20185  007ACC  3164               	rrcf	EnableChannels1@channelMask& (0+255),w,b
 20186  007ACE  6F64               	movwf	EnableChannels1@channelMask& (0+255),b
 20187  007AD0  C069  F065         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 20188                           
 20189                           ; BSR set to: 0
 20190  007AD4  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 20191  007AD6                     l1287:
 20192                           
 20193                           ; BSR set to: 0
 20194                           
 20195                           ; BSR set to: 0
 20196  007AD6  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 20197  007AD8  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 20198  007ADA  B0D8               	btfsc	status,0,c
 20199  007ADC  0012               	return	
 20200  007ADE  D7E4               	goto	l1288
 20201  007AE0                     __end_of_EnableChannels1:
 20202                           	opt stack 0
 20203                           tosu	equ	0xFFF
 20204                           tosh	equ	0xFFE
 20205                           tosl	equ	0xFFD
 20206                           pclath	equ	0xFFA
 20207                           tblptru	equ	0xFF8
 20208                           tblptrh	equ	0xFF7
 20209                           tblptrl	equ	0xFF6
 20210                           tablat	equ	0xFF5
 20211                           prodh	equ	0xFF4
 20212                           prodl	equ	0xFF3
 20213                           intcon	equ	0xFF2
 20214                           intcon2	equ	0xFF1
 20215                           intcon3	equ	0xFF0
 20216                           indf0	equ	0xFEF
 20217                           postinc0	equ	0xFEE
 20218                           fsr0h	equ	0xFEA
 20219                           fsr0l	equ	0xFE9
 20220                           wreg	equ	0xFE8
 20221                           postinc1	equ	0xFE6
 20222                           postdec1	equ	0xFE5
 20223                           plusw1	equ	0xFE3
 20224                           fsr1h	equ	0xFE2
 20225                           fsr1l	equ	0xFE1
 20226                           indf2	equ	0xFDF
 20227                           postinc2	equ	0xFDE
 20228                           postdec2	equ	0xFDD
 20229                           plusw2	equ	0xFDB
 20230                           fsr2h	equ	0xFDA
 20231                           fsr2l	equ	0xFD9
 20232                           status	equ	0xFD8
 20233                           
 20234 ;; *************** function _UpdateChannelIdStatus *****************
 20235 ;; Defined at:
 20236 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 20237 ;; Parameters:    Size  Location     Type
 20238 ;;  channelId       1    wreg     unsigned char 
 20239 ;;  statusNew       1    0[BANK0 ] unsigned char 
 20240 ;; Auto vars:     Size  Location     Type
 20241 ;;  channelId       1    2[BANK0 ] unsigned char 
 20242 ;;  i               1    3[BANK0 ] unsigned char 
 20243 ;; Return value:  Size  Location     Type
 20244 ;;                  1    wreg      void 
 20245 ;; Registers used:
 20246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20247 ;; Tracked objects:
 20248 ;;		On entry : 0/0
 20249 ;;		On exit  : 0/0
 20250 ;;		Unchanged: 0/0
 20251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20252 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20254 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20255 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20256 ;;Total ram usage:        4 bytes
 20257 ;; Hardware stack levels used:    1
 20258 ;; Hardware stack levels required when called:    7
 20259 ;; This function calls:
 20260 ;;		Nothing
 20261 ;; This function is called by:
 20262 ;;		_LORAWAN_SetChannelIdStatus
 20263 ;;		_ExecuteNewChannel
 20264 ;;		_EnableChannels1
 20265 ;; This function uses a non-reentrant model
 20266 ;;
 20267                           
 20268                           	psect	text103
 20269  0051B2                     __ptext103:
 20270                           	opt stack 0
 20271  0051B2                     _UpdateChannelIdStatus:
 20272                           	opt stack 17
 20273                           
 20274                           ; BSR set to: 0
 20275                           ;incstack = 0
 20276                           ;UpdateChannelIdStatus@channelId stored from wreg
 20277  0051B2  0100               	movlb	0	; () banked
 20278  0051B4  6F62               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 20279                           
 20280                           ;lorawan_eu.c: 1044: uint8_t i;
 20281                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 20282  0051B6  0100               	movlb	0	; () banked
 20283  0051B8  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 20284  0051BA  0D0E               	mullw	14
 20285  0051BC  0E04               	movlw	4
 20286  0051BE  26F3               	addwf	prodl,f,c
 20287  0051C0  0E00               	movlw	0
 20288  0051C2  22F4               	addwfc	prodh,f,c
 20289  0051C4  0E00               	movlw	low _Channels
 20290  0051C6  24F3               	addwf	prodl,w,c
 20291  0051C8  6ED9               	movwf	fsr2l,c
 20292  0051CA  0E04               	movlw	high _Channels
 20293  0051CC  20F4               	addwfc	prodh,w,c
 20294  0051CE  6EDA               	movwf	fsr2h,c
 20295  0051D0  C060  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 20296                           
 20297                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 20298  0051D4  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 20299  0051D6  0D0E               	mullw	14
 20300  0051D8  0E04               	movlw	4
 20301  0051DA  26F3               	addwf	prodl,f,c
 20302  0051DC  0E00               	movlw	0
 20303  0051DE  22F4               	addwfc	prodh,f,c
 20304  0051E0  0E00               	movlw	low _Channels
 20305  0051E2  24F3               	addwf	prodl,w,c
 20306  0051E4  6ED9               	movwf	fsr2l,c
 20307  0051E6  0E04               	movlw	high _Channels
 20308  0051E8  20F4               	addwfc	prodh,w,c
 20309  0051EA  6EDA               	movwf	fsr2h,c
 20310  0051EC  50DF               	movf	indf2,w,c
 20311  0051EE  A4D8               	btfss	status,2,c
 20312  0051F0  D010               	goto	l1221
 20313                           
 20314                           ; BSR set to: 0
 20315                           ;lorawan_eu.c: 1048: {
 20316                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 20317  0051F2  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 20318  0051F4  0D0E               	mullw	14
 20319  0051F6  0E08               	movlw	8
 20320  0051F8  26F3               	addwf	prodl,f,c
 20321  0051FA  0E00               	movlw	0
 20322  0051FC  22F4               	addwfc	prodh,f,c
 20323  0051FE  0E00               	movlw	low _Channels
 20324  005200  24F3               	addwf	prodl,w,c
 20325  005202  6ED9               	movwf	fsr2l,c
 20326  005204  0E04               	movlw	high _Channels
 20327  005206  20F4               	addwfc	prodh,w,c
 20328  005208  6EDA               	movwf	fsr2h,c
 20329  00520A  6ADE               	clrf	postinc2,c
 20330  00520C  6ADE               	clrf	postinc2,c
 20331  00520E  6ADE               	clrf	postinc2,c
 20332  005210  6ADD               	clrf	postdec2,c
 20333  005212                     l1221:
 20334                           
 20335                           ; BSR set to: 0
 20336                           ;lorawan_eu.c: 1051: }
 20337                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 20338                           
 20339                           ; BSR set to: 0
 20340  005212  0E00               	movlw	0
 20341  005214  6F63               	movwf	UpdateChannelIdStatus@i& (0+255),b
 20342  005216  D06D               	goto	l1222
 20343  005218                     
 20344                           ; BSR set to: 0
 20345                           ;lorawan_eu.c: 1054: {
 20346                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 20347                           
 20348                           ; BSR set to: 0
 20349  005218  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 20350  00521A  0D0E               	mullw	14
 20351  00521C  0E05               	movlw	5
 20352  00521E  26F3               	addwf	prodl,f,c
 20353  005220  0E00               	movlw	0
 20354  005222  22F4               	addwfc	prodh,f,c
 20355  005224  0E00               	movlw	low _Channels
 20356  005226  24F3               	addwf	prodl,w,c
 20357  005228  6ED9               	movwf	fsr2l,c
 20358  00522A  0E04               	movlw	high _Channels
 20359  00522C  20F4               	addwfc	prodh,w,c
 20360  00522E  6EDA               	movwf	fsr2h,c
 20361  005230  0104               	movlb	4	; () banked
 20362  005232  50DF               	movf	223,w,c
 20363  005234  0B0F               	andlw	15
 20364  005236  0100               	movlb	0	; () banked
 20365  005238  6F61               	movwf	??_UpdateChannelIdStatus& (0+255),b
 20366  00523A  0102               	movlb	2	; () banked
 20367  00523C  51EB               	movf	(_loRa+235)& (0+255),w,b
 20368  00523E  0100               	movlb	0	; () banked
 20369  005240  5D61               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 20370  005242  B0D8               	btfsc	status,0,c
 20371  005244  D020               	goto	l1224
 20372                           
 20373                           ; BSR set to: 0
 20374  005246  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 20375  005248  0D0E               	mullw	14
 20376  00524A  0E04               	movlw	4
 20377  00524C  26F3               	addwf	prodl,f,c
 20378  00524E  0E00               	movlw	0
 20379  005250  22F4               	addwfc	prodh,f,c
 20380  005252  0E00               	movlw	low _Channels
 20381  005254  24F3               	addwf	prodl,w,c
 20382  005256  6ED9               	movwf	fsr2l,c
 20383  005258  0E04               	movlw	high _Channels
 20384  00525A  20F4               	addwfc	prodh,w,c
 20385  00525C  6EDA               	movwf	fsr2h,c
 20386  00525E  04DE               	decf	postinc2,w,c
 20387  005260  A4D8               	btfss	status,2,c
 20388  005262  D011               	goto	l1224
 20389                           
 20390                           ; BSR set to: 0
 20391                           ;lorawan_eu.c: 1056: {
 20392                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 20393  005264  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 20394  005266  0D0E               	mullw	14
 20395  005268  0E05               	movlw	5
 20396  00526A  26F3               	addwf	prodl,f,c
 20397  00526C  0E00               	movlw	0
 20398  00526E  22F4               	addwfc	prodh,f,c
 20399  005270  0E00               	movlw	low _Channels
 20400  005272  24F3               	addwf	prodl,w,c
 20401  005274  6ED9               	movwf	fsr2l,c
 20402  005276  0E04               	movlw	high _Channels
 20403  005278  20F4               	addwfc	prodh,w,c
 20404  00527A  6EDA               	movwf	fsr2h,c
 20405  00527C  0104               	movlb	4	; () banked
 20406  00527E  50DF               	movf	223,w,c
 20407  005280  0B0F               	andlw	15
 20408  005282  0102               	movlb	2	; () banked
 20409  005284  6FEB               	movwf	(_loRa+235)& (0+255),b
 20410  005286                     l1224:
 20411                           
 20412                           ;lorawan_eu.c: 1058: }
 20413                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 20414  005286  0100               	movlb	0	; () banked
 20415  005288  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 20416  00528A  0D0E               	mullw	14
 20417  00528C  0E05               	movlw	5
 20418  00528E  26F3               	addwf	prodl,f,c
 20419  005290  0E00               	movlw	0
 20420  005292  22F4               	addwfc	prodh,f,c
 20421  005294  0E00               	movlw	low _Channels
 20422  005296  24F3               	addwf	prodl,w,c
 20423  005298  6ED9               	movwf	fsr2l,c
 20424  00529A  0E04               	movlw	high _Channels
 20425  00529C  20F4               	addwfc	prodh,w,c
 20426  00529E  6EDA               	movwf	fsr2h,c
 20427  0052A0  0104               	movlb	4	; () banked
 20428  0052A2  38DF               	swapf	223,w,c
 20429  0052A4  0B0F               	andlw	15
 20430  0052A6  0102               	movlb	2	; () banked
 20431  0052A8  61EC               	cpfslt	(_loRa+236)& (0+255),b
 20432  0052AA  D021               	goto	l1225
 20433                           
 20434                           ; BSR set to: 2
 20435  0052AC  0100               	movlb	0	; () banked
 20436  0052AE  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 20437  0052B0  0D0E               	mullw	14
 20438  0052B2  0E04               	movlw	4
 20439  0052B4  26F3               	addwf	prodl,f,c
 20440  0052B6  0E00               	movlw	0
 20441  0052B8  22F4               	addwfc	prodh,f,c
 20442  0052BA  0E00               	movlw	low _Channels
 20443  0052BC  24F3               	addwf	prodl,w,c
 20444  0052BE  6ED9               	movwf	fsr2l,c
 20445  0052C0  0E04               	movlw	high _Channels
 20446  0052C2  20F4               	addwfc	prodh,w,c
 20447  0052C4  6EDA               	movwf	fsr2h,c
 20448  0052C6  04DE               	decf	postinc2,w,c
 20449  0052C8  A4D8               	btfss	status,2,c
 20450  0052CA  D011               	goto	l1225
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;lorawan_eu.c: 1060: {
 20454                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 20455  0052CC  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 20456  0052CE  0D0E               	mullw	14
 20457  0052D0  0E05               	movlw	5
 20458  0052D2  26F3               	addwf	prodl,f,c
 20459  0052D4  0E00               	movlw	0
 20460  0052D6  22F4               	addwfc	prodh,f,c
 20461  0052D8  0E00               	movlw	low _Channels
 20462  0052DA  24F3               	addwf	prodl,w,c
 20463  0052DC  6ED9               	movwf	fsr2l,c
 20464  0052DE  0E04               	movlw	high _Channels
 20465  0052E0  20F4               	addwfc	prodh,w,c
 20466  0052E2  6EDA               	movwf	fsr2h,c
 20467  0052E4  0104               	movlb	4	; () banked
 20468  0052E6  38DF               	swapf	223,w,c
 20469  0052E8  0B0F               	andlw	15
 20470  0052EA  0102               	movlb	2	; () banked
 20471  0052EC  6FEC               	movwf	(_loRa+236)& (0+255),b
 20472  0052EE                     l1225:
 20473                           
 20474                           ; BSR set to: 2
 20475  0052EE  0100               	movlb	0	; () banked
 20476  0052F0  2B63               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 20477  0052F2                     l1222:
 20478                           
 20479                           ; BSR set to: 0
 20480                           
 20481                           ; BSR set to: 0
 20482  0052F2  0102               	movlb	2	; () banked
 20483  0052F4  51ED               	movf	(_loRa+237)& (0+255),w,b
 20484  0052F6  0100               	movlb	0	; () banked
 20485  0052F8  5D63               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 20486  0052FA  A0D8               	btfss	status,0,c
 20487  0052FC  D78D               	goto	l1223
 20488                           
 20489                           ; BSR set to: 0
 20490                           ;lorawan_eu.c: 1062: }
 20491                           ;lorawan_eu.c: 1063: }
 20492                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 20493                           
 20494                           ; BSR set to: 0
 20495  0052FE  0102               	movlb	2	; () banked
 20496  005300  51DF               	movf	(_loRa+223)& (0+255),w,b
 20497  005302  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 20498  005304  A0D8               	btfss	status,0,c
 20499                           
 20500                           ; BSR set to: 2
 20501                           ;lorawan_eu.c: 1066: {
 20502                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 20503  005306  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 20504                           
 20505                           ; BSR set to: 2
 20506                           ;lorawan_eu.c: 1068: }
 20507                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 20508                           
 20509                           ; BSR set to: 2
 20510  00530A  51EB               	movf	(_loRa+235)& (0+255),w,b
 20511  00530C  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 20512  00530E  B0D8               	btfsc	status,0,c
 20513  005310  0012               	return	
 20514                           
 20515                           ; BSR set to: 2
 20516                           ;lorawan_eu.c: 1071: {
 20517                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 20518  005312  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 20519  005316  0012               	return	
 20520  005318                     __end_of_UpdateChannelIdStatus:
 20521                           	opt stack 0
 20522                           tosu	equ	0xFFF
 20523                           tosh	equ	0xFFE
 20524                           tosl	equ	0xFFD
 20525                           pclath	equ	0xFFA
 20526                           tblptru	equ	0xFF8
 20527                           tblptrh	equ	0xFF7
 20528                           tblptrl	equ	0xFF6
 20529                           tablat	equ	0xFF5
 20530                           prodh	equ	0xFF4
 20531                           prodl	equ	0xFF3
 20532                           intcon	equ	0xFF2
 20533                           intcon2	equ	0xFF1
 20534                           intcon3	equ	0xFF0
 20535                           indf0	equ	0xFEF
 20536                           postinc0	equ	0xFEE
 20537                           fsr0h	equ	0xFEA
 20538                           fsr0l	equ	0xFE9
 20539                           wreg	equ	0xFE8
 20540                           postinc1	equ	0xFE6
 20541                           postdec1	equ	0xFE5
 20542                           plusw1	equ	0xFE3
 20543                           fsr1h	equ	0xFE2
 20544                           fsr1l	equ	0xFE1
 20545                           indf2	equ	0xFDF
 20546                           postinc2	equ	0xFDE
 20547                           postdec2	equ	0xFDD
 20548                           plusw2	equ	0xFDB
 20549                           fsr2h	equ	0xFDA
 20550                           fsr2l	equ	0xFD9
 20551                           status	equ	0xFD8
 20552                           
 20553 ;; *************** function _ExecuteDutyCycle *****************
 20554 ;; Defined at:
 20555 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 20556 ;; Parameters:    Size  Location     Type
 20557 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 20558 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20559 ;; Auto vars:     Size  Location     Type
 20560 ;;  maxDCycle       1    5[BANK0 ] unsigned char 
 20561 ;; Return value:  Size  Location     Type
 20562 ;;                  2    0[BANK0 ] PTR unsigned char 
 20563 ;; Registers used:
 20564 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20565 ;; Tracked objects:
 20566 ;;		On entry : 0/0
 20567 ;;		On exit  : 0/0
 20568 ;;		Unchanged: 0/0
 20569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20570 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20571 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20572 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20573 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20574 ;;Total ram usage:        6 bytes
 20575 ;; Hardware stack levels used:    1
 20576 ;; Hardware stack levels required when called:    7
 20577 ;; This function calls:
 20578 ;;		Nothing
 20579 ;; This function is called by:
 20580 ;;		_MacExecuteCommands
 20581 ;; This function uses a non-reentrant model
 20582 ;;
 20583                           
 20584                           	psect	text104
 20585  0082BA                     __ptext104:
 20586                           	opt stack 0
 20587  0082BA                     _ExecuteDutyCycle:
 20588                           	opt stack 18
 20589                           
 20590                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 20591                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 20592                           
 20593                           ; BSR set to: 2
 20594                           ;incstack = 0
 20595  0082BA  C060  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 20596  0082BE  C061  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 20597  0082C2  50DF               	movf	indf2,w,c
 20598  0082C4  0100               	movlb	0	; () banked
 20599  0082C6  6F65               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 20600                           
 20601                           ; BSR set to: 0
 20602  0082C8  4B60               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 20603  0082CA  2B61               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 20604                           
 20605                           ; BSR set to: 0
 20606                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 20607  0082CC  0E0F               	movlw	15
 20608  0082CE  6165               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 20609  0082D0  D013               	goto	l1100
 20610                           
 20611                           ; BSR set to: 0
 20612                           ;lorawan_eu.c: 600: {
 20613                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 20614  0082D2  C065  F062         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 20615  0082D6  0E01               	movlw	1
 20616  0082D8  6F63               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 20617  0082DA  0E00               	movlw	0
 20618  0082DC  6F64               	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 20619  0082DE  2B62               	incf	??_ExecuteDutyCycle& (0+255),f,b
 20620  0082E0  D003               	goto	u17234
 20621  0082E2                     u17235:
 20622  0082E2  90D8               	bcf	status,0,c
 20623  0082E4  3763               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 20624  0082E6  3764               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 20625  0082E8                     u17234:
 20626  0082E8  2F62               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 20627  0082EA  D7FB               	goto	u17235
 20628  0082EC  C063  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 20629  0082F0  C064  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 20630                           
 20631                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 20632  0082F4  0102               	movlb	2	; () banked
 20633  0082F6  8D03               	bsf	(_loRa+3)& (0+255),6,b
 20634  0082F8                     l1100:
 20635                           
 20636                           ;lorawan_eu.c: 603: }
 20637                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 20638  0082F8  0100               	movlb	0	; () banked
 20639  0082FA  2965               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 20640  0082FC  A4D8               	btfss	status,2,c
 20641  0082FE  D002               	goto	l1101
 20642                           
 20643                           ; BSR set to: 0
 20644                           ;lorawan_eu.c: 606: {
 20645                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 20646  008300  0102               	movlb	2	; () banked
 20647  008302  8F02               	bsf	(_loRa+2)& (0+255),7,b
 20648  008304                     l1101:
 20649                           
 20650                           ;lorawan_eu.c: 608: }
 20651                           ;lorawan_eu.c: 610: return ptr;
 20652                           
 20653                           ; BSR set to: 2
 20654  008304  C060  F060         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 20655  008308  C061  F061         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 20656  00830C  0012               	return	
 20657  00830E                     __end_of_ExecuteDutyCycle:
 20658                           	opt stack 0
 20659                           tosu	equ	0xFFF
 20660                           tosh	equ	0xFFE
 20661                           tosl	equ	0xFFD
 20662                           pclath	equ	0xFFA
 20663                           tblptru	equ	0xFF8
 20664                           tblptrh	equ	0xFF7
 20665                           tblptrl	equ	0xFF6
 20666                           tablat	equ	0xFF5
 20667                           prodh	equ	0xFF4
 20668                           prodl	equ	0xFF3
 20669                           intcon	equ	0xFF2
 20670                           intcon2	equ	0xFF1
 20671                           intcon3	equ	0xFF0
 20672                           indf0	equ	0xFEF
 20673                           postinc0	equ	0xFEE
 20674                           fsr0h	equ	0xFEA
 20675                           fsr0l	equ	0xFE9
 20676                           wreg	equ	0xFE8
 20677                           postinc1	equ	0xFE6
 20678                           postdec1	equ	0xFE5
 20679                           plusw1	equ	0xFE3
 20680                           fsr1h	equ	0xFE2
 20681                           fsr1l	equ	0xFE1
 20682                           indf2	equ	0xFDF
 20683                           postinc2	equ	0xFDE
 20684                           postdec2	equ	0xFDD
 20685                           plusw2	equ	0xFDB
 20686                           fsr2h	equ	0xFDA
 20687                           fsr2l	equ	0xFD9
 20688                           status	equ	0xFD8
 20689                           
 20690 ;; *************** function _ExecuteDevStatus *****************
 20691 ;; Defined at:
 20692 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 20693 ;; Parameters:    Size  Location     Type
 20694 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 20695 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20696 ;; Auto vars:     Size  Location     Type
 20697 ;;		None
 20698 ;; Return value:  Size  Location     Type
 20699 ;;                  2    0[BANK0 ] PTR unsigned char 
 20700 ;; Registers used:
 20701 ;;		wreg, status,2, status,0
 20702 ;; Tracked objects:
 20703 ;;		On entry : 0/0
 20704 ;;		On exit  : 0/0
 20705 ;;		Unchanged: 0/0
 20706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20711 ;;Total ram usage:        2 bytes
 20712 ;; Hardware stack levels used:    1
 20713 ;; Hardware stack levels required when called:    7
 20714 ;; This function calls:
 20715 ;;		Nothing
 20716 ;; This function is called by:
 20717 ;;		_MacExecuteCommands
 20718 ;; This function uses a non-reentrant model
 20719 ;;
 20720                           
 20721                           	psect	text105
 20722  00923E                     __ptext105:
 20723                           	opt stack 0
 20724  00923E                     _ExecuteDevStatus:
 20725                           	opt stack 18
 20726                           
 20727                           ;lorawan_eu.c: 674: return ptr;
 20728                           
 20729                           ;incstack = 0
 20730  00923E  C060  F060         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 20731  009242  C061  F061         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 20732  009246  0012               	return	
 20733  009248                     __end_of_ExecuteDevStatus:
 20734                           	opt stack 0
 20735                           tosu	equ	0xFFF
 20736                           tosh	equ	0xFFE
 20737                           tosl	equ	0xFFD
 20738                           pclath	equ	0xFFA
 20739                           tblptru	equ	0xFF8
 20740                           tblptrh	equ	0xFF7
 20741                           tblptrl	equ	0xFF6
 20742                           tablat	equ	0xFF5
 20743                           prodh	equ	0xFF4
 20744                           prodl	equ	0xFF3
 20745                           intcon	equ	0xFF2
 20746                           intcon2	equ	0xFF1
 20747                           intcon3	equ	0xFF0
 20748                           indf0	equ	0xFEF
 20749                           postinc0	equ	0xFEE
 20750                           fsr0h	equ	0xFEA
 20751                           fsr0l	equ	0xFE9
 20752                           wreg	equ	0xFE8
 20753                           postinc1	equ	0xFE6
 20754                           postdec1	equ	0xFE5
 20755                           plusw1	equ	0xFE3
 20756                           fsr1h	equ	0xFE2
 20757                           fsr1l	equ	0xFE1
 20758                           indf2	equ	0xFDF
 20759                           postinc2	equ	0xFDE
 20760                           postdec2	equ	0xFDD
 20761                           plusw2	equ	0xFDB
 20762                           fsr2h	equ	0xFDA
 20763                           fsr2l	equ	0xFD9
 20764                           status	equ	0xFD8
 20765                           
 20766 ;; *************** function _LORAWAN_Send *****************
 20767 ;; Defined at:
 20768 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20769 ;; Parameters:    Size  Location     Type
 20770 ;;  confirmed       1    wreg     enum E7217
 20771 ;;  port            1  115[BANK0 ] unsigned char 
 20772 ;;  buffer          2  116[BANK0 ] PTR void 
 20773 ;;		 -> data(8), NULL(0), 
 20774 ;;  bufferLength    1  118[BANK0 ] unsigned char 
 20775 ;; Auto vars:     Size  Location     Type
 20776 ;;  confirmed       1  121[BANK0 ] enum E7217
 20777 ;;  result          1  120[BANK0 ] enum E7190
 20778 ;; Return value:  Size  Location     Type
 20779 ;;                  1    wreg      enum E7190
 20780 ;; Registers used:
 20781 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20782 ;; Tracked objects:
 20783 ;;		On entry : 0/0
 20784 ;;		On exit  : 0/0
 20785 ;;		Unchanged: 0/0
 20786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20787 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20788 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20789 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20790 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20791 ;;Total ram usage:        7 bytes
 20792 ;; Hardware stack levels used:    1
 20793 ;; Hardware stack levels required when called:   13
 20794 ;; This function calls:
 20795 ;;		_AssemblePacket
 20796 ;;		_LORAWAN_GetMaxPayloadSize
 20797 ;;		_RADIO_ReceiveStop
 20798 ;;		_RADIO_Transmit
 20799 ;;		_SelectChannelForTransmission
 20800 ;; This function is called by:
 20801 ;;		_AutomaticReplyCallback
 20802 ;;		_LORAWAN_RxDone
 20803 ;;		_main
 20804 ;; This function uses a non-reentrant model
 20805 ;;
 20806                           
 20807                           	psect	text106
 20808  006C42                     __ptext106:
 20809                           	opt stack 0
 20810  006C42                     _LORAWAN_Send:
 20811                           	opt stack 17
 20812                           
 20813                           ;incstack = 0
 20814                           ;LORAWAN_Send@confirmed stored from wreg
 20815  006C42  0100               	movlb	0	; () banked
 20816  006C44  6FD9               	movwf	LORAWAN_Send@confirmed& (0+255),b
 20817                           
 20818                           ;lorawan.c: 187: LorawanError_t result;
 20819                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 20820  006C46  0102               	movlb	2	; () banked
 20821  006C48  B103               	btfsc	(_loRa+3)& (0+255),0,b
 20822  006C4A  0012               	return	
 20823                           
 20824                           ; BSR set to: 2
 20825                           ;lorawan.c: 192: }
 20826                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 20827                           
 20828                           ; BSR set to: 2
 20829                           ;lorawan.c: 190: {
 20830                           ;lorawan.c: 191: return MAC_PAUSED;
 20831                           ;	Return value of _LORAWAN_Send is never used
 20832  006C4C  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 20833  006C4E  0012               	return	
 20834                           
 20835                           ; BSR set to: 2
 20836                           ;lorawan.c: 197: }
 20837                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 20838                           
 20839                           ; BSR set to: 2
 20840                           ;lorawan.c: 195: {
 20841                           ;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 20842                           ;	Return value of _LORAWAN_Send is never used
 20843  006C50  A902               	btfss	(_loRa+2)& (0+255),4,b
 20844  006C52  0012               	return	
 20845                           
 20846                           ; BSR set to: 2
 20847                           ;lorawan.c: 202: }
 20848                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 20849                           
 20850                           ; BSR set to: 2
 20851                           
 20852                           ; BSR set to: 2
 20853                           ;lorawan.c: 200: {
 20854                           ;lorawan.c: 201: return NETWORK_NOT_JOINED;
 20855                           ;	Return value of _LORAWAN_Send is never used
 20856  006C54  0100               	movlb	0	; () banked
 20857  006C56  51D3               	movf	LORAWAN_Send@port& (0+255),w,b
 20858  006C58  A4D8               	btfss	status,2,c
 20859  006C5A  D003               	goto	l1522
 20860                           
 20861                           ; BSR set to: 0
 20862  006C5C  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 20863  006C5E  A4D8               	btfss	status,2,c
 20864  006C60  0012               	return	
 20865  006C62                     l1522:
 20866                           
 20867                           ; BSR set to: 0
 20868                           ;lorawan.c: 207: }
 20869                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 20870                           
 20871                           ; BSR set to: 0
 20872  006C62  EC3C  F03F         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 20873  006C66  0100               	movlb	0	; () banked
 20874  006C68  6FD7               	movwf	??_LORAWAN_Send& (0+255),b
 20875  006C6A  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 20876  006C6C  5DD7               	subwf	??_LORAWAN_Send& (0+255),w,b
 20877  006C6E  A0D8               	btfss	status,0,c
 20878  006C70  0012               	return	
 20879                           
 20880                           ; BSR set to: 0
 20881                           ;lorawan.c: 213: }
 20882                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 20883                           
 20884                           ; BSR set to: 0
 20885                           
 20886                           ; BSR set to: 0
 20887                           ;lorawan.c: 211: {
 20888                           ;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 20889                           ;	Return value of _LORAWAN_Send is never used
 20890  006C72  0102               	movlb	2	; () banked
 20891  006C74  2906               	incf	(_loRa+6)& (0+255),w,b
 20892  006C76  E109               	bnz	l15473
 20893  006C78  2907               	incf	(_loRa+7)& (0+255),w,b
 20894  006C7A  E107               	bnz	l15473
 20895  006C7C  2908               	incf	(_loRa+8)& (0+255),w,b
 20896  006C7E  E105               	bnz	l15473
 20897  006C80  2909               	incf	(_loRa+9)& (0+255),w,b
 20898  006C82  A4D8               	btfss	status,2,c
 20899  006C84  D002               	goto	l1524
 20900                           
 20901                           ; BSR set to: 2
 20902                           ;lorawan.c: 216: {
 20903                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 20904  006C86  8304               	bsf	(_loRa+4)& (0+255),1,b
 20905                           
 20906                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 20907                           ;	Return value of _LORAWAN_Send is never used
 20908  006C88  0012               	return	
 20909  006C8A                     l1524:
 20910  006C8A                     l15473:
 20911                           
 20912                           ; BSR set to: 2
 20913                           ;lorawan.c: 220: }
 20914                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 20915  006C8A  5102               	movf	(_loRa+2)& (0+255),w,b
 20916  006C8C  0B0F               	andlw	15
 20917  006C8E  0900               	iorlw	0
 20918  006C90  B4D8               	btfsc	status,2,c
 20919  006C92  D003               	goto	l1525
 20920                           
 20921                           ; BSR set to: 2
 20922  006C94  5112               	movf	(_loRa+18)& (0+255),w,b
 20923  006C96  B4D8               	btfsc	status,2,c
 20924  006C98  0012               	return	
 20925  006C9A                     l1525:
 20926                           
 20927                           ; BSR set to: 2
 20928                           ;lorawan.c: 225: }
 20929                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 20930                           
 20931                           ; BSR set to: 2
 20932  006C9A  0E01               	movlw	1
 20933  006C9C  EC70  F03D         	call	_SelectChannelForTransmission
 20934  006CA0  0100               	movlb	0	; () banked
 20935  006CA2  6FD8               	movwf	LORAWAN_Send@result& (0+255),b
 20936                           
 20937                           ; BSR set to: 0
 20938                           ;lorawan.c: 228: if (result != OK)
 20939  006CA4  51D8               	movf	LORAWAN_Send@result& (0+255),w,b
 20940  006CA6  A4D8               	btfss	status,2,c
 20941  006CA8  0012               	return	
 20942                           
 20943                           ; BSR set to: 0
 20944                           ;lorawan.c: 232: else
 20945                           ;lorawan.c: 233: {
 20946                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 20947                           
 20948                           ; BSR set to: 0
 20949                           
 20950                           ; BSR set to: 0
 20951                           ;lorawan.c: 231: }
 20952                           
 20953                           ; BSR set to: 0
 20954                           ;lorawan.c: 229: {
 20955                           ;lorawan.c: 230: return result;
 20956                           ;	Return value of _LORAWAN_Send is never used
 20957  006CAA  0E02               	movlw	2
 20958  006CAC  0102               	movlb	2	; () banked
 20959  006CAE  1912               	xorwf	(_loRa+18)& (0+255),w,b
 20960  006CB0  B4D8               	btfsc	status,2,c
 20961                           
 20962                           ; BSR set to: 2
 20963                           ;lorawan.c: 235: {
 20964                           ;lorawan.c: 236: RADIO_ReceiveStop();
 20965  006CB2  EC45  F047         	call	_RADIO_ReceiveStop	;wreg free
 20966                           
 20967                           ;lorawan.c: 237: }
 20968                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 20969  006CB6  C0D3  F0C7         	movff	LORAWAN_Send@port,AssemblePacket@port
 20970  006CBA  C0D4  F0C8         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 20971  006CBE  C0D5  F0C9         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 20972  006CC2  C0D6  F0CA         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 20973  006CC6  0100               	movlb	0	; () banked
 20974  006CC8  6BCB               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 20975  006CCA  51D9               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 20976  006CCC  EC20  F00F         	call	_AssemblePacket
 20977                           
 20978                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 20979  006CD0  0EF0               	movlw	low (_macBuffer+16)
 20980  006CD2  0100               	movlb	0	; () banked
 20981  006CD4  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 20982  006CD6  0E04               	movlw	high (_macBuffer+16)
 20983  006CD8  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 20984  006CDA  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 20985  006CDE  EC51  F01E         	call	_RADIO_Transmit	;wreg free
 20986  006CE2  0100               	movlb	0	; () banked
 20987  006CE4  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 20988  006CE6  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 20989  006CE8  A4D8               	btfss	status,2,c
 20990  006CEA  0012               	return	
 20991                           
 20992                           ; BSR set to: 0
 20993                           ;lorawan.c: 242: {
 20994                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 20995  006CEC  0E01               	movlw	1
 20996  006CEE  0102               	movlb	2	; () banked
 20997  006CF0  2706               	addwf	(_loRa+6)& (0+255),f,b
 20998  006CF2  0E00               	movlw	0
 20999  006CF4  2307               	addwfc	(_loRa+7)& (0+255),f,b
 21000  006CF6  2308               	addwfc	(_loRa+8)& (0+255),f,b
 21001  006CF8  2309               	addwfc	(_loRa+9)& (0+255),f,b
 21002                           
 21003                           ;lorawan.c: 245: if (CNF == confirmed)
 21004  006CFA  0100               	movlb	0	; () banked
 21005  006CFC  05D9               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 21006  006CFE  A4D8               	btfss	status,2,c
 21007  006D00  D002               	goto	l1530
 21008                           
 21009                           ; BSR set to: 0
 21010                           ;lorawan.c: 246: {
 21011                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 21012  006D02  0102               	movlb	2	; () banked
 21013  006D04  8100               	bsf	_loRa& (0+255),0,b
 21014  006D06                     l1530:
 21015                           
 21016                           ;lorawan.c: 248: }
 21017                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 21018  006D06  0102               	movlb	2	; () banked
 21019  006D08  8B00               	bsf	_loRa& (0+255),5,b
 21020                           
 21021                           ; BSR set to: 2
 21022                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 21023  006D0A  5102               	movf	(_loRa+2)& (0+255),w,b
 21024  006D0C  0BF0               	andlw	-16
 21025  006D0E  0901               	iorlw	1
 21026  006D10  6F02               	movwf	(_loRa+2)& (0+255),b
 21027                           
 21028                           ; BSR set to: 2
 21029                           
 21030                           ; BSR set to: 2
 21031                           ;lorawan.c: 252: else
 21032                           ;lorawan.c: 253: {
 21033                           ;lorawan.c: 254: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 21034                           ;	Return value of _LORAWAN_Send is never used
 21035                           
 21036                           ;lorawan.c: 251: }
 21037  006D12  0012               	return	
 21038  006D14                     __end_of_LORAWAN_Send:
 21039                           	opt stack 0
 21040                           tosu	equ	0xFFF
 21041                           tosh	equ	0xFFE
 21042                           tosl	equ	0xFFD
 21043                           pclath	equ	0xFFA
 21044                           tblptru	equ	0xFF8
 21045                           tblptrh	equ	0xFF7
 21046                           tblptrl	equ	0xFF6
 21047                           tablat	equ	0xFF5
 21048                           prodh	equ	0xFF4
 21049                           prodl	equ	0xFF3
 21050                           intcon	equ	0xFF2
 21051                           intcon2	equ	0xFF1
 21052                           intcon3	equ	0xFF0
 21053                           indf0	equ	0xFEF
 21054                           postinc0	equ	0xFEE
 21055                           fsr0h	equ	0xFEA
 21056                           fsr0l	equ	0xFE9
 21057                           wreg	equ	0xFE8
 21058                           postinc1	equ	0xFE6
 21059                           postdec1	equ	0xFE5
 21060                           plusw1	equ	0xFE3
 21061                           fsr1h	equ	0xFE2
 21062                           fsr1l	equ	0xFE1
 21063                           indf2	equ	0xFDF
 21064                           postinc2	equ	0xFDE
 21065                           postdec2	equ	0xFDD
 21066                           plusw2	equ	0xFDB
 21067                           fsr2h	equ	0xFDA
 21068                           fsr2l	equ	0xFD9
 21069                           status	equ	0xFD8
 21070                           
 21071 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 21072 ;; Defined at:
 21073 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21074 ;; Parameters:    Size  Location     Type
 21075 ;;		None
 21076 ;; Auto vars:     Size  Location     Type
 21077 ;;  result          1   10[BANK0 ] unsigned char 
 21078 ;;  macCommandsL    1    9[BANK0 ] unsigned char 
 21079 ;; Return value:  Size  Location     Type
 21080 ;;                  1    wreg      unsigned char 
 21081 ;; Registers used:
 21082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21083 ;; Tracked objects:
 21084 ;;		On entry : 0/0
 21085 ;;		On exit  : 0/0
 21086 ;;		Unchanged: 0/0
 21087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21089 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21090 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21091 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21092 ;;Total ram usage:        3 bytes
 21093 ;; Hardware stack levels used:    1
 21094 ;; Hardware stack levels required when called:    8
 21095 ;; This function calls:
 21096 ;;		_CountfOptsLength
 21097 ;; This function is called by:
 21098 ;;		_LORAWAN_Send
 21099 ;;		_AckRetransmissionCallback
 21100 ;; This function uses a non-reentrant model
 21101 ;;
 21102                           
 21103                           	psect	text107
 21104  007E78                     __ptext107:
 21105                           	opt stack 0
 21106  007E78                     _LORAWAN_GetMaxPayloadSize:
 21107                           	opt stack 21
 21108                           
 21109                           ;lorawan.c: 1558: uint8_t result = 0;
 21110                           
 21111                           ;incstack = 0
 21112  007E78  0E00               	movlw	0
 21113  007E7A  0100               	movlb	0	; () banked
 21114  007E7C  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 21115                           
 21116                           ; BSR set to: 0
 21117                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 21118                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 21119  007E7E  EC8A  F036         	call	_CountfOptsLength	;wreg free
 21120  007E82  0100               	movlb	0	; () banked
 21121  007E84  6F69               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 21122                           
 21123                           ; BSR set to: 0
 21124                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 21125  007E86  0102               	movlb	2	; () banked
 21126  007E88  51A7               	movf	(_loRa+167)& (0+255),w,b
 21127  007E8A  A4D8               	btfss	status,2,c
 21128  007E8C  D00F               	goto	l1984
 21129                           
 21130                           ; BSR set to: 2
 21131                           ;lorawan.c: 1564: {
 21132                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 21133  007E8E  51DF               	movf	(_loRa+223)& (0+255),w,b
 21134  007E90  0D01               	mullw	1
 21135  007E92  0E51               	movlw	low _maxPayloadSize
 21136  007E94  24F3               	addwf	prodl,w,c
 21137  007E96  6EF6               	movwf	tblptrl,c
 21138  007E98  0EFF               	movlw	high _maxPayloadSize
 21139  007E9A  20F4               	addwfc	prodh,w,c
 21140  007E9C  6EF7               	movwf	tblptrh,c
 21141  007E9E                     	if	1	;There are 3 active tblptr bytes
 21142  007E9E  6AF8               	clrf	tblptru,c
 21143  007EA0  0E00               	movlw	low (__mediumconst shr (0+16))
 21144  007EA2  22F8               	addwfc	tblptru,f,c
 21145  007EA4                     	endif
 21146  007EA4  0008               	tblrd		*
 21147  007EA6  CFF5 F06A          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 21148                           
 21149                           ;lorawan.c: 1566: }
 21150  007EAA  D013               	goto	l1985
 21151  007EAC                     l1984:
 21152                           
 21153                           ; BSR set to: 2
 21154                           ;lorawan.c: 1567: else
 21155                           ;lorawan.c: 1568: {
 21156                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 21157                           
 21158                           ; BSR set to: 2
 21159  007EAC  51DF               	movf	(_loRa+223)& (0+255),w,b
 21160  007EAE  0D01               	mullw	1
 21161  007EB0  0E51               	movlw	low _maxPayloadSize
 21162  007EB2  24F3               	addwf	prodl,w,c
 21163  007EB4  6EF6               	movwf	tblptrl,c
 21164  007EB6  0EFF               	movlw	high _maxPayloadSize
 21165  007EB8  20F4               	addwfc	prodh,w,c
 21166  007EBA  6EF7               	movwf	tblptrh,c
 21167  007EBC                     	if	1	;There are 3 active tblptr bytes
 21168  007EBC  6AF8               	clrf	tblptru,c
 21169  007EBE  0E00               	movlw	low (__mediumconst shr (0+16))
 21170  007EC0  22F8               	addwfc	tblptru,f,c
 21171  007EC2                     	endif
 21172  007EC2  0008               	tblrd		*
 21173  007EC4  CFF5 F068          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 21174  007EC8  0100               	movlb	0	; () banked
 21175  007ECA  5169               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 21176  007ECC  0800               	sublw	0
 21177  007ECE  2568               	addwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 21178  007ED0  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 21179  007ED2                     l1985:
 21180                           
 21181                           ;lorawan.c: 1570: }
 21182                           ;lorawan.c: 1572: return result;
 21183                           
 21184                           ; BSR set to: 0
 21185  007ED2  0100               	movlb	0	; () banked
 21186  007ED4  516A               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 21187  007ED6  0012               	return	
 21188  007ED8                     __end_of_LORAWAN_GetMaxPayloadSize:
 21189                           	opt stack 0
 21190                           tosu	equ	0xFFF
 21191                           tosh	equ	0xFFE
 21192                           tosl	equ	0xFFD
 21193                           pclath	equ	0xFFA
 21194                           tblptru	equ	0xFF8
 21195                           tblptrh	equ	0xFF7
 21196                           tblptrl	equ	0xFF6
 21197                           tablat	equ	0xFF5
 21198                           prodh	equ	0xFF4
 21199                           prodl	equ	0xFF3
 21200                           intcon	equ	0xFF2
 21201                           intcon2	equ	0xFF1
 21202                           intcon3	equ	0xFF0
 21203                           indf0	equ	0xFEF
 21204                           postinc0	equ	0xFEE
 21205                           fsr0h	equ	0xFEA
 21206                           fsr0l	equ	0xFE9
 21207                           wreg	equ	0xFE8
 21208                           postinc1	equ	0xFE6
 21209                           postdec1	equ	0xFE5
 21210                           plusw1	equ	0xFE3
 21211                           fsr1h	equ	0xFE2
 21212                           fsr1l	equ	0xFE1
 21213                           indf2	equ	0xFDF
 21214                           postinc2	equ	0xFDE
 21215                           postdec2	equ	0xFDD
 21216                           plusw2	equ	0xFDB
 21217                           fsr2h	equ	0xFDA
 21218                           fsr2l	equ	0xFD9
 21219                           status	equ	0xFD8
 21220                           
 21221 ;; *************** function _AssemblePacket *****************
 21222 ;; Defined at:
 21223 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21224 ;; Parameters:    Size  Location     Type
 21225 ;;  confirmed       1    wreg     unsigned char 
 21226 ;;  port            1  103[BANK0 ] unsigned char 
 21227 ;;  buffer          2  104[BANK0 ] PTR unsigned char 
 21228 ;;		 -> data(8), NULL(0), 
 21229 ;;  bufferLength    2  106[BANK0 ] unsigned int 
 21230 ;; Auto vars:     Size  Location     Type
 21231 ;;  confirmed       1  110[BANK0 ] unsigned char 
 21232 ;;  bufferIndex     1  114[BANK0 ] unsigned char 
 21233 ;;  macCmdIdx       1  113[BANK0 ] unsigned char 
 21234 ;;  fCtrl           1  112[BANK0 ] struct .
 21235 ;;  mhdr            1  111[BANK0 ] struct .
 21236 ;; Return value:  Size  Location     Type
 21237 ;;                  1    wreg      void 
 21238 ;; Registers used:
 21239 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21240 ;; Tracked objects:
 21241 ;;		On entry : 0/0
 21242 ;;		On exit  : 0/0
 21243 ;;		Unchanged: 0/0
 21244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21245 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21246 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21247 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21248 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21249 ;;Total ram usage:       12 bytes
 21250 ;; Hardware stack levels used:    1
 21251 ;; Hardware stack levels required when called:   12
 21252 ;; This function calls:
 21253 ;;		_AESCmac
 21254 ;;		_AssembleEncryptionBlock
 21255 ;;		_CountfOptsLength
 21256 ;;		_EncryptFRMPayload
 21257 ;;		_FindSmallestDataRate
 21258 ;;		_IncludeMacCommandsResponse
 21259 ;;		_memcpy
 21260 ;;		_memset
 21261 ;; This function is called by:
 21262 ;;		_LORAWAN_Send
 21263 ;; This function uses a non-reentrant model
 21264 ;;
 21265                           
 21266                           	psect	text108
 21267  001E40                     __ptext108:
 21268                           	opt stack 0
 21269  001E40                     _AssemblePacket:
 21270                           	opt stack 17
 21271                           
 21272                           ; BSR set to: 0
 21273                           ;incstack = 0
 21274                           ;AssemblePacket@confirmed stored from wreg
 21275  001E40  0100               	movlb	0	; () banked
 21276  001E42  6FCE               	movwf	AssemblePacket@confirmed& (0+255),b
 21277                           
 21278                           ;lorawan.c: 1674: Mhdr_t mhdr;
 21279                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 21280  001E44  0E10               	movlw	16
 21281  001E46  0100               	movlb	0	; () banked
 21282  001E48  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 21283                           
 21284                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 21285                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 21286  001E4A  0E00               	movlw	0
 21287  001E4C  6FD1               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 21288                           
 21289                           ; BSR set to: 0
 21290                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 21291  001E4E  0ECF               	movlw	low AssemblePacket@mhdr
 21292  001E50  6F60               	movwf	memset@p1& (0+255),b
 21293  001E52  0E00               	movlw	high AssemblePacket@mhdr
 21294  001E54  6F61               	movwf	(memset@p1+1)& (0+255),b
 21295  001E56  0E00               	movlw	0
 21296  001E58  6F63               	movwf	(memset@c+1)& (0+255),b
 21297  001E5A  0E00               	movlw	0
 21298  001E5C  6F62               	movwf	memset@c& (0+255),b
 21299  001E5E  0E00               	movlw	0
 21300  001E60  6F65               	movwf	(memset@n+1)& (0+255),b
 21301  001E62  0E01               	movlw	1
 21302  001E64  6F64               	movwf	memset@n& (0+255),b
 21303  001E66  EC45  F045         	call	_memset	;wreg free
 21304                           
 21305                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 21306  001E6A  0EE0               	movlw	low _macBuffer
 21307  001E6C  0100               	movlb	0	; () banked
 21308  001E6E  6F60               	movwf	memset@p1& (0+255),b
 21309  001E70  0E04               	movlw	high _macBuffer
 21310  001E72  6F61               	movwf	(memset@p1+1)& (0+255),b
 21311  001E74  0E00               	movlw	0
 21312  001E76  6F63               	movwf	(memset@c+1)& (0+255),b
 21313  001E78  0E00               	movlw	0
 21314  001E7A  6F62               	movwf	memset@c& (0+255),b
 21315  001E7C  0E01               	movlw	1
 21316  001E7E  6F65               	movwf	(memset@n+1)& (0+255),b
 21317  001E80  0E0F               	movlw	15
 21318  001E82  6F64               	movwf	memset@n& (0+255),b
 21319  001E84  EC45  F045         	call	_memset	;wreg free
 21320                           
 21321                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 21322  001E88  0E57               	movlw	low _aesBuffer
 21323  001E8A  0100               	movlb	0	; () banked
 21324  001E8C  6F60               	movwf	memset@p1& (0+255),b
 21325  001E8E  0E01               	movlw	high _aesBuffer
 21326  001E90  6F61               	movwf	(memset@p1+1)& (0+255),b
 21327  001E92  0E00               	movlw	0
 21328  001E94  6F63               	movwf	(memset@c+1)& (0+255),b
 21329  001E96  0E00               	movlw	0
 21330  001E98  6F62               	movwf	memset@c& (0+255),b
 21331  001E9A  0E00               	movlw	0
 21332  001E9C  6F65               	movwf	(memset@n+1)& (0+255),b
 21333  001E9E  0E10               	movlw	16
 21334  001EA0  6F64               	movwf	memset@n& (0+255),b
 21335  001EA2  EC45  F045         	call	_memset	;wreg free
 21336                           
 21337                           ;lorawan.c: 1683: if (confirmed == 1)
 21338  001EA6  0100               	movlb	0	; () banked
 21339  001EA8  05CE               	decf	AssemblePacket@confirmed& (0+255),w,b
 21340  001EAA  A4D8               	btfss	status,2,c
 21341  001EAC  D007               	goto	l2014
 21342                           
 21343                           ; BSR set to: 0
 21344                           ;lorawan.c: 1684: {
 21345                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 21346  001EAE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 21347  001EB0  0B1F               	andlw	-225
 21348  001EB2  0980               	iorlw	128
 21349  001EB4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 21350                           
 21351                           ; BSR set to: 0
 21352                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 21353  001EB6  0102               	movlb	2	; () banked
 21354  001EB8  8100               	bsf	_loRa& (0+255),0,b
 21355                           
 21356                           ;lorawan.c: 1687: }
 21357  001EBA  D005               	goto	l2015
 21358  001EBC                     l2014:
 21359                           
 21360                           ;lorawan.c: 1688: else
 21361                           ;lorawan.c: 1689: {
 21362                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 21363                           
 21364                           ; BSR set to: 2
 21365  001EBC  0100               	movlb	0	; () banked
 21366  001EBE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 21367  001EC0  0B1F               	andlw	-225
 21368  001EC2  0940               	iorlw	64
 21369  001EC4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 21370  001EC6                     l2015:
 21371                           
 21372                           ;lorawan.c: 1691: }
 21373                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 21374  001EC6  0EFC               	movlw	-4
 21375  001EC8  0100               	movlb	0	; () banked
 21376  001ECA  17CF               	andwf	AssemblePacket@mhdr& (0+255),f,b
 21377                           
 21378                           ; BSR set to: 0
 21379                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 21380  001ECC  95CF               	bcf	AssemblePacket@mhdr& (0+255),2,b
 21381  001ECE  97CF               	bcf	AssemblePacket@mhdr& (0+255),3,b
 21382  001ED0  99CF               	bcf	AssemblePacket@mhdr& (0+255),4,b
 21383                           
 21384                           ; BSR set to: 0
 21385                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 21386  001ED2  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21387  001ED4  0D01               	mullw	1
 21388  001ED6  0EE0               	movlw	low _macBuffer
 21389  001ED8  24F3               	addwf	prodl,w,c
 21390  001EDA  6ED9               	movwf	fsr2l,c
 21391  001EDC  0E04               	movlw	high _macBuffer
 21392  001EDE  20F4               	addwfc	prodh,w,c
 21393  001EE0  6EDA               	movwf	fsr2h,c
 21394  001EE2  C0CF  FFDF         	movff	AssemblePacket@mhdr,indf2
 21395                           
 21396                           ; BSR set to: 0
 21397  001EE6  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 21398                           
 21399                           ; BSR set to: 0
 21400                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 21401  001EE8  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21402  001EEA  0D01               	mullw	1
 21403  001EEC  0EE0               	movlw	low _macBuffer
 21404  001EEE  24F3               	addwf	prodl,w,c
 21405  001EF0  6F60               	movwf	memcpy@d1& (0+255),b
 21406  001EF2  0E04               	movlw	high _macBuffer
 21407  001EF4  20F4               	addwfc	prodh,w,c
 21408  001EF6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21409  001EF8  0E1E               	movlw	low (_loRa+30)
 21410  001EFA  6F62               	movwf	memcpy@s1& (0+255),b
 21411  001EFC  0E02               	movlw	high (_loRa+30)
 21412  001EFE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21413  001F00  0E00               	movlw	0
 21414  001F02  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21415  001F04  0E04               	movlw	4
 21416  001F06  6F64               	movwf	memcpy@n& (0+255),b
 21417  001F08  EC6C  F03F         	call	_memcpy	;wreg free
 21418                           
 21419                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 21420  001F0C  0100               	movlb	0	; () banked
 21421  001F0E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21422  001F10  0F04               	addlw	4
 21423  001F12  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 21424                           
 21425                           ; BSR set to: 0
 21426                           ;lorawan.c: 1699: fCtrl.value = 0;
 21427  001F14  0E00               	movlw	0
 21428  001F16  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 21429                           
 21430                           ; BSR set to: 0
 21431                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 21432  001F18  0102               	movlb	2	; () banked
 21433  001F1A  AD02               	btfss	(_loRa+2)& (0+255),6,b
 21434  001F1C  D047               	goto	l2024
 21435                           
 21436                           ; BSR set to: 2
 21437                           ;lorawan.c: 1702: {
 21438                           ;lorawan.c: 1703: fCtrl.adr = 1;
 21439  001F1E  0100               	movlb	0	; () banked
 21440  001F20  8FD0               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 21441                           
 21442                           ; BSR set to: 0
 21443                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 21444  001F22  0102               	movlb	2	; () banked
 21445  001F24  51DF               	movf	(_loRa+223)& (0+255),w,b
 21446  001F26  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 21447  001F28  B0D8               	btfsc	status,0,c
 21448  001F2A  D03F               	goto	l2017
 21449                           
 21450                           ; BSR set to: 2
 21451                           ;lorawan.c: 1705: {
 21452                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 21453  001F2C  0100               	movlb	0	; () banked
 21454  001F2E  8DD0               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 21455                           
 21456                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 21457  001F30  0102               	movlb	2	; () banked
 21458  001F32  8900               	bsf	_loRa& (0+255),4,b
 21459                           
 21460                           ; BSR set to: 2
 21461                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 21462  001F34  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 21463  001F36  2BD1               	incf	(_loRa+209)& (0+255),f,b
 21464                           
 21465                           ; BSR set to: 2
 21466                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 21467  001F38  51A2               	movf	(_loRa+162)& (0+255),w,b
 21468  001F3A  0100               	movlb	0	; () banked
 21469  001F3C  6FCC               	movwf	??_AssemblePacket& (0+255),b
 21470  001F3E  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 21471  001F40  0102               	movlb	2	; () banked
 21472  001F42  51D0               	movf	(_loRa+208)& (0+255),w,b
 21473  001F44  0100               	movlb	0	; () banked
 21474  001F46  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 21475  001F48  E10C               	bnz	l15225
 21476  001F4A  0102               	movlb	2	; () banked
 21477  001F4C  51D1               	movf	(_loRa+209)& (0+255),w,b
 21478  001F4E  0100               	movlb	0	; () banked
 21479  001F50  19CD               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 21480  001F52  A4D8               	btfss	status,2,c
 21481  001F54  D006               	goto	l2018
 21482                           
 21483                           ; BSR set to: 0
 21484                           ;lorawan.c: 1711: {
 21485                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 21486  001F56  0E00               	movlw	0
 21487  001F58  0102               	movlb	2	; () banked
 21488  001F5A  6FEE               	movwf	(_loRa+238)& (0+255),b
 21489  001F5C  D023               	goto	l15237
 21490  001F5E                     l15223:
 21491                           
 21492                           ; BSR set to: 0
 21493                           ;lorawan.c: 1714: loRa.lorawanMacStatus.adrAckRequest = 0;
 21494  001F5E  0102               	movlb	2	; () banked
 21495  001F60  D024               	goto	l2017
 21496  001F62                     l2018:
 21497  001F62                     l15225:
 21498                           
 21499                           ;lorawan.c: 1716: else
 21500                           ;lorawan.c: 1717: {
 21501                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 21502  001F62  0102               	movlb	2	; () banked
 21503  001F64  51A2               	movf	(_loRa+162)& (0+255),w,b
 21504  001F66  0100               	movlb	0	; () banked
 21505  001F68  6FCC               	movwf	??_AssemblePacket& (0+255),b
 21506  001F6A  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 21507  001F6C  0102               	movlb	2	; () banked
 21508  001F6E  51D0               	movf	(_loRa+208)& (0+255),w,b
 21509  001F70  0100               	movlb	0	; () banked
 21510  001F72  5DCC               	subwf	??_AssemblePacket& (0+255),w,b
 21511  001F74  0102               	movlb	2	; () banked
 21512  001F76  51D1               	movf	(_loRa+209)& (0+255),w,b
 21513  001F78  0100               	movlb	0	; () banked
 21514  001F7A  59CD               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 21515  001F7C  B0D8               	btfsc	status,0,c
 21516  001F7E  D013               	goto	l2020
 21517                           
 21518                           ; BSR set to: 0
 21519                           ;lorawan.c: 1719: {
 21520                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 21521  001F80  0102               	movlb	2	; () banked
 21522  001F82  2BEE               	incf	(_loRa+238)& (0+255),f,b
 21523                           
 21524                           ; BSR set to: 2
 21525                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 21526  001F84  51EE               	movf	(_loRa+238)& (0+255),w,b
 21527  001F86  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 21528  001F88  B0D8               	btfsc	status,0,c
 21529  001F8A  D010               	goto	l2024
 21530                           
 21531                           ; BSR set to: 2
 21532                           ;lorawan.c: 1725: {
 21533                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 21534  001F8C  0E00               	movlw	0
 21535  001F8E  6FEE               	movwf	(_loRa+238)& (0+255),b
 21536                           
 21537                           ; BSR set to: 2
 21538                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 21539  001F90  EC6A  F034         	call	_FindSmallestDataRate	;wreg free
 21540  001F94  0900               	iorlw	0
 21541  001F96  A4D8               	btfss	status,2,c
 21542  001F98  D009               	goto	l2024
 21543                           
 21544                           ;lorawan.c: 1729: {
 21545                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 21546  001F9A  0E00               	movlw	0
 21547  001F9C  0102               	movlb	2	; () banked
 21548  001F9E  6FD1               	movwf	(_loRa+209)& (0+255),b
 21549  001FA0  0E00               	movlw	0
 21550  001FA2  6FD0               	movwf	(_loRa+208)& (0+255),b
 21551  001FA4                     l15237:
 21552                           
 21553                           ; BSR set to: 2
 21554                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 21555  001FA4  0100               	movlb	0	; () banked
 21556  001FA6                     l2020:
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;lorawan.c: 1737: else
 21560                           ;lorawan.c: 1738: {
 21561                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 21562  001FA6  9DD0               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 21563  001FA8  D7DA               	goto	l15223
 21564  001FAA                     l2017:
 21565                           
 21566                           ; BSR set to: 2
 21567                           ;lorawan.c: 1744: else
 21568                           ;lorawan.c: 1745: {
 21569                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 21570  001FAA  9900               	bcf	_loRa& (0+255),4,b
 21571  001FAC                     l2024:
 21572                           
 21573                           ;lorawan.c: 1747: }
 21574                           ;lorawan.c: 1748: }
 21575                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 21576                           
 21577                           ; BSR set to: 2
 21578  001FAC  0102               	movlb	2	; () banked
 21579  001FAE  A300               	btfss	_loRa& (0+255),1,b
 21580  001FB0  D004               	goto	l2025
 21581                           
 21582                           ; BSR set to: 2
 21583                           ;lorawan.c: 1751: {
 21584                           ;lorawan.c: 1752: fCtrl.ack = 1;
 21585  001FB2  0100               	movlb	0	; () banked
 21586  001FB4  8BD0               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 21587                           
 21588                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 21589  001FB6  0102               	movlb	2	; () banked
 21590  001FB8  9300               	bcf	_loRa& (0+255),1,b
 21591  001FBA                     l2025:
 21592                           
 21593                           ; BSR set to: 2
 21594                           ;lorawan.c: 1754: }
 21595                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 21596  001FBA  0100               	movlb	0	; () banked
 21597  001FBC  99D0               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 21598                           
 21599                           ; BSR set to: 0
 21600                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 21601  001FBE  0102               	movlb	2	; () banked
 21602  001FC0  51A7               	movf	(_loRa+167)& (0+255),w,b
 21603  001FC2  B4D8               	btfsc	status,2,c
 21604  001FC4  D005               	goto	u17610
 21605                           
 21606                           ; BSR set to: 2
 21607  001FC6  0100               	movlb	0	; () banked
 21608  001FC8  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 21609  001FCA  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 21610  001FCC  A4D8               	btfss	status,2,c
 21611  001FCE  D006               	goto	l2026
 21612  001FD0                     u17610:
 21613                           
 21614                           ;lorawan.c: 1759: {
 21615                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 21616  001FD0  0100               	movlb	0	; () banked
 21617  001FD2  91D0               	bcf	AssemblePacket@fCtrl& (0+255),0,b
 21618  001FD4  93D0               	bcf	AssemblePacket@fCtrl& (0+255),1,b
 21619  001FD6  95D0               	bcf	AssemblePacket@fCtrl& (0+255),2,b
 21620  001FD8  97D0               	bcf	AssemblePacket@fCtrl& (0+255),3,b
 21621                           
 21622                           ;lorawan.c: 1761: }
 21623  001FDA  D009               	goto	l2029
 21624  001FDC                     l2026:
 21625                           
 21626                           ; BSR set to: 0
 21627                           ;lorawan.c: 1763: else
 21628                           ;lorawan.c: 1764: {
 21629                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 21630                           
 21631                           ; BSR set to: 0
 21632  001FDC  EC8A  F036         	call	_CountfOptsLength	;wreg free
 21633  001FE0  0100               	movlb	0	; () banked
 21634  001FE2  6FCC               	movwf	??_AssemblePacket& (0+255),b
 21635  001FE4  51D0               	movf	AssemblePacket@fCtrl& (0+255),w,b
 21636  001FE6  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 21637  001FE8  0BF0               	andlw	-16
 21638  001FEA  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 21639  001FEC  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 21640  001FEE                     l2029:
 21641                           
 21642                           ; BSR set to: 0
 21643                           ;lorawan.c: 1766: }
 21644                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 21645                           
 21646                           ; BSR set to: 0
 21647  001FEE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21648  001FF0  0D01               	mullw	1
 21649  001FF2  0EE0               	movlw	low _macBuffer
 21650  001FF4  24F3               	addwf	prodl,w,c
 21651  001FF6  6ED9               	movwf	fsr2l,c
 21652  001FF8  0E04               	movlw	high _macBuffer
 21653  001FFA  20F4               	addwfc	prodh,w,c
 21654  001FFC  6EDA               	movwf	fsr2h,c
 21655  001FFE  C0D0  FFDF         	movff	AssemblePacket@fCtrl,indf2
 21656                           
 21657                           ; BSR set to: 0
 21658  002002  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 21659                           
 21660                           ; BSR set to: 0
 21661                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 21662  002004  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21663  002006  0D01               	mullw	1
 21664  002008  0EE0               	movlw	low _macBuffer
 21665  00200A  24F3               	addwf	prodl,w,c
 21666  00200C  6F60               	movwf	memcpy@d1& (0+255),b
 21667  00200E  0E04               	movlw	high _macBuffer
 21668  002010  20F4               	addwfc	prodh,w,c
 21669  002012  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21670  002014  0E06               	movlw	low (_loRa+6)
 21671  002016  6F62               	movwf	memcpy@s1& (0+255),b
 21672  002018  0E02               	movlw	high (_loRa+6)
 21673  00201A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21674  00201C  0E00               	movlw	0
 21675  00201E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21676  002020  0E02               	movlw	2
 21677  002022  6F64               	movwf	memcpy@n& (0+255),b
 21678  002024  EC6C  F03F         	call	_memcpy	;wreg free
 21679                           
 21680                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 21681  002028  0100               	movlb	0	; () banked
 21682  00202A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21683  00202C  0F02               	addlw	2
 21684  00202E  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 21685                           
 21686                           ; BSR set to: 0
 21687                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 21688  002030  0102               	movlb	2	; () banked
 21689  002032  51A7               	movf	(_loRa+167)& (0+255),w,b
 21690  002034  B4D8               	btfsc	status,2,c
 21691  002036  D011               	goto	l2030
 21692                           
 21693                           ; BSR set to: 2
 21694  002038  0100               	movlb	0	; () banked
 21695  00203A  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 21696  00203C  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 21697  00203E  B4D8               	btfsc	status,2,c
 21698  002040  D00C               	goto	l2030
 21699                           
 21700                           ; BSR set to: 0
 21701                           ;lorawan.c: 1774: {
 21702                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 21703  002042  0EE0               	movlw	low _macBuffer
 21704  002044  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 21705  002046  0E04               	movlw	high _macBuffer
 21706  002048  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 21707  00204A  0ED2               	movlw	low AssemblePacket@bufferIndex
 21708  00204C  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 21709  00204E  0E00               	movlw	high AssemblePacket@bufferIndex
 21710  002050  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 21711  002052  0E01               	movlw	1
 21712  002054  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 21713  002056  ECEF  F00C         	call	_IncludeMacCommandsResponse	;wreg free
 21714  00205A                     l2030:
 21715                           
 21716                           ;lorawan.c: 1776: }
 21717                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 21718  00205A  0100               	movlb	0	; () banked
 21719  00205C  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21720  00205E  0D01               	mullw	1
 21721  002060  0EE0               	movlw	low _macBuffer
 21722  002062  24F3               	addwf	prodl,w,c
 21723  002064  6ED9               	movwf	fsr2l,c
 21724  002066  0E04               	movlw	high _macBuffer
 21725  002068  20F4               	addwfc	prodh,w,c
 21726  00206A  6EDA               	movwf	fsr2h,c
 21727  00206C  C0C7  FFDF         	movff	AssemblePacket@port,indf2
 21728                           
 21729                           ; BSR set to: 0
 21730  002070  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 21731                           
 21732                           ; BSR set to: 0
 21733                           ;lorawan.c: 1780: if (bufferLength != 0)
 21734  002072  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 21735  002074  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 21736  002076  B4D8               	btfsc	status,2,c
 21737  002078  D035               	goto	l2031
 21738                           
 21739                           ; BSR set to: 0
 21740                           ;lorawan.c: 1781: {
 21741                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 21742  00207A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21743  00207C  0D01               	mullw	1
 21744  00207E  0EE0               	movlw	low _macBuffer
 21745  002080  24F3               	addwf	prodl,w,c
 21746  002082  6F60               	movwf	memcpy@d1& (0+255),b
 21747  002084  0E04               	movlw	high _macBuffer
 21748  002086  20F4               	addwfc	prodh,w,c
 21749  002088  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21750  00208A  C0C8  F062         	movff	AssemblePacket@buffer,memcpy@s1
 21751  00208E  C0C9  F063         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 21752  002092  C0CA  F064         	movff	AssemblePacket@bufferLength,memcpy@n
 21753  002096  C0CB  F065         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 21754  00209A  EC6C  F03F         	call	_memcpy	;wreg free
 21755                           
 21756                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 21757  00209E  C0C8  F091         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 21758  0020A2  C0C9  F092         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 21759  0020A6  C0CA  F093         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 21760  0020AA  0E00               	movlw	0
 21761  0020AC  0100               	movlb	0	; () banked
 21762  0020AE  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 21763  0020B0  C206  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 21764  0020B4  C207  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 21765  0020B8  C208  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 21766  0020BC  C209  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 21767  0020C0  0E32               	movlw	low (_loRa+50)
 21768  0020C2  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 21769  0020C4  0E02               	movlw	high (_loRa+50)
 21770  0020C6  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 21771  0020C8  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 21772  0020CC  0EE0               	movlw	low _macBuffer
 21773  0020CE  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 21774  0020D0  0E04               	movlw	high _macBuffer
 21775  0020D2  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 21776  0020D4  0E00               	movlw	0
 21777  0020D6  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 21778  0020D8  ECE6  F025         	call	_EncryptFRMPayload	;wreg free
 21779                           
 21780                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 21781  0020DC  0100               	movlb	0	; () banked
 21782  0020DE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21783  0020E0  25CA               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 21784  0020E2  D033               	goto	L11
 21785  0020E4                     l2031:
 21786                           
 21787                           ; BSR set to: 0
 21788                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 21789                           
 21790                           ; BSR set to: 0
 21791  0020E4  0102               	movlb	2	; () banked
 21792  0020E6  51A7               	movf	(_loRa+167)& (0+255),w,b
 21793  0020E8  B4D8               	btfsc	status,2,c
 21794  0020EA  D030               	goto	l2033
 21795                           
 21796                           ; BSR set to: 2
 21797                           ;lorawan.c: 1787: {
 21798                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 21799  0020EC  0EEF               	movlw	low _radioBuffer
 21800  0020EE  0100               	movlb	0	; () banked
 21801  0020F0  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 21802  0020F2  0E05               	movlw	high _radioBuffer
 21803  0020F4  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 21804  0020F6  0ED1               	movlw	low AssemblePacket@macCmdIdx
 21805  0020F8  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 21806  0020FA  0E00               	movlw	high AssemblePacket@macCmdIdx
 21807  0020FC  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 21808  0020FE  0E00               	movlw	0
 21809  002100  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 21810  002102  ECEF  F00C         	call	_IncludeMacCommandsResponse	;wreg free
 21811                           
 21812                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 21813  002106  0EEF               	movlw	low _radioBuffer
 21814  002108  0100               	movlb	0	; () banked
 21815  00210A  6F91               	movwf	EncryptFRMPayload@buffer& (0+255),b
 21816  00210C  0E05               	movlw	high _radioBuffer
 21817  00210E  6F92               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 21818  002110  C0D1  F093         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 21819  002114  0E00               	movlw	0
 21820  002116  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 21821  002118  C206  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 21822  00211C  C207  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 21823  002120  C208  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 21824  002124  C209  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 21825  002128  0E22               	movlw	low (_loRa+34)
 21826  00212A  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 21827  00212C  0E02               	movlw	high (_loRa+34)
 21828  00212E  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 21829  002130  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 21830  002134  0EE0               	movlw	low _macBuffer
 21831  002136  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 21832  002138  0E04               	movlw	high _macBuffer
 21833  00213A  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 21834  00213C  0E00               	movlw	0
 21835  00213E  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 21836  002140  ECE6  F025         	call	_EncryptFRMPayload	;wreg free
 21837                           
 21838                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 21839  002144  0100               	movlb	0	; () banked
 21840  002146  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21841  002148  25D1               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 21842  00214A                     L11:
 21843  00214A  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 21844  00214C                     l2033:
 21845                           
 21846                           ;lorawan.c: 1793: }
 21847                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 21848                           
 21849                           ; BSR set to: 0
 21850                           
 21851                           ; BSR set to: 0
 21852  00214C  C206  F06B         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 21853  002150  C207  F06C         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 21854  002154  C208  F06D         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 21855  002158  C209  F06E         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 21856  00215C  0100               	movlb	0	; () banked
 21857  00215E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21858  002160  0FF0               	addlw	240
 21859  002162  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 21860  002164  0E49               	movlw	73
 21861  002166  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 21862  002168  0E00               	movlw	0
 21863  00216A  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 21864  00216C  0E00               	movlw	0
 21865  00216E  EC1B  F032         	call	_AssembleEncryptionBlock
 21866                           
 21867                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 21868  002172  0EE0               	movlw	low _macBuffer
 21869  002174  0100               	movlb	0	; () banked
 21870  002176  6F60               	movwf	memcpy@d1& (0+255),b
 21871  002178  0E04               	movlw	high _macBuffer
 21872  00217A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21873  00217C  0E57               	movlw	low _aesBuffer
 21874  00217E  6F62               	movwf	memcpy@s1& (0+255),b
 21875  002180  0E01               	movlw	high _aesBuffer
 21876  002182  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21877  002184  0E00               	movlw	0
 21878  002186  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21879  002188  0E10               	movlw	16
 21880  00218A  6F64               	movwf	memcpy@n& (0+255),b
 21881  00218C  EC6C  F03F         	call	_memcpy	;wreg free
 21882                           
 21883                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 21884  002190  0E22               	movlw	low (_loRa+34)
 21885  002192  0100               	movlb	0	; () banked
 21886  002194  6FB9               	movwf	AESCmac@key& (0+255),b
 21887  002196  0E02               	movlw	high (_loRa+34)
 21888  002198  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 21889  00219A  0E57               	movlw	low _aesBuffer
 21890  00219C  6FBB               	movwf	AESCmac@output& (0+255),b
 21891  00219E  0E01               	movlw	high _aesBuffer
 21892  0021A0  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 21893  0021A2  0EE0               	movlw	low _macBuffer
 21894  0021A4  6FBD               	movwf	AESCmac@input& (0+255),b
 21895  0021A6  0E04               	movlw	high _macBuffer
 21896  0021A8  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 21897  0021AA  C0D2  F0BF         	movff	AssemblePacket@bufferIndex,AESCmac@size
 21898  0021AE  ECF8  F010         	call	_AESCmac	;wreg free
 21899                           
 21900                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 21901  0021B2  0100               	movlb	0	; () banked
 21902  0021B4  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21903  0021B6  0D01               	mullw	1
 21904  0021B8  0EE0               	movlw	low _macBuffer
 21905  0021BA  24F3               	addwf	prodl,w,c
 21906  0021BC  6F60               	movwf	memcpy@d1& (0+255),b
 21907  0021BE  0E04               	movlw	high _macBuffer
 21908  0021C0  20F4               	addwfc	prodh,w,c
 21909  0021C2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21910  0021C4  0E57               	movlw	low _aesBuffer
 21911  0021C6  6F62               	movwf	memcpy@s1& (0+255),b
 21912  0021C8  0E01               	movlw	high _aesBuffer
 21913  0021CA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21914  0021CC  0E00               	movlw	0
 21915  0021CE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21916  0021D0  0E04               	movlw	4
 21917  0021D2  6F64               	movwf	memcpy@n& (0+255),b
 21918  0021D4  EC6C  F03F         	call	_memcpy	;wreg free
 21919                           
 21920                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 21921  0021D8  0100               	movlb	0	; () banked
 21922  0021DA  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21923  0021DC  0F04               	addlw	4
 21924  0021DE  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 21925                           
 21926                           ; BSR set to: 0
 21927                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 21928  0021E0  0EF0               	movlw	240
 21929  0021E2  25D2               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 21930  0021E4  0102               	movlb	2	; () banked
 21931  0021E6  6FD4               	movwf	(_loRa+212)& (0+255),b
 21932  0021E8  6BD5               	clrf	(_loRa+213)& (0+255),b
 21933  0021EA  0EFF               	movlw	255
 21934  0021EC  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 21935                           
 21936                           ; BSR set to: 2
 21937  0021EE  0012               	return		;funcret
 21938  0021F0                     __end_of_AssemblePacket:
 21939                           	opt stack 0
 21940                           tosu	equ	0xFFF
 21941                           tosh	equ	0xFFE
 21942                           tosl	equ	0xFFD
 21943                           pclath	equ	0xFFA
 21944                           tblptru	equ	0xFF8
 21945                           tblptrh	equ	0xFF7
 21946                           tblptrl	equ	0xFF6
 21947                           tablat	equ	0xFF5
 21948                           prodh	equ	0xFF4
 21949                           prodl	equ	0xFF3
 21950                           intcon	equ	0xFF2
 21951                           intcon2	equ	0xFF1
 21952                           intcon3	equ	0xFF0
 21953                           indf0	equ	0xFEF
 21954                           postinc0	equ	0xFEE
 21955                           fsr0h	equ	0xFEA
 21956                           fsr0l	equ	0xFE9
 21957                           wreg	equ	0xFE8
 21958                           postinc1	equ	0xFE6
 21959                           postdec1	equ	0xFE5
 21960                           plusw1	equ	0xFE3
 21961                           fsr1h	equ	0xFE2
 21962                           fsr1l	equ	0xFE1
 21963                           indf2	equ	0xFDF
 21964                           postinc2	equ	0xFDE
 21965                           postdec2	equ	0xFDD
 21966                           plusw2	equ	0xFDB
 21967                           fsr2h	equ	0xFDA
 21968                           fsr2l	equ	0xFD9
 21969                           status	equ	0xFD8
 21970                           
 21971 ;; *************** function _IncludeMacCommandsResponse *****************
 21972 ;; Defined at:
 21973 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21974 ;; Parameters:    Size  Location     Type
 21975 ;;  macBuffer       2    0[BANK0 ] PTR unsigned char 
 21976 ;;		 -> macBuffer(271), radioBuffer(271), 
 21977 ;;  pBufferIndex    2    2[BANK0 ] PTR unsigned char 
 21978 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 21979 ;;  bIncludeInFo    1    4[BANK0 ] unsigned char 
 21980 ;; Auto vars:     Size  Location     Type
 21981 ;;  bufferIndex     1   14[BANK0 ] unsigned char 
 21982 ;;  i               1   13[BANK0 ] unsigned char 
 21983 ;; Return value:  Size  Location     Type
 21984 ;;                  1    wreg      void 
 21985 ;; Registers used:
 21986 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21987 ;; Tracked objects:
 21988 ;;		On entry : 0/0
 21989 ;;		On exit  : 0/0
 21990 ;;		Unchanged: 0/0
 21991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21992 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21993 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21994 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21995 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21996 ;;Total ram usage:       15 bytes
 21997 ;; Hardware stack levels used:    1
 21998 ;; Hardware stack levels required when called:    8
 21999 ;; This function calls:
 22000 ;;		_RADIO_GetPacketSnr
 22001 ;; This function is called by:
 22002 ;;		_AssemblePacket
 22003 ;; This function uses a non-reentrant model
 22004 ;;
 22005                           
 22006                           	psect	text109
 22007  0019DE                     __ptext109:
 22008                           	opt stack 0
 22009  0019DE                     _IncludeMacCommandsResponse:
 22010                           	opt stack 20
 22011                           
 22012                           ;lorawan.c: 1847: uint8_t i = 0;
 22013                           
 22014                           ; BSR set to: 2
 22015                           ;incstack = 0
 22016  0019DE  0E00               	movlw	0
 22017  0019E0  0100               	movlb	0	; () banked
 22018  0019E2  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 22019                           
 22020                           ; BSR set to: 0
 22021                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 22022  0019E4  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 22023  0019E8  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 22024  0019EC  50DF               	movf	indf2,w,c
 22025  0019EE  6F6E               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 22026                           
 22027                           ; BSR set to: 0
 22028                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 22029  0019F0  0E00               	movlw	0
 22030  0019F2  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 22031  0019F4  D218               	goto	l2044
 22032  0019F6                     
 22033                           ; BSR set to: 0
 22034                           ;lorawan.c: 1851: {
 22035                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 22036                           
 22037                           ; BSR set to: 0
 22038  0019F6  5164               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 22039  0019F8  B4D8               	btfsc	status,2,c
 22040  0019FA  D1F6               	goto	l2049
 22041                           
 22042                           ; BSR set to: 0
 22043  0019FC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22044  0019FE  0D02               	mullw	2
 22045  001A00  0EA8               	movlw	low (_loRa+168)
 22046  001A02  24F3               	addwf	prodl,w,c
 22047  001A04  6ED9               	movwf	fsr2l,c
 22048  001A06  0E02               	movlw	high (_loRa+168)
 22049  001A08  20F4               	addwfc	prodh,w,c
 22050  001A0A  6EDA               	movwf	fsr2h,c
 22051  001A0C  28DE               	incf	postinc2,w,c
 22052  001A0E  B4D8               	btfsc	status,2,c
 22053  001A10  D1EB               	goto	l2049
 22054                           
 22055                           ; BSR set to: 0
 22056                           ;lorawan.c: 1853: {
 22057                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 22058  001A12  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 22059  001A16  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 22060  001A1A  50DF               	movf	indf2,w,c
 22061  001A1C  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22062  001A1E  6B66               	clrf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22063  001A20  1F65               	comf	??_IncludeMacCommandsResponse& (0+255),f,b
 22064  001A22  1F66               	comf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22065  001A24  4B65               	infsnz	??_IncludeMacCommandsResponse& (0+255),f,b
 22066  001A26  2B66               	incf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22067  001A28  0EFE               	movlw	254
 22068  001A2A  6F67               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 22069  001A2C  0EFF               	movlw	255
 22070  001A2E  6F68               	movwf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 22071  001A30  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22072  001A32  0D02               	mullw	2
 22073  001A34  0EA8               	movlw	low (_loRa+168)
 22074  001A36  24F3               	addwf	prodl,w,c
 22075  001A38  6ED9               	movwf	fsr2l,c
 22076  001A3A  0E02               	movlw	high (_loRa+168)
 22077  001A3C  20F4               	addwfc	prodh,w,c
 22078  001A3E  6EDA               	movwf	fsr2h,c
 22079  001A40  50DF               	movf	indf2,w,c
 22080  001A42  6F69               	movwf	(??_IncludeMacCommandsResponse+4)& (0+255),b
 22081  001A44  6B6A               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 22082  001A46  5167               	movf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 22083  001A48  2769               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 22084  001A4A  5168               	movf	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 22085  001A4C  236A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 22086  001A4E  0E61               	movlw	low _macEndDevCmdReplyLen
 22087  001A50  2569               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 22088  001A52  6EF6               	movwf	tblptrl,c
 22089  001A54  0EFF               	movlw	high _macEndDevCmdReplyLen
 22090  001A56  216A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 22091  001A58  6EF7               	movwf	tblptrh,c
 22092  001A5A                     	if	1	;There are 3 active tblptr bytes
 22093  001A5A  6AF8               	clrf	tblptru,c
 22094  001A5C  0E00               	movlw	low (__mediumconst shr (0+16))
 22095  001A5E  22F8               	addwfc	tblptru,f,c
 22096  001A60                     	endif
 22097  001A60  0008               	tblrd		*
 22098  001A62  50F5               	movf	tablat,w,c
 22099  001A64  C06E  F06B         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+6
 22100  001A68  6B6C               	clrf	(??_IncludeMacCommandsResponse+7)& (0+255),b
 22101  001A6A  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 22102  001A6C  0E00               	movlw	0
 22103  001A6E  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 22104  001A70  5165               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 22105  001A72  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 22106  001A74  5166               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22107  001A76  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 22108  001A78  BF6C               	btfsc	(??_IncludeMacCommandsResponse+7)& (0+255),7,b
 22109  001A7A  D1B6               	goto	l2049
 22110  001A7C  516C               	movf	(??_IncludeMacCommandsResponse+7)& (0+255),w,b
 22111  001A7E  E105               	bnz	u16950
 22112  001A80  0E10               	movlw	16
 22113  001A82  5D6B               	subwf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 22114  001A84  B0D8               	btfsc	status,0,c
 22115  001A86  D1D5               	goto	u17060
 22116  001A88  D1AF               	goto	l2049
 22117  001A8A                     u16950:
 22118                           
 22119                           ; BSR set to: 0
 22120                           ;lorawan.c: 1855: {
 22121                           ;lorawan.c: 1856: break;
 22122  001A8A  D1D3               	goto	u17060
 22123  001A8C                     
 22124                           ; BSR set to: 0
 22125                           ;lorawan.c: 1862: {
 22126                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 22127                           
 22128                           ; BSR set to: 0
 22129  001A8C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22130  001A8E  0D01               	mullw	1
 22131  001A90  50F3               	movf	prodl,w,c
 22132  001A92  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22133  001A94  6ED9               	movwf	fsr2l,c
 22134  001A96  50F4               	movf	prodh,w,c
 22135  001A98  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22136  001A9A  6EDA               	movwf	fsr2h,c
 22137  001A9C  0E03               	movlw	3
 22138  001A9E  6EDF               	movwf	indf2,c
 22139                           
 22140                           ; BSR set to: 0
 22141  001AA0  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 22142                           
 22143                           ; BSR set to: 0
 22144                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 22145  001AA2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22146  001AA4  0D01               	mullw	1
 22147  001AA6  50F3               	movf	prodl,w,c
 22148  001AA8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22149  001AAA  6ED9               	movwf	fsr2l,c
 22150  001AAC  50F4               	movf	prodh,w,c
 22151  001AAE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22152  001AB0  6EDA               	movwf	fsr2h,c
 22153  001AB2  0E00               	movlw	0
 22154  001AB4  6EDF               	movwf	indf2,c
 22155                           
 22156                           ; BSR set to: 0
 22157                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 22158  001AB6  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22159  001AB8  0D02               	mullw	2
 22160  001ABA  0E00               	movlw	low _loRa
 22161  001ABC  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22162  001ABE  0E02               	movlw	high _loRa
 22163  001AC0  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22164  001AC2  0EA8               	movlw	168
 22165  001AC4  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22166  001AC6  0E00               	movlw	0
 22167  001AC8  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22168  001ACA  50F3               	movf	prodl,w,c
 22169  001ACC  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22170  001ACE  50F4               	movf	prodh,w,c
 22171  001AD0  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22172  001AD2  0E01               	movlw	1
 22173  001AD4  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 22174  001AD6  6ED9               	movwf	fsr2l,c
 22175  001AD8  0E00               	movlw	0
 22176  001ADA  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22177  001ADC  6EDA               	movwf	fsr2h,c
 22178  001ADE  0102               	movlb	2	; () banked
 22179  001AE0  A0DF               	btfss	indf2,0,c
 22180  001AE2  D00B               	goto	l2051
 22181                           
 22182                           ; BSR set to: 2
 22183                           ;lorawan.c: 1866: {
 22184                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 22185  001AE4  0100               	movlb	0	; () banked
 22186  001AE6  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22187  001AE8  0D01               	mullw	1
 22188  001AEA  50F3               	movf	prodl,w,c
 22189  001AEC  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22190  001AEE  6ED9               	movwf	fsr2l,c
 22191  001AF0  50F4               	movf	prodh,w,c
 22192  001AF2  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22193  001AF4  6EDA               	movwf	fsr2h,c
 22194  001AF6  0E00               	movlw	0
 22195  001AF8  80DB               	bsf	plusw2,0,c
 22196  001AFA                     l2051:
 22197                           
 22198                           ;lorawan.c: 1868: }
 22199                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 22200  001AFA  0100               	movlb	0	; () banked
 22201  001AFC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22202  001AFE  0D02               	mullw	2
 22203  001B00  0E00               	movlw	low _loRa
 22204  001B02  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22205  001B04  0E02               	movlw	high _loRa
 22206  001B06  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22207  001B08  0EA8               	movlw	168
 22208  001B0A  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22209  001B0C  0E00               	movlw	0
 22210  001B0E  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22211  001B10  50F3               	movf	prodl,w,c
 22212  001B12  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22213  001B14  50F4               	movf	prodh,w,c
 22214  001B16  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22215  001B18  0E01               	movlw	1
 22216  001B1A  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 22217  001B1C  6ED9               	movwf	fsr2l,c
 22218  001B1E  0E00               	movlw	0
 22219  001B20  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22220  001B22  6EDA               	movwf	fsr2h,c
 22221  001B24  0102               	movlb	2	; () banked
 22222  001B26  A2DF               	btfss	indf2,1,c
 22223  001B28  D00B               	goto	l2052
 22224                           
 22225                           ; BSR set to: 2
 22226                           ;lorawan.c: 1871: {
 22227                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 22228  001B2A  0100               	movlb	0	; () banked
 22229  001B2C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22230  001B2E  0D01               	mullw	1
 22231  001B30  50F3               	movf	prodl,w,c
 22232  001B32  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22233  001B34  6ED9               	movwf	fsr2l,c
 22234  001B36  50F4               	movf	prodh,w,c
 22235  001B38  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22236  001B3A  6EDA               	movwf	fsr2h,c
 22237  001B3C  0E00               	movlw	0
 22238  001B3E  82DB               	bsf	plusw2,1,c
 22239  001B40                     l2052:
 22240                           
 22241                           ;lorawan.c: 1873: }
 22242                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 22243  001B40  0100               	movlb	0	; () banked
 22244  001B42  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22245  001B44  0D02               	mullw	2
 22246  001B46  0E00               	movlw	low _loRa
 22247  001B48  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22248  001B4A  0E02               	movlw	high _loRa
 22249  001B4C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22250  001B4E  0EA8               	movlw	168
 22251  001B50  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22252  001B52  0E00               	movlw	0
 22253  001B54  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22254  001B56  50F3               	movf	prodl,w,c
 22255  001B58  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22256  001B5A  50F4               	movf	prodh,w,c
 22257  001B5C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22258  001B5E  0E01               	movlw	1
 22259  001B60  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 22260  001B62  6ED9               	movwf	fsr2l,c
 22261  001B64  0E00               	movlw	0
 22262  001B66  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22263  001B68  6EDA               	movwf	fsr2h,c
 22264  001B6A  0102               	movlb	2	; () banked
 22265  001B6C  A4DF               	btfss	indf2,2,c
 22266  001B6E  D089               	goto	l2058
 22267                           
 22268                           ; BSR set to: 2
 22269                           ;lorawan.c: 1876: {
 22270                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 22271  001B70  0100               	movlb	0	; () banked
 22272  001B72  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22273  001B74  0D01               	mullw	1
 22274  001B76  50F3               	movf	prodl,w,c
 22275  001B78  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22276  001B7A  6ED9               	movwf	fsr2l,c
 22277  001B7C  50F4               	movf	prodh,w,c
 22278  001B7E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22279  001B80  6EDA               	movwf	fsr2h,c
 22280  001B82  0E00               	movlw	0
 22281  001B84  84DB               	bsf	plusw2,2,c
 22282                           
 22283                           ; BSR set to: 0
 22284  001B86  D07D               	goto	l2058
 22285  001B88                     
 22286                           ; BSR set to: 0
 22287                           ;lorawan.c: 1884: {
 22288                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 22289                           
 22290                           ; BSR set to: 0
 22291  001B88  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22292  001B8A  0D01               	mullw	1
 22293  001B8C  50F3               	movf	prodl,w,c
 22294  001B8E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22295  001B90  6ED9               	movwf	fsr2l,c
 22296  001B92  50F4               	movf	prodh,w,c
 22297  001B94  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22298  001B96  6EDA               	movwf	fsr2h,c
 22299  001B98  0E05               	movlw	5
 22300  001B9A  6EDF               	movwf	indf2,c
 22301                           
 22302                           ; BSR set to: 0
 22303  001B9C  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 22304                           
 22305                           ; BSR set to: 0
 22306                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 22307  001B9E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22308  001BA0  0D01               	mullw	1
 22309  001BA2  50F3               	movf	prodl,w,c
 22310  001BA4  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22311  001BA6  6ED9               	movwf	fsr2l,c
 22312  001BA8  50F4               	movf	prodh,w,c
 22313  001BAA  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22314  001BAC  6EDA               	movwf	fsr2h,c
 22315  001BAE  0E00               	movlw	0
 22316  001BB0  6EDF               	movwf	indf2,c
 22317                           
 22318                           ; BSR set to: 0
 22319                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 22320  001BB2  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22321  001BB4  0D02               	mullw	2
 22322  001BB6  0E00               	movlw	low _loRa
 22323  001BB8  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22324  001BBA  0E02               	movlw	high _loRa
 22325  001BBC  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22326  001BBE  0EA8               	movlw	168
 22327  001BC0  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22328  001BC2  0E00               	movlw	0
 22329  001BC4  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22330  001BC6  50F3               	movf	prodl,w,c
 22331  001BC8  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22332  001BCA  50F4               	movf	prodh,w,c
 22333  001BCC  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22334  001BCE  0E01               	movlw	1
 22335  001BD0  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 22336  001BD2  6ED9               	movwf	fsr2l,c
 22337  001BD4  0E00               	movlw	0
 22338  001BD6  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22339  001BD8  6EDA               	movwf	fsr2h,c
 22340  001BDA  0102               	movlb	2	; () banked
 22341  001BDC  A6DF               	btfss	indf2,3,c
 22342  001BDE  D00B               	goto	l2056
 22343                           
 22344                           ; BSR set to: 2
 22345                           ;lorawan.c: 1888: {
 22346                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 22347  001BE0  0100               	movlb	0	; () banked
 22348  001BE2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22349  001BE4  0D01               	mullw	1
 22350  001BE6  50F3               	movf	prodl,w,c
 22351  001BE8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22352  001BEA  6ED9               	movwf	fsr2l,c
 22353  001BEC  50F4               	movf	prodh,w,c
 22354  001BEE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22355  001BF0  6EDA               	movwf	fsr2h,c
 22356  001BF2  0E00               	movlw	0
 22357  001BF4  80DB               	bsf	plusw2,0,c
 22358  001BF6                     l2056:
 22359                           
 22360                           ;lorawan.c: 1890: }
 22361                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 22362  001BF6  0100               	movlb	0	; () banked
 22363  001BF8  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22364  001BFA  0D02               	mullw	2
 22365  001BFC  0E00               	movlw	low _loRa
 22366  001BFE  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22367  001C00  0E02               	movlw	high _loRa
 22368  001C02  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22369  001C04  0EA8               	movlw	168
 22370  001C06  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22371  001C08  0E00               	movlw	0
 22372  001C0A  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22373  001C0C  50F3               	movf	prodl,w,c
 22374  001C0E  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22375  001C10  50F4               	movf	prodh,w,c
 22376  001C12  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22377  001C14  0E01               	movlw	1
 22378  001C16  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 22379  001C18  6ED9               	movwf	fsr2l,c
 22380  001C1A  0E00               	movlw	0
 22381  001C1C  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22382  001C1E  6EDA               	movwf	fsr2h,c
 22383  001C20  0102               	movlb	2	; () banked
 22384  001C22  A8DF               	btfss	indf2,4,c
 22385  001C24  D00B               	goto	l2057
 22386                           
 22387                           ; BSR set to: 2
 22388                           ;lorawan.c: 1893: {
 22389                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 22390  001C26  0100               	movlb	0	; () banked
 22391  001C28  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22392  001C2A  0D01               	mullw	1
 22393  001C2C  50F3               	movf	prodl,w,c
 22394  001C2E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22395  001C30  6ED9               	movwf	fsr2l,c
 22396  001C32  50F4               	movf	prodh,w,c
 22397  001C34  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22398  001C36  6EDA               	movwf	fsr2h,c
 22399  001C38  0E00               	movlw	0
 22400  001C3A  82DB               	bsf	plusw2,1,c
 22401  001C3C                     l2057:
 22402                           
 22403                           ;lorawan.c: 1895: }
 22404                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 22405  001C3C  0100               	movlb	0	; () banked
 22406  001C3E  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22407  001C40  0D02               	mullw	2
 22408  001C42  0E00               	movlw	low _loRa
 22409  001C44  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22410  001C46  0E02               	movlw	high _loRa
 22411  001C48  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22412  001C4A  0EA8               	movlw	168
 22413  001C4C  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22414  001C4E  0E00               	movlw	0
 22415  001C50  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22416  001C52  50F3               	movf	prodl,w,c
 22417  001C54  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22418  001C56  50F4               	movf	prodh,w,c
 22419  001C58  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22420  001C5A  0E01               	movlw	1
 22421  001C5C  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 22422  001C5E  6ED9               	movwf	fsr2l,c
 22423  001C60  0E00               	movlw	0
 22424  001C62  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22425  001C64  6EDA               	movwf	fsr2h,c
 22426  001C66  0102               	movlb	2	; () banked
 22427  001C68  AADF               	btfss	indf2,5,c
 22428  001C6A  D00B               	goto	l2058
 22429                           
 22430                           ; BSR set to: 2
 22431                           ;lorawan.c: 1898: {
 22432                           ;lorawan.c: 1899: macBuffer[bufferIndex] |= 0x04;
 22433  001C6C  0100               	movlb	0	; () banked
 22434  001C6E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22435  001C70  0D01               	mullw	1
 22436  001C72  50F3               	movf	prodl,w,c
 22437  001C74  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22438  001C76  6ED9               	movwf	fsr2l,c
 22439  001C78  50F4               	movf	prodh,w,c
 22440  001C7A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22441  001C7C  6EDA               	movwf	fsr2h,c
 22442  001C7E  0E00               	movlw	0
 22443  001C80  84DB               	bsf	plusw2,2,c
 22444  001C82                     l2058:
 22445                           
 22446                           ;lorawan.c: 1900: }
 22447                           ;lorawan.c: 1902: bufferIndex ++;
 22448                           
 22449                           ; BSR set to: 0
 22450  001C82  0100               	movlb	0	; () banked
 22451  001C84  D03C               	goto	L12
 22452  001C86                     
 22453                           ; BSR set to: 0
 22454                           ;lorawan.c: 1907: {
 22455                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 22456                           
 22457                           ; BSR set to: 0
 22458  001C86  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22459  001C88  0D01               	mullw	1
 22460  001C8A  50F3               	movf	prodl,w,c
 22461  001C8C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22462  001C8E  6ED9               	movwf	fsr2l,c
 22463  001C90  50F4               	movf	prodh,w,c
 22464  001C92  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22465  001C94  6EDA               	movwf	fsr2h,c
 22466  001C96  0E06               	movlw	6
 22467  001C98  6EDF               	movwf	indf2,c
 22468                           
 22469                           ; BSR set to: 0
 22470  001C9A  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 22474  001C9C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22475  001C9E  0D01               	mullw	1
 22476  001CA0  50F3               	movf	prodl,w,c
 22477  001CA2  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22478  001CA4  6ED9               	movwf	fsr2l,c
 22479  001CA6  50F4               	movf	prodh,w,c
 22480  001CA8  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22481  001CAA  6EDA               	movwf	fsr2h,c
 22482  001CAC  C2E0  FFDF         	movff	_loRa+224,indf2
 22483  001CB0  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 22484                           
 22485                           ; BSR set to: 0
 22486                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 22487  001CB2  EC64  F049         	call	_RADIO_GetPacketSnr	;wreg free
 22488  001CB6  0A80               	xorlw	128
 22489  001CB8  0FA0               	addlw	160
 22490  001CBA  A0D8               	btfss	status,0,c
 22491  001CBC  D006               	goto	u17030
 22492  001CBE  EC64  F049         	call	_RADIO_GetPacketSnr	;wreg free
 22493  001CC2  0A80               	xorlw	128
 22494  001CC4  0F60               	addlw	-160
 22495  001CC6  A0D8               	btfss	status,0,c
 22496  001CC8  D00C               	goto	l2060
 22497  001CCA                     u17030:
 22498                           
 22499                           ;lorawan.c: 1911: {
 22500                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 22501  001CCA  0100               	movlb	0	; () banked
 22502  001CCC  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22503  001CCE  0D01               	mullw	1
 22504  001CD0  50F3               	movf	prodl,w,c
 22505  001CD2  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22506  001CD4  6ED9               	movwf	fsr2l,c
 22507  001CD6  50F4               	movf	prodh,w,c
 22508  001CD8  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22509  001CDA  6EDA               	movwf	fsr2h,c
 22510  001CDC  0E20               	movlw	32
 22511  001CDE  6EDF               	movwf	indf2,c
 22512  001CE0  D00E               	goto	L12
 22513  001CE2                     l2060:
 22514                           
 22515                           ;lorawan.c: 1914: else
 22516                           ;lorawan.c: 1915: {
 22517                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 22518                           
 22519                           ; BSR set to: 0
 22520  001CE2  0100               	movlb	0	; () banked
 22521  001CE4  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22522  001CE6  0D01               	mullw	1
 22523  001CE8  50F3               	movf	prodl,w,c
 22524  001CEA  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22525  001CEC  6ED9               	movwf	fsr2l,c
 22526  001CEE  50F4               	movf	prodh,w,c
 22527  001CF0  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22528  001CF2  6EDA               	movwf	fsr2h,c
 22529  001CF4  EC64  F049         	call	_RADIO_GetPacketSnr	;wreg free
 22530  001CF8  0B3F               	andlw	63
 22531  001CFA  6EDF               	movwf	indf2,c
 22532  001CFC  D7C2               	goto	l2058
 22533  001CFE                     L12:
 22534  001CFE  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 22535                           
 22536                           ; BSR set to: 0
 22537                           ;lorawan.c: 1917: }
 22538                           ;lorawan.c: 1918: }
 22539                           ;lorawan.c: 1919: break;
 22540  001D00  D091               	goto	l2054
 22541  001D02                     
 22542                           ; BSR set to: 0
 22543                           ;lorawan.c: 1922: {
 22544                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 22545                           
 22546                           ; BSR set to: 0
 22547  001D02  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22548  001D04  0D01               	mullw	1
 22549  001D06  50F3               	movf	prodl,w,c
 22550  001D08  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22551  001D0A  6ED9               	movwf	fsr2l,c
 22552  001D0C  50F4               	movf	prodh,w,c
 22553  001D0E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22554  001D10  6EDA               	movwf	fsr2h,c
 22555  001D12  0E07               	movlw	7
 22556  001D14  6EDF               	movwf	indf2,c
 22557                           
 22558                           ; BSR set to: 0
 22559  001D16  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 22560                           
 22561                           ; BSR set to: 0
 22562                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 22563  001D18  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22564  001D1A  0D01               	mullw	1
 22565  001D1C  50F3               	movf	prodl,w,c
 22566  001D1E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22567  001D20  6ED9               	movwf	fsr2l,c
 22568  001D22  50F4               	movf	prodh,w,c
 22569  001D24  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22570  001D26  6EDA               	movwf	fsr2h,c
 22571  001D28  0E00               	movlw	0
 22572  001D2A  6EDF               	movwf	indf2,c
 22573                           
 22574                           ; BSR set to: 0
 22575                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 22576  001D2C  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22577  001D2E  0D02               	mullw	2
 22578  001D30  0E00               	movlw	low _loRa
 22579  001D32  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22580  001D34  0E02               	movlw	high _loRa
 22581  001D36  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22582  001D38  0EA8               	movlw	168
 22583  001D3A  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22584  001D3C  0E00               	movlw	0
 22585  001D3E  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22586  001D40  50F3               	movf	prodl,w,c
 22587  001D42  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22588  001D44  50F4               	movf	prodh,w,c
 22589  001D46  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22590  001D48  0E01               	movlw	1
 22591  001D4A  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 22592  001D4C  6ED9               	movwf	fsr2l,c
 22593  001D4E  0E00               	movlw	0
 22594  001D50  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22595  001D52  6EDA               	movwf	fsr2h,c
 22596  001D54  0102               	movlb	2	; () banked
 22597  001D56  AEDF               	btfss	indf2,7,c
 22598  001D58  D00B               	goto	l2065
 22599                           
 22600                           ; BSR set to: 2
 22601                           ;lorawan.c: 1926: {
 22602                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 22603  001D5A  0100               	movlb	0	; () banked
 22604  001D5C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22605  001D5E  0D01               	mullw	1
 22606  001D60  50F3               	movf	prodl,w,c
 22607  001D62  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22608  001D64  6ED9               	movwf	fsr2l,c
 22609  001D66  50F4               	movf	prodh,w,c
 22610  001D68  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22611  001D6A  6EDA               	movwf	fsr2h,c
 22612  001D6C  0E00               	movlw	0
 22613  001D6E  80DB               	bsf	plusw2,0,c
 22614  001D70                     l2065:
 22615                           
 22616                           ;lorawan.c: 1928: }
 22617                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 22618  001D70  0100               	movlb	0	; () banked
 22619  001D72  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22620  001D74  0D02               	mullw	2
 22621  001D76  0E00               	movlw	low _loRa
 22622  001D78  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22623  001D7A  0E02               	movlw	high _loRa
 22624  001D7C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22625  001D7E  0EA8               	movlw	168
 22626  001D80  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22627  001D82  0E00               	movlw	0
 22628  001D84  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22629  001D86  50F3               	movf	prodl,w,c
 22630  001D88  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22631  001D8A  50F4               	movf	prodh,w,c
 22632  001D8C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22633  001D8E  0E01               	movlw	1
 22634  001D90  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 22635  001D92  6ED9               	movwf	fsr2l,c
 22636  001D94  0E00               	movlw	0
 22637  001D96  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22638  001D98  6EDA               	movwf	fsr2h,c
 22639  001D9A  0102               	movlb	2	; () banked
 22640  001D9C  ACDF               	btfss	indf2,6,c
 22641  001D9E  D771               	goto	l2058
 22642                           
 22643                           ; BSR set to: 2
 22644                           ;lorawan.c: 1931: {
 22645                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 22646  001DA0  0100               	movlb	0	; () banked
 22647  001DA2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22648  001DA4  0D01               	mullw	1
 22649  001DA6  50F3               	movf	prodl,w,c
 22650  001DA8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22651  001DAA  6ED9               	movwf	fsr2l,c
 22652  001DAC  50F4               	movf	prodh,w,c
 22653  001DAE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22654  001DB0  6EDA               	movwf	fsr2h,c
 22655  001DB2  0E00               	movlw	0
 22656  001DB4  82DB               	bsf	plusw2,1,c
 22657                           
 22658                           ; BSR set to: 0
 22659  001DB6  D765               	goto	l2058
 22660  001DB8                     l2067:
 22661                           
 22662                           ; BSR set to: 0
 22663                           ;lorawan.c: 1939: {
 22664                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 22665  001DB8  0102               	movlb	2	; () banked
 22666  001DBA  69DD               	setf	(_loRa+221)& (0+255),b
 22667                           
 22668                           ; BSR set to: 2
 22669                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 22670  001DBC  0E00               	movlw	0
 22671  001DBE  6FDE               	movwf	(_loRa+222)& (0+255),b
 22672                           
 22673                           ; BSR set to: 2
 22674                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 22675  001DC0  0100               	movlb	0	; () banked
 22676  001DC2                     
 22677                           ; BSR set to: 0
 22678                           ;lorawan.c: 1947: case DUTY_CYCLE_CID:
 22679                           ;lorawan.c: 1948: {
 22680                           ;lorawan.c: 1949: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 22681                           
 22682                           ; BSR set to: 0
 22683                           
 22684                           ; BSR set to: 0
 22685  001DC2  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22686  001DC4  0D02               	mullw	2
 22687  001DC6  0EA8               	movlw	low (_loRa+168)
 22688  001DC8  24F3               	addwf	prodl,w,c
 22689  001DCA  6ED9               	movwf	fsr2l,c
 22690  001DCC  0E02               	movlw	high (_loRa+168)
 22691  001DCE  20F4               	addwfc	prodh,w,c
 22692  001DD0  6EDA               	movwf	fsr2h,c
 22693  001DD2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22694  001DD4  0D01               	mullw	1
 22695  001DD6  50F3               	movf	prodl,w,c
 22696  001DD8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22697  001DDA  6EE9               	movwf	fsr0l,c
 22698  001DDC  50F4               	movf	prodh,w,c
 22699  001DDE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22700  001DE0  6EEA               	movwf	fsr0h,c
 22701  001DE2  CFDF FFEF          	movff	indf2,indf0
 22702  001DE6  D78B               	goto	L12
 22703  001DE8                     l2049:
 22704                           
 22705                           ; BSR set to: 0
 22706                           
 22707                           ; BSR set to: 0
 22708  001DE8  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22709  001DEA  0D02               	mullw	2
 22710  001DEC  0EA8               	movlw	low (_loRa+168)
 22711  001DEE  24F3               	addwf	prodl,w,c
 22712  001DF0  6ED9               	movwf	fsr2l,c
 22713  001DF2  0E02               	movlw	high (_loRa+168)
 22714  001DF4  20F4               	addwfc	prodh,w,c
 22715  001DF6  6EDA               	movwf	fsr2h,c
 22716  001DF8  50DF               	movf	indf2,w,c
 22717                           
 22718                           ; Switch size 1, requested type "space"
 22719                           ; Number of cases is 7, Range of values is 2 to 8
 22720                           ; switch strategies available:
 22721                           ; Name         Instructions Cycles
 22722                           ; simple_byte           22    12 (average)
 22723                           ;	Chosen strategy is simple_byte
 22724  001DFA  0A02               	xorlw	2	; case 2
 22725  001DFC  B4D8               	btfsc	status,2,c
 22726  001DFE  D7DC               	goto	l2067
 22727  001E00  0A01               	xorlw	1	; case 3
 22728  001E02  B4D8               	btfsc	status,2,c
 22729  001E04  D643               	goto	l2050
 22730  001E06  0A07               	xorlw	7	; case 4
 22731  001E08  B4D8               	btfsc	status,2,c
 22732  001E0A  D7DB               	goto	l2068
 22733  001E0C  0A01               	xorlw	1	; case 5
 22734  001E0E  B4D8               	btfsc	status,2,c
 22735  001E10  D6BB               	goto	l2055
 22736  001E12  0A03               	xorlw	3	; case 6
 22737  001E14  B4D8               	btfsc	status,2,c
 22738  001E16  D737               	goto	l2059
 22739  001E18  0A01               	xorlw	1	; case 7
 22740  001E1A  B4D8               	btfsc	status,2,c
 22741  001E1C  D772               	goto	l2064
 22742  001E1E  0A0F               	xorlw	15	; case 8
 22743  001E20  B4D8               	btfsc	status,2,c
 22744  001E22  D7CF               	goto	l2068
 22745  001E24                     l2054:
 22746                           
 22747                           ; BSR set to: 0
 22748                           
 22749                           ; BSR set to: 0
 22750  001E24  2B6D               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 22751  001E26                     l2044:
 22752                           
 22753                           ; BSR set to: 0
 22754                           
 22755                           ; BSR set to: 0
 22756  001E26  0102               	movlb	2	; () banked
 22757  001E28  51A7               	movf	(_loRa+167)& (0+255),w,b
 22758  001E2A  0100               	movlb	0	; () banked
 22759  001E2C  5D6D               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 22760  001E2E  A0D8               	btfss	status,0,c
 22761  001E30  D5E2               	goto	l2045
 22762  001E32                     u17060:
 22763                           
 22764                           ; BSR set to: 0
 22765                           ;lorawan.c: 1957: }
 22766                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 22767                           
 22768                           ; BSR set to: 0
 22769  001E32  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 22770  001E36  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 22771  001E3A  C06E  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 22772                           
 22773                           ; BSR set to: 0
 22774  001E3E  0012               	return		;funcret
 22775  001E40                     __end_of_IncludeMacCommandsResponse:
 22776                           	opt stack 0
 22777                           tosu	equ	0xFFF
 22778                           tosh	equ	0xFFE
 22779                           tosl	equ	0xFFD
 22780                           pclath	equ	0xFFA
 22781                           tblptru	equ	0xFF8
 22782                           tblptrh	equ	0xFF7
 22783                           tblptrl	equ	0xFF6
 22784                           tablat	equ	0xFF5
 22785                           prodh	equ	0xFF4
 22786                           prodl	equ	0xFF3
 22787                           intcon	equ	0xFF2
 22788                           intcon2	equ	0xFF1
 22789                           intcon3	equ	0xFF0
 22790                           indf0	equ	0xFEF
 22791                           postinc0	equ	0xFEE
 22792                           fsr0h	equ	0xFEA
 22793                           fsr0l	equ	0xFE9
 22794                           wreg	equ	0xFE8
 22795                           postinc1	equ	0xFE6
 22796                           postdec1	equ	0xFE5
 22797                           plusw1	equ	0xFE3
 22798                           fsr1h	equ	0xFE2
 22799                           fsr1l	equ	0xFE1
 22800                           indf2	equ	0xFDF
 22801                           postinc2	equ	0xFDE
 22802                           postdec2	equ	0xFDD
 22803                           plusw2	equ	0xFDB
 22804                           fsr2h	equ	0xFDA
 22805                           fsr2l	equ	0xFD9
 22806                           status	equ	0xFD8
 22807                           
 22808 ;; *************** function _RADIO_GetPacketSnr *****************
 22809 ;; Defined at:
 22810 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22811 ;; Parameters:    Size  Location     Type
 22812 ;;		None
 22813 ;; Auto vars:     Size  Location     Type
 22814 ;;		None
 22815 ;; Return value:  Size  Location     Type
 22816 ;;                  1    wreg      char 
 22817 ;; Registers used:
 22818 ;;		wreg, status,2
 22819 ;; Tracked objects:
 22820 ;;		On entry : 0/0
 22821 ;;		On exit  : 0/0
 22822 ;;		Unchanged: 0/0
 22823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22828 ;;Total ram usage:        0 bytes
 22829 ;; Hardware stack levels used:    1
 22830 ;; Hardware stack levels required when called:    7
 22831 ;; This function calls:
 22832 ;;		Nothing
 22833 ;; This function is called by:
 22834 ;;		_IncludeMacCommandsResponse
 22835 ;; This function uses a non-reentrant model
 22836 ;;
 22837                           
 22838                           	psect	text110
 22839  0092C8                     __ptext110:
 22840                           	opt stack 0
 22841  0092C8                     _RADIO_GetPacketSnr:
 22842                           	opt stack 20
 22843                           
 22844                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 22845                           
 22846                           ; BSR set to: 0
 22847                           ;incstack = 0
 22848  0092C8  0101               	movlb	1	; () banked
 22849  0092CA  5153               	movf	(_RadioConfiguration+50)& (0+255),w,b
 22850  0092CC  0012               	return	
 22851  0092CE                     __end_of_RADIO_GetPacketSnr:
 22852                           	opt stack 0
 22853                           tosu	equ	0xFFF
 22854                           tosh	equ	0xFFE
 22855                           tosl	equ	0xFFD
 22856                           pclath	equ	0xFFA
 22857                           tblptru	equ	0xFF8
 22858                           tblptrh	equ	0xFF7
 22859                           tblptrl	equ	0xFF6
 22860                           tablat	equ	0xFF5
 22861                           prodh	equ	0xFF4
 22862                           prodl	equ	0xFF3
 22863                           intcon	equ	0xFF2
 22864                           intcon2	equ	0xFF1
 22865                           intcon3	equ	0xFF0
 22866                           indf0	equ	0xFEF
 22867                           postinc0	equ	0xFEE
 22868                           fsr0h	equ	0xFEA
 22869                           fsr0l	equ	0xFE9
 22870                           wreg	equ	0xFE8
 22871                           postinc1	equ	0xFE6
 22872                           postdec1	equ	0xFE5
 22873                           plusw1	equ	0xFE3
 22874                           fsr1h	equ	0xFE2
 22875                           fsr1l	equ	0xFE1
 22876                           indf2	equ	0xFDF
 22877                           postinc2	equ	0xFDE
 22878                           postdec2	equ	0xFDD
 22879                           plusw2	equ	0xFDB
 22880                           fsr2h	equ	0xFDA
 22881                           fsr2l	equ	0xFD9
 22882                           status	equ	0xFD8
 22883                           
 22884 ;; *************** function _FindSmallestDataRate *****************
 22885 ;; Defined at:
 22886 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22887 ;; Parameters:    Size  Location     Type
 22888 ;;		None
 22889 ;; Auto vars:     Size  Location     Type
 22890 ;;  dataRate        1    3[BANK0 ] unsigned char 
 22891 ;;  i               1    2[BANK0 ] unsigned char 
 22892 ;;  found           1    1[BANK0 ] unsigned char 
 22893 ;; Return value:  Size  Location     Type
 22894 ;;                  1    wreg      unsigned char 
 22895 ;; Registers used:
 22896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22897 ;; Tracked objects:
 22898 ;;		On entry : 0/0
 22899 ;;		On exit  : 0/0
 22900 ;;		Unchanged: 0/0
 22901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22903 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22904 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22905 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22906 ;;Total ram usage:        4 bytes
 22907 ;; Hardware stack levels used:    1
 22908 ;; Hardware stack levels required when called:    7
 22909 ;; This function calls:
 22910 ;;		Nothing
 22911 ;; This function is called by:
 22912 ;;		_AckRetransmissionCallback
 22913 ;;		_AssemblePacket
 22914 ;; This function uses a non-reentrant model
 22915 ;;
 22916                           
 22917                           	psect	text111
 22918  0068D4                     __ptext111:
 22919                           	opt stack 0
 22920  0068D4                     _FindSmallestDataRate:
 22921                           	opt stack 21
 22922                           
 22923                           ;lorawan.c: 1965: uint8_t i = 0, dataRate;
 22924                           
 22925                           ; BSR set to: 1
 22926                           ;incstack = 0
 22927  0068D4  0E00               	movlw	0
 22928  0068D6  0100               	movlb	0	; () banked
 22929  0068D8  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 22930                           
 22931                           ;lorawan.c: 1966: bool found = 0;
 22932  0068DA  0E00               	movlw	0
 22933  0068DC  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 22934                           
 22935                           ; BSR set to: 0
 22936                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 22937  0068DE  0102               	movlb	2	; () banked
 22938  0068E0  51DF               	movf	(_loRa+223)& (0+255),w,b
 22939  0068E2  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 22940  0068E4  B0D8               	btfsc	status,0,c
 22941  0068E6  D062               	goto	l2085
 22942                           
 22943                           ; BSR set to: 2
 22944                           ;lorawan.c: 1969: {
 22945                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 22946  0068E8  05DF               	decf	(_loRa+223)& (0+255),w,b
 22947  0068EA  0100               	movlb	0	; () banked
 22948  0068EC  D050               	goto	L13
 22949  0068EE                     
 22950                           ; BSR set to: 0
 22951                           ;lorawan.c: 1973: {
 22952                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 22953                           
 22954                           ; BSR set to: 0
 22955  0068EE  0E00               	movlw	0
 22956  0068F0  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 22957  0068F2  D03D               	goto	l2077
 22958  0068F4                     
 22959                           ; BSR set to: 0
 22960                           ;lorawan.c: 1975: {
 22961                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 22962                           
 22963                           ; BSR set to: 0
 22964  0068F4  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 22965  0068F6  0D0E               	mullw	14
 22966  0068F8  0E05               	movlw	5
 22967  0068FA  26F3               	addwf	prodl,f,c
 22968  0068FC  0E00               	movlw	0
 22969  0068FE  22F4               	addwfc	prodh,f,c
 22970  006900  0E00               	movlw	low _Channels
 22971  006902  24F3               	addwf	prodl,w,c
 22972  006904  6ED9               	movwf	fsr2l,c
 22973  006906  0E04               	movlw	high _Channels
 22974  006908  20F4               	addwfc	prodh,w,c
 22975  00690A  6EDA               	movwf	fsr2h,c
 22976  00690C  0104               	movlb	4	; () banked
 22977  00690E  50DF               	movf	223,w,c
 22978  006910  0B0F               	andlw	15
 22979  006912  0100               	movlb	0	; () banked
 22980  006914  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 22981  006916  5160               	movf	??_FindSmallestDataRate& (0+255),w,b
 22982  006918  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 22983  00691A  A0D8               	btfss	status,0,c
 22984  00691C  D027               	goto	l2079
 22985                           
 22986                           ; BSR set to: 0
 22987  00691E  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 22988  006920  0D0E               	mullw	14
 22989  006922  0E05               	movlw	5
 22990  006924  26F3               	addwf	prodl,f,c
 22991  006926  0E00               	movlw	0
 22992  006928  22F4               	addwfc	prodh,f,c
 22993  00692A  0E00               	movlw	low _Channels
 22994  00692C  24F3               	addwf	prodl,w,c
 22995  00692E  6ED9               	movwf	fsr2l,c
 22996  006930  0E04               	movlw	high _Channels
 22997  006932  20F4               	addwfc	prodh,w,c
 22998  006934  6EDA               	movwf	fsr2h,c
 22999  006936  0104               	movlb	4	; () banked
 23000  006938  38DF               	swapf	223,w,c
 23001  00693A  0B0F               	andlw	15
 23002  00693C  0100               	movlb	0	; () banked
 23003  00693E  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 23004  006940  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 23005  006942  5D60               	subwf	??_FindSmallestDataRate& (0+255),w,b
 23006  006944  A0D8               	btfss	status,0,c
 23007  006946  D012               	goto	l2079
 23008                           
 23009                           ; BSR set to: 0
 23010  006948  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 23011  00694A  0D0E               	mullw	14
 23012  00694C  0E04               	movlw	4
 23013  00694E  26F3               	addwf	prodl,f,c
 23014  006950  0E00               	movlw	0
 23015  006952  22F4               	addwfc	prodh,f,c
 23016  006954  0E00               	movlw	low _Channels
 23017  006956  24F3               	addwf	prodl,w,c
 23018  006958  6ED9               	movwf	fsr2l,c
 23019  00695A  0E04               	movlw	high _Channels
 23020  00695C  20F4               	addwfc	prodh,w,c
 23021  00695E  6EDA               	movwf	fsr2h,c
 23022  006960  04DE               	decf	postinc2,w,c
 23023  006962  A4D8               	btfss	status,2,c
 23024  006964  D003               	goto	l2079
 23025                           
 23026                           ; BSR set to: 0
 23027                           ;lorawan.c: 1977: {
 23028                           ;lorawan.c: 1978: found = 1;
 23029  006966  0E01               	movlw	1
 23030  006968  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 23031                           
 23032                           ;lorawan.c: 1979: break;
 23033  00696A  D007               	goto	u16780
 23034  00696C                     l2079:
 23035                           
 23036                           ; BSR set to: 0
 23037                           
 23038                           ; BSR set to: 0
 23039  00696C  2B62               	incf	FindSmallestDataRate@i& (0+255),f,b
 23040  00696E                     l2077:
 23041                           
 23042                           ; BSR set to: 0
 23043                           
 23044                           ; BSR set to: 0
 23045  00696E  0102               	movlb	2	; () banked
 23046  006970  51ED               	movf	(_loRa+237)& (0+255),w,b
 23047  006972  0100               	movlb	0	; () banked
 23048  006974  5D62               	subwf	FindSmallestDataRate@i& (0+255),w,b
 23049  006976  A0D8               	btfss	status,0,c
 23050  006978  D7BD               	goto	l2078
 23051  00697A                     u16780:
 23052                           
 23053                           ; BSR set to: 0
 23054                           ;lorawan.c: 1980: }
 23055                           ;lorawan.c: 1981: }
 23056                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 23057                           
 23058                           ; BSR set to: 0
 23059  00697A  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 23060  00697C  A4D8               	btfss	status,2,c
 23061  00697E  D008               	goto	l2081
 23062                           
 23063                           ; BSR set to: 0
 23064  006980  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 23065  006982  0102               	movlb	2	; () banked
 23066  006984  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 23067  006986  B0D8               	btfsc	status,0,c
 23068  006988  D003               	goto	l2081
 23069                           
 23070                           ; BSR set to: 2
 23071                           ;lorawan.c: 1983: {
 23072                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 23073  00698A  0100               	movlb	0	; () banked
 23074  00698C  0563               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 23075  00698E                     L13:
 23076  00698E  6F63               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 23077  006990                     l2081:
 23078                           
 23079                           ; BSR set to: 0
 23080                           
 23081                           ; BSR set to: 0
 23082  006990  0100               	movlb	0	; () banked
 23083  006992  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 23084  006994  A4D8               	btfss	status,2,c
 23085  006996  D006               	goto	u16820
 23086                           
 23087                           ; BSR set to: 0
 23088  006998  0102               	movlb	2	; () banked
 23089  00699A  51EB               	movf	(_loRa+235)& (0+255),w,b
 23090  00699C  0100               	movlb	0	; () banked
 23091  00699E  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 23092  0069A0  B0D8               	btfsc	status,0,c
 23093  0069A2  D7A5               	goto	l2076
 23094  0069A4                     u16820:
 23095                           
 23096                           ; BSR set to: 0
 23097                           ;lorawan.c: 1985: }
 23098                           ;lorawan.c: 1986: }
 23099                           ;lorawan.c: 1988: if (found == 1)
 23100                           
 23101                           ; BSR set to: 0
 23102                           
 23103                           ; BSR set to: 0
 23104  0069A4  0561               	decf	FindSmallestDataRate@found& (0+255),w,b
 23105  0069A6  B4D8               	btfsc	status,2,c
 23106                           
 23107                           ; BSR set to: 0
 23108                           ;lorawan.c: 1989: {
 23109                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 23110  0069A8  C063  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 23111  0069AC                     l2085:
 23112                           
 23113                           ;lorawan.c: 1991: }
 23114                           ;lorawan.c: 1992: }
 23115                           ;lorawan.c: 1994: return found;
 23116                           
 23117                           ; BSR set to: 0
 23118                           
 23119                           ; BSR set to: 0
 23120  0069AC  0100               	movlb	0	; () banked
 23121  0069AE  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 23122  0069B0  0012               	return	
 23123  0069B2                     __end_of_FindSmallestDataRate:
 23124                           	opt stack 0
 23125                           tosu	equ	0xFFF
 23126                           tosh	equ	0xFFE
 23127                           tosl	equ	0xFFD
 23128                           pclath	equ	0xFFA
 23129                           tblptru	equ	0xFF8
 23130                           tblptrh	equ	0xFF7
 23131                           tblptrl	equ	0xFF6
 23132                           tablat	equ	0xFF5
 23133                           prodh	equ	0xFF4
 23134                           prodl	equ	0xFF3
 23135                           intcon	equ	0xFF2
 23136                           intcon2	equ	0xFF1
 23137                           intcon3	equ	0xFF0
 23138                           indf0	equ	0xFEF
 23139                           postinc0	equ	0xFEE
 23140                           fsr0h	equ	0xFEA
 23141                           fsr0l	equ	0xFE9
 23142                           wreg	equ	0xFE8
 23143                           postinc1	equ	0xFE6
 23144                           postdec1	equ	0xFE5
 23145                           plusw1	equ	0xFE3
 23146                           fsr1h	equ	0xFE2
 23147                           fsr1l	equ	0xFE1
 23148                           indf2	equ	0xFDF
 23149                           postinc2	equ	0xFDE
 23150                           postdec2	equ	0xFDD
 23151                           plusw2	equ	0xFDB
 23152                           fsr2h	equ	0xFDA
 23153                           fsr2l	equ	0xFD9
 23154                           status	equ	0xFD8
 23155                           
 23156 ;; *************** function _EncryptFRMPayload *****************
 23157 ;; Defined at:
 23158 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23159 ;; Parameters:    Size  Location     Type
 23160 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 23161 ;;		 -> data(8), adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 23162 ;;		 -> NULL(0), 
 23163 ;;  bufferLength    1   51[BANK0 ] unsigned char 
 23164 ;;  dir             1   52[BANK0 ] unsigned char 
 23165 ;;  frameCounter    4   53[BANK0 ] unsigned long 
 23166 ;;  key             2   57[BANK0 ] PTR unsigned char 
 23167 ;;		 -> loRa.activationParameters(105), loRa(245), 
 23168 ;;  macBufferInd    1   59[BANK0 ] unsigned char 
 23169 ;;  bufferToBeEn    2   60[BANK0 ] PTR unsigned char 
 23170 ;;		 -> macBuffer(271), radioBuffer(271), 
 23171 ;;  multicastSta    1   62[BANK0 ] unsigned char 
 23172 ;; Auto vars:     Size  Location     Type
 23173 ;;  j               1   70[BANK0 ] unsigned char 
 23174 ;;  i               1   69[BANK0 ] unsigned char 
 23175 ;;  k               1   68[BANK0 ] unsigned char 
 23176 ;; Return value:  Size  Location     Type
 23177 ;;                  1    wreg      void 
 23178 ;; Registers used:
 23179 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23180 ;; Tracked objects:
 23181 ;;		On entry : 0/0
 23182 ;;		On exit  : 0/0
 23183 ;;		Unchanged: 0/0
 23184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23185 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23186 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23187 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23188 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23189 ;;Total ram usage:       22 bytes
 23190 ;; Hardware stack levels used:    1
 23191 ;; Hardware stack levels required when called:   10
 23192 ;; This function calls:
 23193 ;;		_AESEncodeLoRa
 23194 ;;		_AssembleEncryptionBlock
 23195 ;;		___awdiv
 23196 ;; This function is called by:
 23197 ;;		_LORAWAN_RxDone
 23198 ;;		_AssemblePacket
 23199 ;; This function uses a non-reentrant model
 23200 ;;
 23201                           
 23202                           	psect	text112
 23203  004BCC                     __ptext112:
 23204                           	opt stack 0
 23205  004BCC                     _EncryptFRMPayload:
 23206                           	opt stack 18
 23207                           
 23208                           ;lorawan.c: 2207: uint8_t k = 0, i = 0, j = 0;
 23209                           
 23210                           ; BSR set to: 0
 23211                           ;incstack = 0
 23212  004BCC  0E00               	movlw	0
 23213  004BCE  0100               	movlb	0	; () banked
 23214  004BD0  6FA4               	movwf	EncryptFRMPayload@k& (0+255),b
 23215  004BD2  0E00               	movlw	0
 23216  004BD4  6FA5               	movwf	EncryptFRMPayload@i& (0+255),b
 23217  004BD6  0E00               	movlw	0
 23218  004BD8  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 23219                           
 23220                           ; BSR set to: 0
 23221                           ;lorawan.c: 2209: k = bufferLength / 16;
 23222  004BDA  C093  F060         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 23223  004BDE  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 23224  004BE0  0E00               	movlw	0
 23225  004BE2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 23226  004BE4  0E10               	movlw	16
 23227  004BE6  6F62               	movwf	___awdiv@divisor& (0+255),b
 23228  004BE8  EC3E  F03B         	call	___awdiv	;wreg free
 23229  004BEC  0100               	movlb	0	; () banked
 23230  004BEE  5160               	movf	?___awdiv& (0+255),w,b
 23231  004BF0  6FA4               	movwf	EncryptFRMPayload@k& (0+255),b
 23232                           
 23233                           ; BSR set to: 0
 23234                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 23235  004BF2  0E01               	movlw	1
 23236  004BF4  6FA5               	movwf	EncryptFRMPayload@i& (0+255),b
 23237  004BF6  D05A               	goto	l2150
 23238  004BF8                     
 23239                           ; BSR set to: 0
 23240                           ;lorawan.c: 2211: {
 23241                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 23242                           
 23243                           ; BSR set to: 0
 23244  004BF8  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 23245  004BFC  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 23246  004C00  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 23247  004C04  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 23248  004C08  C0A5  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 23249  004C0C  0E01               	movlw	1
 23250  004C0E  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 23251  004C10  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 23252  004C14  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 23253  004C16  EC1B  F032         	call	_AssembleEncryptionBlock
 23254                           
 23255                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 23256  004C1A  0E57               	movlw	low _aesBuffer
 23257  004C1C  0100               	movlb	0	; () banked
 23258  004C1E  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 23259  004C20  0E01               	movlw	high _aesBuffer
 23260  004C22  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 23261  004C24  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 23262  004C28  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 23263  004C2C  EC64  F044         	call	_AESEncodeLoRa	;wreg free
 23264                           
 23265                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 23266  004C30  0E00               	movlw	0
 23267  004C32  0100               	movlb	0	; () banked
 23268  004C34  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 23269  004C36                     l14729:
 23270                           
 23271                           ; BSR set to: 0
 23272  004C36  0E0F               	movlw	15
 23273  004C38  65A6               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 23274  004C3A  D001               	goto	l2152
 23275  004C3C  D036               	goto	u16860
 23276  004C3E                     l2152:
 23277                           
 23278                           ; BSR set to: 0
 23279                           ;lorawan.c: 2216: {
 23280                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 23281                           
 23282                           ; BSR set to: 0
 23283  004C3E  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 23284  004C40  0D01               	mullw	1
 23285  004C42  50F3               	movf	prodl,w,c
 23286  004C44  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 23287  004C46  6ED9               	movwf	fsr2l,c
 23288  004C48  50F4               	movf	prodh,w,c
 23289  004C4A  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 23290  004C4C  6EDA               	movwf	fsr2h,c
 23291  004C4E  0EF0               	movlw	240
 23292  004C50  6F9F               	movwf	??_EncryptFRMPayload& (0+255),b
 23293  004C52  0EFF               	movlw	255
 23294  004C54  6FA0               	movwf	(??_EncryptFRMPayload+1)& (0+255),b
 23295  004C56  51A5               	movf	EncryptFRMPayload@i& (0+255),w,b
 23296  004C58  6FA1               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 23297  004C5A  6BA2               	clrf	(??_EncryptFRMPayload+3)& (0+255),b
 23298  004C5C  3BA1               	swapf	(??_EncryptFRMPayload+2)& (0+255),f,b
 23299  004C5E  3BA2               	swapf	(??_EncryptFRMPayload+3)& (0+255),f,b
 23300  004C60  0EF0               	movlw	240
 23301  004C62  17A2               	andwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 23302  004C64  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 23303  004C66  0B0F               	andlw	15
 23304  004C68  13A2               	iorwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 23305  004C6A  0EF0               	movlw	240
 23306  004C6C  17A1               	andwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 23307  004C6E  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 23308  004C70  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 23309  004C72  0E00               	movlw	0
 23310  004C74  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 23311  004C76  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 23312  004C78  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 23313  004C7A  51A0               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 23314  004C7C  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 23315  004C7E  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 23316  004C80  2591               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 23317  004C82  6EE9               	movwf	fsr0l,c
 23318  004C84  51A2               	movf	(??_EncryptFRMPayload+3)& (0+255),w,b
 23319  004C86  2192               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 23320  004C88  6EEA               	movwf	fsr0h,c
 23321  004C8A  50EF               	movf	indf0,w,c
 23322  004C8C  6FA3               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 23323  004C8E  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 23324  004C90  0D01               	mullw	1
 23325  004C92  0E57               	movlw	low _aesBuffer
 23326  004C94  24F3               	addwf	prodl,w,c
 23327  004C96  6EE9               	movwf	fsr0l,c
 23328  004C98  0E01               	movlw	high _aesBuffer
 23329  004C9A  20F4               	addwfc	prodh,w,c
 23330  004C9C  6EEA               	movwf	fsr0h,c
 23331  004C9E  50EF               	movf	indf0,w,c
 23332  004CA0  19A3               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 23333  004CA2  6EDF               	movwf	indf2,c
 23334                           
 23335                           ; BSR set to: 0
 23336  004CA4  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 23337                           
 23338                           ; BSR set to: 0
 23339  004CA6  2BA6               	incf	EncryptFRMPayload@j& (0+255),f,b
 23340  004CA8  D7C6               	goto	l14729
 23341  004CAA                     u16860:
 23342                           
 23343                           ; BSR set to: 0
 23344                           
 23345                           ; BSR set to: 0
 23346  004CAA  2BA5               	incf	EncryptFRMPayload@i& (0+255),f,b
 23347  004CAC                     l2150:
 23348                           
 23349                           ; BSR set to: 0
 23350                           
 23351                           ; BSR set to: 0
 23352  004CAC  51A5               	movf	EncryptFRMPayload@i& (0+255),w,b
 23353  004CAE  5DA4               	subwf	EncryptFRMPayload@k& (0+255),w,b
 23354  004CB0  B0D8               	btfsc	status,0,c
 23355  004CB2  D7A2               	goto	l2151
 23356                           
 23357                           ; BSR set to: 0
 23358                           ;lorawan.c: 2218: }
 23359                           ;lorawan.c: 2219: }
 23360                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 23361                           
 23362                           ; BSR set to: 0
 23363  004CB4  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 23364  004CB8  0E0F               	movlw	15
 23365  004CBA  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 23366  004CBC  B4D8               	btfsc	status,2,c
 23367  004CBE  0012               	return	
 23368                           
 23369                           ; BSR set to: 0
 23370                           ;lorawan.c: 2222: {
 23371                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 23372  004CC0  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 23373  004CC4  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 23374  004CC8  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 23375  004CCC  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 23376  004CD0  C0A5  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 23377  004CD4  0E01               	movlw	1
 23378  004CD6  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 23379  004CD8  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 23380  004CDC  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 23381  004CDE  EC1B  F032         	call	_AssembleEncryptionBlock
 23382                           
 23383                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 23384  004CE2  0E57               	movlw	low _aesBuffer
 23385  004CE4  0100               	movlb	0	; () banked
 23386  004CE6  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 23387  004CE8  0E01               	movlw	high _aesBuffer
 23388  004CEA  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 23389  004CEC  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 23390  004CF0  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 23391  004CF4  EC64  F044         	call	_AESEncodeLoRa	;wreg free
 23392                           
 23393                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 23394  004CF8  0E00               	movlw	0
 23395  004CFA  0100               	movlb	0	; () banked
 23396  004CFC  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 23397  004CFE  D023               	goto	l2156
 23398  004D00                     
 23399                           ; BSR set to: 0
 23400                           ;lorawan.c: 2227: {
 23401                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 23402                           
 23403                           ; BSR set to: 0
 23404  004D00  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 23405  004D02  0D01               	mullw	1
 23406  004D04  50F3               	movf	prodl,w,c
 23407  004D06  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 23408  004D08  6ED9               	movwf	fsr2l,c
 23409  004D0A  50F4               	movf	prodh,w,c
 23410  004D0C  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 23411  004D0E  6EDA               	movwf	fsr2h,c
 23412  004D10  51A4               	movf	EncryptFRMPayload@k& (0+255),w,b
 23413  004D12  0D10               	mullw	16
 23414  004D14  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 23415  004D16  26F3               	addwf	prodl,f,c
 23416  004D18  0E00               	movlw	0
 23417  004D1A  22F4               	addwfc	prodh,f,c
 23418  004D1C  50F3               	movf	prodl,w,c
 23419  004D1E  2591               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 23420  004D20  6EE9               	movwf	fsr0l,c
 23421  004D22  50F4               	movf	prodh,w,c
 23422  004D24  2192               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 23423  004D26  6EEA               	movwf	fsr0h,c
 23424  004D28  50EF               	movf	indf0,w,c
 23425  004D2A  6F9F               	movwf	??_EncryptFRMPayload& (0+255),b
 23426  004D2C  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 23427  004D2E  0D01               	mullw	1
 23428  004D30  0E57               	movlw	low _aesBuffer
 23429  004D32  24F3               	addwf	prodl,w,c
 23430  004D34  6EE9               	movwf	fsr0l,c
 23431  004D36  0E01               	movlw	high _aesBuffer
 23432  004D38  20F4               	addwfc	prodh,w,c
 23433  004D3A  6EEA               	movwf	fsr0h,c
 23434  004D3C  50EF               	movf	indf0,w,c
 23435  004D3E  199F               	xorwf	??_EncryptFRMPayload& (0+255),w,b
 23436  004D40  6EDF               	movwf	indf2,c
 23437                           
 23438                           ; BSR set to: 0
 23439  004D42  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 23440                           
 23441                           ; BSR set to: 0
 23442  004D44  2BA6               	incf	EncryptFRMPayload@j& (0+255),f,b
 23443  004D46                     l2156:
 23444                           
 23445                           ; BSR set to: 0
 23446                           
 23447                           ; BSR set to: 0
 23448  004D46  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 23449  004D4A  0E0F               	movlw	15
 23450  004D4C  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 23451  004D4E  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 23452  004D50  5DA6               	subwf	EncryptFRMPayload@j& (0+255),w,b
 23453  004D52  B0D8               	btfsc	status,0,c
 23454  004D54  0012               	return	
 23455  004D56  D7D4               	goto	l2157
 23456  004D58                     __end_of_EncryptFRMPayload:
 23457                           	opt stack 0
 23458                           tosu	equ	0xFFF
 23459                           tosh	equ	0xFFE
 23460                           tosl	equ	0xFFD
 23461                           pclath	equ	0xFFA
 23462                           tblptru	equ	0xFF8
 23463                           tblptrh	equ	0xFF7
 23464                           tblptrl	equ	0xFF6
 23465                           tablat	equ	0xFF5
 23466                           prodh	equ	0xFF4
 23467                           prodl	equ	0xFF3
 23468                           intcon	equ	0xFF2
 23469                           intcon2	equ	0xFF1
 23470                           intcon3	equ	0xFF0
 23471                           indf0	equ	0xFEF
 23472                           postinc0	equ	0xFEE
 23473                           fsr0h	equ	0xFEA
 23474                           fsr0l	equ	0xFE9
 23475                           wreg	equ	0xFE8
 23476                           postinc1	equ	0xFE6
 23477                           postdec1	equ	0xFE5
 23478                           plusw1	equ	0xFE3
 23479                           fsr1h	equ	0xFE2
 23480                           fsr1l	equ	0xFE1
 23481                           indf2	equ	0xFDF
 23482                           postinc2	equ	0xFDE
 23483                           postdec2	equ	0xFDD
 23484                           plusw2	equ	0xFDB
 23485                           fsr2h	equ	0xFDA
 23486                           fsr2l	equ	0xFD9
 23487                           status	equ	0xFD8
 23488                           
 23489 ;; *************** function ___awdiv *****************
 23490 ;; Defined at:
 23491 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 23492 ;; Parameters:    Size  Location     Type
 23493 ;;  dividend        2    0[BANK0 ] int 
 23494 ;;  divisor         2    2[BANK0 ] int 
 23495 ;; Auto vars:     Size  Location     Type
 23496 ;;  quotient        2    6[BANK0 ] int 
 23497 ;;  sign            1    5[BANK0 ] unsigned char 
 23498 ;;  counter         1    4[BANK0 ] unsigned char 
 23499 ;; Return value:  Size  Location     Type
 23500 ;;                  2    0[BANK0 ] int 
 23501 ;; Registers used:
 23502 ;;		wreg, status,2, status,0
 23503 ;; Tracked objects:
 23504 ;;		On entry : 0/0
 23505 ;;		On exit  : 0/0
 23506 ;;		Unchanged: 0/0
 23507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23508 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23509 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23511 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23512 ;;Total ram usage:        8 bytes
 23513 ;; Hardware stack levels used:    1
 23514 ;; Hardware stack levels required when called:    7
 23515 ;; This function calls:
 23516 ;;		Nothing
 23517 ;; This function is called by:
 23518 ;;		_EncryptFRMPayload
 23519 ;; This function uses a non-reentrant model
 23520 ;;
 23521                           
 23522                           	psect	text113
 23523  00767C                     __ptext113:
 23524                           	opt stack 0
 23525  00767C                     ___awdiv:
 23526                           	opt stack 20
 23527                           
 23528                           ; BSR set to: 0
 23529                           ;incstack = 0
 23530  00767C  0E00               	movlw	0
 23531  00767E  0100               	movlb	0	; () banked
 23532  007680  6F65               	movwf	___awdiv@sign& (0+255),b
 23533                           
 23534                           ; BSR set to: 0
 23535  007682  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23536  007684  D006               	goto	l2909
 23537                           
 23538                           ; BSR set to: 0
 23539  007686  6D62               	negf	___awdiv@divisor& (0+255),b
 23540  007688  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 23541  00768A  B0D8               	btfsc	status,0,c
 23542  00768C  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 23543                           
 23544                           ; BSR set to: 0
 23545  00768E  0E01               	movlw	1
 23546  007690  6F65               	movwf	___awdiv@sign& (0+255),b
 23547  007692                     l2909:
 23548                           
 23549                           ; BSR set to: 0
 23550                           
 23551                           ; BSR set to: 0
 23552  007692  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 23553  007694  D006               	goto	l2910
 23554                           
 23555                           ; BSR set to: 0
 23556  007696  6D60               	negf	___awdiv@dividend& (0+255),b
 23557  007698  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 23558  00769A  B0D8               	btfsc	status,0,c
 23559  00769C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 23560                           
 23561                           ; BSR set to: 0
 23562  00769E  0E01               	movlw	1
 23563  0076A0  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 23564  0076A2                     l2910:
 23565                           
 23566                           ; BSR set to: 0
 23567                           
 23568                           ; BSR set to: 0
 23569  0076A2  0E00               	movlw	0
 23570  0076A4  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 23571  0076A6  0E00               	movlw	0
 23572  0076A8  6F66               	movwf	___awdiv@quotient& (0+255),b
 23573                           
 23574                           ; BSR set to: 0
 23575  0076AA  5162               	movf	___awdiv@divisor& (0+255),w,b
 23576  0076AC  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 23577  0076AE  B4D8               	btfsc	status,2,c
 23578  0076B0  D01C               	goto	l2917
 23579                           
 23580                           ; BSR set to: 0
 23581  0076B2  0E01               	movlw	1
 23582  0076B4  6F64               	movwf	___awdiv@counter& (0+255),b
 23583  0076B6  D004               	goto	l2912
 23584  0076B8                     
 23585                           ; BSR set to: 0
 23586                           
 23587                           ; BSR set to: 0
 23588  0076B8  90D8               	bcf	status,0,c
 23589  0076BA  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 23590  0076BC  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 23591  0076BE  2B64               	incf	___awdiv@counter& (0+255),f,b
 23592  0076C0                     l2912:
 23593                           
 23594                           ; BSR set to: 0
 23595                           
 23596                           ; BSR set to: 0
 23597  0076C0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23598  0076C2  D7FA               	goto	l2913
 23599  0076C4                     u16020:
 23600                           
 23601                           ; BSR set to: 0
 23602                           
 23603                           ; BSR set to: 0
 23604                           
 23605                           ; BSR set to: 0
 23606  0076C4  90D8               	bcf	status,0,c
 23607  0076C6  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 23608  0076C8  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 23609                           
 23610                           ; BSR set to: 0
 23611  0076CA  5162               	movf	___awdiv@divisor& (0+255),w,b
 23612  0076CC  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 23613  0076CE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23614  0076D0  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 23615  0076D2  A0D8               	btfss	status,0,c
 23616  0076D4  D005               	goto	l2916
 23617                           
 23618                           ; BSR set to: 0
 23619  0076D6  5162               	movf	___awdiv@divisor& (0+255),w,b
 23620  0076D8  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 23621  0076DA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23622  0076DC  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 23623                           
 23624                           ; BSR set to: 0
 23625  0076DE  8166               	bsf	___awdiv@quotient& (0+255),0,b
 23626  0076E0                     l2916:
 23627                           
 23628                           ; BSR set to: 0
 23629                           
 23630                           ; BSR set to: 0
 23631  0076E0  90D8               	bcf	status,0,c
 23632  0076E2  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 23633  0076E4  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 23634                           
 23635                           ; BSR set to: 0
 23636  0076E6  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 23637  0076E8  D7ED               	goto	u16020
 23638  0076EA                     l2917:
 23639                           
 23640                           ; BSR set to: 0
 23641                           
 23642                           ; BSR set to: 0
 23643                           
 23644                           ; BSR set to: 0
 23645  0076EA  5165               	movf	___awdiv@sign& (0+255),w,b
 23646  0076EC  B4D8               	btfsc	status,2,c
 23647  0076EE  D004               	goto	l2918
 23648                           
 23649                           ; BSR set to: 0
 23650  0076F0  6D66               	negf	___awdiv@quotient& (0+255),b
 23651  0076F2  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 23652  0076F4  B0D8               	btfsc	status,0,c
 23653  0076F6  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 23654  0076F8                     l2918:
 23655                           
 23656                           ; BSR set to: 0
 23657                           
 23658                           ; BSR set to: 0
 23659  0076F8  C066  F060         	movff	___awdiv@quotient,?___awdiv
 23660  0076FC  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 23661  007700  0012               	return	
 23662  007702                     __end_of___awdiv:
 23663                           	opt stack 0
 23664                           tosu	equ	0xFFF
 23665                           tosh	equ	0xFFE
 23666                           tosl	equ	0xFFD
 23667                           pclath	equ	0xFFA
 23668                           tblptru	equ	0xFF8
 23669                           tblptrh	equ	0xFF7
 23670                           tblptrl	equ	0xFF6
 23671                           tablat	equ	0xFF5
 23672                           prodh	equ	0xFF4
 23673                           prodl	equ	0xFF3
 23674                           intcon	equ	0xFF2
 23675                           intcon2	equ	0xFF1
 23676                           intcon3	equ	0xFF0
 23677                           indf0	equ	0xFEF
 23678                           postinc0	equ	0xFEE
 23679                           fsr0h	equ	0xFEA
 23680                           fsr0l	equ	0xFE9
 23681                           wreg	equ	0xFE8
 23682                           postinc1	equ	0xFE6
 23683                           postdec1	equ	0xFE5
 23684                           plusw1	equ	0xFE3
 23685                           fsr1h	equ	0xFE2
 23686                           fsr1l	equ	0xFE1
 23687                           indf2	equ	0xFDF
 23688                           postinc2	equ	0xFDE
 23689                           postdec2	equ	0xFDD
 23690                           plusw2	equ	0xFDB
 23691                           fsr2h	equ	0xFDA
 23692                           fsr2l	equ	0xFD9
 23693                           status	equ	0xFD8
 23694                           
 23695 ;; *************** function _AssembleEncryptionBlock *****************
 23696 ;; Defined at:
 23697 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23698 ;; Parameters:    Size  Location     Type
 23699 ;;  dir             1    wreg     unsigned char 
 23700 ;;  frameCounter    4   11[BANK0 ] unsigned long 
 23701 ;;  blockId         1   15[BANK0 ] unsigned char 
 23702 ;;  firstByte       1   16[BANK0 ] unsigned char 
 23703 ;;  multicastSta    1   17[BANK0 ] unsigned char 
 23704 ;; Auto vars:     Size  Location     Type
 23705 ;;  dir             1   18[BANK0 ] unsigned char 
 23706 ;;  bufferIndex     1   19[BANK0 ] unsigned char 
 23707 ;; Return value:  Size  Location     Type
 23708 ;;                  1    wreg      void 
 23709 ;; Registers used:
 23710 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23711 ;; Tracked objects:
 23712 ;;		On entry : 0/0
 23713 ;;		On exit  : 0/0
 23714 ;;		Unchanged: 0/0
 23715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23716 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23717 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23719 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23720 ;;Total ram usage:        9 bytes
 23721 ;; Hardware stack levels used:    1
 23722 ;; Hardware stack levels required when called:    8
 23723 ;; This function calls:
 23724 ;;		_memcpy
 23725 ;;		_memset
 23726 ;; This function is called by:
 23727 ;;		_LORAWAN_RxDone
 23728 ;;		_AssemblePacket
 23729 ;;		_EncryptFRMPayload
 23730 ;; This function uses a non-reentrant model
 23731 ;;
 23732                           
 23733                           	psect	text114
 23734  006436                     __ptext114:
 23735                           	opt stack 0
 23736  006436                     _AssembleEncryptionBlock:
 23737                           	opt stack 19
 23738                           
 23739                           ; BSR set to: 0
 23740                           ;incstack = 0
 23741                           ;AssembleEncryptionBlock@dir stored from wreg
 23742  006436  0100               	movlb	0	; () banked
 23743  006438  6F72               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 23744                           
 23745                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 23746  00643A  0E00               	movlw	0
 23747  00643C  0100               	movlb	0	; () banked
 23748  00643E  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23749                           
 23750                           ; BSR set to: 0
 23751                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 23752  006440  0E57               	movlw	low _aesBuffer
 23753  006442  6F60               	movwf	memset@p1& (0+255),b
 23754  006444  0E01               	movlw	high _aesBuffer
 23755  006446  6F61               	movwf	(memset@p1+1)& (0+255),b
 23756  006448  0E00               	movlw	0
 23757  00644A  6F63               	movwf	(memset@c+1)& (0+255),b
 23758  00644C  0E00               	movlw	0
 23759  00644E  6F62               	movwf	memset@c& (0+255),b
 23760  006450  0E00               	movlw	0
 23761  006452  6F65               	movwf	(memset@n+1)& (0+255),b
 23762  006454  0E10               	movlw	16
 23763  006456  6F64               	movwf	memset@n& (0+255),b
 23764  006458  EC45  F045         	call	_memset	;wreg free
 23765                           
 23766                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 23767  00645C  0100               	movlb	0	; () banked
 23768  00645E  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23769  006460  0D01               	mullw	1
 23770  006462  0E57               	movlw	low _aesBuffer
 23771  006464  24F3               	addwf	prodl,w,c
 23772  006466  6ED9               	movwf	fsr2l,c
 23773  006468  0E01               	movlw	high _aesBuffer
 23774  00646A  20F4               	addwfc	prodh,w,c
 23775  00646C  6EDA               	movwf	fsr2h,c
 23776  00646E  C070  FFDF         	movff	AssembleEncryptionBlock@firstByte,indf2
 23777                           
 23778                           ; BSR set to: 0
 23779                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 23780  006472  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23781  006474  0F05               	addlw	5
 23782  006476  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23783                           
 23784                           ; BSR set to: 0
 23785                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 23786  006478  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23787  00647A  0D01               	mullw	1
 23788  00647C  0E57               	movlw	low _aesBuffer
 23789  00647E  24F3               	addwf	prodl,w,c
 23790  006480  6ED9               	movwf	fsr2l,c
 23791  006482  0E01               	movlw	high _aesBuffer
 23792  006484  20F4               	addwfc	prodh,w,c
 23793  006486  6EDA               	movwf	fsr2h,c
 23794  006488  C072  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 23795                           
 23796                           ; BSR set to: 0
 23797  00648C  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 23798                           
 23799                           ; BSR set to: 0
 23800                           ;lorawan.c: 2168: if (0 == multicastStatus)
 23801  00648E  5171               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 23802  006490  A4D8               	btfss	status,2,c
 23803  006492  D013               	goto	l2139
 23804                           
 23805                           ; BSR set to: 0
 23806                           ;lorawan.c: 2169: {
 23807                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 23808  006494  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23809  006496  0D01               	mullw	1
 23810  006498  0E57               	movlw	low _aesBuffer
 23811  00649A  24F3               	addwf	prodl,w,c
 23812  00649C  6F60               	movwf	memcpy@d1& (0+255),b
 23813  00649E  0E01               	movlw	high _aesBuffer
 23814  0064A0  20F4               	addwfc	prodh,w,c
 23815  0064A2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 23816  0064A4  0E1E               	movlw	low (_loRa+30)
 23817  0064A6  6F62               	movwf	memcpy@s1& (0+255),b
 23818  0064A8  0E02               	movlw	high (_loRa+30)
 23819  0064AA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 23820  0064AC  0E00               	movlw	0
 23821  0064AE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23822  0064B0  0E04               	movlw	4
 23823  0064B2  6F64               	movwf	memcpy@n& (0+255),b
 23824  0064B4  EC6C  F03F         	call	_memcpy	;wreg free
 23825  0064B8  D012               	goto	l14219
 23826  0064BA                     l2139:
 23827                           
 23828                           ; BSR set to: 0
 23829                           ;lorawan.c: 2173: else
 23830                           ;lorawan.c: 2174: {
 23831                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 23832                           
 23833                           ; BSR set to: 0
 23834  0064BA  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23835  0064BC  0D01               	mullw	1
 23836  0064BE  0E57               	movlw	low _aesBuffer
 23837  0064C0  24F3               	addwf	prodl,w,c
 23838  0064C2  6F60               	movwf	memcpy@d1& (0+255),b
 23839  0064C4  0E01               	movlw	high _aesBuffer
 23840  0064C6  20F4               	addwfc	prodh,w,c
 23841  0064C8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 23842  0064CA  0E62               	movlw	low (_loRa+98)
 23843  0064CC  6F62               	movwf	memcpy@s1& (0+255),b
 23844  0064CE  0E02               	movlw	high (_loRa+98)
 23845  0064D0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 23846  0064D2  0E00               	movlw	0
 23847  0064D4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23848  0064D6  0E04               	movlw	4
 23849  0064D8  6F64               	movwf	memcpy@n& (0+255),b
 23850  0064DA  EC6C  F03F         	call	_memcpy	;wreg free
 23851  0064DE                     l14219:
 23852                           
 23853                           ;lorawan.c: 2176: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.mcastDev
      +                          iceAddress);
 23854  0064DE  0100               	movlb	0	; () banked
 23855  0064E0  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23856  0064E2  0F04               	addlw	4
 23857  0064E4  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23858                           
 23859                           ; BSR set to: 0
 23860                           ;lorawan.c: 2177: }
 23861                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 23862                           
 23863                           ; BSR set to: 0
 23864  0064E6  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23865  0064E8  0D01               	mullw	1
 23866  0064EA  0E57               	movlw	low _aesBuffer
 23867  0064EC  24F3               	addwf	prodl,w,c
 23868  0064EE  6F60               	movwf	memcpy@d1& (0+255),b
 23869  0064F0  0E01               	movlw	high _aesBuffer
 23870  0064F2  20F4               	addwfc	prodh,w,c
 23871  0064F4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 23872  0064F6  0E6B               	movlw	low AssembleEncryptionBlock@frameCounter
 23873  0064F8  6F62               	movwf	memcpy@s1& (0+255),b
 23874  0064FA  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 23875  0064FC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 23876  0064FE  0E00               	movlw	0
 23877  006500  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23878  006502  0E04               	movlw	4
 23879  006504  6F64               	movwf	memcpy@n& (0+255),b
 23880  006506  EC6C  F03F         	call	_memcpy	;wreg free
 23881                           
 23882                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 23883  00650A  0100               	movlb	0	; () banked
 23884  00650C  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23885  00650E  0F04               	addlw	4
 23886  006510  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23887                           
 23888                           ; BSR set to: 0
 23889                           ;lorawan.c: 2182: bufferIndex ++;
 23890  006512  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 23891                           
 23892                           ; BSR set to: 0
 23893                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 23894  006514  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23895  006516  0D01               	mullw	1
 23896  006518  0E57               	movlw	low _aesBuffer
 23897  00651A  24F3               	addwf	prodl,w,c
 23898  00651C  6ED9               	movwf	fsr2l,c
 23899  00651E  0E01               	movlw	high _aesBuffer
 23900  006520  20F4               	addwfc	prodh,w,c
 23901  006522  6EDA               	movwf	fsr2h,c
 23902  006524  C06F  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 23903                           
 23904                           ; BSR set to: 0
 23905  006528  0012               	return		;funcret
 23906  00652A                     __end_of_AssembleEncryptionBlock:
 23907                           	opt stack 0
 23908                           tosu	equ	0xFFF
 23909                           tosh	equ	0xFFE
 23910                           tosl	equ	0xFFD
 23911                           pclath	equ	0xFFA
 23912                           tblptru	equ	0xFF8
 23913                           tblptrh	equ	0xFF7
 23914                           tblptrl	equ	0xFF6
 23915                           tablat	equ	0xFF5
 23916                           prodh	equ	0xFF4
 23917                           prodl	equ	0xFF3
 23918                           intcon	equ	0xFF2
 23919                           intcon2	equ	0xFF1
 23920                           intcon3	equ	0xFF0
 23921                           indf0	equ	0xFEF
 23922                           postinc0	equ	0xFEE
 23923                           fsr0h	equ	0xFEA
 23924                           fsr0l	equ	0xFE9
 23925                           wreg	equ	0xFE8
 23926                           postinc1	equ	0xFE6
 23927                           postdec1	equ	0xFE5
 23928                           plusw1	equ	0xFE3
 23929                           fsr1h	equ	0xFE2
 23930                           fsr1l	equ	0xFE1
 23931                           indf2	equ	0xFDF
 23932                           postinc2	equ	0xFDE
 23933                           postdec2	equ	0xFDD
 23934                           plusw2	equ	0xFDB
 23935                           fsr2h	equ	0xFDA
 23936                           fsr2l	equ	0xFD9
 23937                           status	equ	0xFD8
 23938                           
 23939 ;; *************** function _CountfOptsLength *****************
 23940 ;; Defined at:
 23941 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23942 ;; Parameters:    Size  Location     Type
 23943 ;;		None
 23944 ;; Auto vars:     Size  Location     Type
 23945 ;;  i               1    7[BANK0 ] unsigned char 
 23946 ;;  macCommandLe    1    6[BANK0 ] unsigned char 
 23947 ;; Return value:  Size  Location     Type
 23948 ;;                  1    wreg      unsigned char 
 23949 ;; Registers used:
 23950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23951 ;; Tracked objects:
 23952 ;;		On entry : 0/0
 23953 ;;		On exit  : 0/0
 23954 ;;		Unchanged: 0/0
 23955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23957 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23958 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23959 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23960 ;;Total ram usage:        8 bytes
 23961 ;; Hardware stack levels used:    1
 23962 ;; Hardware stack levels required when called:    7
 23963 ;; This function calls:
 23964 ;;		Nothing
 23965 ;; This function is called by:
 23966 ;;		_LORAWAN_GetMaxPayloadSize
 23967 ;;		_AssemblePacket
 23968 ;; This function uses a non-reentrant model
 23969 ;;
 23970                           
 23971                           	psect	text115
 23972  006D14                     __ptext115:
 23973                           	opt stack 0
 23974  006D14                     _CountfOptsLength:
 23975                           	opt stack 21
 23976                           
 23977                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 23978                           
 23979                           ; BSR set to: 0
 23980                           ;incstack = 0
 23981  006D14  0E00               	movlw	0
 23982  006D16  0100               	movlb	0	; () banked
 23983  006D18  6F66               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 23984                           
 23985                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 23986  006D1A  0E00               	movlw	0
 23987  006D1C  6F67               	movwf	CountfOptsLength@i& (0+255),b
 23988  006D1E  D057               	goto	l2130
 23989  006D20                     
 23990                           ; BSR set to: 0
 23991                           ;lorawan.c: 2139: {
 23992                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 23993                           
 23994                           ; BSR set to: 0
 23995  006D20  5167               	movf	CountfOptsLength@i& (0+255),w,b
 23996  006D22  0D02               	mullw	2
 23997  006D24  0EA8               	movlw	low (_loRa+168)
 23998  006D26  24F3               	addwf	prodl,w,c
 23999  006D28  6ED9               	movwf	fsr2l,c
 24000  006D2A  0E02               	movlw	high (_loRa+168)
 24001  006D2C  20F4               	addwfc	prodh,w,c
 24002  006D2E  6EDA               	movwf	fsr2h,c
 24003  006D30  28DE               	incf	postinc2,w,c
 24004  006D32  B4D8               	btfsc	status,2,c
 24005  006D34  D04B               	goto	l2134
 24006                           
 24007                           ; BSR set to: 0
 24008                           ;lorawan.c: 2141: {
 24009                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 24010  006D36  0EFE               	movlw	254
 24011  006D38  6F60               	movwf	??_CountfOptsLength& (0+255),b
 24012  006D3A  0EFF               	movlw	255
 24013  006D3C  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 24014  006D3E  5167               	movf	CountfOptsLength@i& (0+255),w,b
 24015  006D40  0D02               	mullw	2
 24016  006D42  0EA8               	movlw	low (_loRa+168)
 24017  006D44  24F3               	addwf	prodl,w,c
 24018  006D46  6ED9               	movwf	fsr2l,c
 24019  006D48  0E02               	movlw	high (_loRa+168)
 24020  006D4A  20F4               	addwfc	prodh,w,c
 24021  006D4C  6EDA               	movwf	fsr2h,c
 24022  006D4E  50DF               	movf	indf2,w,c
 24023  006D50  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 24024  006D52  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 24025  006D54  5160               	movf	??_CountfOptsLength& (0+255),w,b
 24026  006D56  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 24027  006D58  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 24028  006D5A  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 24029  006D5C  0E61               	movlw	low _macEndDevCmdReplyLen
 24030  006D5E  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 24031  006D60  6EF6               	movwf	tblptrl,c
 24032  006D62  0EFF               	movlw	high _macEndDevCmdReplyLen
 24033  006D64  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 24034  006D66  6EF7               	movwf	tblptrh,c
 24035  006D68                     	if	1	;There are 3 active tblptr bytes
 24036  006D68  6AF8               	clrf	tblptru,c
 24037  006D6A  0E00               	movlw	low (__mediumconst shr (0+16))
 24038  006D6C  22F8               	addwfc	tblptru,f,c
 24039  006D6E                     	endif
 24040  006D6E  0008               	tblrd		*
 24041  006D70  50F5               	movf	tablat,w,c
 24042  006D72  C066  F064         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 24043  006D76  6B65               	clrf	(??_CountfOptsLength+5)& (0+255),b
 24044  006D78  2764               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 24045  006D7A  0E00               	movlw	0
 24046  006D7C  2365               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 24047  006D7E  BF65               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 24048  006D80  D006               	goto	u16910
 24049  006D82  5165               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 24050  006D84  E12A               	bnz	l14771
 24051  006D86  0E10               	movlw	16
 24052  006D88  5D64               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 24053  006D8A  B0D8               	btfsc	status,0,c
 24054  006D8C  D026               	goto	u16920
 24055  006D8E                     u16910:
 24056                           
 24057                           ; BSR set to: 0
 24058                           ;lorawan.c: 2143: {
 24059                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 24060  006D8E  0EFE               	movlw	254
 24061  006D90  6F60               	movwf	??_CountfOptsLength& (0+255),b
 24062  006D92  0EFF               	movlw	255
 24063  006D94  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 24064  006D96  5167               	movf	CountfOptsLength@i& (0+255),w,b
 24065  006D98  0D02               	mullw	2
 24066  006D9A  0EA8               	movlw	low (_loRa+168)
 24067  006D9C  24F3               	addwf	prodl,w,c
 24068  006D9E  6ED9               	movwf	fsr2l,c
 24069  006DA0  0E02               	movlw	high (_loRa+168)
 24070  006DA2  20F4               	addwfc	prodh,w,c
 24071  006DA4  6EDA               	movwf	fsr2h,c
 24072  006DA6  50DF               	movf	indf2,w,c
 24073  006DA8  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 24074  006DAA  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 24075  006DAC  5160               	movf	??_CountfOptsLength& (0+255),w,b
 24076  006DAE  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 24077  006DB0  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 24078  006DB2  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 24079  006DB4  0E61               	movlw	low _macEndDevCmdReplyLen
 24080  006DB6  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 24081  006DB8  6EF6               	movwf	tblptrl,c
 24082  006DBA  0EFF               	movlw	high _macEndDevCmdReplyLen
 24083  006DBC  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 24084  006DBE  6EF7               	movwf	tblptrh,c
 24085  006DC0                     	if	1	;There are 3 active tblptr bytes
 24086  006DC0  6AF8               	clrf	tblptru,c
 24087  006DC2  0E00               	movlw	low (__mediumconst shr (0+16))
 24088  006DC4  22F8               	addwfc	tblptru,f,c
 24089  006DC6                     	endif
 24090  006DC6  0008               	tblrd		*
 24091  006DC8  50F5               	movf	tablat,w,c
 24092  006DCA  2766               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 24093  006DCC                     l2134:
 24094                           
 24095                           ; BSR set to: 0
 24096                           
 24097                           ; BSR set to: 0
 24098                           
 24099                           ; BSR set to: 0
 24100  006DCC  2B67               	incf	CountfOptsLength@i& (0+255),f,b
 24101  006DCE                     l2130:
 24102                           
 24103                           ; BSR set to: 0
 24104                           
 24105                           ; BSR set to: 0
 24106  006DCE  0102               	movlb	2	; () banked
 24107  006DD0  51A7               	movf	(_loRa+167)& (0+255),w,b
 24108  006DD2  0100               	movlb	0	; () banked
 24109  006DD4  5D67               	subwf	CountfOptsLength@i& (0+255),w,b
 24110  006DD6  A0D8               	btfss	status,0,c
 24111  006DD8  D7A3               	goto	l2131
 24112  006DDA                     u16920:
 24113  006DDA                     l14771:
 24114                           
 24115                           ; BSR set to: 0
 24116                           ;lorawan.c: 2149: }
 24117                           ;lorawan.c: 2150: }
 24118                           ;lorawan.c: 2151: }
 24119                           ;lorawan.c: 2153: return macCommandLength;
 24120  006DDA  5166               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 24121  006DDC  0012               	return	
 24122  006DDE                     __end_of_CountfOptsLength:
 24123                           	opt stack 0
 24124                           tosu	equ	0xFFF
 24125                           tosh	equ	0xFFE
 24126                           tosl	equ	0xFFD
 24127                           pclath	equ	0xFFA
 24128                           tblptru	equ	0xFF8
 24129                           tblptrh	equ	0xFF7
 24130                           tblptrl	equ	0xFF6
 24131                           tablat	equ	0xFF5
 24132                           prodh	equ	0xFF4
 24133                           prodl	equ	0xFF3
 24134                           intcon	equ	0xFF2
 24135                           intcon2	equ	0xFF1
 24136                           intcon3	equ	0xFF0
 24137                           indf0	equ	0xFEF
 24138                           postinc0	equ	0xFEE
 24139                           fsr0h	equ	0xFEA
 24140                           fsr0l	equ	0xFE9
 24141                           wreg	equ	0xFE8
 24142                           postinc1	equ	0xFE6
 24143                           postdec1	equ	0xFE5
 24144                           plusw1	equ	0xFE3
 24145                           fsr1h	equ	0xFE2
 24146                           fsr1l	equ	0xFE1
 24147                           indf2	equ	0xFDF
 24148                           postinc2	equ	0xFDE
 24149                           postdec2	equ	0xFDD
 24150                           plusw2	equ	0xFDB
 24151                           fsr2h	equ	0xFDA
 24152                           fsr2l	equ	0xFD9
 24153                           status	equ	0xFD8
 24154                           
 24155 ;; *************** function _ExtractMic *****************
 24156 ;; Defined at:
 24157 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24158 ;; Parameters:    Size  Location     Type
 24159 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 24160 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24161 ;;  bufferLength    1   13[BANK0 ] unsigned char 
 24162 ;; Auto vars:     Size  Location     Type
 24163 ;;  mic             4   19[BANK0 ] unsigned long 
 24164 ;; Return value:  Size  Location     Type
 24165 ;;                  4   11[BANK0 ] unsigned long 
 24166 ;; Registers used:
 24167 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24168 ;; Tracked objects:
 24169 ;;		On entry : 0/0
 24170 ;;		On exit  : 0/0
 24171 ;;		Unchanged: 0/0
 24172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24173 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24174 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24175 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24176 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24177 ;;Total ram usage:       12 bytes
 24178 ;; Hardware stack levels used:    1
 24179 ;; Hardware stack levels required when called:    8
 24180 ;; This function calls:
 24181 ;;		_memcpy
 24182 ;; This function is called by:
 24183 ;;		_LORAWAN_RxDone
 24184 ;; This function uses a non-reentrant model
 24185 ;;
 24186                           
 24187                           	psect	text116
 24188  008108                     __ptext116:
 24189                           	opt stack 0
 24190  008108                     _ExtractMic:
 24191                           	opt stack 18
 24192                           
 24193                           ;lorawan.c: 2189: uint32_t mic = 0;
 24194                           
 24195                           ; BSR set to: 0
 24196                           ;incstack = 0
 24197  008108  0E00               	movlw	0
 24198  00810A  0100               	movlb	0	; () banked
 24199  00810C  6F73               	movwf	ExtractMic@mic& (0+255),b
 24200  00810E  0E00               	movlw	0
 24201  008110  6F74               	movwf	(ExtractMic@mic+1)& (0+255),b
 24202  008112  0E00               	movlw	0
 24203  008114  6F75               	movwf	(ExtractMic@mic+2)& (0+255),b
 24204  008116  0E00               	movlw	0
 24205  008118  6F76               	movwf	(ExtractMic@mic+3)& (0+255),b
 24206                           
 24207                           ; BSR set to: 0
 24208                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 24209  00811A  0E73               	movlw	low ExtractMic@mic
 24210  00811C  6F60               	movwf	memcpy@d1& (0+255),b
 24211  00811E  0E00               	movlw	high ExtractMic@mic
 24212  008120  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24213  008122  0EFC               	movlw	252
 24214  008124  6F6F               	movwf	??_ExtractMic& (0+255),b
 24215  008126  0EFF               	movlw	255
 24216  008128  6F70               	movwf	(??_ExtractMic+1)& (0+255),b
 24217  00812A  516D               	movf	ExtractMic@bufferLength& (0+255),w,b
 24218  00812C  6F71               	movwf	(??_ExtractMic+2)& (0+255),b
 24219  00812E  6B72               	clrf	(??_ExtractMic+3)& (0+255),b
 24220  008130  516F               	movf	??_ExtractMic& (0+255),w,b
 24221  008132  2771               	addwf	(??_ExtractMic+2)& (0+255),f,b
 24222  008134  5170               	movf	(??_ExtractMic+1)& (0+255),w,b
 24223  008136  2372               	addwfc	(??_ExtractMic+3)& (0+255),f,b
 24224  008138  5171               	movf	(??_ExtractMic+2)& (0+255),w,b
 24225  00813A  256B               	addwf	ExtractMic@buffer& (0+255),w,b
 24226  00813C  6F62               	movwf	memcpy@s1& (0+255),b
 24227  00813E  5172               	movf	(??_ExtractMic+3)& (0+255),w,b
 24228  008140  216C               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 24229  008142  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24230  008144  0E00               	movlw	0
 24231  008146  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24232  008148  0E04               	movlw	4
 24233  00814A  6F64               	movwf	memcpy@n& (0+255),b
 24234  00814C  EC6C  F03F         	call	_memcpy	;wreg free
 24235                           
 24236                           ;lorawan.c: 2191: return mic;
 24237  008150  C073  F06B         	movff	ExtractMic@mic,?_ExtractMic
 24238  008154  C074  F06C         	movff	ExtractMic@mic+1,?_ExtractMic+1
 24239  008158  C075  F06D         	movff	ExtractMic@mic+2,?_ExtractMic+2
 24240  00815C  C076  F06E         	movff	ExtractMic@mic+3,?_ExtractMic+3
 24241  008160  0012               	return	
 24242  008162                     __end_of_ExtractMic:
 24243                           	opt stack 0
 24244                           tosu	equ	0xFFF
 24245                           tosh	equ	0xFFE
 24246                           tosl	equ	0xFFD
 24247                           pclath	equ	0xFFA
 24248                           tblptru	equ	0xFF8
 24249                           tblptrh	equ	0xFF7
 24250                           tblptrl	equ	0xFF6
 24251                           tablat	equ	0xFF5
 24252                           prodh	equ	0xFF4
 24253                           prodl	equ	0xFF3
 24254                           intcon	equ	0xFF2
 24255                           intcon2	equ	0xFF1
 24256                           intcon3	equ	0xFF0
 24257                           indf0	equ	0xFEF
 24258                           postinc0	equ	0xFEE
 24259                           fsr0h	equ	0xFEA
 24260                           fsr0l	equ	0xFE9
 24261                           wreg	equ	0xFE8
 24262                           postinc1	equ	0xFE6
 24263                           postdec1	equ	0xFE5
 24264                           plusw1	equ	0xFE3
 24265                           fsr1h	equ	0xFE2
 24266                           fsr1l	equ	0xFE1
 24267                           indf2	equ	0xFDF
 24268                           postinc2	equ	0xFDE
 24269                           postdec2	equ	0xFDD
 24270                           plusw2	equ	0xFDB
 24271                           fsr2h	equ	0xFDA
 24272                           fsr2l	equ	0xFD9
 24273                           status	equ	0xFD8
 24274                           
 24275 ;; *************** function _ComputeSessionKeys *****************
 24276 ;; Defined at:
 24277 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24278 ;; Parameters:    Size  Location     Type
 24279 ;;  joinAcceptBu    2   49[BANK0 ] PTR struct .
 24280 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24281 ;; Auto vars:     Size  Location     Type
 24282 ;;		None
 24283 ;; Return value:  Size  Location     Type
 24284 ;;                  1    wreg      void 
 24285 ;; Registers used:
 24286 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24287 ;; Tracked objects:
 24288 ;;		On entry : 0/0
 24289 ;;		On exit  : 0/0
 24290 ;;		Unchanged: 0/0
 24291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24296 ;;Total ram usage:        2 bytes
 24297 ;; Hardware stack levels used:    1
 24298 ;; Hardware stack levels required when called:   10
 24299 ;; This function calls:
 24300 ;;		_AESEncodeLoRa
 24301 ;;		_PrepareSessionKeys
 24302 ;; This function is called by:
 24303 ;;		_LORAWAN_RxDone
 24304 ;; This function uses a non-reentrant model
 24305 ;;
 24306                           
 24307                           	psect	text117
 24308  007702                     __ptext117:
 24309                           	opt stack 0
 24310  007702                     _ComputeSessionKeys:
 24311                           	opt stack 16
 24312                           
 24313                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 24314                           
 24315                           ;incstack = 0
 24316  007702  0E32               	movlw	low (_loRa+50)
 24317  007704  0100               	movlb	0	; () banked
 24318  007706  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 24319  007708  0E02               	movlw	high (_loRa+50)
 24320  00770A  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 24321  00770C  0E01               	movlw	1
 24322  00770E  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 24323  007710  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 24324  007712  0E00               	movlw	0
 24325  007714  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 24326  007716  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 24327  007718  0E04               	movlw	4
 24328  00771A  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 24329  00771C  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 24330  00771E  0E00               	movlw	0
 24331  007720  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 24332  007722  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 24333  007724  ECFD  F037         	call	_PrepareSessionKeys	;wreg free
 24334                           
 24335                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 24336  007728  0E02               	movlw	2
 24337  00772A  0102               	movlb	2	; () banked
 24338  00772C  6F32               	movwf	(_loRa+50)& (0+255),b
 24339                           
 24340                           ; BSR set to: 2
 24341                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 24342  00772E  0E32               	movlw	low (_loRa+50)
 24343  007730  0100               	movlb	0	; () banked
 24344  007732  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 24345  007734  0E02               	movlw	high (_loRa+50)
 24346  007736  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 24347  007738  0E42               	movlw	low (_loRa+66)
 24348  00773A  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 24349  00773C  0E02               	movlw	high (_loRa+66)
 24350  00773E  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 24351  007740  EC64  F044         	call	_AESEncodeLoRa	;wreg free
 24352                           
 24353                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 24354  007744  0E22               	movlw	low (_loRa+34)
 24355  007746  0100               	movlb	0	; () banked
 24356  007748  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 24357  00774A  0E02               	movlw	high (_loRa+34)
 24358  00774C  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 24359  00774E  0E01               	movlw	1
 24360  007750  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 24361  007752  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 24362  007754  0E00               	movlw	0
 24363  007756  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 24364  007758  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 24365  00775A  0E04               	movlw	4
 24366  00775C  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 24367  00775E  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 24368  007760  0E00               	movlw	0
 24369  007762  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 24370  007764  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 24371  007766  ECFD  F037         	call	_PrepareSessionKeys	;wreg free
 24372                           
 24373                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 24374  00776A  0E01               	movlw	1
 24375  00776C  0102               	movlb	2	; () banked
 24376  00776E  6F22               	movwf	(_loRa+34)& (0+255),b
 24377                           
 24378                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 24379  007770  0E22               	movlw	low (_loRa+34)
 24380  007772  0100               	movlb	0	; () banked
 24381  007774  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 24382  007776  0E02               	movlw	high (_loRa+34)
 24383  007778  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 24384  00777A  0E42               	movlw	low (_loRa+66)
 24385  00777C  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 24386  00777E  0E02               	movlw	high (_loRa+66)
 24387  007780  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 24388  007782  EC64  F044         	call	_AESEncodeLoRa	;wreg free
 24389  007786  0012               	return		;funcret
 24390  007788                     __end_of_ComputeSessionKeys:
 24391                           	opt stack 0
 24392                           tosu	equ	0xFFF
 24393                           tosh	equ	0xFFE
 24394                           tosl	equ	0xFFD
 24395                           pclath	equ	0xFFA
 24396                           tblptru	equ	0xFF8
 24397                           tblptrh	equ	0xFF7
 24398                           tblptrl	equ	0xFF6
 24399                           tablat	equ	0xFF5
 24400                           prodh	equ	0xFF4
 24401                           prodl	equ	0xFF3
 24402                           intcon	equ	0xFF2
 24403                           intcon2	equ	0xFF1
 24404                           intcon3	equ	0xFF0
 24405                           indf0	equ	0xFEF
 24406                           postinc0	equ	0xFEE
 24407                           fsr0h	equ	0xFEA
 24408                           fsr0l	equ	0xFE9
 24409                           wreg	equ	0xFE8
 24410                           postinc1	equ	0xFE6
 24411                           postdec1	equ	0xFE5
 24412                           plusw1	equ	0xFE3
 24413                           fsr1h	equ	0xFE2
 24414                           fsr1l	equ	0xFE1
 24415                           indf2	equ	0xFDF
 24416                           postinc2	equ	0xFDE
 24417                           postdec2	equ	0xFDD
 24418                           plusw2	equ	0xFDB
 24419                           fsr2h	equ	0xFDA
 24420                           fsr2l	equ	0xFD9
 24421                           status	equ	0xFD8
 24422                           
 24423 ;; *************** function _PrepareSessionKeys *****************
 24424 ;; Defined at:
 24425 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24426 ;; Parameters:    Size  Location     Type
 24427 ;;  sessionKey      2   11[BANK0 ] PTR unsigned char 
 24428 ;;		 -> loRa.activationParameters(105), loRa(245), 
 24429 ;;  appNonce        2   13[BANK0 ] PTR unsigned char 
 24430 ;;		 -> adcResult(4), ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24431 ;;  networkId       2   15[BANK0 ] PTR unsigned char 
 24432 ;;		 -> adcResult(4), ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24433 ;; Auto vars:     Size  Location     Type
 24434 ;;  index           1   17[BANK0 ] unsigned char 
 24435 ;; Return value:  Size  Location     Type
 24436 ;;                  1    wreg      void 
 24437 ;; Registers used:
 24438 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24439 ;; Tracked objects:
 24440 ;;		On entry : 0/0
 24441 ;;		On exit  : 0/0
 24442 ;;		Unchanged: 0/0
 24443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24444 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24447 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24448 ;;Total ram usage:        7 bytes
 24449 ;; Hardware stack levels used:    1
 24450 ;; Hardware stack levels required when called:    8
 24451 ;; This function calls:
 24452 ;;		_memcpy
 24453 ;;		_memset
 24454 ;; This function is called by:
 24455 ;;		_ComputeSessionKeys
 24456 ;; This function uses a non-reentrant model
 24457 ;;
 24458                           
 24459                           	psect	text118
 24460  006FFA                     __ptext118:
 24461                           	opt stack 0
 24462  006FFA                     _PrepareSessionKeys:
 24463                           	opt stack 17
 24464                           
 24465                           ;lorawan.c: 2047: uint8_t index = 0;
 24466                           
 24467                           ;incstack = 0
 24468  006FFA  0E00               	movlw	0
 24469  006FFC  0100               	movlb	0	; () banked
 24470  006FFE  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 24471                           
 24472                           ; BSR set to: 0
 24473                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 24474  007000  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 24475  007002  0D01               	mullw	1
 24476  007004  50F3               	movf	prodl,w,c
 24477  007006  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24478  007008  6F60               	movwf	memset@p1& (0+255),b
 24479  00700A  50F4               	movf	prodh,w,c
 24480  00700C  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24481  00700E  6F61               	movwf	(memset@p1+1)& (0+255),b
 24482  007010  0E00               	movlw	0
 24483  007012  6F63               	movwf	(memset@c+1)& (0+255),b
 24484  007014  0E00               	movlw	0
 24485  007016  6F62               	movwf	memset@c& (0+255),b
 24486  007018  0E00               	movlw	0
 24487  00701A  6F65               	movwf	(memset@n+1)& (0+255),b
 24488  00701C  0E10               	movlw	16
 24489  00701E  6F64               	movwf	memset@n& (0+255),b
 24490  007020  EC45  F045         	call	_memset	;wreg free
 24491                           
 24492                           ;lorawan.c: 2050: index ++;
 24493  007024  0100               	movlb	0	; () banked
 24494  007026  2B71               	incf	PrepareSessionKeys@index& (0+255),f,b
 24495                           
 24496                           ; BSR set to: 0
 24497                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 24498  007028  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 24499  00702A  0D01               	mullw	1
 24500  00702C  50F3               	movf	prodl,w,c
 24501  00702E  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24502  007030  6F60               	movwf	memcpy@d1& (0+255),b
 24503  007032  50F4               	movf	prodh,w,c
 24504  007034  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24505  007036  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24506  007038  C06D  F062         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 24507  00703C  C06E  F063         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 24508  007040  0E00               	movlw	0
 24509  007042  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24510  007044  0E03               	movlw	3
 24511  007046  6F64               	movwf	memcpy@n& (0+255),b
 24512  007048  EC6C  F03F         	call	_memcpy	;wreg free
 24513                           
 24514                           ;lorawan.c: 2053: index = index + 3;
 24515  00704C  0100               	movlb	0	; () banked
 24516  00704E  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 24517  007050  0F03               	addlw	3
 24518  007052  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 24519                           
 24520                           ; BSR set to: 0
 24521                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 24522  007054  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 24523  007056  0D01               	mullw	1
 24524  007058  50F3               	movf	prodl,w,c
 24525  00705A  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24526  00705C  6F60               	movwf	memcpy@d1& (0+255),b
 24527  00705E  50F4               	movf	prodh,w,c
 24528  007060  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24529  007062  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24530  007064  C06F  F062         	movff	PrepareSessionKeys@networkId,memcpy@s1
 24531  007068  C070  F063         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 24532  00706C  0E00               	movlw	0
 24533  00706E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24534  007070  0E03               	movlw	3
 24535  007072  6F64               	movwf	memcpy@n& (0+255),b
 24536  007074  EC6C  F03F         	call	_memcpy	;wreg free
 24537                           
 24538                           ;lorawan.c: 2056: index = index + 3;
 24539  007078  0100               	movlb	0	; () banked
 24540  00707A  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 24541  00707C  0F03               	addlw	3
 24542  00707E  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 24543                           
 24544                           ; BSR set to: 0
 24545                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 24546  007080  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 24547  007082  0D01               	mullw	1
 24548  007084  50F3               	movf	prodl,w,c
 24549  007086  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24550  007088  6F60               	movwf	memcpy@d1& (0+255),b
 24551  00708A  50F4               	movf	prodh,w,c
 24552  00708C  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24553  00708E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24554  007090  0ED2               	movlw	low (_loRa+210)
 24555  007092  6F62               	movwf	memcpy@s1& (0+255),b
 24556  007094  0E02               	movlw	high (_loRa+210)
 24557  007096  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24558  007098  0E00               	movlw	0
 24559  00709A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24560  00709C  0E02               	movlw	2
 24561  00709E  6F64               	movwf	memcpy@n& (0+255),b
 24562  0070A0  EC6C  F03F         	call	_memcpy	;wreg free
 24563  0070A4  0012               	return		;funcret
 24564  0070A6                     __end_of_PrepareSessionKeys:
 24565                           	opt stack 0
 24566                           tosu	equ	0xFFF
 24567                           tosh	equ	0xFFE
 24568                           tosl	equ	0xFFD
 24569                           pclath	equ	0xFFA
 24570                           tblptru	equ	0xFF8
 24571                           tblptrh	equ	0xFF7
 24572                           tblptrl	equ	0xFF6
 24573                           tablat	equ	0xFF5
 24574                           prodh	equ	0xFF4
 24575                           prodl	equ	0xFF3
 24576                           intcon	equ	0xFF2
 24577                           intcon2	equ	0xFF1
 24578                           intcon3	equ	0xFF0
 24579                           indf0	equ	0xFEF
 24580                           postinc0	equ	0xFEE
 24581                           fsr0h	equ	0xFEA
 24582                           fsr0l	equ	0xFE9
 24583                           wreg	equ	0xFE8
 24584                           postinc1	equ	0xFE6
 24585                           postdec1	equ	0xFE5
 24586                           plusw1	equ	0xFE3
 24587                           fsr1h	equ	0xFE2
 24588                           fsr1l	equ	0xFE1
 24589                           indf2	equ	0xFDF
 24590                           postinc2	equ	0xFDE
 24591                           postdec2	equ	0xFDD
 24592                           plusw2	equ	0xFDB
 24593                           fsr2h	equ	0xFDA
 24594                           fsr2l	equ	0xFD9
 24595                           status	equ	0xFD8
 24596                           
 24597 ;; *************** function _CheckMcastFlags *****************
 24598 ;; Defined at:
 24599 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24600 ;; Parameters:    Size  Location     Type
 24601 ;;  hdr             2    0[BANK0 ] PTR struct .
 24602 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24603 ;; Auto vars:     Size  Location     Type
 24604 ;;		None
 24605 ;; Return value:  Size  Location     Type
 24606 ;;                  1    wreg      unsigned char 
 24607 ;; Registers used:
 24608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24609 ;; Tracked objects:
 24610 ;;		On entry : 0/0
 24611 ;;		On exit  : 0/0
 24612 ;;		Unchanged: 0/0
 24613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24617 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24618 ;;Total ram usage:        2 bytes
 24619 ;; Hardware stack levels used:    1
 24620 ;; Hardware stack levels required when called:    7
 24621 ;; This function calls:
 24622 ;;		Nothing
 24623 ;; This function is called by:
 24624 ;;		_LORAWAN_RxDone
 24625 ;; This function uses a non-reentrant model
 24626 ;;
 24627                           
 24628                           	psect	text119
 24629  00780C                     __ptext119:
 24630                           	opt stack 0
 24631  00780C                     _CheckMcastFlags:
 24632                           	opt stack 19
 24633                           
 24634                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 24635                           
 24636                           ;incstack = 0
 24637  00780C  0100               	movlb	0	; () banked
 24638  00780E  EE20 F005          	lfsr	2,5
 24639  007812  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24640  007814  26D9               	addwf	fsr2l,f,c
 24641  007816  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24642  007818  22DA               	addwfc	fsr2h,f,c
 24643  00781A  BADF               	btfsc	indf2,5,c
 24644  00781C  D012               	goto	u18110
 24645                           
 24646                           ; BSR set to: 0
 24647  00781E  EE20 F005          	lfsr	2,5
 24648  007822  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24649  007824  26D9               	addwf	fsr2l,f,c
 24650  007826  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24651  007828  22DA               	addwfc	fsr2h,f,c
 24652  00782A  BCDF               	btfsc	indf2,6,c
 24653  00782C  D00A               	goto	u18110
 24654                           
 24655                           ; BSR set to: 0
 24656  00782E  C060  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 24657  007832  C061  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 24658  007836  38DF               	swapf	223,w,c
 24659  007838  32E8               	rrcf	wreg,f,c
 24660  00783A  0B07               	andlw	7
 24661  00783C  0A03               	xorlw	3
 24662  00783E  B4D8               	btfsc	status,2,c
 24663  007840  D002               	goto	l2120
 24664  007842                     u18110:
 24665                           
 24666                           ; BSR set to: 0
 24667                           ;lorawan.c: 2110: {
 24668                           ;lorawan.c: 2111: return 0;
 24669                           
 24670                           ; BSR set to: 0
 24671  007842  0E00               	movlw	0
 24672                           
 24673                           ; BSR set to: 0
 24674  007844  0012               	return	
 24675  007846                     l2120:
 24676                           
 24677                           ; BSR set to: 0
 24678                           ;lorawan.c: 2112: }
 24679                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 24680                           
 24681                           ; BSR set to: 0
 24682  007846  EE20 F005          	lfsr	2,5
 24683  00784A  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24684  00784C  26D9               	addwf	fsr2l,f,c
 24685  00784E  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24686  007850  22DA               	addwfc	fsr2h,f,c
 24687  007852  50DF               	movf	223,w,c
 24688  007854  0B0F               	andlw	15
 24689  007856  0900               	iorlw	0
 24690  007858  B4D8               	btfsc	status,2,c
 24691  00785A  D002               	goto	l2124
 24692                           
 24693                           ; BSR set to: 0
 24694                           ;lorawan.c: 2115: {
 24695                           ;lorawan.c: 2116: return 0;
 24696  00785C  0E00               	movlw	0
 24697                           
 24698                           ; BSR set to: 0
 24699  00785E  0012               	return	
 24700  007860                     l2124:
 24701                           
 24702                           ; BSR set to: 0
 24703                           ;lorawan.c: 2118: else
 24704                           ;lorawan.c: 2119: {
 24705                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 24706                           
 24707                           ; BSR set to: 0
 24708  007860  EE20 F008          	lfsr	2,8
 24709  007864  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24710  007866  26D9               	addwf	fsr2l,f,c
 24711  007868  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24712  00786A  22DA               	addwfc	fsr2h,f,c
 24713  00786C  50DF               	movf	indf2,w,c
 24714  00786E  A4D8               	btfss	status,2,c
 24715  007870  D002               	goto	l2126
 24716                           
 24717                           ; BSR set to: 0
 24718                           ;lorawan.c: 2121: {
 24719                           ;lorawan.c: 2122: return 0;
 24720  007872  0E00               	movlw	0
 24721                           
 24722                           ; BSR set to: 0
 24723  007874  0012               	return	
 24724  007876                     l2126:
 24725                           
 24726                           ; BSR set to: 0
 24727                           ;lorawan.c: 2123: }
 24728                           ;lorawan.c: 2124: }
 24729                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 24730                           
 24731                           ; BSR set to: 0
 24732                           
 24733                           ; BSR set to: 0
 24734  007876  EE20 F005          	lfsr	2,5
 24735  00787A  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24736  00787C  26D9               	addwf	fsr2l,f,c
 24737  00787E  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24738  007880  22DA               	addwfc	fsr2h,f,c
 24739  007882  A8DF               	btfss	indf2,4,c
 24740  007884  D002               	goto	l2127
 24741                           
 24742                           ; BSR set to: 0
 24743                           ;lorawan.c: 2127: {
 24744                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 24745  007886  0102               	movlb	2	; () banked
 24746  007888  8700               	bsf	_loRa& (0+255),3,b
 24747  00788A                     l2127:
 24748                           
 24749                           ;lorawan.c: 2129: }
 24750                           ;lorawan.c: 2131: return 1;
 24751                           
 24752                           ; BSR set to: 2
 24753  00788A  0E01               	movlw	1
 24754  00788C  0012               	return	
 24755  00788E                     __end_of_CheckMcastFlags:
 24756                           	opt stack 0
 24757                           tosu	equ	0xFFF
 24758                           tosh	equ	0xFFE
 24759                           tosl	equ	0xFFD
 24760                           pclath	equ	0xFFA
 24761                           tblptru	equ	0xFF8
 24762                           tblptrh	equ	0xFF7
 24763                           tblptrl	equ	0xFF6
 24764                           tablat	equ	0xFF5
 24765                           prodh	equ	0xFF4
 24766                           prodl	equ	0xFF3
 24767                           intcon	equ	0xFF2
 24768                           intcon2	equ	0xFF1
 24769                           intcon3	equ	0xFF0
 24770                           indf0	equ	0xFEF
 24771                           postinc0	equ	0xFEE
 24772                           fsr0h	equ	0xFEA
 24773                           fsr0l	equ	0xFE9
 24774                           wreg	equ	0xFE8
 24775                           postinc1	equ	0xFE6
 24776                           postdec1	equ	0xFE5
 24777                           plusw1	equ	0xFE3
 24778                           fsr1h	equ	0xFE2
 24779                           fsr1l	equ	0xFE1
 24780                           indf2	equ	0xFDF
 24781                           postinc2	equ	0xFDE
 24782                           postdec2	equ	0xFDD
 24783                           plusw2	equ	0xFDB
 24784                           fsr2h	equ	0xFDA
 24785                           fsr2l	equ	0xFD9
 24786                           status	equ	0xFD8
 24787                           
 24788 ;; *************** function _CheckFlags *****************
 24789 ;; Defined at:
 24790 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24791 ;; Parameters:    Size  Location     Type
 24792 ;;  hdr             2    0[BANK0 ] PTR struct .
 24793 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24794 ;; Auto vars:     Size  Location     Type
 24795 ;;		None
 24796 ;; Return value:  Size  Location     Type
 24797 ;;                  1    wreg      void 
 24798 ;; Registers used:
 24799 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24800 ;; Tracked objects:
 24801 ;;		On entry : 0/0
 24802 ;;		On exit  : 0/0
 24803 ;;		Unchanged: 0/0
 24804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24805 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24808 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24809 ;;Total ram usage:        2 bytes
 24810 ;; Hardware stack levels used:    1
 24811 ;; Hardware stack levels required when called:    7
 24812 ;; This function calls:
 24813 ;;		Nothing
 24814 ;; This function is called by:
 24815 ;;		_LORAWAN_RxDone
 24816 ;; This function uses a non-reentrant model
 24817 ;;
 24818                           
 24819                           	psect	text120
 24820  007FF4                     __ptext120:
 24821                           	opt stack 0
 24822  007FF4                     _CheckFlags:
 24823                           	opt stack 19
 24824                           
 24825                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 24826                           
 24827                           ;incstack = 0
 24828  007FF4  0100               	movlb	0	; () banked
 24829  007FF6  EE20 F005          	lfsr	2,5
 24830  007FFA  5160               	movf	CheckFlags@hdr& (0+255),w,b
 24831  007FFC  26D9               	addwf	fsr2l,f,c
 24832  007FFE  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 24833  008000  22DA               	addwfc	fsr2h,f,c
 24834  008002  AEDF               	btfss	indf2,7,c
 24835  008004  D002               	goto	l2113
 24836                           
 24837                           ; BSR set to: 0
 24838                           ;lorawan.c: 2077: {
 24839                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 24840  008006  0102               	movlb	2	; () banked
 24841  008008  8D02               	bsf	(_loRa+2)& (0+255),6,b
 24842  00800A                     l2113:
 24843                           
 24844                           ;lorawan.c: 2079: }
 24845                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 24846                           
 24847                           ; BSR set to: 2
 24848  00800A  0100               	movlb	0	; () banked
 24849  00800C  EE20 F005          	lfsr	2,5
 24850  008010  5160               	movf	CheckFlags@hdr& (0+255),w,b
 24851  008012  26D9               	addwf	fsr2l,f,c
 24852  008014  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 24853  008016  22DA               	addwfc	fsr2h,f,c
 24854  008018  A8DF               	btfss	indf2,4,c
 24855  00801A  D002               	goto	l2114
 24856                           
 24857                           ; BSR set to: 0
 24858                           ;lorawan.c: 2082: {
 24859                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 24860  00801C  0102               	movlb	2	; () banked
 24861  00801E  8700               	bsf	_loRa& (0+255),3,b
 24862  008020                     l2114:
 24863                           
 24864                           ;lorawan.c: 2084: }
 24865                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 24866                           
 24867                           ; BSR set to: 2
 24868  008020  0100               	movlb	0	; () banked
 24869  008022  EE20 F005          	lfsr	2,5
 24870  008026  5160               	movf	CheckFlags@hdr& (0+255),w,b
 24871  008028  26D9               	addwf	fsr2l,f,c
 24872  00802A  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 24873  00802C  22DA               	addwfc	fsr2h,f,c
 24874  00802E  ACDF               	btfss	indf2,6,c
 24875  008030  D002               	goto	l2115
 24876                           
 24877                           ; BSR set to: 0
 24878                           ;lorawan.c: 2087: {
 24879                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 24880  008032  0102               	movlb	2	; () banked
 24881  008034  8900               	bsf	_loRa& (0+255),4,b
 24882  008036                     l2115:
 24883                           
 24884                           ;lorawan.c: 2089: }
 24885                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 24886                           
 24887                           ; BSR set to: 2
 24888  008036  C060  FFD9         	movff	CheckFlags@hdr,fsr2l
 24889  00803A  C061  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 24890  00803E  0100               	movlb	0	; () banked
 24891  008040  38DF               	swapf	223,w,c
 24892  008042  32E8               	rrcf	wreg,f,c
 24893  008044  0B07               	andlw	7
 24894  008046  0A05               	xorlw	5
 24895  008048  A4D8               	btfss	status,2,c
 24896  00804A  0012               	return	
 24897                           
 24898                           ; BSR set to: 0
 24899                           ;lorawan.c: 2092: {
 24900                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 24901  00804C  0102               	movlb	2	; () banked
 24902  00804E  8300               	bsf	_loRa& (0+255),1,b
 24903  008050  0012               	return	
 24904  008052                     __end_of_CheckFlags:
 24905                           	opt stack 0
 24906                           tosu	equ	0xFFF
 24907                           tosh	equ	0xFFE
 24908                           tosl	equ	0xFFD
 24909                           pclath	equ	0xFFA
 24910                           tblptru	equ	0xFF8
 24911                           tblptrh	equ	0xFF7
 24912                           tblptrl	equ	0xFF6
 24913                           tablat	equ	0xFF5
 24914                           prodh	equ	0xFF4
 24915                           prodl	equ	0xFF3
 24916                           intcon	equ	0xFF2
 24917                           intcon2	equ	0xFF1
 24918                           intcon3	equ	0xFF0
 24919                           indf0	equ	0xFEF
 24920                           postinc0	equ	0xFEE
 24921                           fsr0h	equ	0xFEA
 24922                           fsr0l	equ	0xFE9
 24923                           wreg	equ	0xFE8
 24924                           postinc1	equ	0xFE6
 24925                           postdec1	equ	0xFE5
 24926                           plusw1	equ	0xFE3
 24927                           fsr1h	equ	0xFE2
 24928                           fsr1l	equ	0xFE1
 24929                           indf2	equ	0xFDF
 24930                           postinc2	equ	0xFDE
 24931                           postdec2	equ	0xFDD
 24932                           plusw2	equ	0xFDB
 24933                           fsr2h	equ	0xFDA
 24934                           fsr2l	equ	0xFD9
 24935                           status	equ	0xFD8
 24936                           
 24937 ;; *************** function _RADIO_FSKPacketSent *****************
 24938 ;; Defined at:
 24939 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24940 ;; Parameters:    Size  Location     Type
 24941 ;;		None
 24942 ;; Auto vars:     Size  Location     Type
 24943 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
 24944 ;;  irqFlags        1  143[BANK0 ] unsigned char 
 24945 ;; Return value:  Size  Location     Type
 24946 ;;                  1    wreg      void 
 24947 ;; Registers used:
 24948 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24949 ;; Tracked objects:
 24950 ;;		On entry : 0/0
 24951 ;;		On exit  : 0/0
 24952 ;;		Unchanged: 0/0
 24953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24955 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24956 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24957 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24958 ;;Total ram usage:       13 bytes
 24959 ;; Hardware stack levels used:    1
 24960 ;; Hardware stack levels required when called:   15
 24961 ;; This function calls:
 24962 ;;		_LORAWAN_TxDone
 24963 ;;		_RADIO_RegisterRead
 24964 ;;		_RADIO_WriteMode
 24965 ;;		_SwTimerReadValue
 24966 ;;		_SwTimerStop
 24967 ;;		___lmul
 24968 ;; This function is called by:
 24969 ;;		_RADIO_DIO0
 24970 ;; This function uses a non-reentrant model
 24971 ;;
 24972                           
 24973                           	psect	text121
 24974  0059B2                     __ptext121:
 24975                           	opt stack 0
 24976  0059B2                     _RADIO_FSKPacketSent:
 24977                           	opt stack 13
 24978                           
 24979                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 24980                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 24981                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 24982                           
 24983                           ;incstack = 0
 24984  0059B2  0E3F               	movlw	63
 24985  0059B4  ECA4  F046         	call	_RADIO_RegisterRead
 24986  0059B8  0100               	movlb	0	; () banked
 24987  0059BA  6FEF               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 24988                           
 24989                           ; BSR set to: 0
 24990                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 24991  0059BC  A7EF               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 24992  0059BE  0012               	return	
 24993                           
 24994                           ; BSR set to: 0
 24995                           ;radio_driver_SX1276.c: 1100: {
 24996                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 24997  0059C0  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 24998  0059C4  0E00               	movlw	0
 24999  0059C6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25000  0059C8  0E00               	movlw	0
 25001  0059CA  EC28  F030         	call	_RADIO_WriteMode
 25002                           
 25003                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 25004  0059CE  0101               	movlb	1	; () banked
 25005  0059D0  9144               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 25006                           
 25007                           ; BSR set to: 1
 25008                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 25009  0059D2  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25010  0059D4  ECB8  F046         	call	_SwTimerStop
 25011                           
 25012                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 25013  0059D8  0101               	movlb	1	; () banked
 25014  0059DA  B944               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 25015  0059DC  0012               	return	
 25016                           
 25017                           ; BSR set to: 1
 25018                           ;radio_driver_SX1276.c: 1107: {
 25019                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 25020  0059DE  5148               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25021  0059E0  EC07  F044         	call	_SwTimerReadValue
 25022  0059E4  0100               	movlb	0	; () banked
 25023  0059E6  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 25024  0059E8  E108               	bnz	u19820
 25025  0059EA  0E1F               	movlw	31
 25026  0059EC  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
 25027  0059EE  0EAC               	movlw	172
 25028  0059F0  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 25029  0059F2  0EDF               	movlw	223
 25030  0059F4  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 25031  0059F6  A0D8               	btfss	status,0,c
 25032  0059F8  D021               	goto	l580
 25033  0059FA                     u19820:
 25034                           
 25035                           ; BSR set to: 0
 25036  0059FA  0101               	movlb	1	; () banked
 25037  0059FC  5148               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25038  0059FE  EC07  F044         	call	_SwTimerReadValue
 25039  005A02  0E0D               	movlw	13
 25040  005A04  D006               	goto	u19830
 25041  005A06                     u19835:
 25042  005A06  0100               	movlb	0	; () banked
 25043  005A08  90D8               	bcf	status,0,c
 25044  005A0A  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 25045  005A0C  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 25046  005A0E  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 25047  005A10  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
 25048  005A12                     u19830:
 25049  005A12  2EE8               	decfsz	wreg,f,c
 25050  005A14  D7F8               	goto	u19835
 25051  005A16  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 25052  005A1A  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 25053  005A1E  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 25054  005A22  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 25055  005A26  0E7D               	movlw	125
 25056  005A28  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 25057  005A2A  0E00               	movlw	0
 25058  005A2C  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25059  005A2E  0E00               	movlw	0
 25060  005A30  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25061  005A32  0E00               	movlw	0
 25062  005A34  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25063  005A36  ECB1  F040         	call	___lmul	;wreg free
 25064  005A3A  D021               	goto	L14
 25065  005A3C                     l580:
 25066  005A3C  0101               	movlb	1	; () banked
 25067  005A3E  5148               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25068  005A40  EC07  F044         	call	_SwTimerReadValue
 25069  005A44  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 25070  005A48  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 25071  005A4C  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 25072  005A50  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 25073  005A54  0E7D               	movlw	125
 25074  005A56  0100               	movlb	0	; () banked
 25075  005A58  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 25076  005A5A  0E00               	movlw	0
 25077  005A5C  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25078  005A5E  0E00               	movlw	0
 25079  005A60  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25080  005A62  0E00               	movlw	0
 25081  005A64  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25082  005A66  ECB1  F040         	call	___lmul	;wreg free
 25083  005A6A  0E0D               	movlw	13
 25084  005A6C  D006               	goto	u19840
 25085  005A6E                     u19845:
 25086  005A6E  0100               	movlb	0	; () banked
 25087  005A70  90D8               	bcf	status,0,c
 25088  005A72  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 25089  005A74  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 25090  005A76  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 25091  005A78  339A               	rrcf	?___lmul& (0+255),f,b
 25092  005A7A                     u19840:
 25093  005A7A  2EE8               	decfsz	wreg,f,c
 25094  005A7C  D7F8               	goto	u19845
 25095  005A7E                     L14:
 25096  005A7E  C09A  F0EB         	movff	?___lmul,_RADIO_FSKPacketSent$793
 25097  005A82  C09B  F0EC         	movff	?___lmul+1,_RADIO_FSKPacketSent$793+1
 25098  005A86  C09C  F0ED         	movff	?___lmul+2,_RADIO_FSKPacketSent$793+2
 25099  005A8A  C09D  F0EE         	movff	?___lmul+3,_RADIO_FSKPacketSent$793+3
 25100                           
 25101                           ; BSR set to: 0
 25102  005A8E  C0EB  F0E3         	movff	_RADIO_FSKPacketSent$793,??_RADIO_FSKPacketSent
 25103  005A92  C0EC  F0E4         	movff	_RADIO_FSKPacketSent$793+1,??_RADIO_FSKPacketSent+1
 25104  005A96  C0ED  F0E5         	movff	_RADIO_FSKPacketSent$793+2,??_RADIO_FSKPacketSent+2
 25105  005A9A  C0EE  F0E6         	movff	_RADIO_FSKPacketSent$793+3,??_RADIO_FSKPacketSent+3
 25106  005A9E  0100               	movlb	0	; () banked
 25107  005AA0  1FE3               	comf	??_RADIO_FSKPacketSent& (0+255),f,b
 25108  005AA2  1FE4               	comf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 25109  005AA4  1FE5               	comf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 25110  005AA6  1FE6               	comf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 25111  005AA8  2BE3               	incf	??_RADIO_FSKPacketSent& (0+255),f,b
 25112  005AAA  0E00               	movlw	0
 25113  005AAC  23E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 25114  005AAE  23E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 25115  005AB0  23E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 25116  005AB2  0E20               	movlw	32
 25117  005AB4  25E3               	addwf	??_RADIO_FSKPacketSent& (0+255),w,b
 25118  005AB6  6FE7               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 25119  005AB8  0E4E               	movlw	78
 25120  005ABA  21E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),w,b
 25121  005ABC  6FE8               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 25122  005ABE  0E00               	movlw	0
 25123  005AC0  21E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),w,b
 25124  005AC2  6FE9               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 25125  005AC4  0E00               	movlw	0
 25126  005AC6  21E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),w,b
 25127  005AC8  6FEA               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 25128                           
 25129                           ; BSR set to: 0
 25130                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 25131  005ACA  0101               	movlb	1	; () banked
 25132  005ACC  5148               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25133  005ACE  ECB8  F046         	call	_SwTimerStop
 25134                           
 25135                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 25136  005AD2  C0E7  F0BB         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 25137  005AD6  C0E8  F0BC         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 25138  005ADA  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
 25139  005ADE  0012               	return	
 25140  005AE0                     __end_of_RADIO_FSKPacketSent:
 25141                           	opt stack 0
 25142                           tosu	equ	0xFFF
 25143                           tosh	equ	0xFFE
 25144                           tosl	equ	0xFFD
 25145                           pclath	equ	0xFFA
 25146                           tblptru	equ	0xFF8
 25147                           tblptrh	equ	0xFF7
 25148                           tblptrl	equ	0xFF6
 25149                           tablat	equ	0xFF5
 25150                           prodh	equ	0xFF4
 25151                           prodl	equ	0xFF3
 25152                           intcon	equ	0xFF2
 25153                           intcon2	equ	0xFF1
 25154                           intcon3	equ	0xFF0
 25155                           indf0	equ	0xFEF
 25156                           postinc0	equ	0xFEE
 25157                           fsr0h	equ	0xFEA
 25158                           fsr0l	equ	0xFE9
 25159                           wreg	equ	0xFE8
 25160                           postinc1	equ	0xFE6
 25161                           postdec1	equ	0xFE5
 25162                           plusw1	equ	0xFE3
 25163                           fsr1h	equ	0xFE2
 25164                           fsr1l	equ	0xFE1
 25165                           indf2	equ	0xFDF
 25166                           postinc2	equ	0xFDE
 25167                           postdec2	equ	0xFDD
 25168                           plusw2	equ	0xFDB
 25169                           fsr2h	equ	0xFDA
 25170                           fsr2l	equ	0xFD9
 25171                           status	equ	0xFD8
 25172                           
 25173 ;; *************** function _LORAWAN_TxDone *****************
 25174 ;; Defined at:
 25175 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25176 ;; Parameters:    Size  Location     Type
 25177 ;;  timeOnAir       2   91[BANK0 ] unsigned int 
 25178 ;; Auto vars:     Size  Location     Type
 25179 ;;  minim           4  126[BANK0 ] unsigned long 
 25180 ;;  ticks           4  122[BANK0 ] unsigned long 
 25181 ;;  delta           4  114[BANK0 ] unsigned long 
 25182 ;;  i               1  130[BANK0 ] unsigned char 
 25183 ;;  found           1  113[BANK0 ] unsigned char 
 25184 ;; Return value:  Size  Location     Type
 25185 ;;                  1    wreg      void 
 25186 ;; Registers used:
 25187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25188 ;; Tracked objects:
 25189 ;;		On entry : 0/0
 25190 ;;		On exit  : 0/0
 25191 ;;		Unchanged: 0/0
 25192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25193 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25194 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25195 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25196 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25197 ;;Total ram usage:       40 bytes
 25198 ;; Hardware stack levels used:    1
 25199 ;; Hardware stack levels required when called:   14
 25200 ;; This function calls:
 25201 ;;		_LORAWAN_EnterContinuousReceive
 25202 ;;		_RADIO_GetStatus
 25203 ;;		_RxData
 25204 ;;		_SwTimerIsRunning
 25205 ;;		_SwTimerReadValue
 25206 ;;		_SwTimerSetTimeout
 25207 ;;		_SwTimerStart
 25208 ;;		_SwTimerStop
 25209 ;;		___lldiv
 25210 ;;		___lmul
 25211 ;; This function is called by:
 25212 ;;		_RADIO_TxDone
 25213 ;;		_RADIO_FSKPacketSent
 25214 ;;		_RADIO_WatchdogTimeout
 25215 ;; This function uses a non-reentrant model
 25216 ;;
 25217                           
 25218                           	psect	text122
 25219  000D2C                     __ptext122:
 25220                           	opt stack 0
 25221  000D2C                     _LORAWAN_TxDone:
 25222                           	opt stack 13
 25223                           
 25224                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 25225                           
 25226                           ;incstack = 0
 25227  000D2C  0102               	movlb	2	; () banked
 25228  000D2E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 25229  000D30  D3A2               	goto	l1028
 25230                           
 25231                           ; BSR set to: 2
 25232                           ;lorawan_eu.c: 368: {
 25233                           ;lorawan_eu.c: 369: bool found = 0;
 25234  000D32  0E00               	movlw	0
 25235  000D34  0100               	movlb	0	; () banked
 25236  000D36  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 25237                           
 25238                           ;lorawan_eu.c: 370: uint8_t i;
 25239                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 25240  000D38  0E00               	movlw	0
 25241  000D3A  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 25242  000D3C  0E00               	movlw	0
 25243  000D3E  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 25244  000D40  0E00               	movlw	0
 25245  000D42  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 25246  000D44  0E00               	movlw	0
 25247  000D46  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 25248                           
 25249                           ; BSR set to: 0
 25250  000D48  69DE               	setf	LORAWAN_TxDone@minim& (0+255),b
 25251  000D4A  69DF               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 25252  000D4C  69E0               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 25253  000D4E  69E1               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 25254                           
 25255                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 25256  000D50  0E00               	movlw	0
 25257  000D52  0102               	movlb	2	; () banked
 25258  000D54  6FF1               	movwf	(_loRa+241)& (0+255),b
 25259                           
 25260                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 25261  000D56  5102               	movf	(_loRa+2)& (0+255),w,b
 25262  000D58  0BF0               	andlw	-16
 25263  000D5A  0902               	iorlw	2
 25264  000D5C  6F02               	movwf	(_loRa+2)& (0+255),b
 25265                           
 25266                           ; BSR set to: 2
 25267                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 25268  000D5E  C2DA  F0E2         	movff	_loRa+218,LORAWAN_TxDone@i
 25269                           
 25270                           ; BSR set to: 2
 25271                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 25272  000D62  A500               	btfss	_loRa& (0+255),2,b
 25273  000D64  D0BA               	goto	l1029
 25274                           
 25275                           ; BSR set to: 2
 25276                           ;lorawan_eu.c: 382: {
 25277                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 25278  000D66  5117               	movf	(_loRa+23)& (0+255),w,b
 25279  000D68  0D01               	mullw	1
 25280  000D6A  0E49               	movlw	low _rxWindowOffset
 25281  000D6C  24F3               	addwf	prodl,w,c
 25282  000D6E  6EF6               	movwf	tblptrl,c
 25283  000D70  0EFF               	movlw	high _rxWindowOffset
 25284  000D72  20F4               	addwfc	prodh,w,c
 25285  000D74  6EF7               	movwf	tblptrh,c
 25286  000D76                     	if	1	;There are 3 active tblptr bytes
 25287  000D76  6AF8               	clrf	tblptru,c
 25288  000D78  0E00               	movlw	low (__mediumconst shr (0+16))
 25289  000D7A  22F8               	addwfc	tblptru,f,c
 25290  000D7C                     	endif
 25291  000D7C  0008               	tblrd		*
 25292  000D7E  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 25293  000D82  5198               	movf	(_loRa+152)& (0+255),w,b
 25294  000D84  0100               	movlb	0	; () banked
 25295  000D86  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25296  000D88  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 25297  000D8A  0E00               	movlw	0
 25298  000D8C  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 25299  000D8E  0EFF               	movlw	255
 25300  000D90  0102               	movlb	2	; () banked
 25301  000D92  2199               	addwfc	(_loRa+153)& (0+255),w,b
 25302  000D94  0100               	movlb	0	; () banked
 25303  000D96  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25304  000D98  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 25305  000D9A  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25306  000D9C  0E0C               	movlw	12
 25307  000D9E                     u19325:
 25308  000D9E  90D8               	bcf	status,0,c
 25309  000DA0  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25310  000DA2  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25311  000DA4  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25312  000DA6  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25313  000DA8  2EE8               	decfsz	wreg,f,c
 25314  000DAA  D7F9               	goto	u19325
 25315  000DAC  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 25316  000DB0  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 25317  000DB4  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 25318  000DB8  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 25319  000DBC  0E7D               	movlw	125
 25320  000DBE  6F64               	movwf	___lldiv@divisor& (0+255),b
 25321  000DC0  0E00               	movlw	0
 25322  000DC2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 25323  000DC4  0E00               	movlw	0
 25324  000DC6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 25325  000DC8  0E00               	movlw	0
 25326  000DCA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 25327  000DCC  ECC4  F03B         	call	___lldiv	;wreg free
 25328  000DD0  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25329  000DD4  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25330  000DD8  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25331  000DDC  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25332  000DE0  0102               	movlb	2	; () banked
 25333  000DE2  51E2               	movf	(_loRa+226)& (0+255),w,b
 25334  000DE4  EC62  F043         	call	_SwTimerSetTimeout
 25335                           
 25336                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 25337  000DE8  0102               	movlb	2	; () banked
 25338  000DEA  511C               	movf	(_loRa+28)& (0+255),w,b
 25339  000DEC  0D01               	mullw	1
 25340  000DEE  0E49               	movlw	low _rxWindowOffset
 25341  000DF0  24F3               	addwf	prodl,w,c
 25342  000DF2  6EF6               	movwf	tblptrl,c
 25343  000DF4  0EFF               	movlw	high _rxWindowOffset
 25344  000DF6  20F4               	addwfc	prodh,w,c
 25345  000DF8  6EF7               	movwf	tblptrh,c
 25346  000DFA                     	if	1	;There are 3 active tblptr bytes
 25347  000DFA  6AF8               	clrf	tblptru,c
 25348  000DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 25349  000DFE  22F8               	addwfc	tblptru,f,c
 25350  000E00                     	endif
 25351  000E00  0008               	tblrd		*
 25352  000E02  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 25353  000E06  519A               	movf	(_loRa+154)& (0+255),w,b
 25354  000E08  0100               	movlb	0	; () banked
 25355  000E0A  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25356  000E0C  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 25357  000E0E  0E00               	movlw	0
 25358  000E10  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 25359  000E12  0EFF               	movlw	255
 25360  000E14  0102               	movlb	2	; () banked
 25361  000E16  219B               	addwfc	(_loRa+155)& (0+255),w,b
 25362  000E18  0100               	movlb	0	; () banked
 25363  000E1A  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25364  000E1C  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 25365  000E1E  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25366  000E20  0E0C               	movlw	12
 25367  000E22                     u19335:
 25368  000E22  90D8               	bcf	status,0,c
 25369  000E24  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25370  000E26  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25371  000E28  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25372  000E2A  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25373  000E2C  2EE8               	decfsz	wreg,f,c
 25374  000E2E  D7F9               	goto	u19335
 25375  000E30  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 25376  000E34  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 25377  000E38  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 25378  000E3C  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 25379  000E40  0E7D               	movlw	125
 25380  000E42  6F64               	movwf	___lldiv@divisor& (0+255),b
 25381  000E44  0E00               	movlw	0
 25382  000E46  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 25383  000E48  0E00               	movlw	0
 25384  000E4A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 25385  000E4C  0E00               	movlw	0
 25386  000E4E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 25387  000E50  ECC4  F03B         	call	___lldiv	;wreg free
 25388  000E54  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25389  000E58  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25390  000E5C  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25391  000E60  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25392  000E64  0102               	movlb	2	; () banked
 25393  000E66  51E3               	movf	(_loRa+227)& (0+255),w,b
 25394  000E68  EC62  F043         	call	_SwTimerSetTimeout
 25395                           
 25396                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 25397  000E6C  0102               	movlb	2	; () banked
 25398  000E6E  51E2               	movf	(_loRa+226)& (0+255),w,b
 25399  000E70  EC4B  F039         	call	_SwTimerStart
 25400                           
 25401                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 25402  000E74  0102               	movlb	2	; () banked
 25403  000E76  51E3               	movf	(_loRa+227)& (0+255),w,b
 25404  000E78  EC4B  F039         	call	_SwTimerStart
 25405                           
 25406                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 25407  000E7C  C2DB  F09A         	movff	_loRa+219,___lmul@multiplier
 25408  000E80  C2DC  F09B         	movff	_loRa+220,___lmul@multiplier+1
 25409  000E84  0100               	movlb	0	; () banked
 25410  000E86  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 25411  000E88  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 25412  000E8A  0ED6               	movlw	214
 25413  000E8C  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 25414  000E8E  0E0B               	movlw	11
 25415  000E90  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25416  000E92  0E00               	movlw	0
 25417  000E94  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25418  000E96  0E00               	movlw	0
 25419  000E98  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25420  000E9A  ECB1  F040         	call	___lmul	;wreg free
 25421  000E9E  0EFF               	movlw	255
 25422  000EA0  0100               	movlb	0	; () banked
 25423  000EA2  259A               	addwf	?___lmul& (0+255),w,b
 25424  000EA4  6FD6               	movwf	_LORAWAN_TxDone$5616& (0+255),b
 25425  000EA6  0EFF               	movlw	255
 25426  000EA8  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 25427  000EAA  6FD7               	movwf	(_LORAWAN_TxDone$5616+1)& (0+255),b
 25428  000EAC  0EFF               	movlw	255
 25429  000EAE  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 25430  000EB0  6FD8               	movwf	(_LORAWAN_TxDone$5616+2)& (0+255),b
 25431  000EB2  0EFF               	movlw	255
 25432  000EB4  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 25433  000EB6  6FD9               	movwf	(_LORAWAN_TxDone$5616+3)& (0+255),b
 25434                           
 25435                           ; BSR set to: 0
 25436                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 25437  000EB8  C0D6  F09A         	movff	_LORAWAN_TxDone$5616,___lmul@multiplier
 25438  000EBC  C0D7  F09B         	movff	_LORAWAN_TxDone$5616+1,___lmul@multiplier+1
 25439  000EC0  C0D8  F09C         	movff	_LORAWAN_TxDone$5616+2,___lmul@multiplier+2
 25440  000EC4  C0D9  F09D         	movff	_LORAWAN_TxDone$5616+3,___lmul@multiplier+3
 25441  000EC8  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 25442  000ECC  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 25443  000ED0  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 25444  000ED2  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 25445  000ED4  ECB1  F040         	call	___lmul	;wreg free
 25446  000ED8  D0D7               	goto	L15
 25447  000EDA                     l1029:
 25448                           
 25449                           ;lorawan_eu.c: 390: else
 25450                           ;lorawan_eu.c: 391: {
 25451                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 25452                           
 25453                           ; BSR set to: 0
 25454  000EDA  0102               	movlb	2	; () banked
 25455  000EDC  5117               	movf	(_loRa+23)& (0+255),w,b
 25456  000EDE  0D01               	mullw	1
 25457  000EE0  0E49               	movlw	low _rxWindowOffset
 25458  000EE2  24F3               	addwf	prodl,w,c
 25459  000EE4  6EF6               	movwf	tblptrl,c
 25460  000EE6  0EFF               	movlw	high _rxWindowOffset
 25461  000EE8  20F4               	addwfc	prodh,w,c
 25462  000EEA  6EF7               	movwf	tblptrh,c
 25463  000EEC                     	if	1	;There are 3 active tblptr bytes
 25464  000EEC  6AF8               	clrf	tblptru,c
 25465  000EEE  0E00               	movlw	low (__mediumconst shr (0+16))
 25466  000EF0  22F8               	addwfc	tblptru,f,c
 25467  000EF2                     	endif
 25468  000EF2  0008               	tblrd		*
 25469  000EF4  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 25470  000EF8  5194               	movf	(_loRa+148)& (0+255),w,b
 25471  000EFA  0100               	movlb	0	; () banked
 25472  000EFC  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25473  000EFE  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 25474  000F00  0E00               	movlw	0
 25475  000F02  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 25476  000F04  0EFF               	movlw	255
 25477  000F06  0102               	movlb	2	; () banked
 25478  000F08  2195               	addwfc	(_loRa+149)& (0+255),w,b
 25479  000F0A  0100               	movlb	0	; () banked
 25480  000F0C  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25481  000F0E  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 25482  000F10  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25483  000F12  0E0C               	movlw	12
 25484  000F14                     u19345:
 25485  000F14  90D8               	bcf	status,0,c
 25486  000F16  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25487  000F18  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25488  000F1A  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25489  000F1C  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25490  000F1E  2EE8               	decfsz	wreg,f,c
 25491  000F20  D7F9               	goto	u19345
 25492  000F22  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 25493  000F26  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 25494  000F2A  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 25495  000F2E  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 25496  000F32  0E7D               	movlw	125
 25497  000F34  6F64               	movwf	___lldiv@divisor& (0+255),b
 25498  000F36  0E00               	movlw	0
 25499  000F38  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 25500  000F3A  0E00               	movlw	0
 25501  000F3C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 25502  000F3E  0E00               	movlw	0
 25503  000F40  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 25504  000F42  ECC4  F03B         	call	___lldiv	;wreg free
 25505  000F46  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25506  000F4A  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25507  000F4E  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25508  000F52  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25509  000F56  0102               	movlb	2	; () banked
 25510  000F58  51E4               	movf	(_loRa+228)& (0+255),w,b
 25511  000F5A  EC62  F043         	call	_SwTimerSetTimeout
 25512                           
 25513                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 25514  000F5E  0102               	movlb	2	; () banked
 25515  000F60  511C               	movf	(_loRa+28)& (0+255),w,b
 25516  000F62  0D01               	mullw	1
 25517  000F64  0E49               	movlw	low _rxWindowOffset
 25518  000F66  24F3               	addwf	prodl,w,c
 25519  000F68  6EF6               	movwf	tblptrl,c
 25520  000F6A  0EFF               	movlw	high _rxWindowOffset
 25521  000F6C  20F4               	addwfc	prodh,w,c
 25522  000F6E  6EF7               	movwf	tblptrh,c
 25523  000F70                     	if	1	;There are 3 active tblptr bytes
 25524  000F70  6AF8               	clrf	tblptru,c
 25525  000F72  0E00               	movlw	low (__mediumconst shr (0+16))
 25526  000F74  22F8               	addwfc	tblptru,f,c
 25527  000F76                     	endif
 25528  000F76  0008               	tblrd		*
 25529  000F78  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 25530  000F7C  5196               	movf	(_loRa+150)& (0+255),w,b
 25531  000F7E  0100               	movlb	0	; () banked
 25532  000F80  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25533  000F82  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 25534  000F84  0E00               	movlw	0
 25535  000F86  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 25536  000F88  0EFF               	movlw	255
 25537  000F8A  0102               	movlb	2	; () banked
 25538  000F8C  2197               	addwfc	(_loRa+151)& (0+255),w,b
 25539  000F8E  0100               	movlb	0	; () banked
 25540  000F90  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25541  000F92  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 25542  000F94  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25543  000F96  0E0C               	movlw	12
 25544  000F98                     u19355:
 25545  000F98  90D8               	bcf	status,0,c
 25546  000F9A  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25547  000F9C  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25548  000F9E  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25549  000FA0  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25550  000FA2  2EE8               	decfsz	wreg,f,c
 25551  000FA4  D7F9               	goto	u19355
 25552  000FA6  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 25553  000FAA  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 25554  000FAE  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 25555  000FB2  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 25556  000FB6  0E7D               	movlw	125
 25557  000FB8  6F64               	movwf	___lldiv@divisor& (0+255),b
 25558  000FBA  0E00               	movlw	0
 25559  000FBC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 25560  000FBE  0E00               	movlw	0
 25561  000FC0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 25562  000FC2  0E00               	movlw	0
 25563  000FC4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 25564  000FC6  ECC4  F03B         	call	___lldiv	;wreg free
 25565  000FCA  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25566  000FCE  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25567  000FD2  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25568  000FD6  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25569  000FDA  0102               	movlb	2	; () banked
 25570  000FDC  51E5               	movf	(_loRa+229)& (0+255),w,b
 25571  000FDE  EC62  F043         	call	_SwTimerSetTimeout
 25572                           
 25573                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 25574  000FE2  0102               	movlb	2	; () banked
 25575  000FE4  51E4               	movf	(_loRa+228)& (0+255),w,b
 25576  000FE6  EC4B  F039         	call	_SwTimerStart
 25577                           
 25578                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 25579  000FEA  0102               	movlb	2	; () banked
 25580  000FEC  5112               	movf	(_loRa+18)& (0+255),w,b
 25581  000FEE  A4D8               	btfss	status,2,c
 25582  000FF0  D003               	goto	l1031
 25583                           
 25584                           ; BSR set to: 2
 25585                           ;lorawan_eu.c: 396: {
 25586                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 25587  000FF2  51E5               	movf	(_loRa+229)& (0+255),w,b
 25588  000FF4  EC4B  F039         	call	_SwTimerStart
 25589  000FF8                     l1031:
 25590                           
 25591                           ;lorawan_eu.c: 398: }
 25592                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 25593  000FF8  0100               	movlb	0	; () banked
 25594  000FFA  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25595  000FFC  0D0E               	mullw	14
 25596  000FFE  0E06               	movlw	6
 25597  001000  26F3               	addwf	prodl,f,c
 25598  001002  0E00               	movlw	0
 25599  001004  22F4               	addwfc	prodh,f,c
 25600  001006  0E00               	movlw	low _Channels
 25601  001008  24F3               	addwf	prodl,w,c
 25602  00100A  6ED9               	movwf	fsr2l,c
 25603  00100C  0E04               	movlw	high _Channels
 25604  00100E  20F4               	addwfc	prodh,w,c
 25605  001010  6EDA               	movwf	fsr2h,c
 25606  001012  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 25607  001016  CFDD F0BE          	movff	postdec2,??_LORAWAN_TxDone+1
 25608  00101A  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 25609  00101C  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25610  00101E  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 25611  001020  6FC0               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 25612  001022  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25613  001024  6BC2               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 25614  001026  0E01               	movlw	1
 25615  001028  25BF               	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 25616  00102A  6F9A               	movwf	___lmul@multiplier& (0+255),b
 25617  00102C  0E00               	movlw	0
 25618  00102E  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 25619  001030  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 25620  001032  0E00               	movlw	0
 25621  001034  21C1               	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 25622  001036  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 25623  001038  0E00               	movlw	0
 25624  00103A  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 25625  00103C  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 25626  00103E  C2DB  F09E         	movff	_loRa+219,___lmul@multiplicand
 25627  001042  C2DC  F09F         	movff	_loRa+220,___lmul@multiplicand+1
 25628  001046  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 25629  001048  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 25630  00104A  ECB1  F040         	call	___lmul	;wreg free
 25631  00104E  0EFF               	movlw	255
 25632  001050  0100               	movlb	0	; () banked
 25633  001052  259A               	addwf	?___lmul& (0+255),w,b
 25634  001054  6FD6               	movwf	_LORAWAN_TxDone$5616& (0+255),b
 25635  001056  0EFF               	movlw	255
 25636  001058  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 25637  00105A  6FD7               	movwf	(_LORAWAN_TxDone$5616+1)& (0+255),b
 25638  00105C  0EFF               	movlw	255
 25639  00105E  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 25640  001060  6FD8               	movwf	(_LORAWAN_TxDone$5616+2)& (0+255),b
 25641  001062  0EFF               	movlw	255
 25642  001064  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 25643  001066  6FD9               	movwf	(_LORAWAN_TxDone$5616+3)& (0+255),b
 25644                           
 25645                           ;lorawan_eu.c: 398: }
 25646                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 25647  001068  C0D6  F09A         	movff	_LORAWAN_TxDone$5616,___lmul@multiplier
 25648  00106C  C0D7  F09B         	movff	_LORAWAN_TxDone$5616+1,___lmul@multiplier+1
 25649  001070  C0D8  F09C         	movff	_LORAWAN_TxDone$5616+2,___lmul@multiplier+2
 25650  001074  C0D9  F09D         	movff	_LORAWAN_TxDone$5616+3,___lmul@multiplier+3
 25651  001078  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 25652  00107C  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 25653  001080  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 25654  001082  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 25655  001084  ECB1  F040         	call	___lmul	;wreg free
 25656  001088                     L15:
 25657  001088  0100               	movlb	0	; () banked
 25658  00108A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25659  00108C  0D0E               	mullw	14
 25660  00108E  0E08               	movlw	8
 25661  001090  26F3               	addwf	prodl,f,c
 25662  001092  0E00               	movlw	0
 25663  001094  22F4               	addwfc	prodh,f,c
 25664  001096  0E00               	movlw	low _Channels
 25665  001098  24F3               	addwf	prodl,w,c
 25666  00109A  6ED9               	movwf	fsr2l,c
 25667  00109C  0E04               	movlw	high _Channels
 25668  00109E  20F4               	addwfc	prodh,w,c
 25669  0010A0  6EDA               	movwf	fsr2h,c
 25670  0010A2  C09A  FFDE         	movff	?___lmul,postinc2
 25671  0010A6  C09B  FFDE         	movff	?___lmul+1,postinc2
 25672  0010AA  C09C  FFDE         	movff	?___lmul+2,postinc2
 25673  0010AE  C09D  FFDE         	movff	?___lmul+3,postinc2
 25674                           
 25675                           ; BSR set to: 0
 25676                           ;lorawan_eu.c: 401: }
 25677                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 25678  0010B2  0102               	movlb	2	; () banked
 25679  0010B4  51E9               	movf	(_loRa+233)& (0+255),w,b
 25680  0010B6  EC3E  F046         	call	_SwTimerIsRunning
 25681  0010BA  0900               	iorlw	0
 25682  0010BC  B4D8               	btfsc	status,2,c
 25683  0010BE  D08A               	goto	l1032
 25684                           
 25685                           ;lorawan_eu.c: 404: {
 25686                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 25687  0010C0  0102               	movlb	2	; () banked
 25688  0010C2  51E9               	movf	(_loRa+233)& (0+255),w,b
 25689  0010C4  ECB8  F046         	call	_SwTimerStop
 25690                           
 25691                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 25692  0010C8  0102               	movlb	2	; () banked
 25693  0010CA  51E9               	movf	(_loRa+233)& (0+255),w,b
 25694  0010CC  EC07  F044         	call	_SwTimerReadValue
 25695  0010D0  C091  F0DA         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 25696  0010D4  C092  F0DB         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 25697  0010D8  C093  F0DC         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 25698  0010DC  C094  F0DD         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 25699                           
 25700                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 25701  0010E0  0100               	movlb	0	; () banked
 25702  0010E2  51DD               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 25703  0010E4  E108               	bnz	u19380
 25704  0010E6  0E1F               	movlw	31
 25705  0010E8  5DDA               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 25706  0010EA  0EAC               	movlw	172
 25707  0010EC  59DB               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 25708  0010EE  0EDF               	movlw	223
 25709  0010F0  59DC               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 25710  0010F2  A0D8               	btfss	status,0,c
 25711  0010F4  D024               	goto	l1034
 25712  0010F6                     u19380:
 25713                           
 25714                           ; BSR set to: 0
 25715  0010F6  C0DA  F0BD         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 25716  0010FA  C0DB  F0BE         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 25717  0010FE  C0DC  F0BF         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 25718  001102  C0DD  F0C0         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 25719  001106  0E0D               	movlw	13
 25720  001108  D005               	goto	u19390
 25721  00110A                     u19395:
 25722  00110A  90D8               	bcf	status,0,c
 25723  00110C  33C0               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25724  00110E  33BF               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25725  001110  33BE               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25726  001112  33BD               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 25727  001114                     u19390:
 25728  001114  2EE8               	decfsz	wreg,f,c
 25729  001116  D7F9               	goto	u19395
 25730  001118  C0BD  F09A         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 25731  00111C  C0BE  F09B         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 25732  001120  C0BF  F09C         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 25733  001124  C0C0  F09D         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 25734  001128  0E7D               	movlw	125
 25735  00112A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 25736  00112C  0E00               	movlw	0
 25737  00112E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25738  001130  0E00               	movlw	0
 25739  001132  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25740  001134  0E00               	movlw	0
 25741  001136  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25742  001138  ECB1  F040         	call	___lmul	;wreg free
 25743  00113C  D01D               	goto	L16
 25744  00113E                     l1034:
 25745  00113E  C0DA  F09A         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 25746  001142  C0DB  F09B         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 25747  001146  C0DC  F09C         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 25748  00114A  C0DD  F09D         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 25749  00114E  0E7D               	movlw	125
 25750  001150  0100               	movlb	0	; () banked
 25751  001152  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 25752  001154  0E00               	movlw	0
 25753  001156  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25754  001158  0E00               	movlw	0
 25755  00115A  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25756  00115C  0E00               	movlw	0
 25757  00115E  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25758  001160  ECB1  F040         	call	___lmul	;wreg free
 25759  001164  0E0D               	movlw	13
 25760  001166  D006               	goto	u19400
 25761  001168                     u19405:
 25762  001168  0100               	movlb	0	; () banked
 25763  00116A  90D8               	bcf	status,0,c
 25764  00116C  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 25765  00116E  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 25766  001170  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 25767  001172  339A               	rrcf	?___lmul& (0+255),f,b
 25768  001174                     u19400:
 25769  001174  2EE8               	decfsz	wreg,f,c
 25770  001176  D7F8               	goto	u19405
 25771  001178                     L16:
 25772  001178  C09A  F0C9         	movff	?___lmul,_LORAWAN_TxDone$1666
 25773  00117C  C09B  F0CA         	movff	?___lmul+1,_LORAWAN_TxDone$1666+1
 25774  001180  C09C  F0CB         	movff	?___lmul+2,_LORAWAN_TxDone$1666+2
 25775  001184  C09D  F0CC         	movff	?___lmul+3,_LORAWAN_TxDone$1666+3
 25776                           
 25777                           ; BSR set to: 0
 25778  001188  C0C9  F0BD         	movff	_LORAWAN_TxDone$1666,??_LORAWAN_TxDone
 25779  00118C  C0CA  F0BE         	movff	_LORAWAN_TxDone$1666+1,??_LORAWAN_TxDone+1
 25780  001190  C0CB  F0BF         	movff	_LORAWAN_TxDone$1666+2,??_LORAWAN_TxDone+2
 25781  001194  C0CC  F0C0         	movff	_LORAWAN_TxDone$1666+3,??_LORAWAN_TxDone+3
 25782  001198  0100               	movlb	0	; () banked
 25783  00119A  1FBD               	comf	??_LORAWAN_TxDone& (0+255),f,b
 25784  00119C  1FBE               	comf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25785  00119E  1FBF               	comf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25786  0011A0  1FC0               	comf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25787  0011A2  2BBD               	incf	??_LORAWAN_TxDone& (0+255),f,b
 25788  0011A4  0E00               	movlw	0
 25789  0011A6  23BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25790  0011A8  23BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25791  0011AA  23C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25792  0011AC  0102               	movlb	2	; () banked
 25793  0011AE  51C8               	movf	(_loRa+200)& (0+255),w,b
 25794  0011B0  0100               	movlb	0	; () banked
 25795  0011B2  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25796  0011B4  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 25797  0011B6  0102               	movlb	2	; () banked
 25798  0011B8  51C9               	movf	(_loRa+201)& (0+255),w,b
 25799  0011BA  0100               	movlb	0	; () banked
 25800  0011BC  21BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),w,b
 25801  0011BE  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 25802  0011C0  0102               	movlb	2	; () banked
 25803  0011C2  51CA               	movf	(_loRa+202)& (0+255),w,b
 25804  0011C4  0100               	movlb	0	; () banked
 25805  0011C6  21BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),w,b
 25806  0011C8  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 25807  0011CA  0102               	movlb	2	; () banked
 25808  0011CC  51CB               	movf	(_loRa+203)& (0+255),w,b
 25809  0011CE  0100               	movlb	0	; () banked
 25810  0011D0  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 25811  0011D2  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 25812  0011D4                     l1032:
 25813                           
 25814                           ;lorawan_eu.c: 409: }
 25815                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 25816                           
 25817                           ; BSR set to: 0
 25818  0011D4  0E00               	movlw	0
 25819  0011D6  0100               	movlb	0	; () banked
 25820  0011D8  6FE2               	movwf	LORAWAN_TxDone@i& (0+255),b
 25821  0011DA                     l16217:
 25822                           
 25823                           ; BSR set to: 0
 25824  0011DA  0E0F               	movlw	15
 25825  0011DC  65E2               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 25826  0011DE  D001               	goto	l1037
 25827  0011E0  D0D4               	goto	u19480
 25828  0011E2                     l1037:
 25829                           
 25830                           ; BSR set to: 0
 25831                           ;lorawan_eu.c: 412: {
 25832                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 25833                           
 25834                           ; BSR set to: 0
 25835  0011E2  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25836  0011E4  0D0E               	mullw	14
 25837  0011E6  0E04               	movlw	4
 25838  0011E8  26F3               	addwf	prodl,f,c
 25839  0011EA  0E00               	movlw	0
 25840  0011EC  22F4               	addwfc	prodh,f,c
 25841  0011EE  0E00               	movlw	low _Channels
 25842  0011F0  24F3               	addwf	prodl,w,c
 25843  0011F2  6ED9               	movwf	fsr2l,c
 25844  0011F4  0E04               	movlw	high _Channels
 25845  0011F6  20F4               	addwfc	prodh,w,c
 25846  0011F8  6EDA               	movwf	fsr2h,c
 25847  0011FA  04DE               	decf	postinc2,w,c
 25848  0011FC  A4D8               	btfss	status,2,c
 25849  0011FE  D0C3               	goto	l1043
 25850                           
 25851                           ; BSR set to: 0
 25852  001200  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25853  001202  0D0E               	mullw	14
 25854  001204  0E08               	movlw	8
 25855  001206  26F3               	addwf	prodl,f,c
 25856  001208  0E00               	movlw	0
 25857  00120A  22F4               	addwfc	prodh,f,c
 25858  00120C  0E00               	movlw	low _Channels
 25859  00120E  24F3               	addwf	prodl,w,c
 25860  001210  6ED9               	movwf	fsr2l,c
 25861  001212  0E04               	movlw	high _Channels
 25862  001214  20F4               	addwfc	prodh,w,c
 25863  001216  6EDA               	movwf	fsr2h,c
 25864  001218  50DE               	movf	postinc2,w,c
 25865  00121A  10DE               	iorwf	postinc2,w,c
 25866  00121C  10DE               	iorwf	postinc2,w,c
 25867  00121E  10DE               	iorwf	postinc2,w,c
 25868  001220  B4D8               	btfsc	status,2,c
 25869  001222  D0B1               	goto	l1043
 25870                           
 25871                           ; BSR set to: 0
 25872                           ;lorawan_eu.c: 414: {
 25873                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 25874  001224  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25875  001226  0102               	movlb	2	; () banked
 25876  001228  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 25877  00122A  B4D8               	btfsc	status,2,c
 25878  00122C  D06D               	goto	l1042
 25879                           
 25880                           ; BSR set to: 2
 25881                           ;lorawan_eu.c: 416: {
 25882                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 25883  00122E  0100               	movlb	0	; () banked
 25884  001230  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25885  001232  0D0E               	mullw	14
 25886  001234  0E08               	movlw	8
 25887  001236  26F3               	addwf	prodl,f,c
 25888  001238  0E00               	movlw	0
 25889  00123A  22F4               	addwfc	prodh,f,c
 25890  00123C  0E00               	movlw	low _Channels
 25891  00123E  24F3               	addwf	prodl,w,c
 25892  001240  6ED9               	movwf	fsr2l,c
 25893  001242  0E04               	movlw	high _Channels
 25894  001244  20F4               	addwfc	prodh,w,c
 25895  001246  6EDA               	movwf	fsr2h,c
 25896  001248  50DE               	movf	postinc2,w,c
 25897  00124A  5DD2               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 25898  00124C  50DE               	movf	postinc2,w,c
 25899  00124E  59D3               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 25900  001250  50DE               	movf	postinc2,w,c
 25901  001252  59D4               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 25902  001254  50DE               	movf	postinc2,w,c
 25903  001256  59D5               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 25904  001258  B0D8               	btfsc	status,0,c
 25905  00125A  D046               	goto	l1041
 25906                           
 25907                           ; BSR set to: 0
 25908                           ;lorawan_eu.c: 418: {
 25909                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 25910  00125C  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25911  00125E  0D0E               	mullw	14
 25912  001260  0E08               	movlw	8
 25913  001262  26F3               	addwf	prodl,f,c
 25914  001264  0E00               	movlw	0
 25915  001266  22F4               	addwfc	prodh,f,c
 25916  001268  0E00               	movlw	low _Channels
 25917  00126A  24F3               	addwf	prodl,w,c
 25918  00126C  6ED9               	movwf	fsr2l,c
 25919  00126E  0E04               	movlw	high _Channels
 25920  001270  20F4               	addwfc	prodh,w,c
 25921  001272  6EDA               	movwf	fsr2h,c
 25922  001274  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 25923  001278  CFDE F0BE          	movff	postinc2,??_LORAWAN_TxDone+1
 25924  00127C  CFDE F0BF          	movff	postinc2,??_LORAWAN_TxDone+2
 25925  001280  CFDE F0C0          	movff	postinc2,??_LORAWAN_TxDone+3
 25926  001284  C0D2  F0C1         	movff	LORAWAN_TxDone@delta,??_LORAWAN_TxDone+4
 25927  001288  C0D3  F0C2         	movff	LORAWAN_TxDone@delta+1,??_LORAWAN_TxDone+5
 25928  00128C  C0D4  F0C3         	movff	LORAWAN_TxDone@delta+2,??_LORAWAN_TxDone+6
 25929  001290  C0D5  F0C4         	movff	LORAWAN_TxDone@delta+3,??_LORAWAN_TxDone+7
 25930  001294  1FC1               	comf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25931  001296  1FC2               	comf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 25932  001298  1FC3               	comf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 25933  00129A  1FC4               	comf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 25934  00129C  2BC1               	incf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25935  00129E  0E00               	movlw	0
 25936  0012A0  23C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),f,b
 25937  0012A2  23C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 25938  0012A4  23C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 25939  0012A6  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 25940  0012A8  25C1               	addwf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 25941  0012AA  6FC5               	movwf	(??_LORAWAN_TxDone+8)& (0+255),b
 25942  0012AC  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 25943  0012AE  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 25944  0012B0  6FC6               	movwf	(??_LORAWAN_TxDone+9)& (0+255),b
 25945  0012B2  51BF               	movf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 25946  0012B4  21C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),w,b
 25947  0012B6  6FC7               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 25948  0012B8  51C0               	movf	(??_LORAWAN_TxDone+3)& (0+255),w,b
 25949  0012BA  21C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 25950  0012BC  6FC8               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 25951  0012BE  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25952  0012C0  0D0E               	mullw	14
 25953  0012C2  0E08               	movlw	8
 25954  0012C4  26F3               	addwf	prodl,f,c
 25955  0012C6  0E00               	movlw	0
 25956  0012C8  22F4               	addwfc	prodh,f,c
 25957  0012CA  0E00               	movlw	low _Channels
 25958  0012CC  24F3               	addwf	prodl,w,c
 25959  0012CE  6ED9               	movwf	fsr2l,c
 25960  0012D0  0E04               	movlw	high _Channels
 25961  0012D2  20F4               	addwfc	prodh,w,c
 25962  0012D4  6EDA               	movwf	fsr2h,c
 25963  0012D6  C0C5  FFDE         	movff	??_LORAWAN_TxDone+8,postinc2
 25964  0012DA  C0C6  FFDE         	movff	??_LORAWAN_TxDone+9,postinc2
 25965  0012DE  C0C7  FFDE         	movff	??_LORAWAN_TxDone+10,postinc2
 25966  0012E2  C0C8  FFDE         	movff	??_LORAWAN_TxDone+11,postinc2
 25967                           
 25968                           ;lorawan_eu.c: 420: }
 25969  0012E6  D010               	goto	l1042
 25970  0012E8                     l1041:
 25971                           
 25972                           ; BSR set to: 0
 25973                           ;lorawan_eu.c: 421: else
 25974                           ;lorawan_eu.c: 422: {
 25975                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 25976                           
 25977                           ; BSR set to: 0
 25978  0012E8  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25979  0012EA  0D0E               	mullw	14
 25980  0012EC  0E08               	movlw	8
 25981  0012EE  26F3               	addwf	prodl,f,c
 25982  0012F0  0E00               	movlw	0
 25983  0012F2  22F4               	addwfc	prodh,f,c
 25984  0012F4  0E00               	movlw	low _Channels
 25985  0012F6  24F3               	addwf	prodl,w,c
 25986  0012F8  6ED9               	movwf	fsr2l,c
 25987  0012FA  0E04               	movlw	high _Channels
 25988  0012FC  20F4               	addwfc	prodh,w,c
 25989  0012FE  6EDA               	movwf	fsr2h,c
 25990  001300  6ADE               	clrf	postinc2,c
 25991  001302  6ADE               	clrf	postinc2,c
 25992  001304  6ADE               	clrf	postinc2,c
 25993  001306  6ADD               	clrf	postdec2,c
 25994  001308                     l1042:
 25995                           
 25996                           ;lorawan_eu.c: 424: }
 25997                           ;lorawan_eu.c: 425: }
 25998                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 25999                           
 26000                           ; BSR set to: 0
 26001  001308  0100               	movlb	0	; () banked
 26002  00130A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 26003  00130C  0D0E               	mullw	14
 26004  00130E  0E08               	movlw	8
 26005  001310  26F3               	addwf	prodl,f,c
 26006  001312  0E00               	movlw	0
 26007  001314  22F4               	addwfc	prodh,f,c
 26008  001316  0E00               	movlw	low _Channels
 26009  001318  24F3               	addwf	prodl,w,c
 26010  00131A  6ED9               	movwf	fsr2l,c
 26011  00131C  0E04               	movlw	high _Channels
 26012  00131E  20F4               	addwfc	prodh,w,c
 26013  001320  6EDA               	movwf	fsr2h,c
 26014  001322  50DE               	movf	postinc2,w,c
 26015  001324  5DDE               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 26016  001326  50DE               	movf	postinc2,w,c
 26017  001328  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 26018  00132A  50DE               	movf	postinc2,w,c
 26019  00132C  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 26020  00132E  50DE               	movf	postinc2,w,c
 26021  001330  59E1               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 26022  001332  A0D8               	btfss	status,0,c
 26023  001334  D028               	goto	l1043
 26024                           
 26025                           ; BSR set to: 0
 26026  001336  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 26027  001338  0D0E               	mullw	14
 26028  00133A  0E08               	movlw	8
 26029  00133C  26F3               	addwf	prodl,f,c
 26030  00133E  0E00               	movlw	0
 26031  001340  22F4               	addwfc	prodh,f,c
 26032  001342  0E00               	movlw	low _Channels
 26033  001344  24F3               	addwf	prodl,w,c
 26034  001346  6ED9               	movwf	fsr2l,c
 26035  001348  0E04               	movlw	high _Channels
 26036  00134A  20F4               	addwfc	prodh,w,c
 26037  00134C  6EDA               	movwf	fsr2h,c
 26038  00134E  50DE               	movf	postinc2,w,c
 26039  001350  10DE               	iorwf	postinc2,w,c
 26040  001352  10DE               	iorwf	postinc2,w,c
 26041  001354  10DE               	iorwf	postinc2,w,c
 26042  001356  B4D8               	btfsc	status,2,c
 26043  001358  D016               	goto	l1043
 26044                           
 26045                           ; BSR set to: 0
 26046                           ;lorawan_eu.c: 427: {
 26047                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 26048  00135A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 26049  00135C  0D0E               	mullw	14
 26050  00135E  0E08               	movlw	8
 26051  001360  26F3               	addwf	prodl,f,c
 26052  001362  0E00               	movlw	0
 26053  001364  22F4               	addwfc	prodh,f,c
 26054  001366  0E00               	movlw	low _Channels
 26055  001368  24F3               	addwf	prodl,w,c
 26056  00136A  6ED9               	movwf	fsr2l,c
 26057  00136C  0E04               	movlw	high _Channels
 26058  00136E  20F4               	addwfc	prodh,w,c
 26059  001370  6EDA               	movwf	fsr2h,c
 26060  001372  CFDE F0DE          	movff	postinc2,LORAWAN_TxDone@minim
 26061  001376  CFDE F0DF          	movff	postinc2,LORAWAN_TxDone@minim+1
 26062  00137A  CFDE F0E0          	movff	postinc2,LORAWAN_TxDone@minim+2
 26063  00137E  CFDE F0E1          	movff	postinc2,LORAWAN_TxDone@minim+3
 26064                           
 26065                           ; BSR set to: 0
 26066                           ;lorawan_eu.c: 429: found = 1;
 26067  001382  0E01               	movlw	1
 26068  001384  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 26069  001386                     l1043:
 26070                           
 26071                           ; BSR set to: 0
 26072                           
 26073                           ; BSR set to: 0
 26074                           
 26075                           ; BSR set to: 0
 26076  001386  2BE2               	incf	LORAWAN_TxDone@i& (0+255),f,b
 26077  001388  D728               	goto	l16217
 26078  00138A                     u19480:
 26079                           
 26080                           ; BSR set to: 0
 26081                           ;lorawan_eu.c: 430: }
 26082                           ;lorawan_eu.c: 431: }
 26083                           ;lorawan_eu.c: 432: }
 26084                           ;lorawan_eu.c: 433: if (found == 1)
 26085                           
 26086                           ; BSR set to: 0
 26087  00138A  05D1               	decf	LORAWAN_TxDone@found& (0+255),w,b
 26088  00138C  A4D8               	btfss	status,2,c
 26089  00138E  D067               	goto	l1044
 26090                           
 26091                           ; BSR set to: 0
 26092                           ;lorawan_eu.c: 434: {
 26093                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 26094  001390  C0DE  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 26095  001394  C0DF  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 26096  001398  C0E0  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 26097  00139C  C0E1  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 26098                           
 26099                           ; BSR set to: 0
 26100                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 26101  0013A0  51E1               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 26102  0013A2  E107               	bnz	u19500
 26103  0013A4  29DE               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 26104  0013A6  0EFF               	movlw	255
 26105  0013A8  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 26106  0013AA  0E0F               	movlw	15
 26107  0013AC  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 26108  0013AE  A0D8               	btfss	status,0,c
 26109  0013B0  D01C               	goto	l1046
 26110  0013B2                     u19500:
 26111                           
 26112                           ; BSR set to: 0
 26113  0013B2  C0DE  F060         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 26114  0013B6  C0DF  F061         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 26115  0013BA  C0E0  F062         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 26116  0013BE  C0E1  F063         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 26117  0013C2  0E7D               	movlw	125
 26118  0013C4  6F64               	movwf	___lldiv@divisor& (0+255),b
 26119  0013C6  0E00               	movlw	0
 26120  0013C8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 26121  0013CA  0E00               	movlw	0
 26122  0013CC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 26123  0013CE  0E00               	movlw	0
 26124  0013D0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 26125  0013D2  ECC4  F03B         	call	___lldiv	;wreg free
 26126  0013D6  0E0C               	movlw	12
 26127  0013D8                     u19515:
 26128  0013D8  90D8               	bcf	status,0,c
 26129  0013DA  0100               	movlb	0	; () banked
 26130  0013DC  3760               	rlcf	?___lldiv& (0+255),f,b
 26131  0013DE  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 26132  0013E0  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 26133  0013E2  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 26134  0013E4  2EE8               	decfsz	wreg,f,c
 26135  0013E6  D7F8               	goto	u19515
 26136  0013E8  D022               	goto	L17
 26137  0013EA                     l1046:
 26138                           
 26139                           ; BSR set to: 0
 26140                           
 26141                           ; BSR set to: 0
 26142  0013EA  C0DE  F0BD         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 26143  0013EE  C0DF  F0BE         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 26144  0013F2  C0E0  F0BF         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 26145  0013F6  C0E1  F0C0         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 26146  0013FA  0E0C               	movlw	12
 26147  0013FC                     u19525:
 26148  0013FC  90D8               	bcf	status,0,c
 26149  0013FE  37BD               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 26150  001400  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 26151  001402  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 26152  001404  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 26153  001406  2EE8               	decfsz	wreg,f,c
 26154  001408  D7F9               	goto	u19525
 26155  00140A  C0BD  F060         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 26156  00140E  C0BE  F061         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 26157  001412  C0BF  F062         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 26158  001416  C0C0  F063         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 26159  00141A  0E7D               	movlw	125
 26160  00141C  6F64               	movwf	___lldiv@divisor& (0+255),b
 26161  00141E  0E00               	movlw	0
 26162  001420  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 26163  001422  0E00               	movlw	0
 26164  001424  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 26165  001426  0E00               	movlw	0
 26166  001428  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 26167  00142A  ECC4  F03B         	call	___lldiv	;wreg free
 26168  00142E                     L17:
 26169  00142E  C060  F0CD         	movff	?___lldiv,_LORAWAN_TxDone$1667
 26170  001432  C061  F0CE         	movff	?___lldiv+1,_LORAWAN_TxDone$1667+1
 26171  001436  C062  F0CF         	movff	?___lldiv+2,_LORAWAN_TxDone$1667+2
 26172  00143A  C063  F0D0         	movff	?___lldiv+3,_LORAWAN_TxDone$1667+3
 26173  00143E  C0CD  F06D         	movff	_LORAWAN_TxDone$1667,SwTimerSetTimeout@timeout
 26174  001442  C0CE  F06E         	movff	_LORAWAN_TxDone$1667+1,SwTimerSetTimeout@timeout+1
 26175  001446  C0CF  F06F         	movff	_LORAWAN_TxDone$1667+2,SwTimerSetTimeout@timeout+2
 26176  00144A  C0D0  F070         	movff	_LORAWAN_TxDone$1667+3,SwTimerSetTimeout@timeout+3
 26177  00144E  0102               	movlb	2	; () banked
 26178  001450  51E9               	movf	(_loRa+233)& (0+255),w,b
 26179  001452  EC62  F043         	call	_SwTimerSetTimeout
 26180                           
 26181                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 26182  001456  0102               	movlb	2	; () banked
 26183  001458  51E9               	movf	(_loRa+233)& (0+255),w,b
 26184  00145A  EC4B  F039         	call	_SwTimerStart
 26185  00145E                     l1044:
 26186                           
 26187                           ;lorawan_eu.c: 438: }
 26188                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 26189  00145E  0E02               	movlw	2
 26190  001460  0102               	movlb	2	; () banked
 26191  001462  1912               	xorwf	(_loRa+18)& (0+255),w,b
 26192  001464  A4D8               	btfss	status,2,c
 26193  001466  0012               	return	
 26194                           
 26195                           ; BSR set to: 2
 26196                           ;lorawan_eu.c: 440: {
 26197                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 26198  001468  5102               	movf	(_loRa+2)& (0+255),w,b
 26199  00146A  0BF0               	andlw	-16
 26200  00146C  0908               	iorlw	8
 26201  00146E  6F02               	movwf	(_loRa+2)& (0+255),b
 26202                           
 26203                           ; BSR set to: 2
 26204                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 26205  001470  EC86  F03C         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 26206                           
 26207                           ;lorawan_eu.c: 443: }
 26208                           ;lorawan_eu.c: 444: }
 26209  001474  0012               	return	
 26210  001476                     l1028:
 26211                           
 26212                           ;lorawan_eu.c: 445: else
 26213                           ;lorawan_eu.c: 446: {
 26214                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 26215  001476  EC67  F049         	call	_RADIO_GetStatus	;wreg free
 26216  00147A  0100               	movlb	0	; () banked
 26217  00147C  6FBD               	movwf	??_LORAWAN_TxDone& (0+255),b
 26218  00147E  A9BD               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 26219  001480  D014               	goto	l1051
 26220                           
 26221                           ; BSR set to: 0
 26222                           ;lorawan_eu.c: 448: {
 26223                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 26224  001482  0E00               	movlw	0
 26225  001484  6F60               	movwf	RxData@pData& (0+255),b
 26226  001486  0E00               	movlw	0
 26227  001488  6F61               	movwf	(RxData@pData+1)& (0+255),b
 26228  00148A  0E00               	movlw	0
 26229  00148C  6F62               	movwf	RxData@dataLength& (0+255),b
 26230  00148E  0E02               	movlw	2
 26231  001490  6F63               	movwf	RxData@status& (0+255),b
 26232  001492  D801               	call	u19558
 26233  001494  0012               	return	
 26234  001496                     u19558:
 26235  001496  0005               	push	
 26236  001498  6EFA               	movwf	pclath,c
 26237  00149A  0101               	movlb	1	; () banked
 26238  00149C  5104               	movf	_rxPayload& (0+255),w,b
 26239  00149E  6EFD               	movwf	tosl,c
 26240  0014A0  5105               	movf	(_rxPayload+1)& (0+255),w,b
 26241  0014A2  6EFE               	movwf	tosh,c
 26242  0014A4  6AFF               	clrf	tosu,c
 26243  0014A6  50FA               	movf	pclath,w,c
 26244  0014A8  0012               	return		;indir
 26245  0014AA                     l1051:
 26246                           
 26247                           ;lorawan_eu.c: 452: else
 26248                           ;lorawan_eu.c: 453: {
 26249                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 26250  0014AA  0101               	movlb	1	; () banked
 26251  0014AC  5104               	movf	_rxPayload& (0+255),w,b
 26252  0014AE  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 26253  0014B0  B4D8               	btfsc	status,2,c
 26254  0014B2  0012               	return	
 26255                           
 26256                           ; BSR set to: 1
 26257                           ;lorawan_eu.c: 456: {
 26258                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 26259  0014B4  0E00               	movlw	0
 26260  0014B6  0100               	movlb	0	; () banked
 26261  0014B8  6F60               	movwf	RxData@pData& (0+255),b
 26262  0014BA  0E00               	movlw	0
 26263  0014BC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 26264  0014BE  0E00               	movlw	0
 26265  0014C0  6F62               	movwf	RxData@dataLength& (0+255),b
 26266  0014C2  0E03               	movlw	3
 26267  0014C4  6F63               	movwf	RxData@status& (0+255),b
 26268  0014C6  D801               	call	u19578
 26269  0014C8  0012               	return	
 26270  0014CA                     u19578:
 26271  0014CA  0005               	push	
 26272  0014CC  6EFA               	movwf	pclath,c
 26273  0014CE  0101               	movlb	1	; () banked
 26274  0014D0  5104               	movf	_rxPayload& (0+255),w,b
 26275  0014D2  6EFD               	movwf	tosl,c
 26276  0014D4  5105               	movf	(_rxPayload+1)& (0+255),w,b
 26277  0014D6  6EFE               	movwf	tosh,c
 26278  0014D8  6AFF               	clrf	tosu,c
 26279  0014DA  50FA               	movf	pclath,w,c
 26280  0014DC  0012               	return		;indir
 26281  0014DE                     __end_of_LORAWAN_TxDone:
 26282                           	opt stack 0
 26283                           tosu	equ	0xFFF
 26284                           tosh	equ	0xFFE
 26285                           tosl	equ	0xFFD
 26286                           pclath	equ	0xFFA
 26287                           tblptru	equ	0xFF8
 26288                           tblptrh	equ	0xFF7
 26289                           tblptrl	equ	0xFF6
 26290                           tablat	equ	0xFF5
 26291                           prodh	equ	0xFF4
 26292                           prodl	equ	0xFF3
 26293                           intcon	equ	0xFF2
 26294                           intcon2	equ	0xFF1
 26295                           intcon3	equ	0xFF0
 26296                           indf0	equ	0xFEF
 26297                           postinc0	equ	0xFEE
 26298                           fsr0h	equ	0xFEA
 26299                           fsr0l	equ	0xFE9
 26300                           wreg	equ	0xFE8
 26301                           postinc1	equ	0xFE6
 26302                           postdec1	equ	0xFE5
 26303                           plusw1	equ	0xFE3
 26304                           fsr1h	equ	0xFE2
 26305                           fsr1l	equ	0xFE1
 26306                           indf2	equ	0xFDF
 26307                           postinc2	equ	0xFDE
 26308                           postdec2	equ	0xFDD
 26309                           plusw2	equ	0xFDB
 26310                           fsr2h	equ	0xFDA
 26311                           fsr2l	equ	0xFD9
 26312                           status	equ	0xFD8
 26313                           
 26314 ;; *************** function _SwTimerReadValue *****************
 26315 ;; Defined at:
 26316 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 26317 ;; Parameters:    Size  Location     Type
 26318 ;;  timerId         1    wreg     unsigned char 
 26319 ;; Auto vars:     Size  Location     Type
 26320 ;;  timerId         1   57[BANK0 ] unsigned char 
 26321 ;;  ticksCount      4   53[BANK0 ] unsigned long 
 26322 ;; Return value:  Size  Location     Type
 26323 ;;                  4   49[BANK0 ] unsigned long 
 26324 ;; Registers used:
 26325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26326 ;; Tracked objects:
 26327 ;;		On entry : 0/0
 26328 ;;		On exit  : 0/0
 26329 ;;		Unchanged: 0/0
 26330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26331 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26332 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26334 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26335 ;;Total ram usage:        9 bytes
 26336 ;; Hardware stack levels used:    1
 26337 ;; Hardware stack levels required when called:   10
 26338 ;; This function calls:
 26339 ;;		_SwTimersInterrupt
 26340 ;; This function is called by:
 26341 ;;		_RADIO_TxDone
 26342 ;;		_RADIO_FSKPacketSent
 26343 ;;		_LORAWAN_TxDone
 26344 ;;		_LORAWAN_Pause
 26345 ;; This function uses a non-reentrant model
 26346 ;;
 26347                           
 26348                           	psect	text123
 26349  00880E                     __ptext123:
 26350                           	opt stack 0
 26351  00880E                     _SwTimerReadValue:
 26352                           	opt stack 16
 26353                           
 26354                           ;incstack = 0
 26355                           ;SwTimerReadValue@timerId stored from wreg
 26356  00880E  0100               	movlb	0	; () banked
 26357  008810  6F99               	movwf	SwTimerReadValue@timerId& (0+255),b
 26358                           
 26359                           ;sw_timer.c: 195: uint32_t ticksCount;
 26360                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 26361  008812  9EF2               	bcf	intcon,7,c	;volatile
 26362                           
 26363                           ;sw_timer.c: 200: SwTimersInterrupt();
 26364  008814  EC27  F02F         	call	_SwTimersInterrupt	;wreg free
 26365                           
 26366                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 26367  008818  0100               	movlb	0	; () banked
 26368  00881A  5199               	movf	SwTimerReadValue@timerId& (0+255),w,b
 26369  00881C  0D08               	mullw	8
 26370  00881E  0E00               	movlw	low _swTimers
 26371  008820  24F3               	addwf	prodl,w,c
 26372  008822  6ED9               	movwf	fsr2l,c
 26373  008824  0E03               	movlw	high _swTimers
 26374  008826  20F4               	addwfc	prodh,w,c
 26375  008828  6EDA               	movwf	fsr2h,c
 26376  00882A  CFDE F095          	movff	postinc2,SwTimerReadValue@ticksCount
 26377  00882E  CFDE F096          	movff	postinc2,SwTimerReadValue@ticksCount+1
 26378  008832  CFDE F097          	movff	postinc2,SwTimerReadValue@ticksCount+2
 26379  008836  CFDE F098          	movff	postinc2,SwTimerReadValue@ticksCount+3
 26380                           
 26381                           ; BSR set to: 0
 26382                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 26383  00883A  8EF2               	bsf	intcon,7,c	;volatile
 26384                           
 26385                           ; BSR set to: 0
 26386                           ;sw_timer.c: 204: return ticksCount;
 26387  00883C  C095  F091         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 26388  008840  C096  F092         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 26389  008844  C097  F093         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 26390  008848  C098  F094         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 26391  00884C  0012               	return	
 26392  00884E                     __end_of_SwTimerReadValue:
 26393                           	opt stack 0
 26394                           tosu	equ	0xFFF
 26395                           tosh	equ	0xFFE
 26396                           tosl	equ	0xFFD
 26397                           pclath	equ	0xFFA
 26398                           tblptru	equ	0xFF8
 26399                           tblptrh	equ	0xFF7
 26400                           tblptrl	equ	0xFF6
 26401                           tablat	equ	0xFF5
 26402                           prodh	equ	0xFF4
 26403                           prodl	equ	0xFF3
 26404                           intcon	equ	0xFF2
 26405                           intcon2	equ	0xFF1
 26406                           intcon3	equ	0xFF0
 26407                           indf0	equ	0xFEF
 26408                           postinc0	equ	0xFEE
 26409                           fsr0h	equ	0xFEA
 26410                           fsr0l	equ	0xFE9
 26411                           wreg	equ	0xFE8
 26412                           postinc1	equ	0xFE6
 26413                           postdec1	equ	0xFE5
 26414                           plusw1	equ	0xFE3
 26415                           fsr1h	equ	0xFE2
 26416                           fsr1l	equ	0xFE1
 26417                           indf2	equ	0xFDF
 26418                           postinc2	equ	0xFDE
 26419                           postdec2	equ	0xFDD
 26420                           plusw2	equ	0xFDB
 26421                           fsr2h	equ	0xFDA
 26422                           fsr2l	equ	0xFD9
 26423                           status	equ	0xFD8
 26424                           
 26425 ;; *************** function _SwTimerIsRunning *****************
 26426 ;; Defined at:
 26427 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 26428 ;; Parameters:    Size  Location     Type
 26429 ;;  timerId         1    wreg     unsigned char 
 26430 ;; Auto vars:     Size  Location     Type
 26431 ;;  timerId         1    0[BANK0 ] unsigned char 
 26432 ;;  isRunning       1    1[BANK0 ] unsigned char 
 26433 ;; Return value:  Size  Location     Type
 26434 ;;                  1    wreg      unsigned char 
 26435 ;; Registers used:
 26436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26437 ;; Tracked objects:
 26438 ;;		On entry : 0/0
 26439 ;;		On exit  : 0/0
 26440 ;;		Unchanged: 0/0
 26441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26443 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26445 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26446 ;;Total ram usage:        2 bytes
 26447 ;; Hardware stack levels used:    1
 26448 ;; Hardware stack levels required when called:    7
 26449 ;; This function calls:
 26450 ;;		Nothing
 26451 ;; This function is called by:
 26452 ;;		_LORAWAN_TxDone
 26453 ;; This function uses a non-reentrant model
 26454 ;;
 26455                           
 26456                           	psect	text124
 26457  008C7C                     __ptext124:
 26458                           	opt stack 0
 26459  008C7C                     _SwTimerIsRunning:
 26460                           	opt stack 19
 26461                           
 26462                           ; BSR set to: 0
 26463                           ;incstack = 0
 26464                           ;SwTimerIsRunning@timerId stored from wreg
 26465  008C7C  0100               	movlb	0	; () banked
 26466  008C7E  6F60               	movwf	SwTimerIsRunning@timerId& (0+255),b
 26467                           
 26468                           ;sw_timer.c: 209: uint8_t isRunning;
 26469                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 26470  008C80  9EF2               	bcf	intcon,7,c	;volatile
 26471                           
 26472                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 26473  008C82  0100               	movlb	0	; () banked
 26474  008C84  5160               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 26475  008C86  0D08               	mullw	8
 26476  008C88  0E04               	movlw	4
 26477  008C8A  26F3               	addwf	prodl,f,c
 26478  008C8C  0E00               	movlw	0
 26479  008C8E  22F4               	addwfc	prodh,f,c
 26480  008C90  0E00               	movlw	low _swTimers
 26481  008C92  24F3               	addwf	prodl,w,c
 26482  008C94  6ED9               	movwf	fsr2l,c
 26483  008C96  0E03               	movlw	high _swTimers
 26484  008C98  20F4               	addwfc	prodh,w,c
 26485  008C9A  6EDA               	movwf	fsr2h,c
 26486  008C9C  50DF               	movf	indf2,w,c
 26487  008C9E  6F61               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 26488                           
 26489                           ; BSR set to: 0
 26490                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 26491  008CA0  8EF2               	bsf	intcon,7,c	;volatile
 26492                           
 26493                           ; BSR set to: 0
 26494                           ;sw_timer.c: 215: return isRunning;
 26495  008CA2  5161               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 26496  008CA4  0012               	return	
 26497  008CA6                     __end_of_SwTimerIsRunning:
 26498                           	opt stack 0
 26499                           tosu	equ	0xFFF
 26500                           tosh	equ	0xFFE
 26501                           tosl	equ	0xFFD
 26502                           pclath	equ	0xFFA
 26503                           tblptru	equ	0xFF8
 26504                           tblptrh	equ	0xFF7
 26505                           tblptrl	equ	0xFF6
 26506                           tablat	equ	0xFF5
 26507                           prodh	equ	0xFF4
 26508                           prodl	equ	0xFF3
 26509                           intcon	equ	0xFF2
 26510                           intcon2	equ	0xFF1
 26511                           intcon3	equ	0xFF0
 26512                           indf0	equ	0xFEF
 26513                           postinc0	equ	0xFEE
 26514                           fsr0h	equ	0xFEA
 26515                           fsr0l	equ	0xFE9
 26516                           wreg	equ	0xFE8
 26517                           postinc1	equ	0xFE6
 26518                           postdec1	equ	0xFE5
 26519                           plusw1	equ	0xFE3
 26520                           fsr1h	equ	0xFE2
 26521                           fsr1l	equ	0xFE1
 26522                           indf2	equ	0xFDF
 26523                           postinc2	equ	0xFDE
 26524                           postdec2	equ	0xFDD
 26525                           plusw2	equ	0xFDB
 26526                           fsr2h	equ	0xFDA
 26527                           fsr2l	equ	0xFD9
 26528                           status	equ	0xFD8
 26529                           
 26530 ;; *************** function _RADIO_GetStatus *****************
 26531 ;; Defined at:
 26532 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26533 ;; Parameters:    Size  Location     Type
 26534 ;;		None
 26535 ;; Auto vars:     Size  Location     Type
 26536 ;;		None
 26537 ;; Return value:  Size  Location     Type
 26538 ;;                  1    wreg      unsigned char 
 26539 ;; Registers used:
 26540 ;;		wreg, status,2
 26541 ;; Tracked objects:
 26542 ;;		On entry : 0/0
 26543 ;;		On exit  : 0/0
 26544 ;;		Unchanged: 0/0
 26545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26550 ;;Total ram usage:        0 bytes
 26551 ;; Hardware stack levels used:    1
 26552 ;; Hardware stack levels required when called:    7
 26553 ;; This function calls:
 26554 ;;		Nothing
 26555 ;; This function is called by:
 26556 ;;		_LORAWAN_TxDone
 26557 ;;		_LORAWAN_ReceiveWindow2Callback
 26558 ;;		_LORAWAN_RxDone
 26559 ;; This function uses a non-reentrant model
 26560 ;;
 26561                           
 26562                           	psect	text125
 26563  0092CE                     __ptext125:
 26564                           	opt stack 0
 26565  0092CE                     _RADIO_GetStatus:
 26566                           	opt stack 19
 26567                           
 26568                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 26569                           
 26570                           ; BSR set to: 0
 26571                           ;incstack = 0
 26572  0092CE  0101               	movlb	1	; () banked
 26573  0092D0  5144               	movf	(_RadioConfiguration+35)& (0+255),w,b
 26574  0092D2  0012               	return	
 26575  0092D4                     __end_of_RADIO_GetStatus:
 26576                           	opt stack 0
 26577                           tosu	equ	0xFFF
 26578                           tosh	equ	0xFFE
 26579                           tosl	equ	0xFFD
 26580                           pclath	equ	0xFFA
 26581                           tblptru	equ	0xFF8
 26582                           tblptrh	equ	0xFF7
 26583                           tblptrl	equ	0xFF6
 26584                           tablat	equ	0xFF5
 26585                           prodh	equ	0xFF4
 26586                           prodl	equ	0xFF3
 26587                           intcon	equ	0xFF2
 26588                           intcon2	equ	0xFF1
 26589                           intcon3	equ	0xFF0
 26590                           indf0	equ	0xFEF
 26591                           postinc0	equ	0xFEE
 26592                           fsr0h	equ	0xFEA
 26593                           fsr0l	equ	0xFE9
 26594                           wreg	equ	0xFE8
 26595                           postinc1	equ	0xFE6
 26596                           postdec1	equ	0xFE5
 26597                           plusw1	equ	0xFE3
 26598                           fsr1h	equ	0xFE2
 26599                           fsr1l	equ	0xFE1
 26600                           indf2	equ	0xFDF
 26601                           postinc2	equ	0xFDE
 26602                           postdec2	equ	0xFDD
 26603                           plusw2	equ	0xFDB
 26604                           fsr2h	equ	0xFDA
 26605                           fsr2l	equ	0xFD9
 26606                           status	equ	0xFD8
 26607                           
 26608 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 26609 ;; Defined at:
 26610 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26611 ;; Parameters:    Size  Location     Type
 26612 ;;		None
 26613 ;; Auto vars:     Size  Location     Type
 26614 ;;		None
 26615 ;; Return value:  Size  Location     Type
 26616 ;;                  1    wreg      void 
 26617 ;; Registers used:
 26618 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26619 ;; Tracked objects:
 26620 ;;		On entry : 0/0
 26621 ;;		On exit  : 0/0
 26622 ;;		Unchanged: 0/0
 26623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26628 ;;Total ram usage:        0 bytes
 26629 ;; Hardware stack levels used:    1
 26630 ;; Hardware stack levels required when called:   13
 26631 ;; This function calls:
 26632 ;;		_ConfigureRadioRx
 26633 ;;		_RADIO_ReceiveStart
 26634 ;;		_RADIO_ReceiveStop
 26635 ;;		_RADIO_ReleaseData
 26636 ;;		_ResetParametersForConfirmedTransmission
 26637 ;;		_ResetParametersForUnconfirmedTransmission
 26638 ;;		_RxData
 26639 ;; This function is called by:
 26640 ;;		_LORAWAN_TxDone
 26641 ;;		_LORAWAN_ReceiveWindow2Callback
 26642 ;;		_LORAWAN_RxDone
 26643 ;;		_SetReceptionNotOkState
 26644 ;; This function uses a non-reentrant model
 26645 ;;
 26646                           
 26647                           	psect	text126
 26648  00790C                     __ptext126:
 26649                           	opt stack 0
 26650  00790C                     _LORAWAN_EnterContinuousReceive:
 26651                           	opt stack 13
 26652                           
 26653                           ;lorawan.c: 917: RADIO_ReceiveStop();
 26654                           
 26655                           ; BSR set to: 1
 26656                           ;incstack = 0
 26657  00790C  EC45  F047         	call	_RADIO_ReceiveStop	;wreg free
 26658                           
 26659                           ;lorawan.c: 918: RADIO_ReleaseData();
 26660  007910  EC6A  F049         	call	_RADIO_ReleaseData	;wreg free
 26661                           
 26662                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 26663  007914  C218  F073         	movff	_loRa+24,ConfigureRadioRx@freq
 26664  007918  C219  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
 26665  00791C  C21A  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
 26666  007920  C21B  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
 26667  007924  0102               	movlb	2	; () banked
 26668  007926  511C               	movf	(_loRa+28)& (0+255),w,b
 26669  007928  EC53  F046         	call	_ConfigureRadioRx
 26670                           
 26671                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 26672  00792C  0E00               	movlw	0
 26673  00792E  0100               	movlb	0	; () banked
 26674  007930  6FB2               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 26675  007932  0E00               	movlw	0
 26676  007934  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 26677  007936  EC6D  F01F         	call	_RADIO_ReceiveStart	;wreg free
 26678  00793A  0100               	movlb	0	; () banked
 26679  00793C  51B1               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 26680  00793E  11B2               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 26681  007940  B4D8               	btfsc	status,2,c
 26682  007942  0012               	return	
 26683                           
 26684                           ; BSR set to: 0
 26685                           ;lorawan.c: 923: {
 26686                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 26687  007944  EC79  F048         	call	_ResetParametersForConfirmedTransmission	;wreg free
 26688                           
 26689                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 26690  007948  EC52  F048         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 26691                           
 26692                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 26693  00794C  0102               	movlb	2	; () banked
 26694  00794E  9102               	bcf	(_loRa+2)& (0+255),0,b
 26695  007950  9302               	bcf	(_loRa+2)& (0+255),1,b
 26696  007952  9502               	bcf	(_loRa+2)& (0+255),2,b
 26697  007954  9702               	bcf	(_loRa+2)& (0+255),3,b
 26698                           
 26699                           ; BSR set to: 2
 26700                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 26701  007956  0101               	movlb	1	; () banked
 26702  007958  5104               	movf	_rxPayload& (0+255),w,b
 26703  00795A  1105               	iorwf	(_rxPayload+1)& (0+255),w,b
 26704  00795C  B4D8               	btfsc	status,2,c
 26705  00795E  0012               	return	
 26706                           
 26707                           ; BSR set to: 1
 26708                           ;lorawan.c: 928: {
 26709                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 26710  007960  0E00               	movlw	0
 26711  007962  0100               	movlb	0	; () banked
 26712  007964  6F60               	movwf	RxData@pData& (0+255),b
 26713  007966  0E00               	movlw	0
 26714  007968  6F61               	movwf	(RxData@pData+1)& (0+255),b
 26715  00796A  0E00               	movlw	0
 26716  00796C  6F62               	movwf	RxData@dataLength& (0+255),b
 26717  00796E  0E00               	movlw	0
 26718  007970  6F63               	movwf	RxData@status& (0+255),b
 26719  007972  D801               	call	u17208
 26720  007974  0012               	return	
 26721  007976                     u17208:
 26722  007976  0005               	push	
 26723  007978  6EFA               	movwf	pclath,c
 26724  00797A  0101               	movlb	1	; () banked
 26725  00797C  5104               	movf	_rxPayload& (0+255),w,b
 26726  00797E  6EFD               	movwf	tosl,c
 26727  007980  5105               	movf	(_rxPayload+1)& (0+255),w,b
 26728  007982  6EFE               	movwf	tosh,c
 26729  007984  6AFF               	clrf	tosu,c
 26730  007986  50FA               	movf	pclath,w,c
 26731  007988  0012               	return		;indir
 26732  00798A                     __end_of_LORAWAN_EnterContinuousReceive:
 26733                           	opt stack 0
 26734                           tosu	equ	0xFFF
 26735                           tosh	equ	0xFFE
 26736                           tosl	equ	0xFFD
 26737                           pclath	equ	0xFFA
 26738                           tblptru	equ	0xFF8
 26739                           tblptrh	equ	0xFF7
 26740                           tblptrl	equ	0xFF6
 26741                           tablat	equ	0xFF5
 26742                           prodh	equ	0xFF4
 26743                           prodl	equ	0xFF3
 26744                           intcon	equ	0xFF2
 26745                           intcon2	equ	0xFF1
 26746                           intcon3	equ	0xFF0
 26747                           indf0	equ	0xFEF
 26748                           postinc0	equ	0xFEE
 26749                           fsr0h	equ	0xFEA
 26750                           fsr0l	equ	0xFE9
 26751                           wreg	equ	0xFE8
 26752                           postinc1	equ	0xFE6
 26753                           postdec1	equ	0xFE5
 26754                           plusw1	equ	0xFE3
 26755                           fsr1h	equ	0xFE2
 26756                           fsr1l	equ	0xFE1
 26757                           indf2	equ	0xFDF
 26758                           postinc2	equ	0xFDE
 26759                           postdec2	equ	0xFDD
 26760                           plusw2	equ	0xFDB
 26761                           fsr2h	equ	0xFDA
 26762                           fsr2l	equ	0xFD9
 26763                           status	equ	0xFD8
 26764                           
 26765 ;; *************** function _RxData *****************
 26766 ;; Defined at:
 26767 ;;		line 76 in file "main.c"
 26768 ;; Parameters:    Size  Location     Type
 26769 ;;  pData           2    0[BANK0 ] PTR unsigned char 
 26770 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 26771 ;;  dataLength      1    2[BANK0 ] unsigned char 
 26772 ;;  status          1    3[BANK0 ] enum E7442
 26773 ;; Auto vars:     Size  Location     Type
 26774 ;;		None
 26775 ;; Return value:  Size  Location     Type
 26776 ;;                  1    wreg      void 
 26777 ;; Registers used:
 26778 ;;		None
 26779 ;; Tracked objects:
 26780 ;;		On entry : 0/0
 26781 ;;		On exit  : 0/0
 26782 ;;		Unchanged: 0/0
 26783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26787 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26788 ;;Total ram usage:        4 bytes
 26789 ;; Hardware stack levels used:    1
 26790 ;; Hardware stack levels required when called:    7
 26791 ;; This function calls:
 26792 ;;		Nothing
 26793 ;; This function is called by:
 26794 ;;		_main
 26795 ;;		_LORAWAN_EnterContinuousReceive
 26796 ;;		_LORAWAN_ReceiveWindow2Callback
 26797 ;;		_SetReceptionNotOkState
 26798 ;;		_LORAWAN_RxDone
 26799 ;;		_LORAWAN_RxTimeout
 26800 ;;		_LORAWAN_TxDone
 26801 ;;		_AckRetransmissionCallback
 26802 ;;		_UnconfirmedTransmissionCallback
 26803 ;; This function uses a non-reentrant model
 26804 ;;
 26805                           
 26806                           	psect	text127
 26807  00930C                     __ptext127:
 26808                           	opt stack 0
 26809  00930C                     _RxData:
 26810                           	opt stack 20
 26811                           
 26812                           ;incstack = 0
 26813  00930C  0012               	return		;funcret
 26814  00930E                     __end_of_RxData:
 26815                           	opt stack 0
 26816                           tosu	equ	0xFFF
 26817                           tosh	equ	0xFFE
 26818                           tosl	equ	0xFFD
 26819                           pclath	equ	0xFFA
 26820                           tblptru	equ	0xFF8
 26821                           tblptrh	equ	0xFF7
 26822                           tblptrl	equ	0xFF6
 26823                           tablat	equ	0xFF5
 26824                           prodh	equ	0xFF4
 26825                           prodl	equ	0xFF3
 26826                           intcon	equ	0xFF2
 26827                           intcon2	equ	0xFF1
 26828                           intcon3	equ	0xFF0
 26829                           indf0	equ	0xFEF
 26830                           postinc0	equ	0xFEE
 26831                           fsr0h	equ	0xFEA
 26832                           fsr0l	equ	0xFE9
 26833                           wreg	equ	0xFE8
 26834                           postinc1	equ	0xFE6
 26835                           postdec1	equ	0xFE5
 26836                           plusw1	equ	0xFE3
 26837                           fsr1h	equ	0xFE2
 26838                           fsr1l	equ	0xFE1
 26839                           indf2	equ	0xFDF
 26840                           postinc2	equ	0xFDE
 26841                           postdec2	equ	0xFDD
 26842                           plusw2	equ	0xFDB
 26843                           fsr2h	equ	0xFDA
 26844                           fsr2l	equ	0xFD9
 26845                           status	equ	0xFD8
 26846                           
 26847 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 26848 ;; Defined at:
 26849 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26850 ;; Parameters:    Size  Location     Type
 26851 ;;		None
 26852 ;; Auto vars:     Size  Location     Type
 26853 ;;		None
 26854 ;; Return value:  Size  Location     Type
 26855 ;;                  1    wreg      void 
 26856 ;; Registers used:
 26857 ;;		wreg, status,2
 26858 ;; Tracked objects:
 26859 ;;		On entry : 0/0
 26860 ;;		On exit  : 0/0
 26861 ;;		Unchanged: 0/0
 26862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26867 ;;Total ram usage:        0 bytes
 26868 ;; Hardware stack levels used:    1
 26869 ;; Hardware stack levels required when called:    7
 26870 ;; This function calls:
 26871 ;;		Nothing
 26872 ;; This function is called by:
 26873 ;;		_LORAWAN_RxTimeout
 26874 ;;		_LORAWAN_ReceiveWindow2Callback
 26875 ;;		_LORAWAN_EnterContinuousReceive
 26876 ;;		_UnconfirmedTransmissionCallback
 26877 ;; This function uses a non-reentrant model
 26878 ;;
 26879                           
 26880                           	psect	text128
 26881  0090A4                     __ptext128:
 26882                           	opt stack 0
 26883  0090A4                     _ResetParametersForUnconfirmedTransmission:
 26884                           	opt stack 20
 26885                           
 26886                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 26887                           
 26888                           ;incstack = 0
 26889  0090A4  0102               	movlb	2	; () banked
 26890  0090A6  9102               	bcf	(_loRa+2)& (0+255),0,b
 26891  0090A8  9302               	bcf	(_loRa+2)& (0+255),1,b
 26892  0090AA  9502               	bcf	(_loRa+2)& (0+255),2,b
 26893  0090AC  9702               	bcf	(_loRa+2)& (0+255),3,b
 26894                           
 26895                           ; BSR set to: 2
 26896                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 26897  0090AE  0E01               	movlw	1
 26898  0090B0  6FD8               	movwf	(_loRa+216)& (0+255),b
 26899                           
 26900                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 26901  0090B2  0E00               	movlw	0
 26902  0090B4  6FA7               	movwf	(_loRa+167)& (0+255),b
 26903                           
 26904                           ; BSR set to: 2
 26905  0090B6  0012               	return		;funcret
 26906  0090B8                     __end_of_ResetParametersForUnconfirmedTransmission:
 26907                           	opt stack 0
 26908                           tosu	equ	0xFFF
 26909                           tosh	equ	0xFFE
 26910                           tosl	equ	0xFFD
 26911                           pclath	equ	0xFFA
 26912                           tblptru	equ	0xFF8
 26913                           tblptrh	equ	0xFF7
 26914                           tblptrl	equ	0xFF6
 26915                           tablat	equ	0xFF5
 26916                           prodh	equ	0xFF4
 26917                           prodl	equ	0xFF3
 26918                           intcon	equ	0xFF2
 26919                           intcon2	equ	0xFF1
 26920                           intcon3	equ	0xFF0
 26921                           indf0	equ	0xFEF
 26922                           postinc0	equ	0xFEE
 26923                           fsr0h	equ	0xFEA
 26924                           fsr0l	equ	0xFE9
 26925                           wreg	equ	0xFE8
 26926                           postinc1	equ	0xFE6
 26927                           postdec1	equ	0xFE5
 26928                           plusw1	equ	0xFE3
 26929                           fsr1h	equ	0xFE2
 26930                           fsr1l	equ	0xFE1
 26931                           indf2	equ	0xFDF
 26932                           postinc2	equ	0xFDE
 26933                           postdec2	equ	0xFDD
 26934                           plusw2	equ	0xFDB
 26935                           fsr2h	equ	0xFDA
 26936                           fsr2l	equ	0xFD9
 26937                           status	equ	0xFD8
 26938                           
 26939 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 26940 ;; Defined at:
 26941 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26942 ;; Parameters:    Size  Location     Type
 26943 ;;		None
 26944 ;; Auto vars:     Size  Location     Type
 26945 ;;		None
 26946 ;; Return value:  Size  Location     Type
 26947 ;;                  1    wreg      void 
 26948 ;; Registers used:
 26949 ;;		wreg, status,2
 26950 ;; Tracked objects:
 26951 ;;		On entry : 0/0
 26952 ;;		On exit  : 0/0
 26953 ;;		Unchanged: 0/0
 26954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26959 ;;Total ram usage:        0 bytes
 26960 ;; Hardware stack levels used:    1
 26961 ;; Hardware stack levels required when called:    7
 26962 ;; This function calls:
 26963 ;;		Nothing
 26964 ;; This function is called by:
 26965 ;;		_LORAWAN_RxTimeout
 26966 ;;		_LORAWAN_ReceiveWindow2Callback
 26967 ;;		_LORAWAN_EnterContinuousReceive
 26968 ;;		_AckRetransmissionCallback
 26969 ;; This function uses a non-reentrant model
 26970 ;;
 26971                           
 26972                           	psect	text129
 26973  0090F2                     __ptext129:
 26974                           	opt stack 0
 26975  0090F2                     _ResetParametersForConfirmedTransmission:
 26976                           	opt stack 18
 26977                           
 26978                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 26979                           
 26980                           ; BSR set to: 2
 26981                           ;incstack = 0
 26982  0090F2  0102               	movlb	2	; () banked
 26983  0090F4  9102               	bcf	(_loRa+2)& (0+255),0,b
 26984  0090F6  9302               	bcf	(_loRa+2)& (0+255),1,b
 26985  0090F8  9502               	bcf	(_loRa+2)& (0+255),2,b
 26986  0090FA  9702               	bcf	(_loRa+2)& (0+255),3,b
 26987                           
 26988                           ; BSR set to: 2
 26989                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 26990  0090FC  0E01               	movlw	1
 26991  0090FE  6FD9               	movwf	(_loRa+217)& (0+255),b
 26992                           
 26993                           ; BSR set to: 2
 26994                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 26995  009100  9100               	bcf	_loRa& (0+255),0,b
 26996                           
 26997                           ; BSR set to: 2
 26998  009102  0012               	return		;funcret
 26999  009104                     __end_of_ResetParametersForConfirmedTransmission:
 27000                           	opt stack 0
 27001                           tosu	equ	0xFFF
 27002                           tosh	equ	0xFFE
 27003                           tosl	equ	0xFFD
 27004                           pclath	equ	0xFFA
 27005                           tblptru	equ	0xFF8
 27006                           tblptrh	equ	0xFF7
 27007                           tblptrl	equ	0xFF6
 27008                           tablat	equ	0xFF5
 27009                           prodh	equ	0xFF4
 27010                           prodl	equ	0xFF3
 27011                           intcon	equ	0xFF2
 27012                           intcon2	equ	0xFF1
 27013                           intcon3	equ	0xFF0
 27014                           indf0	equ	0xFEF
 27015                           postinc0	equ	0xFEE
 27016                           fsr0h	equ	0xFEA
 27017                           fsr0l	equ	0xFE9
 27018                           wreg	equ	0xFE8
 27019                           postinc1	equ	0xFE6
 27020                           postdec1	equ	0xFE5
 27021                           plusw1	equ	0xFE3
 27022                           fsr1h	equ	0xFE2
 27023                           fsr1l	equ	0xFE1
 27024                           indf2	equ	0xFDF
 27025                           postinc2	equ	0xFDE
 27026                           postdec2	equ	0xFDD
 27027                           plusw2	equ	0xFDB
 27028                           fsr2h	equ	0xFDA
 27029                           fsr2l	equ	0xFD9
 27030                           status	equ	0xFD8
 27031                           
 27032 ;; *************** function _RADIO_ReleaseData *****************
 27033 ;; Defined at:
 27034 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27035 ;; Parameters:    Size  Location     Type
 27036 ;;		None
 27037 ;; Auto vars:     Size  Location     Type
 27038 ;;		None
 27039 ;; Return value:  Size  Location     Type
 27040 ;;                  1    wreg      void 
 27041 ;; Registers used:
 27042 ;;		status,2, status,0
 27043 ;; Tracked objects:
 27044 ;;		On entry : 0/0
 27045 ;;		On exit  : 0/0
 27046 ;;		Unchanged: 0/0
 27047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27052 ;;Total ram usage:        0 bytes
 27053 ;; Hardware stack levels used:    1
 27054 ;; Hardware stack levels required when called:    7
 27055 ;; This function calls:
 27056 ;;		Nothing
 27057 ;; This function is called by:
 27058 ;;		_LORAWAN_ReceiveWindow1Callback
 27059 ;;		_LORAWAN_ReceiveWindow2Callback
 27060 ;;		_LORAWAN_EnterContinuousReceive
 27061 ;;		_LORAWAN_RxDone
 27062 ;; This function uses a non-reentrant model
 27063 ;;
 27064                           
 27065                           	psect	text130
 27066  0092D4                     __ptext130:
 27067                           	opt stack 0
 27068  0092D4                     _RADIO_ReleaseData:
 27069                           	opt stack 18
 27070                           
 27071                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 27072                           
 27073                           ; BSR set to: 2
 27074                           ;incstack = 0
 27075  0092D4  0101               	movlb	1	; () banked
 27076  0092D6  9544               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 27077                           
 27078                           ; BSR set to: 1
 27079  0092D8  0012               	return		;funcret
 27080  0092DA                     __end_of_RADIO_ReleaseData:
 27081                           	opt stack 0
 27082                           tosu	equ	0xFFF
 27083                           tosh	equ	0xFFE
 27084                           tosl	equ	0xFFD
 27085                           pclath	equ	0xFFA
 27086                           tblptru	equ	0xFF8
 27087                           tblptrh	equ	0xFF7
 27088                           tblptrl	equ	0xFF6
 27089                           tablat	equ	0xFF5
 27090                           prodh	equ	0xFF4
 27091                           prodl	equ	0xFF3
 27092                           intcon	equ	0xFF2
 27093                           intcon2	equ	0xFF1
 27094                           intcon3	equ	0xFF0
 27095                           indf0	equ	0xFEF
 27096                           postinc0	equ	0xFEE
 27097                           fsr0h	equ	0xFEA
 27098                           fsr0l	equ	0xFE9
 27099                           wreg	equ	0xFE8
 27100                           postinc1	equ	0xFE6
 27101                           postdec1	equ	0xFE5
 27102                           plusw1	equ	0xFE3
 27103                           fsr1h	equ	0xFE2
 27104                           fsr1l	equ	0xFE1
 27105                           indf2	equ	0xFDF
 27106                           postinc2	equ	0xFDE
 27107                           postdec2	equ	0xFDD
 27108                           plusw2	equ	0xFDB
 27109                           fsr2h	equ	0xFDA
 27110                           fsr2l	equ	0xFD9
 27111                           status	equ	0xFD8
 27112                           
 27113 ;; *************** function _RADIO_ReceiveStop *****************
 27114 ;; Defined at:
 27115 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27116 ;; Parameters:    Size  Location     Type
 27117 ;;		None
 27118 ;; Auto vars:     Size  Location     Type
 27119 ;;		None
 27120 ;; Return value:  Size  Location     Type
 27121 ;;                  1    wreg      void 
 27122 ;; Registers used:
 27123 ;;		wreg, status,2, status,0, cstack
 27124 ;; Tracked objects:
 27125 ;;		On entry : 0/0
 27126 ;;		On exit  : 0/0
 27127 ;;		Unchanged: 0/0
 27128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27133 ;;Total ram usage:        0 bytes
 27134 ;; Hardware stack levels used:    1
 27135 ;; Hardware stack levels required when called:   11
 27136 ;; This function calls:
 27137 ;;		_RADIO_WriteMode
 27138 ;; This function is called by:
 27139 ;;		_LORAWAN_Send
 27140 ;;		_LORAWAN_ReceiveWindow1Callback
 27141 ;;		_LORAWAN_ReceiveWindow2Callback
 27142 ;;		_LORAWAN_EnterContinuousReceive
 27143 ;;		_LORAWAN_SetClass
 27144 ;; This function uses a non-reentrant model
 27145 ;;
 27146                           
 27147                           	psect	text131
 27148  008E8A                     __ptext131:
 27149                           	opt stack 0
 27150  008E8A                     _RADIO_ReceiveStop:
 27151                           	opt stack 18
 27152                           
 27153                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 27154                           
 27155                           ; BSR set to: 1
 27156                           ;incstack = 0
 27157  008E8A  0E02               	movlw	2
 27158  008E8C  0101               	movlb	1	; () banked
 27159  008E8E  1944               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 27160  008E90  A4D8               	btfss	status,2,c
 27161  008E92  0012               	return	
 27162                           
 27163                           ; BSR set to: 1
 27164                           ;radio_driver_SX1276.c: 954: {
 27165                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 27166  008E94  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27167  008E98  0E00               	movlw	0
 27168  008E9A  0100               	movlb	0	; () banked
 27169  008E9C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27170  008E9E  0E00               	movlw	0
 27171  008EA0  EC28  F030         	call	_RADIO_WriteMode
 27172                           
 27173                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 27174  008EA4  0101               	movlb	1	; () banked
 27175  008EA6  9344               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 27176  008EA8  0012               	return	
 27177  008EAA                     __end_of_RADIO_ReceiveStop:
 27178                           	opt stack 0
 27179                           tosu	equ	0xFFF
 27180                           tosh	equ	0xFFE
 27181                           tosl	equ	0xFFD
 27182                           pclath	equ	0xFFA
 27183                           tblptru	equ	0xFF8
 27184                           tblptrh	equ	0xFF7
 27185                           tblptrl	equ	0xFF6
 27186                           tablat	equ	0xFF5
 27187                           prodh	equ	0xFF4
 27188                           prodl	equ	0xFF3
 27189                           intcon	equ	0xFF2
 27190                           intcon2	equ	0xFF1
 27191                           intcon3	equ	0xFF0
 27192                           indf0	equ	0xFEF
 27193                           postinc0	equ	0xFEE
 27194                           fsr0h	equ	0xFEA
 27195                           fsr0l	equ	0xFE9
 27196                           wreg	equ	0xFE8
 27197                           postinc1	equ	0xFE6
 27198                           postdec1	equ	0xFE5
 27199                           plusw1	equ	0xFE3
 27200                           fsr1h	equ	0xFE2
 27201                           fsr1l	equ	0xFE1
 27202                           indf2	equ	0xFDF
 27203                           postinc2	equ	0xFDE
 27204                           postdec2	equ	0xFDD
 27205                           plusw2	equ	0xFDB
 27206                           fsr2h	equ	0xFDA
 27207                           fsr2l	equ	0xFD9
 27208                           status	equ	0xFD8
 27209                           
 27210 ;; *************** function _RADIO_ReceiveStart *****************
 27211 ;; Defined at:
 27212 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27213 ;; Parameters:    Size  Location     Type
 27214 ;;  rxWindowSize    2   81[BANK0 ] unsigned int 
 27215 ;; Auto vars:     Size  Location     Type
 27216 ;;		None
 27217 ;; Return value:  Size  Location     Type
 27218 ;;                  2   81[BANK0 ] enum E7038
 27219 ;; Registers used:
 27220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27221 ;; Tracked objects:
 27222 ;;		On entry : 0/0
 27223 ;;		On exit  : 0/0
 27224 ;;		Unchanged: 0/0
 27225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27226 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27227 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27228 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27229 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27230 ;;Total ram usage:       10 bytes
 27231 ;; Hardware stack levels used:    1
 27232 ;; Hardware stack levels required when called:   12
 27233 ;; This function calls:
 27234 ;;		_RADIO_RegisterWrite
 27235 ;;		_RADIO_WriteConfiguration
 27236 ;;		_RADIO_WriteMode
 27237 ;;		_SwTimerSetTimeout
 27238 ;;		_SwTimerStart
 27239 ;;		___lldiv
 27240 ;; This function is called by:
 27241 ;;		_LORAWAN_ReceiveWindow1Callback
 27242 ;;		_LORAWAN_ReceiveWindow2Callback
 27243 ;;		_LORAWAN_EnterContinuousReceive
 27244 ;; This function uses a non-reentrant model
 27245 ;;
 27246                           
 27247                           	psect	text132
 27248  003EDA                     __ptext132:
 27249                           	opt stack 0
 27250  003EDA                     _RADIO_ReceiveStart:
 27251                           	opt stack 13
 27252                           
 27253                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 27254                           
 27255                           ; BSR set to: 1
 27256                           ;incstack = 0
 27257  003EDA  0101               	movlb	1	; () banked
 27258  003EDC  A544               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 27259  003EDE  D006               	goto	l520
 27260                           
 27261                           ; BSR set to: 1
 27262                           ;radio_driver_SX1276.c: 878: {
 27263                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 27264  003EE0  0E80               	movlw	128
 27265  003EE2  0100               	movlb	0	; () banked
 27266  003EE4  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 27267  003EE6  0E03               	movlw	3
 27268  003EE8  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 27269                           
 27270                           ; BSR set to: 0
 27271  003EEA  0012               	return	
 27272  003EEC                     l520:
 27273                           
 27274                           ;radio_driver_SX1276.c: 880: }
 27275                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 27276                           
 27277                           ; BSR set to: 0
 27278  003EEC  C144  F0B3         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 27279  003EF0  0E03               	movlw	3
 27280  003EF2  0100               	movlb	0	; () banked
 27281  003EF4  17B3               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 27282  003EF6  B4D8               	btfsc	status,2,c
 27283  003EF8  D005               	goto	l522
 27284                           
 27285                           ; BSR set to: 0
 27286                           ;radio_driver_SX1276.c: 883: {
 27287                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 27288  003EFA  0E80               	movlw	128
 27289  003EFC  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 27290  003EFE  0E04               	movlw	4
 27291  003F00  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 27292                           
 27293                           ; BSR set to: 0
 27294  003F02  0012               	return	
 27295  003F04                     l522:
 27296                           
 27297                           ; BSR set to: 0
 27298                           ;radio_driver_SX1276.c: 885: }
 27299                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 27300                           
 27301                           ; BSR set to: 0
 27302  003F04  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 27303  003F06  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 27304  003F08  A4D8               	btfss	status,2,c
 27305  003F0A  D007               	goto	l523
 27306                           
 27307                           ; BSR set to: 0
 27308                           ;radio_driver_SX1276.c: 888: {
 27309                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 27310  003F0C  0E00               	movlw	0
 27311  003F0E  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 27312  003F10  0E04               	movlw	4
 27313  003F12  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 27314  003F14  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 27315                           
 27316                           ;radio_driver_SX1276.c: 890: }
 27317  003F18  D006               	goto	l524
 27318  003F1A                     l523:
 27319                           
 27320                           ;radio_driver_SX1276.c: 891: else
 27321                           ;radio_driver_SX1276.c: 892: {
 27322                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 27323  003F1A  C0B1  F0A6         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 27324  003F1E  C0B2  F0A7         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 27325  003F22  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 27326  003F26                     l524:
 27327                           
 27328                           ;radio_driver_SX1276.c: 894: }
 27329                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 27330  003F26  0101               	movlb	1	; () banked
 27331  003F28  0539               	decf	(_RadioConfiguration+24)& (0+255),w,b
 27332  003F2A  A4D8               	btfss	status,2,c
 27333  003F2C  D013               	goto	l525
 27334                           
 27335                           ; BSR set to: 1
 27336                           ;radio_driver_SX1276.c: 897: {
 27337                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 27338  003F2E  0E01               	movlw	1
 27339  003F30  0100               	movlb	0	; () banked
 27340  003F32  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27341  003F34  0E22               	movlw	34
 27342  003F36  EC55  F047         	call	_RADIO_RegisterWrite
 27343                           
 27344                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 27345  003F3A  0E00               	movlw	0
 27346  003F3C  0100               	movlb	0	; () banked
 27347  003F3E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27348  003F40  0E40               	movlw	64
 27349  003F42  EC55  F047         	call	_RADIO_RegisterWrite
 27350                           
 27351                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 27352  003F46  0E00               	movlw	0
 27353  003F48  0100               	movlb	0	; () banked
 27354  003F4A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27355  003F4C  0E41               	movlw	65
 27356  003F4E  EC55  F047         	call	_RADIO_RegisterWrite
 27357                           
 27358                           ;radio_driver_SX1276.c: 908: }
 27359  003F52  D016               	goto	l526
 27360  003F54                     l525:
 27361                           
 27362                           ;radio_driver_SX1276.c: 909: else
 27363                           ;radio_driver_SX1276.c: 910: {
 27364                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 27365  003F54  C155  F062         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 27366  003F58  0E12               	movlw	18
 27367  003F5A  EC55  F047         	call	_RADIO_RegisterWrite
 27368                           
 27369                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 27370  003F5E  C156  F062         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 27371  003F62  0E13               	movlw	19
 27372  003F64  EC55  F047         	call	_RADIO_RegisterWrite
 27373                           
 27374                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 27375  003F68  0E00               	movlw	0
 27376  003F6A  0100               	movlb	0	; () banked
 27377  003F6C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27378  003F6E  0E40               	movlw	64
 27379  003F70  EC55  F047         	call	_RADIO_RegisterWrite
 27380                           
 27381                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 27382  003F74  0E00               	movlw	0
 27383  003F76  0100               	movlb	0	; () banked
 27384  003F78  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27385  003F7A  0E41               	movlw	65
 27386  003F7C  EC55  F047         	call	_RADIO_RegisterWrite
 27387  003F80                     l526:
 27388                           
 27389                           ;radio_driver_SX1276.c: 917: }
 27390                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 27391  003F80  0101               	movlb	1	; () banked
 27392  003F82  8344               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 27393                           
 27394                           ; BSR set to: 1
 27395                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 27396  003F84  0EE7               	movlw	231
 27397  003F86  1744               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 27398                           
 27399                           ; BSR set to: 1
 27400                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 27401  003F88  0100               	movlb	0	; () banked
 27402  003F8A  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 27403  003F8C  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 27404  003F8E  A4D8               	btfss	status,2,c
 27405  003F90  D008               	goto	l527
 27406                           
 27407                           ; BSR set to: 0
 27408                           ;radio_driver_SX1276.c: 925: {
 27409                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 27410  003F92  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27411  003F96  0E00               	movlw	0
 27412  003F98  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27413  003F9A  0E05               	movlw	5
 27414  003F9C  EC28  F030         	call	_RADIO_WriteMode
 27415                           
 27416                           ;radio_driver_SX1276.c: 927: }
 27417  003FA0  D046               	goto	l530
 27418  003FA2                     l527:
 27419                           
 27420                           ;radio_driver_SX1276.c: 928: else
 27421                           ;radio_driver_SX1276.c: 929: {
 27422                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 27423  003FA2  0101               	movlb	1	; () banked
 27424  003FA4  0539               	decf	(_RadioConfiguration+24)& (0+255),w,b
 27425  003FA6  A4D8               	btfss	status,2,c
 27426  003FA8  D009               	goto	l529
 27427                           
 27428                           ; BSR set to: 1
 27429                           ;radio_driver_SX1276.c: 931: {
 27430                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 27431  003FAA  0E01               	movlw	1
 27432  003FAC  0100               	movlb	0	; () banked
 27433  003FAE  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 27434  003FB0  0E00               	movlw	0
 27435  003FB2  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27436  003FB4  0E06               	movlw	6
 27437  003FB6  EC28  F030         	call	_RADIO_WriteMode
 27438                           
 27439                           ;radio_driver_SX1276.c: 933: }
 27440  003FBA  D039               	goto	l530
 27441  003FBC                     l529:
 27442                           
 27443                           ;radio_driver_SX1276.c: 934: else
 27444                           ;radio_driver_SX1276.c: 935: {
 27445                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 27446  003FBC  0E00               	movlw	0
 27447  003FBE  0100               	movlb	0	; () banked
 27448  003FC0  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 27449  003FC2  0E00               	movlw	0
 27450  003FC4  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27451  003FC6  0E05               	movlw	5
 27452  003FC8  EC28  F030         	call	_RADIO_WriteMode
 27453                           
 27454                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 27455  003FCC  0100               	movlb	0	; () banked
 27456  003FCE  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 27457  003FD0  6FB3               	movwf	??_RADIO_ReceiveStart& (0+255),b
 27458  003FD2  51B2               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 27459  003FD4  6FB4               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 27460  003FD6  6BB5               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 27461  003FD8  6BB6               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 27462  003FDA  0E0C               	movlw	12
 27463  003FDC                     u16285:
 27464  003FDC  90D8               	bcf	status,0,c
 27465  003FDE  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 27466  003FE0  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 27467  003FE2  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 27468  003FE4  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 27469  003FE6  2EE8               	decfsz	wreg,f,c
 27470  003FE8  D7F9               	goto	u16285
 27471  003FEA  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 27472  003FEE  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 27473  003FF2  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 27474  003FF6  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 27475  003FFA  0E7D               	movlw	125
 27476  003FFC  6F64               	movwf	___lldiv@divisor& (0+255),b
 27477  003FFE  0E00               	movlw	0
 27478  004000  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 27479  004002  0E00               	movlw	0
 27480  004004  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 27481  004006  0E00               	movlw	0
 27482  004008  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 27483  00400A  ECC4  F03B         	call	___lldiv	;wreg free
 27484  00400E  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 27485  004012  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 27486  004016  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 27487  00401A  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 27488  00401E  0101               	movlb	1	; () banked
 27489  004020  5149               	movf	(_RadioConfiguration+40)& (0+255),w,b
 27490  004022  EC62  F043         	call	_SwTimerSetTimeout
 27491                           
 27492                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 27493  004026  0101               	movlb	1	; () banked
 27494  004028  5149               	movf	(_RadioConfiguration+40)& (0+255),w,b
 27495  00402A  EC4B  F039         	call	_SwTimerStart
 27496  00402E                     l530:
 27497                           
 27498                           ;radio_driver_SX1276.c: 939: }
 27499                           ;radio_driver_SX1276.c: 940: }
 27500                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 27501  00402E  0101               	movlb	1	; () banked
 27502  004030  514B               	movf	(_RadioConfiguration+42)& (0+255),w,b
 27503  004032  114C               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 27504  004034  114D               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 27505  004036  114E               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 27506  004038  B4D8               	btfsc	status,2,c
 27507  00403A  D061               	goto	l531
 27508                           
 27509                           ; BSR set to: 1
 27510                           ;radio_driver_SX1276.c: 943: {
 27511                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 27512  00403C  514E               	movf	(_RadioConfiguration+45)& (0+255),w,b
 27513  00403E  E107               	bnz	u16300
 27514  004040  294B               	incf	(_RadioConfiguration+42)& (0+255),w,b
 27515  004042  0EFF               	movlw	255
 27516  004044  594C               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 27517  004046  0E0F               	movlw	15
 27518  004048  594D               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 27519  00404A  A0D8               	btfss	status,0,c
 27520  00404C  D01D               	goto	l533
 27521  00404E                     u16300:
 27522                           
 27523                           ; BSR set to: 1
 27524  00404E  C14B  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 27525  004052  C14C  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 27526  004056  C14D  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 27527  00405A  C14E  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 27528  00405E  0E7D               	movlw	125
 27529  004060  0100               	movlb	0	; () banked
 27530  004062  6F64               	movwf	___lldiv@divisor& (0+255),b
 27531  004064  0E00               	movlw	0
 27532  004066  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 27533  004068  0E00               	movlw	0
 27534  00406A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 27535  00406C  0E00               	movlw	0
 27536  00406E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 27537  004070  ECC4  F03B         	call	___lldiv	;wreg free
 27538  004074  0E0C               	movlw	12
 27539  004076                     u16315:
 27540  004076  90D8               	bcf	status,0,c
 27541  004078  0100               	movlb	0	; () banked
 27542  00407A  3760               	rlcf	?___lldiv& (0+255),f,b
 27543  00407C  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 27544  00407E  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 27545  004080  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 27546  004082  2EE8               	decfsz	wreg,f,c
 27547  004084  D7F8               	goto	u16315
 27548  004086  D023               	goto	L18
 27549  004088                     l533:
 27550                           
 27551                           ; BSR set to: 0
 27552  004088  C14B  F0B3         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 27553  00408C  C14C  F0B4         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 27554  004090  C14D  F0B5         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 27555  004094  C14E  F0B6         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 27556  004098  0E0C               	movlw	12
 27557  00409A                     u16325:
 27558  00409A  90D8               	bcf	status,0,c
 27559  00409C  0100               	movlb	0	; () banked
 27560  00409E  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 27561  0040A0  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 27562  0040A2  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 27563  0040A4  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 27564  0040A6  2EE8               	decfsz	wreg,f,c
 27565  0040A8  D7F8               	goto	u16325
 27566  0040AA  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 27567  0040AE  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 27568  0040B2  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 27569  0040B6  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 27570  0040BA  0E7D               	movlw	125
 27571  0040BC  6F64               	movwf	___lldiv@divisor& (0+255),b
 27572  0040BE  0E00               	movlw	0
 27573  0040C0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 27574  0040C2  0E00               	movlw	0
 27575  0040C4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 27576  0040C6  0E00               	movlw	0
 27577  0040C8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 27578  0040CA  ECC4  F03B         	call	___lldiv	;wreg free
 27579  0040CE                     L18:
 27580  0040CE  C060  F0B7         	movff	?___lldiv,_RADIO_ReceiveStart$777
 27581  0040D2  C061  F0B8         	movff	?___lldiv+1,_RADIO_ReceiveStart$777+1
 27582  0040D6  C062  F0B9         	movff	?___lldiv+2,_RADIO_ReceiveStart$777+2
 27583  0040DA  C063  F0BA         	movff	?___lldiv+3,_RADIO_ReceiveStart$777+3
 27584  0040DE  C0B7  F06D         	movff	_RADIO_ReceiveStart$777,SwTimerSetTimeout@timeout
 27585  0040E2  C0B8  F06E         	movff	_RADIO_ReceiveStart$777+1,SwTimerSetTimeout@timeout+1
 27586  0040E6  C0B9  F06F         	movff	_RADIO_ReceiveStart$777+2,SwTimerSetTimeout@timeout+2
 27587  0040EA  C0BA  F070         	movff	_RADIO_ReceiveStart$777+3,SwTimerSetTimeout@timeout+3
 27588  0040EE  0101               	movlb	1	; () banked
 27589  0040F0  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
 27590  0040F2  EC62  F043         	call	_SwTimerSetTimeout
 27591                           
 27592                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 27593  0040F6  0101               	movlb	1	; () banked
 27594  0040F8  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
 27595  0040FA  EC4B  F039         	call	_SwTimerStart
 27596  0040FE                     l531:
 27597                           
 27598                           ;radio_driver_SX1276.c: 946: }
 27599                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 27600  0040FE  0E00               	movlw	0
 27601  004100  0100               	movlb	0	; () banked
 27602  004102  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 27603  004104  0E00               	movlw	0
 27604  004106  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 27605  004108  0012               	return	
 27606  00410A                     __end_of_RADIO_ReceiveStart:
 27607                           	opt stack 0
 27608                           tosu	equ	0xFFF
 27609                           tosh	equ	0xFFE
 27610                           tosl	equ	0xFFD
 27611                           pclath	equ	0xFFA
 27612                           tblptru	equ	0xFF8
 27613                           tblptrh	equ	0xFF7
 27614                           tblptrl	equ	0xFF6
 27615                           tablat	equ	0xFF5
 27616                           prodh	equ	0xFF4
 27617                           prodl	equ	0xFF3
 27618                           intcon	equ	0xFF2
 27619                           intcon2	equ	0xFF1
 27620                           intcon3	equ	0xFF0
 27621                           indf0	equ	0xFEF
 27622                           postinc0	equ	0xFEE
 27623                           fsr0h	equ	0xFEA
 27624                           fsr0l	equ	0xFE9
 27625                           wreg	equ	0xFE8
 27626                           postinc1	equ	0xFE6
 27627                           postdec1	equ	0xFE5
 27628                           plusw1	equ	0xFE3
 27629                           fsr1h	equ	0xFE2
 27630                           fsr1l	equ	0xFE1
 27631                           indf2	equ	0xFDF
 27632                           postinc2	equ	0xFDE
 27633                           postdec2	equ	0xFDD
 27634                           plusw2	equ	0xFDB
 27635                           fsr2h	equ	0xFDA
 27636                           fsr2l	equ	0xFD9
 27637                           status	equ	0xFD8
 27638                           
 27639 ;; *************** function _ConfigureRadioRx *****************
 27640 ;; Defined at:
 27641 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27642 ;; Parameters:    Size  Location     Type
 27643 ;;  dataRate        1    wreg     unsigned char 
 27644 ;;  freq            4   19[BANK0 ] unsigned long 
 27645 ;; Auto vars:     Size  Location     Type
 27646 ;;  dataRate        1   23[BANK0 ] unsigned char 
 27647 ;; Return value:  Size  Location     Type
 27648 ;;                  1    wreg      void 
 27649 ;; Registers used:
 27650 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27651 ;; Tracked objects:
 27652 ;;		On entry : 0/0
 27653 ;;		On exit  : 0/0
 27654 ;;		Unchanged: 0/0
 27655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27656 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27659 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27660 ;;Total ram usage:        5 bytes
 27661 ;; Hardware stack levels used:    1
 27662 ;; Hardware stack levels required when called:   10
 27663 ;; This function calls:
 27664 ;;		_ConfigureRadio
 27665 ;;		_RADIO_SetCRC
 27666 ;;		_RADIO_SetIQInverted
 27667 ;; This function is called by:
 27668 ;;		_LORAWAN_ReceiveWindow1Callback
 27669 ;;		_LORAWAN_ReceiveWindow2Callback
 27670 ;;		_LORAWAN_EnterContinuousReceive
 27671 ;; This function uses a non-reentrant model
 27672 ;;
 27673                           
 27674                           	psect	text133
 27675  008CA6                     __ptext133:
 27676                           	opt stack 0
 27677  008CA6                     _ConfigureRadioRx:
 27678                           	opt stack 15
 27679                           
 27680                           ; BSR set to: 0
 27681                           ;incstack = 0
 27682                           ;ConfigureRadioRx@dataRate stored from wreg
 27683  008CA6  0100               	movlb	0	; () banked
 27684  008CA8  6F77               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 27685                           
 27686                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 27687  008CAA  C073  F06E         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 27688  008CAE  C074  F06F         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 27689  008CB2  C075  F070         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 27690  008CB6  C076  F071         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 27691  008CBA  0100               	movlb	0	; () banked
 27692  008CBC  5177               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 27693  008CBE  EC53  F038         	call	_ConfigureRadio
 27694                           
 27695                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 27696  008CC2  0E00               	movlw	0
 27697  008CC4  EC2E  F049         	call	_RADIO_SetCRC
 27698                           
 27699                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 27700  008CC8  0E01               	movlw	1
 27701  008CCA  EC29  F049         	call	_RADIO_SetIQInverted
 27702  008CCE  0012               	return		;funcret
 27703  008CD0                     __end_of_ConfigureRadioRx:
 27704                           	opt stack 0
 27705                           tosu	equ	0xFFF
 27706                           tosh	equ	0xFFE
 27707                           tosl	equ	0xFFD
 27708                           pclath	equ	0xFFA
 27709                           tblptru	equ	0xFF8
 27710                           tblptrh	equ	0xFF7
 27711                           tblptrl	equ	0xFF6
 27712                           tablat	equ	0xFF5
 27713                           prodh	equ	0xFF4
 27714                           prodl	equ	0xFF3
 27715                           intcon	equ	0xFF2
 27716                           intcon2	equ	0xFF1
 27717                           intcon3	equ	0xFF0
 27718                           indf0	equ	0xFEF
 27719                           postinc0	equ	0xFEE
 27720                           fsr0h	equ	0xFEA
 27721                           fsr0l	equ	0xFE9
 27722                           wreg	equ	0xFE8
 27723                           postinc1	equ	0xFE6
 27724                           postdec1	equ	0xFE5
 27725                           plusw1	equ	0xFE3
 27726                           fsr1h	equ	0xFE2
 27727                           fsr1l	equ	0xFE1
 27728                           indf2	equ	0xFDF
 27729                           postinc2	equ	0xFDE
 27730                           postdec2	equ	0xFDD
 27731                           plusw2	equ	0xFDB
 27732                           fsr2h	equ	0xFDA
 27733                           fsr2l	equ	0xFD9
 27734                           status	equ	0xFD8
 27735                           
 27736 ;; *************** function _INTERRUPT_GetDioStatus *****************
 27737 ;; Defined at:
 27738 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 27739 ;; Parameters:    Size  Location     Type
 27740 ;;		None
 27741 ;; Auto vars:     Size  Location     Type
 27742 ;;  a               1    0[BANK0 ] unsigned char 
 27743 ;; Return value:  Size  Location     Type
 27744 ;;                  1    wreg      unsigned char 
 27745 ;; Registers used:
 27746 ;;		wreg, status,2
 27747 ;; Tracked objects:
 27748 ;;		On entry : 0/0
 27749 ;;		On exit  : 0/0
 27750 ;;		Unchanged: 0/0
 27751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27755 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27756 ;;Total ram usage:        1 bytes
 27757 ;; Hardware stack levels used:    1
 27758 ;; Hardware stack levels required when called:    7
 27759 ;; This function calls:
 27760 ;;		Nothing
 27761 ;; This function is called by:
 27762 ;;		_LORAWAN_Mainloop
 27763 ;; This function uses a non-reentrant model
 27764 ;;
 27765                           
 27766                           	psect	text134
 27767  0090B8                     __ptext134:
 27768                           	opt stack 0
 27769  0090B8                     _INTERRUPT_GetDioStatus:
 27770                           	opt stack 22
 27771                           
 27772                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 27773                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 27774                           
 27775                           ;incstack = 0
 27776  0090B8  9EF2               	bcf	intcon,7,c	;volatile
 27777                           
 27778                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 27779  0090BA  C120  F060         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 27780                           
 27781                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 27782  0090BE  0E00               	movlw	0
 27783  0090C0  0101               	movlb	1	; () banked
 27784  0090C2  6F20               	movwf	_dioStatus& (0+255),b	;volatile
 27785                           
 27786                           ; BSR set to: 1
 27787                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 27788  0090C4  8EF2               	bsf	intcon,7,c	;volatile
 27789                           
 27790                           ;interrupt_manager_lora_addons.c: 55: return a;
 27791  0090C6  0100               	movlb	0	; () banked
 27792  0090C8  5160               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 27793  0090CA  0012               	return	
 27794  0090CC                     __end_of_INTERRUPT_GetDioStatus:
 27795                           	opt stack 0
 27796                           tosu	equ	0xFFF
 27797                           tosh	equ	0xFFE
 27798                           tosl	equ	0xFFD
 27799                           pclath	equ	0xFFA
 27800                           tblptru	equ	0xFF8
 27801                           tblptrh	equ	0xFF7
 27802                           tblptrl	equ	0xFF6
 27803                           tablat	equ	0xFF5
 27804                           prodh	equ	0xFF4
 27805                           prodl	equ	0xFF3
 27806                           intcon	equ	0xFF2
 27807                           intcon2	equ	0xFF1
 27808                           intcon3	equ	0xFF0
 27809                           indf0	equ	0xFEF
 27810                           postinc0	equ	0xFEE
 27811                           fsr0h	equ	0xFEA
 27812                           fsr0l	equ	0xFE9
 27813                           wreg	equ	0xFE8
 27814                           postinc1	equ	0xFE6
 27815                           postdec1	equ	0xFE5
 27816                           plusw1	equ	0xFE3
 27817                           fsr1h	equ	0xFE2
 27818                           fsr1l	equ	0xFE1
 27819                           indf2	equ	0xFDF
 27820                           postinc2	equ	0xFDE
 27821                           postdec2	equ	0xFDD
 27822                           plusw2	equ	0xFDB
 27823                           fsr2h	equ	0xFDA
 27824                           fsr2l	equ	0xFD9
 27825                           status	equ	0xFD8
 27826                           
 27827 ;; *************** function _LORAWAN_Join *****************
 27828 ;; Defined at:
 27829 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27830 ;; Parameters:    Size  Location     Type
 27831 ;;  activationTy    1    wreg     enum E7213
 27832 ;; Auto vars:     Size  Location     Type
 27833 ;;  activationTy    1  125[BANK0 ] enum E7213
 27834 ;;  result          1  124[BANK0 ] enum E7190
 27835 ;;  bufferIndex     1  123[BANK0 ] unsigned char 
 27836 ;; Return value:  Size  Location     Type
 27837 ;;                  1    wreg      enum E7190
 27838 ;; Registers used:
 27839 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27840 ;; Tracked objects:
 27841 ;;		On entry : 0/0
 27842 ;;		On exit  : 0/0
 27843 ;;		Unchanged: 0/0
 27844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27846 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27848 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27849 ;;Total ram usage:        3 bytes
 27850 ;; Hardware stack levels used:    1
 27851 ;; Hardware stack levels required when called:   14
 27852 ;; This function calls:
 27853 ;;		_PrepareJoinRequestFrame
 27854 ;;		_RADIO_Transmit
 27855 ;;		_SelectChannelForTransmission
 27856 ;;		_SwTimerSetTimeout
 27857 ;;		_SwTimerStart
 27858 ;;		_UpdateJoinInProgress
 27859 ;; This function is called by:
 27860 ;;		_main
 27861 ;; This function uses a non-reentrant model
 27862 ;;
 27863                           
 27864                           	psect	text135
 27865  00714E                     __ptext135:
 27866                           	opt stack 0
 27867  00714E                     _LORAWAN_Join:
 27868                           	opt stack 16
 27869                           
 27870                           ; BSR set to: 0
 27871                           ;incstack = 0
 27872                           ;LORAWAN_Join@activationTypeNew stored from wreg
 27873  00714E  0100               	movlb	0	; () banked
 27874  007150  6FDD               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 27875                           
 27876                           ;lorawan.c: 117: uint8_t bufferIndex;
 27877                           ;lorawan.c: 118: LorawanError_t result;
 27878                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 27879  007152  0102               	movlb	2	; () banked
 27880  007154  B103               	btfsc	(_loRa+3)& (0+255),0,b
 27881  007156  0012               	return	
 27882                           
 27883                           ; BSR set to: 2
 27884                           ;lorawan.c: 123: }
 27885                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 27886                           
 27887                           ; BSR set to: 2
 27888                           ;lorawan.c: 121: {
 27889                           ;lorawan.c: 122: return MAC_PAUSED;
 27890                           ;	Return value of _LORAWAN_Join is never used
 27891  007158  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 27892  00715A  0012               	return	
 27893                           
 27894                           ; BSR set to: 2
 27895                           ;lorawan.c: 128: }
 27896                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 27897                           
 27898                           ; BSR set to: 2
 27899                           
 27900                           ; BSR set to: 2
 27901                           ;lorawan.c: 126: {
 27902                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
 27903                           ;	Return value of _LORAWAN_Join is never used
 27904  00715C  5102               	movf	(_loRa+2)& (0+255),w,b
 27905  00715E  0B0F               	andlw	15
 27906  007160  0900               	iorlw	0
 27907  007162  A4D8               	btfss	status,2,c
 27908  007164  0012               	return	
 27909                           
 27910                           ; BSR set to: 2
 27911                           ;lorawan.c: 133: }
 27912                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 27913                           
 27914                           ; BSR set to: 2
 27915                           ;lorawan.c: 131: {
 27916                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 27917                           ;	Return value of _LORAWAN_Join is never used
 27918  007166  C0DD  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 27919                           
 27920                           ; BSR set to: 2
 27921                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 27922  00716A  0100               	movlb	0	; () banked
 27923  00716C  51DD               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 27924  00716E  A4D8               	btfss	status,2,c
 27925  007170  D024               	goto	l1502
 27926                           
 27927                           ; BSR set to: 0
 27928                           ;lorawan.c: 138: {
 27929                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 27930  007172  0102               	movlb	2	; () banked
 27931  007174  A1A5               	btfss	(_loRa+165)& (0+255),0,b
 27932  007176  0012               	return	
 27933                           
 27934                           ; BSR set to: 2
 27935  007178  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 27936  00717A  0012               	return	
 27937                           
 27938                           ; BSR set to: 2
 27939  00717C  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 27940  00717E  0012               	return	
 27941                           
 27942                           ; BSR set to: 2
 27943                           ;lorawan.c: 144: else
 27944                           ;lorawan.c: 145: {
 27945                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 27946                           
 27947                           ; BSR set to: 2
 27948                           
 27949                           ; BSR set to: 2
 27950                           ;lorawan.c: 143: }
 27951                           
 27952                           ; BSR set to: 2
 27953                           ;lorawan.c: 141: {
 27954                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
 27955                           ;	Return value of _LORAWAN_Join is never used
 27956  007180  EC1E  F025         	call	_PrepareJoinRequestFrame	;wreg free
 27957  007184  0100               	movlb	0	; () banked
 27958  007186  6FDB               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 27959                           
 27960                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 27961  007188  0E00               	movlw	0
 27962  00718A  EC70  F03D         	call	_SelectChannelForTransmission
 27963  00718E  0100               	movlb	0	; () banked
 27964  007190  6FDC               	movwf	LORAWAN_Join@result& (0+255),b
 27965                           
 27966                           ; BSR set to: 0
 27967                           ;lorawan.c: 149: if (result == OK)
 27968  007192  51DC               	movf	LORAWAN_Join@result& (0+255),w,b
 27969  007194  A4D8               	btfss	status,2,c
 27970  007196  0012               	return	
 27971                           
 27972                           ; BSR set to: 0
 27973                           ;lorawan.c: 150: {
 27974                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 27975  007198  0EE0               	movlw	low _macBuffer
 27976  00719A  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 27977  00719C  0E04               	movlw	high _macBuffer
 27978  00719E  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 27979  0071A0  C0DB  F0B3         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 27980  0071A4  EC51  F01E         	call	_RADIO_Transmit	;wreg free
 27981  0071A8  0100               	movlb	0	; () banked
 27982  0071AA  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 27983  0071AC  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 27984  0071AE  A4D8               	btfss	status,2,c
 27985  0071B0  0012               	return	
 27986                           
 27987                           ; BSR set to: 0
 27988                           ;lorawan.c: 152: {
 27989                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 27990  0071B2  0E01               	movlw	1
 27991  0071B4  ECFE  F047         	call	_UpdateJoinInProgress
 27992                           
 27993                           ;lorawan.c: 164: }
 27994                           ;lorawan.c: 165: }
 27995                           ;lorawan.c: 166: }
 27996                           
 27997                           ;lorawan.c: 161: else
 27998                           ;lorawan.c: 162: {
 27999                           ;lorawan.c: 163: return result;
 28000                           ;	Return value of _LORAWAN_Join is never used
 28001                           
 28002                           ;lorawan.c: 159: }
 28003                           ;lorawan.c: 160: }
 28004                           
 28005                           ;lorawan.c: 156: else
 28006                           ;lorawan.c: 157: {
 28007                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 28008                           ;	Return value of _LORAWAN_Join is never used
 28009                           
 28010                           ;lorawan.c: 155: }
 28011                           
 28012                           ;lorawan.c: 154: return OK;
 28013                           ;	Return value of _LORAWAN_Join is never used
 28014  0071B8  0012               	return	
 28015  0071BA                     l1502:
 28016                           
 28017                           ; BSR set to: 0
 28018                           ;lorawan.c: 167: else
 28019                           ;lorawan.c: 168: {
 28020                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 28021  0071BA  0102               	movlb	2	; () banked
 28022  0071BC  ABA5               	btfss	(_loRa+165)& (0+255),5,b
 28023  0071BE  0012               	return	
 28024                           
 28025                           ; BSR set to: 2
 28026  0071C0  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 28027  0071C2  0012               	return	
 28028                           
 28029                           ; BSR set to: 2
 28030  0071C4  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 28031  0071C6  0012               	return	
 28032                           
 28033                           ; BSR set to: 2
 28034                           ;lorawan.c: 174: else
 28035                           ;lorawan.c: 175: {
 28036                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 28037                           
 28038                           ; BSR set to: 2
 28039                           
 28040                           ; BSR set to: 2
 28041                           ;lorawan.c: 173: }
 28042                           
 28043                           ; BSR set to: 2
 28044                           ;lorawan.c: 171: {
 28045                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
 28046                           ;	Return value of _LORAWAN_Join is never used
 28047  0071C8  0E07               	movlw	7
 28048  0071CA  ECFE  F047         	call	_UpdateJoinInProgress
 28049                           
 28050                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 28051  0071CE  0E8F               	movlw	143
 28052  0071D0  0100               	movlb	0	; () banked
 28053  0071D2  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 28054  0071D4  0E02               	movlw	2
 28055  0071D6  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 28056  0071D8  0E00               	movlw	0
 28057  0071DA  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 28058  0071DC  0E00               	movlw	0
 28059  0071DE  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 28060  0071E0  0102               	movlb	2	; () banked
 28061  0071E2  51F3               	movf	(_loRa+243)& (0+255),w,b
 28062  0071E4  EC62  F043         	call	_SwTimerSetTimeout
 28063                           
 28064                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 28065  0071E8  0102               	movlb	2	; () banked
 28066  0071EA  51F3               	movf	(_loRa+243)& (0+255),w,b
 28067  0071EC  EC4B  F039         	call	_SwTimerStart
 28068                           
 28069                           ;lorawan.c: 180: return OK;
 28070                           ;	Return value of _LORAWAN_Join is never used
 28071  0071F0  0012               	return	
 28072  0071F2                     __end_of_LORAWAN_Join:
 28073                           	opt stack 0
 28074                           tosu	equ	0xFFF
 28075                           tosh	equ	0xFFE
 28076                           tosl	equ	0xFFD
 28077                           pclath	equ	0xFFA
 28078                           tblptru	equ	0xFF8
 28079                           tblptrh	equ	0xFF7
 28080                           tblptrl	equ	0xFF6
 28081                           tablat	equ	0xFF5
 28082                           prodh	equ	0xFF4
 28083                           prodl	equ	0xFF3
 28084                           intcon	equ	0xFF2
 28085                           intcon2	equ	0xFF1
 28086                           intcon3	equ	0xFF0
 28087                           indf0	equ	0xFEF
 28088                           postinc0	equ	0xFEE
 28089                           fsr0h	equ	0xFEA
 28090                           fsr0l	equ	0xFE9
 28091                           wreg	equ	0xFE8
 28092                           postinc1	equ	0xFE6
 28093                           postdec1	equ	0xFE5
 28094                           plusw1	equ	0xFE3
 28095                           fsr1h	equ	0xFE2
 28096                           fsr1l	equ	0xFE1
 28097                           indf2	equ	0xFDF
 28098                           postinc2	equ	0xFDE
 28099                           postdec2	equ	0xFDD
 28100                           plusw2	equ	0xFDB
 28101                           fsr2h	equ	0xFDA
 28102                           fsr2l	equ	0xFD9
 28103                           status	equ	0xFD8
 28104                           
 28105 ;; *************** function _UpdateJoinInProgress *****************
 28106 ;; Defined at:
 28107 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28108 ;; Parameters:    Size  Location     Type
 28109 ;;  state           1    wreg     unsigned char 
 28110 ;; Auto vars:     Size  Location     Type
 28111 ;;  state           1    0[BANK0 ] unsigned char 
 28112 ;; Return value:  Size  Location     Type
 28113 ;;                  1    wreg      void 
 28114 ;; Registers used:
 28115 ;;		wreg, status,2, status,0
 28116 ;; Tracked objects:
 28117 ;;		On entry : 0/0
 28118 ;;		On exit  : 0/0
 28119 ;;		Unchanged: 0/0
 28120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28124 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28125 ;;Total ram usage:        1 bytes
 28126 ;; Hardware stack levels used:    1
 28127 ;; Hardware stack levels required when called:    7
 28128 ;; This function calls:
 28129 ;;		Nothing
 28130 ;; This function is called by:
 28131 ;;		_LORAWAN_Join
 28132 ;; This function uses a non-reentrant model
 28133 ;;
 28134                           
 28135                           	psect	text136
 28136  008FFC                     __ptext136:
 28137                           	opt stack 0
 28138  008FFC                     _UpdateJoinInProgress:
 28139                           	opt stack 22
 28140                           
 28141                           ;incstack = 0
 28142                           ;UpdateJoinInProgress@state stored from wreg
 28143  008FFC  0100               	movlb	0	; () banked
 28144  008FFE  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
 28145                           
 28146                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 28147  009000  0102               	movlb	2	; () banked
 28148  009002  9902               	bcf	(_loRa+2)& (0+255),4,b
 28149                           
 28150                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 28151  009004  8500               	bsf	_loRa& (0+255),2,b
 28152                           
 28153                           ; BSR set to: 2
 28154                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 28155  009006  5102               	movf	(_loRa+2)& (0+255),w,b
 28156  009008  0100               	movlb	0	; () banked
 28157  00900A  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28158  00900C  0BF0               	andlw	-16
 28159  00900E  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28160  009010  0102               	movlb	2	; () banked
 28161  009012  6F02               	movwf	(_loRa+2)& (0+255),b
 28162                           
 28163                           ; BSR set to: 2
 28164  009014  0012               	return		;funcret
 28165  009016                     __end_of_UpdateJoinInProgress:
 28166                           	opt stack 0
 28167                           tosu	equ	0xFFF
 28168                           tosh	equ	0xFFE
 28169                           tosl	equ	0xFFD
 28170                           pclath	equ	0xFFA
 28171                           tblptru	equ	0xFF8
 28172                           tblptrh	equ	0xFF7
 28173                           tblptrl	equ	0xFF6
 28174                           tablat	equ	0xFF5
 28175                           prodh	equ	0xFF4
 28176                           prodl	equ	0xFF3
 28177                           intcon	equ	0xFF2
 28178                           intcon2	equ	0xFF1
 28179                           intcon3	equ	0xFF0
 28180                           indf0	equ	0xFEF
 28181                           postinc0	equ	0xFEE
 28182                           fsr0h	equ	0xFEA
 28183                           fsr0l	equ	0xFE9
 28184                           wreg	equ	0xFE8
 28185                           postinc1	equ	0xFE6
 28186                           postdec1	equ	0xFE5
 28187                           plusw1	equ	0xFE3
 28188                           fsr1h	equ	0xFE2
 28189                           fsr1l	equ	0xFE1
 28190                           indf2	equ	0xFDF
 28191                           postinc2	equ	0xFDE
 28192                           postdec2	equ	0xFDD
 28193                           plusw2	equ	0xFDB
 28194                           fsr2h	equ	0xFDA
 28195                           fsr2l	equ	0xFD9
 28196                           status	equ	0xFD8
 28197                           
 28198 ;; *************** function _SelectChannelForTransmission *****************
 28199 ;; Defined at:
 28200 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28201 ;; Parameters:    Size  Location     Type
 28202 ;;  transmission    1    wreg     unsigned char 
 28203 ;; Auto vars:     Size  Location     Type
 28204 ;;  transmission    1   91[BANK0 ] unsigned char 
 28205 ;;  channelIndex    1   93[BANK0 ] unsigned char 
 28206 ;;  result          1   92[BANK0 ] enum E7249
 28207 ;; Return value:  Size  Location     Type
 28208 ;;                  1    wreg      enum E7249
 28209 ;; Registers used:
 28210 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28211 ;; Tracked objects:
 28212 ;;		On entry : 0/0
 28213 ;;		On exit  : 0/0
 28214 ;;		Unchanged: 0/0
 28215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28217 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28219 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28220 ;;Total ram usage:        3 bytes
 28221 ;; Hardware stack levels used:    1
 28222 ;; Hardware stack levels required when called:   11
 28223 ;; This function calls:
 28224 ;;		_ConfigureRadioTx
 28225 ;;		_SearchAvailableChannel
 28226 ;; This function is called by:
 28227 ;;		_LORAWAN_RxTimeout
 28228 ;;		_LORAWAN_Join
 28229 ;;		_LORAWAN_Send
 28230 ;;		_AckRetransmissionCallback
 28231 ;;		_UnconfirmedTransmissionCallback
 28232 ;; This function uses a non-reentrant model
 28233 ;;
 28234                           
 28235                           	psect	text137
 28236  007AE0                     __ptext137:
 28237                           	opt stack 0
 28238  007AE0                     _SelectChannelForTransmission:
 28239                           	opt stack 18
 28240                           
 28241                           ; BSR set to: 2
 28242                           ;incstack = 0
 28243                           ;SelectChannelForTransmission@transmissionType stored from wreg
 28244  007AE0  0100               	movlb	0	; () banked
 28245  007AE2  6FBB               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 28246                           
 28247                           ;lorawan_eu.c: 921: LorawanError_t result = OK;
 28248  007AE4  0E00               	movlw	0
 28249  007AE6  0100               	movlb	0	; () banked
 28250  007AE8  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 28251                           
 28252                           ; BSR set to: 0
 28253                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 28254                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 28255  007AEA  C0BB  F0AF         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 28256  007AEE  0EBD               	movlw	low SelectChannelForTransmission@channelIndex
 28257  007AF0  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 28258  007AF2  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 28259  007AF4  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 28260  007AF6  0E10               	movlw	16
 28261  007AF8  EC70  F02D         	call	_SearchAvailableChannel
 28262  007AFC  0100               	movlb	0	; () banked
 28263  007AFE  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 28264                           
 28265                           ; BSR set to: 0
 28266                           ;lorawan_eu.c: 926: if (result == OK)
 28267  007B00  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28268  007B02  A4D8               	btfss	status,2,c
 28269  007B04  D020               	goto	l1188
 28270                           
 28271                           ; BSR set to: 0
 28272                           ;lorawan_eu.c: 927: {
 28273                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 28274  007B06  C0BD  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 28275                           
 28276                           ; BSR set to: 0
 28277                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 28278  007B0A  51BD               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 28279  007B0C  0D0E               	mullw	14
 28280  007B0E  0E00               	movlw	low _Channels
 28281  007B10  24F3               	addwf	prodl,w,c
 28282  007B12  6ED9               	movwf	fsr2l,c
 28283  007B14  0E04               	movlw	high _Channels
 28284  007B16  20F4               	addwfc	prodh,w,c
 28285  007B18  6EDA               	movwf	fsr2h,c
 28286  007B1A  CFDE F213          	movff	postinc2,_loRa+19
 28287  007B1E  CFDE F214          	movff	postinc2,_loRa+20
 28288  007B22  CFDE F215          	movff	postinc2,_loRa+21
 28289  007B26  CFDE F216          	movff	postinc2,_loRa+22
 28290                           
 28291                           ; BSR set to: 0
 28292                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 28293  007B2A  C2DF  F217         	movff	_loRa+223,_loRa+23
 28294                           
 28295                           ; BSR set to: 0
 28296                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 28297  007B2E  C213  F073         	movff	_loRa+19,ConfigureRadioTx@freq
 28298  007B32  C214  F074         	movff	_loRa+20,ConfigureRadioTx@freq+1
 28299  007B36  C215  F075         	movff	_loRa+21,ConfigureRadioTx@freq+2
 28300  007B3A  C216  F076         	movff	_loRa+22,ConfigureRadioTx@freq+3
 28301  007B3E  0102               	movlb	2	; () banked
 28302  007B40  5117               	movf	(_loRa+23)& (0+255),w,b
 28303  007B42  EC87  F041         	call	_ConfigureRadioTx
 28304  007B46                     l1188:
 28305                           
 28306                           ;lorawan_eu.c: 933: }
 28307                           ;lorawan_eu.c: 934: return result;
 28308  007B46  0100               	movlb	0	; () banked
 28309  007B48  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28310  007B4A  0012               	return	
 28311  007B4C                     __end_of_SelectChannelForTransmission:
 28312                           	opt stack 0
 28313                           tosu	equ	0xFFF
 28314                           tosh	equ	0xFFE
 28315                           tosl	equ	0xFFD
 28316                           pclath	equ	0xFFA
 28317                           tblptru	equ	0xFF8
 28318                           tblptrh	equ	0xFF7
 28319                           tblptrl	equ	0xFF6
 28320                           tablat	equ	0xFF5
 28321                           prodh	equ	0xFF4
 28322                           prodl	equ	0xFF3
 28323                           intcon	equ	0xFF2
 28324                           intcon2	equ	0xFF1
 28325                           intcon3	equ	0xFF0
 28326                           indf0	equ	0xFEF
 28327                           postinc0	equ	0xFEE
 28328                           fsr0h	equ	0xFEA
 28329                           fsr0l	equ	0xFE9
 28330                           wreg	equ	0xFE8
 28331                           postinc1	equ	0xFE6
 28332                           postdec1	equ	0xFE5
 28333                           plusw1	equ	0xFE3
 28334                           fsr1h	equ	0xFE2
 28335                           fsr1l	equ	0xFE1
 28336                           indf2	equ	0xFDF
 28337                           postinc2	equ	0xFDE
 28338                           postdec2	equ	0xFDD
 28339                           plusw2	equ	0xFDB
 28340                           fsr2h	equ	0xFDA
 28341                           fsr2l	equ	0xFD9
 28342                           status	equ	0xFD8
 28343                           
 28344 ;; *************** function _SearchAvailableChannel *****************
 28345 ;; Defined at:
 28346 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28347 ;; Parameters:    Size  Location     Type
 28348 ;;  maxChannels     1    wreg     unsigned char 
 28349 ;;  transmission    1   79[BANK0 ] unsigned char 
 28350 ;;  channelIndex    2   80[BANK0 ] PTR unsigned char 
 28351 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 28352 ;; Auto vars:     Size  Location     Type
 28353 ;;  maxChannels     1   88[BANK0 ] unsigned char 
 28354 ;;  i               1   90[BANK0 ] unsigned char 
 28355 ;;  randomNumber    1   89[BANK0 ] unsigned char 
 28356 ;;  result          1   87[BANK0 ] enum E7249
 28357 ;;  randomNumber    1   86[BANK0 ] unsigned char 
 28358 ;; Return value:  Size  Location     Type
 28359 ;;                  1    wreg      enum E7249
 28360 ;; Registers used:
 28361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28362 ;; Tracked objects:
 28363 ;;		On entry : 0/0
 28364 ;;		On exit  : 0/0
 28365 ;;		Unchanged: 0/0
 28366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28367 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28368 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28370 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28371 ;;Total ram usage:       12 bytes
 28372 ;; Hardware stack levels used:    1
 28373 ;; Hardware stack levels required when called:   10
 28374 ;; This function calls:
 28375 ;;		_Random
 28376 ;; This function is called by:
 28377 ;;		_SelectChannelForTransmission
 28378 ;;		_LORAWAN_RxDone
 28379 ;; This function uses a non-reentrant model
 28380 ;;
 28381                           
 28382                           	psect	text138
 28383  005AE0                     __ptext138:
 28384                           	opt stack 0
 28385  005AE0                     _SearchAvailableChannel:
 28386                           	opt stack 18
 28387                           
 28388                           ; BSR set to: 0
 28389                           ;incstack = 0
 28390                           ;SearchAvailableChannel@maxChannels stored from wreg
 28391  005AE0  0100               	movlb	0	; () banked
 28392  005AE2  6FB8               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 28393                           
 28394                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 28395                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 28396  005AE4  0E00               	movlw	0
 28397  005AE6  0100               	movlb	0	; () banked
 28398  005AE8  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 28399                           
 28400                           ; BSR set to: 0
 28401                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 28402  005AEA  C0B8  F0AD         	movff	SearchAvailableChannel@maxChannels,Random@max
 28403  005AEE  6BAE               	clrf	(Random@max+1)& (0+255),b
 28404  005AF0  EC13  F047         	call	_Random	;wreg free
 28405  005AF4  0100               	movlb	0	; () banked
 28406  005AF6  29AD               	incf	?_Random& (0+255),w,b
 28407  005AF8  6FB9               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 28408                           
 28409                           ; BSR set to: 0
 28410                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 28411  005AFA  C0B9  F0B6         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 28412                           
 28413                           ;lorawan_eu.c: 786: while (randomNumber)
 28414  005AFE  D074               	goto	l1152
 28415  005B00                     
 28416                           ; BSR set to: 0
 28417                           ;lorawan_eu.c: 787: {
 28418                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 28419                           
 28420                           ; BSR set to: 0
 28421  005B00  0E00               	movlw	0
 28422  005B02  6FBA               	movwf	SearchAvailableChannel@i& (0+255),b
 28423  005B04  D063               	goto	l1143
 28424  005B06                     
 28425                           ; BSR set to: 0
 28426                           ;lorawan_eu.c: 789: {
 28427                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 28428                           
 28429                           ; BSR set to: 0
 28430  005B06  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 28431  005B08  0D0E               	mullw	14
 28432  005B0A  0E04               	movlw	4
 28433  005B0C  26F3               	addwf	prodl,f,c
 28434  005B0E  0E00               	movlw	0
 28435  005B10  22F4               	addwfc	prodh,f,c
 28436  005B12  0E00               	movlw	low _Channels
 28437  005B14  24F3               	addwf	prodl,w,c
 28438  005B16  6ED9               	movwf	fsr2l,c
 28439  005B18  0E04               	movlw	high _Channels
 28440  005B1A  20F4               	addwfc	prodh,w,c
 28441  005B1C  6EDA               	movwf	fsr2h,c
 28442  005B1E  04DE               	decf	postinc2,w,c
 28443  005B20  A4D8               	btfss	status,2,c
 28444  005B22  D052               	goto	l1148
 28445                           
 28446                           ; BSR set to: 0
 28447  005B24  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 28448  005B26  0D0E               	mullw	14
 28449  005B28  0E08               	movlw	8
 28450  005B2A  26F3               	addwf	prodl,f,c
 28451  005B2C  0E00               	movlw	0
 28452  005B2E  22F4               	addwfc	prodh,f,c
 28453  005B30  0E00               	movlw	low _Channels
 28454  005B32  24F3               	addwf	prodl,w,c
 28455  005B34  6ED9               	movwf	fsr2l,c
 28456  005B36  0E04               	movlw	high _Channels
 28457  005B38  20F4               	addwfc	prodh,w,c
 28458  005B3A  6EDA               	movwf	fsr2h,c
 28459  005B3C  50DE               	movf	postinc2,w,c
 28460  005B3E  10DE               	iorwf	postinc2,w,c
 28461  005B40  10DE               	iorwf	postinc2,w,c
 28462  005B42  10DE               	iorwf	postinc2,w,c
 28463  005B44  A4D8               	btfss	status,2,c
 28464  005B46  D040               	goto	l1148
 28465                           
 28466                           ; BSR set to: 0
 28467  005B48  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 28468  005B4A  0D0E               	mullw	14
 28469  005B4C  0E05               	movlw	5
 28470  005B4E  26F3               	addwf	prodl,f,c
 28471  005B50  0E00               	movlw	0
 28472  005B52  22F4               	addwfc	prodh,f,c
 28473  005B54  0E00               	movlw	low _Channels
 28474  005B56  24F3               	addwf	prodl,w,c
 28475  005B58  6ED9               	movwf	fsr2l,c
 28476  005B5A  0E04               	movlw	high _Channels
 28477  005B5C  20F4               	addwfc	prodh,w,c
 28478  005B5E  6EDA               	movwf	fsr2h,c
 28479  005B60  0104               	movlb	4	; () banked
 28480  005B62  50DF               	movf	223,w,c
 28481  005B64  0B0F               	andlw	15
 28482  005B66  0100               	movlb	0	; () banked
 28483  005B68  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 28484  005B6A  51B2               	movf	??_SearchAvailableChannel& (0+255),w,b
 28485  005B6C  0102               	movlb	2	; () banked
 28486  005B6E  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 28487  005B70  A0D8               	btfss	status,0,c
 28488  005B72  D02A               	goto	l1148
 28489                           
 28490                           ; BSR set to: 2
 28491  005B74  0100               	movlb	0	; () banked
 28492  005B76  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 28493  005B78  0D0E               	mullw	14
 28494  005B7A  0E05               	movlw	5
 28495  005B7C  26F3               	addwf	prodl,f,c
 28496  005B7E  0E00               	movlw	0
 28497  005B80  22F4               	addwfc	prodh,f,c
 28498  005B82  0E00               	movlw	low _Channels
 28499  005B84  24F3               	addwf	prodl,w,c
 28500  005B86  6ED9               	movwf	fsr2l,c
 28501  005B88  0E04               	movlw	high _Channels
 28502  005B8A  20F4               	addwfc	prodh,w,c
 28503  005B8C  6EDA               	movwf	fsr2h,c
 28504  005B8E  0104               	movlb	4	; () banked
 28505  005B90  38DF               	swapf	223,w,c
 28506  005B92  0B0F               	andlw	15
 28507  005B94  0100               	movlb	0	; () banked
 28508  005B96  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 28509  005B98  0102               	movlb	2	; () banked
 28510  005B9A  51DF               	movf	(_loRa+223)& (0+255),w,b
 28511  005B9C  0100               	movlb	0	; () banked
 28512  005B9E  5DB2               	subwf	??_SearchAvailableChannel& (0+255),w,b
 28513  005BA0  A0D8               	btfss	status,0,c
 28514  005BA2  D012               	goto	l1148
 28515                           
 28516                           ; BSR set to: 0
 28517                           ;lorawan_eu.c: 791: {
 28518                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 28519  005BA4  51AF               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 28520  005BA6  A4D8               	btfss	status,2,c
 28521  005BA8  D00E               	goto	l1146
 28522                           
 28523                           ; BSR set to: 0
 28524                           ;lorawan_eu.c: 793: {
 28525                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 28526  005BAA  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 28527  005BAC  0D0E               	mullw	14
 28528  005BAE  0E0C               	movlw	12
 28529  005BB0  26F3               	addwf	prodl,f,c
 28530  005BB2  0E00               	movlw	0
 28531  005BB4  22F4               	addwfc	prodh,f,c
 28532  005BB6  0E00               	movlw	low _Channels
 28533  005BB8  24F3               	addwf	prodl,w,c
 28534  005BBA  6ED9               	movwf	fsr2l,c
 28535  005BBC  0E04               	movlw	high _Channels
 28536  005BBE  20F4               	addwfc	prodh,w,c
 28537  005BC0  6EDA               	movwf	fsr2h,c
 28538  005BC2  04DE               	decf	postinc2,w,c
 28539  005BC4  B4D8               	btfsc	status,2,c
 28540  005BC6                     l1146:
 28541                           
 28542                           ; BSR set to: 0
 28543                           ;lorawan_eu.c: 799: else
 28544                           ;lorawan_eu.c: 800: {
 28545                           ;lorawan_eu.c: 801: randomNumber --;
 28546                           
 28547                           ; BSR set to: 0
 28548  005BC6  07B9               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 28549  005BC8                     l1148:
 28550                           
 28551                           ; BSR set to: 0
 28552  005BC8  0100               	movlb	0	; () banked
 28553  005BCA  2BBA               	incf	SearchAvailableChannel@i& (0+255),f,b
 28554  005BCC                     l1143:
 28555                           
 28556                           ; BSR set to: 0
 28557                           
 28558                           ; BSR set to: 0
 28559  005BCC  51B8               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 28560  005BCE  5DBA               	subwf	SearchAvailableChannel@i& (0+255),w,b
 28561  005BD0  B0D8               	btfsc	status,0,c
 28562  005BD2  D003               	goto	u16690
 28563                           
 28564                           ; BSR set to: 0
 28565  005BD4  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28566  005BD6  A4D8               	btfss	status,2,c
 28567  005BD8  D796               	goto	l1144
 28568  005BDA                     u16690:
 28569                           
 28570                           ; BSR set to: 0
 28571                           ;lorawan_eu.c: 802: }
 28572                           ;lorawan_eu.c: 803: }
 28573                           ;lorawan_eu.c: 804: }
 28574                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 28575                           
 28576                           ; BSR set to: 0
 28577                           
 28578                           ; BSR set to: 0
 28579  005BDA  51B6               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 28580  005BDC  19B9               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28581  005BDE  A4D8               	btfss	status,2,c
 28582  005BE0  D003               	goto	l1152
 28583                           
 28584                           ; BSR set to: 0
 28585                           ;lorawan_eu.c: 807: {
 28586                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 28587  005BE2  0E09               	movlw	9
 28588  005BE4  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 28589                           
 28590                           ;lorawan_eu.c: 809: break;
 28591  005BE6  D003               	goto	u16710
 28592  005BE8                     l1152:
 28593                           
 28594                           ; BSR set to: 0
 28595                           
 28596                           ; BSR set to: 0
 28597                           
 28598                           ; BSR set to: 0
 28599  005BE8  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28600  005BEA  A4D8               	btfss	status,2,c
 28601  005BEC  D789               	goto	l1142
 28602  005BEE                     u16710:
 28603                           
 28604                           ; BSR set to: 0
 28605                           ;lorawan_eu.c: 810: }
 28606                           ;lorawan_eu.c: 811: }
 28607                           ;lorawan_eu.c: 813: if ( i != 0)
 28608                           
 28609                           ; BSR set to: 0
 28610  005BEE  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 28611  005BF0  B4D8               	btfsc	status,2,c
 28612  005BF2  D007               	goto	l1154
 28613                           
 28614                           ; BSR set to: 0
 28615                           ;lorawan_eu.c: 814: {
 28616                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 28617  005BF4  05BA               	decf	SearchAvailableChannel@i& (0+255),w,b
 28618  005BF6  C0B0  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 28619  005BFA  C0B1  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 28620  005BFE  6EDF               	movwf	indf2,c
 28621                           
 28622                           ;lorawan_eu.c: 816: }
 28623  005C00  D002               	goto	l1155
 28624  005C02                     l1154:
 28625                           
 28626                           ; BSR set to: 0
 28627                           ;lorawan_eu.c: 817: else
 28628                           ;lorawan_eu.c: 818: {
 28629                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 28630                           
 28631                           ; BSR set to: 0
 28632  005C02  0E09               	movlw	9
 28633  005C04  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 28634  005C06                     l1155:
 28635                           
 28636                           ; BSR set to: 0
 28637                           ;lorawan_eu.c: 820: }
 28638                           ;lorawan_eu.c: 821: return result;
 28639  005C06  51B7               	movf	SearchAvailableChannel@result& (0+255),w,b
 28640  005C08  0012               	return	
 28641  005C0A                     __end_of_SearchAvailableChannel:
 28642                           	opt stack 0
 28643                           tosu	equ	0xFFF
 28644                           tosh	equ	0xFFE
 28645                           tosl	equ	0xFFD
 28646                           pclath	equ	0xFFA
 28647                           tblptru	equ	0xFF8
 28648                           tblptrh	equ	0xFF7
 28649                           tblptrl	equ	0xFF6
 28650                           tablat	equ	0xFF5
 28651                           prodh	equ	0xFF4
 28652                           prodl	equ	0xFF3
 28653                           intcon	equ	0xFF2
 28654                           intcon2	equ	0xFF1
 28655                           intcon3	equ	0xFF0
 28656                           indf0	equ	0xFEF
 28657                           postinc0	equ	0xFEE
 28658                           fsr0h	equ	0xFEA
 28659                           fsr0l	equ	0xFE9
 28660                           wreg	equ	0xFE8
 28661                           postinc1	equ	0xFE6
 28662                           postdec1	equ	0xFE5
 28663                           plusw1	equ	0xFE3
 28664                           fsr1h	equ	0xFE2
 28665                           fsr1l	equ	0xFE1
 28666                           indf2	equ	0xFDF
 28667                           postinc2	equ	0xFDE
 28668                           postdec2	equ	0xFDD
 28669                           plusw2	equ	0xFDB
 28670                           fsr2h	equ	0xFDA
 28671                           fsr2l	equ	0xFD9
 28672                           status	equ	0xFD8
 28673                           
 28674 ;; *************** function _ConfigureRadioTx *****************
 28675 ;; Defined at:
 28676 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28677 ;; Parameters:    Size  Location     Type
 28678 ;;  dataRate        1    wreg     unsigned char 
 28679 ;;  freq            4   19[BANK0 ] unsigned long 
 28680 ;; Auto vars:     Size  Location     Type
 28681 ;;  dataRate        1   23[BANK0 ] unsigned char 
 28682 ;;  txPower         1   24[BANK0 ] char 
 28683 ;; Return value:  Size  Location     Type
 28684 ;;                  1    wreg      void 
 28685 ;; Registers used:
 28686 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28687 ;; Tracked objects:
 28688 ;;		On entry : 0/0
 28689 ;;		On exit  : 0/0
 28690 ;;		Unchanged: 0/0
 28691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28692 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28695 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28696 ;;Total ram usage:        6 bytes
 28697 ;; Hardware stack levels used:    1
 28698 ;; Hardware stack levels required when called:   10
 28699 ;; This function calls:
 28700 ;;		_ConfigureRadio
 28701 ;;		_RADIO_SetCRC
 28702 ;;		_RADIO_SetIQInverted
 28703 ;;		_RADIO_SetOutputPower
 28704 ;; This function is called by:
 28705 ;;		_SelectChannelForTransmission
 28706 ;; This function uses a non-reentrant model
 28707 ;;
 28708                           
 28709                           	psect	text139
 28710  00830E                     __ptext139:
 28711                           	opt stack 0
 28712  00830E                     _ConfigureRadioTx:
 28713                           	opt stack 18
 28714                           
 28715                           ; BSR set to: 0
 28716                           ;incstack = 0
 28717                           ;ConfigureRadioTx@dataRate stored from wreg
 28718  00830E  0100               	movlb	0	; () banked
 28719  008310  6F77               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 28720                           
 28721                           ;lorawan_eu.c: 1257: int8_t txPower;
 28722                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 28723  008312  C073  F06E         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 28724  008316  C074  F06F         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 28725  00831A  C075  F070         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 28726  00831E  C076  F071         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 28727  008322  0100               	movlb	0	; () banked
 28728  008324  5177               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 28729  008326  EC53  F038         	call	_ConfigureRadio
 28730                           
 28731                           ;lorawan_eu.c: 1261: if (ISM_EU868 == loRa.ismBand)
 28732  00832A  0102               	movlb	2	; () banked
 28733  00832C  51A4               	movf	(_loRa+164)& (0+255),w,b
 28734                           
 28735                           ; BSR set to: 2
 28736                           ;lorawan_eu.c: 1265: else
 28737                           ;lorawan_eu.c: 1266: {
 28738                           ;lorawan_eu.c: 1267: txPower = txPower868[loRa.txPower];
 28739                           
 28740                           ; BSR set to: 2
 28741                           
 28742                           ;lorawan_eu.c: 1264: }
 28743                           
 28744                           ; BSR set to: 2
 28745                           ;lorawan_eu.c: 1262: {
 28746                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 28747  00832E  51E1               	movf	(_loRa+225)& (0+255),w,b
 28748  008330  0D01               	mullw	1
 28749  008332  0E7C               	movlw	low _txPower868
 28750  008334  24F3               	addwf	prodl,w,c
 28751  008336  6EF6               	movwf	tblptrl,c
 28752  008338  0EFF               	movlw	high _txPower868
 28753  00833A  20F4               	addwfc	prodh,w,c
 28754  00833C  6EF7               	movwf	tblptrh,c
 28755  00833E                     	if	1	;There are 3 active tblptr bytes
 28756  00833E  6AF8               	clrf	tblptru,c
 28757  008340  0E00               	movlw	low (__mediumconst shr (0+16))
 28758  008342  22F8               	addwfc	tblptru,f,c
 28759  008344                     	endif
 28760  008344  0008               	tblrd		*
 28761  008346  CFF5 F078          	movff	tablat,ConfigureRadioTx@txPower
 28762                           
 28763                           ; BSR set to: 2
 28764                           ;lorawan_eu.c: 1268: }
 28765                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 28766                           
 28767                           ; BSR set to: 2
 28768  00834A  0100               	movlb	0	; () banked
 28769  00834C  5178               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 28770  00834E  EC24  F049         	call	_RADIO_SetOutputPower
 28771                           
 28772                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 28773  008352  0E01               	movlw	1
 28774  008354  EC2E  F049         	call	_RADIO_SetCRC
 28775                           
 28776                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 28777  008358  0E00               	movlw	0
 28778  00835A  EC29  F049         	call	_RADIO_SetIQInverted
 28779  00835E  0012               	return		;funcret
 28780  008360                     __end_of_ConfigureRadioTx:
 28781                           	opt stack 0
 28782                           tosu	equ	0xFFF
 28783                           tosh	equ	0xFFE
 28784                           tosl	equ	0xFFD
 28785                           pclath	equ	0xFFA
 28786                           tblptru	equ	0xFF8
 28787                           tblptrh	equ	0xFF7
 28788                           tblptrl	equ	0xFF6
 28789                           tablat	equ	0xFF5
 28790                           prodh	equ	0xFF4
 28791                           prodl	equ	0xFF3
 28792                           intcon	equ	0xFF2
 28793                           intcon2	equ	0xFF1
 28794                           intcon3	equ	0xFF0
 28795                           indf0	equ	0xFEF
 28796                           postinc0	equ	0xFEE
 28797                           fsr0h	equ	0xFEA
 28798                           fsr0l	equ	0xFE9
 28799                           wreg	equ	0xFE8
 28800                           postinc1	equ	0xFE6
 28801                           postdec1	equ	0xFE5
 28802                           plusw1	equ	0xFE3
 28803                           fsr1h	equ	0xFE2
 28804                           fsr1l	equ	0xFE1
 28805                           indf2	equ	0xFDF
 28806                           postinc2	equ	0xFDE
 28807                           postdec2	equ	0xFDD
 28808                           plusw2	equ	0xFDB
 28809                           fsr2h	equ	0xFDA
 28810                           fsr2l	equ	0xFD9
 28811                           status	equ	0xFD8
 28812                           
 28813 ;; *************** function _RADIO_SetOutputPower *****************
 28814 ;; Defined at:
 28815 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28816 ;; Parameters:    Size  Location     Type
 28817 ;;  power           1    wreg     char 
 28818 ;; Auto vars:     Size  Location     Type
 28819 ;;  power           1    0[BANK0 ] char 
 28820 ;; Return value:  Size  Location     Type
 28821 ;;                  1    wreg      void 
 28822 ;; Registers used:
 28823 ;;		wreg
 28824 ;; Tracked objects:
 28825 ;;		On entry : 0/0
 28826 ;;		On exit  : 0/0
 28827 ;;		Unchanged: 0/0
 28828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28832 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28833 ;;Total ram usage:        1 bytes
 28834 ;; Hardware stack levels used:    1
 28835 ;; Hardware stack levels required when called:    7
 28836 ;; This function calls:
 28837 ;;		Nothing
 28838 ;; This function is called by:
 28839 ;;		_ConfigureRadioTx
 28840 ;; This function uses a non-reentrant model
 28841 ;;
 28842                           
 28843                           	psect	text140
 28844  009248                     __ptext140:
 28845                           	opt stack 0
 28846  009248                     _RADIO_SetOutputPower:
 28847                           	opt stack 20
 28848                           
 28849                           ;incstack = 0
 28850                           ;RADIO_SetOutputPower@power stored from wreg
 28851  009248  0100               	movlb	0	; () banked
 28852  00924A  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
 28853                           
 28854                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 28855  00924C  C060  F13C         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 28856  009250  0012               	return		;funcret
 28857  009252                     __end_of_RADIO_SetOutputPower:
 28858                           	opt stack 0
 28859                           tosu	equ	0xFFF
 28860                           tosh	equ	0xFFE
 28861                           tosl	equ	0xFFD
 28862                           pclath	equ	0xFFA
 28863                           tblptru	equ	0xFF8
 28864                           tblptrh	equ	0xFF7
 28865                           tblptrl	equ	0xFF6
 28866                           tablat	equ	0xFF5
 28867                           prodh	equ	0xFF4
 28868                           prodl	equ	0xFF3
 28869                           intcon	equ	0xFF2
 28870                           intcon2	equ	0xFF1
 28871                           intcon3	equ	0xFF0
 28872                           indf0	equ	0xFEF
 28873                           postinc0	equ	0xFEE
 28874                           fsr0h	equ	0xFEA
 28875                           fsr0l	equ	0xFE9
 28876                           wreg	equ	0xFE8
 28877                           postinc1	equ	0xFE6
 28878                           postdec1	equ	0xFE5
 28879                           plusw1	equ	0xFE3
 28880                           fsr1h	equ	0xFE2
 28881                           fsr1l	equ	0xFE1
 28882                           indf2	equ	0xFDF
 28883                           postinc2	equ	0xFDE
 28884                           postdec2	equ	0xFDD
 28885                           plusw2	equ	0xFDB
 28886                           fsr2h	equ	0xFDA
 28887                           fsr2l	equ	0xFD9
 28888                           status	equ	0xFD8
 28889                           
 28890 ;; *************** function _RADIO_SetIQInverted *****************
 28891 ;; Defined at:
 28892 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28893 ;; Parameters:    Size  Location     Type
 28894 ;;  iqInverted      1    wreg     unsigned char 
 28895 ;; Auto vars:     Size  Location     Type
 28896 ;;  iqInverted      1    0[BANK0 ] unsigned char 
 28897 ;; Return value:  Size  Location     Type
 28898 ;;                  1    wreg      void 
 28899 ;; Registers used:
 28900 ;;		wreg
 28901 ;; Tracked objects:
 28902 ;;		On entry : 0/0
 28903 ;;		On exit  : 0/0
 28904 ;;		Unchanged: 0/0
 28905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28907 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28909 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28910 ;;Total ram usage:        1 bytes
 28911 ;; Hardware stack levels used:    1
 28912 ;; Hardware stack levels required when called:    7
 28913 ;; This function calls:
 28914 ;;		Nothing
 28915 ;; This function is called by:
 28916 ;;		_ConfigureRadioTx
 28917 ;;		_ConfigureRadioRx
 28918 ;; This function uses a non-reentrant model
 28919 ;;
 28920                           
 28921                           	psect	text141
 28922  009252                     __ptext141:
 28923                           	opt stack 0
 28924  009252                     _RADIO_SetIQInverted:
 28925                           	opt stack 20
 28926                           
 28927                           ;incstack = 0
 28928                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 28929  009252  0100               	movlb	0	; () banked
 28930  009254  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 28931                           
 28932                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 28933  009256  C060  F141         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 28934  00925A  0012               	return		;funcret
 28935  00925C                     __end_of_RADIO_SetIQInverted:
 28936                           	opt stack 0
 28937                           tosu	equ	0xFFF
 28938                           tosh	equ	0xFFE
 28939                           tosl	equ	0xFFD
 28940                           pclath	equ	0xFFA
 28941                           tblptru	equ	0xFF8
 28942                           tblptrh	equ	0xFF7
 28943                           tblptrl	equ	0xFF6
 28944                           tablat	equ	0xFF5
 28945                           prodh	equ	0xFF4
 28946                           prodl	equ	0xFF3
 28947                           intcon	equ	0xFF2
 28948                           intcon2	equ	0xFF1
 28949                           intcon3	equ	0xFF0
 28950                           indf0	equ	0xFEF
 28951                           postinc0	equ	0xFEE
 28952                           fsr0h	equ	0xFEA
 28953                           fsr0l	equ	0xFE9
 28954                           wreg	equ	0xFE8
 28955                           postinc1	equ	0xFE6
 28956                           postdec1	equ	0xFE5
 28957                           plusw1	equ	0xFE3
 28958                           fsr1h	equ	0xFE2
 28959                           fsr1l	equ	0xFE1
 28960                           indf2	equ	0xFDF
 28961                           postinc2	equ	0xFDE
 28962                           postdec2	equ	0xFDD
 28963                           plusw2	equ	0xFDB
 28964                           fsr2h	equ	0xFDA
 28965                           fsr2l	equ	0xFD9
 28966                           status	equ	0xFD8
 28967                           
 28968 ;; *************** function _RADIO_SetCRC *****************
 28969 ;; Defined at:
 28970 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28971 ;; Parameters:    Size  Location     Type
 28972 ;;  crc             1    wreg     unsigned char 
 28973 ;; Auto vars:     Size  Location     Type
 28974 ;;  crc             1    0[BANK0 ] unsigned char 
 28975 ;; Return value:  Size  Location     Type
 28976 ;;                  1    wreg      void 
 28977 ;; Registers used:
 28978 ;;		wreg
 28979 ;; Tracked objects:
 28980 ;;		On entry : 0/0
 28981 ;;		On exit  : 0/0
 28982 ;;		Unchanged: 0/0
 28983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28987 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28988 ;;Total ram usage:        1 bytes
 28989 ;; Hardware stack levels used:    1
 28990 ;; Hardware stack levels required when called:    7
 28991 ;; This function calls:
 28992 ;;		Nothing
 28993 ;; This function is called by:
 28994 ;;		_ConfigureRadioTx
 28995 ;;		_ConfigureRadioRx
 28996 ;; This function uses a non-reentrant model
 28997 ;;
 28998                           
 28999                           	psect	text142
 29000  00925C                     __ptext142:
 29001                           	opt stack 0
 29002  00925C                     _RADIO_SetCRC:
 29003                           	opt stack 20
 29004                           
 29005                           ;incstack = 0
 29006                           ;RADIO_SetCRC@crc stored from wreg
 29007  00925C  0100               	movlb	0	; () banked
 29008  00925E  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
 29009                           
 29010                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 29011  009260  C060  F13D         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 29012  009264  0012               	return		;funcret
 29013  009266                     __end_of_RADIO_SetCRC:
 29014                           	opt stack 0
 29015                           tosu	equ	0xFFF
 29016                           tosh	equ	0xFFE
 29017                           tosl	equ	0xFFD
 29018                           pclath	equ	0xFFA
 29019                           tblptru	equ	0xFF8
 29020                           tblptrh	equ	0xFF7
 29021                           tblptrl	equ	0xFF6
 29022                           tablat	equ	0xFF5
 29023                           prodh	equ	0xFF4
 29024                           prodl	equ	0xFF3
 29025                           intcon	equ	0xFF2
 29026                           intcon2	equ	0xFF1
 29027                           intcon3	equ	0xFF0
 29028                           indf0	equ	0xFEF
 29029                           postinc0	equ	0xFEE
 29030                           fsr0h	equ	0xFEA
 29031                           fsr0l	equ	0xFE9
 29032                           wreg	equ	0xFE8
 29033                           postinc1	equ	0xFE6
 29034                           postdec1	equ	0xFE5
 29035                           plusw1	equ	0xFE3
 29036                           fsr1h	equ	0xFE2
 29037                           fsr1l	equ	0xFE1
 29038                           indf2	equ	0xFDF
 29039                           postinc2	equ	0xFDE
 29040                           postdec2	equ	0xFDD
 29041                           plusw2	equ	0xFDB
 29042                           fsr2h	equ	0xFDA
 29043                           fsr2l	equ	0xFD9
 29044                           status	equ	0xFD8
 29045                           
 29046 ;; *************** function _ConfigureRadio *****************
 29047 ;; Defined at:
 29048 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29049 ;; Parameters:    Size  Location     Type
 29050 ;;  dataRate        1    wreg     unsigned char 
 29051 ;;  freq            4   14[BANK0 ] unsigned long 
 29052 ;; Auto vars:     Size  Location     Type
 29053 ;;  dataRate        1   18[BANK0 ] unsigned char 
 29054 ;; Return value:  Size  Location     Type
 29055 ;;                  1    wreg      void 
 29056 ;; Registers used:
 29057 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29058 ;; Tracked objects:
 29059 ;;		On entry : 0/0
 29060 ;;		On exit  : 0/0
 29061 ;;		Unchanged: 0/0
 29062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29066 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29067 ;;Total ram usage:        5 bytes
 29068 ;; Hardware stack levels used:    1
 29069 ;; Hardware stack levels required when called:    9
 29070 ;; This function calls:
 29071 ;;		_RADIO_SetBandwidth
 29072 ;;		_RADIO_SetChannelFrequency
 29073 ;;		_RADIO_SetFSKSyncWord
 29074 ;;		_RADIO_SetFrequencyHopPeriod
 29075 ;;		_RADIO_SetLoRaSyncWord
 29076 ;;		_RADIO_SetModulation
 29077 ;;		_RADIO_SetSpreadingFactor
 29078 ;; This function is called by:
 29079 ;;		_ConfigureRadioTx
 29080 ;;		_ConfigureRadioRx
 29081 ;; This function uses a non-reentrant model
 29082 ;;
 29083                           
 29084                           	psect	text143
 29085  0070A6                     __ptext143:
 29086                           	opt stack 0
 29087  0070A6                     _ConfigureRadio:
 29088                           	opt stack 18
 29089                           
 29090                           ;incstack = 0
 29091                           ;ConfigureRadio@dataRate stored from wreg
 29092  0070A6  0100               	movlb	0	; () banked
 29093  0070A8  6F72               	movwf	ConfigureRadio@dataRate& (0+255),b
 29094                           
 29095                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 29096  0070AA  0100               	movlb	0	; () banked
 29097  0070AC  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 29098  0070AE  0D01               	mullw	1
 29099  0070B0  0E41               	movlw	low _modulation
 29100  0070B2  24F3               	addwf	prodl,w,c
 29101  0070B4  6EF6               	movwf	tblptrl,c
 29102  0070B6  0EFF               	movlw	high _modulation
 29103  0070B8  20F4               	addwfc	prodh,w,c
 29104  0070BA  6EF7               	movwf	tblptrh,c
 29105  0070BC                     	if	1	;There are 3 active tblptr bytes
 29106  0070BC  6AF8               	clrf	tblptru,c
 29107  0070BE  0E00               	movlw	low (__mediumconst shr (0+16))
 29108  0070C0  22F8               	addwfc	tblptru,f,c
 29109  0070C2                     	endif
 29110  0070C2  0008               	tblrd		*
 29111  0070C4  50F5               	movf	tablat,w,c
 29112  0070C6  EC38  F049         	call	_RADIO_SetModulation
 29113                           
 29114                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 29115  0070CA  C06E  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 29116  0070CE  C06F  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 29117  0070D2  C070  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 29118  0070D6  C071  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 29119  0070DA  EC6F  F03A         	call	_RADIO_SetChannelFrequency	;wreg free
 29120                           
 29121                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 29122  0070DE  0E00               	movlw	0
 29123  0070E0  0100               	movlb	0	; () banked
 29124  0070E2  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 29125  0070E4  0E00               	movlw	0
 29126  0070E6  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 29127  0070E8  EC3D  F049         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 29128                           
 29129                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 29130  0070EC  0E07               	movlw	7
 29131  0070EE  0100               	movlb	0	; () banked
 29132  0070F0  6172               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 29133  0070F2  D024               	goto	l1168
 29134                           
 29135                           ; BSR set to: 0
 29136                           ;lorawan_eu.c: 870: {
 29137                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 29138  0070F4  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 29139  0070F6  0D01               	mullw	1
 29140  0070F8  0E6F               	movlw	low _spreadingFactor
 29141  0070FA  24F3               	addwf	prodl,w,c
 29142  0070FC  6EF6               	movwf	tblptrl,c
 29143  0070FE  0EFF               	movlw	high _spreadingFactor
 29144  007100  20F4               	addwfc	prodh,w,c
 29145  007102  6EF7               	movwf	tblptrh,c
 29146  007104                     	if	1	;There are 3 active tblptr bytes
 29147  007104  6AF8               	clrf	tblptru,c
 29148  007106  0E00               	movlw	low (__mediumconst shr (0+16))
 29149  007108  22F8               	addwfc	tblptru,f,c
 29150  00710A                     	endif
 29151  00710A  0008               	tblrd		*
 29152  00710C  50F5               	movf	tablat,w,c
 29153  00710E  EC33  F049         	call	_RADIO_SetSpreadingFactor
 29154                           
 29155                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 29156  007112  0100               	movlb	0	; () banked
 29157  007114  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 29158  007116  0D01               	mullw	1
 29159  007118  0E68               	movlw	low _bandwidth
 29160  00711A  24F3               	addwf	prodl,w,c
 29161  00711C  6EF6               	movwf	tblptrl,c
 29162  00711E  0EFF               	movlw	high _bandwidth
 29163  007120  20F4               	addwfc	prodh,w,c
 29164  007122  6EF7               	movwf	tblptrh,c
 29165  007124                     	if	1	;There are 3 active tblptr bytes
 29166  007124  6AF8               	clrf	tblptru,c
 29167  007126  0E00               	movlw	low (__mediumconst shr (0+16))
 29168  007128  22F8               	addwfc	tblptru,f,c
 29169  00712A                     	endif
 29170  00712A  0008               	tblrd		*
 29171  00712C  50F5               	movf	tablat,w,c
 29172  00712E  EC42  F049         	call	_RADIO_SetBandwidth
 29173                           
 29174                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 29175  007132  0102               	movlb	2	; () banked
 29176  007134  51F4               	movf	(_loRa+244)& (0+255),w,b
 29177  007136  EC47  F049         	call	_RADIO_SetLoRaSyncWord
 29178                           
 29179                           ;lorawan_eu.c: 875: }
 29180  00713A  0012               	return	
 29181  00713C                     l1168:
 29182                           
 29183                           ;lorawan_eu.c: 876: else
 29184                           ;lorawan_eu.c: 877: {
 29185                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 29186  00713C  0ED6               	movlw	low _FskSyncWordBuff
 29187  00713E  0100               	movlb	0	; () banked
 29188  007140  6F6B               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 29189  007142  0EFF               	movlw	high _FskSyncWordBuff
 29190  007144  6F6C               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 29191  007146  0E03               	movlw	3
 29192  007148  EC15  F045         	call	_RADIO_SetFSKSyncWord
 29193  00714C  0012               	return	
 29194  00714E                     __end_of_ConfigureRadio:
 29195                           	opt stack 0
 29196                           tosu	equ	0xFFF
 29197                           tosh	equ	0xFFE
 29198                           tosl	equ	0xFFD
 29199                           pclath	equ	0xFFA
 29200                           tblptru	equ	0xFF8
 29201                           tblptrh	equ	0xFF7
 29202                           tblptrl	equ	0xFF6
 29203                           tablat	equ	0xFF5
 29204                           prodh	equ	0xFF4
 29205                           prodl	equ	0xFF3
 29206                           intcon	equ	0xFF2
 29207                           intcon2	equ	0xFF1
 29208                           intcon3	equ	0xFF0
 29209                           indf0	equ	0xFEF
 29210                           postinc0	equ	0xFEE
 29211                           fsr0h	equ	0xFEA
 29212                           fsr0l	equ	0xFE9
 29213                           wreg	equ	0xFE8
 29214                           postinc1	equ	0xFE6
 29215                           postdec1	equ	0xFE5
 29216                           plusw1	equ	0xFE3
 29217                           fsr1h	equ	0xFE2
 29218                           fsr1l	equ	0xFE1
 29219                           indf2	equ	0xFDF
 29220                           postinc2	equ	0xFDE
 29221                           postdec2	equ	0xFDD
 29222                           plusw2	equ	0xFDB
 29223                           fsr2h	equ	0xFDA
 29224                           fsr2l	equ	0xFD9
 29225                           status	equ	0xFD8
 29226                           
 29227 ;; *************** function _RADIO_SetSpreadingFactor *****************
 29228 ;; Defined at:
 29229 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29230 ;; Parameters:    Size  Location     Type
 29231 ;;  spreadingFac    1    wreg     enum E6994
 29232 ;; Auto vars:     Size  Location     Type
 29233 ;;  spreadingFac    1    0[BANK0 ] enum E6994
 29234 ;; Return value:  Size  Location     Type
 29235 ;;                  1    wreg      void 
 29236 ;; Registers used:
 29237 ;;		wreg
 29238 ;; Tracked objects:
 29239 ;;		On entry : 0/0
 29240 ;;		On exit  : 0/0
 29241 ;;		Unchanged: 0/0
 29242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29246 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29247 ;;Total ram usage:        1 bytes
 29248 ;; Hardware stack levels used:    1
 29249 ;; Hardware stack levels required when called:    7
 29250 ;; This function calls:
 29251 ;;		Nothing
 29252 ;; This function is called by:
 29253 ;;		_ConfigureRadio
 29254 ;; This function uses a non-reentrant model
 29255 ;;
 29256                           
 29257                           	psect	text144
 29258  009266                     __ptext144:
 29259                           	opt stack 0
 29260  009266                     _RADIO_SetSpreadingFactor:
 29261                           	opt stack 19
 29262                           
 29263                           ;incstack = 0
 29264                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 29265  009266  0100               	movlb	0	; () banked
 29266  009268  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 29267                           
 29268                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 29269  00926A  C060  F13A         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 29270  00926E  0012               	return		;funcret
 29271  009270                     __end_of_RADIO_SetSpreadingFactor:
 29272                           	opt stack 0
 29273                           tosu	equ	0xFFF
 29274                           tosh	equ	0xFFE
 29275                           tosl	equ	0xFFD
 29276                           pclath	equ	0xFFA
 29277                           tblptru	equ	0xFF8
 29278                           tblptrh	equ	0xFF7
 29279                           tblptrl	equ	0xFF6
 29280                           tablat	equ	0xFF5
 29281                           prodh	equ	0xFF4
 29282                           prodl	equ	0xFF3
 29283                           intcon	equ	0xFF2
 29284                           intcon2	equ	0xFF1
 29285                           intcon3	equ	0xFF0
 29286                           indf0	equ	0xFEF
 29287                           postinc0	equ	0xFEE
 29288                           fsr0h	equ	0xFEA
 29289                           fsr0l	equ	0xFE9
 29290                           wreg	equ	0xFE8
 29291                           postinc1	equ	0xFE6
 29292                           postdec1	equ	0xFE5
 29293                           plusw1	equ	0xFE3
 29294                           fsr1h	equ	0xFE2
 29295                           fsr1l	equ	0xFE1
 29296                           indf2	equ	0xFDF
 29297                           postinc2	equ	0xFDE
 29298                           postdec2	equ	0xFDD
 29299                           plusw2	equ	0xFDB
 29300                           fsr2h	equ	0xFDA
 29301                           fsr2l	equ	0xFD9
 29302                           status	equ	0xFD8
 29303                           
 29304 ;; *************** function _RADIO_SetModulation *****************
 29305 ;; Defined at:
 29306 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29307 ;; Parameters:    Size  Location     Type
 29308 ;;  modulation      1    wreg     enum E6984
 29309 ;; Auto vars:     Size  Location     Type
 29310 ;;  modulation      1    0[BANK0 ] enum E6984
 29311 ;; Return value:  Size  Location     Type
 29312 ;;                  1    wreg      void 
 29313 ;; Registers used:
 29314 ;;		wreg
 29315 ;; Tracked objects:
 29316 ;;		On entry : 0/0
 29317 ;;		On exit  : 0/0
 29318 ;;		Unchanged: 0/0
 29319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29323 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29324 ;;Total ram usage:        1 bytes
 29325 ;; Hardware stack levels used:    1
 29326 ;; Hardware stack levels required when called:    7
 29327 ;; This function calls:
 29328 ;;		Nothing
 29329 ;; This function is called by:
 29330 ;;		_ConfigureRadio
 29331 ;; This function uses a non-reentrant model
 29332 ;;
 29333                           
 29334                           	psect	text145
 29335  009270                     __ptext145:
 29336                           	opt stack 0
 29337  009270                     _RADIO_SetModulation:
 29338                           	opt stack 19
 29339                           
 29340                           ;incstack = 0
 29341                           ;RADIO_SetModulation@modulation stored from wreg
 29342  009270  0100               	movlb	0	; () banked
 29343  009272  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
 29344                           
 29345                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 29346  009274  C060  F139         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 29347  009278  0012               	return		;funcret
 29348  00927A                     __end_of_RADIO_SetModulation:
 29349                           	opt stack 0
 29350                           tosu	equ	0xFFF
 29351                           tosh	equ	0xFFE
 29352                           tosl	equ	0xFFD
 29353                           pclath	equ	0xFFA
 29354                           tblptru	equ	0xFF8
 29355                           tblptrh	equ	0xFF7
 29356                           tblptrl	equ	0xFF6
 29357                           tablat	equ	0xFF5
 29358                           prodh	equ	0xFF4
 29359                           prodl	equ	0xFF3
 29360                           intcon	equ	0xFF2
 29361                           intcon2	equ	0xFF1
 29362                           intcon3	equ	0xFF0
 29363                           indf0	equ	0xFEF
 29364                           postinc0	equ	0xFEE
 29365                           fsr0h	equ	0xFEA
 29366                           fsr0l	equ	0xFE9
 29367                           wreg	equ	0xFE8
 29368                           postinc1	equ	0xFE6
 29369                           postdec1	equ	0xFE5
 29370                           plusw1	equ	0xFE3
 29371                           fsr1h	equ	0xFE2
 29372                           fsr1l	equ	0xFE1
 29373                           indf2	equ	0xFDF
 29374                           postinc2	equ	0xFDE
 29375                           postdec2	equ	0xFDD
 29376                           plusw2	equ	0xFDB
 29377                           fsr2h	equ	0xFDA
 29378                           fsr2l	equ	0xFD9
 29379                           status	equ	0xFD8
 29380                           
 29381 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 29382 ;; Defined at:
 29383 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29384 ;; Parameters:    Size  Location     Type
 29385 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
 29386 ;; Auto vars:     Size  Location     Type
 29387 ;;		None
 29388 ;; Return value:  Size  Location     Type
 29389 ;;                  1    wreg      void 
 29390 ;; Registers used:
 29391 ;;		None
 29392 ;; Tracked objects:
 29393 ;;		On entry : 0/0
 29394 ;;		On exit  : 0/0
 29395 ;;		Unchanged: 0/0
 29396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29400 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29401 ;;Total ram usage:        2 bytes
 29402 ;; Hardware stack levels used:    1
 29403 ;; Hardware stack levels required when called:    7
 29404 ;; This function calls:
 29405 ;;		Nothing
 29406 ;; This function is called by:
 29407 ;;		_ConfigureRadio
 29408 ;; This function uses a non-reentrant model
 29409 ;;
 29410                           
 29411                           	psect	text146
 29412  00927A                     __ptext146:
 29413                           	opt stack 0
 29414  00927A                     _RADIO_SetFrequencyHopPeriod:
 29415                           	opt stack 19
 29416                           
 29417                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 29418                           
 29419                           ;incstack = 0
 29420  00927A  C060  F13F         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 29421  00927E  C061  F140         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 29422  009282  0012               	return		;funcret
 29423  009284                     __end_of_RADIO_SetFrequencyHopPeriod:
 29424                           	opt stack 0
 29425                           tosu	equ	0xFFF
 29426                           tosh	equ	0xFFE
 29427                           tosl	equ	0xFFD
 29428                           pclath	equ	0xFFA
 29429                           tblptru	equ	0xFF8
 29430                           tblptrh	equ	0xFF7
 29431                           tblptrl	equ	0xFF6
 29432                           tablat	equ	0xFF5
 29433                           prodh	equ	0xFF4
 29434                           prodl	equ	0xFF3
 29435                           intcon	equ	0xFF2
 29436                           intcon2	equ	0xFF1
 29437                           intcon3	equ	0xFF0
 29438                           indf0	equ	0xFEF
 29439                           postinc0	equ	0xFEE
 29440                           fsr0h	equ	0xFEA
 29441                           fsr0l	equ	0xFE9
 29442                           wreg	equ	0xFE8
 29443                           postinc1	equ	0xFE6
 29444                           postdec1	equ	0xFE5
 29445                           plusw1	equ	0xFE3
 29446                           fsr1h	equ	0xFE2
 29447                           fsr1l	equ	0xFE1
 29448                           indf2	equ	0xFDF
 29449                           postinc2	equ	0xFDE
 29450                           postdec2	equ	0xFDD
 29451                           plusw2	equ	0xFDB
 29452                           fsr2h	equ	0xFDA
 29453                           fsr2l	equ	0xFD9
 29454                           status	equ	0xFD8
 29455                           
 29456 ;; *************** function _RADIO_SetFSKSyncWord *****************
 29457 ;; Defined at:
 29458 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29459 ;; Parameters:    Size  Location     Type
 29460 ;;  syncWordLen     1    wreg     unsigned char 
 29461 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
 29462 ;;		 -> FskSyncWordBuff(3), 
 29463 ;; Auto vars:     Size  Location     Type
 29464 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
 29465 ;; Return value:  Size  Location     Type
 29466 ;;                  1    wreg      void 
 29467 ;; Registers used:
 29468 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29469 ;; Tracked objects:
 29470 ;;		On entry : 0/0
 29471 ;;		On exit  : 0/0
 29472 ;;		Unchanged: 0/0
 29473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29475 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29477 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29478 ;;Total ram usage:        3 bytes
 29479 ;; Hardware stack levels used:    1
 29480 ;; Hardware stack levels required when called:    8
 29481 ;; This function calls:
 29482 ;;		_memcpy
 29483 ;; This function is called by:
 29484 ;;		_ConfigureRadio
 29485 ;; This function uses a non-reentrant model
 29486 ;;
 29487                           
 29488                           	psect	text147
 29489  008A2A                     __ptext147:
 29490                           	opt stack 0
 29491  008A2A                     _RADIO_SetFSKSyncWord:
 29492                           	opt stack 18
 29493                           
 29494                           ;incstack = 0
 29495                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 29496  008A2A  0100               	movlb	0	; () banked
 29497  008A2C  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29498                           
 29499                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 29500  008A2E  0E08               	movlw	8
 29501  008A30  0100               	movlb	0	; () banked
 29502  008A32  656D               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29503  008A34  D002               	goto	l804
 29504                           
 29505                           ; BSR set to: 0
 29506                           ;radio_driver_SX1276.c: 1627: {
 29507                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 29508  008A36  0E08               	movlw	8
 29509  008A38  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29510  008A3A                     l804:
 29511                           
 29512                           ; BSR set to: 0
 29513                           ;radio_driver_SX1276.c: 1629: }
 29514                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 29515                           
 29516                           ; BSR set to: 0
 29517  008A3A  0E30               	movlw	low (_RadioConfiguration+15)
 29518  008A3C  6F60               	movwf	memcpy@d1& (0+255),b
 29519  008A3E  0E01               	movlw	high (_RadioConfiguration+15)
 29520  008A40  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29521  008A42  C06B  F062         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 29522  008A46  C06C  F063         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 29523  008A4A  C06D  F064         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 29524  008A4E  6B65               	clrf	(memcpy@n+1)& (0+255),b
 29525  008A50  EC6C  F03F         	call	_memcpy	;wreg free
 29526                           
 29527                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 29528  008A54  C06D  F138         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 29529  008A58  0012               	return		;funcret
 29530  008A5A                     __end_of_RADIO_SetFSKSyncWord:
 29531                           	opt stack 0
 29532                           tosu	equ	0xFFF
 29533                           tosh	equ	0xFFE
 29534                           tosl	equ	0xFFD
 29535                           pclath	equ	0xFFA
 29536                           tblptru	equ	0xFF8
 29537                           tblptrh	equ	0xFF7
 29538                           tblptrl	equ	0xFF6
 29539                           tablat	equ	0xFF5
 29540                           prodh	equ	0xFF4
 29541                           prodl	equ	0xFF3
 29542                           intcon	equ	0xFF2
 29543                           intcon2	equ	0xFF1
 29544                           intcon3	equ	0xFF0
 29545                           indf0	equ	0xFEF
 29546                           postinc0	equ	0xFEE
 29547                           fsr0h	equ	0xFEA
 29548                           fsr0l	equ	0xFE9
 29549                           wreg	equ	0xFE8
 29550                           postinc1	equ	0xFE6
 29551                           postdec1	equ	0xFE5
 29552                           plusw1	equ	0xFE3
 29553                           fsr1h	equ	0xFE2
 29554                           fsr1l	equ	0xFE1
 29555                           indf2	equ	0xFDF
 29556                           postinc2	equ	0xFDE
 29557                           postdec2	equ	0xFDD
 29558                           plusw2	equ	0xFDB
 29559                           fsr2h	equ	0xFDA
 29560                           fsr2l	equ	0xFD9
 29561                           status	equ	0xFD8
 29562                           
 29563 ;; *************** function _RADIO_SetChannelFrequency *****************
 29564 ;; Defined at:
 29565 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29566 ;; Parameters:    Size  Location     Type
 29567 ;;  frequency       4    0[BANK0 ] unsigned long 
 29568 ;; Auto vars:     Size  Location     Type
 29569 ;;		None
 29570 ;; Return value:  Size  Location     Type
 29571 ;;                  2    0[BANK0 ] enum E7038
 29572 ;; Registers used:
 29573 ;;		wreg, status,2, status,0
 29574 ;; Tracked objects:
 29575 ;;		On entry : 0/0
 29576 ;;		On exit  : 0/0
 29577 ;;		Unchanged: 0/0
 29578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29579 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29582 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29583 ;;Total ram usage:        4 bytes
 29584 ;; Hardware stack levels used:    1
 29585 ;; Hardware stack levels required when called:    7
 29586 ;; This function calls:
 29587 ;;		Nothing
 29588 ;; This function is called by:
 29589 ;;		_ConfigureRadio
 29590 ;; This function uses a non-reentrant model
 29591 ;;
 29592                           
 29593                           	psect	text148
 29594  0074DE                     __ptext148:
 29595                           	opt stack 0
 29596  0074DE                     _RADIO_SetChannelFrequency:
 29597                           	opt stack 19
 29598                           
 29599                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 29600                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 29601                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 29602                           
 29603                           ;incstack = 0
 29604  0074DE  0E40               	movlw	64
 29605  0074E0  0100               	movlb	0	; () banked
 29606  0074E2  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29607  0074E4  0E74               	movlw	116
 29608  0074E6  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29609  0074E8  0E2A               	movlw	42
 29610  0074EA  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29611  0074EC  0E08               	movlw	8
 29612  0074EE  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29613  0074F0  A0D8               	btfss	status,0,c
 29614  0074F2  D00A               	goto	u15380
 29615                           
 29616                           ; BSR set to: 0
 29617  0074F4  0EC1               	movlw	193
 29618  0074F6  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29619  0074F8  0E49               	movlw	73
 29620  0074FA  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29621  0074FC  0E6E               	movlw	110
 29622  0074FE  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29623  007500  0E0A               	movlw	10
 29624  007502  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29625  007504  A0D8               	btfss	status,0,c
 29626  007506  D027               	goto	u15420
 29627  007508                     u15380:
 29628                           
 29629                           ; BSR set to: 0
 29630                           
 29631                           ; BSR set to: 0
 29632  007508  0E80               	movlw	128
 29633  00750A  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29634  00750C  0E1A               	movlw	26
 29635  00750E  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29636  007510  0E70               	movlw	112
 29637  007512  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29638  007514  0E18               	movlw	24
 29639  007516  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29640  007518  A0D8               	btfss	status,0,c
 29641  00751A  D00A               	goto	u15400
 29642                           
 29643                           ; BSR set to: 0
 29644  00751C  0E41               	movlw	65
 29645  00751E  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29646  007520  0EDD               	movlw	221
 29647  007522  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29648  007524  0E4A               	movlw	74
 29649  007526  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29650  007528  0E1F               	movlw	31
 29651  00752A  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29652  00752C  A0D8               	btfss	status,0,c
 29653  00752E  D013               	goto	u15420
 29654  007530                     u15400:
 29655                           
 29656                           ; BSR set to: 0
 29657                           
 29658                           ; BSR set to: 0
 29659  007530  0E80               	movlw	128
 29660  007532  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29661  007534  0E13               	movlw	19
 29662  007536  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29663  007538  0E61               	movlw	97
 29664  00753A  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29665  00753C  0E33               	movlw	51
 29666  00753E  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29667  007540  A0D8               	btfss	status,0,c
 29668  007542  0012               	return	
 29669                           
 29670                           ; BSR set to: 0
 29671  007544  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29672  007546  0EF7               	movlw	247
 29673  007548  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29674  00754A  0ECB               	movlw	203
 29675  00754C  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29676  00754E  0E3C               	movlw	60
 29677  007550  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29678  007552  B0D8               	btfsc	status,0,c
 29679  007554  0012               	return	
 29680  007556                     u15420:
 29681                           
 29682                           ; BSR set to: 0
 29683                           ;radio_driver_SX1276.c: 1449: {
 29684                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 29685  007556  C060  F121         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 29686  00755A  C061  F122         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 29687  00755E  C062  F123         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 29688  007562  C063  F124         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 29689                           
 29690                           ; BSR set to: 0
 29691                           ;radio_driver_SX1276.c: 1453: else
 29692                           ;radio_driver_SX1276.c: 1454: {
 29693                           ;radio_driver_SX1276.c: 1455: return ERR_OUT_OF_RANGE;
 29694                           ;	Return value of _RADIO_SetChannelFrequency is never used
 29695                           
 29696                           ; BSR set to: 0
 29697                           ;radio_driver_SX1276.c: 1452: }
 29698                           
 29699                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 29700                           ;	Return value of _RADIO_SetChannelFrequency is never used
 29701  007566  0012               	return	
 29702  007568                     __end_of_RADIO_SetChannelFrequency:
 29703                           	opt stack 0
 29704                           tosu	equ	0xFFF
 29705                           tosh	equ	0xFFE
 29706                           tosl	equ	0xFFD
 29707                           pclath	equ	0xFFA
 29708                           tblptru	equ	0xFF8
 29709                           tblptrh	equ	0xFF7
 29710                           tblptrl	equ	0xFF6
 29711                           tablat	equ	0xFF5
 29712                           prodh	equ	0xFF4
 29713                           prodl	equ	0xFF3
 29714                           intcon	equ	0xFF2
 29715                           intcon2	equ	0xFF1
 29716                           intcon3	equ	0xFF0
 29717                           indf0	equ	0xFEF
 29718                           postinc0	equ	0xFEE
 29719                           fsr0h	equ	0xFEA
 29720                           fsr0l	equ	0xFE9
 29721                           wreg	equ	0xFE8
 29722                           postinc1	equ	0xFE6
 29723                           postdec1	equ	0xFE5
 29724                           plusw1	equ	0xFE3
 29725                           fsr1h	equ	0xFE2
 29726                           fsr1l	equ	0xFE1
 29727                           indf2	equ	0xFDF
 29728                           postinc2	equ	0xFDE
 29729                           postdec2	equ	0xFDD
 29730                           plusw2	equ	0xFDB
 29731                           fsr2h	equ	0xFDA
 29732                           fsr2l	equ	0xFD9
 29733                           status	equ	0xFD8
 29734                           
 29735 ;; *************** function _RADIO_SetBandwidth *****************
 29736 ;; Defined at:
 29737 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29738 ;; Parameters:    Size  Location     Type
 29739 ;;  bandwidth       1    wreg     enum E7002
 29740 ;; Auto vars:     Size  Location     Type
 29741 ;;  bandwidth       1    0[BANK0 ] enum E7002
 29742 ;; Return value:  Size  Location     Type
 29743 ;;                  1    wreg      void 
 29744 ;; Registers used:
 29745 ;;		wreg
 29746 ;; Tracked objects:
 29747 ;;		On entry : 0/0
 29748 ;;		On exit  : 0/0
 29749 ;;		Unchanged: 0/0
 29750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29754 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29755 ;;Total ram usage:        1 bytes
 29756 ;; Hardware stack levels used:    1
 29757 ;; Hardware stack levels required when called:    7
 29758 ;; This function calls:
 29759 ;;		Nothing
 29760 ;; This function is called by:
 29761 ;;		_ConfigureRadio
 29762 ;; This function uses a non-reentrant model
 29763 ;;
 29764                           
 29765                           	psect	text149
 29766  009284                     __ptext149:
 29767                           	opt stack 0
 29768  009284                     _RADIO_SetBandwidth:
 29769                           	opt stack 19
 29770                           
 29771                           ; BSR set to: 0
 29772                           ;incstack = 0
 29773                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 29774  009284  0100               	movlb	0	; () banked
 29775  009286  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 29776                           
 29777                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 29778  009288  C060  F13B         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 29779  00928C  0012               	return		;funcret
 29780  00928E                     __end_of_RADIO_SetBandwidth:
 29781                           	opt stack 0
 29782                           tosu	equ	0xFFF
 29783                           tosh	equ	0xFFE
 29784                           tosl	equ	0xFFD
 29785                           pclath	equ	0xFFA
 29786                           tblptru	equ	0xFF8
 29787                           tblptrh	equ	0xFF7
 29788                           tblptrl	equ	0xFF6
 29789                           tablat	equ	0xFF5
 29790                           prodh	equ	0xFF4
 29791                           prodl	equ	0xFF3
 29792                           intcon	equ	0xFF2
 29793                           intcon2	equ	0xFF1
 29794                           intcon3	equ	0xFF0
 29795                           indf0	equ	0xFEF
 29796                           postinc0	equ	0xFEE
 29797                           fsr0h	equ	0xFEA
 29798                           fsr0l	equ	0xFE9
 29799                           wreg	equ	0xFE8
 29800                           postinc1	equ	0xFE6
 29801                           postdec1	equ	0xFE5
 29802                           plusw1	equ	0xFE3
 29803                           fsr1h	equ	0xFE2
 29804                           fsr1l	equ	0xFE1
 29805                           indf2	equ	0xFDF
 29806                           postinc2	equ	0xFDE
 29807                           postdec2	equ	0xFDD
 29808                           plusw2	equ	0xFDB
 29809                           fsr2h	equ	0xFDA
 29810                           fsr2l	equ	0xFD9
 29811                           status	equ	0xFD8
 29812                           
 29813 ;; *************** function _RADIO_Transmit *****************
 29814 ;; Defined at:
 29815 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29816 ;; Parameters:    Size  Location     Type
 29817 ;;  buffer          2   81[BANK0 ] PTR unsigned char 
 29818 ;;		 -> macBuffer(271), 
 29819 ;;  bufferLen       1   83[BANK0 ] unsigned char 
 29820 ;; Auto vars:     Size  Location     Type
 29821 ;;  i               1   97[BANK0 ] unsigned char 
 29822 ;;  regValue        1   96[BANK0 ] unsigned char 
 29823 ;; Return value:  Size  Location     Type
 29824 ;;                  2   81[BANK0 ] enum E7038
 29825 ;; Registers used:
 29826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29827 ;; Tracked objects:
 29828 ;;		On entry : 0/0
 29829 ;;		On exit  : 0/0
 29830 ;;		Unchanged: 0/0
 29831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29832 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29833 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29834 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29835 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29836 ;;Total ram usage:       17 bytes
 29837 ;; Hardware stack levels used:    1
 29838 ;; Hardware stack levels required when called:   12
 29839 ;; This function calls:
 29840 ;;		_HALSPICSAssert
 29841 ;;		_HALSPICSDeassert
 29842 ;;		_HALSPISend
 29843 ;;		_RADIO_RegisterRead
 29844 ;;		_RADIO_RegisterWrite
 29845 ;;		_RADIO_WriteConfiguration
 29846 ;;		_RADIO_WriteMode
 29847 ;;		_SwTimerSetTimeout
 29848 ;;		_SwTimerStart
 29849 ;;		_SwTimerStop
 29850 ;;		___lldiv
 29851 ;; This function is called by:
 29852 ;;		_LORAWAN_RxTimeout
 29853 ;;		_LORAWAN_Join
 29854 ;;		_LORAWAN_Send
 29855 ;;		_AckRetransmissionCallback
 29856 ;;		_UnconfirmedTransmissionCallback
 29857 ;; This function uses a non-reentrant model
 29858 ;;
 29859                           
 29860                           	psect	text150
 29861  003CA2                     __ptext150:
 29862                           	opt stack 0
 29863  003CA2                     _RADIO_Transmit:
 29864                           	opt stack 17
 29865                           
 29866                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 29867                           ;radio_driver_SX1276.c: 789: uint8_t i;
 29868                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 29869                           
 29870                           ;incstack = 0
 29871  003CA2  0101               	movlb	1	; () banked
 29872  003CA4  A544               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 29873  003CA6  D006               	goto	l499
 29874                           
 29875                           ; BSR set to: 1
 29876                           ;radio_driver_SX1276.c: 792: {
 29877                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 29878  003CA8  0E80               	movlw	128
 29879  003CAA  0100               	movlb	0	; () banked
 29880  003CAC  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29881  003CAE  0E03               	movlw	3
 29882  003CB0  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 29883                           
 29884                           ; BSR set to: 0
 29885  003CB2  0012               	return	
 29886  003CB4                     l499:
 29887                           
 29888                           ;radio_driver_SX1276.c: 794: }
 29889                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 29890                           
 29891                           ; BSR set to: 0
 29892  003CB4  C144  F0B4         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 29893  003CB8  0E03               	movlw	3
 29894  003CBA  0100               	movlb	0	; () banked
 29895  003CBC  17B4               	andwf	??_RADIO_Transmit& (0+255),f,b
 29896  003CBE  B4D8               	btfsc	status,2,c
 29897  003CC0  D005               	goto	l501
 29898                           
 29899                           ; BSR set to: 0
 29900                           ;radio_driver_SX1276.c: 797: {
 29901                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 29902  003CC2  0E80               	movlw	128
 29903  003CC4  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29904  003CC6  0E04               	movlw	4
 29905  003CC8  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 29906                           
 29907                           ; BSR set to: 0
 29908  003CCA  0012               	return	
 29909  003CCC                     l501:
 29910                           
 29911                           ; BSR set to: 0
 29912                           ;radio_driver_SX1276.c: 799: }
 29913                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 29914                           
 29915                           ; BSR set to: 0
 29916  003CCC  0101               	movlb	1	; () banked
 29917  003CCE  5139               	movf	(_RadioConfiguration+24)& (0+255),w,b
 29918  003CD0  A4D8               	btfss	status,2,c
 29919  003CD2  D009               	goto	l502
 29920                           
 29921                           ; BSR set to: 1
 29922  003CD4  0E40               	movlw	64
 29923  003CD6  0100               	movlb	0	; () banked
 29924  003CD8  65B3               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 29925  003CDA  D005               	goto	l502
 29926                           
 29927                           ; BSR set to: 0
 29928                           ;radio_driver_SX1276.c: 802: {
 29929                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 29930  003CDC  0E80               	movlw	128
 29931  003CDE  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29932  003CE0  0E02               	movlw	2
 29933  003CE2  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 29934                           
 29935                           ; BSR set to: 0
 29936  003CE4  0012               	return	
 29937  003CE6                     l502:
 29938                           
 29939                           ;radio_driver_SX1276.c: 804: }
 29940                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 29941                           
 29942                           ; BSR set to: 0
 29943  003CE6  0101               	movlb	1	; () banked
 29944  003CE8  5148               	movf	(_RadioConfiguration+39)& (0+255),w,b
 29945  003CEA  ECB8  F046         	call	_SwTimerStop
 29946                           
 29947                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 29948  003CEE  0E00               	movlw	0
 29949  003CF0  0100               	movlb	0	; () banked
 29950  003CF2  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 29951  003CF4  0E04               	movlw	4
 29952  003CF6  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 29953  003CF8  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 29954                           
 29955                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 29956  003CFC  0101               	movlb	1	; () banked
 29957  003CFE  0539               	decf	(_RadioConfiguration+24)& (0+255),w,b
 29958  003D00  A4D8               	btfss	status,2,c
 29959  003D02  D027               	goto	l503
 29960                           
 29961                           ; BSR set to: 1
 29962                           ;radio_driver_SX1276.c: 813: {
 29963                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 29964  003D04  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 29965  003D08  0E22               	movlw	34
 29966  003D0A  EC55  F047         	call	_RADIO_RegisterWrite
 29967                           
 29968                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 29969  003D0E  0E0A               	movlw	10
 29970  003D10  ECA4  F046         	call	_RADIO_RegisterRead
 29971  003D14  0100               	movlb	0	; () banked
 29972  003D16  6FC0               	movwf	RADIO_Transmit@regValue& (0+255),b
 29973                           
 29974                           ; BSR set to: 0
 29975                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 29976  003D18  0EF0               	movlw	240
 29977  003D1A  17C0               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 29978                           
 29979                           ; BSR set to: 0
 29980                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 29981  003D1C  87C0               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 29982                           
 29983                           ; BSR set to: 0
 29984                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 29985  003D1E  C0C0  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 29986  003D22  0E0A               	movlw	10
 29987  003D24  EC55  F047         	call	_RADIO_RegisterWrite
 29988                           
 29989                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 29990  003D28  0E40               	movlw	64
 29991  003D2A  0100               	movlb	0	; () banked
 29992  003D2C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29993  003D2E  0E40               	movlw	64
 29994  003D30  EC55  F047         	call	_RADIO_RegisterWrite
 29995                           
 29996                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 29997  003D34  0E00               	movlw	0
 29998  003D36  0100               	movlb	0	; () banked
 29999  003D38  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30000  003D3A  0E41               	movlw	65
 30001  003D3C  EC55  F047         	call	_RADIO_RegisterWrite
 30002                           
 30003                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 30004  003D40  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30005  003D44  0E01               	movlw	1
 30006  003D46  0100               	movlb	0	; () banked
 30007  003D48  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30008  003D4A  0E01               	movlw	1
 30009  003D4C  EC28  F030         	call	_RADIO_WriteMode
 30010                           
 30011                           ;radio_driver_SX1276.c: 828: }
 30012  003D50  D00C               	goto	l504
 30013  003D52                     l503:
 30014                           
 30015                           ;radio_driver_SX1276.c: 829: else
 30016                           ;radio_driver_SX1276.c: 830: {
 30017                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 30018  003D52  0E00               	movlw	0
 30019  003D54  0100               	movlb	0	; () banked
 30020  003D56  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30021  003D58  0E40               	movlw	64
 30022  003D5A  EC55  F047         	call	_RADIO_RegisterWrite
 30023                           
 30024                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 30025  003D5E  0E00               	movlw	0
 30026  003D60  0100               	movlb	0	; () banked
 30027  003D62  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30028  003D64  0E41               	movlw	65
 30029  003D66  EC55  F047         	call	_RADIO_RegisterWrite
 30030  003D6A                     l504:
 30031                           
 30032                           ;radio_driver_SX1276.c: 834: }
 30033                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 30034  003D6A  0101               	movlb	1	; () banked
 30035  003D6C  5139               	movf	(_RadioConfiguration+24)& (0+255),w,b
 30036  003D6E  A4D8               	btfss	status,2,c
 30037  003D70  D005               	goto	l505
 30038                           
 30039                           ; BSR set to: 1
 30040                           ;radio_driver_SX1276.c: 837: {
 30041                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 30042  003D72  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 30043  003D76  0E00               	movlw	0
 30044  003D78  EC55  F047         	call	_RADIO_RegisterWrite
 30045  003D7C                     l505:
 30046                           
 30047                           ;radio_driver_SX1276.c: 840: }
 30048                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 30049  003D7C  EC7C  F049         	call	_HALSPICSAssert	;wreg free
 30050                           
 30051                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 30052  003D80  0E80               	movlw	128
 30053  003D82  ECDF  F048         	call	_HALSPISend
 30054                           
 30055                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 30056  003D86  0E00               	movlw	0
 30057  003D88  0100               	movlb	0	; () banked
 30058  003D8A  6FC1               	movwf	RADIO_Transmit@i& (0+255),b
 30059  003D8C  D00D               	goto	l506
 30060  003D8E                     
 30061                           ; BSR set to: 0
 30062                           ;radio_driver_SX1276.c: 846: {
 30063                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 30064                           
 30065                           ; BSR set to: 0
 30066  003D8E  51C1               	movf	RADIO_Transmit@i& (0+255),w,b
 30067  003D90  0D01               	mullw	1
 30068  003D92  50F3               	movf	prodl,w,c
 30069  003D94  25B1               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 30070  003D96  6ED9               	movwf	fsr2l,c
 30071  003D98  50F4               	movf	prodh,w,c
 30072  003D9A  21B2               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 30073  003D9C  6EDA               	movwf	fsr2h,c
 30074  003D9E  50DF               	movf	indf2,w,c
 30075  003DA0  ECDF  F048         	call	_HALSPISend
 30076  003DA4  0100               	movlb	0	; () banked
 30077  003DA6  2BC1               	incf	RADIO_Transmit@i& (0+255),f,b
 30078  003DA8                     l506:
 30079                           
 30080                           ; BSR set to: 0
 30081                           
 30082                           ; BSR set to: 0
 30083  003DA8  51B3               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 30084  003DAA  5DC1               	subwf	RADIO_Transmit@i& (0+255),w,b
 30085  003DAC  A0D8               	btfss	status,0,c
 30086  003DAE  D7EF               	goto	l507
 30087                           
 30088                           ; BSR set to: 0
 30089                           ;radio_driver_SX1276.c: 848: }
 30090                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 30091                           
 30092                           ; BSR set to: 0
 30093  003DB0  EC7A  F049         	call	_HALSPICSDeassert	;wreg free
 30094                           
 30095                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 30096  003DB4  0101               	movlb	1	; () banked
 30097  003DB6  8144               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 30098                           
 30099                           ; BSR set to: 1
 30100                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 30101  003DB8  0EE7               	movlw	231
 30102  003DBA  1744               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 30103                           
 30104                           ; BSR set to: 1
 30105                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 30106  003DBC  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30107  003DC0  0E00               	movlw	0
 30108  003DC2  0100               	movlb	0	; () banked
 30109  003DC4  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30110  003DC6  0E03               	movlw	3
 30111  003DC8  EC28  F030         	call	_RADIO_WriteMode
 30112                           
 30113                           ; BSR set to: 0
 30114                           
 30115                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 30116  003DCC  0E00               	movlw	0
 30117  003DCE  0100               	movlb	0	; () banked
 30118  003DD0  6FB8               	movwf	_RADIO_Transmit$772& (0+255),b
 30119  003DD2  0E00               	movlw	0
 30120  003DD4  6FB9               	movwf	(_RADIO_Transmit$772+1)& (0+255),b
 30121  003DD6  0E0A               	movlw	10
 30122  003DD8  6FBA               	movwf	(_RADIO_Transmit$772+2)& (0+255),b
 30123  003DDA  0E00               	movlw	0
 30124  003DDC  6FBB               	movwf	(_RADIO_Transmit$772+3)& (0+255),b
 30125                           
 30126                           ; BSR set to: 0
 30127                           
 30128                           ; BSR set to: 0
 30129  003DDE  C0B8  F06D         	movff	_RADIO_Transmit$772,SwTimerSetTimeout@timeout
 30130  003DE2  C0B9  F06E         	movff	_RADIO_Transmit$772+1,SwTimerSetTimeout@timeout+1
 30131  003DE6  C0BA  F06F         	movff	_RADIO_Transmit$772+2,SwTimerSetTimeout@timeout+2
 30132  003DEA  C0BB  F070         	movff	_RADIO_Transmit$772+3,SwTimerSetTimeout@timeout+3
 30133  003DEE  0101               	movlb	1	; () banked
 30134  003DF0  5148               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30135  003DF2  EC62  F043         	call	_SwTimerSetTimeout
 30136                           
 30137                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 30138  003DF6  0101               	movlb	1	; () banked
 30139  003DF8  5148               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30140  003DFA  EC4B  F039         	call	_SwTimerStart
 30141                           
 30142                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 30143  003DFE  0101               	movlb	1	; () banked
 30144  003E00  514B               	movf	(_RadioConfiguration+42)& (0+255),w,b
 30145  003E02  114C               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 30146  003E04  114D               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 30147  003E06  114E               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 30148  003E08  B4D8               	btfsc	status,2,c
 30149  003E0A  D061               	goto	l513
 30150                           
 30151                           ; BSR set to: 1
 30152                           ;radio_driver_SX1276.c: 866: {
 30153                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 30154  003E0C  514E               	movf	(_RadioConfiguration+45)& (0+255),w,b
 30155  003E0E  E107               	bnz	u17150
 30156  003E10  294B               	incf	(_RadioConfiguration+42)& (0+255),w,b
 30157  003E12  0EFF               	movlw	255
 30158  003E14  594C               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 30159  003E16  0E0F               	movlw	15
 30160  003E18  594D               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 30161  003E1A  A0D8               	btfss	status,0,c
 30162  003E1C  D01D               	goto	l515
 30163  003E1E                     u17150:
 30164                           
 30165                           ; BSR set to: 1
 30166  003E1E  C14B  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 30167  003E22  C14C  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 30168  003E26  C14D  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 30169  003E2A  C14E  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 30170  003E2E  0E7D               	movlw	125
 30171  003E30  0100               	movlb	0	; () banked
 30172  003E32  6F64               	movwf	___lldiv@divisor& (0+255),b
 30173  003E34  0E00               	movlw	0
 30174  003E36  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 30175  003E38  0E00               	movlw	0
 30176  003E3A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 30177  003E3C  0E00               	movlw	0
 30178  003E3E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 30179  003E40  ECC4  F03B         	call	___lldiv	;wreg free
 30180  003E44  0E0C               	movlw	12
 30181  003E46                     u17165:
 30182  003E46  90D8               	bcf	status,0,c
 30183  003E48  0100               	movlb	0	; () banked
 30184  003E4A  3760               	rlcf	?___lldiv& (0+255),f,b
 30185  003E4C  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 30186  003E4E  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 30187  003E50  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 30188  003E52  2EE8               	decfsz	wreg,f,c
 30189  003E54  D7F8               	goto	u17165
 30190  003E56  D023               	goto	L19
 30191  003E58                     l515:
 30192                           
 30193                           ; BSR set to: 0
 30194  003E58  C14B  F0B4         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 30195  003E5C  C14C  F0B5         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 30196  003E60  C14D  F0B6         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 30197  003E64  C14E  F0B7         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 30198  003E68  0E0C               	movlw	12
 30199  003E6A                     u17175:
 30200  003E6A  90D8               	bcf	status,0,c
 30201  003E6C  0100               	movlb	0	; () banked
 30202  003E6E  37B4               	rlcf	??_RADIO_Transmit& (0+255),f,b
 30203  003E70  37B5               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 30204  003E72  37B6               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 30205  003E74  37B7               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 30206  003E76  2EE8               	decfsz	wreg,f,c
 30207  003E78  D7F8               	goto	u17175
 30208  003E7A  C0B4  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
 30209  003E7E  C0B5  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 30210  003E82  C0B6  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 30211  003E86  C0B7  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 30212  003E8A  0E7D               	movlw	125
 30213  003E8C  6F64               	movwf	___lldiv@divisor& (0+255),b
 30214  003E8E  0E00               	movlw	0
 30215  003E90  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 30216  003E92  0E00               	movlw	0
 30217  003E94  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 30218  003E96  0E00               	movlw	0
 30219  003E98  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 30220  003E9A  ECC4  F03B         	call	___lldiv	;wreg free
 30221  003E9E                     L19:
 30222  003E9E  C060  F0BC         	movff	?___lldiv,_RADIO_Transmit$774
 30223  003EA2  C061  F0BD         	movff	?___lldiv+1,_RADIO_Transmit$774+1
 30224  003EA6  C062  F0BE         	movff	?___lldiv+2,_RADIO_Transmit$774+2
 30225  003EAA  C063  F0BF         	movff	?___lldiv+3,_RADIO_Transmit$774+3
 30226  003EAE  C0BC  F06D         	movff	_RADIO_Transmit$774,SwTimerSetTimeout@timeout
 30227  003EB2  C0BD  F06E         	movff	_RADIO_Transmit$774+1,SwTimerSetTimeout@timeout+1
 30228  003EB6  C0BE  F06F         	movff	_RADIO_Transmit$774+2,SwTimerSetTimeout@timeout+2
 30229  003EBA  C0BF  F070         	movff	_RADIO_Transmit$774+3,SwTimerSetTimeout@timeout+3
 30230  003EBE  0101               	movlb	1	; () banked
 30231  003EC0  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30232  003EC2  EC62  F043         	call	_SwTimerSetTimeout
 30233                           
 30234                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 30235  003EC6  0101               	movlb	1	; () banked
 30236  003EC8  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30237  003ECA  EC4B  F039         	call	_SwTimerStart
 30238  003ECE                     l513:
 30239                           
 30240                           ;radio_driver_SX1276.c: 869: }
 30241                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 30242  003ECE  0E00               	movlw	0
 30243  003ED0  0100               	movlb	0	; () banked
 30244  003ED2  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 30245  003ED4  0E00               	movlw	0
 30246  003ED6  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 30247  003ED8  0012               	return	
 30248  003EDA                     __end_of_RADIO_Transmit:
 30249                           	opt stack 0
 30250                           tosu	equ	0xFFF
 30251                           tosh	equ	0xFFE
 30252                           tosl	equ	0xFFD
 30253                           pclath	equ	0xFFA
 30254                           tblptru	equ	0xFF8
 30255                           tblptrh	equ	0xFF7
 30256                           tblptrl	equ	0xFF6
 30257                           tablat	equ	0xFF5
 30258                           prodh	equ	0xFF4
 30259                           prodl	equ	0xFF3
 30260                           intcon	equ	0xFF2
 30261                           intcon2	equ	0xFF1
 30262                           intcon3	equ	0xFF0
 30263                           indf0	equ	0xFEF
 30264                           postinc0	equ	0xFEE
 30265                           fsr0h	equ	0xFEA
 30266                           fsr0l	equ	0xFE9
 30267                           wreg	equ	0xFE8
 30268                           postinc1	equ	0xFE6
 30269                           postdec1	equ	0xFE5
 30270                           plusw1	equ	0xFE3
 30271                           fsr1h	equ	0xFE2
 30272                           fsr1l	equ	0xFE1
 30273                           indf2	equ	0xFDF
 30274                           postinc2	equ	0xFDE
 30275                           postdec2	equ	0xFDD
 30276                           plusw2	equ	0xFDB
 30277                           fsr2h	equ	0xFDA
 30278                           fsr2l	equ	0xFD9
 30279                           status	equ	0xFD8
 30280                           
 30281 ;; *************** function _RADIO_WriteConfiguration *****************
 30282 ;; Defined at:
 30283 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 30284 ;; Parameters:    Size  Location     Type
 30285 ;;  symbolTimeou    2   70[BANK0 ] unsigned int 
 30286 ;; Auto vars:     Size  Location     Type
 30287 ;;  tempValue       4   76[BANK0 ] unsigned long 
 30288 ;;  regValue        1   80[BANK0 ] unsigned char 
 30289 ;;  i               1   75[BANK0 ] unsigned char 
 30290 ;; Return value:  Size  Location     Type
 30291 ;;                  1    wreg      void 
 30292 ;; Registers used:
 30293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30294 ;; Tracked objects:
 30295 ;;		On entry : 0/0
 30296 ;;		On exit  : 0/0
 30297 ;;		Unchanged: 0/0
 30298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30299 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30300 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30301 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30302 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30303 ;;Total ram usage:       11 bytes
 30304 ;; Hardware stack levels used:    1
 30305 ;; Hardware stack levels required when called:   11
 30306 ;; This function calls:
 30307 ;;		_RADIO_RegisterRead
 30308 ;;		_RADIO_RegisterWrite
 30309 ;;		_RADIO_WriteFSKBitRate
 30310 ;;		_RADIO_WriteFSKFrequencyDeviation
 30311 ;;		_RADIO_WriteFrequency
 30312 ;;		_RADIO_WriteMode
 30313 ;;		_RADIO_WritePower
 30314 ;;		___lmul
 30315 ;; This function is called by:
 30316 ;;		_RADIO_Transmit
 30317 ;;		_RADIO_ReceiveStart
 30318 ;;		_RADIO_TransmitCW
 30319 ;; This function uses a non-reentrant model
 30320 ;;
 30321                           
 30322                           	psect	text151
 30323  0014DE                     __ptext151:
 30324                           	opt stack 0
 30325  0014DE                     _RADIO_WriteConfiguration:
 30326                           	opt stack 17
 30327                           
 30328                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 30329                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 30330                           ;radio_driver_SX1276.c: 537: uint8_t i;
 30331                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 30332                           
 30333                           ; BSR set to: 0
 30334                           ;incstack = 0
 30335  0014DE  C139  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30336  0014E2  0E00               	movlw	0
 30337  0014E4  0100               	movlb	0	; () banked
 30338  0014E6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30339  0014E8  0E00               	movlw	0
 30340  0014EA  EC28  F030         	call	_RADIO_WriteMode
 30341                           
 30342                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 30343  0014EE  C121  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 30344  0014F2  C122  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 30345  0014F6  C123  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 30346  0014FA  C124  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 30347  0014FE  EC0D  F033         	call	_RADIO_WriteFrequency	;wreg free
 30348                           
 30349                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 30350  001502  0101               	movlb	1	; () banked
 30351  001504  513C               	movf	(_RadioConfiguration+27)& (0+255),w,b
 30352  001506  EC95  F032         	call	_RADIO_WritePower
 30353                           
 30354                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 30355  00150A  0101               	movlb	1	; () banked
 30356  00150C  0539               	decf	(_RadioConfiguration+24)& (0+255),w,b
 30357  00150E  A4D8               	btfss	status,2,c
 30358  001510  D1ED               	goto	l455
 30359                           
 30360                           ; BSR set to: 1
 30361                           ;radio_driver_SX1276.c: 545: {
 30362                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 30363  001512  C12F  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 30364  001516  0E39               	movlw	57
 30365  001518  EC55  F047         	call	_RADIO_RegisterWrite
 30366                           
 30367                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 30368                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 30369                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 30370                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 30371  00151C  C143  F0A8         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 30372  001520  0E01               	movlw	1
 30373  001522  0100               	movlb	0	; () banked
 30374  001524  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30375  001526  0101               	movlb	1	; () banked
 30376  001528  90D8               	bcf	status,0,c
 30377  00152A  3542               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 30378  00152C  0100               	movlb	0	; () banked
 30379  00152E  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30380  001530  0101               	movlb	1	; () banked
 30381  001532  393B               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 30382  001534  0BF0               	andlw	240
 30383  001536  0100               	movlb	0	; () banked
 30384  001538  11A9               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 30385  00153A  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30386  00153C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30387  00153E  0E1D               	movlw	29
 30388  001540  EC55  F047         	call	_RADIO_RegisterWrite
 30389                           
 30390                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 30391                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 30392                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 30393                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 30394  001544  C0A6  F0A8         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 30395  001548  C0A7  F0A9         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 30396  00154C  C0A9  F0A8         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 30397  001550  0100               	movlb	0	; () banked
 30398  001552  6BA9               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30399  001554  0E03               	movlw	3
 30400  001556  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30401  001558  C13D  F0AA         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 30402  00155C  0E01               	movlw	1
 30403  00155E  17AA               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30404  001560  90D8               	bcf	status,0,c
 30405  001562  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30406  001564  90D8               	bcf	status,0,c
 30407  001566  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30408  001568  0101               	movlb	1	; () banked
 30409  00156A  393A               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 30410  00156C  0BF0               	andlw	240
 30411  00156E  0100               	movlb	0	; () banked
 30412  001570  11AA               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 30413  001572  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30414  001574  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30415  001576  0E1E               	movlw	30
 30416  001578  EC55  F047         	call	_RADIO_RegisterWrite
 30417                           
 30418                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 30419  00157C  0101               	movlb	1	; () banked
 30420  00157E  513F               	movf	(_RadioConfiguration+30)& (0+255),w,b
 30421  001580  1140               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 30422  001582  B4D8               	btfsc	status,2,c
 30423  001584  D06F               	goto	l456
 30424                           
 30425                           ; BSR set to: 1
 30426                           ;radio_driver_SX1276.c: 561: {
 30427                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 30428  001586  C13F  F0AC         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 30429  00158A  C140  F0AD         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 30430  00158E  0100               	movlb	0	; () banked
 30431  001590  6BAE               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30432  001592  6BAF               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30433                           
 30434                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 30435  001594  D04E               	goto	l457
 30436  001596                     
 30437                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 30438                           
 30439                           ; BSR set to: 0
 30440  001596  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30441  00159A  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30442  00159E  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30443  0015A2  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30444  0015A6  0E7D               	movlw	125
 30445  0015A8  0100               	movlb	0	; () banked
 30446  0015AA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 30447  0015AC  0E00               	movlw	0
 30448  0015AE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30449  0015B0  0E00               	movlw	0
 30450  0015B2  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30451  0015B4  0E00               	movlw	0
 30452  0015B6  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30453  0015B8  ECB1  F040         	call	___lmul	;wreg free
 30454  0015BC  D027               	goto	L21
 30455  0015BE                     
 30456                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 30457  0015BE  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30458  0015C2  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30459  0015C6  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30460  0015CA  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30461  0015CE  0EFA               	movlw	250
 30462  0015D0  0100               	movlb	0	; () banked
 30463  0015D2  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 30464  0015D4  0E00               	movlw	0
 30465  0015D6  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30466  0015D8  0E00               	movlw	0
 30467  0015DA  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30468  0015DC  0E00               	movlw	0
 30469  0015DE  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30470  0015E0  ECB1  F040         	call	___lmul	;wreg free
 30471  0015E4  D013               	goto	L21
 30472  0015E6                     
 30473                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 30474  0015E6  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30475  0015EA  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30476  0015EE  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30477  0015F2  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30478  0015F6  0EF4               	movlw	244
 30479  0015F8  0100               	movlb	0	; () banked
 30480  0015FA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 30481  0015FC  0E01               	movlw	1
 30482  0015FE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30483  001600  0E00               	movlw	0
 30484  001602  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30485  001604  0E00               	movlw	0
 30486  001606  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30487  001608  ECB1  F040         	call	___lmul	;wreg free
 30488  00160C                     L21:
 30489  00160C  C09A  F0AC         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 30490  001610  C09B  F0AD         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 30491  001614  C09C  F0AE         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 30492  001618  C09D  F0AF         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 30493                           
 30494                           ;radio_driver_SX1276.c: 574: break;
 30495  00161C  D016               	goto	l459
 30496  00161E                     
 30497                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 30498  00161E  0E00               	movlw	0
 30499  001620  0100               	movlb	0	; () banked
 30500  001622  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30501  001624  0E00               	movlw	0
 30502  001626  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30503  001628  0E00               	movlw	0
 30504  00162A  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30505  00162C  0E00               	movlw	0
 30506  00162E  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30507                           
 30508                           ; BSR set to: 0
 30509                           ;radio_driver_SX1276.c: 579: }
 30510                           
 30511                           ;radio_driver_SX1276.c: 578: break;
 30512  001630  D00C               	goto	l459
 30513  001632                     l457:
 30514                           
 30515                           ; BSR set to: 0
 30516                           
 30517                           ; BSR set to: 0
 30518  001632  0101               	movlb	1	; () banked
 30519  001634  513B               	movf	(_RadioConfiguration+26)& (0+255),w,b
 30520                           
 30521                           ; Switch size 1, requested type "space"
 30522                           ; Number of cases is 3, Range of values is 7 to 9
 30523                           ; switch strategies available:
 30524                           ; Name         Instructions Cycles
 30525                           ; simple_byte           10     6 (average)
 30526                           ;	Chosen strategy is simple_byte
 30527  001636  0A07               	xorlw	7	; case 7
 30528  001638  B4D8               	btfsc	status,2,c
 30529  00163A  D7AD               	goto	l458
 30530  00163C  0A0F               	xorlw	15	; case 8
 30531  00163E  B4D8               	btfsc	status,2,c
 30532  001640  D7BE               	goto	l460
 30533  001642  0A01               	xorlw	1	; case 9
 30534  001644  B4D8               	btfsc	status,2,c
 30535  001646  D7CF               	goto	l461
 30536  001648  D7EA               	goto	l462
 30537  00164A                     l459:
 30538                           
 30539                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 30540                           
 30541                           ; BSR set to: 1
 30542  00164A  0101               	movlb	1	; () banked
 30543  00164C  293A               	incf	(_RadioConfiguration+25)& (0+255),w,b
 30544  00164E  0100               	movlb	0	; () banked
 30545  001650  6FA8               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 30546  001652  D005               	goto	u15650
 30547  001654                     u15655:
 30548  001654  90D8               	bcf	status,0,c
 30549  001656  33AF               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 30550  001658  33AE               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 30551  00165A  33AD               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 30552  00165C  33AC               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 30553  00165E                     u15650:
 30554  00165E  2FA8               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 30555  001660  D7F9               	goto	u15655
 30556                           
 30557                           ;radio_driver_SX1276.c: 582: }
 30558  001662  D009               	goto	l463
 30559  001664                     l456:
 30560                           
 30561                           ;radio_driver_SX1276.c: 583: else
 30562                           ;radio_driver_SX1276.c: 584: {
 30563                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 30564  001664  0E00               	movlw	0
 30565  001666  0100               	movlb	0	; () banked
 30566  001668  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30567  00166A  0E00               	movlw	0
 30568  00166C  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30569  00166E  0E00               	movlw	0
 30570  001670  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30571  001672  0E00               	movlw	0
 30572  001674  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30573  001676                     l463:
 30574                           
 30575                           ;radio_driver_SX1276.c: 586: }
 30576                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 30577                           
 30578                           ; BSR set to: 0
 30579  001676  C0AC  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 30580  00167A  0E24               	movlw	36
 30581  00167C  EC55  F047         	call	_RADIO_RegisterWrite
 30582                           
 30583                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 30584  001680  C0A6  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 30585  001684  0E1F               	movlw	31
 30586  001686  EC55  F047         	call	_RADIO_RegisterWrite
 30587                           
 30588                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 30589  00168A  0E26               	movlw	38
 30590  00168C  ECA4  F046         	call	_RADIO_RegisterRead
 30591  001690  0100               	movlb	0	; () banked
 30592  001692  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30593                           
 30594                           ; BSR set to: 0
 30595                           ;radio_driver_SX1276.c: 596: if (
 30596                           ;radio_driver_SX1276.c: 597: (
 30597                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 30598                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 30599                           ;radio_driver_SX1276.c: 600: ) ||
 30600                           ;radio_driver_SX1276.c: 601: (
 30601                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 30602                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 30603                           ;radio_driver_SX1276.c: 604: )
 30604                           ;radio_driver_SX1276.c: 605: )
 30605  001694  0E0C               	movlw	12
 30606  001696  0101               	movlb	1	; () banked
 30607  001698  193A               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30608  00169A  A4D8               	btfss	status,2,c
 30609  00169C  D008               	goto	u15680
 30610                           
 30611                           ; BSR set to: 1
 30612  00169E  0E07               	movlw	7
 30613  0016A0  193B               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30614  0016A2  B4D8               	btfsc	status,2,c
 30615  0016A4  D00C               	goto	u15700
 30616                           
 30617                           ; BSR set to: 1
 30618  0016A6  0E08               	movlw	8
 30619  0016A8  193B               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30620  0016AA  B4D8               	btfsc	status,2,c
 30621  0016AC  D008               	goto	u15700
 30622  0016AE                     u15680:
 30623                           
 30624                           ; BSR set to: 1
 30625                           
 30626                           ; BSR set to: 1
 30627  0016AE  0E0B               	movlw	11
 30628  0016B0  193A               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30629  0016B2  A4D8               	btfss	status,2,c
 30630  0016B4  D007               	goto	l464
 30631                           
 30632                           ; BSR set to: 1
 30633  0016B6  0E07               	movlw	7
 30634  0016B8  193B               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30635  0016BA  A4D8               	btfss	status,2,c
 30636  0016BC  D003               	goto	l464
 30637  0016BE                     u15700:
 30638                           
 30639                           ; BSR set to: 1
 30640                           ;radio_driver_SX1276.c: 606: {
 30641                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 30642                           
 30643                           ; BSR set to: 1
 30644  0016BE  0100               	movlb	0	; () banked
 30645  0016C0  87B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30646                           
 30647                           ;radio_driver_SX1276.c: 608: }
 30648  0016C2  D002               	goto	l469
 30649  0016C4                     l464:
 30650                           
 30651                           ;radio_driver_SX1276.c: 609: else
 30652                           ;radio_driver_SX1276.c: 610: {
 30653                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 30654                           
 30655                           ; BSR set to: 0
 30656  0016C4  0100               	movlb	0	; () banked
 30657  0016C6  97B0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30658  0016C8                     l469:
 30659                           
 30660                           ; BSR set to: 0
 30661                           ;radio_driver_SX1276.c: 612: }
 30662                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 30663  0016C8  85B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 30664                           
 30665                           ; BSR set to: 0
 30666                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 30667  0016CA  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30668  0016CE  0E26               	movlw	38
 30669  0016D0  EC55  F047         	call	_RADIO_RegisterWrite
 30670                           
 30671                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 30672  0016D4  0E31               	movlw	49
 30673  0016D6  ECA4  F046         	call	_RADIO_RegisterRead
 30674  0016DA  0100               	movlb	0	; () banked
 30675  0016DC  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30676                           
 30677                           ; BSR set to: 0
 30678                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 30679  0016DE  0EF8               	movlw	248
 30680  0016E0  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30681                           
 30682                           ; BSR set to: 0
 30683                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 30684  0016E2  0E03               	movlw	3
 30685  0016E4  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30686                           
 30687                           ; BSR set to: 0
 30688                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 30689  0016E6  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30690  0016EA  0E31               	movlw	49
 30691  0016EC  EC55  F047         	call	_RADIO_RegisterWrite
 30692                           
 30693                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 30694  0016F0  0E0A               	movlw	10
 30695  0016F2  0100               	movlb	0	; () banked
 30696  0016F4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30697  0016F6  0E37               	movlw	55
 30698  0016F8  EC55  F047         	call	_RADIO_RegisterWrite
 30699                           
 30700                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 30701  0016FC  0E12               	movlw	18
 30702  0016FE  0101               	movlb	1	; () banked
 30703  001700  1952               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 30704  001702  A4D8               	btfss	status,2,c
 30705  001704  D02F               	goto	l474
 30706                           
 30707                           ; BSR set to: 1
 30708                           ;radio_driver_SX1276.c: 626: {
 30709                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 30710                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 30711  001706  0E07               	movlw	7
 30712  001708  193B               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30713  00170A  B4D8               	btfsc	status,2,c
 30714  00170C  D004               	goto	u15730
 30715                           
 30716                           ; BSR set to: 1
 30717  00170E  0E08               	movlw	8
 30718  001710  193B               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30719  001712  A4D8               	btfss	status,2,c
 30720  001714  D017               	goto	l471
 30721  001716                     u15730:
 30722                           
 30723                           ; BSR set to: 1
 30724                           ;radio_driver_SX1276.c: 631: {
 30725                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 30726                           
 30727                           ; BSR set to: 1
 30728  001716  0E31               	movlw	49
 30729  001718  ECA4  F046         	call	_RADIO_RegisterRead
 30730  00171C  0100               	movlb	0	; () banked
 30731  00171E  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30732                           
 30733                           ; BSR set to: 0
 30734                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 30735  001720  9FB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 30736                           
 30737                           ; BSR set to: 0
 30738                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 30739  001722  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30740  001726  0E31               	movlw	49
 30741  001728  EC55  F047         	call	_RADIO_RegisterWrite
 30742                           
 30743                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 30744  00172C  0E40               	movlw	64
 30745  00172E  0100               	movlb	0	; () banked
 30746  001730  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30747  001732  0E2F               	movlw	47
 30748  001734  EC55  F047         	call	_RADIO_RegisterWrite
 30749                           
 30750                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 30751  001738  0E00               	movlw	0
 30752  00173A  0100               	movlb	0	; () banked
 30753  00173C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30754  00173E  0E30               	movlw	48
 30755  001740  EC55  F047         	call	_RADIO_RegisterWrite
 30756  001744                     l471:
 30757                           
 30758                           ;radio_driver_SX1276.c: 637: }
 30759                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 30760  001744  0E09               	movlw	9
 30761  001746  0101               	movlb	1	; () banked
 30762  001748  193B               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30763  00174A  A4D8               	btfss	status,2,c
 30764  00174C  D00B               	goto	l474
 30765                           
 30766                           ; BSR set to: 1
 30767                           ;radio_driver_SX1276.c: 640: {
 30768                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 30769  00174E  0E31               	movlw	49
 30770  001750  ECA4  F046         	call	_RADIO_RegisterRead
 30771  001754  0100               	movlb	0	; () banked
 30772  001756  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30773                           
 30774                           ; BSR set to: 0
 30775                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 30776  001758  8FB0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 30777                           
 30778                           ; BSR set to: 0
 30779                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 30780  00175A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30781  00175E  0E31               	movlw	49
 30782  001760  EC55  F047         	call	_RADIO_RegisterWrite
 30783  001764                     l474:
 30784                           
 30785                           ;radio_driver_SX1276.c: 644: }
 30786                           ;radio_driver_SX1276.c: 645: }
 30787                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 30788  001764  0E33               	movlw	51
 30789  001766  ECA4  F046         	call	_RADIO_RegisterRead
 30790  00176A  0100               	movlb	0	; () banked
 30791  00176C  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30792                           
 30793                           ; BSR set to: 0
 30794                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 30795  00176E  9DB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 30796                           
 30797                           ; BSR set to: 0
 30798                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 30799  001770  81B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 30800                           
 30801                           ; BSR set to: 0
 30802                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 30803  001772  C141  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 30804  001776  0E01               	movlw	1
 30805  001778  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30806  00177A  0E06               	movlw	6
 30807  00177C  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30808  00177E                     u15755:
 30809  00177E  90D8               	bcf	status,0,c
 30810  001780  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 30811  001782  2FA9               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 30812  001784  D7FC               	goto	u15755
 30813  001786  51A8               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 30814  001788  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30815                           
 30816                           ; BSR set to: 0
 30817                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 30818  00178A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30819  00178E  0E33               	movlw	51
 30820  001790  EC55  F047         	call	_RADIO_RegisterWrite
 30821                           
 30822                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 30823  001794  C141  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 30824  001798  0E01               	movlw	1
 30825  00179A  0100               	movlb	0	; () banked
 30826  00179C  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30827  00179E  90D8               	bcf	status,0,c
 30828  0017A0  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 30829  0017A2  90D8               	bcf	status,0,c
 30830  0017A4  35A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 30831  0017A6  0AFF               	xorlw	255
 30832  0017A8  0B1D               	andlw	29
 30833  0017AA  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30834                           
 30835                           ; BSR set to: 0
 30836                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 30837  0017AC  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30838  0017B0  0E3B               	movlw	59
 30839  0017B2  EC55  F047         	call	_RADIO_RegisterWrite
 30840                           
 30841                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 30842  0017B6  0101               	movlb	1	; () banked
 30843  0017B8  512E               	movf	(_RadioConfiguration+13)& (0+255),w,b
 30844  0017BA  0100               	movlb	0	; () banked
 30845  0017BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30846  0017BE  0E20               	movlw	32
 30847  0017C0  EC55  F047         	call	_RADIO_RegisterWrite
 30848                           
 30849                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 30850  0017C4  C12D  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 30851  0017C8  0E21               	movlw	33
 30852  0017CA  EC55  F047         	call	_RADIO_RegisterWrite
 30853                           
 30854                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 30855  0017CE  0E00               	movlw	0
 30856  0017D0  0100               	movlb	0	; () banked
 30857  0017D2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30858  0017D4  0E0D               	movlw	13
 30859  0017D6  EC55  F047         	call	_RADIO_RegisterWrite
 30860                           
 30861                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 30862  0017DA  0E00               	movlw	0
 30863  0017DC  0100               	movlb	0	; () banked
 30864  0017DE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30865  0017E0  0E0E               	movlw	14
 30866  0017E2  EC55  F047         	call	_RADIO_RegisterWrite
 30867                           
 30868                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 30869  0017E6  0E00               	movlw	0
 30870  0017E8  0100               	movlb	0	; () banked
 30871  0017EA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30872  0017EC  0E0F               	movlw	15
 30873  0017EE  EC55  F047         	call	_RADIO_RegisterWrite
 30874                           
 30875                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 30876  0017F2  0E12               	movlw	18
 30877  0017F4  0101               	movlb	1	; () banked
 30878  0017F6  1952               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 30879  0017F8  A4D8               	btfss	status,2,c
 30880  0017FA  D071               	goto	l481
 30881                           
 30882                           ; BSR set to: 1
 30883                           ;radio_driver_SX1276.c: 665: {
 30884                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 30885                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 30886                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 30887                           ;radio_driver_SX1276.c: 669: )
 30888  0017FC  0E09               	movlw	9
 30889  0017FE  193B               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30890  001800  A4D8               	btfss	status,2,c
 30891  001802  D020               	goto	l476
 30892                           
 30893                           ; BSR set to: 1
 30894  001804  0E80               	movlw	128
 30895  001806  5D21               	subwf	_RadioConfiguration& (0+255),w,b
 30896  001808  0E13               	movlw	19
 30897  00180A  5922               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30898  00180C  0E61               	movlw	97
 30899  00180E  5923               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30900  001810  0E33               	movlw	51
 30901  001812  5924               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30902  001814  A0D8               	btfss	status,0,c
 30903  001816  D016               	goto	l476
 30904                           
 30905                           ; BSR set to: 1
 30906  001818  0521               	decf	_RadioConfiguration& (0+255),w,b
 30907  00181A  0EF7               	movlw	247
 30908  00181C  5922               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30909  00181E  0ECB               	movlw	203
 30910  001820  5923               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30911  001822  0E3C               	movlw	60
 30912  001824  5924               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30913  001826  B0D8               	btfsc	status,0,c
 30914  001828  D00D               	goto	l476
 30915                           
 30916                           ; BSR set to: 1
 30917                           ;radio_driver_SX1276.c: 670: {
 30918                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 30919  00182A  0E02               	movlw	2
 30920  00182C  0100               	movlb	0	; () banked
 30921  00182E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30922  001830  0E36               	movlw	54
 30923  001832  EC55  F047         	call	_RADIO_RegisterWrite
 30924                           
 30925                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 30926  001836  0E64               	movlw	100
 30927  001838  0100               	movlb	0	; () banked
 30928  00183A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30929  00183C  0E3A               	movlw	58
 30930  00183E  EC55  F047         	call	_RADIO_RegisterWrite
 30931                           
 30932                           ;radio_driver_SX1276.c: 673: }
 30933  001842  D02C               	goto	l479
 30934  001844                     l476:
 30935                           
 30936                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 30937                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 30938                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 30939                           ;radio_driver_SX1276.c: 677: )
 30940  001844  0E09               	movlw	9
 30941  001846  0101               	movlb	1	; () banked
 30942  001848  193B               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30943  00184A  A4D8               	btfss	status,2,c
 30944  00184C  D021               	goto	l478
 30945                           
 30946                           ; BSR set to: 1
 30947  00184E  0E80               	movlw	128
 30948  001850  5D21               	subwf	_RadioConfiguration& (0+255),w,b
 30949  001852  0E1A               	movlw	26
 30950  001854  5922               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30951  001856  0E70               	movlw	112
 30952  001858  5923               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30953  00185A  0E18               	movlw	24
 30954  00185C  5924               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30955  00185E  A0D8               	btfss	status,0,c
 30956  001860  D017               	goto	l478
 30957                           
 30958                           ; BSR set to: 1
 30959  001862  0E41               	movlw	65
 30960  001864  5D21               	subwf	_RadioConfiguration& (0+255),w,b
 30961  001866  0EDD               	movlw	221
 30962  001868  5922               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30963  00186A  0E4A               	movlw	74
 30964  00186C  5923               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30965  00186E  0E1F               	movlw	31
 30966  001870  5924               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30967  001872  B0D8               	btfsc	status,0,c
 30968  001874  D00D               	goto	l478
 30969                           
 30970                           ; BSR set to: 1
 30971                           ;radio_driver_SX1276.c: 678: {
 30972                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 30973  001876  0E02               	movlw	2
 30974  001878  0100               	movlb	0	; () banked
 30975  00187A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30976  00187C  0E36               	movlw	54
 30977  00187E  EC55  F047         	call	_RADIO_RegisterWrite
 30978                           
 30979                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 30980  001882  0E7F               	movlw	127
 30981  001884  0100               	movlb	0	; () banked
 30982  001886  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30983  001888  0E3A               	movlw	58
 30984  00188A  EC55  F047         	call	_RADIO_RegisterWrite
 30985                           
 30986                           ;radio_driver_SX1276.c: 681: }
 30987  00188E  D006               	goto	l479
 30988  001890                     l478:
 30989                           
 30990                           ;radio_driver_SX1276.c: 682: else
 30991                           ;radio_driver_SX1276.c: 683: {
 30992                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 30993  001890  0E03               	movlw	3
 30994  001892  0100               	movlb	0	; () banked
 30995  001894  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30996  001896  0E36               	movlw	54
 30997  001898  EC55  F047         	call	_RADIO_RegisterWrite
 30998  00189C                     l479:
 30999                           
 31000                           ;radio_driver_SX1276.c: 685: }
 31001                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 31002  00189C  0E09               	movlw	9
 31003  00189E  0101               	movlb	1	; () banked
 31004  0018A0  193B               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 31005  0018A2  A4D8               	btfss	status,2,c
 31006  0018A4  D010               	goto	l480
 31007                           
 31008                           ; BSR set to: 1
 31009  0018A6  0541               	decf	(_RadioConfiguration+32)& (0+255),w,b
 31010  0018A8  A4D8               	btfss	status,2,c
 31011  0018AA  D00D               	goto	l480
 31012                           
 31013                           ; BSR set to: 1
 31014                           ;radio_driver_SX1276.c: 689: {
 31015                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 31016  0018AC  0E65               	movlw	101
 31017  0018AE  0100               	movlb	0	; () banked
 31018  0018B0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31019  0018B2  0E3A               	movlw	58
 31020  0018B4  EC55  F047         	call	_RADIO_RegisterWrite
 31021                           
 31022                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 31023  0018B8  0E19               	movlw	25
 31024  0018BA  0100               	movlb	0	; () banked
 31025  0018BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31026  0018BE  0E3B               	movlw	59
 31027  0018C0  EC55  F047         	call	_RADIO_RegisterWrite
 31028                           
 31029                           ;radio_driver_SX1276.c: 692: }
 31030  0018C4  D00C               	goto	l481
 31031  0018C6                     l480:
 31032                           
 31033                           ;radio_driver_SX1276.c: 693: else
 31034                           ;radio_driver_SX1276.c: 694: {
 31035                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 31036  0018C6  0E65               	movlw	101
 31037  0018C8  0100               	movlb	0	; () banked
 31038  0018CA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31039  0018CC  0E3A               	movlw	58
 31040  0018CE  EC55  F047         	call	_RADIO_RegisterWrite
 31041                           
 31042                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 31043  0018D2  0E1D               	movlw	29
 31044  0018D4  0100               	movlb	0	; () banked
 31045  0018D6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31046  0018D8  0E3B               	movlw	59
 31047  0018DA  EC55  F047         	call	_RADIO_RegisterWrite
 31048  0018DE                     l481:
 31049                           
 31050                           ;radio_driver_SX1276.c: 697: }
 31051                           ;radio_driver_SX1276.c: 698: }
 31052                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 31053  0018DE  0EFF               	movlw	255
 31054  0018E0  0100               	movlb	0	; () banked
 31055  0018E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31056  0018E4  0E12               	movlw	18
 31057  0018E6  EC55  F047         	call	_RADIO_RegisterWrite
 31058                           
 31059                           ;radio_driver_SX1276.c: 702: }
 31060  0018EA  0012               	return	
 31061  0018EC                     l455:
 31062                           
 31063                           ;radio_driver_SX1276.c: 703: else
 31064                           ;radio_driver_SX1276.c: 704: {
 31065                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 31066  0018EC  C125  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 31067  0018F0  C126  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 31068  0018F4  C127  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 31069  0018F8  C128  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 31070  0018FC  ECA6  F03D         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 31071                           
 31072                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 31073  001900  C129  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 31074  001904  C12A  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 31075  001908  C12B  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 31076  00190C  C12C  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 31077  001910  ECDB  F03D         	call	_RADIO_WriteFSKBitRate	;wreg free
 31078                           
 31079                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 31080  001914  0101               	movlb	1	; () banked
 31081  001916  512E               	movf	(_RadioConfiguration+13)& (0+255),w,b
 31082  001918  0100               	movlb	0	; () banked
 31083  00191A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31084  00191C  0E25               	movlw	37
 31085  00191E  EC55  F047         	call	_RADIO_RegisterWrite
 31086                           
 31087                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 31088  001922  C12D  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 31089  001926  0E26               	movlw	38
 31090  001928  EC55  F047         	call	_RADIO_RegisterWrite
 31091                           
 31092                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 31093  00192C  0E0A               	movlw	10
 31094  00192E  ECA4  F046         	call	_RADIO_RegisterRead
 31095  001932  0100               	movlb	0	; () banked
 31096  001934  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 31097                           
 31098                           ; BSR set to: 0
 31099                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 31100  001936  0E9F               	movlw	159
 31101  001938  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 31102                           
 31103                           ; BSR set to: 0
 31104                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 31105  00193A  0101               	movlb	1	; () banked
 31106  00193C  3954               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 31107  00193E  46E8               	rlncf	wreg,f,c
 31108  001940  0BE0               	andlw	224
 31109  001942  0100               	movlb	0	; () banked
 31110  001944  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 31111                           
 31112                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 31113  001946  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 31114  00194A  0E0A               	movlw	10
 31115  00194C  EC55  F047         	call	_RADIO_RegisterWrite
 31116                           
 31117                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 31118  001950  0EC8               	movlw	200
 31119  001952  0100               	movlb	0	; () banked
 31120  001954  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 31121                           
 31122                           ; BSR set to: 0
 31123                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 31124  001956  0101               	movlb	1	; () banked
 31125  001958  513D               	movf	(_RadioConfiguration+28)& (0+255),w,b
 31126  00195A  B4D8               	btfsc	status,2,c
 31127  00195C  D002               	goto	l483
 31128                           
 31129                           ; BSR set to: 1
 31130                           ;radio_driver_SX1276.c: 722: {
 31131                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 31132  00195E  0100               	movlb	0	; () banked
 31133  001960  89B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 31134  001962                     l483:
 31135                           
 31136                           ;radio_driver_SX1276.c: 724: }
 31137                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 31138                           
 31139                           ; BSR set to: 0
 31140  001962  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 31141  001966  0E30               	movlw	48
 31142  001968  EC55  F047         	call	_RADIO_RegisterWrite
 31143                           
 31144                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 31145  00196C  0E00               	movlw	0
 31146  00196E  0100               	movlb	0	; () banked
 31147  001970  6FAB               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 31148  001972  D010               	goto	l484
 31149  001974                     
 31150                           ; BSR set to: 0
 31151                           ;radio_driver_SX1276.c: 729: {
 31152                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 31153                           
 31154                           ; BSR set to: 0
 31155  001974  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 31156  001976  0D01               	mullw	1
 31157  001978  0E30               	movlw	low (_RadioConfiguration+15)
 31158  00197A  24F3               	addwf	prodl,w,c
 31159  00197C  6ED9               	movwf	fsr2l,c
 31160  00197E  0E01               	movlw	high (_RadioConfiguration+15)
 31161  001980  20F4               	addwfc	prodh,w,c
 31162  001982  6EDA               	movwf	fsr2h,c
 31163  001984  50DF               	movf	indf2,w,c
 31164  001986  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31165  001988  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 31166  00198A  0F28               	addlw	40
 31167  00198C  EC55  F047         	call	_RADIO_RegisterWrite
 31168  001990  0100               	movlb	0	; () banked
 31169  001992  2BAB               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 31170  001994                     l484:
 31171                           
 31172                           ; BSR set to: 0
 31173                           
 31174                           ; BSR set to: 0
 31175  001994  0101               	movlb	1	; () banked
 31176  001996  5138               	movf	(_RadioConfiguration+23)& (0+255),w,b
 31177  001998  0100               	movlb	0	; () banked
 31178  00199A  5DAB               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 31179  00199C  A0D8               	btfss	status,0,c
 31180  00199E  D7EA               	goto	l485
 31181                           
 31182                           ; BSR set to: 0
 31183                           ;radio_driver_SX1276.c: 733: }
 31184                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 31185                           
 31186                           ; BSR set to: 0
 31187  0019A0  0101               	movlb	1	; () banked
 31188  0019A2  5138               	movf	(_RadioConfiguration+23)& (0+255),w,b
 31189  0019A4  B4D8               	btfsc	status,2,c
 31190  0019A6  D008               	goto	l487
 31191                           
 31192                           ; BSR set to: 1
 31193                           ;radio_driver_SX1276.c: 737: {
 31194                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 31195  0019A8  0538               	decf	(_RadioConfiguration+23)& (0+255),w,b
 31196  0019AA  0910               	iorlw	16
 31197  0019AC  0100               	movlb	0	; () banked
 31198  0019AE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31199  0019B0  0E27               	movlw	39
 31200  0019B2  EC55  F047         	call	_RADIO_RegisterWrite
 31201                           
 31202                           ;radio_driver_SX1276.c: 739: }
 31203  0019B6  D006               	goto	l488
 31204  0019B8                     l487:
 31205                           
 31206                           ;radio_driver_SX1276.c: 740: else
 31207                           ;radio_driver_SX1276.c: 741: {
 31208                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 31209  0019B8  0E00               	movlw	0
 31210  0019BA  0100               	movlb	0	; () banked
 31211  0019BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31212  0019BE  0E27               	movlw	39
 31213  0019C0  EC55  F047         	call	_RADIO_RegisterWrite
 31214  0019C4                     l488:
 31215                           
 31216                           ;radio_driver_SX1276.c: 743: }
 31217                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 31218  0019C4  0EFF               	movlw	255
 31219  0019C6  0100               	movlb	0	; () banked
 31220  0019C8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31221  0019CA  0E3E               	movlw	62
 31222  0019CC  EC55  F047         	call	_RADIO_RegisterWrite
 31223                           
 31224                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 31225  0019D0  0EFF               	movlw	255
 31226  0019D2  0100               	movlb	0	; () banked
 31227  0019D4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31228  0019D6  0E3F               	movlw	63
 31229  0019D8  EC55  F047         	call	_RADIO_RegisterWrite
 31230  0019DC  0012               	return	
 31231  0019DE                     __end_of_RADIO_WriteConfiguration:
 31232                           	opt stack 0
 31233                           tosu	equ	0xFFF
 31234                           tosh	equ	0xFFE
 31235                           tosl	equ	0xFFD
 31236                           pclath	equ	0xFFA
 31237                           tblptru	equ	0xFF8
 31238                           tblptrh	equ	0xFF7
 31239                           tblptrl	equ	0xFF6
 31240                           tablat	equ	0xFF5
 31241                           prodh	equ	0xFF4
 31242                           prodl	equ	0xFF3
 31243                           intcon	equ	0xFF2
 31244                           intcon2	equ	0xFF1
 31245                           intcon3	equ	0xFF0
 31246                           indf0	equ	0xFEF
 31247                           postinc0	equ	0xFEE
 31248                           fsr0h	equ	0xFEA
 31249                           fsr0l	equ	0xFE9
 31250                           wreg	equ	0xFE8
 31251                           postinc1	equ	0xFE6
 31252                           postdec1	equ	0xFE5
 31253                           plusw1	equ	0xFE3
 31254                           fsr1h	equ	0xFE2
 31255                           fsr1l	equ	0xFE1
 31256                           indf2	equ	0xFDF
 31257                           postinc2	equ	0xFDE
 31258                           postdec2	equ	0xFDD
 31259                           plusw2	equ	0xFDB
 31260                           fsr2h	equ	0xFDA
 31261                           fsr2l	equ	0xFD9
 31262                           status	equ	0xFD8
 31263                           
 31264 ;; *************** function _RADIO_WritePower *****************
 31265 ;; Defined at:
 31266 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31267 ;; Parameters:    Size  Location     Type
 31268 ;;  power           1    wreg     char 
 31269 ;; Auto vars:     Size  Location     Type
 31270 ;;  power           1    6[BANK0 ] char 
 31271 ;;  paDac           1    5[BANK0 ] unsigned char 
 31272 ;;  ocp             1    4[BANK0 ] unsigned char 
 31273 ;; Return value:  Size  Location     Type
 31274 ;;                  1    wreg      void 
 31275 ;; Registers used:
 31276 ;;		wreg, status,2, status,0, cstack
 31277 ;; Tracked objects:
 31278 ;;		On entry : 0/0
 31279 ;;		On exit  : 0/0
 31280 ;;		Unchanged: 0/0
 31281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31283 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31285 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31286 ;;Total ram usage:        3 bytes
 31287 ;; Hardware stack levels used:    1
 31288 ;; Hardware stack levels required when called:   10
 31289 ;; This function calls:
 31290 ;;		_RADIO_RegisterRead
 31291 ;;		_RADIO_RegisterWrite
 31292 ;; This function is called by:
 31293 ;;		_RADIO_WriteConfiguration
 31294 ;; This function uses a non-reentrant model
 31295 ;;
 31296                           
 31297                           	psect	text152
 31298  00652A                     __ptext152:
 31299                           	opt stack 0
 31300  00652A                     _RADIO_WritePower:
 31301                           	opt stack 17
 31302                           
 31303                           ;incstack = 0
 31304                           ;RADIO_WritePower@power stored from wreg
 31305  00652A  0100               	movlb	0	; () banked
 31306  00652C  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31307                           
 31308                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 31309                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 31310                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 31311  00652E  0101               	movlb	1	; () banked
 31312  006530  513E               	movf	(_RadioConfiguration+29)& (0+255),w,b
 31313  006532  A4D8               	btfss	status,2,c
 31314  006534  D030               	goto	l426
 31315                           
 31316                           ; BSR set to: 1
 31317                           ;radio_driver_SX1276.c: 348: {
 31318                           ;radio_driver_SX1276.c: 350: if (power < -3)
 31319  006536  0100               	movlb	0	; () banked
 31320  006538  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31321  00653A  0A80               	xorlw	128
 31322  00653C  0F83               	addlw	131
 31323  00653E  B0D8               	btfsc	status,0,c
 31324  006540  D002               	goto	l427
 31325                           
 31326                           ; BSR set to: 0
 31327                           ;radio_driver_SX1276.c: 351: {
 31328                           ;radio_driver_SX1276.c: 352: power = -3;
 31329  006542  0EFD               	movlw	253
 31330  006544  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31331  006546                     l427:
 31332                           
 31333                           ; BSR set to: 0
 31334                           ;radio_driver_SX1276.c: 353: }
 31335                           ;radio_driver_SX1276.c: 354: if (power > 15)
 31336                           
 31337                           ; BSR set to: 0
 31338  006546  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31339  006548  0A80               	xorlw	128
 31340  00654A  0F70               	addlw	-144
 31341  00654C  A0D8               	btfss	status,0,c
 31342  00654E  D002               	goto	l428
 31343                           
 31344                           ; BSR set to: 0
 31345                           ;radio_driver_SX1276.c: 355: {
 31346                           ;radio_driver_SX1276.c: 356: power = 15;
 31347  006550  0E0F               	movlw	15
 31348  006552  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31349  006554                     l428:
 31350                           
 31351                           ; BSR set to: 0
 31352                           ;radio_driver_SX1276.c: 357: }
 31353                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 31354                           
 31355                           ; BSR set to: 0
 31356  006554  0E4D               	movlw	77
 31357  006556  ECA4  F046         	call	_RADIO_RegisterRead
 31358  00655A  0100               	movlb	0	; () banked
 31359  00655C  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 31360                           
 31361                           ; BSR set to: 0
 31362                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 31363  00655E  0EF8               	movlw	248
 31364  006560  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31365                           
 31366                           ; BSR set to: 0
 31367                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 31368  006562  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31369                           
 31370                           ; BSR set to: 0
 31371                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 31372  006564  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31373  006568  0E4D               	movlw	77
 31374  00656A  EC55  F047         	call	_RADIO_RegisterWrite
 31375                           
 31376                           ;radio_driver_SX1276.c: 364: if (power < 0)
 31377  00656E  0100               	movlb	0	; () banked
 31378  006570  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
 31379  006572  D009               	goto	l429
 31380                           
 31381                           ; BSR set to: 0
 31382                           ;radio_driver_SX1276.c: 365: {
 31383                           ;radio_driver_SX1276.c: 369: power += 3;
 31384  006574  0E03               	movlw	3
 31385  006576  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 31386                           
 31387                           ; BSR set to: 0
 31388                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 31389  006578  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31390  00657A  0920               	iorlw	32
 31391  00657C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31392  00657E  0E09               	movlw	9
 31393  006580  EC55  F047         	call	_RADIO_RegisterWrite
 31394                           
 31395                           ;radio_driver_SX1276.c: 371: }
 31396  006584  0012               	return	
 31397  006586                     l429:
 31398                           
 31399                           ;radio_driver_SX1276.c: 372: else
 31400                           ;radio_driver_SX1276.c: 373: {
 31401                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 31402  006586  0100               	movlb	0	; () banked
 31403  006588  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31404  00658A  0970               	iorlw	112
 31405  00658C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31406  00658E  0E09               	movlw	9
 31407  006590  EC55  F047         	call	_RADIO_RegisterWrite
 31408                           
 31409                           ;radio_driver_SX1276.c: 378: }
 31410                           ;radio_driver_SX1276.c: 379: }
 31411  006594  0012               	return	
 31412  006596                     l426:
 31413                           
 31414                           ;radio_driver_SX1276.c: 380: else
 31415                           ;radio_driver_SX1276.c: 381: {
 31416                           ;radio_driver_SX1276.c: 385: if (power < 2)
 31417  006596  0100               	movlb	0	; () banked
 31418  006598  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31419  00659A  0A80               	xorlw	128
 31420  00659C  0F7E               	addlw	-130
 31421  00659E  B0D8               	btfsc	status,0,c
 31422  0065A0  D002               	goto	l432
 31423                           
 31424                           ; BSR set to: 0
 31425                           ;radio_driver_SX1276.c: 386: {
 31426                           ;radio_driver_SX1276.c: 387: power = 2;
 31427  0065A2  0E02               	movlw	2
 31428  0065A4  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31429  0065A6                     l432:
 31430                           
 31431                           ; BSR set to: 0
 31432                           ;radio_driver_SX1276.c: 388: }
 31433                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 31434                           
 31435                           ; BSR set to: 0
 31436  0065A6  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31437  0065A8  0A80               	xorlw	128
 31438  0065AA  0F6C               	addlw	-148
 31439  0065AC  A0D8               	btfss	status,0,c
 31440  0065AE  D002               	goto	l433
 31441                           
 31442                           ; BSR set to: 0
 31443                           ;radio_driver_SX1276.c: 392: {
 31444                           ;radio_driver_SX1276.c: 393: power = 20;
 31445  0065B0  0E14               	movlw	20
 31446  0065B2  D006               	goto	L22
 31447  0065B4                     l433:
 31448                           
 31449                           ; BSR set to: 0
 31450                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 31451                           
 31452                           ; BSR set to: 0
 31453  0065B4  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31454  0065B6  0A80               	xorlw	128
 31455  0065B8  0F6E               	addlw	-146
 31456  0065BA  A0D8               	btfss	status,0,c
 31457  0065BC  D002               	goto	l435
 31458                           
 31459                           ; BSR set to: 0
 31460                           ;radio_driver_SX1276.c: 396: {
 31461                           ;radio_driver_SX1276.c: 397: power = 17;
 31462  0065BE  0E11               	movlw	17
 31463  0065C0                     L22:
 31464  0065C0  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31465  0065C2                     l435:
 31466                           
 31467                           ; BSR set to: 0
 31468                           ;radio_driver_SX1276.c: 398: }
 31469                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 31470                           
 31471                           ; BSR set to: 0
 31472                           
 31473                           ; BSR set to: 0
 31474  0065C2  0E0B               	movlw	11
 31475  0065C4  ECA4  F046         	call	_RADIO_RegisterRead
 31476  0065C8  0100               	movlb	0	; () banked
 31477  0065CA  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
 31478                           
 31479                           ; BSR set to: 0
 31480                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 31481  0065CC  0E4D               	movlw	77
 31482  0065CE  ECA4  F046         	call	_RADIO_RegisterRead
 31483  0065D2  0100               	movlb	0	; () banked
 31484  0065D4  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 31485                           
 31486                           ; BSR set to: 0
 31487                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 31488  0065D6  0EF8               	movlw	248
 31489  0065D8  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31490                           
 31491                           ; BSR set to: 0
 31492                           ;radio_driver_SX1276.c: 403: if (power == 20)
 31493  0065DA  0E14               	movlw	20
 31494  0065DC  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
 31495  0065DE  A4D8               	btfss	status,2,c
 31496  0065E0  D006               	goto	l436
 31497                           
 31498                           ; BSR set to: 0
 31499                           ;radio_driver_SX1276.c: 404: {
 31500                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 31501  0065E2  0E07               	movlw	7
 31502  0065E4  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 31503                           
 31504                           ; BSR set to: 0
 31505                           ;radio_driver_SX1276.c: 406: power = 15;
 31506  0065E6  0E0F               	movlw	15
 31507  0065E8  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31508                           
 31509                           ; BSR set to: 0
 31510                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 31511  0065EA  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 31512                           
 31513                           ;radio_driver_SX1276.c: 408: }
 31514  0065EC  D004               	goto	l437
 31515  0065EE                     l436:
 31516                           
 31517                           ; BSR set to: 0
 31518                           ;radio_driver_SX1276.c: 409: else
 31519                           ;radio_driver_SX1276.c: 410: {
 31520                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 31521                           
 31522                           ; BSR set to: 0
 31523  0065EE  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31524                           
 31525                           ; BSR set to: 0
 31526                           ;radio_driver_SX1276.c: 412: power -= 2;
 31527  0065F0  0EFE               	movlw	254
 31528  0065F2  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 31529                           
 31530                           ; BSR set to: 0
 31531                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 31532  0065F4  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 31533  0065F6                     l437:
 31534                           
 31535                           ; BSR set to: 0
 31536                           ;radio_driver_SX1276.c: 414: }
 31537                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 31538                           
 31539                           ; BSR set to: 0
 31540  0065F6  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31541  0065FA  0E4D               	movlw	77
 31542  0065FC  EC55  F047         	call	_RADIO_RegisterWrite
 31543                           
 31544                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 31545  006600  0100               	movlb	0	; () banked
 31546  006602  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31547  006604  0980               	iorlw	128
 31548  006606  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31549  006608  0E09               	movlw	9
 31550  00660A  EC55  F047         	call	_RADIO_RegisterWrite
 31551                           
 31552                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 31553  00660E  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 31554  006612  0E0B               	movlw	11
 31555  006614  EC55  F047         	call	_RADIO_RegisterWrite
 31556  006618  0012               	return	
 31557  00661A                     __end_of_RADIO_WritePower:
 31558                           	opt stack 0
 31559                           tosu	equ	0xFFF
 31560                           tosh	equ	0xFFE
 31561                           tosl	equ	0xFFD
 31562                           pclath	equ	0xFFA
 31563                           tblptru	equ	0xFF8
 31564                           tblptrh	equ	0xFF7
 31565                           tblptrl	equ	0xFF6
 31566                           tablat	equ	0xFF5
 31567                           prodh	equ	0xFF4
 31568                           prodl	equ	0xFF3
 31569                           intcon	equ	0xFF2
 31570                           intcon2	equ	0xFF1
 31571                           intcon3	equ	0xFF0
 31572                           indf0	equ	0xFEF
 31573                           postinc0	equ	0xFEE
 31574                           fsr0h	equ	0xFEA
 31575                           fsr0l	equ	0xFE9
 31576                           wreg	equ	0xFE8
 31577                           postinc1	equ	0xFE6
 31578                           postdec1	equ	0xFE5
 31579                           plusw1	equ	0xFE3
 31580                           fsr1h	equ	0xFE2
 31581                           fsr1l	equ	0xFE1
 31582                           indf2	equ	0xFDF
 31583                           postinc2	equ	0xFDE
 31584                           postdec2	equ	0xFDD
 31585                           plusw2	equ	0xFDB
 31586                           fsr2h	equ	0xFDA
 31587                           fsr2l	equ	0xFD9
 31588                           status	equ	0xFD8
 31589                           
 31590 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 31591 ;; Defined at:
 31592 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31593 ;; Parameters:    Size  Location     Type
 31594 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
 31595 ;; Auto vars:     Size  Location     Type
 31596 ;;  num             4   17[BANK0 ] unsigned long 
 31597 ;; Return value:  Size  Location     Type
 31598 ;;                  1    wreg      void 
 31599 ;; Registers used:
 31600 ;;		wreg, status,2, status,0, cstack
 31601 ;; Tracked objects:
 31602 ;;		On entry : 0/0
 31603 ;;		On exit  : 0/0
 31604 ;;		Unchanged: 0/0
 31605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31606 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31607 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31609 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31610 ;;Total ram usage:        8 bytes
 31611 ;; Hardware stack levels used:    1
 31612 ;; Hardware stack levels required when called:   10
 31613 ;; This function calls:
 31614 ;;		_RADIO_RegisterWrite
 31615 ;;		___lldiv
 31616 ;; This function is called by:
 31617 ;;		_RADIO_WriteConfiguration
 31618 ;; This function uses a non-reentrant model
 31619 ;;
 31620                           
 31621                           	psect	text153
 31622  007B4C                     __ptext153:
 31623                           	opt stack 0
 31624  007B4C                     _RADIO_WriteFSKFrequencyDeviation:
 31625                           	opt stack 17
 31626                           
 31627                           ;radio_driver_SX1276.c: 296: uint32_t num;
 31628                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 31629                           
 31630                           ;incstack = 0
 31631  007B4C  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 31632  007B50  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 31633  007B54  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 31634  007B58  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 31635                           
 31636                           ;radio_driver_SX1276.c: 304: num <<= (8);
 31637  007B5C  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 31638  007B60  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 31639  007B64  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 31640  007B68  0100               	movlb	0	; () banked
 31641  007B6A  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 31642                           
 31643                           ; BSR set to: 0
 31644                           ;radio_driver_SX1276.c: 305: num /= 15625;
 31645  007B6C  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 31646  007B70  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 31647  007B74  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 31648  007B78  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 31649  007B7C  0E09               	movlw	9
 31650  007B7E  6F64               	movwf	___lldiv@divisor& (0+255),b
 31651  007B80  0E3D               	movlw	61
 31652  007B82  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 31653  007B84  0E00               	movlw	0
 31654  007B86  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 31655  007B88  0E00               	movlw	0
 31656  007B8A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 31657  007B8C  ECC4  F03B         	call	___lldiv	;wreg free
 31658  007B90  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 31659  007B94  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 31660  007B98  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 31661  007B9C  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 31662                           
 31663                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 31664  007BA0  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 31665  007BA4  0E04               	movlw	4
 31666  007BA6  EC55  F047         	call	_RADIO_RegisterWrite
 31667                           
 31668                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 31669  007BAA  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 31670  007BAE  0E05               	movlw	5
 31671  007BB0  EC55  F047         	call	_RADIO_RegisterWrite
 31672  007BB4  0012               	return		;funcret
 31673  007BB6                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 31674                           	opt stack 0
 31675                           tosu	equ	0xFFF
 31676                           tosh	equ	0xFFE
 31677                           tosl	equ	0xFFD
 31678                           pclath	equ	0xFFA
 31679                           tblptru	equ	0xFF8
 31680                           tblptrh	equ	0xFF7
 31681                           tblptrl	equ	0xFF6
 31682                           tablat	equ	0xFF5
 31683                           prodh	equ	0xFF4
 31684                           prodl	equ	0xFF3
 31685                           intcon	equ	0xFF2
 31686                           intcon2	equ	0xFF1
 31687                           intcon3	equ	0xFF0
 31688                           indf0	equ	0xFEF
 31689                           postinc0	equ	0xFEE
 31690                           fsr0h	equ	0xFEA
 31691                           fsr0l	equ	0xFE9
 31692                           wreg	equ	0xFE8
 31693                           postinc1	equ	0xFE6
 31694                           postdec1	equ	0xFE5
 31695                           plusw1	equ	0xFE3
 31696                           fsr1h	equ	0xFE2
 31697                           fsr1l	equ	0xFE1
 31698                           indf2	equ	0xFDF
 31699                           postinc2	equ	0xFDE
 31700                           postdec2	equ	0xFDD
 31701                           plusw2	equ	0xFDB
 31702                           fsr2h	equ	0xFDA
 31703                           fsr2l	equ	0xFD9
 31704                           status	equ	0xFD8
 31705                           
 31706 ;; *************** function _RADIO_WriteFSKBitRate *****************
 31707 ;; Defined at:
 31708 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31709 ;; Parameters:    Size  Location     Type
 31710 ;;  bitRate         4   13[BANK0 ] unsigned long 
 31711 ;; Auto vars:     Size  Location     Type
 31712 ;;  num             4   17[BANK0 ] unsigned long 
 31713 ;; Return value:  Size  Location     Type
 31714 ;;                  1    wreg      void 
 31715 ;; Registers used:
 31716 ;;		wreg, status,2, status,0, cstack
 31717 ;; Tracked objects:
 31718 ;;		On entry : 0/0
 31719 ;;		On exit  : 0/0
 31720 ;;		Unchanged: 0/0
 31721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31722 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31723 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31725 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31726 ;;Total ram usage:        8 bytes
 31727 ;; Hardware stack levels used:    1
 31728 ;; Hardware stack levels required when called:   10
 31729 ;; This function calls:
 31730 ;;		_RADIO_RegisterWrite
 31731 ;;		___lldiv
 31732 ;; This function is called by:
 31733 ;;		_RADIO_WriteConfiguration
 31734 ;; This function uses a non-reentrant model
 31735 ;;
 31736                           
 31737                           	psect	text154
 31738  007BB6                     __ptext154:
 31739                           	opt stack 0
 31740  007BB6                     _RADIO_WriteFSKBitRate:
 31741                           	opt stack 17
 31742                           
 31743                           ;radio_driver_SX1276.c: 318: uint32_t num;
 31744                           ;radio_driver_SX1276.c: 320: num = 32000000;
 31745                           
 31746                           ;incstack = 0
 31747  007BB6  0E00               	movlw	0
 31748  007BB8  0100               	movlb	0	; () banked
 31749  007BBA  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 31750  007BBC  0E48               	movlw	72
 31751  007BBE  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 31752  007BC0  0EE8               	movlw	232
 31753  007BC2  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 31754  007BC4  0E01               	movlw	1
 31755  007BC6  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 31756                           
 31757                           ; BSR set to: 0
 31758                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 31759  007BC8  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 31760  007BCC  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 31761  007BD0  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 31762  007BD4  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 31763  007BD8  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 31764  007BDC  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 31765  007BE0  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 31766  007BE4  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 31767  007BE8  ECC4  F03B         	call	___lldiv	;wreg free
 31768  007BEC  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 31769  007BF0  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 31770  007BF4  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 31771  007BF8  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 31772                           
 31773                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 31774  007BFC  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 31775  007C00  0E02               	movlw	2
 31776  007C02  EC55  F047         	call	_RADIO_RegisterWrite
 31777                           
 31778                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 31779  007C06  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 31780  007C0A  0E03               	movlw	3
 31781  007C0C  EC55  F047         	call	_RADIO_RegisterWrite
 31782                           
 31783                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 31784  007C10  0E00               	movlw	0
 31785  007C12  0100               	movlb	0	; () banked
 31786  007C14  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31787  007C16  0E5D               	movlw	93
 31788  007C18  EC55  F047         	call	_RADIO_RegisterWrite
 31789  007C1C  0012               	return		;funcret
 31790  007C1E                     __end_of_RADIO_WriteFSKBitRate:
 31791                           	opt stack 0
 31792                           tosu	equ	0xFFF
 31793                           tosh	equ	0xFFE
 31794                           tosl	equ	0xFFD
 31795                           pclath	equ	0xFFA
 31796                           tblptru	equ	0xFF8
 31797                           tblptrh	equ	0xFF7
 31798                           tblptrl	equ	0xFF6
 31799                           tablat	equ	0xFF5
 31800                           prodh	equ	0xFF4
 31801                           prodl	equ	0xFF3
 31802                           intcon	equ	0xFF2
 31803                           intcon2	equ	0xFF1
 31804                           intcon3	equ	0xFF0
 31805                           indf0	equ	0xFEF
 31806                           postinc0	equ	0xFEE
 31807                           fsr0h	equ	0xFEA
 31808                           fsr0l	equ	0xFE9
 31809                           wreg	equ	0xFE8
 31810                           postinc1	equ	0xFE6
 31811                           postdec1	equ	0xFE5
 31812                           plusw1	equ	0xFE3
 31813                           fsr1h	equ	0xFE2
 31814                           fsr1l	equ	0xFE1
 31815                           indf2	equ	0xFDF
 31816                           postinc2	equ	0xFDE
 31817                           postdec2	equ	0xFDD
 31818                           plusw2	equ	0xFDB
 31819                           fsr2h	equ	0xFDA
 31820                           fsr2l	equ	0xFD9
 31821                           status	equ	0xFD8
 31822                           
 31823 ;; *************** function _PrepareJoinRequestFrame *****************
 31824 ;; Defined at:
 31825 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31826 ;; Parameters:    Size  Location     Type
 31827 ;;		None
 31828 ;; Auto vars:     Size  Location     Type
 31829 ;;  mic             4  116[BANK0 ] unsigned long 
 31830 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 31831 ;;  iCtr            1  121[BANK0 ] unsigned char 
 31832 ;;  mhdr            1  120[BANK0 ] struct .
 31833 ;; Return value:  Size  Location     Type
 31834 ;;                  1    wreg      unsigned char 
 31835 ;; Registers used:
 31836 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31837 ;; Tracked objects:
 31838 ;;		On entry : 0/0
 31839 ;;		On exit  : 0/0
 31840 ;;		Unchanged: 0/0
 31841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31843 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31844 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31845 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31846 ;;Total ram usage:       11 bytes
 31847 ;; Hardware stack levels used:    1
 31848 ;; Hardware stack levels required when called:   13
 31849 ;; This function calls:
 31850 ;;		_ComputeMic
 31851 ;;		_Random
 31852 ;;		_memcpy
 31853 ;;		_memset
 31854 ;; This function is called by:
 31855 ;;		_LORAWAN_Join
 31856 ;; This function uses a non-reentrant model
 31857 ;;
 31858                           
 31859                           	psect	text155
 31860  004A3C                     __ptext155:
 31861                           	opt stack 0
 31862  004A3C                     _PrepareJoinRequestFrame:
 31863                           	opt stack 16
 31864                           
 31865                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 31866                           
 31867                           ;incstack = 0
 31868  004A3C  0E00               	movlw	0
 31869  004A3E  0100               	movlb	0	; () banked
 31870  004A40  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31871                           
 31872                           ; BSR set to: 0
 31873                           ;lorawan.c: 1809: Mhdr_t mhdr;
 31874                           ;lorawan.c: 1810: uint32_t mic;
 31875                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 31876  004A42  0EE0               	movlw	low _macBuffer
 31877  004A44  6F60               	movwf	memset@p1& (0+255),b
 31878  004A46  0E04               	movlw	high _macBuffer
 31879  004A48  6F61               	movwf	(memset@p1+1)& (0+255),b
 31880  004A4A  0E00               	movlw	0
 31881  004A4C  6F63               	movwf	(memset@c+1)& (0+255),b
 31882  004A4E  0E00               	movlw	0
 31883  004A50  6F62               	movwf	memset@c& (0+255),b
 31884  004A52  0E01               	movlw	1
 31885  004A54  6F65               	movwf	(memset@n+1)& (0+255),b
 31886  004A56  0E0F               	movlw	15
 31887  004A58  6F64               	movwf	memset@n& (0+255),b
 31888  004A5A  EC45  F045         	call	_memset	;wreg free
 31889                           
 31890                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 31891  004A5E  0100               	movlb	0	; () banked
 31892  004A60  9BD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
 31893  004A62  9DD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
 31894  004A64  9FD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
 31895                           
 31896                           ; BSR set to: 0
 31897                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 31898  004A66  0EFC               	movlw	-4
 31899  004A68  17D8               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 31900                           
 31901                           ; BSR set to: 0
 31902                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 31903  004A6A  95D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
 31904  004A6C  97D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
 31905  004A6E  99D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
 31906                           
 31907                           ; BSR set to: 0
 31908                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 31909  004A70  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31910  004A72  0D01               	mullw	1
 31911  004A74  0EE0               	movlw	low _macBuffer
 31912  004A76  24F3               	addwf	prodl,w,c
 31913  004A78  6ED9               	movwf	fsr2l,c
 31914  004A7A  0E04               	movlw	high _macBuffer
 31915  004A7C  20F4               	addwfc	prodh,w,c
 31916  004A7E  6EDA               	movwf	fsr2h,c
 31917  004A80  C0D8  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 31918                           
 31919                           ; BSR set to: 0
 31920  004A84  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 31921                           
 31922                           ; BSR set to: 0
 31923                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 31924  004A86  0E00               	movlw	0
 31925  004A88  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 31926  004A8A                     l17023:
 31927                           
 31928                           ; BSR set to: 0
 31929  004A8A  0E07               	movlw	7
 31930  004A8C  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 31931  004A8E  D001               	goto	l2037
 31932  004A90  D022               	goto	u20630
 31933  004A92                     l2037:
 31934                           
 31935                           ; BSR set to: 0
 31936                           ;lorawan.c: 1821: {
 31937                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 31938                           
 31939                           ; BSR set to: 0
 31940  004A92  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31941  004A94  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 31942  004A96  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 31943  004A98  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 31944  004A9A  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 31945  004A9C  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 31946  004A9E  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 31947  004AA0  0E07               	movlw	7
 31948  004AA2  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 31949  004AA4  0E00               	movlw	0
 31950  004AA6  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 31951  004AA8  0E52               	movlw	low (_loRa+82)
 31952  004AAA  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 31953  004AAC  6ED9               	movwf	fsr2l,c
 31954  004AAE  0E02               	movlw	high (_loRa+82)
 31955  004AB0  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 31956  004AB2  6EDA               	movwf	fsr2h,c
 31957  004AB4  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31958  004AB6  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 31959  004ABA  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 31960  004ABC  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 31961  004ABE  0E00               	movlw	0
 31962  004AC0  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 31963  004AC2  0EE0               	movlw	low _macBuffer
 31964  004AC4  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 31965  004AC6  6EE9               	movwf	fsr0l,c
 31966  004AC8  0E04               	movlw	high _macBuffer
 31967  004ACA  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 31968  004ACC  6EEA               	movwf	fsr0h,c
 31969  004ACE  CFDF FFEF          	movff	indf2,indf0
 31970                           
 31971                           ; BSR set to: 0
 31972  004AD2  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 31973  004AD4  D7DA               	goto	l17023
 31974  004AD6                     u20630:
 31975                           
 31976                           ; BSR set to: 0
 31977                           ;lorawan.c: 1823: }
 31978                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 31979                           
 31980                           ; BSR set to: 0
 31981  004AD6  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31982  004AD8  0F08               	addlw	8
 31983  004ADA  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31984                           
 31985                           ; BSR set to: 0
 31986                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 31987  004ADC  0E00               	movlw	0
 31988  004ADE  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 31989  004AE0                     l17037:
 31990                           
 31991                           ; BSR set to: 0
 31992  004AE0  0E07               	movlw	7
 31993  004AE2  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 31994  004AE4  D001               	goto	l2039
 31995  004AE6  D022               	goto	u20650
 31996  004AE8                     l2039:
 31997                           
 31998                           ; BSR set to: 0
 31999                           ;lorawan.c: 1828: {
 32000                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 32001                           
 32002                           ; BSR set to: 0
 32003  004AE8  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 32004  004AEA  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 32005  004AEC  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 32006  004AEE  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 32007  004AF0  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32008  004AF2  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 32009  004AF4  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32010  004AF6  0E07               	movlw	7
 32011  004AF8  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 32012  004AFA  0E00               	movlw	0
 32013  004AFC  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32014  004AFE  0E5A               	movlw	low (_loRa+90)
 32015  004B00  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 32016  004B02  6ED9               	movwf	fsr2l,c
 32017  004B04  0E02               	movlw	high (_loRa+90)
 32018  004B06  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 32019  004B08  6EDA               	movwf	fsr2h,c
 32020  004B0A  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 32021  004B0C  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 32022  004B10  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 32023  004B12  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 32024  004B14  0E00               	movlw	0
 32025  004B16  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 32026  004B18  0EE0               	movlw	low _macBuffer
 32027  004B1A  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 32028  004B1C  6EE9               	movwf	fsr0l,c
 32029  004B1E  0E04               	movlw	high _macBuffer
 32030  004B20  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 32031  004B22  6EEA               	movwf	fsr0h,c
 32032  004B24  CFDF FFEF          	movff	indf2,indf0
 32033                           
 32034                           ; BSR set to: 0
 32035  004B28  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 32036  004B2A  D7DA               	goto	l17037
 32037  004B2C                     u20650:
 32038                           
 32039                           ; BSR set to: 0
 32040                           ;lorawan.c: 1830: }
 32041                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 32042                           
 32043                           ; BSR set to: 0
 32044  004B2C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32045  004B2E  0F08               	addlw	8
 32046  004B30  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32047                           
 32048                           ; BSR set to: 0
 32049                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 32050  004B32  0EFF               	movlw	255
 32051  004B34  6FAE               	movwf	(Random@max+1)& (0+255),b
 32052  004B36  69AD               	setf	Random@max& (0+255),b
 32053  004B38  EC13  F047         	call	_Random	;wreg free
 32054  004B3C  C0AD  F2D2         	movff	?_Random,_loRa+210
 32055  004B40  C0AE  F2D3         	movff	?_Random+1,_loRa+211
 32056                           
 32057                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 32058  004B44  0100               	movlb	0	; () banked
 32059  004B46  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32060  004B48  0D01               	mullw	1
 32061  004B4A  0EE0               	movlw	low _macBuffer
 32062  004B4C  24F3               	addwf	prodl,w,c
 32063  004B4E  6F60               	movwf	memcpy@d1& (0+255),b
 32064  004B50  0E04               	movlw	high _macBuffer
 32065  004B52  20F4               	addwfc	prodh,w,c
 32066  004B54  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32067  004B56  0ED2               	movlw	low (_loRa+210)
 32068  004B58  6F62               	movwf	memcpy@s1& (0+255),b
 32069  004B5A  0E02               	movlw	high (_loRa+210)
 32070  004B5C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32071  004B5E  0E00               	movlw	0
 32072  004B60  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32073  004B62  0E02               	movlw	2
 32074  004B64  6F64               	movwf	memcpy@n& (0+255),b
 32075  004B66  EC6C  F03F         	call	_memcpy	;wreg free
 32076                           
 32077                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 32078  004B6A  0100               	movlb	0	; () banked
 32079  004B6C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32080  004B6E  0F02               	addlw	2
 32081  004B70  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32082                           
 32083                           ; BSR set to: 0
 32084                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 32085  004B72  0E42               	movlw	low (_loRa+66)
 32086  004B74  6FC7               	movwf	ComputeMic@key& (0+255),b
 32087  004B76  0E02               	movlw	high (_loRa+66)
 32088  004B78  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 32089  004B7A  0EE0               	movlw	low _macBuffer
 32090  004B7C  6FC9               	movwf	ComputeMic@buffer& (0+255),b
 32091  004B7E  0E04               	movlw	high _macBuffer
 32092  004B80  6FCA               	movwf	(ComputeMic@buffer+1)& (0+255),b
 32093  004B82  C0DA  F0CB         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 32094  004B86  ECA9  F03E         	call	_ComputeMic	;wreg free
 32095  004B8A  C0C7  F0D4         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 32096  004B8E  C0C8  F0D5         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 32097  004B92  C0C9  F0D6         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 32098  004B96  C0CA  F0D7         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 32099                           
 32100                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 32101  004B9A  0100               	movlb	0	; () banked
 32102  004B9C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32103  004B9E  0D01               	mullw	1
 32104  004BA0  0EE0               	movlw	low _macBuffer
 32105  004BA2  24F3               	addwf	prodl,w,c
 32106  004BA4  6F60               	movwf	memcpy@d1& (0+255),b
 32107  004BA6  0E04               	movlw	high _macBuffer
 32108  004BA8  20F4               	addwfc	prodh,w,c
 32109  004BAA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32110  004BAC  0ED4               	movlw	low PrepareJoinRequestFrame@mic
 32111  004BAE  6F62               	movwf	memcpy@s1& (0+255),b
 32112  004BB0  0E00               	movlw	high PrepareJoinRequestFrame@mic
 32113  004BB2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32114  004BB4  0E00               	movlw	0
 32115  004BB6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32116  004BB8  0E04               	movlw	4
 32117  004BBA  6F64               	movwf	memcpy@n& (0+255),b
 32118  004BBC  EC6C  F03F         	call	_memcpy	;wreg free
 32119                           
 32120                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 32121  004BC0  0100               	movlb	0	; () banked
 32122  004BC2  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32123  004BC4  0F04               	addlw	4
 32124  004BC6  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32125                           
 32126                           ; BSR set to: 0
 32127                           ;lorawan.c: 1842: return bufferIndex;
 32128  004BC8  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32129  004BCA  0012               	return	
 32130  004BCC                     __end_of_PrepareJoinRequestFrame:
 32131                           	opt stack 0
 32132                           tosu	equ	0xFFF
 32133                           tosh	equ	0xFFE
 32134                           tosl	equ	0xFFD
 32135                           pclath	equ	0xFFA
 32136                           tblptru	equ	0xFF8
 32137                           tblptrh	equ	0xFF7
 32138                           tblptrl	equ	0xFF6
 32139                           tablat	equ	0xFF5
 32140                           prodh	equ	0xFF4
 32141                           prodl	equ	0xFF3
 32142                           intcon	equ	0xFF2
 32143                           intcon2	equ	0xFF1
 32144                           intcon3	equ	0xFF0
 32145                           indf0	equ	0xFEF
 32146                           postinc0	equ	0xFEE
 32147                           fsr0h	equ	0xFEA
 32148                           fsr0l	equ	0xFE9
 32149                           wreg	equ	0xFE8
 32150                           postinc1	equ	0xFE6
 32151                           postdec1	equ	0xFE5
 32152                           plusw1	equ	0xFE3
 32153                           fsr1h	equ	0xFE2
 32154                           fsr1l	equ	0xFE1
 32155                           indf2	equ	0xFDF
 32156                           postinc2	equ	0xFDE
 32157                           postdec2	equ	0xFDD
 32158                           plusw2	equ	0xFDB
 32159                           fsr2h	equ	0xFDA
 32160                           fsr2l	equ	0xFD9
 32161                           status	equ	0xFD8
 32162                           
 32163 ;; *************** function _Random *****************
 32164 ;; Defined at:
 32165 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32166 ;; Parameters:    Size  Location     Type
 32167 ;;  max             2   77[BANK0 ] unsigned int 
 32168 ;; Auto vars:     Size  Location     Type
 32169 ;;		None
 32170 ;; Return value:  Size  Location     Type
 32171 ;;                  2   77[BANK0 ] unsigned int 
 32172 ;; Registers used:
 32173 ;;		wreg, status,2, status,0, cstack
 32174 ;; Tracked objects:
 32175 ;;		On entry : 0/0
 32176 ;;		On exit  : 0/0
 32177 ;;		Unchanged: 0/0
 32178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32182 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32183 ;;Total ram usage:        2 bytes
 32184 ;; Hardware stack levels used:    1
 32185 ;; Hardware stack levels required when called:    9
 32186 ;; This function calls:
 32187 ;;		___lwmod
 32188 ;;		_rand
 32189 ;; This function is called by:
 32190 ;;		_SearchAvailableChannel
 32191 ;;		_PrepareJoinRequestFrame
 32192 ;; This function uses a non-reentrant model
 32193 ;;
 32194                           
 32195                           	psect	text156
 32196  008E26                     __ptext156:
 32197                           	opt stack 0
 32198  008E26                     _Random:
 32199                           	opt stack 18
 32200                           
 32201                           ;lorawan.c: 1118: return (rand () % max);
 32202                           
 32203                           ; BSR set to: 0
 32204                           ;incstack = 0
 32205  008E26  EC29  F040         	call	_rand	;wreg free
 32206  008E2A  C0A6  F0A8         	movff	?_rand,___lwmod@dividend
 32207  008E2E  C0A7  F0A9         	movff	?_rand+1,___lwmod@dividend+1
 32208  008E32  C0AD  F0AA         	movff	Random@max,___lwmod@divisor
 32209  008E36  C0AE  F0AB         	movff	Random@max+1,___lwmod@divisor+1
 32210  008E3A  EC1E  F043         	call	___lwmod	;wreg free
 32211  008E3E  C0A8  F0AD         	movff	?___lwmod,?_Random
 32212  008E42  C0A9  F0AE         	movff	?___lwmod+1,?_Random+1
 32213  008E46  0012               	return	
 32214  008E48                     __end_of_Random:
 32215                           	opt stack 0
 32216                           tosu	equ	0xFFF
 32217                           tosh	equ	0xFFE
 32218                           tosl	equ	0xFFD
 32219                           pclath	equ	0xFFA
 32220                           tblptru	equ	0xFF8
 32221                           tblptrh	equ	0xFF7
 32222                           tblptrl	equ	0xFF6
 32223                           tablat	equ	0xFF5
 32224                           prodh	equ	0xFF4
 32225                           prodl	equ	0xFF3
 32226                           intcon	equ	0xFF2
 32227                           intcon2	equ	0xFF1
 32228                           intcon3	equ	0xFF0
 32229                           indf0	equ	0xFEF
 32230                           postinc0	equ	0xFEE
 32231                           fsr0h	equ	0xFEA
 32232                           fsr0l	equ	0xFE9
 32233                           wreg	equ	0xFE8
 32234                           postinc1	equ	0xFE6
 32235                           postdec1	equ	0xFE5
 32236                           plusw1	equ	0xFE3
 32237                           fsr1h	equ	0xFE2
 32238                           fsr1l	equ	0xFE1
 32239                           indf2	equ	0xFDF
 32240                           postinc2	equ	0xFDE
 32241                           postdec2	equ	0xFDD
 32242                           plusw2	equ	0xFDB
 32243                           fsr2h	equ	0xFDA
 32244                           fsr2l	equ	0xFD9
 32245                           status	equ	0xFD8
 32246                           
 32247 ;; *************** function _rand *****************
 32248 ;; Defined at:
 32249 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 32250 ;; Parameters:    Size  Location     Type
 32251 ;;		None
 32252 ;; Auto vars:     Size  Location     Type
 32253 ;;		None
 32254 ;; Return value:  Size  Location     Type
 32255 ;;                  2   70[BANK0 ] int 
 32256 ;; Registers used:
 32257 ;;		wreg, status,2, status,0, cstack
 32258 ;; Tracked objects:
 32259 ;;		On entry : 0/0
 32260 ;;		On exit  : 0/0
 32261 ;;		Unchanged: 0/0
 32262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32263 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32267 ;;Total ram usage:        2 bytes
 32268 ;; Hardware stack levels used:    1
 32269 ;; Hardware stack levels required when called:    8
 32270 ;; This function calls:
 32271 ;;		___lmul
 32272 ;; This function is called by:
 32273 ;;		_Random
 32274 ;; This function uses a non-reentrant model
 32275 ;;
 32276                           
 32277                           	psect	text157
 32278  008052                     __ptext157:
 32279                           	opt stack 0
 32280  008052                     _rand:
 32281                           	opt stack 18
 32282                           
 32283                           ;incstack = 0
 32284  008052  C1EE  F09A         	movff	_randx,___lmul@multiplier
 32285  008056  C1EF  F09B         	movff	_randx+1,___lmul@multiplier+1
 32286  00805A  C1F0  F09C         	movff	_randx+2,___lmul@multiplier+2
 32287  00805E  C1F1  F09D         	movff	_randx+3,___lmul@multiplier+3
 32288  008062  0E6D               	movlw	109
 32289  008064  0100               	movlb	0	; () banked
 32290  008066  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 32291  008068  0E4E               	movlw	78
 32292  00806A  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 32293  00806C  0EC6               	movlw	198
 32294  00806E  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 32295  008070  0E41               	movlw	65
 32296  008072  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 32297  008074  ECB1  F040         	call	___lmul	;wreg free
 32298  008078  C09A  F1EE         	movff	?___lmul,_randx
 32299  00807C  C09B  F1EF         	movff	?___lmul+1,_randx+1
 32300  008080  C09C  F1F0         	movff	?___lmul+2,_randx+2
 32301  008084  C09D  F1F1         	movff	?___lmul+3,_randx+3
 32302  008088  0E39               	movlw	57
 32303  00808A  0101               	movlb	1	; () banked
 32304  00808C  27EE               	addwf	_randx& (0+255),f,b
 32305  00808E  0E30               	movlw	48
 32306  008090  23EF               	addwfc	(_randx+1)& (0+255),f,b
 32307  008092  0E00               	movlw	0
 32308  008094  23F0               	addwfc	(_randx+2)& (0+255),f,b
 32309  008096  0E00               	movlw	0
 32310  008098  23F1               	addwfc	(_randx+3)& (0+255),f,b
 32311                           
 32312                           ; BSR set to: 1
 32313  00809A  0EFF               	movlw	255
 32314  00809C  15F0               	andwf	(_randx+2)& (0+255),w,b
 32315  00809E  0100               	movlb	0	; () banked
 32316  0080A0  6FA6               	movwf	?_rand& (0+255),b
 32317  0080A2  0E7F               	movlw	127
 32318  0080A4  0101               	movlb	1	; () banked
 32319  0080A6  15F1               	andwf	(_randx+3)& (0+255),w,b
 32320  0080A8  0100               	movlb	0	; () banked
 32321  0080AA  6FA7               	movwf	(?_rand+1)& (0+255),b
 32322  0080AC  0012               	return	
 32323  0080AE                     __end_of_rand:
 32324                           	opt stack 0
 32325                           tosu	equ	0xFFF
 32326                           tosh	equ	0xFFE
 32327                           tosl	equ	0xFFD
 32328                           pclath	equ	0xFFA
 32329                           tblptru	equ	0xFF8
 32330                           tblptrh	equ	0xFF7
 32331                           tblptrl	equ	0xFF6
 32332                           tablat	equ	0xFF5
 32333                           prodh	equ	0xFF4
 32334                           prodl	equ	0xFF3
 32335                           intcon	equ	0xFF2
 32336                           intcon2	equ	0xFF1
 32337                           intcon3	equ	0xFF0
 32338                           indf0	equ	0xFEF
 32339                           postinc0	equ	0xFEE
 32340                           fsr0h	equ	0xFEA
 32341                           fsr0l	equ	0xFE9
 32342                           wreg	equ	0xFE8
 32343                           postinc1	equ	0xFE6
 32344                           postdec1	equ	0xFE5
 32345                           plusw1	equ	0xFE3
 32346                           fsr1h	equ	0xFE2
 32347                           fsr1l	equ	0xFE1
 32348                           indf2	equ	0xFDF
 32349                           postinc2	equ	0xFDE
 32350                           postdec2	equ	0xFDD
 32351                           plusw2	equ	0xFDB
 32352                           fsr2h	equ	0xFDA
 32353                           fsr2l	equ	0xFD9
 32354                           status	equ	0xFD8
 32355                           
 32356 ;; *************** function ___lwmod *****************
 32357 ;; Defined at:
 32358 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 32359 ;; Parameters:    Size  Location     Type
 32360 ;;  dividend        2   72[BANK0 ] unsigned int 
 32361 ;;  divisor         2   74[BANK0 ] unsigned int 
 32362 ;; Auto vars:     Size  Location     Type
 32363 ;;  counter         1   76[BANK0 ] unsigned char 
 32364 ;; Return value:  Size  Location     Type
 32365 ;;                  2   72[BANK0 ] unsigned int 
 32366 ;; Registers used:
 32367 ;;		wreg, status,2, status,0
 32368 ;; Tracked objects:
 32369 ;;		On entry : 0/0
 32370 ;;		On exit  : 0/0
 32371 ;;		Unchanged: 0/0
 32372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32373 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32374 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32376 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32377 ;;Total ram usage:        5 bytes
 32378 ;; Hardware stack levels used:    1
 32379 ;; Hardware stack levels required when called:    7
 32380 ;; This function calls:
 32381 ;;		Nothing
 32382 ;; This function is called by:
 32383 ;;		_Random
 32384 ;; This function uses a non-reentrant model
 32385 ;;
 32386                           
 32387                           	psect	text158
 32388  00863C                     __ptext158:
 32389                           	opt stack 0
 32390  00863C                     ___lwmod:
 32391                           	opt stack 19
 32392                           
 32393                           ; BSR set to: 0
 32394                           ;incstack = 0
 32395  00863C  0100               	movlb	0	; () banked
 32396  00863E  51AA               	movf	___lwmod@divisor& (0+255),w,b
 32397  008640  11AB               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 32398  008642  B4D8               	btfsc	status,2,c
 32399  008644  D018               	goto	l3160
 32400                           
 32401                           ; BSR set to: 0
 32402  008646  0E01               	movlw	1
 32403  008648  6FAC               	movwf	___lwmod@counter& (0+255),b
 32404  00864A  D004               	goto	l3155
 32405  00864C                     
 32406                           ; BSR set to: 0
 32407                           
 32408                           ; BSR set to: 0
 32409  00864C  90D8               	bcf	status,0,c
 32410  00864E  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
 32411  008650  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 32412  008652  2BAC               	incf	___lwmod@counter& (0+255),f,b
 32413  008654                     l3155:
 32414                           
 32415                           ; BSR set to: 0
 32416                           
 32417                           ; BSR set to: 0
 32418  008654  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 32419  008656  D7FA               	goto	l3156
 32420  008658                     u15530:
 32421                           
 32422                           ; BSR set to: 0
 32423                           
 32424                           ; BSR set to: 0
 32425                           
 32426                           ; BSR set to: 0
 32427  008658  51AA               	movf	___lwmod@divisor& (0+255),w,b
 32428  00865A  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
 32429  00865C  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 32430  00865E  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 32431  008660  A0D8               	btfss	status,0,c
 32432  008662  D004               	goto	l3159
 32433                           
 32434                           ; BSR set to: 0
 32435  008664  51AA               	movf	___lwmod@divisor& (0+255),w,b
 32436  008666  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
 32437  008668  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 32438  00866A  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 32439  00866C                     l3159:
 32440                           
 32441                           ; BSR set to: 0
 32442                           
 32443                           ; BSR set to: 0
 32444  00866C  90D8               	bcf	status,0,c
 32445  00866E  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 32446  008670  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
 32447                           
 32448                           ; BSR set to: 0
 32449  008672  2FAC               	decfsz	___lwmod@counter& (0+255),f,b
 32450  008674  D7F1               	goto	u15530
 32451  008676                     l3160:
 32452                           
 32453                           ; BSR set to: 0
 32454                           
 32455                           ; BSR set to: 0
 32456  008676  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
 32457  00867A  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
 32458                           
 32459                           ; BSR set to: 0
 32460  00867E  0012               	return		;funcret
 32461  008680                     __end_of___lwmod:
 32462                           	opt stack 0
 32463                           tosu	equ	0xFFF
 32464                           tosh	equ	0xFFE
 32465                           tosl	equ	0xFFD
 32466                           pclath	equ	0xFFA
 32467                           tblptru	equ	0xFF8
 32468                           tblptrh	equ	0xFF7
 32469                           tblptrl	equ	0xFF6
 32470                           tablat	equ	0xFF5
 32471                           prodh	equ	0xFF4
 32472                           prodl	equ	0xFF3
 32473                           intcon	equ	0xFF2
 32474                           intcon2	equ	0xFF1
 32475                           intcon3	equ	0xFF0
 32476                           indf0	equ	0xFEF
 32477                           postinc0	equ	0xFEE
 32478                           fsr0h	equ	0xFEA
 32479                           fsr0l	equ	0xFE9
 32480                           wreg	equ	0xFE8
 32481                           postinc1	equ	0xFE6
 32482                           postdec1	equ	0xFE5
 32483                           plusw1	equ	0xFE3
 32484                           fsr1h	equ	0xFE2
 32485                           fsr1l	equ	0xFE1
 32486                           indf2	equ	0xFDF
 32487                           postinc2	equ	0xFDE
 32488                           postdec2	equ	0xFDD
 32489                           plusw2	equ	0xFDB
 32490                           fsr2h	equ	0xFDA
 32491                           fsr2l	equ	0xFD9
 32492                           status	equ	0xFD8
 32493                           
 32494 ;; *************** function _ComputeMic *****************
 32495 ;; Defined at:
 32496 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32497 ;; Parameters:    Size  Location     Type
 32498 ;;  key             2  103[BANK0 ] PTR unsigned char 
 32499 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32500 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
 32501 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 32502 ;;  bufferLength    1  107[BANK0 ] unsigned char 
 32503 ;; Auto vars:     Size  Location     Type
 32504 ;;  mic             4  108[BANK0 ] unsigned long 
 32505 ;; Return value:  Size  Location     Type
 32506 ;;                  4  103[BANK0 ] unsigned long 
 32507 ;; Registers used:
 32508 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32509 ;; Tracked objects:
 32510 ;;		On entry : 0/0
 32511 ;;		On exit  : 0/0
 32512 ;;		Unchanged: 0/0
 32513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32514 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32515 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32517 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32518 ;;Total ram usage:        9 bytes
 32519 ;; Hardware stack levels used:    1
 32520 ;; Hardware stack levels required when called:   12
 32521 ;; This function calls:
 32522 ;;		_AESCmac
 32523 ;;		_memcpy
 32524 ;; This function is called by:
 32525 ;;		_LORAWAN_RxDone
 32526 ;;		_PrepareJoinRequestFrame
 32527 ;; This function uses a non-reentrant model
 32528 ;;
 32529                           
 32530                           	psect	text159
 32531  007D52                     __ptext159:
 32532                           	opt stack 0
 32533  007D52                     _ComputeMic:
 32534                           	opt stack 14
 32535                           
 32536                           ;lorawan.c: 2196: uint32_t mic = 0;
 32537                           
 32538                           ; BSR set to: 0
 32539                           ;incstack = 0
 32540  007D52  0E00               	movlw	0
 32541  007D54  0100               	movlb	0	; () banked
 32542  007D56  6FCC               	movwf	ComputeMic@mic& (0+255),b
 32543  007D58  0E00               	movlw	0
 32544  007D5A  6FCD               	movwf	(ComputeMic@mic+1)& (0+255),b
 32545  007D5C  0E00               	movlw	0
 32546  007D5E  6FCE               	movwf	(ComputeMic@mic+2)& (0+255),b
 32547  007D60  0E00               	movlw	0
 32548  007D62  6FCF               	movwf	(ComputeMic@mic+3)& (0+255),b
 32549                           
 32550                           ; BSR set to: 0
 32551                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 32552  007D64  C0C7  F0B9         	movff	ComputeMic@key,AESCmac@key
 32553  007D68  C0C8  F0BA         	movff	ComputeMic@key+1,AESCmac@key+1
 32554  007D6C  0E57               	movlw	low _aesBuffer
 32555  007D6E  6FBB               	movwf	AESCmac@output& (0+255),b
 32556  007D70  0E01               	movlw	high _aesBuffer
 32557  007D72  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 32558  007D74  C0C9  F0BD         	movff	ComputeMic@buffer,AESCmac@input
 32559  007D78  C0CA  F0BE         	movff	ComputeMic@buffer+1,AESCmac@input+1
 32560  007D7C  C0CB  F0BF         	movff	ComputeMic@bufferLength,AESCmac@size
 32561  007D80  ECF8  F010         	call	_AESCmac	;wreg free
 32562                           
 32563                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 32564  007D84  0ECC               	movlw	low ComputeMic@mic
 32565  007D86  0100               	movlb	0	; () banked
 32566  007D88  6F60               	movwf	memcpy@d1& (0+255),b
 32567  007D8A  0E00               	movlw	high ComputeMic@mic
 32568  007D8C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32569  007D8E  0E57               	movlw	low _aesBuffer
 32570  007D90  6F62               	movwf	memcpy@s1& (0+255),b
 32571  007D92  0E01               	movlw	high _aesBuffer
 32572  007D94  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32573  007D96  0E00               	movlw	0
 32574  007D98  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32575  007D9A  0E04               	movlw	4
 32576  007D9C  6F64               	movwf	memcpy@n& (0+255),b
 32577  007D9E  EC6C  F03F         	call	_memcpy	;wreg free
 32578                           
 32579                           ;lorawan.c: 2202: return mic;
 32580  007DA2  C0CC  F0C7         	movff	ComputeMic@mic,?_ComputeMic
 32581  007DA6  C0CD  F0C8         	movff	ComputeMic@mic+1,?_ComputeMic+1
 32582  007DAA  C0CE  F0C9         	movff	ComputeMic@mic+2,?_ComputeMic+2
 32583  007DAE  C0CF  F0CA         	movff	ComputeMic@mic+3,?_ComputeMic+3
 32584  007DB2  0012               	return	
 32585  007DB4                     __end_of_ComputeMic:
 32586                           	opt stack 0
 32587                           tosu	equ	0xFFF
 32588                           tosh	equ	0xFFE
 32589                           tosl	equ	0xFFD
 32590                           pclath	equ	0xFFA
 32591                           tblptru	equ	0xFF8
 32592                           tblptrh	equ	0xFF7
 32593                           tblptrl	equ	0xFF6
 32594                           tablat	equ	0xFF5
 32595                           prodh	equ	0xFF4
 32596                           prodl	equ	0xFF3
 32597                           intcon	equ	0xFF2
 32598                           intcon2	equ	0xFF1
 32599                           intcon3	equ	0xFF0
 32600                           indf0	equ	0xFEF
 32601                           postinc0	equ	0xFEE
 32602                           fsr0h	equ	0xFEA
 32603                           fsr0l	equ	0xFE9
 32604                           wreg	equ	0xFE8
 32605                           postinc1	equ	0xFE6
 32606                           postdec1	equ	0xFE5
 32607                           plusw1	equ	0xFE3
 32608                           fsr1h	equ	0xFE2
 32609                           fsr1l	equ	0xFE1
 32610                           indf2	equ	0xFDF
 32611                           postinc2	equ	0xFDE
 32612                           postdec2	equ	0xFDD
 32613                           plusw2	equ	0xFDB
 32614                           fsr2h	equ	0xFDA
 32615                           fsr2l	equ	0xFD9
 32616                           status	equ	0xFD8
 32617                           
 32618 ;; *************** function _AESCmac *****************
 32619 ;; Defined at:
 32620 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32621 ;; Parameters:    Size  Location     Type
 32622 ;;  key             2   89[BANK0 ] PTR unsigned char 
 32623 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32624 ;;  output          2   91[BANK0 ] PTR unsigned char 
 32625 ;;		 -> aesBuffer(16), 
 32626 ;;  input           2   93[BANK0 ] PTR unsigned char 
 32627 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 32628 ;;  size            1   95[BANK0 ] unsigned char 
 32629 ;; Auto vars:     Size  Location     Type
 32630 ;;  x              16   80[BANK1 ] unsigned char [16]
 32631 ;;  y              16   64[BANK1 ] unsigned char [16]
 32632 ;;  padded         16   48[BANK1 ] unsigned char [16]
 32633 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 32634 ;;  k1             16   16[BANK1 ] unsigned char [16]
 32635 ;;  k2             16    0[BANK1 ] unsigned char [16]
 32636 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 32637 ;;		 -> adcResult(4), LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 32638 ;;		 -> NULL(0), 
 32639 ;;  i               1  101[BANK1 ] unsigned char 
 32640 ;;  j               1  100[BANK1 ] unsigned char 
 32641 ;;  n               1   99[BANK1 ] unsigned char 
 32642 ;;  flag            1   98[BANK1 ] unsigned char 
 32643 ;; Return value:  Size  Location     Type
 32644 ;;                  1    wreg      void 
 32645 ;; Registers used:
 32646 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32647 ;; Tracked objects:
 32648 ;;		On entry : 0/0
 32649 ;;		On exit  : 0/0
 32650 ;;		Unchanged: 0/0
 32651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32652 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32653 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32654 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32655 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32656 ;;Total ram usage:      116 bytes
 32657 ;; Hardware stack levels used:    1
 32658 ;; Hardware stack levels required when called:   11
 32659 ;; This function calls:
 32660 ;;		_AESEncodeLoRa
 32661 ;;		_GenerateSubkey
 32662 ;;		_memcpy
 32663 ;;		_memset
 32664 ;; This function is called by:
 32665 ;;		_LORAWAN_RxDone
 32666 ;;		_AssemblePacket
 32667 ;;		_ComputeMic
 32668 ;; This function uses a non-reentrant model
 32669 ;;
 32670                           
 32671                           	psect	text160
 32672  0021F0                     __ptext160:
 32673                           	opt stack 0
 32674  0021F0                     _AESCmac:
 32675                           	opt stack 17
 32676                           
 32677                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
 32678                           
 32679                           ;incstack = 0
 32680  0021F0  0E00               	movlw	0
 32681  0021F2  0101               	movlb	1	; () banked
 32682  0021F4  6FD6               	movwf	AESCmac@n& (0+255),b
 32683  0021F6  0E00               	movlw	0
 32684  0021F8  6FD8               	movwf	AESCmac@i& (0+255),b
 32685  0021FA  0E00               	movlw	0
 32686  0021FC  6FD7               	movwf	AESCmac@j& (0+255),b
 32687                           
 32688                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 32689  0021FE  0E00               	movlw	0
 32690  002200  6FD5               	movwf	AESCmac@flag& (0+255),b
 32691                           
 32692                           ; BSR set to: 1
 32693                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 32694                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 32695                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 32696  002202  0E00               	movlw	0
 32697  002204  6FD3               	movwf	AESCmac@ptr& (0+255),b
 32698  002206  0E00               	movlw	0
 32699  002208  6FD4               	movwf	(AESCmac@ptr+1)& (0+255),b
 32700                           
 32701                           ; BSR set to: 1
 32702                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 32703  00220A  C0B9  F091         	movff	AESCmac@key,GenerateSubkey@key
 32704  00220E  C0BA  F092         	movff	AESCmac@key+1,GenerateSubkey@key+1
 32705  002212  0E83               	movlw	low AESCmac@k1
 32706  002214  0100               	movlb	0	; () banked
 32707  002216  6F93               	movwf	GenerateSubkey@k1& (0+255),b
 32708  002218  0E01               	movlw	high AESCmac@k1
 32709  00221A  6F94               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 32710  00221C  0E73               	movlw	low AESCmac@k2
 32711  00221E  6F95               	movwf	GenerateSubkey@k2& (0+255),b
 32712  002220  0E01               	movlw	high AESCmac@k2
 32713  002222  6F96               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 32714  002224  EC94  F02B         	call	_GenerateSubkey	;wreg free
 32715                           
 32716                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 32717  002228  0100               	movlb	0	; () banked
 32718  00222A  51BF               	movf	AESCmac@size& (0+255),w,b
 32719  00222C  6FC0               	movwf	??_AESCmac& (0+255),b
 32720  00222E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 32721  002230  0E0F               	movlw	15
 32722  002232  27C0               	addwf	??_AESCmac& (0+255),f,b
 32723  002234  0E00               	movlw	0
 32724  002236  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 32725  002238  0E04               	movlw	4
 32726  00223A  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 32727  00223C                     u16055:
 32728  00223C  35C1               	rlcf	(??_AESCmac+1)& (0+255),w,b
 32729  00223E  33C1               	rrcf	(??_AESCmac+1)& (0+255),f,b
 32730  002240  33C0               	rrcf	??_AESCmac& (0+255),f,b
 32731  002242  2FC2               	decfsz	(??_AESCmac+2)& (0+255),f,b
 32732  002244  D7FB               	goto	u16055
 32733  002246  51C0               	movf	??_AESCmac& (0+255),w,b
 32734  002248  0101               	movlb	1	; () banked
 32735  00224A  6FD6               	movwf	AESCmac@n& (0+255),b
 32736                           
 32737                           ; BSR set to: 1
 32738                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 32739  00224C  51D6               	movf	AESCmac@n& (0+255),w,b
 32740  00224E  A4D8               	btfss	status,2,c
 32741  002250  D004               	goto	l41
 32742                           
 32743                           ; BSR set to: 1
 32744                           ;lorawan_aes_cmac.c: 53: {
 32745                           ;lorawan_aes_cmac.c: 54: n = 1;
 32746  002252  0E01               	movlw	1
 32747  002254  6FD6               	movwf	AESCmac@n& (0+255),b
 32748                           
 32749                           ;lorawan_aes_cmac.c: 55: flag = 0;
 32750  002256  0E00               	movlw	0
 32751  002258  D00B               	goto	L23
 32752  00225A                     l41:
 32753                           
 32754                           ; BSR set to: 1
 32755                           ;lorawan_aes_cmac.c: 57: else
 32756                           ;lorawan_aes_cmac.c: 58: {
 32757                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 32758                           
 32759                           ; BSR set to: 1
 32760  00225A  C0BF  F0C0         	movff	AESCmac@size,??_AESCmac
 32761  00225E  0E0F               	movlw	15
 32762  002260  0100               	movlb	0	; () banked
 32763  002262  17C0               	andwf	??_AESCmac& (0+255),f,b
 32764  002264  A4D8               	btfss	status,2,c
 32765  002266  D002               	goto	u16070
 32766  002268  0E01               	movlw	1
 32767  00226A  D001               	goto	u16080
 32768  00226C                     u16070:
 32769  00226C  0E00               	movlw	0
 32770  00226E                     u16080:
 32771  00226E  0101               	movlb	1	; () banked
 32772  002270                     L23:
 32773  002270  6FD5               	movwf	AESCmac@flag& (0+255),b
 32774                           
 32775                           ; BSR set to: 1
 32776                           ;lorawan_aes_cmac.c: 60: }
 32777                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 32778  002272  05D5               	decf	AESCmac@flag& (0+255),w,b
 32779  002274  A4D8               	btfss	status,2,c
 32780  002276  D048               	goto	l43
 32781                           
 32782                           ; BSR set to: 1
 32783                           ;lorawan_aes_cmac.c: 63: {
 32784                           ;lorawan_aes_cmac.c: 64: j = 0;
 32785  002278  0E00               	movlw	0
 32786  00227A  6FD7               	movwf	AESCmac@j& (0+255),b
 32787                           
 32788                           ; BSR set to: 1
 32789                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 32790  00227C  39D6               	swapf	AESCmac@n& (0+255),w,b
 32791  00227E  0BF0               	andlw	240
 32792  002280  0FF0               	addlw	240
 32793  002282  6FD8               	movwf	AESCmac@i& (0+255),b
 32794  002284  D024               	goto	l44
 32795  002286                     
 32796                           ;lorawan_aes_cmac.c: 66: {
 32797                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 32798                           
 32799                           ; BSR set to: 1
 32800  002286  0101               	movlb	1	; () banked
 32801  002288  51D7               	movf	AESCmac@j& (0+255),w,b
 32802  00228A  0D01               	mullw	1
 32803  00228C  0E93               	movlw	low AESCmac@mLast
 32804  00228E  24F3               	addwf	prodl,w,c
 32805  002290  6ED9               	movwf	fsr2l,c
 32806  002292  0E01               	movlw	high AESCmac@mLast
 32807  002294  20F4               	addwfc	prodh,w,c
 32808  002296  6EDA               	movwf	fsr2h,c
 32809  002298  51D7               	movf	AESCmac@j& (0+255),w,b
 32810  00229A  0D01               	mullw	1
 32811  00229C  0E83               	movlw	low AESCmac@k1
 32812  00229E  24F3               	addwf	prodl,w,c
 32813  0022A0  6EE9               	movwf	fsr0l,c
 32814  0022A2  0E01               	movlw	high AESCmac@k1
 32815  0022A4  20F4               	addwfc	prodh,w,c
 32816  0022A6  6EEA               	movwf	fsr0h,c
 32817  0022A8  50EF               	movf	indf0,w,c
 32818  0022AA  0100               	movlb	0	; () banked
 32819  0022AC  6FC0               	movwf	??_AESCmac& (0+255),b
 32820  0022AE  0101               	movlb	1	; () banked
 32821  0022B0  51D8               	movf	AESCmac@i& (0+255),w,b
 32822  0022B2  0D01               	mullw	1
 32823  0022B4  50F3               	movf	prodl,w,c
 32824  0022B6  0100               	movlb	0	; () banked
 32825  0022B8  25BD               	addwf	AESCmac@input& (0+255),w,b
 32826  0022BA  6EE9               	movwf	fsr0l,c
 32827  0022BC  50F4               	movf	prodh,w,c
 32828  0022BE  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 32829  0022C0  6EEA               	movwf	fsr0h,c
 32830  0022C2  50EF               	movf	indf0,w,c
 32831  0022C4  19C0               	xorwf	??_AESCmac& (0+255),w,b
 32832  0022C6  6EDF               	movwf	indf2,c
 32833                           
 32834                           ; BSR set to: 0
 32835                           ;lorawan_aes_cmac.c: 68: j++;
 32836  0022C8  0101               	movlb	1	; () banked
 32837  0022CA  2BD7               	incf	AESCmac@j& (0+255),f,b
 32838                           
 32839                           ; BSR set to: 1
 32840  0022CC  2BD8               	incf	AESCmac@i& (0+255),f,b
 32841  0022CE                     l44:
 32842                           
 32843                           ; BSR set to: 1
 32844                           
 32845                           ; BSR set to: 1
 32846  0022CE  51D6               	movf	AESCmac@n& (0+255),w,b
 32847  0022D0  0100               	movlb	0	; () banked
 32848  0022D2  6FC0               	movwf	??_AESCmac& (0+255),b
 32849  0022D4  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 32850  0022D6  3BC0               	swapf	??_AESCmac& (0+255),f,b
 32851  0022D8  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 32852  0022DA  0EF0               	movlw	240
 32853  0022DC  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 32854  0022DE  51C0               	movf	??_AESCmac& (0+255),w,b
 32855  0022E0  0B0F               	andlw	15
 32856  0022E2  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 32857  0022E4  0EF0               	movlw	240
 32858  0022E6  17C0               	andwf	??_AESCmac& (0+255),f,b
 32859  0022E8  0101               	movlb	1	; () banked
 32860  0022EA  51D8               	movf	AESCmac@i& (0+255),w,b
 32861  0022EC  0100               	movlb	0	; () banked
 32862  0022EE  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 32863  0022F0  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 32864  0022F2  51C0               	movf	??_AESCmac& (0+255),w,b
 32865  0022F4  5DC2               	subwf	(??_AESCmac+2)& (0+255),w,b
 32866  0022F6  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 32867  0022F8  0A80               	xorlw	128
 32868  0022FA  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 32869  0022FC  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 32870  0022FE  0A80               	xorlw	128
 32871  002300  59C4               	subwfb	(??_AESCmac+4)& (0+255),w,b
 32872  002302  B0D8               	btfsc	status,0,c
 32873  002304  D07F               	goto	u16160
 32874  002306  D7BF               	goto	l45
 32875  002308                     l43:
 32876                           
 32877                           ;lorawan_aes_cmac.c: 71: else
 32878                           ;lorawan_aes_cmac.c: 72: {
 32879                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 32880                           
 32881                           ; BSR set to: 0
 32882  002308  0100               	movlb	0	; () banked
 32883  00230A  51BF               	movf	AESCmac@size& (0+255),w,b
 32884  00230C  0B0F               	andlw	15
 32885  00230E  6FC0               	movwf	??_AESCmac& (0+255),b
 32886  002310  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 32887  002312  1FC0               	comf	??_AESCmac& (0+255),f,b
 32888  002314  1FC1               	comf	(??_AESCmac+1)& (0+255),f,b
 32889  002316  4BC0               	infsnz	??_AESCmac& (0+255),f,b
 32890  002318  2BC1               	incf	(??_AESCmac+1)& (0+255),f,b
 32891  00231A  51BF               	movf	AESCmac@size& (0+255),w,b
 32892  00231C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 32893  00231E  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 32894  002320  51C0               	movf	??_AESCmac& (0+255),w,b
 32895  002322  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 32896  002324  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 32897  002326  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 32898  002328  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 32899  00232A  25BD               	addwf	AESCmac@input& (0+255),w,b
 32900  00232C  0101               	movlb	1	; () banked
 32901  00232E  6FD3               	movwf	AESCmac@ptr& (0+255),b
 32902  002330  0100               	movlb	0	; () banked
 32903  002332  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 32904  002334  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 32905  002336  0101               	movlb	1	; () banked
 32906  002338  6FD4               	movwf	(AESCmac@ptr+1)& (0+255),b
 32907                           
 32908                           ; BSR set to: 1
 32909                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 32910  00233A  0E00               	movlw	0
 32911  00233C  6FD8               	movwf	AESCmac@i& (0+255),b
 32912  00233E                     l14307:
 32913                           
 32914                           ; BSR set to: 1
 32915  00233E  0E0F               	movlw	15
 32916  002340  65D8               	cpfsgt	AESCmac@i& (0+255),b
 32917  002342  D001               	goto	l48
 32918  002344  D036               	goto	u16140
 32919  002346                     l48:
 32920                           
 32921                           ; BSR set to: 1
 32922                           ;lorawan_aes_cmac.c: 76: {
 32923                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 32924                           
 32925                           ; BSR set to: 1
 32926  002346  0100               	movlb	0	; () banked
 32927  002348  51BF               	movf	AESCmac@size& (0+255),w,b
 32928  00234A  0B0F               	andlw	15
 32929  00234C  0101               	movlb	1	; () banked
 32930  00234E  61D8               	cpfslt	AESCmac@i& (0+255),b
 32931  002350  D013               	goto	l50
 32932                           
 32933                           ; BSR set to: 1
 32934                           ;lorawan_aes_cmac.c: 78: {
 32935                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 32936  002352  51D8               	movf	AESCmac@i& (0+255),w,b
 32937  002354  0D01               	mullw	1
 32938  002356  50F3               	movf	prodl,w,c
 32939  002358  25D3               	addwf	AESCmac@ptr& (0+255),w,b
 32940  00235A  6ED9               	movwf	fsr2l,c
 32941  00235C  50F4               	movf	prodh,w,c
 32942  00235E  21D4               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 32943  002360  6EDA               	movwf	fsr2h,c
 32944  002362  51D8               	movf	AESCmac@i& (0+255),w,b
 32945  002364  0D01               	mullw	1
 32946  002366  0EA3               	movlw	low AESCmac@padded
 32947  002368  24F3               	addwf	prodl,w,c
 32948  00236A  6EE9               	movwf	fsr0l,c
 32949  00236C  0E01               	movlw	high AESCmac@padded
 32950  00236E  20F4               	addwfc	prodh,w,c
 32951  002370  6EEA               	movwf	fsr0h,c
 32952  002372  CFDF FFEF          	movff	indf2,indf0
 32953                           
 32954                           ;lorawan_aes_cmac.c: 80: }
 32955  002376  D01B               	goto	l53
 32956  002378                     l50:
 32957                           
 32958                           ; BSR set to: 1
 32959                           ;lorawan_aes_cmac.c: 81: else
 32960                           ;lorawan_aes_cmac.c: 82: {
 32961                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 32962                           
 32963                           ; BSR set to: 1
 32964  002378  0100               	movlb	0	; () banked
 32965  00237A  51BF               	movf	AESCmac@size& (0+255),w,b
 32966  00237C  0B0F               	andlw	15
 32967  00237E  0101               	movlb	1	; () banked
 32968  002380  19D8               	xorwf	AESCmac@i& (0+255),w,b
 32969  002382  A4D8               	btfss	status,2,c
 32970  002384  D00A               	goto	l52
 32971                           
 32972                           ; BSR set to: 1
 32973                           ;lorawan_aes_cmac.c: 84: {
 32974                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 32975  002386  51D8               	movf	AESCmac@i& (0+255),w,b
 32976  002388  0D01               	mullw	1
 32977  00238A  0EA3               	movlw	low AESCmac@padded
 32978  00238C  24F3               	addwf	prodl,w,c
 32979  00238E  6ED9               	movwf	fsr2l,c
 32980  002390  0E01               	movlw	high AESCmac@padded
 32981  002392  20F4               	addwfc	prodh,w,c
 32982  002394  6EDA               	movwf	fsr2h,c
 32983  002396  0E80               	movlw	128
 32984  002398  D009               	goto	L24
 32985  00239A                     l52:
 32986                           
 32987                           ; BSR set to: 1
 32988                           ;lorawan_aes_cmac.c: 87: else
 32989                           ;lorawan_aes_cmac.c: 88: {
 32990                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 32991                           
 32992                           ; BSR set to: 1
 32993  00239A  51D8               	movf	AESCmac@i& (0+255),w,b
 32994  00239C  0D01               	mullw	1
 32995  00239E  0EA3               	movlw	low AESCmac@padded
 32996  0023A0  24F3               	addwf	prodl,w,c
 32997  0023A2  6ED9               	movwf	fsr2l,c
 32998  0023A4  0E01               	movlw	high AESCmac@padded
 32999  0023A6  20F4               	addwfc	prodh,w,c
 33000  0023A8  6EDA               	movwf	fsr2h,c
 33001  0023AA  0E00               	movlw	0
 33002  0023AC                     L24:
 33003  0023AC  6EDF               	movwf	indf2,c
 33004  0023AE                     l53:
 33005                           
 33006                           ; BSR set to: 1
 33007                           
 33008                           ; BSR set to: 1
 33009                           
 33010                           ; BSR set to: 1
 33011  0023AE  2BD8               	incf	AESCmac@i& (0+255),f,b
 33012  0023B0  D7C6               	goto	l14307
 33013  0023B2                     u16140:
 33014                           
 33015                           ; BSR set to: 1
 33016                           ;lorawan_aes_cmac.c: 90: }
 33017                           ;lorawan_aes_cmac.c: 91: }
 33018                           ;lorawan_aes_cmac.c: 92: }
 33019                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 33020                           
 33021                           ; BSR set to: 1
 33022  0023B2  0E00               	movlw	0
 33023  0023B4  6FD8               	movwf	AESCmac@i& (0+255),b
 33024  0023B6                     l14327:
 33025                           
 33026                           ; BSR set to: 1
 33027  0023B6  0E0F               	movlw	15
 33028  0023B8  65D8               	cpfsgt	AESCmac@i& (0+255),b
 33029  0023BA  D001               	goto	l54
 33030  0023BC  D023               	goto	u16160
 33031  0023BE                     l54:
 33032                           
 33033                           ; BSR set to: 1
 33034                           ;lorawan_aes_cmac.c: 96: {
 33035                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 33036                           
 33037                           ; BSR set to: 1
 33038  0023BE  51D8               	movf	AESCmac@i& (0+255),w,b
 33039  0023C0  0D01               	mullw	1
 33040  0023C2  0E93               	movlw	low AESCmac@mLast
 33041  0023C4  24F3               	addwf	prodl,w,c
 33042  0023C6  6ED9               	movwf	fsr2l,c
 33043  0023C8  0E01               	movlw	high AESCmac@mLast
 33044  0023CA  20F4               	addwfc	prodh,w,c
 33045  0023CC  6EDA               	movwf	fsr2h,c
 33046  0023CE  51D8               	movf	AESCmac@i& (0+255),w,b
 33047  0023D0  0D01               	mullw	1
 33048  0023D2  0E73               	movlw	low AESCmac@k2
 33049  0023D4  24F3               	addwf	prodl,w,c
 33050  0023D6  6EE9               	movwf	fsr0l,c
 33051  0023D8  0E01               	movlw	high AESCmac@k2
 33052  0023DA  20F4               	addwfc	prodh,w,c
 33053  0023DC  6EEA               	movwf	fsr0h,c
 33054  0023DE  50EF               	movf	indf0,w,c
 33055  0023E0  0100               	movlb	0	; () banked
 33056  0023E2  6FC0               	movwf	??_AESCmac& (0+255),b
 33057  0023E4  0101               	movlb	1	; () banked
 33058  0023E6  51D8               	movf	AESCmac@i& (0+255),w,b
 33059  0023E8  0D01               	mullw	1
 33060  0023EA  0EA3               	movlw	low AESCmac@padded
 33061  0023EC  24F3               	addwf	prodl,w,c
 33062  0023EE  6EE9               	movwf	fsr0l,c
 33063  0023F0  0E01               	movlw	high AESCmac@padded
 33064  0023F2  20F4               	addwfc	prodh,w,c
 33065  0023F4  6EEA               	movwf	fsr0h,c
 33066  0023F6  50EF               	movf	indf0,w,c
 33067  0023F8  0100               	movlb	0	; () banked
 33068  0023FA  19C0               	xorwf	??_AESCmac& (0+255),w,b
 33069  0023FC  6EDF               	movwf	indf2,c
 33070                           
 33071                           ; BSR set to: 0
 33072  0023FE  0101               	movlb	1	; () banked
 33073  002400  2BD8               	incf	AESCmac@i& (0+255),f,b
 33074  002402  D7D9               	goto	l14327
 33075  002404                     u16160:
 33076                           
 33077                           ;lorawan_aes_cmac.c: 98: }
 33078                           ;lorawan_aes_cmac.c: 99: }
 33079                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 33080                           
 33081                           ; BSR set to: 1
 33082                           
 33083                           ; BSR set to: 1
 33084  002404  0EC3               	movlw	low AESCmac@x
 33085  002406  0100               	movlb	0	; () banked
 33086  002408  6F60               	movwf	memset@p1& (0+255),b
 33087  00240A  0E01               	movlw	high AESCmac@x
 33088  00240C  6F61               	movwf	(memset@p1+1)& (0+255),b
 33089  00240E  0E00               	movlw	0
 33090  002410  6F63               	movwf	(memset@c+1)& (0+255),b
 33091  002412  0E00               	movlw	0
 33092  002414  6F62               	movwf	memset@c& (0+255),b
 33093  002416  0E00               	movlw	0
 33094  002418  6F65               	movwf	(memset@n+1)& (0+255),b
 33095  00241A  0E10               	movlw	16
 33096  00241C  6F64               	movwf	memset@n& (0+255),b
 33097  00241E  EC45  F045         	call	_memset	;wreg free
 33098                           
 33099                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 33100  002422  0E00               	movlw	0
 33101  002424  0101               	movlb	1	; () banked
 33102  002426  6FD8               	movwf	AESCmac@i& (0+255),b
 33103  002428  D056               	goto	l56
 33104  00242A                     
 33105                           ;lorawan_aes_cmac.c: 104: {
 33106                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 33107                           
 33108                           ; BSR set to: 1
 33109  00242A  0E00               	movlw	0
 33110  00242C  0101               	movlb	1	; () banked
 33111  00242E  6FD7               	movwf	AESCmac@j& (0+255),b
 33112  002430                     l14343:
 33113                           
 33114                           ; BSR set to: 1
 33115  002430  0E0F               	movlw	15
 33116  002432  65D7               	cpfsgt	AESCmac@j& (0+255),b
 33117  002434  D001               	goto	l58
 33118  002436  D033               	goto	u16180
 33119  002438                     l58:
 33120                           
 33121                           ; BSR set to: 1
 33122                           ;lorawan_aes_cmac.c: 106: {
 33123                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 33124                           
 33125                           ; BSR set to: 1
 33126  002438  51D7               	movf	AESCmac@j& (0+255),w,b
 33127  00243A  0D01               	mullw	1
 33128  00243C  0EB3               	movlw	low AESCmac@y
 33129  00243E  24F3               	addwf	prodl,w,c
 33130  002440  6ED9               	movwf	fsr2l,c
 33131  002442  0E01               	movlw	high AESCmac@y
 33132  002444  20F4               	addwfc	prodh,w,c
 33133  002446  6EDA               	movwf	fsr2h,c
 33134  002448  51D8               	movf	AESCmac@i& (0+255),w,b
 33135  00244A  0100               	movlb	0	; () banked
 33136  00244C  6FC0               	movwf	??_AESCmac& (0+255),b
 33137  00244E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 33138  002450  3BC0               	swapf	??_AESCmac& (0+255),f,b
 33139  002452  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 33140  002454  0EF0               	movlw	240
 33141  002456  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 33142  002458  51C0               	movf	??_AESCmac& (0+255),w,b
 33143  00245A  0B0F               	andlw	15
 33144  00245C  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 33145  00245E  0EF0               	movlw	240
 33146  002460  17C0               	andwf	??_AESCmac& (0+255),f,b
 33147  002462  0101               	movlb	1	; () banked
 33148  002464  51D7               	movf	AESCmac@j& (0+255),w,b
 33149  002466  0100               	movlb	0	; () banked
 33150  002468  27C0               	addwf	??_AESCmac& (0+255),f,b
 33151  00246A  0E00               	movlw	0
 33152  00246C  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 33153  00246E  51C0               	movf	??_AESCmac& (0+255),w,b
 33154  002470  25BD               	addwf	AESCmac@input& (0+255),w,b
 33155  002472  6EE9               	movwf	fsr0l,c
 33156  002474  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 33157  002476  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 33158  002478  6EEA               	movwf	fsr0h,c
 33159  00247A  50EF               	movf	indf0,w,c
 33160  00247C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 33161  00247E  0101               	movlb	1	; () banked
 33162  002480  51D7               	movf	AESCmac@j& (0+255),w,b
 33163  002482  0D01               	mullw	1
 33164  002484  0EC3               	movlw	low AESCmac@x
 33165  002486  24F3               	addwf	prodl,w,c
 33166  002488  6EE9               	movwf	fsr0l,c
 33167  00248A  0E01               	movlw	high AESCmac@x
 33168  00248C  20F4               	addwfc	prodh,w,c
 33169  00248E  6EEA               	movwf	fsr0h,c
 33170  002490  50EF               	movf	indf0,w,c
 33171  002492  0100               	movlb	0	; () banked
 33172  002494  19C2               	xorwf	(??_AESCmac+2)& (0+255),w,b
 33173  002496  6EDF               	movwf	indf2,c
 33174                           
 33175                           ; BSR set to: 0
 33176  002498  0101               	movlb	1	; () banked
 33177  00249A  2BD7               	incf	AESCmac@j& (0+255),f,b
 33178  00249C  D7C9               	goto	l14343
 33179  00249E                     u16180:
 33180                           
 33181                           ; BSR set to: 1
 33182                           ;lorawan_aes_cmac.c: 108: }
 33183                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 33184                           
 33185                           ; BSR set to: 1
 33186  00249E  0EC3               	movlw	low AESCmac@x
 33187  0024A0  0100               	movlb	0	; () banked
 33188  0024A2  6F60               	movwf	memcpy@d1& (0+255),b
 33189  0024A4  0E01               	movlw	high AESCmac@x
 33190  0024A6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 33191  0024A8  0EB3               	movlw	low AESCmac@y
 33192  0024AA  6F62               	movwf	memcpy@s1& (0+255),b
 33193  0024AC  0E01               	movlw	high AESCmac@y
 33194  0024AE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 33195  0024B0  0E00               	movlw	0
 33196  0024B2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 33197  0024B4  0E10               	movlw	16
 33198  0024B6  6F64               	movwf	memcpy@n& (0+255),b
 33199  0024B8  EC6C  F03F         	call	_memcpy	;wreg free
 33200                           
 33201                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 33202  0024BC  0EC3               	movlw	low AESCmac@x
 33203  0024BE  0100               	movlb	0	; () banked
 33204  0024C0  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 33205  0024C2  0E01               	movlw	high AESCmac@x
 33206  0024C4  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 33207  0024C6  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 33208  0024CA  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 33209  0024CE  EC64  F044         	call	_AESEncodeLoRa	;wreg free
 33210  0024D2  0101               	movlb	1	; () banked
 33211  0024D4  2BD8               	incf	AESCmac@i& (0+255),f,b
 33212  0024D6                     l56:
 33213                           
 33214                           ; BSR set to: 1
 33215                           
 33216                           ; BSR set to: 1
 33217  0024D6  0EFF               	movlw	255
 33218  0024D8  0100               	movlb	0	; () banked
 33219  0024DA  6FC0               	movwf	??_AESCmac& (0+255),b
 33220  0024DC  0EFF               	movlw	255
 33221  0024DE  6FC1               	movwf	(??_AESCmac+1)& (0+255),b
 33222  0024E0  0101               	movlb	1	; () banked
 33223  0024E2  51D6               	movf	AESCmac@n& (0+255),w,b
 33224  0024E4  0100               	movlb	0	; () banked
 33225  0024E6  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 33226  0024E8  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 33227  0024EA  51C0               	movf	??_AESCmac& (0+255),w,b
 33228  0024EC  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 33229  0024EE  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 33230  0024F0  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 33231  0024F2  0101               	movlb	1	; () banked
 33232  0024F4  51D8               	movf	AESCmac@i& (0+255),w,b
 33233  0024F6  0100               	movlb	0	; () banked
 33234  0024F8  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 33235  0024FA  6BC5               	clrf	(??_AESCmac+5)& (0+255),b
 33236  0024FC  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 33237  0024FE  5DC4               	subwf	(??_AESCmac+4)& (0+255),w,b
 33238  002500  51C5               	movf	(??_AESCmac+5)& (0+255),w,b
 33239  002502  0A80               	xorlw	128
 33240  002504  6FC6               	movwf	(??_AESCmac+6)& (0+255),b
 33241  002506  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 33242  002508  0A80               	xorlw	128
 33243  00250A  59C6               	subwfb	(??_AESCmac+6)& (0+255),w,b
 33244  00250C  A0D8               	btfss	status,0,c
 33245  00250E  D78D               	goto	l57
 33246                           
 33247                           ; BSR set to: 0
 33248                           ;lorawan_aes_cmac.c: 111: }
 33249                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 33250                           
 33251                           ; BSR set to: 0
 33252  002510  0E00               	movlw	0
 33253  002512  0101               	movlb	1	; () banked
 33254  002514  6FD8               	movwf	AESCmac@i& (0+255),b
 33255  002516                     l14363:
 33256                           
 33257                           ; BSR set to: 1
 33258  002516  0E0F               	movlw	15
 33259  002518  65D8               	cpfsgt	AESCmac@i& (0+255),b
 33260  00251A  D001               	goto	l61
 33261  00251C  D023               	goto	u16210
 33262  00251E                     l61:
 33263                           
 33264                           ; BSR set to: 1
 33265                           ;lorawan_aes_cmac.c: 114: {
 33266                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 33267                           
 33268                           ; BSR set to: 1
 33269  00251E  51D8               	movf	AESCmac@i& (0+255),w,b
 33270  002520  0D01               	mullw	1
 33271  002522  0EB3               	movlw	low AESCmac@y
 33272  002524  24F3               	addwf	prodl,w,c
 33273  002526  6ED9               	movwf	fsr2l,c
 33274  002528  0E01               	movlw	high AESCmac@y
 33275  00252A  20F4               	addwfc	prodh,w,c
 33276  00252C  6EDA               	movwf	fsr2h,c
 33277  00252E  51D8               	movf	AESCmac@i& (0+255),w,b
 33278  002530  0D01               	mullw	1
 33279  002532  0E93               	movlw	low AESCmac@mLast
 33280  002534  24F3               	addwf	prodl,w,c
 33281  002536  6EE9               	movwf	fsr0l,c
 33282  002538  0E01               	movlw	high AESCmac@mLast
 33283  00253A  20F4               	addwfc	prodh,w,c
 33284  00253C  6EEA               	movwf	fsr0h,c
 33285  00253E  50EF               	movf	indf0,w,c
 33286  002540  0100               	movlb	0	; () banked
 33287  002542  6FC0               	movwf	??_AESCmac& (0+255),b
 33288  002544  0101               	movlb	1	; () banked
 33289  002546  51D8               	movf	AESCmac@i& (0+255),w,b
 33290  002548  0D01               	mullw	1
 33291  00254A  0EC3               	movlw	low AESCmac@x
 33292  00254C  24F3               	addwf	prodl,w,c
 33293  00254E  6EE9               	movwf	fsr0l,c
 33294  002550  0E01               	movlw	high AESCmac@x
 33295  002552  20F4               	addwfc	prodh,w,c
 33296  002554  6EEA               	movwf	fsr0h,c
 33297  002556  50EF               	movf	indf0,w,c
 33298  002558  0100               	movlb	0	; () banked
 33299  00255A  19C0               	xorwf	??_AESCmac& (0+255),w,b
 33300  00255C  6EDF               	movwf	indf2,c
 33301                           
 33302                           ; BSR set to: 0
 33303  00255E  0101               	movlb	1	; () banked
 33304  002560  2BD8               	incf	AESCmac@i& (0+255),f,b
 33305  002562  D7D9               	goto	l14363
 33306  002564                     u16210:
 33307                           
 33308                           ; BSR set to: 1
 33309                           ;lorawan_aes_cmac.c: 116: }
 33310                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 33311                           
 33312                           ; BSR set to: 1
 33313  002564  0EB3               	movlw	low AESCmac@y
 33314  002566  0100               	movlb	0	; () banked
 33315  002568  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 33316  00256A  0E01               	movlw	high AESCmac@y
 33317  00256C  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 33318  00256E  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 33319  002572  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 33320  002576  EC64  F044         	call	_AESEncodeLoRa	;wreg free
 33321                           
 33322                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 33323  00257A  C0BB  F060         	movff	AESCmac@output,memcpy@d1
 33324  00257E  C0BC  F061         	movff	AESCmac@output+1,memcpy@d1+1
 33325  002582  0EB3               	movlw	low AESCmac@y
 33326  002584  0100               	movlb	0	; () banked
 33327  002586  6F62               	movwf	memcpy@s1& (0+255),b
 33328  002588  0E01               	movlw	high AESCmac@y
 33329  00258A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 33330  00258C  0E00               	movlw	0
 33331  00258E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 33332  002590  0E10               	movlw	16
 33333  002592  6F64               	movwf	memcpy@n& (0+255),b
 33334  002594  EC6C  F03F         	call	_memcpy	;wreg free
 33335  002598  0012               	return		;funcret
 33336  00259A                     __end_of_AESCmac:
 33337                           	opt stack 0
 33338                           tosu	equ	0xFFF
 33339                           tosh	equ	0xFFE
 33340                           tosl	equ	0xFFD
 33341                           pclath	equ	0xFFA
 33342                           tblptru	equ	0xFF8
 33343                           tblptrh	equ	0xFF7
 33344                           tblptrl	equ	0xFF6
 33345                           tablat	equ	0xFF5
 33346                           prodh	equ	0xFF4
 33347                           prodl	equ	0xFF3
 33348                           intcon	equ	0xFF2
 33349                           intcon2	equ	0xFF1
 33350                           intcon3	equ	0xFF0
 33351                           indf0	equ	0xFEF
 33352                           postinc0	equ	0xFEE
 33353                           fsr0h	equ	0xFEA
 33354                           fsr0l	equ	0xFE9
 33355                           wreg	equ	0xFE8
 33356                           postinc1	equ	0xFE6
 33357                           postdec1	equ	0xFE5
 33358                           plusw1	equ	0xFE3
 33359                           fsr1h	equ	0xFE2
 33360                           fsr1l	equ	0xFE1
 33361                           indf2	equ	0xFDF
 33362                           postinc2	equ	0xFDE
 33363                           postdec2	equ	0xFDD
 33364                           plusw2	equ	0xFDB
 33365                           fsr2h	equ	0xFDA
 33366                           fsr2l	equ	0xFD9
 33367                           status	equ	0xFD8
 33368                           
 33369 ;; *************** function _GenerateSubkey *****************
 33370 ;; Defined at:
 33371 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 33372 ;; Parameters:    Size  Location     Type
 33373 ;;  key             2   49[BANK0 ] PTR unsigned char 
 33374 ;;		 -> loRa.activationParameters(105), loRa(245), 
 33375 ;;  k1              2   51[BANK0 ] PTR unsigned char 
 33376 ;;		 -> AESCmac@k1(16), 
 33377 ;;  k2              2   53[BANK0 ] PTR unsigned char 
 33378 ;;		 -> AESCmac@k2(16), 
 33379 ;; Auto vars:     Size  Location     Type
 33380 ;;  l              16   72[BANK0 ] unsigned char [16]
 33381 ;;  const_Rb       16   56[BANK0 ] unsigned char [16]
 33382 ;;  i               1   88[BANK0 ] unsigned char 
 33383 ;; Return value:  Size  Location     Type
 33384 ;;                  1    wreg      void 
 33385 ;; Registers used:
 33386 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33387 ;; Tracked objects:
 33388 ;;		On entry : 0/0
 33389 ;;		On exit  : 0/0
 33390 ;;		Unchanged: 0/0
 33391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33392 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33393 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33395 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33396 ;;Total ram usage:       40 bytes
 33397 ;; Hardware stack levels used:    1
 33398 ;; Hardware stack levels required when called:   10
 33399 ;; This function calls:
 33400 ;;		_AESEncodeLoRa
 33401 ;;		_FillSubKey
 33402 ;;		_memset
 33403 ;; This function is called by:
 33404 ;;		_AESCmac
 33405 ;; This function uses a non-reentrant model
 33406 ;;
 33407                           
 33408                           	psect	text161
 33409  005728                     __ptext161:
 33410                           	opt stack 0
 33411  005728                     _GenerateSubkey:
 33412                           	opt stack 17
 33413                           
 33414                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
 33415                           
 33416                           ;incstack = 0
 33417  005728  0E00               	movlw	0
 33418  00572A  0100               	movlb	0	; () banked
 33419  00572C  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 33420                           
 33421                           ; BSR set to: 0
 33422                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 33423                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 33424                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 33425  00572E  EE23  F0A0         	lfsr	2,GenerateSubkey@F7103
 33426  005732  EE00  F098         	lfsr	0,GenerateSubkey@const_Rb
 33427  005736  0E0F               	movlw	15
 33428  005738                     u15551:
 33429  005738  CFDB FFEB          	movff	plusw2,plusw0
 33430  00573C  06E8               	decf	wreg,f,c
 33431  00573E  E2FC               	bc	u15551
 33432                           
 33433                           ; BSR set to: 0
 33434                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 33435  005740  0EA8               	movlw	low GenerateSubkey@l
 33436  005742  6F60               	movwf	memset@p1& (0+255),b
 33437  005744  0E00               	movlw	high GenerateSubkey@l
 33438  005746  6F61               	movwf	(memset@p1+1)& (0+255),b
 33439  005748  0E00               	movlw	0
 33440  00574A  6F63               	movwf	(memset@c+1)& (0+255),b
 33441  00574C  0E00               	movlw	0
 33442  00574E  6F62               	movwf	memset@c& (0+255),b
 33443  005750  0E00               	movlw	0
 33444  005752  6F65               	movwf	(memset@n+1)& (0+255),b
 33445  005754  0E10               	movlw	16
 33446  005756  6F64               	movwf	memset@n& (0+255),b
 33447  005758  EC45  F045         	call	_memset	;wreg free
 33448                           
 33449                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 33450  00575C  0EA8               	movlw	low GenerateSubkey@l
 33451  00575E  0100               	movlb	0	; () banked
 33452  005760  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 33453  005762  0E00               	movlw	high GenerateSubkey@l
 33454  005764  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 33455  005766  C091  F07F         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 33456  00576A  C092  F080         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 33457  00576E  EC64  F044         	call	_AESEncodeLoRa	;wreg free
 33458                           
 33459                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 33460  005772  0100               	movlb	0	; () banked
 33461  005774  BFA8               	btfsc	GenerateSubkey@l& (0+255),7,b
 33462  005776  D00D               	goto	l68
 33463                           
 33464                           ; BSR set to: 0
 33465                           ;lorawan_aes_cmac.c: 138: {
 33466                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 33467  005778  0EA8               	movlw	low GenerateSubkey@l
 33468  00577A  6F60               	movwf	FillSubKey@source& (0+255),b
 33469  00577C  0E00               	movlw	high GenerateSubkey@l
 33470  00577E  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 33471  005780  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 33472  005784  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 33473  005788  0E10               	movlw	16
 33474  00578A  6F64               	movwf	FillSubKey@size& (0+255),b
 33475  00578C  ECDA  F03E         	call	_FillSubKey	;wreg free
 33476                           
 33477                           ;lorawan_aes_cmac.c: 140: }
 33478  005790  D02A               	goto	u15580
 33479  005792                     l68:
 33480                           
 33481                           ;lorawan_aes_cmac.c: 141: else
 33482                           ;lorawan_aes_cmac.c: 142: {
 33483                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 33484  005792  0EA8               	movlw	low GenerateSubkey@l
 33485  005794  0100               	movlb	0	; () banked
 33486  005796  6F60               	movwf	FillSubKey@source& (0+255),b
 33487  005798  0E00               	movlw	high GenerateSubkey@l
 33488  00579A  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 33489  00579C  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 33490  0057A0  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 33491  0057A4  0E10               	movlw	16
 33492  0057A6  6F64               	movwf	FillSubKey@size& (0+255),b
 33493  0057A8  ECDA  F03E         	call	_FillSubKey	;wreg free
 33494                           
 33495                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 33496  0057AC  0E00               	movlw	0
 33497  0057AE  0100               	movlb	0	; () banked
 33498  0057B0  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 33499  0057B2                     l13917:
 33500                           
 33501                           ; BSR set to: 0
 33502  0057B2  0E0F               	movlw	15
 33503  0057B4  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 33504  0057B6  D001               	goto	l70
 33505  0057B8  D016               	goto	u15580
 33506  0057BA                     l70:
 33507                           
 33508                           ; BSR set to: 0
 33509                           ;lorawan_aes_cmac.c: 146: {
 33510                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 33511                           
 33512                           ; BSR set to: 0
 33513  0057BA  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 33514  0057BC  0D01               	mullw	1
 33515  0057BE  0E98               	movlw	low GenerateSubkey@const_Rb
 33516  0057C0  24F3               	addwf	prodl,w,c
 33517  0057C2  6ED9               	movwf	fsr2l,c
 33518  0057C4  0E00               	movlw	high GenerateSubkey@const_Rb
 33519  0057C6  20F4               	addwfc	prodh,w,c
 33520  0057C8  6EDA               	movwf	fsr2h,c
 33521  0057CA  50DF               	movf	indf2,w,c
 33522  0057CC  6F97               	movwf	??_GenerateSubkey& (0+255),b
 33523  0057CE  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 33524  0057D0  0D01               	mullw	1
 33525  0057D2  50F3               	movf	prodl,w,c
 33526  0057D4  2593               	addwf	GenerateSubkey@k1& (0+255),w,b
 33527  0057D6  6ED9               	movwf	fsr2l,c
 33528  0057D8  50F4               	movf	prodh,w,c
 33529  0057DA  2194               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 33530  0057DC  6EDA               	movwf	fsr2h,c
 33531  0057DE  5197               	movf	??_GenerateSubkey& (0+255),w,b
 33532  0057E0  1ADF               	xorwf	indf2,f,c
 33533                           
 33534                           ; BSR set to: 0
 33535  0057E2  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 33536  0057E4  D7E6               	goto	l13917
 33537  0057E6                     u15580:
 33538                           
 33539                           ;lorawan_aes_cmac.c: 148: }
 33540                           ;lorawan_aes_cmac.c: 149: }
 33541                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 33542                           
 33543                           ; BSR set to: 0
 33544                           
 33545                           ; BSR set to: 0
 33546  0057E6  C093  FFD9         	movff	GenerateSubkey@k1,fsr2l
 33547  0057EA  C094  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 33548  0057EE  0100               	movlb	0	; () banked
 33549  0057F0  BEDF               	btfsc	indf2,7,c
 33550  0057F2  D00D               	goto	l72
 33551                           
 33552                           ; BSR set to: 0
 33553                           ;lorawan_aes_cmac.c: 153: {
 33554                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 33555  0057F4  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 33556  0057F8  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 33557  0057FC  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 33558  005800  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 33559  005804  0E10               	movlw	16
 33560  005806  6F64               	movwf	FillSubKey@size& (0+255),b
 33561  005808  ECDA  F03E         	call	_FillSubKey	;wreg free
 33562                           
 33563                           ;lorawan_aes_cmac.c: 155: }
 33564  00580C  0012               	return	
 33565  00580E                     l72:
 33566                           
 33567                           ;lorawan_aes_cmac.c: 156: else
 33568                           ;lorawan_aes_cmac.c: 157: {
 33569                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 33570  00580E  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 33571  005812  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 33572  005816  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 33573  00581A  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 33574  00581E  0E10               	movlw	16
 33575  005820  0100               	movlb	0	; () banked
 33576  005822  6F64               	movwf	FillSubKey@size& (0+255),b
 33577  005824  ECDA  F03E         	call	_FillSubKey	;wreg free
 33578                           
 33579                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 33580  005828  0E00               	movlw	0
 33581  00582A  0100               	movlb	0	; () banked
 33582  00582C  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 33583  00582E                     l13935:
 33584                           
 33585                           ; BSR set to: 0
 33586  00582E  0E0F               	movlw	15
 33587  005830  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 33588  005832  D001               	goto	l74
 33589  005834  0012               	return	
 33590  005836                     l74:
 33591                           
 33592                           ; BSR set to: 0
 33593                           ;lorawan_aes_cmac.c: 161: {
 33594                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 33595                           
 33596                           ; BSR set to: 0
 33597  005836  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 33598  005838  0D01               	mullw	1
 33599  00583A  50F3               	movf	prodl,w,c
 33600  00583C  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 33601  00583E  6ED9               	movwf	fsr2l,c
 33602  005840  50F4               	movf	prodh,w,c
 33603  005842  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 33604  005844  6EDA               	movwf	fsr2h,c
 33605  005846  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 33606  005848  0D01               	mullw	1
 33607  00584A  0E98               	movlw	low GenerateSubkey@const_Rb
 33608  00584C  24F3               	addwf	prodl,w,c
 33609  00584E  6EE9               	movwf	fsr0l,c
 33610  005850  0E00               	movlw	high GenerateSubkey@const_Rb
 33611  005852  20F4               	addwfc	prodh,w,c
 33612  005854  6EEA               	movwf	fsr0h,c
 33613  005856  50EF               	movf	indf0,w,c
 33614  005858  6F97               	movwf	??_GenerateSubkey& (0+255),b
 33615  00585A  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 33616  00585C  0D01               	mullw	1
 33617  00585E  50F3               	movf	prodl,w,c
 33618  005860  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 33619  005862  6EE9               	movwf	fsr0l,c
 33620  005864  50F4               	movf	prodh,w,c
 33621  005866  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 33622  005868  6EEA               	movwf	fsr0h,c
 33623  00586A  50EF               	movf	indf0,w,c
 33624  00586C  1997               	xorwf	??_GenerateSubkey& (0+255),w,b
 33625  00586E  6EDF               	movwf	indf2,c
 33626                           
 33627                           ; BSR set to: 0
 33628  005870  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 33629  005872  D7DD               	goto	l13935
 33630  005874                     __end_of_GenerateSubkey:
 33631                           	opt stack 0
 33632                           tosu	equ	0xFFF
 33633                           tosh	equ	0xFFE
 33634                           tosl	equ	0xFFD
 33635                           pclath	equ	0xFFA
 33636                           tblptru	equ	0xFF8
 33637                           tblptrh	equ	0xFF7
 33638                           tblptrl	equ	0xFF6
 33639                           tablat	equ	0xFF5
 33640                           prodh	equ	0xFF4
 33641                           prodl	equ	0xFF3
 33642                           intcon	equ	0xFF2
 33643                           intcon2	equ	0xFF1
 33644                           intcon3	equ	0xFF0
 33645                           indf0	equ	0xFEF
 33646                           postinc0	equ	0xFEE
 33647                           plusw0	equ	0xFEB
 33648                           fsr0h	equ	0xFEA
 33649                           fsr0l	equ	0xFE9
 33650                           wreg	equ	0xFE8
 33651                           postinc1	equ	0xFE6
 33652                           postdec1	equ	0xFE5
 33653                           plusw1	equ	0xFE3
 33654                           fsr1h	equ	0xFE2
 33655                           fsr1l	equ	0xFE1
 33656                           indf2	equ	0xFDF
 33657                           postinc2	equ	0xFDE
 33658                           postdec2	equ	0xFDD
 33659                           plusw2	equ	0xFDB
 33660                           fsr2h	equ	0xFDA
 33661                           fsr2l	equ	0xFD9
 33662                           status	equ	0xFD8
 33663                           
 33664 ;; *************** function _FillSubKey *****************
 33665 ;; Defined at:
 33666 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 33667 ;; Parameters:    Size  Location     Type
 33668 ;;  source          2    0[BANK0 ] PTR unsigned char 
 33669 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 33670 ;;  key             2    2[BANK0 ] PTR unsigned char 
 33671 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 33672 ;;  size            1    4[BANK0 ] unsigned char 
 33673 ;; Auto vars:     Size  Location     Type
 33674 ;;  i               1    7[BANK0 ] unsigned char 
 33675 ;;  carry           1    6[BANK0 ] unsigned char 
 33676 ;; Return value:  Size  Location     Type
 33677 ;;                  1    wreg      void 
 33678 ;; Registers used:
 33679 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33680 ;; Tracked objects:
 33681 ;;		On entry : 0/0
 33682 ;;		On exit  : 0/0
 33683 ;;		Unchanged: 0/0
 33684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33685 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33686 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33687 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33688 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33689 ;;Total ram usage:        8 bytes
 33690 ;; Hardware stack levels used:    1
 33691 ;; Hardware stack levels required when called:    7
 33692 ;; This function calls:
 33693 ;;		Nothing
 33694 ;; This function is called by:
 33695 ;;		_GenerateSubkey
 33696 ;; This function uses a non-reentrant model
 33697 ;;
 33698                           
 33699                           	psect	text162
 33700  007DB4                     __ptext162:
 33701                           	opt stack 0
 33702  007DB4                     _FillSubKey:
 33703                           	opt stack 19
 33704                           
 33705                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 33706                           
 33707                           ;incstack = 0
 33708  007DB4  0E00               	movlw	0
 33709  007DB6  0100               	movlb	0	; () banked
 33710  007DB8  6F67               	movwf	FillSubKey@i& (0+255),b
 33711                           
 33712                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 33713  007DBA  0E00               	movlw	0
 33714  007DBC  6F66               	movwf	FillSubKey@carry& (0+255),b
 33715                           
 33716                           ; BSR set to: 0
 33717                           ;lorawan_aes_cmac.c: 172: i=size;
 33718  007DBE  C064  F067         	movff	FillSubKey@size,FillSubKey@i
 33719                           
 33720                           ;lorawan_aes_cmac.c: 174: while(i--)
 33721  007DC2  D024               	goto	l79
 33722  007DC4                     
 33723                           ; BSR set to: 0
 33724                           ;lorawan_aes_cmac.c: 175: {
 33725                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 33726                           
 33727                           ; BSR set to: 0
 33728  007DC4  5167               	movf	FillSubKey@i& (0+255),w,b
 33729  007DC6  0D01               	mullw	1
 33730  007DC8  50F3               	movf	prodl,w,c
 33731  007DCA  2562               	addwf	FillSubKey@key& (0+255),w,b
 33732  007DCC  6ED9               	movwf	fsr2l,c
 33733  007DCE  50F4               	movf	prodh,w,c
 33734  007DD0  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 33735  007DD2  6EDA               	movwf	fsr2h,c
 33736  007DD4  5167               	movf	FillSubKey@i& (0+255),w,b
 33737  007DD6  0D01               	mullw	1
 33738  007DD8  50F3               	movf	prodl,w,c
 33739  007DDA  2560               	addwf	FillSubKey@source& (0+255),w,b
 33740  007DDC  6EE9               	movwf	fsr0l,c
 33741  007DDE  50F4               	movf	prodh,w,c
 33742  007DE0  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 33743  007DE2  6EEA               	movwf	fsr0h,c
 33744  007DE4  50EF               	movf	indf0,w,c
 33745  007DE6  6F65               	movwf	??_FillSubKey& (0+255),b
 33746  007DE8  90D8               	bcf	status,0,c
 33747  007DEA  3565               	rlcf	??_FillSubKey& (0+255),w,b
 33748  007DEC  1166               	iorwf	FillSubKey@carry& (0+255),w,b
 33749  007DEE  6EDF               	movwf	indf2,c
 33750                           
 33751                           ; BSR set to: 0
 33752                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 33753  007DF0  5167               	movf	FillSubKey@i& (0+255),w,b
 33754  007DF2  0D01               	mullw	1
 33755  007DF4  50F3               	movf	prodl,w,c
 33756  007DF6  2560               	addwf	FillSubKey@source& (0+255),w,b
 33757  007DF8  6ED9               	movwf	fsr2l,c
 33758  007DFA  50F4               	movf	prodh,w,c
 33759  007DFC  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 33760  007DFE  6EDA               	movwf	fsr2h,c
 33761  007E00  AEDF               	btfss	indf2,7,c
 33762  007E02  D002               	goto	u15060
 33763  007E04  0E01               	movlw	1
 33764  007E06  D001               	goto	u15070
 33765  007E08                     u15060:
 33766  007E08  0E00               	movlw	0
 33767  007E0A                     u15070:
 33768  007E0A  6F66               	movwf	FillSubKey@carry& (0+255),b
 33769  007E0C                     l79:
 33770                           
 33771                           ; BSR set to: 0
 33772                           
 33773                           ; BSR set to: 0
 33774  007E0C  0767               	decf	FillSubKey@i& (0+255),f,b
 33775  007E0E  2967               	incf	FillSubKey@i& (0+255),w,b
 33776  007E10  B4D8               	btfsc	status,2,c
 33777  007E12  0012               	return	
 33778  007E14  D7D7               	goto	l80
 33779  007E16                     __end_of_FillSubKey:
 33780                           	opt stack 0
 33781                           tosu	equ	0xFFF
 33782                           tosh	equ	0xFFE
 33783                           tosl	equ	0xFFD
 33784                           pclath	equ	0xFFA
 33785                           tblptru	equ	0xFF8
 33786                           tblptrh	equ	0xFF7
 33787                           tblptrl	equ	0xFF6
 33788                           tablat	equ	0xFF5
 33789                           prodh	equ	0xFF4
 33790                           prodl	equ	0xFF3
 33791                           intcon	equ	0xFF2
 33792                           intcon2	equ	0xFF1
 33793                           intcon3	equ	0xFF0
 33794                           indf0	equ	0xFEF
 33795                           postinc0	equ	0xFEE
 33796                           plusw0	equ	0xFEB
 33797                           fsr0h	equ	0xFEA
 33798                           fsr0l	equ	0xFE9
 33799                           wreg	equ	0xFE8
 33800                           postinc1	equ	0xFE6
 33801                           postdec1	equ	0xFE5
 33802                           plusw1	equ	0xFE3
 33803                           fsr1h	equ	0xFE2
 33804                           fsr1l	equ	0xFE1
 33805                           indf2	equ	0xFDF
 33806                           postinc2	equ	0xFDE
 33807                           postdec2	equ	0xFDD
 33808                           plusw2	equ	0xFDB
 33809                           fsr2h	equ	0xFDA
 33810                           fsr2l	equ	0xFD9
 33811                           status	equ	0xFD8
 33812                           
 33813 ;; *************** function _AESEncodeLoRa *****************
 33814 ;; Defined at:
 33815 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 33816 ;; Parameters:    Size  Location     Type
 33817 ;;  block           2   29[BANK0 ] PTR unsigned char 
 33818 ;;		 -> adcResult(4), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), 
 33819 ;;		 -> radioBuffer(271), loRa(245), GenerateSubkey@l(16), AESCmac@y(16), 
 33820 ;;		 -> AESCmac@x(16), 
 33821 ;;  key             2   31[BANK0 ] PTR unsigned char 
 33822 ;;		 -> loRa.activationParameters(105), loRa(245), 
 33823 ;; Auto vars:     Size  Location     Type
 33824 ;;  useKey         16   33[BANK0 ] unsigned char [16]
 33825 ;; Return value:  Size  Location     Type
 33826 ;;                  1    wreg      void 
 33827 ;; Registers used:
 33828 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33829 ;; Tracked objects:
 33830 ;;		On entry : 0/0
 33831 ;;		On exit  : 0/0
 33832 ;;		Unchanged: 0/0
 33833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33834 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33835 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33837 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33838 ;;Total ram usage:       20 bytes
 33839 ;; Hardware stack levels used:    1
 33840 ;; Hardware stack levels required when called:    9
 33841 ;; This function calls:
 33842 ;;		_AESEncode
 33843 ;;		_memcpy
 33844 ;; This function is called by:
 33845 ;;		_AESCmac
 33846 ;;		_GenerateSubkey
 33847 ;;		_LORAWAN_RxDone
 33848 ;;		_ComputeSessionKeys
 33849 ;;		_EncryptFRMPayload
 33850 ;; This function uses a non-reentrant model
 33851 ;;
 33852                           
 33853                           	psect	text163
 33854  0088C8                     __ptext163:
 33855                           	opt stack 0
 33856  0088C8                     _AESEncodeLoRa:
 33857                           	opt stack 18
 33858                           
 33859                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 33860                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 33861                           
 33862                           ; BSR set to: 0
 33863                           ;incstack = 0
 33864  0088C8  0E81               	movlw	low AESEncodeLoRa@useKey
 33865  0088CA  0100               	movlb	0	; () banked
 33866  0088CC  6F60               	movwf	memcpy@d1& (0+255),b
 33867  0088CE  0E00               	movlw	high AESEncodeLoRa@useKey
 33868  0088D0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 33869  0088D2  C07F  F062         	movff	AESEncodeLoRa@key,memcpy@s1
 33870  0088D6  C080  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 33871  0088DA  0E00               	movlw	0
 33872  0088DC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 33873  0088DE  0E10               	movlw	16
 33874  0088E0  6F64               	movwf	memcpy@n& (0+255),b
 33875  0088E2  EC6C  F03F         	call	_memcpy	;wreg free
 33876                           
 33877                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 33878  0088E6  C07D  F066         	movff	AESEncodeLoRa@block,AESEncode@block
 33879  0088EA  C07E  F067         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 33880  0088EE  0E81               	movlw	low AESEncodeLoRa@useKey
 33881  0088F0  0100               	movlb	0	; () banked
 33882  0088F2  6F68               	movwf	AESEncode@key& (0+255),b
 33883  0088F4  0E00               	movlw	high AESEncodeLoRa@useKey
 33884  0088F6  6F69               	movwf	(AESEncode@key+1)& (0+255),b
 33885  0088F8  EC7F  F014         	call	_AESEncode	;wreg free
 33886  0088FC  0012               	return		;funcret
 33887  0088FE                     __end_of_AESEncodeLoRa:
 33888                           	opt stack 0
 33889                           tosu	equ	0xFFF
 33890                           tosh	equ	0xFFE
 33891                           tosl	equ	0xFFD
 33892                           pclath	equ	0xFFA
 33893                           tblptru	equ	0xFF8
 33894                           tblptrh	equ	0xFF7
 33895                           tblptrl	equ	0xFF6
 33896                           tablat	equ	0xFF5
 33897                           prodh	equ	0xFF4
 33898                           prodl	equ	0xFF3
 33899                           intcon	equ	0xFF2
 33900                           intcon2	equ	0xFF1
 33901                           intcon3	equ	0xFF0
 33902                           indf0	equ	0xFEF
 33903                           postinc0	equ	0xFEE
 33904                           plusw0	equ	0xFEB
 33905                           fsr0h	equ	0xFEA
 33906                           fsr0l	equ	0xFE9
 33907                           wreg	equ	0xFE8
 33908                           postinc1	equ	0xFE6
 33909                           postdec1	equ	0xFE5
 33910                           plusw1	equ	0xFE3
 33911                           fsr1h	equ	0xFE2
 33912                           fsr1l	equ	0xFE1
 33913                           indf2	equ	0xFDF
 33914                           postinc2	equ	0xFDE
 33915                           postdec2	equ	0xFDD
 33916                           plusw2	equ	0xFDB
 33917                           fsr2h	equ	0xFDA
 33918                           fsr2l	equ	0xFD9
 33919                           status	equ	0xFD8
 33920                           
 33921 ;; *************** function _AESEncode *****************
 33922 ;; Defined at:
 33923 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
 33924 ;; Parameters:    Size  Location     Type
 33925 ;;  block           2    6[BANK0 ] PTR unsigned char 
 33926 ;;		 -> adcResult(4), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), 
 33927 ;;		 -> radioBuffer(271), loRa(245), GenerateSubkey@l(16), AESCmac@y(16), 
 33928 ;;		 -> AESCmac@x(16), 
 33929 ;;  key             2    8[BANK0 ] PTR unsigned char 
 33930 ;;		 -> AESEncodeLoRa@useKey(16), 
 33931 ;; Auto vars:     Size  Location     Type
 33932 ;;  aux3            1   27[BANK0 ] unsigned char 
 33933 ;;  aux1            1   26[BANK0 ] unsigned char 
 33934 ;;  aux2            1   25[BANK0 ] unsigned char 
 33935 ;;  aux             1   24[BANK0 ] unsigned char 
 33936 ;;  i               1   28[BANK0 ] unsigned char 
 33937 ;;  temp            1    0        unsigned char 
 33938 ;; Return value:  Size  Location     Type
 33939 ;;                  1    wreg      void 
 33940 ;; Registers used:
 33941 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33942 ;; Tracked objects:
 33943 ;;		On entry : 0/0
 33944 ;;		On exit  : 0/0
 33945 ;;		Unchanged: 0/0
 33946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33947 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33948 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33949 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33950 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33951 ;;Total ram usage:       23 bytes
 33952 ;; Hardware stack levels used:    1
 33953 ;; Hardware stack levels required when called:    8
 33954 ;; This function calls:
 33955 ;;		_EncKeySchedule
 33956 ;;		_EncodeShiftRow
 33957 ;; This function is called by:
 33958 ;;		_AESEncodeLoRa
 33959 ;; This function uses a non-reentrant model
 33960 ;;
 33961                           
 33962                           	psect	text164
 33963  0028FE                     __ptext164:
 33964                           	opt stack 0
 33965  0028FE                     _AESEncode:
 33966                           	opt stack 18
 33967                           
 33968                           ;AES.c: 250: unsigned char i;
 33969                           ;AES.c: 251: unsigned char temp;
 33970                           ;AES.c: 254: _roundCounter = 10;
 33971                           
 33972                           ;incstack = 0
 33973  0028FE  0E0A               	movlw	10
 33974  002900  0101               	movlb	1	; () banked
 33975  002902  6F1F               	movwf	__roundCounter& (0+255),b
 33976                           
 33977                           ;AES.c: 256: _rcon = 0x01;
 33978  002904  0E01               	movlw	1
 33979  002906  6E46               	movwf	__rcon,c
 33980                           
 33981                           ;AES.c: 259: for(i=0;i<16;i++)
 33982  002908  0E00               	movlw	0
 33983  00290A  0100               	movlb	0	; () banked
 33984  00290C  6F7C               	movwf	AESEncode@i& (0+255),b
 33985  00290E                     l13451:
 33986                           
 33987                           ; BSR set to: 0
 33988  00290E  0E0F               	movlw	15
 33989  002910  657C               	cpfsgt	AESEncode@i& (0+255),b
 33990  002912  D001               	goto	l303
 33991  002914  D016               	goto	u14850
 33992  002916                     l303:
 33993                           
 33994                           ; BSR set to: 0
 33995                           ;AES.c: 260: {
 33996                           ;AES.c: 261: block[i] ^= key[i];
 33997                           
 33998                           ; BSR set to: 0
 33999  002916  517C               	movf	AESEncode@i& (0+255),w,b
 34000  002918  0D01               	mullw	1
 34001  00291A  50F3               	movf	prodl,w,c
 34002  00291C  2568               	addwf	AESEncode@key& (0+255),w,b
 34003  00291E  6ED9               	movwf	fsr2l,c
 34004  002920  50F4               	movf	prodh,w,c
 34005  002922  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 34006  002924  6EDA               	movwf	fsr2h,c
 34007  002926  50DF               	movf	indf2,w,c
 34008  002928  6F6A               	movwf	??_AESEncode& (0+255),b
 34009  00292A  517C               	movf	AESEncode@i& (0+255),w,b
 34010  00292C  0D01               	mullw	1
 34011  00292E  50F3               	movf	prodl,w,c
 34012  002930  2566               	addwf	AESEncode@block& (0+255),w,b
 34013  002932  6ED9               	movwf	fsr2l,c
 34014  002934  50F4               	movf	prodh,w,c
 34015  002936  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34016  002938  6EDA               	movwf	fsr2h,c
 34017  00293A  516A               	movf	??_AESEncode& (0+255),w,b
 34018  00293C  1ADF               	xorwf	indf2,f,c
 34019                           
 34020                           ; BSR set to: 0
 34021  00293E  2B7C               	incf	AESEncode@i& (0+255),f,b
 34022  002940  D7E6               	goto	l13451
 34023  002942                     u14850:
 34024                           
 34025                           ;AES.c: 265: {
 34026                           ;AES.c: 268: for(i=0;i<16;i++)
 34027                           
 34028                           ; BSR set to: 0
 34029                           
 34030                           ;AES.c: 262: }
 34031                           ;AES.c: 264: do
 34032                           
 34033                           ; BSR set to: 0
 34034  002942  0E00               	movlw	0
 34035  002944  0100               	movlb	0	; () banked
 34036  002946  6F7C               	movwf	AESEncode@i& (0+255),b
 34037  002948                     l13463:
 34038                           
 34039                           ; BSR set to: 0
 34040  002948  0E0F               	movlw	15
 34041  00294A  657C               	cpfsgt	AESEncode@i& (0+255),b
 34042  00294C  D001               	goto	l306
 34043  00294E  D022               	goto	u14870
 34044  002950                     l306:
 34045                           
 34046                           ; BSR set to: 0
 34047                           ;AES.c: 269: {
 34048                           ;AES.c: 270: block[i]=STable[block[i]];
 34049                           
 34050                           ; BSR set to: 0
 34051  002950  517C               	movf	AESEncode@i& (0+255),w,b
 34052  002952  0D01               	mullw	1
 34053  002954  50F3               	movf	prodl,w,c
 34054  002956  2566               	addwf	AESEncode@block& (0+255),w,b
 34055  002958  6ED9               	movwf	fsr2l,c
 34056  00295A  50F4               	movf	prodh,w,c
 34057  00295C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34058  00295E  6EDA               	movwf	fsr2h,c
 34059  002960  50DF               	movf	indf2,w,c
 34060  002962  6F6A               	movwf	??_AESEncode& (0+255),b
 34061  002964  516A               	movf	??_AESEncode& (0+255),w,b
 34062  002966  0D01               	mullw	1
 34063  002968  0E41               	movlw	low _STable
 34064  00296A  24F3               	addwf	prodl,w,c
 34065  00296C  6EF6               	movwf	tblptrl,c
 34066  00296E  0EFE               	movlw	high _STable
 34067  002970  20F4               	addwfc	prodh,w,c
 34068  002972  6EF7               	movwf	tblptrh,c
 34069  002974                     	if	1	;There are 3 active tblptr bytes
 34070  002974  6AF8               	clrf	tblptru,c
 34071  002976  0E00               	movlw	low (__mediumconst shr (0+16))
 34072  002978  22F8               	addwfc	tblptru,f,c
 34073  00297A                     	endif
 34074  00297A  517C               	movf	AESEncode@i& (0+255),w,b
 34075  00297C  0D01               	mullw	1
 34076  00297E  50F3               	movf	prodl,w,c
 34077  002980  2566               	addwf	AESEncode@block& (0+255),w,b
 34078  002982  6ED9               	movwf	fsr2l,c
 34079  002984  50F4               	movf	prodh,w,c
 34080  002986  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34081  002988  6EDA               	movwf	fsr2h,c
 34082  00298A  0008               	tblrd		*
 34083  00298C  CFF5 FFDF          	movff	tablat,indf2
 34084                           
 34085                           ; BSR set to: 0
 34086  002990  2B7C               	incf	AESEncode@i& (0+255),f,b
 34087  002992  D7DA               	goto	l13463
 34088  002994                     u14870:
 34089                           
 34090                           ; BSR set to: 0
 34091                           ;AES.c: 271: }
 34092                           ;AES.c: 274: EncodeShiftRow(block);
 34093                           
 34094                           ; BSR set to: 0
 34095  002994  C066  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
 34096  002998  C067  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 34097  00299C  EC8C  F029         	call	_EncodeShiftRow	;wreg free
 34098                           
 34099                           ;AES.c: 277: if(_roundCounter != 1)
 34100  0029A0  0101               	movlb	1	; () banked
 34101  0029A2  051F               	decf	__roundCounter& (0+255),w,b
 34102  0029A4  B4D8               	btfsc	status,2,c
 34103  0029A6  D127               	goto	u14930
 34104                           
 34105                           ; BSR set to: 1
 34106                           ;AES.c: 278: {
 34107                           ;AES.c: 279: unsigned char aux,aux1,aux2,aux3;
 34108                           ;AES.c: 281: for(i=0;i<16;i+=4)
 34109  0029A8  0E00               	movlw	0
 34110  0029AA  0100               	movlb	0	; () banked
 34111  0029AC  6F7C               	movwf	AESEncode@i& (0+255),b
 34112  0029AE                     l13479:
 34113                           
 34114                           ; BSR set to: 0
 34115  0029AE  0E0F               	movlw	15
 34116  0029B0  657C               	cpfsgt	AESEncode@i& (0+255),b
 34117  0029B2  D001               	goto	l309
 34118  0029B4  D120               	goto	u14930
 34119  0029B6                     l309:
 34120                           
 34121                           ; BSR set to: 0
 34122                           ;AES.c: 282: {
 34123                           ;AES.c: 283: aux1= block[i+0] ^ block[i+1];
 34124                           
 34125                           ; BSR set to: 0
 34126  0029B6  517C               	movf	AESEncode@i& (0+255),w,b
 34127  0029B8  6F6A               	movwf	??_AESEncode& (0+255),b
 34128  0029BA  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 34129  0029BC  0E01               	movlw	1
 34130  0029BE  276A               	addwf	??_AESEncode& (0+255),f,b
 34131  0029C0  0E00               	movlw	0
 34132  0029C2  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34133  0029C4  516A               	movf	??_AESEncode& (0+255),w,b
 34134  0029C6  2566               	addwf	AESEncode@block& (0+255),w,b
 34135  0029C8  6ED9               	movwf	fsr2l,c
 34136  0029CA  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 34137  0029CC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34138  0029CE  6EDA               	movwf	fsr2h,c
 34139  0029D0  50DF               	movf	indf2,w,c
 34140  0029D2  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 34141  0029D4  517C               	movf	AESEncode@i& (0+255),w,b
 34142  0029D6  2566               	addwf	AESEncode@block& (0+255),w,b
 34143  0029D8  6ED9               	movwf	fsr2l,c
 34144  0029DA  0E00               	movlw	0
 34145  0029DC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34146  0029DE  6EDA               	movwf	fsr2h,c
 34147  0029E0  50DF               	movf	indf2,w,c
 34148  0029E2  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 34149  0029E4  6F7A               	movwf	AESEncode@aux1& (0+255),b
 34150                           
 34151                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
 34152  0029E6  517C               	movf	AESEncode@i& (0+255),w,b
 34153  0029E8  6F6A               	movwf	??_AESEncode& (0+255),b
 34154  0029EA  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 34155  0029EC  0E03               	movlw	3
 34156  0029EE  276A               	addwf	??_AESEncode& (0+255),f,b
 34157  0029F0  0E00               	movlw	0
 34158  0029F2  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34159  0029F4  516A               	movf	??_AESEncode& (0+255),w,b
 34160  0029F6  2566               	addwf	AESEncode@block& (0+255),w,b
 34161  0029F8  6ED9               	movwf	fsr2l,c
 34162  0029FA  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 34163  0029FC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34164  0029FE  6EDA               	movwf	fsr2h,c
 34165  002A00  50DF               	movf	indf2,w,c
 34166  002A02  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 34167  002A04  517C               	movf	AESEncode@i& (0+255),w,b
 34168  002A06  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 34169  002A08  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 34170  002A0A  0E02               	movlw	2
 34171  002A0C  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 34172  002A0E  0E00               	movlw	0
 34173  002A10  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 34174  002A12  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 34175  002A14  2566               	addwf	AESEncode@block& (0+255),w,b
 34176  002A16  6ED9               	movwf	fsr2l,c
 34177  002A18  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 34178  002A1A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34179  002A1C  6EDA               	movwf	fsr2h,c
 34180  002A1E  50DF               	movf	indf2,w,c
 34181  002A20  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 34182  002A22  6F7B               	movwf	AESEncode@aux3& (0+255),b
 34183                           
 34184                           ; BSR set to: 0
 34185                           ;AES.c: 285: aux = aux1 ^ aux3;
 34186  002A24  517A               	movf	AESEncode@aux1& (0+255),w,b
 34187  002A26  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 34188  002A28  6F78               	movwf	AESEncode@aux& (0+255),b
 34189                           
 34190                           ; BSR set to: 0
 34191                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
 34192  002A2A  517C               	movf	AESEncode@i& (0+255),w,b
 34193  002A2C  6F6A               	movwf	??_AESEncode& (0+255),b
 34194  002A2E  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 34195  002A30  0E01               	movlw	1
 34196  002A32  276A               	addwf	??_AESEncode& (0+255),f,b
 34197  002A34  0E00               	movlw	0
 34198  002A36  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34199  002A38  516A               	movf	??_AESEncode& (0+255),w,b
 34200  002A3A  2566               	addwf	AESEncode@block& (0+255),w,b
 34201  002A3C  6ED9               	movwf	fsr2l,c
 34202  002A3E  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 34203  002A40  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34204  002A42  6EDA               	movwf	fsr2h,c
 34205  002A44  50DF               	movf	indf2,w,c
 34206  002A46  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 34207  002A48  517C               	movf	AESEncode@i& (0+255),w,b
 34208  002A4A  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 34209  002A4C  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 34210  002A4E  0E02               	movlw	2
 34211  002A50  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 34212  002A52  0E00               	movlw	0
 34213  002A54  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 34214  002A56  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 34215  002A58  2566               	addwf	AESEncode@block& (0+255),w,b
 34216  002A5A  6ED9               	movwf	fsr2l,c
 34217  002A5C  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 34218  002A5E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34219  002A60  6EDA               	movwf	fsr2h,c
 34220  002A62  50DF               	movf	indf2,w,c
 34221  002A64  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 34222  002A66  6F79               	movwf	AESEncode@aux2& (0+255),b
 34223                           
 34224                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 34225  002A68  0E7F               	movlw	127
 34226  002A6A  657A               	cpfsgt	AESEncode@aux1& (0+255),b
 34227  002A6C  D00C               	goto	l312
 34228                           
 34229                           ; BSR set to: 0
 34230  002A6E  0E1B               	movlw	27
 34231  002A70  C07A  F06A         	movff	AESEncode@aux1,??_AESEncode
 34232  002A74  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 34233  002A76  90D8               	bcf	status,0,c
 34234  002A78  376A               	rlcf	??_AESEncode& (0+255),f,b
 34235  002A7A  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 34236  002A7C  196A               	xorwf	??_AESEncode& (0+255),w,b
 34237  002A7E  6F72               	movwf	_AESEncode$509& (0+255),b
 34238  002A80  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 34239  002A82  6F73               	movwf	(_AESEncode$509+1)& (0+255),b
 34240  002A84  D005               	goto	l314
 34241  002A86                     l312:
 34242                           
 34243                           ; BSR set to: 0
 34244                           
 34245                           ; BSR set to: 0
 34246  002A86  90D8               	bcf	status,0,c
 34247  002A88  357A               	rlcf	AESEncode@aux1& (0+255),w,b
 34248  002A8A  6F72               	movwf	_AESEncode$509& (0+255),b
 34249  002A8C  6B73               	clrf	(_AESEncode$509+1)& (0+255),b
 34250  002A8E  3773               	rlcf	(_AESEncode$509+1)& (0+255),f,b
 34251  002A90                     l314:
 34252                           
 34253                           ; BSR set to: 0
 34254                           
 34255                           ; BSR set to: 0
 34256  002A90  C072  F07A         	movff	_AESEncode$509,AESEncode@aux1
 34257                           
 34258                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 34259  002A94  0E7F               	movlw	127
 34260  002A96  6579               	cpfsgt	AESEncode@aux2& (0+255),b
 34261  002A98  D00C               	goto	l316
 34262                           
 34263                           ; BSR set to: 0
 34264  002A9A  0E1B               	movlw	27
 34265  002A9C  C079  F06A         	movff	AESEncode@aux2,??_AESEncode
 34266  002AA0  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 34267  002AA2  90D8               	bcf	status,0,c
 34268  002AA4  376A               	rlcf	??_AESEncode& (0+255),f,b
 34269  002AA6  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 34270  002AA8  196A               	xorwf	??_AESEncode& (0+255),w,b
 34271  002AAA  6F74               	movwf	_AESEncode$510& (0+255),b
 34272  002AAC  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 34273  002AAE  6F75               	movwf	(_AESEncode$510+1)& (0+255),b
 34274  002AB0  D005               	goto	l318
 34275  002AB2                     l316:
 34276                           
 34277                           ; BSR set to: 0
 34278                           
 34279                           ; BSR set to: 0
 34280  002AB2  90D8               	bcf	status,0,c
 34281  002AB4  3579               	rlcf	AESEncode@aux2& (0+255),w,b
 34282  002AB6  6F74               	movwf	_AESEncode$510& (0+255),b
 34283  002AB8  6B75               	clrf	(_AESEncode$510+1)& (0+255),b
 34284  002ABA  3775               	rlcf	(_AESEncode$510+1)& (0+255),f,b
 34285  002ABC                     l318:
 34286                           
 34287                           ; BSR set to: 0
 34288                           
 34289                           ; BSR set to: 0
 34290  002ABC  C074  F079         	movff	_AESEncode$510,AESEncode@aux2
 34291                           
 34292                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 34293  002AC0  0E7F               	movlw	127
 34294  002AC2  657B               	cpfsgt	AESEncode@aux3& (0+255),b
 34295  002AC4  D00C               	goto	l320
 34296                           
 34297                           ; BSR set to: 0
 34298  002AC6  0E1B               	movlw	27
 34299  002AC8  C07B  F06A         	movff	AESEncode@aux3,??_AESEncode
 34300  002ACC  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 34301  002ACE  90D8               	bcf	status,0,c
 34302  002AD0  376A               	rlcf	??_AESEncode& (0+255),f,b
 34303  002AD2  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 34304  002AD4  196A               	xorwf	??_AESEncode& (0+255),w,b
 34305  002AD6  6F76               	movwf	_AESEncode$511& (0+255),b
 34306  002AD8  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 34307  002ADA  6F77               	movwf	(_AESEncode$511+1)& (0+255),b
 34308  002ADC  D005               	goto	l322
 34309  002ADE                     l320:
 34310                           
 34311                           ; BSR set to: 0
 34312                           
 34313                           ; BSR set to: 0
 34314  002ADE  90D8               	bcf	status,0,c
 34315  002AE0  357B               	rlcf	AESEncode@aux3& (0+255),w,b
 34316  002AE2  6F76               	movwf	_AESEncode$511& (0+255),b
 34317  002AE4  6B77               	clrf	(_AESEncode$511+1)& (0+255),b
 34318  002AE6  3777               	rlcf	(_AESEncode$511+1)& (0+255),f,b
 34319  002AE8                     l322:
 34320                           
 34321                           ; BSR set to: 0
 34322                           
 34323                           ; BSR set to: 0
 34324  002AE8  C076  F07B         	movff	_AESEncode$511,AESEncode@aux3
 34325                           
 34326                           ; BSR set to: 0
 34327                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
 34328  002AEC  517C               	movf	AESEncode@i& (0+255),w,b
 34329  002AEE  2566               	addwf	AESEncode@block& (0+255),w,b
 34330  002AF0  6ED9               	movwf	fsr2l,c
 34331  002AF2  0E00               	movlw	0
 34332  002AF4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34333  002AF6  6EDA               	movwf	fsr2h,c
 34334  002AF8  517C               	movf	AESEncode@i& (0+255),w,b
 34335  002AFA  2566               	addwf	AESEncode@block& (0+255),w,b
 34336  002AFC  6EE9               	movwf	fsr0l,c
 34337  002AFE  0E00               	movlw	0
 34338  002B00  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34339  002B02  6EEA               	movwf	fsr0h,c
 34340  002B04  50EF               	movf	indf0,w,c
 34341  002B06  1978               	xorwf	AESEncode@aux& (0+255),w,b
 34342  002B08  197A               	xorwf	AESEncode@aux1& (0+255),w,b
 34343  002B0A  6EDF               	movwf	indf2,c
 34344                           
 34345                           ; BSR set to: 0
 34346                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
 34347  002B0C  517C               	movf	AESEncode@i& (0+255),w,b
 34348  002B0E  6F6A               	movwf	??_AESEncode& (0+255),b
 34349  002B10  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 34350  002B12  0E01               	movlw	1
 34351  002B14  276A               	addwf	??_AESEncode& (0+255),f,b
 34352  002B16  0E00               	movlw	0
 34353  002B18  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34354  002B1A  516A               	movf	??_AESEncode& (0+255),w,b
 34355  002B1C  2566               	addwf	AESEncode@block& (0+255),w,b
 34356  002B1E  6ED9               	movwf	fsr2l,c
 34357  002B20  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 34358  002B22  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34359  002B24  6EDA               	movwf	fsr2h,c
 34360  002B26  517C               	movf	AESEncode@i& (0+255),w,b
 34361  002B28  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 34362  002B2A  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 34363  002B2C  0E01               	movlw	1
 34364  002B2E  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 34365  002B30  0E00               	movlw	0
 34366  002B32  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 34367  002B34  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 34368  002B36  2566               	addwf	AESEncode@block& (0+255),w,b
 34369  002B38  6EE9               	movwf	fsr0l,c
 34370  002B3A  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 34371  002B3C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34372  002B3E  6EEA               	movwf	fsr0h,c
 34373  002B40  50EF               	movf	indf0,w,c
 34374  002B42  1978               	xorwf	AESEncode@aux& (0+255),w,b
 34375  002B44  1979               	xorwf	AESEncode@aux2& (0+255),w,b
 34376  002B46  6EDF               	movwf	indf2,c
 34377                           
 34378                           ; BSR set to: 0
 34379                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
 34380  002B48  517C               	movf	AESEncode@i& (0+255),w,b
 34381  002B4A  6F6A               	movwf	??_AESEncode& (0+255),b
 34382  002B4C  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 34383  002B4E  0E02               	movlw	2
 34384  002B50  276A               	addwf	??_AESEncode& (0+255),f,b
 34385  002B52  0E00               	movlw	0
 34386  002B54  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34387  002B56  516A               	movf	??_AESEncode& (0+255),w,b
 34388  002B58  2566               	addwf	AESEncode@block& (0+255),w,b
 34389  002B5A  6ED9               	movwf	fsr2l,c
 34390  002B5C  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 34391  002B5E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34392  002B60  6EDA               	movwf	fsr2h,c
 34393  002B62  517C               	movf	AESEncode@i& (0+255),w,b
 34394  002B64  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 34395  002B66  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 34396  002B68  0E02               	movlw	2
 34397  002B6A  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 34398  002B6C  0E00               	movlw	0
 34399  002B6E  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 34400  002B70  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 34401  002B72  2566               	addwf	AESEncode@block& (0+255),w,b
 34402  002B74  6EE9               	movwf	fsr0l,c
 34403  002B76  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 34404  002B78  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34405  002B7A  6EEA               	movwf	fsr0h,c
 34406  002B7C  50EF               	movf	indf0,w,c
 34407  002B7E  1978               	xorwf	AESEncode@aux& (0+255),w,b
 34408  002B80  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 34409  002B82  6EDF               	movwf	indf2,c
 34410                           
 34411                           ; BSR set to: 0
 34412                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 34413  002B84  517C               	movf	AESEncode@i& (0+255),w,b
 34414  002B86  6F6A               	movwf	??_AESEncode& (0+255),b
 34415  002B88  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 34416  002B8A  0E03               	movlw	3
 34417  002B8C  276A               	addwf	??_AESEncode& (0+255),f,b
 34418  002B8E  0E00               	movlw	0
 34419  002B90  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34420  002B92  516A               	movf	??_AESEncode& (0+255),w,b
 34421  002B94  2566               	addwf	AESEncode@block& (0+255),w,b
 34422  002B96  6ED9               	movwf	fsr2l,c
 34423  002B98  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 34424  002B9A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34425  002B9C  6EDA               	movwf	fsr2h,c
 34426  002B9E  517C               	movf	AESEncode@i& (0+255),w,b
 34427  002BA0  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 34428  002BA2  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 34429  002BA4  0E02               	movlw	2
 34430  002BA6  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 34431  002BA8  0E00               	movlw	0
 34432  002BAA  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 34433  002BAC  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 34434  002BAE  2566               	addwf	AESEncode@block& (0+255),w,b
 34435  002BB0  6EE9               	movwf	fsr0l,c
 34436  002BB2  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 34437  002BB4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34438  002BB6  6EEA               	movwf	fsr0h,c
 34439  002BB8  50EF               	movf	indf0,w,c
 34440  002BBA  6F6E               	movwf	(??_AESEncode+4)& (0+255),b
 34441  002BBC  517C               	movf	AESEncode@i& (0+255),w,b
 34442  002BBE  6F6F               	movwf	(??_AESEncode+5)& (0+255),b
 34443  002BC0  6B70               	clrf	(??_AESEncode+6)& (0+255),b
 34444  002BC2  0E01               	movlw	1
 34445  002BC4  276F               	addwf	(??_AESEncode+5)& (0+255),f,b
 34446  002BC6  0E00               	movlw	0
 34447  002BC8  2370               	addwfc	(??_AESEncode+6)& (0+255),f,b
 34448  002BCA  516F               	movf	(??_AESEncode+5)& (0+255),w,b
 34449  002BCC  2566               	addwf	AESEncode@block& (0+255),w,b
 34450  002BCE  6EE9               	movwf	fsr0l,c
 34451  002BD0  5170               	movf	(??_AESEncode+6)& (0+255),w,b
 34452  002BD2  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34453  002BD4  6EEA               	movwf	fsr0h,c
 34454  002BD6  50EF               	movf	indf0,w,c
 34455  002BD8  6F71               	movwf	(??_AESEncode+7)& (0+255),b
 34456  002BDA  517C               	movf	AESEncode@i& (0+255),w,b
 34457  002BDC  2566               	addwf	AESEncode@block& (0+255),w,b
 34458  002BDE  6EE9               	movwf	fsr0l,c
 34459  002BE0  0E00               	movlw	0
 34460  002BE2  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34461  002BE4  6EEA               	movwf	fsr0h,c
 34462  002BE6  50EF               	movf	indf0,w,c
 34463  002BE8  1971               	xorwf	(??_AESEncode+7)& (0+255),w,b
 34464  002BEA  196E               	xorwf	(??_AESEncode+4)& (0+255),w,b
 34465  002BEC  1978               	xorwf	AESEncode@aux& (0+255),w,b
 34466  002BEE  6EDF               	movwf	indf2,c
 34467  002BF0  0E04               	movlw	4
 34468  002BF2  277C               	addwf	AESEncode@i& (0+255),f,b
 34469  002BF4  D6DC               	goto	l13479
 34470  002BF6                     u14930:
 34471                           
 34472                           ;AES.c: 296: }
 34473                           ;AES.c: 297: }
 34474                           ;AES.c: 299: EncKeySchedule(key);
 34475                           
 34476                           ; BSR set to: 0
 34477                           
 34478                           ; BSR set to: 0
 34479  002BF6  C068  F060         	movff	AESEncode@key,EncKeySchedule@key
 34480  002BFA  C069  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
 34481  002BFE  EC86  F01A         	call	_EncKeySchedule	;wreg free
 34482                           
 34483                           ;AES.c: 302: for(i=0;i<16;i++)
 34484  002C02  0E00               	movlw	0
 34485  002C04  0100               	movlb	0	; () banked
 34486  002C06  6F7C               	movwf	AESEncode@i& (0+255),b
 34487  002C08                     l13519:
 34488                           
 34489                           ; BSR set to: 0
 34490  002C08  0E0F               	movlw	15
 34491  002C0A  657C               	cpfsgt	AESEncode@i& (0+255),b
 34492  002C0C  D001               	goto	l323
 34493  002C0E  D016               	goto	u14950
 34494  002C10                     l323:
 34495                           
 34496                           ; BSR set to: 0
 34497                           ;AES.c: 303: {
 34498                           ;AES.c: 304: block[i] ^= key[i];
 34499                           
 34500                           ; BSR set to: 0
 34501  002C10  517C               	movf	AESEncode@i& (0+255),w,b
 34502  002C12  0D01               	mullw	1
 34503  002C14  50F3               	movf	prodl,w,c
 34504  002C16  2568               	addwf	AESEncode@key& (0+255),w,b
 34505  002C18  6ED9               	movwf	fsr2l,c
 34506  002C1A  50F4               	movf	prodh,w,c
 34507  002C1C  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 34508  002C1E  6EDA               	movwf	fsr2h,c
 34509  002C20  50DF               	movf	indf2,w,c
 34510  002C22  6F6A               	movwf	??_AESEncode& (0+255),b
 34511  002C24  517C               	movf	AESEncode@i& (0+255),w,b
 34512  002C26  0D01               	mullw	1
 34513  002C28  50F3               	movf	prodl,w,c
 34514  002C2A  2566               	addwf	AESEncode@block& (0+255),w,b
 34515  002C2C  6ED9               	movwf	fsr2l,c
 34516  002C2E  50F4               	movf	prodh,w,c
 34517  002C30  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34518  002C32  6EDA               	movwf	fsr2h,c
 34519  002C34  516A               	movf	??_AESEncode& (0+255),w,b
 34520  002C36  1ADF               	xorwf	indf2,f,c
 34521                           
 34522                           ; BSR set to: 0
 34523  002C38  2B7C               	incf	AESEncode@i& (0+255),f,b
 34524  002C3A  D7E6               	goto	l13519
 34525  002C3C                     u14950:
 34526                           
 34527                           ; BSR set to: 0
 34528                           ;AES.c: 305: }
 34529                           ;AES.c: 307: _roundCounter--;
 34530                           
 34531                           ; BSR set to: 0
 34532  002C3C  0101               	movlb	1	; () banked
 34533  002C3E  071F               	decf	__roundCounter& (0+255),f,b
 34534                           
 34535                           ; BSR set to: 1
 34536                           ;AES.c: 308: }
 34537                           ;AES.c: 309: while(_roundCounter !=0);
 34538  002C40  511F               	movf	__roundCounter& (0+255),w,b
 34539  002C42  B4D8               	btfsc	status,2,c
 34540  002C44  0012               	return	
 34541  002C46  D67D               	goto	u14850
 34542  002C48                     __end_of_AESEncode:
 34543                           	opt stack 0
 34544                           tosu	equ	0xFFF
 34545                           tosh	equ	0xFFE
 34546                           tosl	equ	0xFFD
 34547                           pclath	equ	0xFFA
 34548                           tblptru	equ	0xFF8
 34549                           tblptrh	equ	0xFF7
 34550                           tblptrl	equ	0xFF6
 34551                           tablat	equ	0xFF5
 34552                           prodh	equ	0xFF4
 34553                           prodl	equ	0xFF3
 34554                           intcon	equ	0xFF2
 34555                           intcon2	equ	0xFF1
 34556                           intcon3	equ	0xFF0
 34557                           indf0	equ	0xFEF
 34558                           postinc0	equ	0xFEE
 34559                           plusw0	equ	0xFEB
 34560                           fsr0h	equ	0xFEA
 34561                           fsr0l	equ	0xFE9
 34562                           wreg	equ	0xFE8
 34563                           postinc1	equ	0xFE6
 34564                           postdec1	equ	0xFE5
 34565                           plusw1	equ	0xFE3
 34566                           fsr1h	equ	0xFE2
 34567                           fsr1l	equ	0xFE1
 34568                           indf2	equ	0xFDF
 34569                           postinc2	equ	0xFDE
 34570                           postdec2	equ	0xFDD
 34571                           plusw2	equ	0xFDB
 34572                           fsr2h	equ	0xFDA
 34573                           fsr2l	equ	0xFD9
 34574                           status	equ	0xFD8
 34575                           
 34576 ;; *************** function _EncodeShiftRow *****************
 34577 ;; Defined at:
 34578 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 34579 ;; Parameters:    Size  Location     Type
 34580 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 34581 ;;		 -> adcResult(4), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), 
 34582 ;;		 -> radioBuffer(271), loRa(245), GenerateSubkey@l(16), AESCmac@y(16), 
 34583 ;;		 -> AESCmac@x(16), 
 34584 ;; Auto vars:     Size  Location     Type
 34585 ;;  temp            1    2[BANK0 ] unsigned char 
 34586 ;; Return value:  Size  Location     Type
 34587 ;;                  1    wreg      void 
 34588 ;; Registers used:
 34589 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 34590 ;; Tracked objects:
 34591 ;;		On entry : 0/0
 34592 ;;		On exit  : 0/0
 34593 ;;		Unchanged: 0/0
 34594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34596 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34598 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34599 ;;Total ram usage:        3 bytes
 34600 ;; Hardware stack levels used:    1
 34601 ;; Hardware stack levels required when called:    7
 34602 ;; This function calls:
 34603 ;;		Nothing
 34604 ;; This function is called by:
 34605 ;;		_AESEncode
 34606 ;; This function uses a non-reentrant model
 34607 ;;
 34608                           
 34609                           	psect	text165
 34610  005318                     __ptext165:
 34611                           	opt stack 0
 34612  005318                     _EncodeShiftRow:
 34613                           	opt stack 18
 34614                           
 34615                           ;AES.c: 387: unsigned char temp;
 34616                           ;AES.c: 392: temp=stateTable[1];
 34617                           
 34618                           ; BSR set to: 1
 34619                           ;incstack = 0
 34620  005318  0100               	movlb	0	; () banked
 34621  00531A  EE20 F001          	lfsr	2,1
 34622  00531E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34623  005320  26D9               	addwf	fsr2l,f,c
 34624  005322  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34625  005324  22DA               	addwfc	fsr2h,f,c
 34626  005326  50DF               	movf	indf2,w,c
 34627  005328  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 34628                           
 34629                           ; BSR set to: 0
 34630                           ;AES.c: 393: stateTable[1]=stateTable[5];
 34631  00532A  EE20 F005          	lfsr	2,5
 34632  00532E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34633  005330  26D9               	addwf	fsr2l,f,c
 34634  005332  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34635  005334  22DA               	addwfc	fsr2h,f,c
 34636  005336  EE00 F001          	lfsr	0,1
 34637  00533A  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34638  00533C  26E9               	addwf	fsr0l,f,c
 34639  00533E  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34640  005340  22EA               	addwfc	fsr0h,f,c
 34641  005342  CFDF FFEF          	movff	indf2,indf0
 34642                           
 34643                           ; BSR set to: 0
 34644                           ;AES.c: 394: stateTable[5]=stateTable[9];
 34645  005346  EE20 F009          	lfsr	2,9
 34646  00534A  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34647  00534C  26D9               	addwf	fsr2l,f,c
 34648  00534E  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34649  005350  22DA               	addwfc	fsr2h,f,c
 34650  005352  EE00 F005          	lfsr	0,5
 34651  005356  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34652  005358  26E9               	addwf	fsr0l,f,c
 34653  00535A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34654  00535C  22EA               	addwfc	fsr0h,f,c
 34655  00535E  CFDF FFEF          	movff	indf2,indf0
 34656                           
 34657                           ; BSR set to: 0
 34658                           ;AES.c: 395: stateTable[9]=stateTable[13];
 34659  005362  EE20 F00D          	lfsr	2,13
 34660  005366  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34661  005368  26D9               	addwf	fsr2l,f,c
 34662  00536A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34663  00536C  22DA               	addwfc	fsr2h,f,c
 34664  00536E  EE00 F009          	lfsr	0,9
 34665  005372  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34666  005374  26E9               	addwf	fsr0l,f,c
 34667  005376  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34668  005378  22EA               	addwfc	fsr0h,f,c
 34669  00537A  CFDF FFEF          	movff	indf2,indf0
 34670                           
 34671                           ; BSR set to: 0
 34672                           ;AES.c: 396: stateTable[13]=temp;
 34673  00537E  EE20 F00D          	lfsr	2,13
 34674  005382  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34675  005384  26D9               	addwf	fsr2l,f,c
 34676  005386  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34677  005388  22DA               	addwfc	fsr2h,f,c
 34678  00538A  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 34679                           
 34680                           ; BSR set to: 0
 34681                           ;AES.c: 399: temp=stateTable[2];
 34682  00538E  EE20 F002          	lfsr	2,2
 34683  005392  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34684  005394  26D9               	addwf	fsr2l,f,c
 34685  005396  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34686  005398  22DA               	addwfc	fsr2h,f,c
 34687  00539A  50DF               	movf	indf2,w,c
 34688  00539C  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 34689                           
 34690                           ; BSR set to: 0
 34691                           ;AES.c: 400: stateTable[2]=stateTable[10];
 34692  00539E  EE20 F00A          	lfsr	2,10
 34693  0053A2  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34694  0053A4  26D9               	addwf	fsr2l,f,c
 34695  0053A6  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34696  0053A8  22DA               	addwfc	fsr2h,f,c
 34697  0053AA  EE00 F002          	lfsr	0,2
 34698  0053AE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34699  0053B0  26E9               	addwf	fsr0l,f,c
 34700  0053B2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34701  0053B4  22EA               	addwfc	fsr0h,f,c
 34702  0053B6  CFDF FFEF          	movff	indf2,indf0
 34703                           
 34704                           ;AES.c: 401: stateTable[10]=temp;
 34705  0053BA  EE20 F00A          	lfsr	2,10
 34706  0053BE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34707  0053C0  26D9               	addwf	fsr2l,f,c
 34708  0053C2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34709  0053C4  22DA               	addwfc	fsr2h,f,c
 34710  0053C6  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 34711                           
 34712                           ;AES.c: 402: temp=stateTable[14];
 34713  0053CA  EE20 F00E          	lfsr	2,14
 34714  0053CE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34715  0053D0  26D9               	addwf	fsr2l,f,c
 34716  0053D2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34717  0053D4  22DA               	addwfc	fsr2h,f,c
 34718  0053D6  50DF               	movf	indf2,w,c
 34719  0053D8  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 34720                           
 34721                           ; BSR set to: 0
 34722                           ;AES.c: 403: stateTable[14]=stateTable[6];
 34723  0053DA  EE20 F006          	lfsr	2,6
 34724  0053DE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34725  0053E0  26D9               	addwf	fsr2l,f,c
 34726  0053E2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34727  0053E4  22DA               	addwfc	fsr2h,f,c
 34728  0053E6  EE00 F00E          	lfsr	0,14
 34729  0053EA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34730  0053EC  26E9               	addwf	fsr0l,f,c
 34731  0053EE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34732  0053F0  22EA               	addwfc	fsr0h,f,c
 34733  0053F2  CFDF FFEF          	movff	indf2,indf0
 34734                           
 34735                           ; BSR set to: 0
 34736                           ;AES.c: 404: stateTable[6]=temp;
 34737  0053F6  EE20 F006          	lfsr	2,6
 34738  0053FA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34739  0053FC  26D9               	addwf	fsr2l,f,c
 34740  0053FE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34741  005400  22DA               	addwfc	fsr2h,f,c
 34742  005402  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 34743                           
 34744                           ; BSR set to: 0
 34745                           ;AES.c: 407: temp=stateTable[3];
 34746  005406  EE20 F003          	lfsr	2,3
 34747  00540A  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34748  00540C  26D9               	addwf	fsr2l,f,c
 34749  00540E  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34750  005410  22DA               	addwfc	fsr2h,f,c
 34751  005412  50DF               	movf	indf2,w,c
 34752  005414  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 34753                           
 34754                           ; BSR set to: 0
 34755                           ;AES.c: 408: stateTable[3]=stateTable[15];
 34756  005416  EE20 F00F          	lfsr	2,15
 34757  00541A  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34758  00541C  26D9               	addwf	fsr2l,f,c
 34759  00541E  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34760  005420  22DA               	addwfc	fsr2h,f,c
 34761  005422  EE00 F003          	lfsr	0,3
 34762  005426  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34763  005428  26E9               	addwf	fsr0l,f,c
 34764  00542A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34765  00542C  22EA               	addwfc	fsr0h,f,c
 34766  00542E  CFDF FFEF          	movff	indf2,indf0
 34767                           
 34768                           ; BSR set to: 0
 34769                           ;AES.c: 409: stateTable[15]=stateTable[11];
 34770  005432  EE20 F00B          	lfsr	2,11
 34771  005436  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34772  005438  26D9               	addwf	fsr2l,f,c
 34773  00543A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34774  00543C  22DA               	addwfc	fsr2h,f,c
 34775  00543E  EE00 F00F          	lfsr	0,15
 34776  005442  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34777  005444  26E9               	addwf	fsr0l,f,c
 34778  005446  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34779  005448  22EA               	addwfc	fsr0h,f,c
 34780  00544A  CFDF FFEF          	movff	indf2,indf0
 34781                           
 34782                           ; BSR set to: 0
 34783                           ;AES.c: 410: stateTable[11]=stateTable[7];
 34784  00544E  EE20 F007          	lfsr	2,7
 34785  005452  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34786  005454  26D9               	addwf	fsr2l,f,c
 34787  005456  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34788  005458  22DA               	addwfc	fsr2h,f,c
 34789  00545A  EE00 F00B          	lfsr	0,11
 34790  00545E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34791  005460  26E9               	addwf	fsr0l,f,c
 34792  005462  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34793  005464  22EA               	addwfc	fsr0h,f,c
 34794  005466  CFDF FFEF          	movff	indf2,indf0
 34795                           
 34796                           ;AES.c: 411: stateTable[7]=temp;
 34797  00546A  EE20 F007          	lfsr	2,7
 34798  00546E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 34799  005470  26D9               	addwf	fsr2l,f,c
 34800  005472  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 34801  005474  22DA               	addwfc	fsr2h,f,c
 34802  005476  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 34803                           
 34804                           ; BSR set to: 0
 34805  00547A  0012               	return		;funcret
 34806  00547C                     __end_of_EncodeShiftRow:
 34807                           	opt stack 0
 34808                           tosu	equ	0xFFF
 34809                           tosh	equ	0xFFE
 34810                           tosl	equ	0xFFD
 34811                           pclath	equ	0xFFA
 34812                           tblptru	equ	0xFF8
 34813                           tblptrh	equ	0xFF7
 34814                           tblptrl	equ	0xFF6
 34815                           tablat	equ	0xFF5
 34816                           prodh	equ	0xFF4
 34817                           prodl	equ	0xFF3
 34818                           intcon	equ	0xFF2
 34819                           intcon2	equ	0xFF1
 34820                           intcon3	equ	0xFF0
 34821                           indf0	equ	0xFEF
 34822                           postinc0	equ	0xFEE
 34823                           plusw0	equ	0xFEB
 34824                           fsr0h	equ	0xFEA
 34825                           fsr0l	equ	0xFE9
 34826                           wreg	equ	0xFE8
 34827                           postinc1	equ	0xFE6
 34828                           postdec1	equ	0xFE5
 34829                           plusw1	equ	0xFE3
 34830                           fsr1h	equ	0xFE2
 34831                           fsr1l	equ	0xFE1
 34832                           indf2	equ	0xFDF
 34833                           postinc2	equ	0xFDE
 34834                           postdec2	equ	0xFDD
 34835                           plusw2	equ	0xFDB
 34836                           fsr2h	equ	0xFDA
 34837                           fsr2l	equ	0xFD9
 34838                           status	equ	0xFD8
 34839                           
 34840 ;; *************** function _EncKeySchedule *****************
 34841 ;; Defined at:
 34842 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 34843 ;; Parameters:    Size  Location     Type
 34844 ;;  key             2    0[BANK0 ] PTR unsigned char 
 34845 ;;		 -> AESEncodeLoRa@useKey(16), 
 34846 ;; Auto vars:     Size  Location     Type
 34847 ;;		None
 34848 ;; Return value:  Size  Location     Type
 34849 ;;                  1    wreg      void 
 34850 ;; Registers used:
 34851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 34852 ;; Tracked objects:
 34853 ;;		On entry : 0/0
 34854 ;;		On exit  : 0/0
 34855 ;;		Unchanged: 0/0
 34856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34858 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34859 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34860 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34861 ;;Total ram usage:        6 bytes
 34862 ;; Hardware stack levels used:    1
 34863 ;; Hardware stack levels required when called:    7
 34864 ;; This function calls:
 34865 ;;		Nothing
 34866 ;; This function is called by:
 34867 ;;		_AESEncode
 34868 ;; This function uses a non-reentrant model
 34869 ;;
 34870                           
 34871                           	psect	text166
 34872  00350C                     __ptext166:
 34873                           	opt stack 0
 34874  00350C                     _EncKeySchedule:
 34875                           	opt stack 18
 34876                           
 34877                           ;AES.c: 340: key[0]^=STable[key[13]];
 34878                           
 34879                           ; BSR set to: 0
 34880                           ;incstack = 0
 34881  00350C  0100               	movlb	0	; () banked
 34882  00350E  EE20 F00D          	lfsr	2,13
 34883  003512  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34884  003514  26D9               	addwf	fsr2l,f,c
 34885  003516  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34886  003518  22DA               	addwfc	fsr2h,f,c
 34887  00351A  50DF               	movf	indf2,w,c
 34888  00351C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34889  00351E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34890  003520  0D01               	mullw	1
 34891  003522  0E41               	movlw	low _STable
 34892  003524  24F3               	addwf	prodl,w,c
 34893  003526  6EF6               	movwf	tblptrl,c
 34894  003528  0EFE               	movlw	high _STable
 34895  00352A  20F4               	addwfc	prodh,w,c
 34896  00352C  6EF7               	movwf	tblptrh,c
 34897  00352E                     	if	1	;There are 3 active tblptr bytes
 34898  00352E  6AF8               	clrf	tblptru,c
 34899  003530  0E00               	movlw	low (__mediumconst shr (0+16))
 34900  003532  22F8               	addwfc	tblptru,f,c
 34901  003534                     	endif
 34902  003534  0008               	tblrd		*
 34903  003536  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 34904  00353A  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 34905  00353E  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 34906  003542  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 34907  003544  1ADF               	xorwf	indf2,f,c
 34908                           
 34909                           ;AES.c: 341: key[1]^=STable[key[14]];
 34910  003546  EE20 F00E          	lfsr	2,14
 34911  00354A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34912  00354C  26D9               	addwf	fsr2l,f,c
 34913  00354E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34914  003550  22DA               	addwfc	fsr2h,f,c
 34915  003552  50DF               	movf	indf2,w,c
 34916  003554  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34917  003556  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34918  003558  0D01               	mullw	1
 34919  00355A  0E41               	movlw	low _STable
 34920  00355C  24F3               	addwf	prodl,w,c
 34921  00355E  6EF6               	movwf	tblptrl,c
 34922  003560  0EFE               	movlw	high _STable
 34923  003562  20F4               	addwfc	prodh,w,c
 34924  003564  6EF7               	movwf	tblptrh,c
 34925  003566                     	if	1	;There are 3 active tblptr bytes
 34926  003566  6AF8               	clrf	tblptru,c
 34927  003568  0E00               	movlw	low (__mediumconst shr (0+16))
 34928  00356A  22F8               	addwfc	tblptru,f,c
 34929  00356C                     	endif
 34930  00356C  0008               	tblrd		*
 34931  00356E  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 34932  003572  EE20 F001          	lfsr	2,1
 34933  003576  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34934  003578  26D9               	addwf	fsr2l,f,c
 34935  00357A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34936  00357C  22DA               	addwfc	fsr2h,f,c
 34937  00357E  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 34938  003580  1ADF               	xorwf	indf2,f,c
 34939                           
 34940                           ;AES.c: 342: key[2]^=STable[key[15]];
 34941  003582  EE20 F00F          	lfsr	2,15
 34942  003586  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34943  003588  26D9               	addwf	fsr2l,f,c
 34944  00358A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34945  00358C  22DA               	addwfc	fsr2h,f,c
 34946  00358E  50DF               	movf	indf2,w,c
 34947  003590  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34948  003592  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34949  003594  0D01               	mullw	1
 34950  003596  0E41               	movlw	low _STable
 34951  003598  24F3               	addwf	prodl,w,c
 34952  00359A  6EF6               	movwf	tblptrl,c
 34953  00359C  0EFE               	movlw	high _STable
 34954  00359E  20F4               	addwfc	prodh,w,c
 34955  0035A0  6EF7               	movwf	tblptrh,c
 34956  0035A2                     	if	1	;There are 3 active tblptr bytes
 34957  0035A2  6AF8               	clrf	tblptru,c
 34958  0035A4  0E00               	movlw	low (__mediumconst shr (0+16))
 34959  0035A6  22F8               	addwfc	tblptru,f,c
 34960  0035A8                     	endif
 34961  0035A8  0008               	tblrd		*
 34962  0035AA  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 34963  0035AE  EE20 F002          	lfsr	2,2
 34964  0035B2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34965  0035B4  26D9               	addwf	fsr2l,f,c
 34966  0035B6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34967  0035B8  22DA               	addwfc	fsr2h,f,c
 34968  0035BA  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 34969  0035BC  1ADF               	xorwf	indf2,f,c
 34970                           
 34971                           ;AES.c: 343: key[3]^=STable[key[12]];
 34972  0035BE  EE20 F00C          	lfsr	2,12
 34973  0035C2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34974  0035C4  26D9               	addwf	fsr2l,f,c
 34975  0035C6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34976  0035C8  22DA               	addwfc	fsr2h,f,c
 34977  0035CA  50DF               	movf	indf2,w,c
 34978  0035CC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34979  0035CE  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34980  0035D0  0D01               	mullw	1
 34981  0035D2  0E41               	movlw	low _STable
 34982  0035D4  24F3               	addwf	prodl,w,c
 34983  0035D6  6EF6               	movwf	tblptrl,c
 34984  0035D8  0EFE               	movlw	high _STable
 34985  0035DA  20F4               	addwfc	prodh,w,c
 34986  0035DC  6EF7               	movwf	tblptrh,c
 34987  0035DE                     	if	1	;There are 3 active tblptr bytes
 34988  0035DE  6AF8               	clrf	tblptru,c
 34989  0035E0  0E00               	movlw	low (__mediumconst shr (0+16))
 34990  0035E2  22F8               	addwfc	tblptru,f,c
 34991  0035E4                     	endif
 34992  0035E4  0008               	tblrd		*
 34993  0035E6  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 34994  0035EA  EE20 F003          	lfsr	2,3
 34995  0035EE  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34996  0035F0  26D9               	addwf	fsr2l,f,c
 34997  0035F2  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34998  0035F4  22DA               	addwfc	fsr2h,f,c
 34999  0035F6  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35000  0035F8  1ADF               	xorwf	indf2,f,c
 35001                           
 35002                           ; BSR set to: 0
 35003                           ;AES.c: 345: key[0]^=_rcon;
 35004  0035FA  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 35005  0035FE  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 35006  003602  5046               	movf	__rcon,w,c
 35007  003604  1ADF               	xorwf	indf2,f,c
 35008                           
 35009                           ; BSR set to: 0
 35010                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 35011  003606  0E7F               	movlw	127
 35012  003608  6446               	cpfsgt	__rcon,c
 35013  00360A  D00C               	goto	l330
 35014                           
 35015                           ; BSR set to: 0
 35016  00360C  0E1B               	movlw	27
 35017  00360E  C046  F062         	movff	__rcon,??_EncKeySchedule
 35018  003612  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 35019  003614  90D8               	bcf	status,0,c
 35020  003616  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 35021  003618  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 35022  00361A  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 35023  00361C  6F64               	movwf	_EncKeySchedule$514& (0+255),b
 35024  00361E  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35025  003620  6F65               	movwf	(_EncKeySchedule$514+1)& (0+255),b
 35026  003622  D005               	goto	l332
 35027  003624                     l330:
 35028                           
 35029                           ; BSR set to: 0
 35030                           
 35031                           ; BSR set to: 0
 35032  003624  90D8               	bcf	status,0,c
 35033  003626  3446               	rlcf	__rcon,w,c
 35034  003628  6F64               	movwf	_EncKeySchedule$514& (0+255),b
 35035  00362A  6B65               	clrf	(_EncKeySchedule$514+1)& (0+255),b
 35036  00362C  3765               	rlcf	(_EncKeySchedule$514+1)& (0+255),f,b
 35037  00362E                     l332:
 35038                           
 35039                           ; BSR set to: 0
 35040                           
 35041                           ; BSR set to: 0
 35042  00362E  C064  F046         	movff	_EncKeySchedule$514,__rcon
 35043                           
 35044                           ; BSR set to: 0
 35045                           ;AES.c: 349: key[4]^=key[0];
 35046  003632  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 35047  003636  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 35048  00363A  50DF               	movf	indf2,w,c
 35049  00363C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35050  00363E  EE20 F004          	lfsr	2,4
 35051  003642  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35052  003644  26D9               	addwf	fsr2l,f,c
 35053  003646  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35054  003648  22DA               	addwfc	fsr2h,f,c
 35055  00364A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35056  00364C  1ADF               	xorwf	indf2,f,c
 35057                           
 35058                           ; BSR set to: 0
 35059                           ;AES.c: 350: key[5]^=key[1];
 35060  00364E  EE20 F001          	lfsr	2,1
 35061  003652  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35062  003654  26D9               	addwf	fsr2l,f,c
 35063  003656  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35064  003658  22DA               	addwfc	fsr2h,f,c
 35065  00365A  50DF               	movf	indf2,w,c
 35066  00365C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35067  00365E  EE20 F005          	lfsr	2,5
 35068  003662  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35069  003664  26D9               	addwf	fsr2l,f,c
 35070  003666  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35071  003668  22DA               	addwfc	fsr2h,f,c
 35072  00366A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35073  00366C  1ADF               	xorwf	indf2,f,c
 35074                           
 35075                           ; BSR set to: 0
 35076                           ;AES.c: 351: key[6]^=key[2];
 35077  00366E  EE20 F002          	lfsr	2,2
 35078  003672  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35079  003674  26D9               	addwf	fsr2l,f,c
 35080  003676  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35081  003678  22DA               	addwfc	fsr2h,f,c
 35082  00367A  50DF               	movf	indf2,w,c
 35083  00367C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35084  00367E  EE20 F006          	lfsr	2,6
 35085  003682  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35086  003684  26D9               	addwf	fsr2l,f,c
 35087  003686  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35088  003688  22DA               	addwfc	fsr2h,f,c
 35089  00368A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35090  00368C  1ADF               	xorwf	indf2,f,c
 35091                           
 35092                           ; BSR set to: 0
 35093                           ;AES.c: 352: key[7]^=key[3];
 35094  00368E  EE20 F003          	lfsr	2,3
 35095  003692  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35096  003694  26D9               	addwf	fsr2l,f,c
 35097  003696  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35098  003698  22DA               	addwfc	fsr2h,f,c
 35099  00369A  50DF               	movf	indf2,w,c
 35100  00369C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35101  00369E  EE20 F007          	lfsr	2,7
 35102  0036A2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35103  0036A4  26D9               	addwf	fsr2l,f,c
 35104  0036A6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35105  0036A8  22DA               	addwfc	fsr2h,f,c
 35106  0036AA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35107  0036AC  1ADF               	xorwf	indf2,f,c
 35108                           
 35109                           ; BSR set to: 0
 35110                           ;AES.c: 355: key[8]^=key[4];
 35111  0036AE  EE20 F004          	lfsr	2,4
 35112  0036B2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35113  0036B4  26D9               	addwf	fsr2l,f,c
 35114  0036B6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35115  0036B8  22DA               	addwfc	fsr2h,f,c
 35116  0036BA  50DF               	movf	indf2,w,c
 35117  0036BC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35118  0036BE  EE20 F008          	lfsr	2,8
 35119  0036C2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35120  0036C4  26D9               	addwf	fsr2l,f,c
 35121  0036C6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35122  0036C8  22DA               	addwfc	fsr2h,f,c
 35123  0036CA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35124  0036CC  1ADF               	xorwf	indf2,f,c
 35125                           
 35126                           ; BSR set to: 0
 35127                           ;AES.c: 356: key[9]^=key[5];
 35128  0036CE  EE20 F005          	lfsr	2,5
 35129  0036D2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35130  0036D4  26D9               	addwf	fsr2l,f,c
 35131  0036D6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35132  0036D8  22DA               	addwfc	fsr2h,f,c
 35133  0036DA  50DF               	movf	indf2,w,c
 35134  0036DC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35135  0036DE  EE20 F009          	lfsr	2,9
 35136  0036E2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35137  0036E4  26D9               	addwf	fsr2l,f,c
 35138  0036E6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35139  0036E8  22DA               	addwfc	fsr2h,f,c
 35140  0036EA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35141  0036EC  1ADF               	xorwf	indf2,f,c
 35142                           
 35143                           ; BSR set to: 0
 35144                           ;AES.c: 357: key[10]^=key[6];
 35145  0036EE  EE20 F006          	lfsr	2,6
 35146  0036F2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35147  0036F4  26D9               	addwf	fsr2l,f,c
 35148  0036F6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35149  0036F8  22DA               	addwfc	fsr2h,f,c
 35150  0036FA  50DF               	movf	indf2,w,c
 35151  0036FC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35152  0036FE  EE20 F00A          	lfsr	2,10
 35153  003702  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35154  003704  26D9               	addwf	fsr2l,f,c
 35155  003706  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35156  003708  22DA               	addwfc	fsr2h,f,c
 35157  00370A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35158  00370C  1ADF               	xorwf	indf2,f,c
 35159                           
 35160                           ; BSR set to: 0
 35161                           ;AES.c: 358: key[11]^=key[7];
 35162  00370E  EE20 F007          	lfsr	2,7
 35163  003712  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35164  003714  26D9               	addwf	fsr2l,f,c
 35165  003716  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35166  003718  22DA               	addwfc	fsr2h,f,c
 35167  00371A  50DF               	movf	indf2,w,c
 35168  00371C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35169  00371E  EE20 F00B          	lfsr	2,11
 35170  003722  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35171  003724  26D9               	addwf	fsr2l,f,c
 35172  003726  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35173  003728  22DA               	addwfc	fsr2h,f,c
 35174  00372A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35175  00372C  1ADF               	xorwf	indf2,f,c
 35176                           
 35177                           ; BSR set to: 0
 35178                           ;AES.c: 361: key[12]^=key[8];
 35179  00372E  EE20 F008          	lfsr	2,8
 35180  003732  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35181  003734  26D9               	addwf	fsr2l,f,c
 35182  003736  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35183  003738  22DA               	addwfc	fsr2h,f,c
 35184  00373A  50DF               	movf	indf2,w,c
 35185  00373C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35186  00373E  EE20 F00C          	lfsr	2,12
 35187  003742  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35188  003744  26D9               	addwf	fsr2l,f,c
 35189  003746  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35190  003748  22DA               	addwfc	fsr2h,f,c
 35191  00374A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35192  00374C  1ADF               	xorwf	indf2,f,c
 35193                           
 35194                           ; BSR set to: 0
 35195                           ;AES.c: 362: key[13]^=key[9];
 35196  00374E  EE20 F009          	lfsr	2,9
 35197  003752  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35198  003754  26D9               	addwf	fsr2l,f,c
 35199  003756  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35200  003758  22DA               	addwfc	fsr2h,f,c
 35201  00375A  50DF               	movf	indf2,w,c
 35202  00375C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35203  00375E  EE20 F00D          	lfsr	2,13
 35204  003762  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35205  003764  26D9               	addwf	fsr2l,f,c
 35206  003766  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35207  003768  22DA               	addwfc	fsr2h,f,c
 35208  00376A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35209  00376C  1ADF               	xorwf	indf2,f,c
 35210                           
 35211                           ; BSR set to: 0
 35212                           ;AES.c: 363: key[14]^=key[10];
 35213  00376E  EE20 F00A          	lfsr	2,10
 35214  003772  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35215  003774  26D9               	addwf	fsr2l,f,c
 35216  003776  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35217  003778  22DA               	addwfc	fsr2h,f,c
 35218  00377A  50DF               	movf	indf2,w,c
 35219  00377C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35220  00377E  EE20 F00E          	lfsr	2,14
 35221  003782  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35222  003784  26D9               	addwf	fsr2l,f,c
 35223  003786  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35224  003788  22DA               	addwfc	fsr2h,f,c
 35225  00378A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35226  00378C  1ADF               	xorwf	indf2,f,c
 35227                           
 35228                           ; BSR set to: 0
 35229                           ;AES.c: 364: key[15]^=key[11];
 35230  00378E  EE20 F00B          	lfsr	2,11
 35231  003792  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35232  003794  26D9               	addwf	fsr2l,f,c
 35233  003796  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35234  003798  22DA               	addwfc	fsr2h,f,c
 35235  00379A  50DF               	movf	indf2,w,c
 35236  00379C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 35237  00379E  EE20 F00F          	lfsr	2,15
 35238  0037A2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 35239  0037A4  26D9               	addwf	fsr2l,f,c
 35240  0037A6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35241  0037A8  22DA               	addwfc	fsr2h,f,c
 35242  0037AA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 35243  0037AC  1ADF               	xorwf	indf2,f,c
 35244                           
 35245                           ; BSR set to: 0
 35246  0037AE  0012               	return		;funcret
 35247  0037B0                     __end_of_EncKeySchedule:
 35248                           	opt stack 0
 35249                           tosu	equ	0xFFF
 35250                           tosh	equ	0xFFE
 35251                           tosl	equ	0xFFD
 35252                           pclath	equ	0xFFA
 35253                           tblptru	equ	0xFF8
 35254                           tblptrh	equ	0xFF7
 35255                           tblptrl	equ	0xFF6
 35256                           tablat	equ	0xFF5
 35257                           prodh	equ	0xFF4
 35258                           prodl	equ	0xFF3
 35259                           intcon	equ	0xFF2
 35260                           intcon2	equ	0xFF1
 35261                           intcon3	equ	0xFF0
 35262                           indf0	equ	0xFEF
 35263                           postinc0	equ	0xFEE
 35264                           plusw0	equ	0xFEB
 35265                           fsr0h	equ	0xFEA
 35266                           fsr0l	equ	0xFE9
 35267                           wreg	equ	0xFE8
 35268                           postinc1	equ	0xFE6
 35269                           postdec1	equ	0xFE5
 35270                           plusw1	equ	0xFE3
 35271                           fsr1h	equ	0xFE2
 35272                           fsr1l	equ	0xFE1
 35273                           indf2	equ	0xFDF
 35274                           postinc2	equ	0xFDE
 35275                           postdec2	equ	0xFDD
 35276                           plusw2	equ	0xFDB
 35277                           fsr2h	equ	0xFDA
 35278                           fsr2l	equ	0xFD9
 35279                           status	equ	0xFD8
 35280                           
 35281 ;; *************** function _LORAWAN_Init *****************
 35282 ;; Defined at:
 35283 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35284 ;; Parameters:    Size  Location     Type
 35285 ;;  RxPayload       2   82[BANK0 ] PTR FTN(PTR unsigned cha
 35286 ;;		 -> RxData(1), 
 35287 ;;  RxJoinRespon    2   84[BANK0 ] PTR FTN(unsigned char ,)
 35288 ;;		 -> RxJoinResponse(1), 
 35289 ;; Auto vars:     Size  Location     Type
 35290 ;;		None
 35291 ;; Return value:  Size  Location     Type
 35292 ;;                  1    wreg      void 
 35293 ;; Registers used:
 35294 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35295 ;; Tracked objects:
 35296 ;;		On entry : 0/0
 35297 ;;		On exit  : 0/0
 35298 ;;		Unchanged: 0/0
 35299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35300 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35303 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35304 ;;Total ram usage:        4 bytes
 35305 ;; Hardware stack levels used:    1
 35306 ;; Hardware stack levels required when called:   13
 35307 ;; This function calls:
 35308 ;;		_CreateAllSoftwareTimers
 35309 ;;		_LORAWAN_Reset
 35310 ;;		_RADIO_Init
 35311 ;;		_RADIO_ReadRandom
 35312 ;;		_SetCallbackSoftwareTimers
 35313 ;;		_StopAllSoftwareTimers
 35314 ;;		_srand
 35315 ;; This function is called by:
 35316 ;;		_main
 35317 ;; This function uses a non-reentrant model
 35318 ;;
 35319                           
 35320                           	psect	text167
 35321  007E16                     __ptext167:
 35322                           	opt stack 0
 35323  007E16                     _LORAWAN_Init:
 35324                           	opt stack 17
 35325                           
 35326                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 35327                           
 35328                           ; BSR set to: 0
 35329                           ;incstack = 0
 35330  007E16  0102               	movlb	2	; () banked
 35331  007E18  51F0               	movf	(_loRa+240)& (0+255),w,b
 35332  007E1A  A4D8               	btfss	status,2,c
 35333  007E1C  D008               	goto	l969
 35334                           
 35335                           ; BSR set to: 2
 35336                           ;lorawan_eu.c: 127: {
 35337                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 35338  007E1E  ECD9  F041         	call	_CreateAllSoftwareTimers	;wreg free
 35339                           
 35340                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 35341  007E22  ECD9  F034         	call	_SetCallbackSoftwareTimers	;wreg free
 35342                           
 35343                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 35344  007E26  0E01               	movlw	1
 35345  007E28  0102               	movlb	2	; () banked
 35346  007E2A  6FF0               	movwf	(_loRa+240)& (0+255),b
 35347                           
 35348                           ;lorawan_eu.c: 131: }
 35349  007E2C  D002               	goto	l970
 35350  007E2E                     l969:
 35351                           
 35352                           ; BSR set to: 2
 35353                           ;lorawan_eu.c: 132: else
 35354                           ;lorawan_eu.c: 133: {
 35355                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 35356                           
 35357                           ; BSR set to: 2
 35358  007E2E  ECB0  F041         	call	_StopAllSoftwareTimers	;wreg free
 35359  007E32                     l970:
 35360                           
 35361                           ;lorawan_eu.c: 135: }
 35362                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 35363  007E32  C0B2  F104         	movff	LORAWAN_Init@RxPayload,_rxPayload
 35364  007E36  C0B3  F105         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 35365                           
 35366                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 35367  007E3A  C0B4  F106         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 35368  007E3E  C0B5  F107         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 35369                           
 35370                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 35371  007E42  0EFF               	movlw	low (_radioBuffer+16)
 35372  007E44  0100               	movlb	0	; () banked
 35373  007E46  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 35374  007E48  0E05               	movlw	high (_radioBuffer+16)
 35375  007E4A  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 35376  007E4C  0EA0               	movlw	160
 35377  007E4E  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 35378  007E50  0E27               	movlw	39
 35379  007E52  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 35380  007E54  0EBE               	movlw	190
 35381  007E56  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 35382  007E58  0E33               	movlw	51
 35383  007E5A  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 35384  007E5C  EC6D  F023         	call	_RADIO_Init	;wreg free
 35385                           
 35386                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 35387  007E60  ECF9  F038         	call	_RADIO_ReadRandom	;wreg free
 35388  007E64  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 35389  007E68  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 35390  007E6C  ECBB  F048         	call	_srand	;wreg free
 35391                           
 35392                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 35393  007E70  0E00               	movlw	0
 35394  007E72  EC86  F022         	call	_LORAWAN_Reset
 35395  007E76  0012               	return		;funcret
 35396  007E78                     __end_of_LORAWAN_Init:
 35397                           	opt stack 0
 35398                           tosu	equ	0xFFF
 35399                           tosh	equ	0xFFE
 35400                           tosl	equ	0xFFD
 35401                           pclath	equ	0xFFA
 35402                           tblptru	equ	0xFF8
 35403                           tblptrh	equ	0xFF7
 35404                           tblptrl	equ	0xFF6
 35405                           tablat	equ	0xFF5
 35406                           prodh	equ	0xFF4
 35407                           prodl	equ	0xFF3
 35408                           intcon	equ	0xFF2
 35409                           intcon2	equ	0xFF1
 35410                           intcon3	equ	0xFF0
 35411                           indf0	equ	0xFEF
 35412                           postinc0	equ	0xFEE
 35413                           plusw0	equ	0xFEB
 35414                           fsr0h	equ	0xFEA
 35415                           fsr0l	equ	0xFE9
 35416                           wreg	equ	0xFE8
 35417                           postinc1	equ	0xFE6
 35418                           postdec1	equ	0xFE5
 35419                           plusw1	equ	0xFE3
 35420                           fsr1h	equ	0xFE2
 35421                           fsr1l	equ	0xFE1
 35422                           indf2	equ	0xFDF
 35423                           postinc2	equ	0xFDE
 35424                           postdec2	equ	0xFDD
 35425                           plusw2	equ	0xFDB
 35426                           fsr2h	equ	0xFDA
 35427                           fsr2l	equ	0xFD9
 35428                           status	equ	0xFD8
 35429                           
 35430 ;; *************** function _srand *****************
 35431 ;; Defined at:
 35432 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 35433 ;; Parameters:    Size  Location     Type
 35434 ;;  x               2   18[BANK0 ] unsigned int 
 35435 ;; Auto vars:     Size  Location     Type
 35436 ;;		None
 35437 ;; Return value:  Size  Location     Type
 35438 ;;                  1    wreg      void 
 35439 ;; Registers used:
 35440 ;;		status,2
 35441 ;; Tracked objects:
 35442 ;;		On entry : 0/0
 35443 ;;		On exit  : 0/0
 35444 ;;		Unchanged: 0/0
 35445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35449 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35450 ;;Total ram usage:        2 bytes
 35451 ;; Hardware stack levels used:    1
 35452 ;; Hardware stack levels required when called:    7
 35453 ;; This function calls:
 35454 ;;		Nothing
 35455 ;; This function is called by:
 35456 ;;		_LORAWAN_Init
 35457 ;; This function uses a non-reentrant model
 35458 ;;
 35459                           
 35460                           	psect	text168
 35461  009176                     __ptext168:
 35462                           	opt stack 0
 35463  009176                     _srand:
 35464                           	opt stack 22
 35465                           
 35466                           ;incstack = 0
 35467  009176  C072  F1EE         	movff	srand@x,_randx
 35468  00917A  C073  F1EF         	movff	srand@x+1,_randx+1
 35469  00917E  0101               	movlb	1	; () banked
 35470  009180  6BF0               	clrf	(_randx+2)& (0+255),b
 35471  009182  6BF1               	clrf	(_randx+3)& (0+255),b
 35472                           
 35473                           ; BSR set to: 1
 35474  009184  0012               	return		;funcret
 35475  009186                     __end_of_srand:
 35476                           	opt stack 0
 35477                           tosu	equ	0xFFF
 35478                           tosh	equ	0xFFE
 35479                           tosl	equ	0xFFD
 35480                           pclath	equ	0xFFA
 35481                           tblptru	equ	0xFF8
 35482                           tblptrh	equ	0xFF7
 35483                           tblptrl	equ	0xFF6
 35484                           tablat	equ	0xFF5
 35485                           prodh	equ	0xFF4
 35486                           prodl	equ	0xFF3
 35487                           intcon	equ	0xFF2
 35488                           intcon2	equ	0xFF1
 35489                           intcon3	equ	0xFF0
 35490                           indf0	equ	0xFEF
 35491                           postinc0	equ	0xFEE
 35492                           plusw0	equ	0xFEB
 35493                           fsr0h	equ	0xFEA
 35494                           fsr0l	equ	0xFE9
 35495                           wreg	equ	0xFE8
 35496                           postinc1	equ	0xFE6
 35497                           postdec1	equ	0xFE5
 35498                           plusw1	equ	0xFE3
 35499                           fsr1h	equ	0xFE2
 35500                           fsr1l	equ	0xFE1
 35501                           indf2	equ	0xFDF
 35502                           postinc2	equ	0xFDE
 35503                           postdec2	equ	0xFDD
 35504                           plusw2	equ	0xFDB
 35505                           fsr2h	equ	0xFDA
 35506                           fsr2l	equ	0xFD9
 35507                           status	equ	0xFD8
 35508                           
 35509 ;; *************** function _SetCallbackSoftwareTimers *****************
 35510 ;; Defined at:
 35511 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35512 ;; Parameters:    Size  Location     Type
 35513 ;;		None
 35514 ;; Auto vars:     Size  Location     Type
 35515 ;;		None
 35516 ;; Return value:  Size  Location     Type
 35517 ;;                  1    wreg      void 
 35518 ;; Registers used:
 35519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35520 ;; Tracked objects:
 35521 ;;		On entry : 0/0
 35522 ;;		On exit  : 0/0
 35523 ;;		Unchanged: 0/0
 35524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35529 ;;Total ram usage:        0 bytes
 35530 ;; Hardware stack levels used:    1
 35531 ;; Hardware stack levels required when called:    8
 35532 ;; This function calls:
 35533 ;;		_SwTimerSetCallback
 35534 ;; This function is called by:
 35535 ;;		_LORAWAN_Init
 35536 ;; This function uses a non-reentrant model
 35537 ;;
 35538                           
 35539                           	psect	text169
 35540  0069B2                     __ptext169:
 35541                           	opt stack 0
 35542  0069B2                     _SetCallbackSoftwareTimers:
 35543                           	opt stack 21
 35544                           
 35545                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 35546                           
 35547                           ; BSR set to: 1
 35548                           ;incstack = 0
 35549  0069B2  0EDE               	movlw	low _LORAWAN_ReceiveWindow1Callback
 35550  0069B4  0100               	movlb	0	; () banked
 35551  0069B6  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35552  0069B8  0E6D               	movlw	high _LORAWAN_ReceiveWindow1Callback
 35553  0069BA  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35554  0069BC  0E00               	movlw	0
 35555  0069BE  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35556  0069C0  0102               	movlb	2	; () banked
 35557  0069C2  51E2               	movf	(_loRa+226)& (0+255),w,b
 35558  0069C4  EC40  F043         	call	_SwTimerSetCallback
 35559                           
 35560                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 35561  0069C8  0E6A               	movlw	low _LORAWAN_ReceiveWindow2Callback
 35562  0069CA  0100               	movlb	0	; () banked
 35563  0069CC  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35564  0069CE  0E6B               	movlw	high _LORAWAN_ReceiveWindow2Callback
 35565  0069D0  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35566  0069D2  0E00               	movlw	0
 35567  0069D4  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35568  0069D6  0102               	movlb	2	; () banked
 35569  0069D8  51E3               	movf	(_loRa+227)& (0+255),w,b
 35570  0069DA  EC40  F043         	call	_SwTimerSetCallback
 35571                           
 35572                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 35573  0069DE  0EDA               	movlw	low _LORAWAN_LinkCheckCallback
 35574  0069E0  0100               	movlb	0	; () banked
 35575  0069E2  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35576  0069E4  0E4E               	movlw	high _LORAWAN_LinkCheckCallback
 35577  0069E6  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35578  0069E8  0E00               	movlw	0
 35579  0069EA  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35580  0069EC  0102               	movlb	2	; () banked
 35581  0069EE  51E7               	movf	(_loRa+231)& (0+255),w,b
 35582  0069F0  EC40  F043         	call	_SwTimerSetCallback
 35583                           
 35584                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 35585  0069F4  0EDE               	movlw	low _LORAWAN_ReceiveWindow1Callback
 35586  0069F6  0100               	movlb	0	; () banked
 35587  0069F8  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35588  0069FA  0E6D               	movlw	high _LORAWAN_ReceiveWindow1Callback
 35589  0069FC  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35590  0069FE  0E00               	movlw	0
 35591  006A00  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35592  006A02  0102               	movlb	2	; () banked
 35593  006A04  51E4               	movf	(_loRa+228)& (0+255),w,b
 35594  006A06  EC40  F043         	call	_SwTimerSetCallback
 35595                           
 35596                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 35597  006A0A  0E6A               	movlw	low _LORAWAN_ReceiveWindow2Callback
 35598  006A0C  0100               	movlb	0	; () banked
 35599  006A0E  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35600  006A10  0E6B               	movlw	high _LORAWAN_ReceiveWindow2Callback
 35601  006A12  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35602  006A14  0E00               	movlw	0
 35603  006A16  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35604  006A18  0102               	movlb	2	; () banked
 35605  006A1A  51E5               	movf	(_loRa+229)& (0+255),w,b
 35606  006A1C  EC40  F043         	call	_SwTimerSetCallback
 35607                           
 35608                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 35609  006A20  0E30               	movlw	low _AckRetransmissionCallback
 35610  006A22  0100               	movlb	0	; () banked
 35611  006A24  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35612  006A26  0E5D               	movlw	high _AckRetransmissionCallback
 35613  006A28  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35614  006A2A  0E00               	movlw	0
 35615  006A2C  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35616  006A2E  0102               	movlb	2	; () banked
 35617  006A30  51E8               	movf	(_loRa+232)& (0+255),w,b
 35618  006A32  EC40  F043         	call	_SwTimerSetCallback
 35619                           
 35620                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 35621  006A36  0E98               	movlw	low _AutomaticReplyCallback
 35622  006A38  0100               	movlb	0	; () banked
 35623  006A3A  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35624  006A3C  0E8D               	movlw	high _AutomaticReplyCallback
 35625  006A3E  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35626  006A40  0E00               	movlw	0
 35627  006A42  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35628  006A44  0102               	movlb	2	; () banked
 35629  006A46  51E6               	movf	(_loRa+230)& (0+255),w,b
 35630  006A48  EC40  F043         	call	_SwTimerSetCallback
 35631                           
 35632                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 35633  006A4C  0E8A               	movlw	low _UnconfirmedTransmissionCallback
 35634  006A4E  0100               	movlb	0	; () banked
 35635  006A50  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35636  006A52  0E79               	movlw	high _UnconfirmedTransmissionCallback
 35637  006A54  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35638  006A56  0E00               	movlw	0
 35639  006A58  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35640  006A5A  0102               	movlb	2	; () banked
 35641  006A5C  51EA               	movf	(_loRa+234)& (0+255),w,b
 35642  006A5E  EC40  F043         	call	_SwTimerSetCallback
 35643                           
 35644                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 35645  006A62  0E74               	movlw	low _UpdateJoinSuccessState
 35646  006A64  0100               	movlb	0	; () banked
 35647  006A66  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35648  006A68  0E58               	movlw	high _UpdateJoinSuccessState
 35649  006A6A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35650  006A6C  0E00               	movlw	0
 35651  006A6E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35652  006A70  0102               	movlb	2	; () banked
 35653  006A72  51F3               	movf	(_loRa+243)& (0+255),w,b
 35654  006A74  EC40  F043         	call	_SwTimerSetCallback
 35655                           
 35656                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 35657  006A78  0E48               	movlw	low _DutyCycleCallback
 35658  006A7A  0100               	movlb	0	; () banked
 35659  006A7C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35660  006A7E  0E2C               	movlw	high _DutyCycleCallback
 35661  006A80  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35662  006A82  0E00               	movlw	0
 35663  006A84  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35664  006A86  0102               	movlb	2	; () banked
 35665  006A88  51E9               	movf	(_loRa+233)& (0+255),w,b
 35666  006A8A  EC40  F043         	call	_SwTimerSetCallback
 35667  006A8E  0012               	return		;funcret
 35668  006A90                     __end_of_SetCallbackSoftwareTimers:
 35669                           	opt stack 0
 35670                           tosu	equ	0xFFF
 35671                           tosh	equ	0xFFE
 35672                           tosl	equ	0xFFD
 35673                           pclath	equ	0xFFA
 35674                           tblptru	equ	0xFF8
 35675                           tblptrh	equ	0xFF7
 35676                           tblptrl	equ	0xFF6
 35677                           tablat	equ	0xFF5
 35678                           prodh	equ	0xFF4
 35679                           prodl	equ	0xFF3
 35680                           intcon	equ	0xFF2
 35681                           intcon2	equ	0xFF1
 35682                           intcon3	equ	0xFF0
 35683                           indf0	equ	0xFEF
 35684                           postinc0	equ	0xFEE
 35685                           plusw0	equ	0xFEB
 35686                           fsr0h	equ	0xFEA
 35687                           fsr0l	equ	0xFE9
 35688                           wreg	equ	0xFE8
 35689                           postinc1	equ	0xFE6
 35690                           postdec1	equ	0xFE5
 35691                           plusw1	equ	0xFE3
 35692                           fsr1h	equ	0xFE2
 35693                           fsr1l	equ	0xFE1
 35694                           indf2	equ	0xFDF
 35695                           postinc2	equ	0xFDE
 35696                           postdec2	equ	0xFDD
 35697                           plusw2	equ	0xFDB
 35698                           fsr2h	equ	0xFDA
 35699                           fsr2l	equ	0xFD9
 35700                           status	equ	0xFD8
 35701                           
 35702 ;; *************** function _RADIO_ReadRandom *****************
 35703 ;; Defined at:
 35704 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35705 ;; Parameters:    Size  Location     Type
 35706 ;;		None
 35707 ;; Auto vars:     Size  Location     Type
 35708 ;;  retVal          2   15[BANK0 ] unsigned int 
 35709 ;;  i               1   17[BANK0 ] unsigned char 
 35710 ;; Return value:  Size  Location     Type
 35711 ;;                  2   12[BANK0 ] unsigned int 
 35712 ;; Registers used:
 35713 ;;		wreg, status,2, status,0, cstack
 35714 ;; Tracked objects:
 35715 ;;		On entry : 0/0
 35716 ;;		On exit  : 0/0
 35717 ;;		Unchanged: 0/0
 35718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35719 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35720 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35722 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35723 ;;Total ram usage:        6 bytes
 35724 ;; Hardware stack levels used:    1
 35725 ;; Hardware stack levels required when called:   11
 35726 ;; This function calls:
 35727 ;;		_RADIO_RegisterRead
 35728 ;;		_RADIO_RegisterWrite
 35729 ;;		_RADIO_WriteMode
 35730 ;;		_SystemBlockingWaitMs
 35731 ;; This function is called by:
 35732 ;;		_LORAWAN_Init
 35733 ;; This function uses a non-reentrant model
 35734 ;;
 35735                           
 35736                           	psect	text170
 35737  0071F2                     __ptext170:
 35738                           	opt stack 0
 35739  0071F2                     _RADIO_ReadRandom:
 35740                           	opt stack 18
 35741                           
 35742                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 35743                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 35744                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 35745                           
 35746                           ;incstack = 0
 35747  0071F2  0E00               	movlw	0
 35748  0071F4  0100               	movlb	0	; () banked
 35749  0071F6  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 35750  0071F8  0E00               	movlw	0
 35751  0071FA  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 35752                           
 35753                           ; BSR set to: 0
 35754                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 35755  0071FC  0E01               	movlw	1
 35756  0071FE  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35757  007200  0E01               	movlw	1
 35758  007202  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35759  007204  0E00               	movlw	0
 35760  007206  EC28  F030         	call	_RADIO_WriteMode
 35761                           
 35762                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 35763  00720A  0EFF               	movlw	255
 35764  00720C  0100               	movlb	0	; () banked
 35765  00720E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35766  007210  0E11               	movlw	17
 35767  007212  EC55  F047         	call	_RADIO_RegisterWrite
 35768                           
 35769                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 35770  007216  0E01               	movlw	1
 35771  007218  0100               	movlb	0	; () banked
 35772  00721A  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35773  00721C  0E01               	movlw	1
 35774  00721E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35775  007220  0E05               	movlw	5
 35776  007222  EC28  F030         	call	_RADIO_WriteMode
 35777                           
 35778                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 35779  007226  0E00               	movlw	0
 35780  007228  0100               	movlb	0	; () banked
 35781  00722A  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 35782  00722C                     l16883:
 35783                           
 35784                           ; BSR set to: 0
 35785  00722C  0E0F               	movlw	15
 35786  00722E  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 35787  007230  D001               	goto	l673
 35788  007232  D019               	goto	u20590
 35789  007234                     l673:
 35790                           
 35791                           ; BSR set to: 0
 35792                           ;radio_driver_SX1276.c: 1377: {
 35793                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 35794                           
 35795                           ; BSR set to: 0
 35796  007234  0E01               	movlw	1
 35797  007236  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 35798  007238  0E00               	movlw	0
 35799  00723A  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 35800  00723C  0E00               	movlw	0
 35801  00723E  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 35802  007240  0E00               	movlw	0
 35803  007242  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 35804  007244  EC2D  F045         	call	_SystemBlockingWaitMs	;wreg free
 35805                           
 35806                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 35807  007248  0100               	movlb	0	; () banked
 35808  00724A  90D8               	bcf	status,0,c
 35809  00724C  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 35810  00724E  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 35811                           
 35812                           ; BSR set to: 0
 35813                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 35814  007250  0E2C               	movlw	44
 35815  007252  ECA4  F046         	call	_RADIO_RegisterRead
 35816  007256  0100               	movlb	0	; () banked
 35817  007258  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 35818  00725A  0E01               	movlw	1
 35819  00725C  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 35820  00725E  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 35821  007260  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 35822  007262  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 35823  007264  D7E3               	goto	l16883
 35824  007266                     u20590:
 35825                           
 35826                           ; BSR set to: 0
 35827                           ;radio_driver_SX1276.c: 1381: }
 35828                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 35829                           
 35830                           ; BSR set to: 0
 35831  007266  0E01               	movlw	1
 35832  007268  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35833  00726A  0E01               	movlw	1
 35834  00726C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35835  00726E  0E00               	movlw	0
 35836  007270  EC28  F030         	call	_RADIO_WriteMode
 35837                           
 35838                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 35839  007274  0EFF               	movlw	255
 35840  007276  0100               	movlb	0	; () banked
 35841  007278  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35842  00727A  0E12               	movlw	18
 35843  00727C  EC55  F047         	call	_RADIO_RegisterWrite
 35844                           
 35845                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 35846  007280  0E00               	movlw	0
 35847  007282  0100               	movlb	0	; () banked
 35848  007284  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35849  007286  0E11               	movlw	17
 35850  007288  EC55  F047         	call	_RADIO_RegisterWrite
 35851                           
 35852                           ;radio_driver_SX1276.c: 1389: return retVal;
 35853  00728C  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 35854  007290  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 35855  007294  0012               	return	
 35856  007296                     __end_of_RADIO_ReadRandom:
 35857                           	opt stack 0
 35858                           tosu	equ	0xFFF
 35859                           tosh	equ	0xFFE
 35860                           tosl	equ	0xFFD
 35861                           pclath	equ	0xFFA
 35862                           tblptru	equ	0xFF8
 35863                           tblptrh	equ	0xFF7
 35864                           tblptrl	equ	0xFF6
 35865                           tablat	equ	0xFF5
 35866                           prodh	equ	0xFF4
 35867                           prodl	equ	0xFF3
 35868                           intcon	equ	0xFF2
 35869                           intcon2	equ	0xFF1
 35870                           intcon3	equ	0xFF0
 35871                           indf0	equ	0xFEF
 35872                           postinc0	equ	0xFEE
 35873                           plusw0	equ	0xFEB
 35874                           fsr0h	equ	0xFEA
 35875                           fsr0l	equ	0xFE9
 35876                           wreg	equ	0xFE8
 35877                           postinc1	equ	0xFE6
 35878                           postdec1	equ	0xFE5
 35879                           plusw1	equ	0xFE3
 35880                           fsr1h	equ	0xFE2
 35881                           fsr1l	equ	0xFE1
 35882                           indf2	equ	0xFDF
 35883                           postinc2	equ	0xFDE
 35884                           postdec2	equ	0xFDD
 35885                           plusw2	equ	0xFDB
 35886                           fsr2h	equ	0xFDA
 35887                           fsr2l	equ	0xFD9
 35888                           status	equ	0xFD8
 35889                           
 35890 ;; *************** function _LORAWAN_Reset *****************
 35891 ;; Defined at:
 35892 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35893 ;; Parameters:    Size  Location     Type
 35894 ;;  ismBandNew      1    wreg     enum E7280
 35895 ;; Auto vars:     Size  Location     Type
 35896 ;;  ismBandNew      1   81[BANK0 ] enum E7280
 35897 ;; Return value:  Size  Location     Type
 35898 ;;                  1    wreg      void 
 35899 ;; Registers used:
 35900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35901 ;; Tracked objects:
 35902 ;;		On entry : 0/0
 35903 ;;		On exit  : 0/0
 35904 ;;		Unchanged: 0/0
 35905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35907 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35909 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35910 ;;Total ram usage:        1 bytes
 35911 ;; Hardware stack levels used:    1
 35912 ;; Hardware stack levels required when called:   12
 35913 ;; This function calls:
 35914 ;;		_InitDefault433Channels
 35915 ;;		_InitDefault868Channels
 35916 ;;		_LORAWAN_LinkCheckConfigure
 35917 ;;		_RADIO_Init
 35918 ;;		_RADIO_SetLoRaSyncWord
 35919 ;;		_StopAllSoftwareTimers
 35920 ;;		_UpdateMinMaxChDataRate
 35921 ;;		_memset
 35922 ;; This function is called by:
 35923 ;;		_LORAWAN_Init
 35924 ;; This function uses a non-reentrant model
 35925 ;;
 35926                           
 35927                           	psect	text171
 35928  00450C                     __ptext171:
 35929                           	opt stack 0
 35930  00450C                     _LORAWAN_Reset:
 35931                           	opt stack 17
 35932                           
 35933                           ;incstack = 0
 35934                           ;LORAWAN_Reset@ismBandNew stored from wreg
 35935  00450C  0100               	movlb	0	; () banked
 35936  00450E  6FB1               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 35937                           
 35938                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 35939  004510  0102               	movlb	2	; () banked
 35940  004512  05F0               	decf	(_loRa+240)& (0+255),w,b
 35941  004514  B4D8               	btfsc	status,2,c
 35942                           
 35943                           ; BSR set to: 2
 35944                           ;lorawan_eu.c: 151: {
 35945                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 35946  004516  ECB0  F041         	call	_StopAllSoftwareTimers	;wreg free
 35947                           
 35948                           ;lorawan_eu.c: 153: }
 35949                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 35950  00451A  0E34               	movlw	52
 35951  00451C  0102               	movlb	2	; () banked
 35952  00451E  6FF4               	movwf	(_loRa+244)& (0+255),b
 35953                           
 35954                           ; BSR set to: 2
 35955                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 35956  004520  51F4               	movf	(_loRa+244)& (0+255),w,b
 35957  004522  EC47  F049         	call	_RADIO_SetLoRaSyncWord
 35958                           
 35959                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 35960  004526  0E00               	movlw	0
 35961  004528  0102               	movlb	2	; () banked
 35962  00452A  6F02               	movwf	(_loRa+2)& (0+255),b
 35963  00452C  0E00               	movlw	0
 35964  00452E  6F03               	movwf	(_loRa+3)& (0+255),b
 35965  004530  0E00               	movlw	0
 35966  004532  6F04               	movwf	(_loRa+4)& (0+255),b
 35967  004534  0E00               	movlw	0
 35968  004536  6F05               	movwf	(_loRa+5)& (0+255),b
 35969                           
 35970                           ; BSR set to: 2
 35971                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 35972  004538  69DD               	setf	(_loRa+221)& (0+255),b
 35973                           
 35974                           ; BSR set to: 2
 35975                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 35976  00453A  0E00               	movlw	0
 35977  00453C  6FDE               	movwf	(_loRa+222)& (0+255),b
 35978                           
 35979                           ; BSR set to: 2
 35980                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 35981  00453E  0E00               	movlw	0
 35982  004540  6FC8               	movwf	(_loRa+200)& (0+255),b
 35983  004542  0E00               	movlw	0
 35984  004544  6FC9               	movwf	(_loRa+201)& (0+255),b
 35985  004546  0E00               	movlw	0
 35986  004548  6FCA               	movwf	(_loRa+202)& (0+255),b
 35987  00454A  0E00               	movlw	0
 35988  00454C  6FCB               	movwf	(_loRa+203)& (0+255),b
 35989                           
 35990                           ; BSR set to: 2
 35991                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 35992  00454E  0E00               	movlw	0
 35993  004550  6FD5               	movwf	(_loRa+213)& (0+255),b
 35994  004552  0E00               	movlw	0
 35995  004554  6FD4               	movwf	(_loRa+212)& (0+255),b
 35996                           
 35997                           ; BSR set to: 2
 35998                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 35999  004556  0E00               	movlw	0
 36000  004558  6F0A               	movwf	(_loRa+10)& (0+255),b
 36001  00455A  0E00               	movlw	0
 36002  00455C  6F0B               	movwf	(_loRa+11)& (0+255),b
 36003  00455E  0E00               	movlw	0
 36004  004560  6F0C               	movwf	(_loRa+12)& (0+255),b
 36005  004562  0E00               	movlw	0
 36006  004564  6F0D               	movwf	(_loRa+13)& (0+255),b
 36007                           
 36008                           ; BSR set to: 2
 36009                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 36010  004566  0E00               	movlw	0
 36011  004568  6F06               	movwf	(_loRa+6)& (0+255),b
 36012  00456A  0E00               	movlw	0
 36013  00456C  6F07               	movwf	(_loRa+7)& (0+255),b
 36014  00456E  0E00               	movlw	0
 36015  004570  6F08               	movwf	(_loRa+8)& (0+255),b
 36016  004572  0E00               	movlw	0
 36017  004574  6F09               	movwf	(_loRa+9)& (0+255),b
 36018                           
 36019                           ; BSR set to: 2
 36020                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 36021  004576  0E00               	movlw	0
 36022  004578  6FD3               	movwf	(_loRa+211)& (0+255),b
 36023  00457A  0E00               	movlw	0
 36024  00457C  6FD2               	movwf	(_loRa+210)& (0+255),b
 36025                           
 36026                           ; BSR set to: 2
 36027                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 36028  00457E  0E00               	movlw	0
 36029  004580  6FDC               	movwf	(_loRa+220)& (0+255),b
 36030  004582  0E01               	movlw	1
 36031  004584  6FDB               	movwf	(_loRa+219)& (0+255),b
 36032                           
 36033                           ; BSR set to: 2
 36034                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 36035  004586  0E00               	movlw	0
 36036  004588  6FD1               	movwf	(_loRa+209)& (0+255),b
 36037  00458A  0E00               	movlw	0
 36038  00458C  6FD0               	movwf	(_loRa+208)& (0+255),b
 36039                           
 36040                           ; BSR set to: 2
 36041                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 36042  00458E  0E00               	movlw	0
 36043  004590  6FEE               	movwf	(_loRa+238)& (0+255),b
 36044                           
 36045                           ; BSR set to: 2
 36046                           ;lorawan_eu.c: 169: loRa.offset = 0;
 36047  004592  0E00               	movlw	0
 36048  004594  6FEF               	movwf	(_loRa+239)& (0+255),b
 36049                           
 36050                           ; BSR set to: 2
 36051                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 36052  004596  0E00               	movlw	0
 36053  004598  6FC8               	movwf	(_loRa+200)& (0+255),b
 36054  00459A  0E00               	movlw	0
 36055  00459C  6FC9               	movwf	(_loRa+201)& (0+255),b
 36056  00459E  0E00               	movlw	0
 36057  0045A0  6FCA               	movwf	(_loRa+202)& (0+255),b
 36058  0045A2  0E00               	movlw	0
 36059  0045A4  6FCB               	movwf	(_loRa+203)& (0+255),b
 36060                           
 36061                           ; BSR set to: 2
 36062                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 36063  0045A6  9503               	bcf	(_loRa+3)& (0+255),2,b
 36064                           
 36065                           ; BSR set to: 2
 36066                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 36067  0045A8  0E00               	movlw	0
 36068  0045AA  6F02               	movwf	(_loRa+2)& (0+255),b
 36069  0045AC  0E00               	movlw	0
 36070  0045AE  6F03               	movwf	(_loRa+3)& (0+255),b
 36071  0045B0  0E00               	movlw	0
 36072  0045B2  6F04               	movwf	(_loRa+4)& (0+255),b
 36073  0045B4  0E00               	movlw	0
 36074  0045B6  6F05               	movwf	(_loRa+5)& (0+255),b
 36075                           
 36076                           ; BSR set to: 2
 36077                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 36078  0045B8  0E00               	movlw	0
 36079  0045BA  6F01               	movwf	(_loRa+1)& (0+255),b
 36080  0045BC  0E00               	movlw	0
 36081  0045BE  6F00               	movwf	_loRa& (0+255),b
 36082                           
 36083                           ; BSR set to: 2
 36084                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 36085  0045C0  0E07               	movlw	7
 36086  0045C2  6FD7               	movwf	(_loRa+215)& (0+255),b
 36087                           
 36088                           ; BSR set to: 2
 36089                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 36090  0045C4  0E00               	movlw	0
 36091  0045C6  6FD6               	movwf	(_loRa+214)& (0+255),b
 36092                           
 36093                           ; BSR set to: 2
 36094                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 36095  0045C8  0E01               	movlw	1
 36096  0045CA  6FD9               	movwf	(_loRa+217)& (0+255),b
 36097                           
 36098                           ; BSR set to: 2
 36099                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 36100  0045CC  0E01               	movlw	1
 36101  0045CE  6FD8               	movwf	(_loRa+216)& (0+255),b
 36102                           
 36103                           ; BSR set to: 2
 36104                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 36105  0045D0  69E0               	setf	(_loRa+224)& (0+255),b
 36106                           
 36107                           ; BSR set to: 2
 36108                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 36109  0045D2  C0B1  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 36110                           
 36111                           ; BSR set to: 2
 36112                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 36113  0045D6  0E00               	movlw	0
 36114  0045D8  6F12               	movwf	(_loRa+18)& (0+255),b
 36115                           
 36116                           ; BSR set to: 2
 36117                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 36118  0045DA  0E10               	movlw	16
 36119  0045DC  6FED               	movwf	(_loRa+237)& (0+255),b
 36120                           
 36121                           ; BSR set to: 2
 36122                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 36123  0045DE  0100               	movlb	0	; () banked
 36124  0045E0  51B1               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 36125  0045E2  A4D8               	btfss	status,2,c
 36126  0045E4  D01B               	goto	l975
 36127                           
 36128                           ; BSR set to: 0
 36129                           ;lorawan_eu.c: 193: {
 36130                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 36131  0045E6  0EFF               	movlw	low (_radioBuffer+16)
 36132  0045E8  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 36133  0045EA  0E05               	movlw	high (_radioBuffer+16)
 36134  0045EC  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 36135  0045EE  0EA0               	movlw	160
 36136  0045F0  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 36137  0045F2  0E27               	movlw	39
 36138  0045F4  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 36139  0045F6  0EBE               	movlw	190
 36140  0045F8  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 36141  0045FA  0E33               	movlw	51
 36142  0045FC  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 36143  0045FE  EC6D  F023         	call	_RADIO_Init	;wreg free
 36144                           
 36145                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 36146  004602  ECB4  F03A         	call	_InitDefault868Channels	;wreg free
 36147                           
 36148                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 36149  004606  0E00               	movlw	0
 36150  004608  0102               	movlb	2	; () banked
 36151  00460A  6F1C               	movwf	(_loRa+28)& (0+255),b
 36152                           
 36153                           ; BSR set to: 2
 36154                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 36155  00460C  0E08               	movlw	8
 36156  00460E  6F18               	movwf	(_loRa+24)& (0+255),b
 36157  004610  0EE6               	movlw	230
 36158  004612  6F19               	movwf	(_loRa+25)& (0+255),b
 36159  004614  0ED3               	movlw	211
 36160  004616  6F1A               	movwf	(_loRa+26)& (0+255),b
 36161  004618  0E33               	movlw	51
 36162  00461A  D01B               	goto	L25
 36163  00461C                     l975:
 36164                           
 36165                           ;lorawan_eu.c: 201: else
 36166                           ;lorawan_eu.c: 202: {
 36167                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 36168                           
 36169                           ; BSR set to: 2
 36170  00461C  0EFF               	movlw	low (_radioBuffer+16)
 36171  00461E  0100               	movlb	0	; () banked
 36172  004620  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 36173  004622  0E05               	movlw	high (_radioBuffer+16)
 36174  004624  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 36175  004626  0E20               	movlw	32
 36176  004628  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 36177  00462A  0EA2               	movlw	162
 36178  00462C  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 36179  00462E  0ED3               	movlw	211
 36180  004630  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 36181  004632  0E19               	movlw	25
 36182  004634  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 36183  004636  EC6D  F023         	call	_RADIO_Init	;wreg free
 36184                           
 36185                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 36186  00463A  ECF9  F03A         	call	_InitDefault433Channels	;wreg free
 36187                           
 36188                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 36189  00463E  0E00               	movlw	0
 36190  004640  0102               	movlb	2	; () banked
 36191  004642  6F1C               	movwf	(_loRa+28)& (0+255),b
 36192                           
 36193                           ; BSR set to: 2
 36194                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 36195  004644  0E28               	movlw	40
 36196  004646  6F18               	movwf	(_loRa+24)& (0+255),b
 36197  004648  0E76               	movlw	118
 36198  00464A  6F19               	movwf	(_loRa+25)& (0+255),b
 36199  00464C  0EE8               	movlw	232
 36200  00464E  6F1A               	movwf	(_loRa+26)& (0+255),b
 36201  004650  0E19               	movlw	25
 36202  004652                     L25:
 36203  004652  6F1B               	movwf	(_loRa+27)& (0+255),b
 36204                           
 36205                           ; BSR set to: 2
 36206                           ;lorawan_eu.c: 209: }
 36207                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 36208                           
 36209                           ; BSR set to: 2
 36210  004654  0E01               	movlw	1
 36211  004656  6FE1               	movwf	(_loRa+225)& (0+255),b
 36212                           
 36213                           ; BSR set to: 2
 36214                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 36215  004658  0E00               	movlw	0
 36216  00465A  6FDF               	movwf	(_loRa+223)& (0+255),b
 36217                           
 36218                           ; BSR set to: 2
 36219                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 36220  00465C  ECA7  F030         	call	_UpdateMinMaxChDataRate	;wreg free
 36221                           
 36222                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 36223  004660  0E00               	movlw	0
 36224  004662  0102               	movlb	2	; () banked
 36225  004664  6FA6               	movwf	(_loRa+166)& (0+255),b
 36226  004666  0E00               	movlw	0
 36227  004668  6FA5               	movwf	(_loRa+165)& (0+255),b
 36228                           
 36229                           ; BSR set to: 2
 36230                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 36231  00466A  0E1D               	movlw	low (_loRa+29)
 36232  00466C  0100               	movlb	0	; () banked
 36233  00466E  6F60               	movwf	memset@p1& (0+255),b
 36234  004670  0E02               	movlw	high (_loRa+29)
 36235  004672  6F61               	movwf	(memset@p1+1)& (0+255),b
 36236  004674  0E00               	movlw	0
 36237  004676  6F63               	movwf	(memset@c+1)& (0+255),b
 36238  004678  0E00               	movlw	0
 36239  00467A  6F62               	movwf	memset@c& (0+255),b
 36240  00467C  0E00               	movlw	0
 36241  00467E  6F65               	movwf	(memset@n+1)& (0+255),b
 36242  004680  0E69               	movlw	105
 36243  004682  6F64               	movwf	memset@n& (0+255),b
 36244  004684  EC45  F045         	call	_memset	;wreg free
 36245                           
 36246                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 36247  004688  0E03               	movlw	3
 36248  00468A  0102               	movlb	2	; () banked
 36249  00468C  6F95               	movwf	(_loRa+149)& (0+255),b
 36250  00468E  0EE8               	movlw	232
 36251  004690  6F94               	movwf	(_loRa+148)& (0+255),b
 36252                           
 36253                           ; BSR set to: 2
 36254                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 36255  004692  0E07               	movlw	7
 36256  004694  6F97               	movwf	(_loRa+151)& (0+255),b
 36257  004696  0ED0               	movlw	208
 36258  004698  6F96               	movwf	(_loRa+150)& (0+255),b
 36259                           
 36260                           ; BSR set to: 2
 36261                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 36262  00469A  0E13               	movlw	19
 36263  00469C  6F99               	movwf	(_loRa+153)& (0+255),b
 36264  00469E  0E88               	movlw	136
 36265  0046A0  6F98               	movwf	(_loRa+152)& (0+255),b
 36266                           
 36267                           ; BSR set to: 2
 36268                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 36269  0046A2  0E17               	movlw	23
 36270  0046A4  6F9B               	movwf	(_loRa+155)& (0+255),b
 36271  0046A6  0E70               	movlw	112
 36272  0046A8  6F9A               	movwf	(_loRa+154)& (0+255),b
 36273                           
 36274                           ; BSR set to: 2
 36275                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 36276  0046AA  0E07               	movlw	7
 36277  0046AC  6FA1               	movwf	(_loRa+161)& (0+255),b
 36278  0046AE  0ED0               	movlw	208
 36279  0046B0  6FA0               	movwf	(_loRa+160)& (0+255),b
 36280                           
 36281                           ; BSR set to: 2
 36282                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 36283  0046B2  0E20               	movlw	32
 36284  0046B4  6FA3               	movwf	(_loRa+163)& (0+255),b
 36285                           
 36286                           ; BSR set to: 2
 36287                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 36288  0046B6  0E40               	movlw	64
 36289  0046B8  6FA2               	movwf	(_loRa+162)& (0+255),b
 36290                           
 36291                           ; BSR set to: 2
 36292                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 36293  0046BA  0E40               	movlw	64
 36294  0046BC  6F9D               	movwf	(_loRa+157)& (0+255),b
 36295  0046BE  0E00               	movlw	0
 36296  0046C0  6F9C               	movwf	(_loRa+156)& (0+255),b
 36297                           
 36298                           ; BSR set to: 2
 36299                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 36300  0046C2  0E40               	movlw	64
 36301  0046C4  6F9F               	movwf	(_loRa+159)& (0+255),b
 36302  0046C6  0E00               	movlw	0
 36303  0046C8  6F9E               	movwf	(_loRa+158)& (0+255),b
 36304                           
 36305                           ; BSR set to: 2
 36306                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 36307  0046CA  0E00               	movlw	0
 36308  0046CC  0100               	movlb	0	; () banked
 36309  0046CE  6FA7               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 36310  0046D0  0E00               	movlw	0
 36311  0046D2  6FA6               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 36312  0046D4  EC3E  F02A         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 36313  0046D8  0012               	return		;funcret
 36314  0046DA                     __end_of_LORAWAN_Reset:
 36315                           	opt stack 0
 36316                           tosu	equ	0xFFF
 36317                           tosh	equ	0xFFE
 36318                           tosl	equ	0xFFD
 36319                           pclath	equ	0xFFA
 36320                           tblptru	equ	0xFF8
 36321                           tblptrh	equ	0xFF7
 36322                           tblptrl	equ	0xFF6
 36323                           tablat	equ	0xFF5
 36324                           prodh	equ	0xFF4
 36325                           prodl	equ	0xFF3
 36326                           intcon	equ	0xFF2
 36327                           intcon2	equ	0xFF1
 36328                           intcon3	equ	0xFF0
 36329                           indf0	equ	0xFEF
 36330                           postinc0	equ	0xFEE
 36331                           plusw0	equ	0xFEB
 36332                           fsr0h	equ	0xFEA
 36333                           fsr0l	equ	0xFE9
 36334                           wreg	equ	0xFE8
 36335                           postinc1	equ	0xFE6
 36336                           postdec1	equ	0xFE5
 36337                           plusw1	equ	0xFE3
 36338                           fsr1h	equ	0xFE2
 36339                           fsr1l	equ	0xFE1
 36340                           indf2	equ	0xFDF
 36341                           postinc2	equ	0xFDE
 36342                           postdec2	equ	0xFDD
 36343                           plusw2	equ	0xFDB
 36344                           fsr2h	equ	0xFDA
 36345                           fsr2l	equ	0xFD9
 36346                           status	equ	0xFD8
 36347                           
 36348 ;; *************** function _UpdateMinMaxChDataRate *****************
 36349 ;; Defined at:
 36350 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 36351 ;; Parameters:    Size  Location     Type
 36352 ;;		None
 36353 ;; Auto vars:     Size  Location     Type
 36354 ;;  i               1    1[BANK0 ] unsigned char 
 36355 ;; Return value:  Size  Location     Type
 36356 ;;                  1    wreg      void 
 36357 ;; Registers used:
 36358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36359 ;; Tracked objects:
 36360 ;;		On entry : 0/0
 36361 ;;		On exit  : 0/0
 36362 ;;		Unchanged: 0/0
 36363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36367 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36368 ;;Total ram usage:        2 bytes
 36369 ;; Hardware stack levels used:    1
 36370 ;; Hardware stack levels required when called:    7
 36371 ;; This function calls:
 36372 ;;		Nothing
 36373 ;; This function is called by:
 36374 ;;		_LORAWAN_Reset
 36375 ;; This function uses a non-reentrant model
 36376 ;;
 36377                           
 36378                           	psect	text172
 36379  00614E                     __ptext172:
 36380                           	opt stack 0
 36381  00614E                     _UpdateMinMaxChDataRate:
 36382                           	opt stack 21
 36383                           
 36384                           ;lorawan.c: 1065: uint8_t i;
 36385                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 36386                           
 36387                           ;incstack = 0
 36388  00614E  0E07               	movlw	7
 36389  006150  0102               	movlb	2	; () banked
 36390  006152  6FEB               	movwf	(_loRa+235)& (0+255),b
 36391                           
 36392                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 36393  006154  0E00               	movlw	0
 36394  006156  6FEC               	movwf	(_loRa+236)& (0+255),b
 36395                           
 36396                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 36397  006158  0E00               	movlw	0
 36398  00615A  0100               	movlb	0	; () banked
 36399  00615C  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 36400  00615E  D06D               	goto	l1877
 36401  006160                     
 36402                           ; BSR set to: 0
 36403                           ;lorawan.c: 1072: {
 36404                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 36405                           
 36406                           ; BSR set to: 0
 36407  006160  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 36408  006162  0D0E               	mullw	14
 36409  006164  0E05               	movlw	5
 36410  006166  26F3               	addwf	prodl,f,c
 36411  006168  0E00               	movlw	0
 36412  00616A  22F4               	addwfc	prodh,f,c
 36413  00616C  0E00               	movlw	low _Channels
 36414  00616E  24F3               	addwf	prodl,w,c
 36415  006170  6ED9               	movwf	fsr2l,c
 36416  006172  0E04               	movlw	high _Channels
 36417  006174  20F4               	addwfc	prodh,w,c
 36418  006176  6EDA               	movwf	fsr2h,c
 36419  006178  0104               	movlb	4	; () banked
 36420  00617A  50DF               	movf	223,w,c
 36421  00617C  0B0F               	andlw	15
 36422  00617E  0100               	movlb	0	; () banked
 36423  006180  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 36424  006182  0102               	movlb	2	; () banked
 36425  006184  51EB               	movf	(_loRa+235)& (0+255),w,b
 36426  006186  0100               	movlb	0	; () banked
 36427  006188  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 36428  00618A  B0D8               	btfsc	status,0,c
 36429  00618C  D020               	goto	l1879
 36430                           
 36431                           ; BSR set to: 0
 36432  00618E  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 36433  006190  0D0E               	mullw	14
 36434  006192  0E04               	movlw	4
 36435  006194  26F3               	addwf	prodl,f,c
 36436  006196  0E00               	movlw	0
 36437  006198  22F4               	addwfc	prodh,f,c
 36438  00619A  0E00               	movlw	low _Channels
 36439  00619C  24F3               	addwf	prodl,w,c
 36440  00619E  6ED9               	movwf	fsr2l,c
 36441  0061A0  0E04               	movlw	high _Channels
 36442  0061A2  20F4               	addwfc	prodh,w,c
 36443  0061A4  6EDA               	movwf	fsr2h,c
 36444  0061A6  04DE               	decf	postinc2,w,c
 36445  0061A8  A4D8               	btfss	status,2,c
 36446  0061AA  D011               	goto	l1879
 36447                           
 36448                           ; BSR set to: 0
 36449                           ;lorawan.c: 1074: {
 36450                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 36451  0061AC  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 36452  0061AE  0D0E               	mullw	14
 36453  0061B0  0E05               	movlw	5
 36454  0061B2  26F3               	addwf	prodl,f,c
 36455  0061B4  0E00               	movlw	0
 36456  0061B6  22F4               	addwfc	prodh,f,c
 36457  0061B8  0E00               	movlw	low _Channels
 36458  0061BA  24F3               	addwf	prodl,w,c
 36459  0061BC  6ED9               	movwf	fsr2l,c
 36460  0061BE  0E04               	movlw	high _Channels
 36461  0061C0  20F4               	addwfc	prodh,w,c
 36462  0061C2  6EDA               	movwf	fsr2h,c
 36463  0061C4  0104               	movlb	4	; () banked
 36464  0061C6  50DF               	movf	223,w,c
 36465  0061C8  0B0F               	andlw	15
 36466  0061CA  0102               	movlb	2	; () banked
 36467  0061CC  6FEB               	movwf	(_loRa+235)& (0+255),b
 36468  0061CE                     l1879:
 36469                           
 36470                           ;lorawan.c: 1076: }
 36471                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 36472  0061CE  0100               	movlb	0	; () banked
 36473  0061D0  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 36474  0061D2  0D0E               	mullw	14
 36475  0061D4  0E05               	movlw	5
 36476  0061D6  26F3               	addwf	prodl,f,c
 36477  0061D8  0E00               	movlw	0
 36478  0061DA  22F4               	addwfc	prodh,f,c
 36479  0061DC  0E00               	movlw	low _Channels
 36480  0061DE  24F3               	addwf	prodl,w,c
 36481  0061E0  6ED9               	movwf	fsr2l,c
 36482  0061E2  0E04               	movlw	high _Channels
 36483  0061E4  20F4               	addwfc	prodh,w,c
 36484  0061E6  6EDA               	movwf	fsr2h,c
 36485  0061E8  0104               	movlb	4	; () banked
 36486  0061EA  38DF               	swapf	223,w,c
 36487  0061EC  0B0F               	andlw	15
 36488  0061EE  0102               	movlb	2	; () banked
 36489  0061F0  61EC               	cpfslt	(_loRa+236)& (0+255),b
 36490  0061F2  D021               	goto	l1880
 36491                           
 36492                           ; BSR set to: 2
 36493  0061F4  0100               	movlb	0	; () banked
 36494  0061F6  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 36495  0061F8  0D0E               	mullw	14
 36496  0061FA  0E04               	movlw	4
 36497  0061FC  26F3               	addwf	prodl,f,c
 36498  0061FE  0E00               	movlw	0
 36499  006200  22F4               	addwfc	prodh,f,c
 36500  006202  0E00               	movlw	low _Channels
 36501  006204  24F3               	addwf	prodl,w,c
 36502  006206  6ED9               	movwf	fsr2l,c
 36503  006208  0E04               	movlw	high _Channels
 36504  00620A  20F4               	addwfc	prodh,w,c
 36505  00620C  6EDA               	movwf	fsr2h,c
 36506  00620E  04DE               	decf	postinc2,w,c
 36507  006210  A4D8               	btfss	status,2,c
 36508  006212  D011               	goto	l1880
 36509                           
 36510                           ; BSR set to: 0
 36511                           ;lorawan.c: 1078: {
 36512                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 36513  006214  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 36514  006216  0D0E               	mullw	14
 36515  006218  0E05               	movlw	5
 36516  00621A  26F3               	addwf	prodl,f,c
 36517  00621C  0E00               	movlw	0
 36518  00621E  22F4               	addwfc	prodh,f,c
 36519  006220  0E00               	movlw	low _Channels
 36520  006222  24F3               	addwf	prodl,w,c
 36521  006224  6ED9               	movwf	fsr2l,c
 36522  006226  0E04               	movlw	high _Channels
 36523  006228  20F4               	addwfc	prodh,w,c
 36524  00622A  6EDA               	movwf	fsr2h,c
 36525  00622C  0104               	movlb	4	; () banked
 36526  00622E  38DF               	swapf	223,w,c
 36527  006230  0B0F               	andlw	15
 36528  006232  0102               	movlb	2	; () banked
 36529  006234  6FEC               	movwf	(_loRa+236)& (0+255),b
 36530  006236                     l1880:
 36531                           
 36532                           ; BSR set to: 2
 36533  006236  0100               	movlb	0	; () banked
 36534  006238  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 36535  00623A                     l1877:
 36536                           
 36537                           ; BSR set to: 0
 36538                           
 36539                           ; BSR set to: 0
 36540  00623A  0102               	movlb	2	; () banked
 36541  00623C  51ED               	movf	(_loRa+237)& (0+255),w,b
 36542  00623E  0100               	movlb	0	; () banked
 36543  006240  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 36544  006242  B0D8               	btfsc	status,0,c
 36545  006244  0012               	return	
 36546  006246  D78C               	goto	l1878
 36547  006248                     __end_of_UpdateMinMaxChDataRate:
 36548                           	opt stack 0
 36549                           tosu	equ	0xFFF
 36550                           tosh	equ	0xFFE
 36551                           tosl	equ	0xFFD
 36552                           pclath	equ	0xFFA
 36553                           tblptru	equ	0xFF8
 36554                           tblptrh	equ	0xFF7
 36555                           tblptrl	equ	0xFF6
 36556                           tablat	equ	0xFF5
 36557                           prodh	equ	0xFF4
 36558                           prodl	equ	0xFF3
 36559                           intcon	equ	0xFF2
 36560                           intcon2	equ	0xFF1
 36561                           intcon3	equ	0xFF0
 36562                           indf0	equ	0xFEF
 36563                           postinc0	equ	0xFEE
 36564                           plusw0	equ	0xFEB
 36565                           fsr0h	equ	0xFEA
 36566                           fsr0l	equ	0xFE9
 36567                           wreg	equ	0xFE8
 36568                           postinc1	equ	0xFE6
 36569                           postdec1	equ	0xFE5
 36570                           plusw1	equ	0xFE3
 36571                           fsr1h	equ	0xFE2
 36572                           fsr1l	equ	0xFE1
 36573                           indf2	equ	0xFDF
 36574                           postinc2	equ	0xFDE
 36575                           postdec2	equ	0xFDD
 36576                           plusw2	equ	0xFDB
 36577                           fsr2h	equ	0xFDA
 36578                           fsr2l	equ	0xFD9
 36579                           status	equ	0xFD8
 36580                           
 36581 ;; *************** function _StopAllSoftwareTimers *****************
 36582 ;; Defined at:
 36583 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36584 ;; Parameters:    Size  Location     Type
 36585 ;;		None
 36586 ;; Auto vars:     Size  Location     Type
 36587 ;;		None
 36588 ;; Return value:  Size  Location     Type
 36589 ;;                  1    wreg      void 
 36590 ;; Registers used:
 36591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36592 ;; Tracked objects:
 36593 ;;		On entry : 0/0
 36594 ;;		On exit  : 0/0
 36595 ;;		Unchanged: 0/0
 36596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36601 ;;Total ram usage:        0 bytes
 36602 ;; Hardware stack levels used:    1
 36603 ;; Hardware stack levels required when called:    8
 36604 ;; This function calls:
 36605 ;;		_SwTimerStop
 36606 ;; This function is called by:
 36607 ;;		_LORAWAN_Init
 36608 ;;		_LORAWAN_Reset
 36609 ;; This function uses a non-reentrant model
 36610 ;;
 36611                           
 36612                           	psect	text173
 36613  008360                     __ptext173:
 36614                           	opt stack 0
 36615  008360                     _StopAllSoftwareTimers:
 36616                           	opt stack 21
 36617                           
 36618                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 36619                           
 36620                           ; BSR set to: 0
 36621                           ;incstack = 0
 36622  008360  0102               	movlb	2	; () banked
 36623  008362  51E2               	movf	(_loRa+226)& (0+255),w,b
 36624  008364  ECB8  F046         	call	_SwTimerStop
 36625                           
 36626                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 36627  008368  0102               	movlb	2	; () banked
 36628  00836A  51E3               	movf	(_loRa+227)& (0+255),w,b
 36629  00836C  ECB8  F046         	call	_SwTimerStop
 36630                           
 36631                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 36632  008370  0102               	movlb	2	; () banked
 36633  008372  51E7               	movf	(_loRa+231)& (0+255),w,b
 36634  008374  ECB8  F046         	call	_SwTimerStop
 36635                           
 36636                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 36637  008378  0102               	movlb	2	; () banked
 36638  00837A  51E4               	movf	(_loRa+228)& (0+255),w,b
 36639  00837C  ECB8  F046         	call	_SwTimerStop
 36640                           
 36641                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 36642  008380  0102               	movlb	2	; () banked
 36643  008382  51E5               	movf	(_loRa+229)& (0+255),w,b
 36644  008384  ECB8  F046         	call	_SwTimerStop
 36645                           
 36646                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 36647  008388  0102               	movlb	2	; () banked
 36648  00838A  51E8               	movf	(_loRa+232)& (0+255),w,b
 36649  00838C  ECB8  F046         	call	_SwTimerStop
 36650                           
 36651                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 36652  008390  0102               	movlb	2	; () banked
 36653  008392  51E6               	movf	(_loRa+230)& (0+255),w,b
 36654  008394  ECB8  F046         	call	_SwTimerStop
 36655                           
 36656                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 36657  008398  0102               	movlb	2	; () banked
 36658  00839A  51EA               	movf	(_loRa+234)& (0+255),w,b
 36659  00839C  ECB8  F046         	call	_SwTimerStop
 36660                           
 36661                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 36662  0083A0  0102               	movlb	2	; () banked
 36663  0083A2  51F3               	movf	(_loRa+243)& (0+255),w,b
 36664  0083A4  ECB8  F046         	call	_SwTimerStop
 36665                           
 36666                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 36667  0083A8  0102               	movlb	2	; () banked
 36668  0083AA  51E9               	movf	(_loRa+233)& (0+255),w,b
 36669  0083AC  ECB8  F046         	call	_SwTimerStop
 36670  0083B0  0012               	return		;funcret
 36671  0083B2                     __end_of_StopAllSoftwareTimers:
 36672                           	opt stack 0
 36673                           tosu	equ	0xFFF
 36674                           tosh	equ	0xFFE
 36675                           tosl	equ	0xFFD
 36676                           pclath	equ	0xFFA
 36677                           tblptru	equ	0xFF8
 36678                           tblptrh	equ	0xFF7
 36679                           tblptrl	equ	0xFF6
 36680                           tablat	equ	0xFF5
 36681                           prodh	equ	0xFF4
 36682                           prodl	equ	0xFF3
 36683                           intcon	equ	0xFF2
 36684                           intcon2	equ	0xFF1
 36685                           intcon3	equ	0xFF0
 36686                           indf0	equ	0xFEF
 36687                           postinc0	equ	0xFEE
 36688                           plusw0	equ	0xFEB
 36689                           fsr0h	equ	0xFEA
 36690                           fsr0l	equ	0xFE9
 36691                           wreg	equ	0xFE8
 36692                           postinc1	equ	0xFE6
 36693                           postdec1	equ	0xFE5
 36694                           plusw1	equ	0xFE3
 36695                           fsr1h	equ	0xFE2
 36696                           fsr1l	equ	0xFE1
 36697                           indf2	equ	0xFDF
 36698                           postinc2	equ	0xFDE
 36699                           postdec2	equ	0xFDD
 36700                           plusw2	equ	0xFDB
 36701                           fsr2h	equ	0xFDA
 36702                           fsr2l	equ	0xFD9
 36703                           status	equ	0xFD8
 36704                           
 36705 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 36706 ;; Defined at:
 36707 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36708 ;; Parameters:    Size  Location     Type
 36709 ;;  syncWord        1    wreg     unsigned char 
 36710 ;; Auto vars:     Size  Location     Type
 36711 ;;  syncWord        1    0[BANK0 ] unsigned char 
 36712 ;; Return value:  Size  Location     Type
 36713 ;;                  1    wreg      void 
 36714 ;; Registers used:
 36715 ;;		wreg
 36716 ;; Tracked objects:
 36717 ;;		On entry : 0/0
 36718 ;;		On exit  : 0/0
 36719 ;;		Unchanged: 0/0
 36720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36724 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36725 ;;Total ram usage:        1 bytes
 36726 ;; Hardware stack levels used:    1
 36727 ;; Hardware stack levels required when called:    7
 36728 ;; This function calls:
 36729 ;;		Nothing
 36730 ;; This function is called by:
 36731 ;;		_LORAWAN_Reset
 36732 ;;		_ConfigureRadio
 36733 ;; This function uses a non-reentrant model
 36734 ;;
 36735                           
 36736                           	psect	text174
 36737  00928E                     __ptext174:
 36738                           	opt stack 0
 36739  00928E                     _RADIO_SetLoRaSyncWord:
 36740                           	opt stack 19
 36741                           
 36742                           ;incstack = 0
 36743                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 36744  00928E  0100               	movlb	0	; () banked
 36745  009290  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 36746                           
 36747                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 36748  009292  C060  F12F         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 36749  009296  0012               	return		;funcret
 36750  009298                     __end_of_RADIO_SetLoRaSyncWord:
 36751                           	opt stack 0
 36752                           tosu	equ	0xFFF
 36753                           tosh	equ	0xFFE
 36754                           tosl	equ	0xFFD
 36755                           pclath	equ	0xFFA
 36756                           tblptru	equ	0xFF8
 36757                           tblptrh	equ	0xFF7
 36758                           tblptrl	equ	0xFF6
 36759                           tablat	equ	0xFF5
 36760                           prodh	equ	0xFF4
 36761                           prodl	equ	0xFF3
 36762                           intcon	equ	0xFF2
 36763                           intcon2	equ	0xFF1
 36764                           intcon3	equ	0xFF0
 36765                           indf0	equ	0xFEF
 36766                           postinc0	equ	0xFEE
 36767                           plusw0	equ	0xFEB
 36768                           fsr0h	equ	0xFEA
 36769                           fsr0l	equ	0xFE9
 36770                           wreg	equ	0xFE8
 36771                           postinc1	equ	0xFE6
 36772                           postdec1	equ	0xFE5
 36773                           plusw1	equ	0xFE3
 36774                           fsr1h	equ	0xFE2
 36775                           fsr1l	equ	0xFE1
 36776                           indf2	equ	0xFDF
 36777                           postinc2	equ	0xFDE
 36778                           postdec2	equ	0xFDD
 36779                           plusw2	equ	0xFDB
 36780                           fsr2h	equ	0xFDA
 36781                           fsr2l	equ	0xFD9
 36782                           status	equ	0xFD8
 36783                           
 36784 ;; *************** function _RADIO_Init *****************
 36785 ;; Defined at:
 36786 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36787 ;; Parameters:    Size  Location     Type
 36788 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 36789 ;;		 -> radioBuffer(271), 
 36790 ;;  frequency       4   27[BANK0 ] unsigned long 
 36791 ;; Auto vars:     Size  Location     Type
 36792 ;;		None
 36793 ;; Return value:  Size  Location     Type
 36794 ;;                  1    wreg      void 
 36795 ;; Registers used:
 36796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36797 ;; Tracked objects:
 36798 ;;		On entry : 0/0
 36799 ;;		On exit  : 0/0
 36800 ;;		Unchanged: 0/0
 36801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36802 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36804 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36805 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36806 ;;Total ram usage:        7 bytes
 36807 ;; Hardware stack levels used:    1
 36808 ;; Hardware stack levels required when called:   11
 36809 ;; This function calls:
 36810 ;;		_RADIO_RegisterRead
 36811 ;;		_RADIO_RegisterWrite
 36812 ;;		_RADIO_Reset
 36813 ;;		_RADIO_WriteFrequency
 36814 ;;		_RADIO_WriteMode
 36815 ;;		_SwTimerCreate
 36816 ;;		_SwTimerSetCallback
 36817 ;;		_SwTimerStop
 36818 ;; This function is called by:
 36819 ;;		_LORAWAN_Init
 36820 ;;		_LORAWAN_Reset
 36821 ;; This function uses a non-reentrant model
 36822 ;;
 36823                           
 36824                           	psect	text175
 36825  0046DA                     __ptext175:
 36826                           	opt stack 0
 36827  0046DA                     _RADIO_Init:
 36828                           	opt stack 18
 36829                           
 36830                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 36831                           
 36832                           ;incstack = 0
 36833  0046DA  C07B  F121         	movff	RADIO_Init@frequency,_RadioConfiguration
 36834  0046DE  C07C  F122         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 36835  0046E2  C07D  F123         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 36836  0046E6  C07E  F124         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 36837                           
 36838                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 36839  0046EA  0EA8               	movlw	168
 36840  0046EC  0101               	movlb	1	; () banked
 36841  0046EE  6F25               	movwf	(_RadioConfiguration+4)& (0+255),b
 36842  0046F0  0E61               	movlw	97
 36843  0046F2  6F26               	movwf	(_RadioConfiguration+5)& (0+255),b
 36844  0046F4  0E00               	movlw	0
 36845  0046F6  6F27               	movwf	(_RadioConfiguration+6)& (0+255),b
 36846  0046F8  0E00               	movlw	0
 36847  0046FA  6F28               	movwf	(_RadioConfiguration+7)& (0+255),b
 36848                           
 36849                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 36850  0046FC  0E50               	movlw	80
 36851  0046FE  6F29               	movwf	(_RadioConfiguration+8)& (0+255),b
 36852  004700  0EC3               	movlw	195
 36853  004702  6F2A               	movwf	(_RadioConfiguration+9)& (0+255),b
 36854  004704  0E00               	movlw	0
 36855  004706  6F2B               	movwf	(_RadioConfiguration+10)& (0+255),b
 36856  004708  0E00               	movlw	0
 36857  00470A  6F2C               	movwf	(_RadioConfiguration+11)& (0+255),b
 36858                           
 36859                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 36860  00470C  0E01               	movlw	1
 36861  00470E  6F39               	movwf	(_RadioConfiguration+24)& (0+255),b
 36862                           
 36863                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 36864  004710  0E07               	movlw	7
 36865  004712  6F3B               	movwf	(_RadioConfiguration+26)& (0+255),b
 36866                           
 36867                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 36868  004714  0E01               	movlw	1
 36869  004716  6F3C               	movwf	(_RadioConfiguration+27)& (0+255),b
 36870                           
 36871                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 36872  004718  0E01               	movlw	1
 36873  00471A  6F42               	movwf	(_RadioConfiguration+33)& (0+255),b
 36874                           
 36875                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 36876  00471C  0E00               	movlw	0
 36877  00471E  6F43               	movwf	(_RadioConfiguration+34)& (0+255),b
 36878                           
 36879                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 36880  004720  0E00               	movlw	0
 36881  004722  6F2E               	movwf	(_RadioConfiguration+13)& (0+255),b
 36882  004724  0E08               	movlw	8
 36883  004726  6F2D               	movwf	(_RadioConfiguration+12)& (0+255),b
 36884                           
 36885                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 36886  004728  0E0C               	movlw	12
 36887  00472A  6F3A               	movwf	(_RadioConfiguration+25)& (0+255),b
 36888                           
 36889                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 36890  00472C  0E01               	movlw	1
 36891  00472E  6F3D               	movwf	(_RadioConfiguration+28)& (0+255),b
 36892                           
 36893                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 36894  004730  0E00               	movlw	0
 36895  004732  6F3E               	movwf	(_RadioConfiguration+29)& (0+255),b
 36896                           
 36897                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 36898  004734  0E00               	movlw	0
 36899  004736  6F41               	movwf	(_RadioConfiguration+32)& (0+255),b
 36900                           
 36901                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 36902  004738  0EC1               	movlw	193
 36903  00473A  6F30               	movwf	(_RadioConfiguration+15)& (0+255),b
 36904                           
 36905                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 36906  00473C  0E94               	movlw	148
 36907  00473E  6F31               	movwf	(_RadioConfiguration+16)& (0+255),b
 36908                           
 36909                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 36910  004740  0EC1               	movlw	193
 36911  004742  6F32               	movwf	(_RadioConfiguration+17)& (0+255),b
 36912                           
 36913                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 36914  004744  0E03               	movlw	3
 36915  004746  6F38               	movwf	(_RadioConfiguration+23)& (0+255),b
 36916                           
 36917                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 36918  004748  0E34               	movlw	52
 36919  00474A  6F2F               	movwf	(_RadioConfiguration+14)& (0+255),b
 36920                           
 36921                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 36922  00474C  0E00               	movlw	0
 36923  00474E  6F44               	movwf	(_RadioConfiguration+35)& (0+255),b
 36924                           
 36925                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 36926  004750  0E00               	movlw	0
 36927  004752  6F45               	movwf	(_RadioConfiguration+36)& (0+255),b
 36928                           
 36929                           ; BSR set to: 1
 36930                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 36931  004754  C079  F146         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 36932  004758  C07A  F147         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 36933                           
 36934                           ; BSR set to: 1
 36935                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 36936  00475C  0E00               	movlw	0
 36937  00475E  6F40               	movwf	(_RadioConfiguration+31)& (0+255),b
 36938  004760  0E00               	movlw	0
 36939  004762  6F3F               	movwf	(_RadioConfiguration+30)& (0+255),b
 36940                           
 36941                           ; BSR set to: 1
 36942                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 36943  004764  0E80               	movlw	128
 36944  004766  6F53               	movwf	(_RadioConfiguration+50)& (0+255),b
 36945                           
 36946                           ; BSR set to: 1
 36947                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 36948  004768  0E98               	movlw	152
 36949  00476A  6F4B               	movwf	(_RadioConfiguration+42)& (0+255),b
 36950  00476C  0E3A               	movlw	58
 36951  00476E  6F4C               	movwf	(_RadioConfiguration+43)& (0+255),b
 36952  004770  0E00               	movlw	0
 36953  004772  6F4D               	movwf	(_RadioConfiguration+44)& (0+255),b
 36954  004774  0E00               	movlw	0
 36955  004776  6F4E               	movwf	(_RadioConfiguration+45)& (0+255),b
 36956                           
 36957                           ; BSR set to: 1
 36958                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 36959  004778  0E02               	movlw	2
 36960  00477A  6F54               	movwf	(_RadioConfiguration+51)& (0+255),b
 36961                           
 36962                           ; BSR set to: 1
 36963                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 36964  00477C  0E0B               	movlw	11
 36965  00477E  6F55               	movwf	(_RadioConfiguration+52)& (0+255),b
 36966                           
 36967                           ; BSR set to: 1
 36968                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 36969  004780  0E12               	movlw	18
 36970  004782  6F56               	movwf	(_RadioConfiguration+53)& (0+255),b
 36971                           
 36972                           ; BSR set to: 1
 36973                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 36974  004784  0E00               	movlw	0
 36975  004786  6F50               	movwf	(_RadioConfiguration+47)& (0+255),b
 36976  004788  0E00               	movlw	0
 36977  00478A  6F51               	movwf	(_RadioConfiguration+48)& (0+255),b
 36978                           
 36979                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 36980  00478C  514F               	movf	(_RadioConfiguration+46)& (0+255),w,b
 36981  00478E  A4D8               	btfss	status,2,c
 36982  004790  D026               	goto	l441
 36983                           
 36984                           ; BSR set to: 1
 36985                           ;radio_driver_SX1276.c: 457: {
 36986                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 36987  004792  EC29  F03A         	call	_SwTimerCreate	;wreg free
 36988  004796  0101               	movlb	1	; () banked
 36989  004798  6F48               	movwf	(_RadioConfiguration+39)& (0+255),b
 36990                           
 36991                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 36992  00479A  EC29  F03A         	call	_SwTimerCreate	;wreg free
 36993  00479E  0101               	movlb	1	; () banked
 36994  0047A0  6F49               	movwf	(_RadioConfiguration+40)& (0+255),b
 36995                           
 36996                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 36997  0047A2  EC29  F03A         	call	_SwTimerCreate	;wreg free
 36998  0047A6  0101               	movlb	1	; () banked
 36999  0047A8  6F4A               	movwf	(_RadioConfiguration+41)& (0+255),b
 37000                           
 37001                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 37002  0047AA  0E8C               	movlw	low _RADIO_RxFSKTimeout
 37003  0047AC  0100               	movlb	0	; () banked
 37004  0047AE  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 37005  0047B0  0E88               	movlw	high _RADIO_RxFSKTimeout
 37006  0047B2  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 37007  0047B4  0E00               	movlw	0
 37008  0047B6  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 37009  0047B8  0101               	movlb	1	; () banked
 37010  0047BA  5149               	movf	(_RadioConfiguration+40)& (0+255),w,b
 37011  0047BC  EC40  F043         	call	_SwTimerSetCallback
 37012                           
 37013                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 37014  0047C0  0EE2               	movlw	low _RADIO_WatchdogTimeout
 37015  0047C2  0100               	movlb	0	; () banked
 37016  0047C4  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 37017  0047C6  0E84               	movlw	high _RADIO_WatchdogTimeout
 37018  0047C8  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 37019  0047CA  0E00               	movlw	0
 37020  0047CC  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 37021  0047CE  0101               	movlb	1	; () banked
 37022  0047D0  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
 37023  0047D2  EC40  F043         	call	_SwTimerSetCallback
 37024                           
 37025                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 37026  0047D6  0E01               	movlw	1
 37027  0047D8  0101               	movlb	1	; () banked
 37028  0047DA  6F4F               	movwf	(_RadioConfiguration+46)& (0+255),b
 37029                           
 37030                           ;radio_driver_SX1276.c: 466: }
 37031  0047DC  D00B               	goto	l442
 37032  0047DE                     l441:
 37033                           
 37034                           ; BSR set to: 1
 37035                           ;radio_driver_SX1276.c: 467: else
 37036                           ;radio_driver_SX1276.c: 468: {
 37037                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 37038                           
 37039                           ; BSR set to: 1
 37040  0047DE  5148               	movf	(_RadioConfiguration+39)& (0+255),w,b
 37041  0047E0  ECB8  F046         	call	_SwTimerStop
 37042                           
 37043                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 37044  0047E4  0101               	movlb	1	; () banked
 37045  0047E6  5149               	movf	(_RadioConfiguration+40)& (0+255),w,b
 37046  0047E8  ECB8  F046         	call	_SwTimerStop
 37047                           
 37048                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 37049  0047EC  0101               	movlb	1	; () banked
 37050  0047EE  514A               	movf	(_RadioConfiguration+41)& (0+255),w,b
 37051  0047F0  ECB8  F046         	call	_SwTimerStop
 37052  0047F4                     l442:
 37053                           
 37054                           ;radio_driver_SX1276.c: 472: }
 37055                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 37056  0047F4  ECB7  F042         	call	_RADIO_Reset	;wreg free
 37057                           
 37058                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 37059  0047F8  0E00               	movlw	0
 37060  0047FA  0100               	movlb	0	; () banked
 37061  0047FC  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 37062  0047FE  0E01               	movlw	1
 37063  004800  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 37064  004802  0E01               	movlw	1
 37065  004804  EC28  F030         	call	_RADIO_WriteMode
 37066                           
 37067                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 37068  004808  C121  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 37069  00480C  C122  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 37070  004810  C123  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 37071  004814  C124  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 37072  004818  EC0D  F033         	call	_RADIO_WriteFrequency	;wreg free
 37073                           
 37074                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 37075  00481C  0E42               	movlw	66
 37076  00481E  0100               	movlb	0	; () banked
 37077  004820  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37078  004822  0E3B               	movlw	59
 37079  004824  EC55  F047         	call	_RADIO_RegisterWrite
 37080  004828                     
 37081                           ;radio_driver_SX1276.c: 490: ;
 37082  004828  0E3B               	movlw	59
 37083  00482A  ECA4  F046         	call	_RADIO_RegisterRead
 37084  00482E  0100               	movlb	0	; () banked
 37085  004830  6F7F               	movwf	??_RADIO_Init& (0+255),b
 37086  004832  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 37087  004834  D7F9               	goto	l444
 37088                           
 37089                           ; BSR set to: 0
 37090                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 37091                           
 37092                           ; BSR set to: 0
 37093  004836  0E23               	movlw	35
 37094  004838  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37095  00483A  0E0C               	movlw	12
 37096  00483C  EC55  F047         	call	_RADIO_RegisterWrite
 37097                           
 37098                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 37099  004840  0E1E               	movlw	30
 37100  004842  0100               	movlb	0	; () banked
 37101  004844  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37102  004846  0E0D               	movlw	13
 37103  004848  EC55  F047         	call	_RADIO_RegisterWrite
 37104                           
 37105                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 37106  00484C  0EAA               	movlw	170
 37107  00484E  0100               	movlb	0	; () banked
 37108  004850  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37109  004852  0E1F               	movlw	31
 37110  004854  EC55  F047         	call	_RADIO_RegisterWrite
 37111                           
 37112                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 37113  004858  0E8F               	movlw	143
 37114  00485A  0100               	movlb	0	; () banked
 37115  00485C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37116  00485E  0E35               	movlw	53
 37117  004860  EC55  F047         	call	_RADIO_RegisterWrite
 37118                           
 37119                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 37120  004864  0EFF               	movlw	255
 37121  004866  0100               	movlb	0	; () banked
 37122  004868  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37123  00486A  0E32               	movlw	50
 37124  00486C  EC55  F047         	call	_RADIO_RegisterWrite
 37125                           
 37126                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 37127  004870  0E40               	movlw	64
 37128  004872  0100               	movlb	0	; () banked
 37129  004874  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37130  004876  0E31               	movlw	49
 37131  004878  EC55  F047         	call	_RADIO_RegisterWrite
 37132                           
 37133                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 37134  00487C  0E01               	movlw	1
 37135  00487E  0100               	movlb	0	; () banked
 37136  004880  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 37137  004882  0E01               	movlw	1
 37138  004884  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 37139  004886  0E00               	movlw	0
 37140  004888  EC28  F030         	call	_RADIO_WriteMode
 37141                           
 37142                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 37143  00488C  0EFF               	movlw	255
 37144  00488E  0100               	movlb	0	; () banked
 37145  004890  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37146  004892  0E23               	movlw	35
 37147  004894  EC55  F047         	call	_RADIO_RegisterWrite
 37148                           
 37149                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 37150  004898  0E42               	movlw	66
 37151  00489A  ECA4  F046         	call	_RADIO_RegisterRead
 37152  00489E  0101               	movlb	1	; () banked
 37153  0048A0  6F52               	movwf	(_RadioConfiguration+49)& (0+255),b
 37154                           
 37155                           ; BSR set to: 1
 37156  0048A2  0012               	return		;funcret
 37157  0048A4                     __end_of_RADIO_Init:
 37158                           	opt stack 0
 37159                           tosu	equ	0xFFF
 37160                           tosh	equ	0xFFE
 37161                           tosl	equ	0xFFD
 37162                           pclath	equ	0xFFA
 37163                           tblptru	equ	0xFF8
 37164                           tblptrh	equ	0xFF7
 37165                           tblptrl	equ	0xFF6
 37166                           tablat	equ	0xFF5
 37167                           prodh	equ	0xFF4
 37168                           prodl	equ	0xFF3
 37169                           intcon	equ	0xFF2
 37170                           intcon2	equ	0xFF1
 37171                           intcon3	equ	0xFF0
 37172                           indf0	equ	0xFEF
 37173                           postinc0	equ	0xFEE
 37174                           plusw0	equ	0xFEB
 37175                           fsr0h	equ	0xFEA
 37176                           fsr0l	equ	0xFE9
 37177                           wreg	equ	0xFE8
 37178                           postinc1	equ	0xFE6
 37179                           postdec1	equ	0xFE5
 37180                           plusw1	equ	0xFE3
 37181                           fsr1h	equ	0xFE2
 37182                           fsr1l	equ	0xFE1
 37183                           indf2	equ	0xFDF
 37184                           postinc2	equ	0xFDE
 37185                           postdec2	equ	0xFDD
 37186                           plusw2	equ	0xFDB
 37187                           fsr2h	equ	0xFDA
 37188                           fsr2l	equ	0xFD9
 37189                           status	equ	0xFD8
 37190                           
 37191 ;; *************** function _SwTimerSetCallback *****************
 37192 ;; Defined at:
 37193 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37194 ;; Parameters:    Size  Location     Type
 37195 ;;  timerId         1    wreg     unsigned char 
 37196 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 37197 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 37198 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 37199 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 37200 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 37201 ;; Auto vars:     Size  Location     Type
 37202 ;;  timerId         1    3[BANK0 ] unsigned char 
 37203 ;; Return value:  Size  Location     Type
 37204 ;;                  1    wreg      void 
 37205 ;; Registers used:
 37206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37207 ;; Tracked objects:
 37208 ;;		On entry : 0/0
 37209 ;;		On exit  : 0/0
 37210 ;;		Unchanged: 0/0
 37211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37212 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37215 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37216 ;;Total ram usage:        4 bytes
 37217 ;; Hardware stack levels used:    1
 37218 ;; Hardware stack levels required when called:    7
 37219 ;; This function calls:
 37220 ;;		Nothing
 37221 ;; This function is called by:
 37222 ;;		_RADIO_Init
 37223 ;;		_SetCallbackSoftwareTimers
 37224 ;; This function uses a non-reentrant model
 37225 ;;
 37226                           
 37227                           	psect	text176
 37228  008680                     __ptext176:
 37229                           	opt stack 0
 37230  008680                     _SwTimerSetCallback:
 37231                           	opt stack 21
 37232                           
 37233                           ; BSR set to: 1
 37234                           ;incstack = 0
 37235                           ;SwTimerSetCallback@timerId stored from wreg
 37236  008680  0100               	movlb	0	; () banked
 37237  008682  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 37238                           
 37239                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 37240  008684  0100               	movlb	0	; () banked
 37241  008686  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 37242  008688  0D08               	mullw	8
 37243  00868A  0E06               	movlw	6
 37244  00868C  26F3               	addwf	prodl,f,c
 37245  00868E  0E00               	movlw	0
 37246  008690  22F4               	addwfc	prodh,f,c
 37247  008692  0E00               	movlw	low _swTimers
 37248  008694  24F3               	addwf	prodl,w,c
 37249  008696  6ED9               	movwf	fsr2l,c
 37250  008698  0E03               	movlw	high _swTimers
 37251  00869A  20F4               	addwfc	prodh,w,c
 37252  00869C  6EDA               	movwf	fsr2h,c
 37253  00869E  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 37254  0086A2  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 37255                           
 37256                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 37257  0086A6  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 37258  0086A8  0D08               	mullw	8
 37259  0086AA  0E05               	movlw	5
 37260  0086AC  26F3               	addwf	prodl,f,c
 37261  0086AE  0E00               	movlw	0
 37262  0086B0  22F4               	addwfc	prodh,f,c
 37263  0086B2  0E00               	movlw	low _swTimers
 37264  0086B4  24F3               	addwf	prodl,w,c
 37265  0086B6  6ED9               	movwf	fsr2l,c
 37266  0086B8  0E03               	movlw	high _swTimers
 37267  0086BA  20F4               	addwfc	prodh,w,c
 37268  0086BC  6EDA               	movwf	fsr2h,c
 37269  0086BE  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 37270                           
 37271                           ; BSR set to: 0
 37272  0086C2  0012               	return		;funcret
 37273  0086C4                     __end_of_SwTimerSetCallback:
 37274                           	opt stack 0
 37275                           tosu	equ	0xFFF
 37276                           tosh	equ	0xFFE
 37277                           tosl	equ	0xFFD
 37278                           pclath	equ	0xFFA
 37279                           tblptru	equ	0xFF8
 37280                           tblptrh	equ	0xFF7
 37281                           tblptrl	equ	0xFF6
 37282                           tablat	equ	0xFF5
 37283                           prodh	equ	0xFF4
 37284                           prodl	equ	0xFF3
 37285                           intcon	equ	0xFF2
 37286                           intcon2	equ	0xFF1
 37287                           intcon3	equ	0xFF0
 37288                           indf0	equ	0xFEF
 37289                           postinc0	equ	0xFEE
 37290                           plusw0	equ	0xFEB
 37291                           fsr0h	equ	0xFEA
 37292                           fsr0l	equ	0xFE9
 37293                           wreg	equ	0xFE8
 37294                           postinc1	equ	0xFE6
 37295                           postdec1	equ	0xFE5
 37296                           plusw1	equ	0xFE3
 37297                           fsr1h	equ	0xFE2
 37298                           fsr1l	equ	0xFE1
 37299                           indf2	equ	0xFDF
 37300                           postinc2	equ	0xFDE
 37301                           postdec2	equ	0xFDD
 37302                           plusw2	equ	0xFDB
 37303                           fsr2h	equ	0xFDA
 37304                           fsr2l	equ	0xFD9
 37305                           status	equ	0xFD8
 37306                           
 37307 ;; *************** function _RADIO_WriteMode *****************
 37308 ;; Defined at:
 37309 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 37310 ;; Parameters:    Size  Location     Type
 37311 ;;  newMode         1    wreg     enum E7718
 37312 ;;  newModulatio    1    5[BANK0 ] enum E6984
 37313 ;;  blocking        1    6[BANK0 ] unsigned char 
 37314 ;; Auto vars:     Size  Location     Type
 37315 ;;  newMode         1   10[BANK0 ] enum E7718
 37316 ;;  opMode          1   11[BANK0 ] unsigned char 
 37317 ;;  currentMode     1    9[BANK0 ] enum E7718
 37318 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 37319 ;;  currentModul    1    7[BANK0 ] enum E6984
 37320 ;; Return value:  Size  Location     Type
 37321 ;;                  1    wreg      void 
 37322 ;; Registers used:
 37323 ;;		wreg, status,2, status,0, cstack
 37324 ;; Tracked objects:
 37325 ;;		On entry : 0/0
 37326 ;;		On exit  : 0/0
 37327 ;;		Unchanged: 0/0
 37328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37330 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37332 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37333 ;;Total ram usage:        7 bytes
 37334 ;; Hardware stack levels used:    1
 37335 ;; Hardware stack levels required when called:   10
 37336 ;; This function calls:
 37337 ;;		_HALDIO5PinValue
 37338 ;;		_RADIO_RegisterRead
 37339 ;;		_RADIO_RegisterWrite
 37340 ;;		_SystemBlockingWaitMs
 37341 ;; This function is called by:
 37342 ;;		_RADIO_Init
 37343 ;;		_RADIO_WriteConfiguration
 37344 ;;		_RADIO_Transmit
 37345 ;;		_RADIO_ReceiveStart
 37346 ;;		_RADIO_ReceiveStop
 37347 ;;		_RADIO_RxDone
 37348 ;;		_RADIO_FSKPayloadReady
 37349 ;;		_RADIO_RxTimeout
 37350 ;;		_RADIO_TxDone
 37351 ;;		_RADIO_FSKPacketSent
 37352 ;;		_RADIO_ReadRandom
 37353 ;;		_RADIO_RxFSKTimeout
 37354 ;;		_RADIO_WatchdogTimeout
 37355 ;;		_RADIO_StopCW
 37356 ;; This function uses a non-reentrant model
 37357 ;;
 37358                           
 37359                           	psect	text177
 37360  006050                     __ptext177:
 37361                           	opt stack 0
 37362  006050                     _RADIO_WriteMode:
 37363                           	opt stack 18
 37364                           
 37365                           ; BSR set to: 0
 37366                           ;incstack = 0
 37367                           ;RADIO_WriteMode@newMode stored from wreg
 37368  006050  0100               	movlb	0	; () banked
 37369  006052  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 37370                           
 37371                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 37372                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 37373                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 37374                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 37375                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 37376                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 37377  006054  0100               	movlb	0	; () banked
 37378  006056  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 37379  006058  A4D8               	btfss	status,2,c
 37380  00605A  D008               	goto	l387
 37381                           
 37382                           ; BSR set to: 0
 37383  00605C  0E06               	movlw	6
 37384  00605E  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 37385  006060  B4D8               	btfsc	status,2,c
 37386  006062  0012               	return	
 37387                           
 37388                           ; BSR set to: 0
 37389  006064  0E07               	movlw	7
 37390  006066  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 37391  006068  B4D8               	btfsc	status,2,c
 37392  00606A  0012               	return	
 37393  00606C                     l387:
 37394                           
 37395                           ; BSR set to: 0
 37396                           ;radio_driver_SX1276.c: 159: }
 37397                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 37398                           
 37399                           ; BSR set to: 0
 37400  00606C  0E07               	movlw	7
 37401  00606E  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 37402                           
 37403                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 37404  006070  0E01               	movlw	1
 37405  006072  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 37406                           
 37407                           ; BSR set to: 0
 37408                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 37409  006074  0E01               	movlw	1
 37410  006076  ECA4  F046         	call	_RADIO_RegisterRead
 37411  00607A  0100               	movlb	0	; () banked
 37412  00607C  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 37413                           
 37414                           ; BSR set to: 0
 37415                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 37416  00607E  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 37417  006080  D002               	goto	l391
 37418                           
 37419                           ; BSR set to: 0
 37420                           ;radio_driver_SX1276.c: 168: {
 37421                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 37422  006082  0E01               	movlw	1
 37423  006084  D001               	goto	L26
 37424  006086                     l391:
 37425                           
 37426                           ; BSR set to: 0
 37427                           ;radio_driver_SX1276.c: 171: else
 37428                           ;radio_driver_SX1276.c: 172: {
 37429                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 37430                           
 37431                           ; BSR set to: 0
 37432  006086  0E00               	movlw	0
 37433  006088                     L26:
 37434  006088  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 37435                           
 37436                           ; BSR set to: 0
 37437                           ;radio_driver_SX1276.c: 174: }
 37438                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 37439                           
 37440                           ; BSR set to: 0
 37441  00608A  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 37442  00608C  0B07               	andlw	7
 37443  00608E  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 37444                           
 37445                           ; BSR set to: 0
 37446                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 37447  006090  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 37448  006092  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 37449  006094  B4D8               	btfsc	status,2,c
 37450  006096  D01B               	goto	l393
 37451                           
 37452                           ; BSR set to: 0
 37453                           ;radio_driver_SX1276.c: 181: {
 37454                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 37455  006098  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 37456  00609A  B4D8               	btfsc	status,2,c
 37457  00609C  D009               	goto	l394
 37458                           
 37459                           ; BSR set to: 0
 37460                           ;radio_driver_SX1276.c: 184: {
 37461                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 37462  00609E  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 37463  0060A0  0BF8               	andlw	248
 37464  0060A2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37465  0060A4  0E01               	movlw	1
 37466  0060A6  EC55  F047         	call	_RADIO_RegisterWrite
 37467                           
 37468                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 37469  0060AA  0E00               	movlw	0
 37470  0060AC  0100               	movlb	0	; () banked
 37471  0060AE  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 37472  0060B0                     l394:
 37473                           
 37474                           ; BSR set to: 0
 37475                           ;radio_driver_SX1276.c: 188: }
 37476                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 37477                           
 37478                           ; BSR set to: 0
 37479  0060B0  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 37480  0060B2  A4D8               	btfss	status,2,c
 37481  0060B4  D003               	goto	l395
 37482                           
 37483                           ; BSR set to: 0
 37484                           ;radio_driver_SX1276.c: 191: {
 37485                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 37486  0060B6  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 37487  0060B8  0B78               	andlw	120
 37488  0060BA  D003               	goto	L27
 37489  0060BC                     l395:
 37490                           
 37491                           ; BSR set to: 0
 37492                           ;radio_driver_SX1276.c: 195: else
 37493                           ;radio_driver_SX1276.c: 196: {
 37494                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 37495                           
 37496                           ; BSR set to: 0
 37497  0060BC  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 37498  0060BE  0B78               	andlw	120
 37499  0060C0  0980               	iorlw	128
 37500  0060C2                     L27:
 37501  0060C2  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 37502                           
 37503                           ; BSR set to: 0
 37504                           ;radio_driver_SX1276.c: 199: }
 37505                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 37506                           
 37507                           ; BSR set to: 0
 37508  0060C4  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 37509  0060C8  0E01               	movlw	1
 37510  0060CA  EC55  F047         	call	_RADIO_RegisterWrite
 37511  0060CE                     l393:
 37512                           
 37513                           ;radio_driver_SX1276.c: 201: }
 37514                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 37515  0060CE  0100               	movlb	0	; () banked
 37516  0060D0  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 37517  0060D2  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 37518  0060D4  B4D8               	btfsc	status,2,c
 37519  0060D6  0012               	return	
 37520                           
 37521                           ; BSR set to: 0
 37522                           ;radio_driver_SX1276.c: 208: {
 37523                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 37524  0060D8  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 37525  0060DA  B4D8               	btfsc	status,2,c
 37526  0060DC  D015               	goto	l398
 37527                           
 37528                           ; BSR set to: 0
 37529  0060DE  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 37530  0060E0  A4D8               	btfss	status,2,c
 37531  0060E2  D012               	goto	l398
 37532                           
 37533                           ; BSR set to: 0
 37534                           ;radio_driver_SX1276.c: 212: {
 37535                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 37536  0060E4  0E41               	movlw	65
 37537  0060E6  ECA4  F046         	call	_RADIO_RegisterRead
 37538  0060EA  0100               	movlb	0	; () banked
 37539  0060EC  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 37540                           
 37541                           ; BSR set to: 0
 37542                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 37543  0060EE  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 37544  0060F0  A4D8               	btfss	status,2,c
 37545  0060F2  D003               	goto	l399
 37546                           
 37547                           ; BSR set to: 0
 37548                           ;radio_driver_SX1276.c: 215: {
 37549                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 37550  0060F4  0E30               	movlw	48
 37551  0060F6  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 37552                           
 37553                           ;radio_driver_SX1276.c: 218: }
 37554  0060F8  D002               	goto	l400
 37555  0060FA                     l399:
 37556                           
 37557                           ; BSR set to: 0
 37558                           ;radio_driver_SX1276.c: 219: else
 37559                           ;radio_driver_SX1276.c: 220: {
 37560                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 37561                           
 37562                           ; BSR set to: 0
 37563  0060FA  0ECF               	movlw	207
 37564  0060FC  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 37565  0060FE                     l400:
 37566                           
 37567                           ; BSR set to: 0
 37568                           ;radio_driver_SX1276.c: 223: }
 37569                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 37570                           
 37571                           ; BSR set to: 0
 37572  0060FE  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 37573  006102  0E41               	movlw	65
 37574  006104  EC55  F047         	call	_RADIO_RegisterWrite
 37575  006108                     l398:
 37576                           
 37577                           ;radio_driver_SX1276.c: 225: }
 37578                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 37579  006108  0EF8               	movlw	248
 37580  00610A  0100               	movlb	0	; () banked
 37581  00610C  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 37582                           
 37583                           ; BSR set to: 0
 37584                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 37585  00610E  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 37586  006110  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 37587                           
 37588                           ; BSR set to: 0
 37589                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 37590  006112  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 37591  006116  0E01               	movlw	1
 37592  006118  EC55  F047         	call	_RADIO_RegisterWrite
 37593                           
 37594                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 37595  00611C  0100               	movlb	0	; () banked
 37596  00611E  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 37597  006120  A4D8               	btfss	status,2,c
 37598  006122  0012               	return	
 37599                           
 37600                           ; BSR set to: 0
 37601                           ;radio_driver_SX1276.c: 234: {
 37602                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 37603  006124  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 37604  006126  B4D8               	btfsc	status,2,c
 37605  006128  D006               	goto	l402
 37606  00612A                     u15270:
 37607                           
 37608                           ; BSR set to: 0
 37609                           
 37610                           ;radio_driver_SX1276.c: 238: ;
 37611                           
 37612                           ; BSR set to: 0
 37613                           
 37614                           ; BSR set to: 0
 37615                           ;radio_driver_SX1276.c: 236: {
 37616                           ;radio_driver_SX1276.c: 237: while (HALDIO5PinValue() == 0)
 37617  00612A  ECEC  F048         	call	_HALDIO5PinValue	;wreg free
 37618  00612E  0900               	iorlw	0
 37619  006130  A4D8               	btfss	status,2,c
 37620  006132  0012               	return	
 37621  006134  D7FA               	goto	u15270
 37622  006136                     l402:
 37623                           
 37624                           ;radio_driver_SX1276.c: 240: else
 37625                           ;radio_driver_SX1276.c: 241: {
 37626                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 37627  006136  0E01               	movlw	1
 37628  006138  0100               	movlb	0	; () banked
 37629  00613A  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 37630  00613C  0E00               	movlw	0
 37631  00613E  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 37632  006140  0E00               	movlw	0
 37633  006142  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 37634  006144  0E00               	movlw	0
 37635  006146  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 37636  006148  EC2D  F045         	call	_SystemBlockingWaitMs	;wreg free
 37637  00614C  0012               	return	
 37638  00614E                     __end_of_RADIO_WriteMode:
 37639                           	opt stack 0
 37640                           tosu	equ	0xFFF
 37641                           tosh	equ	0xFFE
 37642                           tosl	equ	0xFFD
 37643                           pclath	equ	0xFFA
 37644                           tblptru	equ	0xFF8
 37645                           tblptrh	equ	0xFF7
 37646                           tblptrl	equ	0xFF6
 37647                           tablat	equ	0xFF5
 37648                           prodh	equ	0xFF4
 37649                           prodl	equ	0xFF3
 37650                           intcon	equ	0xFF2
 37651                           intcon2	equ	0xFF1
 37652                           intcon3	equ	0xFF0
 37653                           indf0	equ	0xFEF
 37654                           postinc0	equ	0xFEE
 37655                           plusw0	equ	0xFEB
 37656                           fsr0h	equ	0xFEA
 37657                           fsr0l	equ	0xFE9
 37658                           wreg	equ	0xFE8
 37659                           postinc1	equ	0xFE6
 37660                           postdec1	equ	0xFE5
 37661                           plusw1	equ	0xFE3
 37662                           fsr1h	equ	0xFE2
 37663                           fsr1l	equ	0xFE1
 37664                           indf2	equ	0xFDF
 37665                           postinc2	equ	0xFDE
 37666                           postdec2	equ	0xFDD
 37667                           plusw2	equ	0xFDB
 37668                           fsr2h	equ	0xFDA
 37669                           fsr2l	equ	0xFD9
 37670                           status	equ	0xFD8
 37671                           
 37672 ;; *************** function _RADIO_RegisterRead *****************
 37673 ;; Defined at:
 37674 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 37675 ;; Parameters:    Size  Location     Type
 37676 ;;  reg             1    wreg     unsigned char 
 37677 ;; Auto vars:     Size  Location     Type
 37678 ;;  reg             1    2[BANK0 ] unsigned char 
 37679 ;;  readValue       1    3[BANK0 ] unsigned char 
 37680 ;; Return value:  Size  Location     Type
 37681 ;;                  1    wreg      unsigned char 
 37682 ;; Registers used:
 37683 ;;		wreg, status,2, status,0, cstack
 37684 ;; Tracked objects:
 37685 ;;		On entry : 0/0
 37686 ;;		On exit  : 0/0
 37687 ;;		Unchanged: 0/0
 37688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37690 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37692 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37693 ;;Total ram usage:        2 bytes
 37694 ;; Hardware stack levels used:    1
 37695 ;; Hardware stack levels required when called:    9
 37696 ;; This function calls:
 37697 ;;		_HALSPICSAssert
 37698 ;;		_HALSPICSDeassert
 37699 ;;		_HALSPISend
 37700 ;; This function is called by:
 37701 ;;		_RADIO_WriteMode
 37702 ;;		_RADIO_WritePower
 37703 ;;		_RADIO_Init
 37704 ;;		_RADIO_WriteConfiguration
 37705 ;;		_RADIO_Transmit
 37706 ;;		_RADIO_RxDone
 37707 ;;		_RADIO_FSKPayloadReady
 37708 ;;		_RADIO_FSKPacketSent
 37709 ;;		_RADIO_FHSSChangeChannel
 37710 ;;		_RADIO_DIO0
 37711 ;;		_RADIO_DIO1
 37712 ;;		_RADIO_DIO2
 37713 ;;		_RADIO_DIO3
 37714 ;;		_RADIO_DIO4
 37715 ;;		_RADIO_DIO5
 37716 ;;		_RADIO_ReadRandom
 37717 ;;		_RADIO_RxFSKTimeout
 37718 ;; This function uses a non-reentrant model
 37719 ;;
 37720                           
 37721                           	psect	text178
 37722  008D48                     __ptext178:
 37723                           	opt stack 0
 37724  008D48                     _RADIO_RegisterRead:
 37725                           	opt stack 18
 37726                           
 37727                           ;incstack = 0
 37728                           ;RADIO_RegisterRead@reg stored from wreg
 37729  008D48  0100               	movlb	0	; () banked
 37730  008D4A  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 37731                           
 37732                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 37733                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 37734  008D4C  0100               	movlb	0	; () banked
 37735  008D4E  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 37736                           
 37737                           ; BSR set to: 0
 37738                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 37739  008D50  EC7C  F049         	call	_HALSPICSAssert	;wreg free
 37740                           
 37741                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 37742  008D54  0100               	movlb	0	; () banked
 37743  008D56  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 37744  008D58  ECDF  F048         	call	_HALSPISend
 37745                           
 37746                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 37747  008D5C  0EFF               	movlw	255
 37748  008D5E  ECDF  F048         	call	_HALSPISend
 37749  008D62  0100               	movlb	0	; () banked
 37750  008D64  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 37751                           
 37752                           ; BSR set to: 0
 37753                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 37754  008D66  EC7A  F049         	call	_HALSPICSDeassert	;wreg free
 37755                           
 37756                           ;radio_driver_SX1276.c: 142: return readValue;
 37757  008D6A  0100               	movlb	0	; () banked
 37758  008D6C  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 37759  008D6E  0012               	return	
 37760  008D70                     __end_of_RADIO_RegisterRead:
 37761                           	opt stack 0
 37762                           tosu	equ	0xFFF
 37763                           tosh	equ	0xFFE
 37764                           tosl	equ	0xFFD
 37765                           pclath	equ	0xFFA
 37766                           tblptru	equ	0xFF8
 37767                           tblptrh	equ	0xFF7
 37768                           tblptrl	equ	0xFF6
 37769                           tablat	equ	0xFF5
 37770                           prodh	equ	0xFF4
 37771                           prodl	equ	0xFF3
 37772                           intcon	equ	0xFF2
 37773                           intcon2	equ	0xFF1
 37774                           intcon3	equ	0xFF0
 37775                           indf0	equ	0xFEF
 37776                           postinc0	equ	0xFEE
 37777                           plusw0	equ	0xFEB
 37778                           fsr0h	equ	0xFEA
 37779                           fsr0l	equ	0xFE9
 37780                           wreg	equ	0xFE8
 37781                           postinc1	equ	0xFE6
 37782                           postdec1	equ	0xFE5
 37783                           plusw1	equ	0xFE3
 37784                           fsr1h	equ	0xFE2
 37785                           fsr1l	equ	0xFE1
 37786                           indf2	equ	0xFDF
 37787                           postinc2	equ	0xFDE
 37788                           postdec2	equ	0xFDD
 37789                           plusw2	equ	0xFDB
 37790                           fsr2h	equ	0xFDA
 37791                           fsr2l	equ	0xFD9
 37792                           status	equ	0xFD8
 37793                           
 37794 ;; *************** function _HALDIO5PinValue *****************
 37795 ;; Defined at:
 37796 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37797 ;; Parameters:    Size  Location     Type
 37798 ;;		None
 37799 ;; Auto vars:     Size  Location     Type
 37800 ;;		None
 37801 ;; Return value:  Size  Location     Type
 37802 ;;                  1    wreg      unsigned char 
 37803 ;; Registers used:
 37804 ;;		wreg
 37805 ;; Tracked objects:
 37806 ;;		On entry : 0/0
 37807 ;;		On exit  : 0/0
 37808 ;;		Unchanged: 0/0
 37809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37814 ;;Total ram usage:        0 bytes
 37815 ;; Hardware stack levels used:    1
 37816 ;; Hardware stack levels required when called:    7
 37817 ;; This function calls:
 37818 ;;		Nothing
 37819 ;; This function is called by:
 37820 ;;		_RADIO_WriteMode
 37821 ;; This function uses a non-reentrant model
 37822 ;;
 37823                           
 37824                           	psect	text179
 37825  0091D8                     __ptext179:
 37826                           	opt stack 0
 37827  0091D8                     _HALDIO5PinValue:
 37828                           	opt stack 20
 37829                           
 37830                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 37831                           
 37832                           ; BSR set to: 0
 37833                           ;incstack = 0
 37834  0091D8  A081               	btfss	3969,0,c	;volatile
 37835  0091DA  D002               	goto	u14800
 37836  0091DC  0E01               	movlw	1
 37837  0091DE  0012               	return	
 37838  0091E0                     u14800:
 37839  0091E0  0E00               	movlw	0
 37840  0091E2  0012               	return	
 37841  0091E4                     __end_of_HALDIO5PinValue:
 37842                           	opt stack 0
 37843                           tosu	equ	0xFFF
 37844                           tosh	equ	0xFFE
 37845                           tosl	equ	0xFFD
 37846                           pclath	equ	0xFFA
 37847                           tblptru	equ	0xFF8
 37848                           tblptrh	equ	0xFF7
 37849                           tblptrl	equ	0xFF6
 37850                           tablat	equ	0xFF5
 37851                           prodh	equ	0xFF4
 37852                           prodl	equ	0xFF3
 37853                           intcon	equ	0xFF2
 37854                           intcon2	equ	0xFF1
 37855                           intcon3	equ	0xFF0
 37856                           indf0	equ	0xFEF
 37857                           postinc0	equ	0xFEE
 37858                           plusw0	equ	0xFEB
 37859                           fsr0h	equ	0xFEA
 37860                           fsr0l	equ	0xFE9
 37861                           wreg	equ	0xFE8
 37862                           postinc1	equ	0xFE6
 37863                           postdec1	equ	0xFE5
 37864                           plusw1	equ	0xFE3
 37865                           fsr1h	equ	0xFE2
 37866                           fsr1l	equ	0xFE1
 37867                           indf2	equ	0xFDF
 37868                           postinc2	equ	0xFDE
 37869                           postdec2	equ	0xFDD
 37870                           plusw2	equ	0xFDB
 37871                           fsr2h	equ	0xFDA
 37872                           fsr2l	equ	0xFD9
 37873                           status	equ	0xFD8
 37874                           
 37875 ;; *************** function _RADIO_WriteFrequency *****************
 37876 ;; Defined at:
 37877 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 37878 ;; Parameters:    Size  Location     Type
 37879 ;;  frequency       4   13[BANK0 ] unsigned long 
 37880 ;; Auto vars:     Size  Location     Type
 37881 ;;  num             4   21[BANK0 ] unsigned long 
 37882 ;;  num_mod         4   17[BANK0 ] unsigned long 
 37883 ;; Return value:  Size  Location     Type
 37884 ;;                  1    wreg      void 
 37885 ;; Registers used:
 37886 ;;		wreg, status,2, status,0, cstack
 37887 ;; Tracked objects:
 37888 ;;		On entry : 0/0
 37889 ;;		On exit  : 0/0
 37890 ;;		Unchanged: 0/0
 37891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37892 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37893 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37895 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37896 ;;Total ram usage:       12 bytes
 37897 ;; Hardware stack levels used:    1
 37898 ;; Hardware stack levels required when called:   10
 37899 ;; This function calls:
 37900 ;;		_RADIO_RegisterWrite
 37901 ;;		___lldiv
 37902 ;;		___llmod
 37903 ;; This function is called by:
 37904 ;;		_RADIO_Init
 37905 ;;		_RADIO_WriteConfiguration
 37906 ;;		_RADIO_FHSSChangeChannel
 37907 ;; This function uses a non-reentrant model
 37908 ;;
 37909                           
 37910                           	psect	text180
 37911  00661A                     __ptext180:
 37912                           	opt stack 0
 37913  00661A                     _RADIO_WriteFrequency:
 37914                           	opt stack 17
 37915                           
 37916                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 37917                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 37918                           
 37919                           ;incstack = 0
 37920  00661A  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 37921  00661E  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 37922  006622  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 37923  006626  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 37924  00662A  0E09               	movlw	9
 37925  00662C  0100               	movlb	0	; () banked
 37926  00662E  6F64               	movwf	___lldiv@divisor& (0+255),b
 37927  006630  0E3D               	movlw	61
 37928  006632  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37929  006634  0E00               	movlw	0
 37930  006636  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37931  006638  0E00               	movlw	0
 37932  00663A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37933  00663C  ECC4  F03B         	call	___lldiv	;wreg free
 37934  006640  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 37935  006644  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 37936  006648  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 37937  00664C  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 37938                           
 37939                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 37940  006650  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 37941  006654  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 37942  006658  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 37943  00665C  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 37944  006660  0E09               	movlw	9
 37945  006662  0100               	movlb	0	; () banked
 37946  006664  6F64               	movwf	___llmod@divisor& (0+255),b
 37947  006666  0E3D               	movlw	61
 37948  006668  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 37949  00666A  0E00               	movlw	0
 37950  00666C  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 37951  00666E  0E00               	movlw	0
 37952  006670  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 37953  006672  EC0F  F03E         	call	___llmod	;wreg free
 37954  006676  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 37955  00667A  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 37956  00667E  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 37957  006682  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 37958                           
 37959                           ;radio_driver_SX1276.c: 277: num <<= (8);
 37960  006686  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 37961  00668A  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 37962  00668E  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 37963  006692  0100               	movlb	0	; () banked
 37964  006694  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 37965                           
 37966                           ; BSR set to: 0
 37967                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 37968  006696  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 37969  00669A  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 37970  00669E  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 37971  0066A2  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 37972                           
 37973                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 37974  0066A4  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 37975  0066A8  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 37976  0066AC  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 37977  0066B0  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 37978  0066B4  0E09               	movlw	9
 37979  0066B6  6F64               	movwf	___lldiv@divisor& (0+255),b
 37980  0066B8  0E3D               	movlw	61
 37981  0066BA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37982  0066BC  0E00               	movlw	0
 37983  0066BE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37984  0066C0  0E00               	movlw	0
 37985  0066C2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37986  0066C4  ECC4  F03B         	call	___lldiv	;wreg free
 37987  0066C8  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 37988  0066CC  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 37989  0066D0  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 37990  0066D4  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 37991                           
 37992                           ;radio_driver_SX1276.c: 283: num += num_mod;
 37993  0066D8  0100               	movlb	0	; () banked
 37994  0066DA  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 37995  0066DC  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 37996  0066DE  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 37997  0066E0  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 37998  0066E2  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 37999  0066E4  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 38000  0066E6  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 38001  0066E8  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 38002                           
 38003                           ; BSR set to: 0
 38004                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 38005  0066EA  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 38006  0066EE  0E06               	movlw	6
 38007  0066F0  EC55  F047         	call	_RADIO_RegisterWrite
 38008                           
 38009                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 38010  0066F4  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 38011  0066F8  0E07               	movlw	7
 38012  0066FA  EC55  F047         	call	_RADIO_RegisterWrite
 38013                           
 38014                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 38015  0066FE  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 38016  006702  0E08               	movlw	8
 38017  006704  EC55  F047         	call	_RADIO_RegisterWrite
 38018  006708  0012               	return		;funcret
 38019  00670A                     __end_of_RADIO_WriteFrequency:
 38020                           	opt stack 0
 38021                           tosu	equ	0xFFF
 38022                           tosh	equ	0xFFE
 38023                           tosl	equ	0xFFD
 38024                           pclath	equ	0xFFA
 38025                           tblptru	equ	0xFF8
 38026                           tblptrh	equ	0xFF7
 38027                           tblptrl	equ	0xFF6
 38028                           tablat	equ	0xFF5
 38029                           prodh	equ	0xFF4
 38030                           prodl	equ	0xFF3
 38031                           intcon	equ	0xFF2
 38032                           intcon2	equ	0xFF1
 38033                           intcon3	equ	0xFF0
 38034                           indf0	equ	0xFEF
 38035                           postinc0	equ	0xFEE
 38036                           plusw0	equ	0xFEB
 38037                           fsr0h	equ	0xFEA
 38038                           fsr0l	equ	0xFE9
 38039                           wreg	equ	0xFE8
 38040                           postinc1	equ	0xFE6
 38041                           postdec1	equ	0xFE5
 38042                           plusw1	equ	0xFE3
 38043                           fsr1h	equ	0xFE2
 38044                           fsr1l	equ	0xFE1
 38045                           indf2	equ	0xFDF
 38046                           postinc2	equ	0xFDE
 38047                           postdec2	equ	0xFDD
 38048                           plusw2	equ	0xFDB
 38049                           fsr2h	equ	0xFDA
 38050                           fsr2l	equ	0xFD9
 38051                           status	equ	0xFD8
 38052                           
 38053 ;; *************** function ___llmod *****************
 38054 ;; Defined at:
 38055 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 38056 ;; Parameters:    Size  Location     Type
 38057 ;;  dividend        4    0[BANK0 ] unsigned long 
 38058 ;;  divisor         4    4[BANK0 ] unsigned long 
 38059 ;; Auto vars:     Size  Location     Type
 38060 ;;  counter         1    8[BANK0 ] unsigned char 
 38061 ;; Return value:  Size  Location     Type
 38062 ;;                  4    0[BANK0 ] unsigned long 
 38063 ;; Registers used:
 38064 ;;		wreg, status,2, status,0
 38065 ;; Tracked objects:
 38066 ;;		On entry : 0/0
 38067 ;;		On exit  : 0/0
 38068 ;;		Unchanged: 0/0
 38069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38070 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38073 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38074 ;;Total ram usage:        9 bytes
 38075 ;; Hardware stack levels used:    1
 38076 ;; Hardware stack levels required when called:    7
 38077 ;; This function calls:
 38078 ;;		Nothing
 38079 ;; This function is called by:
 38080 ;;		_RADIO_WriteFrequency
 38081 ;; This function uses a non-reentrant model
 38082 ;;
 38083                           
 38084                           	psect	text181
 38085  007C1E                     __ptext181:
 38086                           	opt stack 0
 38087  007C1E                     ___llmod:
 38088                           	opt stack 19
 38089                           
 38090                           ;incstack = 0
 38091  007C1E  0100               	movlb	0	; () banked
 38092  007C20  5164               	movf	___llmod@divisor& (0+255),w,b
 38093  007C22  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 38094  007C24  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 38095  007C26  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 38096  007C28  B4D8               	btfsc	status,2,c
 38097  007C2A  D024               	goto	l3107
 38098                           
 38099                           ; BSR set to: 0
 38100  007C2C  0E01               	movlw	1
 38101  007C2E  6F68               	movwf	___llmod@counter& (0+255),b
 38102  007C30  D006               	goto	l3102
 38103  007C32                     
 38104                           ; BSR set to: 0
 38105                           
 38106                           ; BSR set to: 0
 38107  007C32  90D8               	bcf	status,0,c
 38108  007C34  3764               	rlcf	___llmod@divisor& (0+255),f,b
 38109  007C36  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 38110  007C38  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 38111  007C3A  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 38112  007C3C  2B68               	incf	___llmod@counter& (0+255),f,b
 38113  007C3E                     l3102:
 38114                           
 38115                           ; BSR set to: 0
 38116                           
 38117                           ; BSR set to: 0
 38118  007C3E  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 38119  007C40  D7F8               	goto	l3103
 38120  007C42                     u15030:
 38121                           
 38122                           ; BSR set to: 0
 38123                           
 38124                           ; BSR set to: 0
 38125                           
 38126                           ; BSR set to: 0
 38127  007C42  5164               	movf	___llmod@divisor& (0+255),w,b
 38128  007C44  5D60               	subwf	___llmod@dividend& (0+255),w,b
 38129  007C46  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 38130  007C48  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 38131  007C4A  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 38132  007C4C  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 38133  007C4E  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 38134  007C50  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 38135  007C52  A0D8               	btfss	status,0,c
 38136  007C54  D008               	goto	l3106
 38137                           
 38138                           ; BSR set to: 0
 38139  007C56  5164               	movf	___llmod@divisor& (0+255),w,b
 38140  007C58  5F60               	subwf	___llmod@dividend& (0+255),f,b
 38141  007C5A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 38142  007C5C  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 38143  007C5E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 38144  007C60  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 38145  007C62  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 38146  007C64  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 38147  007C66                     l3106:
 38148                           
 38149                           ; BSR set to: 0
 38150                           
 38151                           ; BSR set to: 0
 38152  007C66  90D8               	bcf	status,0,c
 38153  007C68  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 38154  007C6A  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 38155  007C6C  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 38156  007C6E  3364               	rrcf	___llmod@divisor& (0+255),f,b
 38157                           
 38158                           ; BSR set to: 0
 38159  007C70  2F68               	decfsz	___llmod@counter& (0+255),f,b
 38160  007C72  D7E7               	goto	u15030
 38161  007C74                     l3107:
 38162                           
 38163                           ; BSR set to: 0
 38164                           
 38165                           ; BSR set to: 0
 38166  007C74  C060  F060         	movff	___llmod@dividend,?___llmod
 38167  007C78  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 38168  007C7C  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 38169  007C80  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 38170                           
 38171                           ; BSR set to: 0
 38172  007C84  0012               	return		;funcret
 38173  007C86                     __end_of___llmod:
 38174                           	opt stack 0
 38175                           tosu	equ	0xFFF
 38176                           tosh	equ	0xFFE
 38177                           tosl	equ	0xFFD
 38178                           pclath	equ	0xFFA
 38179                           tblptru	equ	0xFF8
 38180                           tblptrh	equ	0xFF7
 38181                           tblptrl	equ	0xFF6
 38182                           tablat	equ	0xFF5
 38183                           prodh	equ	0xFF4
 38184                           prodl	equ	0xFF3
 38185                           intcon	equ	0xFF2
 38186                           intcon2	equ	0xFF1
 38187                           intcon3	equ	0xFF0
 38188                           indf0	equ	0xFEF
 38189                           postinc0	equ	0xFEE
 38190                           plusw0	equ	0xFEB
 38191                           fsr0h	equ	0xFEA
 38192                           fsr0l	equ	0xFE9
 38193                           wreg	equ	0xFE8
 38194                           postinc1	equ	0xFE6
 38195                           postdec1	equ	0xFE5
 38196                           plusw1	equ	0xFE3
 38197                           fsr1h	equ	0xFE2
 38198                           fsr1l	equ	0xFE1
 38199                           indf2	equ	0xFDF
 38200                           postinc2	equ	0xFDE
 38201                           postdec2	equ	0xFDD
 38202                           plusw2	equ	0xFDB
 38203                           fsr2h	equ	0xFDA
 38204                           fsr2l	equ	0xFD9
 38205                           status	equ	0xFD8
 38206                           
 38207 ;; *************** function _RADIO_RegisterWrite *****************
 38208 ;; Defined at:
 38209 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 38210 ;; Parameters:    Size  Location     Type
 38211 ;;  reg             1    wreg     unsigned char 
 38212 ;;  value           1    2[BANK0 ] unsigned char 
 38213 ;; Auto vars:     Size  Location     Type
 38214 ;;  reg             1    3[BANK0 ] unsigned char 
 38215 ;; Return value:  Size  Location     Type
 38216 ;;                  1    wreg      void 
 38217 ;; Registers used:
 38218 ;;		wreg, status,2, status,0, cstack
 38219 ;; Tracked objects:
 38220 ;;		On entry : 0/0
 38221 ;;		On exit  : 0/0
 38222 ;;		Unchanged: 0/0
 38223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38224 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38227 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38228 ;;Total ram usage:        2 bytes
 38229 ;; Hardware stack levels used:    1
 38230 ;; Hardware stack levels required when called:    9
 38231 ;; This function calls:
 38232 ;;		_HALSPICSAssert
 38233 ;;		_HALSPICSDeassert
 38234 ;;		_HALSPISend
 38235 ;; This function is called by:
 38236 ;;		_RADIO_WriteMode
 38237 ;;		_RADIO_WriteFrequency
 38238 ;;		_RADIO_WriteFSKFrequencyDeviation
 38239 ;;		_RADIO_WriteFSKBitRate
 38240 ;;		_RADIO_WritePower
 38241 ;;		_RADIO_Init
 38242 ;;		_RADIO_WriteConfiguration
 38243 ;;		_RADIO_Transmit
 38244 ;;		_RADIO_ReceiveStart
 38245 ;;		_RADIO_RxDone
 38246 ;;		_RADIO_RxTimeout
 38247 ;;		_RADIO_TxDone
 38248 ;;		_RADIO_UnhandledInterrupt
 38249 ;;		_RADIO_FHSSChangeChannel
 38250 ;;		_RADIO_ReadRandom
 38251 ;;		_RADIO_TransmitCW
 38252 ;; This function uses a non-reentrant model
 38253 ;;
 38254                           
 38255                           	psect	text182
 38256  008EAA                     __ptext182:
 38257                           	opt stack 0
 38258  008EAA                     _RADIO_RegisterWrite:
 38259                           	opt stack 18
 38260                           
 38261                           ; BSR set to: 0
 38262                           ;incstack = 0
 38263                           ;RADIO_RegisterWrite@reg stored from wreg
 38264  008EAA  0100               	movlb	0	; () banked
 38265  008EAC  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 38266                           
 38267                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 38268  008EAE  EC7C  F049         	call	_HALSPICSAssert	;wreg free
 38269                           
 38270                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 38271  008EB2  0100               	movlb	0	; () banked
 38272  008EB4  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 38273  008EB6  0980               	iorlw	128
 38274  008EB8  ECDF  F048         	call	_HALSPISend
 38275                           
 38276                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 38277  008EBC  0100               	movlb	0	; () banked
 38278  008EBE  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 38279  008EC0  ECDF  F048         	call	_HALSPISend
 38280                           
 38281                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 38282  008EC4  EC7A  F049         	call	_HALSPICSDeassert	;wreg free
 38283  008EC8  0012               	return		;funcret
 38284  008ECA                     __end_of_RADIO_RegisterWrite:
 38285                           	opt stack 0
 38286                           tosu	equ	0xFFF
 38287                           tosh	equ	0xFFE
 38288                           tosl	equ	0xFFD
 38289                           pclath	equ	0xFFA
 38290                           tblptru	equ	0xFF8
 38291                           tblptrh	equ	0xFF7
 38292                           tblptrl	equ	0xFF6
 38293                           tablat	equ	0xFF5
 38294                           prodh	equ	0xFF4
 38295                           prodl	equ	0xFF3
 38296                           intcon	equ	0xFF2
 38297                           intcon2	equ	0xFF1
 38298                           intcon3	equ	0xFF0
 38299                           indf0	equ	0xFEF
 38300                           postinc0	equ	0xFEE
 38301                           plusw0	equ	0xFEB
 38302                           fsr0h	equ	0xFEA
 38303                           fsr0l	equ	0xFE9
 38304                           wreg	equ	0xFE8
 38305                           postinc1	equ	0xFE6
 38306                           postdec1	equ	0xFE5
 38307                           plusw1	equ	0xFE3
 38308                           fsr1h	equ	0xFE2
 38309                           fsr1l	equ	0xFE1
 38310                           indf2	equ	0xFDF
 38311                           postinc2	equ	0xFDE
 38312                           postdec2	equ	0xFDD
 38313                           plusw2	equ	0xFDB
 38314                           fsr2h	equ	0xFDA
 38315                           fsr2l	equ	0xFD9
 38316                           status	equ	0xFD8
 38317                           
 38318 ;; *************** function _HALSPISend *****************
 38319 ;; Defined at:
 38320 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 38321 ;; Parameters:    Size  Location     Type
 38322 ;;  data            1    wreg     unsigned char 
 38323 ;; Auto vars:     Size  Location     Type
 38324 ;;  data            1    1[BANK0 ] unsigned char 
 38325 ;; Return value:  Size  Location     Type
 38326 ;;                  1    wreg      unsigned char 
 38327 ;; Registers used:
 38328 ;;		wreg, status,2, cstack
 38329 ;; Tracked objects:
 38330 ;;		On entry : 0/0
 38331 ;;		On exit  : 0/0
 38332 ;;		Unchanged: 0/0
 38333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38337 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38338 ;;Total ram usage:        1 bytes
 38339 ;; Hardware stack levels used:    1
 38340 ;; Hardware stack levels required when called:    8
 38341 ;; This function calls:
 38342 ;;		_SPI2_Exchange8bit
 38343 ;; This function is called by:
 38344 ;;		_RADIO_RegisterWrite
 38345 ;;		_RADIO_RegisterRead
 38346 ;;		_RADIO_Transmit
 38347 ;;		_RADIO_RxDone
 38348 ;;		_RADIO_FSKPayloadReady
 38349 ;; This function uses a non-reentrant model
 38350 ;;
 38351                           
 38352                           	psect	text183
 38353  0091BE                     __ptext183:
 38354                           	opt stack 0
 38355  0091BE                     _HALSPISend:
 38356                           	opt stack 18
 38357                           
 38358                           ;incstack = 0
 38359                           ;HALSPISend@data stored from wreg
 38360  0091BE  0100               	movlb	0	; () banked
 38361  0091C0  6F61               	movwf	HALSPISend@data& (0+255),b
 38362                           
 38363                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 38364  0091C2  0100               	movlb	0	; () banked
 38365  0091C4  5161               	movf	HALSPISend@data& (0+255),w,b
 38366  0091C6  EC82  F048         	call	_SPI2_Exchange8bit
 38367  0091CA  0012               	return	
 38368  0091CC                     __end_of_HALSPISend:
 38369                           	opt stack 0
 38370                           tosu	equ	0xFFF
 38371                           tosh	equ	0xFFE
 38372                           tosl	equ	0xFFD
 38373                           pclath	equ	0xFFA
 38374                           tblptru	equ	0xFF8
 38375                           tblptrh	equ	0xFF7
 38376                           tblptrl	equ	0xFF6
 38377                           tablat	equ	0xFF5
 38378                           prodh	equ	0xFF4
 38379                           prodl	equ	0xFF3
 38380                           intcon	equ	0xFF2
 38381                           intcon2	equ	0xFF1
 38382                           intcon3	equ	0xFF0
 38383                           indf0	equ	0xFEF
 38384                           postinc0	equ	0xFEE
 38385                           plusw0	equ	0xFEB
 38386                           fsr0h	equ	0xFEA
 38387                           fsr0l	equ	0xFE9
 38388                           wreg	equ	0xFE8
 38389                           postinc1	equ	0xFE6
 38390                           postdec1	equ	0xFE5
 38391                           plusw1	equ	0xFE3
 38392                           fsr1h	equ	0xFE2
 38393                           fsr1l	equ	0xFE1
 38394                           indf2	equ	0xFDF
 38395                           postinc2	equ	0xFDE
 38396                           postdec2	equ	0xFDD
 38397                           plusw2	equ	0xFDB
 38398                           fsr2h	equ	0xFDA
 38399                           fsr2l	equ	0xFD9
 38400                           status	equ	0xFD8
 38401                           
 38402 ;; *************** function _SPI2_Exchange8bit *****************
 38403 ;; Defined at:
 38404 ;;		line 79 in file "mcc_generated_files/spi2.c"
 38405 ;; Parameters:    Size  Location     Type
 38406 ;;  data            1    wreg     unsigned char 
 38407 ;; Auto vars:     Size  Location     Type
 38408 ;;  data            1    0[BANK0 ] unsigned char 
 38409 ;; Return value:  Size  Location     Type
 38410 ;;                  1    wreg      unsigned char 
 38411 ;; Registers used:
 38412 ;;		wreg, status,2
 38413 ;; Tracked objects:
 38414 ;;		On entry : 0/0
 38415 ;;		On exit  : 0/0
 38416 ;;		Unchanged: 0/0
 38417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38421 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38422 ;;Total ram usage:        1 bytes
 38423 ;; Hardware stack levels used:    1
 38424 ;; Hardware stack levels required when called:    7
 38425 ;; This function calls:
 38426 ;;		Nothing
 38427 ;; This function is called by:
 38428 ;;		_HALSPISend
 38429 ;;		_SPI2_Exchange8bitBuffer
 38430 ;; This function uses a non-reentrant model
 38431 ;;
 38432                           
 38433                           	psect	text184
 38434  009104                     __ptext184:
 38435                           	opt stack 0
 38436  009104                     _SPI2_Exchange8bit:
 38437                           	opt stack 18
 38438                           
 38439                           ;incstack = 0
 38440                           ;SPI2_Exchange8bit@data stored from wreg
 38441  009104  0100               	movlb	0	; () banked
 38442  009106  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 38443                           
 38444                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 38445  009108  9E6C               	bcf	3948,7,c	;volatile
 38446                           
 38447                           ;spi2.c: 84: SSP2BUF = data;
 38448  00910A  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 38449  00910E                     
 38450                           ;spi2.c: 87: {
 38451  00910E  A06D               	btfss	3949,0,c	;volatile
 38452  009110  D7FE               	goto	l2190
 38453                           
 38454                           ;spi2.c: 88: }
 38455                           ;spi2.c: 90: return (SSP2BUF);
 38456  009112  506F               	movf	3951,w,c	;volatile
 38457  009114  0012               	return		;funcret
 38458  009116                     __end_of_SPI2_Exchange8bit:
 38459                           	opt stack 0
 38460                           tosu	equ	0xFFF
 38461                           tosh	equ	0xFFE
 38462                           tosl	equ	0xFFD
 38463                           pclath	equ	0xFFA
 38464                           tblptru	equ	0xFF8
 38465                           tblptrh	equ	0xFF7
 38466                           tblptrl	equ	0xFF6
 38467                           tablat	equ	0xFF5
 38468                           prodh	equ	0xFF4
 38469                           prodl	equ	0xFF3
 38470                           intcon	equ	0xFF2
 38471                           intcon2	equ	0xFF1
 38472                           intcon3	equ	0xFF0
 38473                           indf0	equ	0xFEF
 38474                           postinc0	equ	0xFEE
 38475                           plusw0	equ	0xFEB
 38476                           fsr0h	equ	0xFEA
 38477                           fsr0l	equ	0xFE9
 38478                           wreg	equ	0xFE8
 38479                           postinc1	equ	0xFE6
 38480                           postdec1	equ	0xFE5
 38481                           plusw1	equ	0xFE3
 38482                           fsr1h	equ	0xFE2
 38483                           fsr1l	equ	0xFE1
 38484                           indf2	equ	0xFDF
 38485                           postinc2	equ	0xFDE
 38486                           postdec2	equ	0xFDD
 38487                           plusw2	equ	0xFDB
 38488                           fsr2h	equ	0xFDA
 38489                           fsr2l	equ	0xFD9
 38490                           status	equ	0xFD8
 38491                           
 38492 ;; *************** function _HALSPICSDeassert *****************
 38493 ;; Defined at:
 38494 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 38495 ;; Parameters:    Size  Location     Type
 38496 ;;		None
 38497 ;; Auto vars:     Size  Location     Type
 38498 ;;		None
 38499 ;; Return value:  Size  Location     Type
 38500 ;;                  1    wreg      void 
 38501 ;; Registers used:
 38502 ;;		None
 38503 ;; Tracked objects:
 38504 ;;		On entry : 0/0
 38505 ;;		On exit  : 0/0
 38506 ;;		Unchanged: 0/0
 38507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38512 ;;Total ram usage:        0 bytes
 38513 ;; Hardware stack levels used:    1
 38514 ;; Hardware stack levels required when called:    7
 38515 ;; This function calls:
 38516 ;;		Nothing
 38517 ;; This function is called by:
 38518 ;;		_RADIO_RegisterWrite
 38519 ;;		_RADIO_RegisterRead
 38520 ;;		_RADIO_Transmit
 38521 ;;		_RADIO_RxDone
 38522 ;;		_RADIO_FSKPayloadReady
 38523 ;; This function uses a non-reentrant model
 38524 ;;
 38525                           
 38526                           	psect	text185
 38527  0092F4                     __ptext185:
 38528                           	opt stack 0
 38529  0092F4                     _HALSPICSDeassert:
 38530                           	opt stack 19
 38531                           
 38532                           ;incstack = 0
 38533                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 38534  0092F4  868C               	bsf	3980,3,c	;volatile
 38535  0092F6  0012               	return	
 38536  0092F8                     __end_of_HALSPICSDeassert:
 38537                           	opt stack 0
 38538                           tosu	equ	0xFFF
 38539                           tosh	equ	0xFFE
 38540                           tosl	equ	0xFFD
 38541                           pclath	equ	0xFFA
 38542                           tblptru	equ	0xFF8
 38543                           tblptrh	equ	0xFF7
 38544                           tblptrl	equ	0xFF6
 38545                           tablat	equ	0xFF5
 38546                           prodh	equ	0xFF4
 38547                           prodl	equ	0xFF3
 38548                           intcon	equ	0xFF2
 38549                           intcon2	equ	0xFF1
 38550                           intcon3	equ	0xFF0
 38551                           indf0	equ	0xFEF
 38552                           postinc0	equ	0xFEE
 38553                           plusw0	equ	0xFEB
 38554                           fsr0h	equ	0xFEA
 38555                           fsr0l	equ	0xFE9
 38556                           wreg	equ	0xFE8
 38557                           postinc1	equ	0xFE6
 38558                           postdec1	equ	0xFE5
 38559                           plusw1	equ	0xFE3
 38560                           fsr1h	equ	0xFE2
 38561                           fsr1l	equ	0xFE1
 38562                           indf2	equ	0xFDF
 38563                           postinc2	equ	0xFDE
 38564                           postdec2	equ	0xFDD
 38565                           plusw2	equ	0xFDB
 38566                           fsr2h	equ	0xFDA
 38567                           fsr2l	equ	0xFD9
 38568                           status	equ	0xFD8
 38569                           
 38570 ;; *************** function _HALSPICSAssert *****************
 38571 ;; Defined at:
 38572 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 38573 ;; Parameters:    Size  Location     Type
 38574 ;;		None
 38575 ;; Auto vars:     Size  Location     Type
 38576 ;;		None
 38577 ;; Return value:  Size  Location     Type
 38578 ;;                  1    wreg      void 
 38579 ;; Registers used:
 38580 ;;		None
 38581 ;; Tracked objects:
 38582 ;;		On entry : 0/0
 38583 ;;		On exit  : 0/0
 38584 ;;		Unchanged: 0/0
 38585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38590 ;;Total ram usage:        0 bytes
 38591 ;; Hardware stack levels used:    1
 38592 ;; Hardware stack levels required when called:    7
 38593 ;; This function calls:
 38594 ;;		Nothing
 38595 ;; This function is called by:
 38596 ;;		_RADIO_RegisterWrite
 38597 ;;		_RADIO_RegisterRead
 38598 ;;		_RADIO_Transmit
 38599 ;;		_RADIO_RxDone
 38600 ;;		_RADIO_FSKPayloadReady
 38601 ;; This function uses a non-reentrant model
 38602 ;;
 38603                           
 38604                           	psect	text186
 38605  0092F8                     __ptext186:
 38606                           	opt stack 0
 38607  0092F8                     _HALSPICSAssert:
 38608                           	opt stack 19
 38609                           
 38610                           ;incstack = 0
 38611                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 38612  0092F8  968C               	bcf	3980,3,c	;volatile
 38613  0092FA  0012               	return	
 38614  0092FC                     __end_of_HALSPICSAssert:
 38615                           	opt stack 0
 38616                           tosu	equ	0xFFF
 38617                           tosh	equ	0xFFE
 38618                           tosl	equ	0xFFD
 38619                           pclath	equ	0xFFA
 38620                           tblptru	equ	0xFF8
 38621                           tblptrh	equ	0xFF7
 38622                           tblptrl	equ	0xFF6
 38623                           tablat	equ	0xFF5
 38624                           prodh	equ	0xFF4
 38625                           prodl	equ	0xFF3
 38626                           intcon	equ	0xFF2
 38627                           intcon2	equ	0xFF1
 38628                           intcon3	equ	0xFF0
 38629                           indf0	equ	0xFEF
 38630                           postinc0	equ	0xFEE
 38631                           plusw0	equ	0xFEB
 38632                           fsr0h	equ	0xFEA
 38633                           fsr0l	equ	0xFE9
 38634                           wreg	equ	0xFE8
 38635                           postinc1	equ	0xFE6
 38636                           postdec1	equ	0xFE5
 38637                           plusw1	equ	0xFE3
 38638                           fsr1h	equ	0xFE2
 38639                           fsr1l	equ	0xFE1
 38640                           indf2	equ	0xFDF
 38641                           postinc2	equ	0xFDE
 38642                           postdec2	equ	0xFDD
 38643                           plusw2	equ	0xFDB
 38644                           fsr2h	equ	0xFDA
 38645                           fsr2l	equ	0xFD9
 38646                           status	equ	0xFD8
 38647                           
 38648 ;; *************** function _RADIO_Reset *****************
 38649 ;; Defined at:
 38650 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 38651 ;; Parameters:    Size  Location     Type
 38652 ;;		None
 38653 ;; Auto vars:     Size  Location     Type
 38654 ;;		None
 38655 ;; Return value:  Size  Location     Type
 38656 ;;                  1    wreg      void 
 38657 ;; Registers used:
 38658 ;;		wreg, status,2, status,0, cstack
 38659 ;; Tracked objects:
 38660 ;;		On entry : 0/0
 38661 ;;		On exit  : 0/0
 38662 ;;		Unchanged: 0/0
 38663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38668 ;;Total ram usage:        0 bytes
 38669 ;; Hardware stack levels used:    1
 38670 ;; Hardware stack levels required when called:    8
 38671 ;; This function calls:
 38672 ;;		_HALResetPinMakeInput
 38673 ;;		_HALResetPinMakeOutput
 38674 ;;		_HALResetPinOutputValue
 38675 ;;		_SystemBlockingWaitMs
 38676 ;; This function is called by:
 38677 ;;		_RADIO_Init
 38678 ;; This function uses a non-reentrant model
 38679 ;;
 38680                           
 38681                           	psect	text187
 38682  00856E                     __ptext187:
 38683                           	opt stack 0
 38684  00856E                     _RADIO_Reset:
 38685                           	opt stack 20
 38686                           
 38687                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 38688                           
 38689                           ;incstack = 0
 38690  00856E  EC7E  F049         	call	_HALResetPinMakeOutput	;wreg free
 38691                           
 38692                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 38693  008572  0E00               	movlw	0
 38694  008574  EC0B  F048         	call	_HALResetPinOutputValue
 38695                           
 38696                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 38697  008578  0E01               	movlw	1
 38698  00857A  0100               	movlb	0	; () banked
 38699  00857C  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 38700  00857E  0E00               	movlw	0
 38701  008580  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 38702  008582  0E00               	movlw	0
 38703  008584  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 38704  008586  0E00               	movlw	0
 38705  008588  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 38706  00858A  EC2D  F045         	call	_SystemBlockingWaitMs	;wreg free
 38707                           
 38708                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 38709  00858E  EC80  F049         	call	_HALResetPinMakeInput	;wreg free
 38710                           
 38711                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 38712  008592  0E0A               	movlw	10
 38713  008594  0100               	movlb	0	; () banked
 38714  008596  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 38715  008598  0E00               	movlw	0
 38716  00859A  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 38717  00859C  0E00               	movlw	0
 38718  00859E  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 38719  0085A0  0E00               	movlw	0
 38720  0085A2  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 38721  0085A4  EC2D  F045         	call	_SystemBlockingWaitMs	;wreg free
 38722                           
 38723                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 38724  0085A8  0E01               	movlw	1
 38725  0085AA  EC0B  F048         	call	_HALResetPinOutputValue
 38726                           
 38727                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 38728  0085AE  EC7E  F049         	call	_HALResetPinMakeOutput	;wreg free
 38729  0085B2  0012               	return		;funcret
 38730  0085B4                     __end_of_RADIO_Reset:
 38731                           	opt stack 0
 38732                           tosu	equ	0xFFF
 38733                           tosh	equ	0xFFE
 38734                           tosl	equ	0xFFD
 38735                           pclath	equ	0xFFA
 38736                           tblptru	equ	0xFF8
 38737                           tblptrh	equ	0xFF7
 38738                           tblptrl	equ	0xFF6
 38739                           tablat	equ	0xFF5
 38740                           prodh	equ	0xFF4
 38741                           prodl	equ	0xFF3
 38742                           intcon	equ	0xFF2
 38743                           intcon2	equ	0xFF1
 38744                           intcon3	equ	0xFF0
 38745                           indf0	equ	0xFEF
 38746                           postinc0	equ	0xFEE
 38747                           plusw0	equ	0xFEB
 38748                           fsr0h	equ	0xFEA
 38749                           fsr0l	equ	0xFE9
 38750                           wreg	equ	0xFE8
 38751                           postinc1	equ	0xFE6
 38752                           postdec1	equ	0xFE5
 38753                           plusw1	equ	0xFE3
 38754                           fsr1h	equ	0xFE2
 38755                           fsr1l	equ	0xFE1
 38756                           indf2	equ	0xFDF
 38757                           postinc2	equ	0xFDE
 38758                           postdec2	equ	0xFDD
 38759                           plusw2	equ	0xFDB
 38760                           fsr2h	equ	0xFDA
 38761                           fsr2l	equ	0xFD9
 38762                           status	equ	0xFD8
 38763                           
 38764 ;; *************** function _SystemBlockingWaitMs *****************
 38765 ;; Defined at:
 38766 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38767 ;; Parameters:    Size  Location     Type
 38768 ;;  ms              4    0[BANK0 ] unsigned long 
 38769 ;; Auto vars:     Size  Location     Type
 38770 ;;		None
 38771 ;; Return value:  Size  Location     Type
 38772 ;;                  1    wreg      void 
 38773 ;; Registers used:
 38774 ;;		wreg, status,2, status,0
 38775 ;; Tracked objects:
 38776 ;;		On entry : 0/0
 38777 ;;		On exit  : 0/0
 38778 ;;		Unchanged: 0/0
 38779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38780 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38782 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38783 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38784 ;;Total ram usage:        5 bytes
 38785 ;; Hardware stack levels used:    1
 38786 ;; Hardware stack levels required when called:    7
 38787 ;; This function calls:
 38788 ;;		Nothing
 38789 ;; This function is called by:
 38790 ;;		_RADIO_WriteMode
 38791 ;;		_RADIO_Reset
 38792 ;;		_RADIO_ReadRandom
 38793 ;;		_RADIO_StopCW
 38794 ;; This function uses a non-reentrant model
 38795 ;;
 38796                           
 38797                           	psect	text188
 38798  008A5A                     __ptext188:
 38799                           	opt stack 0
 38800  008A5A                     _SystemBlockingWaitMs:
 38801                           	opt stack 20
 38802                           
 38803                           ;sw_timer.c: 147: while (ms > 0)
 38804                           
 38805                           ;incstack = 0
 38806  008A5A  D00F               	goto	l234
 38807  008A5C                     
 38808                           ;sw_timer.c: 148: {
 38809                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 38810  008A5C  0E06               	movlw	6
 38811  008A5E  0100               	movlb	0	; () banked
 38812  008A60  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 38813  008A62  0E30               	movlw	48
 38814  008A64                     u22537:
 38815  008A64  2EE8               	decfsz	wreg,f,c
 38816  008A66  D7FE               	bra	u22537
 38817  008A68  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 38818  008A6A  D7FC               	bra	u22537
 38819  008A6C  F000               	nop	
 38820                           
 38821                           ;sw_timer.c: 150: ms--;
 38822  008A6E  0100               	movlb	0	; () banked
 38823  008A70  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 38824  008A72  0E00               	movlw	0
 38825  008A74  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 38826  008A76  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 38827  008A78  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 38828  008A7A                     l234:
 38829                           
 38830                           ; BSR set to: 0
 38831  008A7A  0100               	movlb	0	; () banked
 38832  008A7C  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 38833  008A7E  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 38834  008A80  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 38835  008A82  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 38836  008A84  B4D8               	btfsc	status,2,c
 38837  008A86  0012               	return	
 38838  008A88  D7E9               	goto	l235
 38839  008A8A                     __end_of_SystemBlockingWaitMs:
 38840                           	opt stack 0
 38841                           tosu	equ	0xFFF
 38842                           tosh	equ	0xFFE
 38843                           tosl	equ	0xFFD
 38844                           pclath	equ	0xFFA
 38845                           tblptru	equ	0xFF8
 38846                           tblptrh	equ	0xFF7
 38847                           tblptrl	equ	0xFF6
 38848                           tablat	equ	0xFF5
 38849                           prodh	equ	0xFF4
 38850                           prodl	equ	0xFF3
 38851                           intcon	equ	0xFF2
 38852                           intcon2	equ	0xFF1
 38853                           intcon3	equ	0xFF0
 38854                           indf0	equ	0xFEF
 38855                           postinc0	equ	0xFEE
 38856                           plusw0	equ	0xFEB
 38857                           fsr0h	equ	0xFEA
 38858                           fsr0l	equ	0xFE9
 38859                           wreg	equ	0xFE8
 38860                           postinc1	equ	0xFE6
 38861                           postdec1	equ	0xFE5
 38862                           plusw1	equ	0xFE3
 38863                           fsr1h	equ	0xFE2
 38864                           fsr1l	equ	0xFE1
 38865                           indf2	equ	0xFDF
 38866                           postinc2	equ	0xFDE
 38867                           postdec2	equ	0xFDD
 38868                           plusw2	equ	0xFDB
 38869                           fsr2h	equ	0xFDA
 38870                           fsr2l	equ	0xFD9
 38871                           status	equ	0xFD8
 38872                           
 38873 ;; *************** function _HALResetPinOutputValue *****************
 38874 ;; Defined at:
 38875 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 38876 ;; Parameters:    Size  Location     Type
 38877 ;;  value           1    wreg     unsigned char 
 38878 ;; Auto vars:     Size  Location     Type
 38879 ;;  value           1    0[BANK0 ] unsigned char 
 38880 ;; Return value:  Size  Location     Type
 38881 ;;                  1    wreg      void 
 38882 ;; Registers used:
 38883 ;;		wreg, status,2, status,0
 38884 ;; Tracked objects:
 38885 ;;		On entry : 0/0
 38886 ;;		On exit  : 0/0
 38887 ;;		Unchanged: 0/0
 38888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38893 ;;Total ram usage:        1 bytes
 38894 ;; Hardware stack levels used:    1
 38895 ;; Hardware stack levels required when called:    7
 38896 ;; This function calls:
 38897 ;;		Nothing
 38898 ;; This function is called by:
 38899 ;;		_RADIO_Reset
 38900 ;; This function uses a non-reentrant model
 38901 ;;
 38902                           
 38903                           	psect	text189
 38904  009016                     __ptext189:
 38905                           	opt stack 0
 38906  009016                     _HALResetPinOutputValue:
 38907                           	opt stack 20
 38908                           
 38909                           ; BSR set to: 0
 38910                           ;incstack = 0
 38911                           ;HALResetPinOutputValue@value stored from wreg
 38912  009016  0100               	movlb	0	; () banked
 38913  009018  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 38914                           
 38915                           ;radio_driver_hal.c: 57: if (value == 0)
 38916  00901A  0100               	movlb	0	; () banked
 38917  00901C  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 38918  00901E  A4D8               	btfss	status,2,c
 38919  009020  D002               	goto	l144
 38920                           
 38921                           ; BSR set to: 0
 38922                           
 38923                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 38924  009022  948B               	bcf	3979,2,c	;volatile
 38925                           
 38926                           ; BSR set to: 0
 38927  009024  0012               	return	
 38928  009026                     l144:
 38929                           
 38930                           ; BSR set to: 0
 38931                           ;radio_driver_hal.c: 59: else if (value == 1)
 38932                           
 38933                           ; BSR set to: 0
 38934  009026  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 38935  009028  A4D8               	btfss	status,2,c
 38936  00902A  0012               	return	
 38937                           
 38938                           ; BSR set to: 0
 38939                           
 38940                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 38941  00902C  848B               	bsf	3979,2,c	;volatile
 38942                           
 38943                           ; BSR set to: 0
 38944                           
 38945                           ; BSR set to: 0
 38946  00902E  0012               	return	
 38947  009030                     __end_of_HALResetPinOutputValue:
 38948                           	opt stack 0
 38949                           tosu	equ	0xFFF
 38950                           tosh	equ	0xFFE
 38951                           tosl	equ	0xFFD
 38952                           pclath	equ	0xFFA
 38953                           tblptru	equ	0xFF8
 38954                           tblptrh	equ	0xFF7
 38955                           tblptrl	equ	0xFF6
 38956                           tablat	equ	0xFF5
 38957                           prodh	equ	0xFF4
 38958                           prodl	equ	0xFF3
 38959                           intcon	equ	0xFF2
 38960                           intcon2	equ	0xFF1
 38961                           intcon3	equ	0xFF0
 38962                           indf0	equ	0xFEF
 38963                           postinc0	equ	0xFEE
 38964                           plusw0	equ	0xFEB
 38965                           fsr0h	equ	0xFEA
 38966                           fsr0l	equ	0xFE9
 38967                           wreg	equ	0xFE8
 38968                           postinc1	equ	0xFE6
 38969                           postdec1	equ	0xFE5
 38970                           plusw1	equ	0xFE3
 38971                           fsr1h	equ	0xFE2
 38972                           fsr1l	equ	0xFE1
 38973                           indf2	equ	0xFDF
 38974                           postinc2	equ	0xFDE
 38975                           postdec2	equ	0xFDD
 38976                           plusw2	equ	0xFDB
 38977                           fsr2h	equ	0xFDA
 38978                           fsr2l	equ	0xFD9
 38979                           status	equ	0xFD8
 38980                           
 38981 ;; *************** function _HALResetPinMakeOutput *****************
 38982 ;; Defined at:
 38983 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 38984 ;; Parameters:    Size  Location     Type
 38985 ;;		None
 38986 ;; Auto vars:     Size  Location     Type
 38987 ;;		None
 38988 ;; Return value:  Size  Location     Type
 38989 ;;                  1    wreg      void 
 38990 ;; Registers used:
 38991 ;;		None
 38992 ;; Tracked objects:
 38993 ;;		On entry : 0/0
 38994 ;;		On exit  : 0/0
 38995 ;;		Unchanged: 0/0
 38996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39001 ;;Total ram usage:        0 bytes
 39002 ;; Hardware stack levels used:    1
 39003 ;; Hardware stack levels required when called:    7
 39004 ;; This function calls:
 39005 ;;		Nothing
 39006 ;; This function is called by:
 39007 ;;		_RADIO_Reset
 39008 ;; This function uses a non-reentrant model
 39009 ;;
 39010                           
 39011                           	psect	text190
 39012  0092FC                     __ptext190:
 39013                           	opt stack 0
 39014  0092FC                     _HALResetPinMakeOutput:
 39015                           	opt stack 20
 39016                           
 39017                           ; BSR set to: 0
 39018                           ;incstack = 0
 39019                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 39020  0092FC  9494               	bcf	3988,2,c	;volatile
 39021  0092FE  0012               	return	
 39022  009300                     __end_of_HALResetPinMakeOutput:
 39023                           	opt stack 0
 39024                           tosu	equ	0xFFF
 39025                           tosh	equ	0xFFE
 39026                           tosl	equ	0xFFD
 39027                           pclath	equ	0xFFA
 39028                           tblptru	equ	0xFF8
 39029                           tblptrh	equ	0xFF7
 39030                           tblptrl	equ	0xFF6
 39031                           tablat	equ	0xFF5
 39032                           prodh	equ	0xFF4
 39033                           prodl	equ	0xFF3
 39034                           intcon	equ	0xFF2
 39035                           intcon2	equ	0xFF1
 39036                           intcon3	equ	0xFF0
 39037                           indf0	equ	0xFEF
 39038                           postinc0	equ	0xFEE
 39039                           plusw0	equ	0xFEB
 39040                           fsr0h	equ	0xFEA
 39041                           fsr0l	equ	0xFE9
 39042                           wreg	equ	0xFE8
 39043                           postinc1	equ	0xFE6
 39044                           postdec1	equ	0xFE5
 39045                           plusw1	equ	0xFE3
 39046                           fsr1h	equ	0xFE2
 39047                           fsr1l	equ	0xFE1
 39048                           indf2	equ	0xFDF
 39049                           postinc2	equ	0xFDE
 39050                           postdec2	equ	0xFDD
 39051                           plusw2	equ	0xFDB
 39052                           fsr2h	equ	0xFDA
 39053                           fsr2l	equ	0xFD9
 39054                           status	equ	0xFD8
 39055                           
 39056 ;; *************** function _HALResetPinMakeInput *****************
 39057 ;; Defined at:
 39058 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39059 ;; Parameters:    Size  Location     Type
 39060 ;;		None
 39061 ;; Auto vars:     Size  Location     Type
 39062 ;;		None
 39063 ;; Return value:  Size  Location     Type
 39064 ;;                  1    wreg      void 
 39065 ;; Registers used:
 39066 ;;		None
 39067 ;; Tracked objects:
 39068 ;;		On entry : 0/0
 39069 ;;		On exit  : 0/0
 39070 ;;		Unchanged: 0/0
 39071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39076 ;;Total ram usage:        0 bytes
 39077 ;; Hardware stack levels used:    1
 39078 ;; Hardware stack levels required when called:    7
 39079 ;; This function calls:
 39080 ;;		Nothing
 39081 ;; This function is called by:
 39082 ;;		_RADIO_Reset
 39083 ;; This function uses a non-reentrant model
 39084 ;;
 39085                           
 39086                           	psect	text191
 39087  009300                     __ptext191:
 39088                           	opt stack 0
 39089  009300                     _HALResetPinMakeInput:
 39090                           	opt stack 20
 39091                           
 39092                           ;incstack = 0
 39093                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 39094  009300  8494               	bsf	3988,2,c	;volatile
 39095  009302  0012               	return	
 39096  009304                     __end_of_HALResetPinMakeInput:
 39097                           	opt stack 0
 39098                           tosu	equ	0xFFF
 39099                           tosh	equ	0xFFE
 39100                           tosl	equ	0xFFD
 39101                           pclath	equ	0xFFA
 39102                           tblptru	equ	0xFF8
 39103                           tblptrh	equ	0xFF7
 39104                           tblptrl	equ	0xFF6
 39105                           tablat	equ	0xFF5
 39106                           prodh	equ	0xFF4
 39107                           prodl	equ	0xFF3
 39108                           intcon	equ	0xFF2
 39109                           intcon2	equ	0xFF1
 39110                           intcon3	equ	0xFF0
 39111                           indf0	equ	0xFEF
 39112                           postinc0	equ	0xFEE
 39113                           plusw0	equ	0xFEB
 39114                           fsr0h	equ	0xFEA
 39115                           fsr0l	equ	0xFE9
 39116                           wreg	equ	0xFE8
 39117                           postinc1	equ	0xFE6
 39118                           postdec1	equ	0xFE5
 39119                           plusw1	equ	0xFE3
 39120                           fsr1h	equ	0xFE2
 39121                           fsr1l	equ	0xFE1
 39122                           indf2	equ	0xFDF
 39123                           postinc2	equ	0xFDE
 39124                           postdec2	equ	0xFDD
 39125                           plusw2	equ	0xFDB
 39126                           fsr2h	equ	0xFDA
 39127                           fsr2l	equ	0xFD9
 39128                           status	equ	0xFD8
 39129                           
 39130 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 39131 ;; Defined at:
 39132 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 39133 ;; Parameters:    Size  Location     Type
 39134 ;;  period          2   70[BANK0 ] unsigned int 
 39135 ;; Auto vars:     Size  Location     Type
 39136 ;;  iCtr            1   80[BANK0 ] unsigned char 
 39137 ;; Return value:  Size  Location     Type
 39138 ;;                  1    wreg      void 
 39139 ;; Registers used:
 39140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39141 ;; Tracked objects:
 39142 ;;		On entry : 0/0
 39143 ;;		On exit  : 0/0
 39144 ;;		Unchanged: 0/0
 39145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39147 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39148 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39149 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39150 ;;Total ram usage:       11 bytes
 39151 ;; Hardware stack levels used:    1
 39152 ;; Hardware stack levels required when called:   11
 39153 ;; This function calls:
 39154 ;;		_SwTimerSetTimeout
 39155 ;;		_SwTimerStart
 39156 ;;		_SwTimerStop
 39157 ;;		___lldiv
 39158 ;;		___lmul
 39159 ;; This function is called by:
 39160 ;;		_LORAWAN_Reset
 39161 ;; This function uses a non-reentrant model
 39162 ;;
 39163                           
 39164                           	psect	text192
 39165  00547C                     __ptext192:
 39166                           	opt stack 0
 39167  00547C                     _LORAWAN_LinkCheckConfigure:
 39168                           	opt stack 17
 39169                           
 39170                           ;lorawan.c: 757: uint8_t iCtr;
 39171                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 39172                           
 39173                           ;incstack = 0
 39174  00547C  C0A6  F09A         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 39175  005480  C0A7  F09B         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 39176  005484  0100               	movlb	0	; () banked
 39177  005486  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 39178  005488  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 39179  00548A  0EE8               	movlw	232
 39180  00548C  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 39181  00548E  0E03               	movlw	3
 39182  005490  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 39183  005492  0E00               	movlw	0
 39184  005494  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 39185  005496  0E00               	movlw	0
 39186  005498  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 39187  00549A  ECB1  F040         	call	___lmul	;wreg free
 39188  00549E  C09A  F2CC         	movff	?___lmul,_loRa+204
 39189  0054A2  C09B  F2CD         	movff	?___lmul+1,_loRa+205
 39190  0054A6  C09C  F2CE         	movff	?___lmul+2,_loRa+206
 39191  0054AA  C09D  F2CF         	movff	?___lmul+3,_loRa+207
 39192                           
 39193                           ;lorawan.c: 761: if (period == 0)
 39194  0054AE  0100               	movlb	0	; () banked
 39195  0054B0  51A6               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 39196  0054B2  11A7               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 39197  0054B4  A4D8               	btfss	status,2,c
 39198  0054B6  D02B               	goto	l1777
 39199                           
 39200                           ; BSR set to: 0
 39201                           ;lorawan.c: 762: {
 39202                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 39203  0054B8  0102               	movlb	2	; () banked
 39204  0054BA  51E7               	movf	(_loRa+231)& (0+255),w,b
 39205  0054BC  ECB8  F046         	call	_SwTimerStop
 39206                           
 39207                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 39208  0054C0  0102               	movlb	2	; () banked
 39209  0054C2  9503               	bcf	(_loRa+3)& (0+255),2,b
 39210                           
 39211                           ; BSR set to: 2
 39212                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 39213  0054C4  0E00               	movlw	0
 39214  0054C6  0100               	movlb	0	; () banked
 39215  0054C8  6FB0               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 39216  0054CA  D01A               	goto	l1778
 39217  0054CC                     
 39218                           ; BSR set to: 0
 39219                           ;lorawan.c: 766: {
 39220                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 39221                           
 39222                           ; BSR set to: 0
 39223  0054CC  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 39224  0054CE  0D02               	mullw	2
 39225  0054D0  0EA8               	movlw	low (_loRa+168)
 39226  0054D2  24F3               	addwf	prodl,w,c
 39227  0054D4  6ED9               	movwf	fsr2l,c
 39228  0054D6  0E02               	movlw	high (_loRa+168)
 39229  0054D8  20F4               	addwfc	prodh,w,c
 39230  0054DA  6EDA               	movwf	fsr2h,c
 39231  0054DC  0E02               	movlw	2
 39232  0054DE  18DE               	xorwf	postinc2,w,c
 39233  0054E0  A4D8               	btfss	status,2,c
 39234  0054E2  D00C               	goto	l1780
 39235                           
 39236                           ; BSR set to: 0
 39237                           ;lorawan.c: 768: {
 39238                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 39239  0054E4  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 39240  0054E6  0D02               	mullw	2
 39241  0054E8  0EA8               	movlw	low (_loRa+168)
 39242  0054EA  24F3               	addwf	prodl,w,c
 39243  0054EC  6ED9               	movwf	fsr2l,c
 39244  0054EE  0E02               	movlw	high (_loRa+168)
 39245  0054F0  20F4               	addwfc	prodh,w,c
 39246  0054F2  6EDA               	movwf	fsr2h,c
 39247  0054F4  0EFF               	movlw	255
 39248  0054F6  6EDF               	movwf	indf2,c
 39249                           
 39250                           ; BSR set to: 0
 39251                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 39252  0054F8  0102               	movlb	2	; () banked
 39253  0054FA  07A7               	decf	(_loRa+167)& (0+255),f,b
 39254  0054FC                     l1780:
 39255                           
 39256                           ; BSR set to: 2
 39257  0054FC  0100               	movlb	0	; () banked
 39258  0054FE  2BB0               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 39259  005500                     l1778:
 39260                           
 39261                           ; BSR set to: 0
 39262                           
 39263                           ; BSR set to: 0
 39264  005500  0102               	movlb	2	; () banked
 39265  005502  51A7               	movf	(_loRa+167)& (0+255),w,b
 39266  005504  0100               	movlb	0	; () banked
 39267  005506  5DB0               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 39268  005508  B0D8               	btfsc	status,0,c
 39269  00550A  0012               	return	
 39270  00550C  D7DF               	goto	l1779
 39271  00550E                     l1777:
 39272                           
 39273                           ; BSR set to: 0
 39274                           ;lorawan.c: 776: else
 39275                           ;lorawan.c: 777: {
 39276                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 39277  00550E  0102               	movlb	2	; () banked
 39278  005510  8503               	bsf	(_loRa+3)& (0+255),2,b
 39279                           
 39280                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 39281  005512  A902               	btfss	(_loRa+2)& (0+255),4,b
 39282  005514  0012               	return	
 39283                           
 39284                           ; BSR set to: 2
 39285                           ;lorawan.c: 782: {
 39286                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 39287  005516  51CF               	movf	(_loRa+207)& (0+255),w,b
 39288  005518  E107               	bnz	u19990
 39289  00551A  29CC               	incf	(_loRa+204)& (0+255),w,b
 39290  00551C  0EFF               	movlw	255
 39291  00551E  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 39292  005520  0E0F               	movlw	15
 39293  005522  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 39294  005524  A0D8               	btfss	status,0,c
 39295  005526  D01D               	goto	l1785
 39296  005528                     u19990:
 39297                           
 39298                           ; BSR set to: 2
 39299  005528  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
 39300  00552C  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
 39301  005530  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
 39302  005534  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
 39303  005538  0E7D               	movlw	125
 39304  00553A  0100               	movlb	0	; () banked
 39305  00553C  6F64               	movwf	___lldiv@divisor& (0+255),b
 39306  00553E  0E00               	movlw	0
 39307  005540  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 39308  005542  0E00               	movlw	0
 39309  005544  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 39310  005546  0E00               	movlw	0
 39311  005548  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 39312  00554A  ECC4  F03B         	call	___lldiv	;wreg free
 39313  00554E  0E0C               	movlw	12
 39314  005550                     u20005:
 39315  005550  90D8               	bcf	status,0,c
 39316  005552  0100               	movlb	0	; () banked
 39317  005554  3760               	rlcf	?___lldiv& (0+255),f,b
 39318  005556  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 39319  005558  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 39320  00555A  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 39321  00555C  2EE8               	decfsz	wreg,f,c
 39322  00555E  D7F8               	goto	u20005
 39323  005560  D023               	goto	L28
 39324  005562                     l1785:
 39325                           
 39326                           ; BSR set to: 0
 39327  005562  C2CC  F0A8         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 39328  005566  C2CD  F0A9         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 39329  00556A  C2CE  F0AA         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 39330  00556E  C2CF  F0AB         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 39331  005572  0E0C               	movlw	12
 39332  005574                     u20015:
 39333  005574  90D8               	bcf	status,0,c
 39334  005576  0100               	movlb	0	; () banked
 39335  005578  37A8               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 39336  00557A  37A9               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 39337  00557C  37AA               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 39338  00557E  37AB               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 39339  005580  2EE8               	decfsz	wreg,f,c
 39340  005582  D7F8               	goto	u20015
 39341  005584  C0A8  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 39342  005588  C0A9  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 39343  00558C  C0AA  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 39344  005590  C0AB  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 39345  005594  0E7D               	movlw	125
 39346  005596  6F64               	movwf	___lldiv@divisor& (0+255),b
 39347  005598  0E00               	movlw	0
 39348  00559A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 39349  00559C  0E00               	movlw	0
 39350  00559E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 39351  0055A0  0E00               	movlw	0
 39352  0055A2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 39353  0055A4  ECC4  F03B         	call	___lldiv	;wreg free
 39354  0055A8                     L28:
 39355  0055A8  C060  F0AC         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2492
 39356  0055AC  C061  F0AD         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2492+1
 39357  0055B0  C062  F0AE         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2492+2
 39358  0055B4  C063  F0AF         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2492+3
 39359  0055B8  C0AC  F06D         	movff	_LORAWAN_LinkCheckConfigure$2492,SwTimerSetTimeout@timeout
 39360  0055BC  C0AD  F06E         	movff	_LORAWAN_LinkCheckConfigure$2492+1,SwTimerSetTimeout@timeout+1
 39361  0055C0  C0AE  F06F         	movff	_LORAWAN_LinkCheckConfigure$2492+2,SwTimerSetTimeout@timeout+2
 39362  0055C4  C0AF  F070         	movff	_LORAWAN_LinkCheckConfigure$2492+3,SwTimerSetTimeout@timeout+3
 39363  0055C8  0102               	movlb	2	; () banked
 39364  0055CA  51E7               	movf	(_loRa+231)& (0+255),w,b
 39365  0055CC  EC62  F043         	call	_SwTimerSetTimeout
 39366                           
 39367                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 39368  0055D0  0102               	movlb	2	; () banked
 39369  0055D2  51E7               	movf	(_loRa+231)& (0+255),w,b
 39370  0055D4  EC4B  F039         	call	_SwTimerStart
 39371  0055D8  0012               	return	
 39372  0055DA                     __end_of_LORAWAN_LinkCheckConfigure:
 39373                           	opt stack 0
 39374                           tosu	equ	0xFFF
 39375                           tosh	equ	0xFFE
 39376                           tosl	equ	0xFFD
 39377                           pclath	equ	0xFFA
 39378                           tblptru	equ	0xFF8
 39379                           tblptrh	equ	0xFF7
 39380                           tblptrl	equ	0xFF6
 39381                           tablat	equ	0xFF5
 39382                           prodh	equ	0xFF4
 39383                           prodl	equ	0xFF3
 39384                           intcon	equ	0xFF2
 39385                           intcon2	equ	0xFF1
 39386                           intcon3	equ	0xFF0
 39387                           indf0	equ	0xFEF
 39388                           postinc0	equ	0xFEE
 39389                           plusw0	equ	0xFEB
 39390                           fsr0h	equ	0xFEA
 39391                           fsr0l	equ	0xFE9
 39392                           wreg	equ	0xFE8
 39393                           postinc1	equ	0xFE6
 39394                           postdec1	equ	0xFE5
 39395                           plusw1	equ	0xFE3
 39396                           fsr1h	equ	0xFE2
 39397                           fsr1l	equ	0xFE1
 39398                           indf2	equ	0xFDF
 39399                           postinc2	equ	0xFDE
 39400                           postdec2	equ	0xFDD
 39401                           plusw2	equ	0xFDB
 39402                           fsr2h	equ	0xFDA
 39403                           fsr2l	equ	0xFD9
 39404                           status	equ	0xFD8
 39405                           
 39406 ;; *************** function ___lmul *****************
 39407 ;; Defined at:
 39408 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 39409 ;; Parameters:    Size  Location     Type
 39410 ;;  multiplier      4   58[BANK0 ] unsigned long 
 39411 ;;  multiplicand    4   62[BANK0 ] unsigned long 
 39412 ;; Auto vars:     Size  Location     Type
 39413 ;;  product         4   66[BANK0 ] unsigned long 
 39414 ;; Return value:  Size  Location     Type
 39415 ;;                  4   58[BANK0 ] unsigned long 
 39416 ;; Registers used:
 39417 ;;		wreg, status,2, status,0
 39418 ;; Tracked objects:
 39419 ;;		On entry : 0/0
 39420 ;;		On exit  : 0/0
 39421 ;;		Unchanged: 0/0
 39422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39423 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39424 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39426 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39427 ;;Total ram usage:       12 bytes
 39428 ;; Hardware stack levels used:    1
 39429 ;; Hardware stack levels required when called:    7
 39430 ;; This function calls:
 39431 ;;		Nothing
 39432 ;; This function is called by:
 39433 ;;		_RADIO_WriteConfiguration
 39434 ;;		_RADIO_TxDone
 39435 ;;		_RADIO_FSKPacketSent
 39436 ;;		_LORAWAN_TxDone
 39437 ;;		_ExecuteNewChannel
 39438 ;;		_ExecuteRxParamSetupReq
 39439 ;;		_UpdateCfList
 39440 ;;		_LORAWAN_LinkCheckConfigure
 39441 ;;		_rand
 39442 ;;		_LORAWAN_Pause
 39443 ;; This function uses a non-reentrant model
 39444 ;;
 39445                           
 39446                           	psect	text193
 39447  008162                     __ptext193:
 39448                           	opt stack 0
 39449  008162                     ___lmul:
 39450                           	opt stack 18
 39451                           
 39452                           ;incstack = 0
 39453  008162  0E00               	movlw	0
 39454  008164  0100               	movlb	0	; () banked
 39455  008166  6FA2               	movwf	___lmul@product& (0+255),b
 39456  008168  0E00               	movlw	0
 39457  00816A  6FA3               	movwf	(___lmul@product+1)& (0+255),b
 39458  00816C  0E00               	movlw	0
 39459  00816E  6FA4               	movwf	(___lmul@product+2)& (0+255),b
 39460  008170  0E00               	movlw	0
 39461  008172  6FA5               	movwf	(___lmul@product+3)& (0+255),b
 39462  008174                     
 39463                           ; BSR set to: 0
 39464                           
 39465                           ; BSR set to: 0
 39466  008174  A19A               	btfss	___lmul@multiplier& (0+255),0,b
 39467  008176  D008               	goto	l2754
 39468                           
 39469                           ; BSR set to: 0
 39470  008178  519E               	movf	___lmul@multiplicand& (0+255),w,b
 39471  00817A  27A2               	addwf	___lmul@product& (0+255),f,b
 39472  00817C  519F               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 39473  00817E  23A3               	addwfc	(___lmul@product+1)& (0+255),f,b
 39474  008180  51A0               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 39475  008182  23A4               	addwfc	(___lmul@product+2)& (0+255),f,b
 39476  008184  51A1               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 39477  008186  23A5               	addwfc	(___lmul@product+3)& (0+255),f,b
 39478  008188                     l2754:
 39479                           
 39480                           ; BSR set to: 0
 39481                           
 39482                           ; BSR set to: 0
 39483  008188  90D8               	bcf	status,0,c
 39484  00818A  379E               	rlcf	___lmul@multiplicand& (0+255),f,b
 39485  00818C  379F               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 39486  00818E  37A0               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 39487  008190  37A1               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 39488                           
 39489                           ; BSR set to: 0
 39490  008192  90D8               	bcf	status,0,c
 39491  008194  339D               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 39492  008196  339C               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 39493  008198  339B               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 39494  00819A  339A               	rrcf	___lmul@multiplier& (0+255),f,b
 39495  00819C  519A               	movf	___lmul@multiplier& (0+255),w,b
 39496  00819E  119B               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 39497  0081A0  119C               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 39498  0081A2  119D               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 39499  0081A4  A4D8               	btfss	status,2,c
 39500  0081A6  D7E6               	goto	l2753
 39501                           
 39502                           ; BSR set to: 0
 39503  0081A8  C0A2  F09A         	movff	___lmul@product,?___lmul
 39504  0081AC  C0A3  F09B         	movff	___lmul@product+1,?___lmul+1
 39505  0081B0  C0A4  F09C         	movff	___lmul@product+2,?___lmul+2
 39506  0081B4  C0A5  F09D         	movff	___lmul@product+3,?___lmul+3
 39507                           
 39508                           ; BSR set to: 0
 39509  0081B8  0012               	return		;funcret
 39510  0081BA                     __end_of___lmul:
 39511                           	opt stack 0
 39512                           tosu	equ	0xFFF
 39513                           tosh	equ	0xFFE
 39514                           tosl	equ	0xFFD
 39515                           pclath	equ	0xFFA
 39516                           tblptru	equ	0xFF8
 39517                           tblptrh	equ	0xFF7
 39518                           tblptrl	equ	0xFF6
 39519                           tablat	equ	0xFF5
 39520                           prodh	equ	0xFF4
 39521                           prodl	equ	0xFF3
 39522                           intcon	equ	0xFF2
 39523                           intcon2	equ	0xFF1
 39524                           intcon3	equ	0xFF0
 39525                           indf0	equ	0xFEF
 39526                           postinc0	equ	0xFEE
 39527                           plusw0	equ	0xFEB
 39528                           fsr0h	equ	0xFEA
 39529                           fsr0l	equ	0xFE9
 39530                           wreg	equ	0xFE8
 39531                           postinc1	equ	0xFE6
 39532                           postdec1	equ	0xFE5
 39533                           plusw1	equ	0xFE3
 39534                           fsr1h	equ	0xFE2
 39535                           fsr1l	equ	0xFE1
 39536                           indf2	equ	0xFDF
 39537                           postinc2	equ	0xFDE
 39538                           postdec2	equ	0xFDD
 39539                           plusw2	equ	0xFDB
 39540                           fsr2h	equ	0xFDA
 39541                           fsr2l	equ	0xFD9
 39542                           status	equ	0xFD8
 39543                           
 39544 ;; *************** function ___lldiv *****************
 39545 ;; Defined at:
 39546 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 39547 ;; Parameters:    Size  Location     Type
 39548 ;;  dividend        4    0[BANK0 ] unsigned long 
 39549 ;;  divisor         4    4[BANK0 ] unsigned long 
 39550 ;; Auto vars:     Size  Location     Type
 39551 ;;  quotient        4    8[BANK0 ] unsigned long 
 39552 ;;  counter         1   12[BANK0 ] unsigned char 
 39553 ;; Return value:  Size  Location     Type
 39554 ;;                  4    0[BANK0 ] unsigned long 
 39555 ;; Registers used:
 39556 ;;		wreg, status,2, status,0
 39557 ;; Tracked objects:
 39558 ;;		On entry : 0/0
 39559 ;;		On exit  : 0/0
 39560 ;;		Unchanged: 0/0
 39561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39562 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39563 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39565 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39566 ;;Total ram usage:       13 bytes
 39567 ;; Hardware stack levels used:    1
 39568 ;; Hardware stack levels required when called:    7
 39569 ;; This function calls:
 39570 ;;		Nothing
 39571 ;; This function is called by:
 39572 ;;		_RADIO_WriteFrequency
 39573 ;;		_RADIO_WriteFSKFrequencyDeviation
 39574 ;;		_RADIO_WriteFSKBitRate
 39575 ;;		_RADIO_Transmit
 39576 ;;		_RADIO_ReceiveStart
 39577 ;;		_LORAWAN_TxDone
 39578 ;;		_LORAWAN_RxTimeout
 39579 ;;		_StartReTxTimer
 39580 ;;		_DutyCycleCallback
 39581 ;;		_LORAWAN_LinkCheckConfigure
 39582 ;;		_LORAWAN_LinkCheckCallback
 39583 ;;		_UpdateRetransmissionAckTimeoutState
 39584 ;;		_UpdateJoinSuccessState
 39585 ;; This function uses a non-reentrant model
 39586 ;;
 39587                           
 39588                           	psect	text194
 39589  007788                     __ptext194:
 39590                           	opt stack 0
 39591  007788                     ___lldiv:
 39592                           	opt stack 21
 39593                           
 39594                           ; BSR set to: 0
 39595                           ;incstack = 0
 39596  007788  0E00               	movlw	0
 39597  00778A  0100               	movlb	0	; () banked
 39598  00778C  6F68               	movwf	___lldiv@quotient& (0+255),b
 39599  00778E  0E00               	movlw	0
 39600  007790  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 39601  007792  0E00               	movlw	0
 39602  007794  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 39603  007796  0E00               	movlw	0
 39604  007798  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 39605                           
 39606                           ; BSR set to: 0
 39607  00779A  5164               	movf	___lldiv@divisor& (0+255),w,b
 39608  00779C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 39609  00779E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 39610  0077A0  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 39611  0077A2  B4D8               	btfsc	status,2,c
 39612  0077A4  D02A               	goto	l3097
 39613                           
 39614                           ; BSR set to: 0
 39615  0077A6  0E01               	movlw	1
 39616  0077A8  6F6C               	movwf	___lldiv@counter& (0+255),b
 39617  0077AA  D006               	goto	l3092
 39618  0077AC                     
 39619                           ; BSR set to: 0
 39620                           
 39621                           ; BSR set to: 0
 39622  0077AC  90D8               	bcf	status,0,c
 39623  0077AE  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 39624  0077B0  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 39625  0077B2  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 39626  0077B4  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 39627  0077B6  2B6C               	incf	___lldiv@counter& (0+255),f,b
 39628  0077B8                     l3092:
 39629                           
 39630                           ; BSR set to: 0
 39631                           
 39632                           ; BSR set to: 0
 39633  0077B8  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 39634  0077BA  D7F8               	goto	l3093
 39635  0077BC                     u15000:
 39636                           
 39637                           ; BSR set to: 0
 39638                           
 39639                           ; BSR set to: 0
 39640                           
 39641                           ; BSR set to: 0
 39642  0077BC  90D8               	bcf	status,0,c
 39643  0077BE  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 39644  0077C0  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 39645  0077C2  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 39646  0077C4  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 39647                           
 39648                           ; BSR set to: 0
 39649  0077C6  5164               	movf	___lldiv@divisor& (0+255),w,b
 39650  0077C8  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 39651  0077CA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 39652  0077CC  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 39653  0077CE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 39654  0077D0  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 39655  0077D2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 39656  0077D4  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 39657  0077D6  A0D8               	btfss	status,0,c
 39658  0077D8  D009               	goto	l3096
 39659                           
 39660                           ; BSR set to: 0
 39661  0077DA  5164               	movf	___lldiv@divisor& (0+255),w,b
 39662  0077DC  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 39663  0077DE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 39664  0077E0  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 39665  0077E2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 39666  0077E4  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 39667  0077E6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 39668  0077E8  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 39669                           
 39670                           ; BSR set to: 0
 39671  0077EA  8168               	bsf	___lldiv@quotient& (0+255),0,b
 39672  0077EC                     l3096:
 39673                           
 39674                           ; BSR set to: 0
 39675                           
 39676                           ; BSR set to: 0
 39677  0077EC  90D8               	bcf	status,0,c
 39678  0077EE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 39679  0077F0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 39680  0077F2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 39681  0077F4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 39682                           
 39683                           ; BSR set to: 0
 39684  0077F6  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 39685  0077F8  D7E1               	goto	u15000
 39686  0077FA                     l3097:
 39687                           
 39688                           ; BSR set to: 0
 39689                           
 39690                           ; BSR set to: 0
 39691  0077FA  C068  F060         	movff	___lldiv@quotient,?___lldiv
 39692  0077FE  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 39693  007802  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 39694  007806  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 39695                           
 39696                           ; BSR set to: 0
 39697  00780A  0012               	return		;funcret
 39698  00780C                     __end_of___lldiv:
 39699                           	opt stack 0
 39700                           tosu	equ	0xFFF
 39701                           tosh	equ	0xFFE
 39702                           tosl	equ	0xFFD
 39703                           pclath	equ	0xFFA
 39704                           tblptru	equ	0xFF8
 39705                           tblptrh	equ	0xFF7
 39706                           tblptrl	equ	0xFF6
 39707                           tablat	equ	0xFF5
 39708                           prodh	equ	0xFF4
 39709                           prodl	equ	0xFF3
 39710                           intcon	equ	0xFF2
 39711                           intcon2	equ	0xFF1
 39712                           intcon3	equ	0xFF0
 39713                           indf0	equ	0xFEF
 39714                           postinc0	equ	0xFEE
 39715                           plusw0	equ	0xFEB
 39716                           fsr0h	equ	0xFEA
 39717                           fsr0l	equ	0xFE9
 39718                           wreg	equ	0xFE8
 39719                           postinc1	equ	0xFE6
 39720                           postdec1	equ	0xFE5
 39721                           plusw1	equ	0xFE3
 39722                           fsr1h	equ	0xFE2
 39723                           fsr1l	equ	0xFE1
 39724                           indf2	equ	0xFDF
 39725                           postinc2	equ	0xFDE
 39726                           postdec2	equ	0xFDD
 39727                           plusw2	equ	0xFDB
 39728                           fsr2h	equ	0xFDA
 39729                           fsr2l	equ	0xFD9
 39730                           status	equ	0xFD8
 39731                           
 39732 ;; *************** function _SwTimerStop *****************
 39733 ;; Defined at:
 39734 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39735 ;; Parameters:    Size  Location     Type
 39736 ;;  timerId         1    wreg     unsigned char 
 39737 ;; Auto vars:     Size  Location     Type
 39738 ;;  timerId         1    0[BANK0 ] unsigned char 
 39739 ;; Return value:  Size  Location     Type
 39740 ;;                  1    wreg      void 
 39741 ;; Registers used:
 39742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39743 ;; Tracked objects:
 39744 ;;		On entry : 0/0
 39745 ;;		On exit  : 0/0
 39746 ;;		Unchanged: 0/0
 39747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39751 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39752 ;;Total ram usage:        1 bytes
 39753 ;; Hardware stack levels used:    1
 39754 ;; Hardware stack levels required when called:    7
 39755 ;; This function calls:
 39756 ;;		Nothing
 39757 ;; This function is called by:
 39758 ;;		_RADIO_Init
 39759 ;;		_RADIO_Transmit
 39760 ;;		_RADIO_RxDone
 39761 ;;		_RADIO_FSKPayloadReady
 39762 ;;		_RADIO_RxTimeout
 39763 ;;		_RADIO_TxDone
 39764 ;;		_RADIO_FSKPacketSent
 39765 ;;		_RADIO_RxFSKTimeout
 39766 ;;		_LORAWAN_TxDone
 39767 ;;		_StopAllSoftwareTimers
 39768 ;;		_LORAWAN_LinkCheckConfigure
 39769 ;;		_LORAWAN_RxDone
 39770 ;; This function uses a non-reentrant model
 39771 ;;
 39772                           
 39773                           	psect	text195
 39774  008D70                     __ptext195:
 39775                           	opt stack 0
 39776  008D70                     _SwTimerStop:
 39777                           	opt stack 21
 39778                           
 39779                           ; BSR set to: 0
 39780                           ;incstack = 0
 39781                           ;SwTimerStop@timerId stored from wreg
 39782  008D70  0100               	movlb	0	; () banked
 39783  008D72  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 39784                           
 39785                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 39786  008D74  9EF2               	bcf	intcon,7,c	;volatile
 39787                           
 39788                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 39789  008D76  0100               	movlb	0	; () banked
 39790  008D78  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 39791  008D7A  0D08               	mullw	8
 39792  008D7C  0E04               	movlw	4
 39793  008D7E  26F3               	addwf	prodl,f,c
 39794  008D80  0E00               	movlw	0
 39795  008D82  22F4               	addwfc	prodh,f,c
 39796  008D84  0E00               	movlw	low _swTimers
 39797  008D86  24F3               	addwf	prodl,w,c
 39798  008D88  6ED9               	movwf	fsr2l,c
 39799  008D8A  0E03               	movlw	high _swTimers
 39800  008D8C  20F4               	addwfc	prodh,w,c
 39801  008D8E  6EDA               	movwf	fsr2h,c
 39802  008D90  0E00               	movlw	0
 39803  008D92  6EDF               	movwf	indf2,c
 39804                           
 39805                           ; BSR set to: 0
 39806                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 39807  008D94  8EF2               	bsf	intcon,7,c	;volatile
 39808                           
 39809                           ; BSR set to: 0
 39810  008D96  0012               	return		;funcret
 39811  008D98                     __end_of_SwTimerStop:
 39812                           	opt stack 0
 39813                           tosu	equ	0xFFF
 39814                           tosh	equ	0xFFE
 39815                           tosl	equ	0xFFD
 39816                           pclath	equ	0xFFA
 39817                           tblptru	equ	0xFF8
 39818                           tblptrh	equ	0xFF7
 39819                           tblptrl	equ	0xFF6
 39820                           tablat	equ	0xFF5
 39821                           prodh	equ	0xFF4
 39822                           prodl	equ	0xFF3
 39823                           intcon	equ	0xFF2
 39824                           intcon2	equ	0xFF1
 39825                           intcon3	equ	0xFF0
 39826                           indf0	equ	0xFEF
 39827                           postinc0	equ	0xFEE
 39828                           plusw0	equ	0xFEB
 39829                           fsr0h	equ	0xFEA
 39830                           fsr0l	equ	0xFE9
 39831                           wreg	equ	0xFE8
 39832                           postinc1	equ	0xFE6
 39833                           postdec1	equ	0xFE5
 39834                           plusw1	equ	0xFE3
 39835                           fsr1h	equ	0xFE2
 39836                           fsr1l	equ	0xFE1
 39837                           indf2	equ	0xFDF
 39838                           postinc2	equ	0xFDE
 39839                           postdec2	equ	0xFDD
 39840                           plusw2	equ	0xFDB
 39841                           fsr2h	equ	0xFDA
 39842                           fsr2l	equ	0xFD9
 39843                           status	equ	0xFD8
 39844                           
 39845 ;; *************** function _SwTimerStart *****************
 39846 ;; Defined at:
 39847 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39848 ;; Parameters:    Size  Location     Type
 39849 ;;  timerId         1    wreg     unsigned char 
 39850 ;; Auto vars:     Size  Location     Type
 39851 ;;  timerId         1   57[BANK0 ] unsigned char 
 39852 ;;  ticksRemaini    4   53[BANK0 ] unsigned long 
 39853 ;; Return value:  Size  Location     Type
 39854 ;;                  1    wreg      void 
 39855 ;; Registers used:
 39856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39857 ;; Tracked objects:
 39858 ;;		On entry : 0/0
 39859 ;;		On exit  : 0/0
 39860 ;;		Unchanged: 0/0
 39861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39863 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39864 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39865 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39866 ;;Total ram usage:        9 bytes
 39867 ;; Hardware stack levels used:    1
 39868 ;; Hardware stack levels required when called:   10
 39869 ;; This function calls:
 39870 ;;		_SwTimersInterrupt
 39871 ;;		_TMR_OverrideRemaining
 39872 ;; This function is called by:
 39873 ;;		_RADIO_Transmit
 39874 ;;		_RADIO_ReceiveStart
 39875 ;;		_LORAWAN_TxDone
 39876 ;;		_LORAWAN_RxTimeout
 39877 ;;		_StartReTxTimer
 39878 ;;		_DutyCycleCallback
 39879 ;;		_LORAWAN_Join
 39880 ;;		_LORAWAN_LinkCheckConfigure
 39881 ;;		_LORAWAN_LinkCheckCallback
 39882 ;;		_UpdateRetransmissionAckTimeoutState
 39883 ;;		_UpdateJoinSuccessState
 39884 ;; This function uses a non-reentrant model
 39885 ;;
 39886                           
 39887                           	psect	text196
 39888  007296                     __ptext196:
 39889                           	opt stack 0
 39890  007296                     _SwTimerStart:
 39891                           	opt stack 18
 39892                           
 39893                           ; BSR set to: 0
 39894                           ;incstack = 0
 39895                           ;SwTimerStart@timerId stored from wreg
 39896  007296  0100               	movlb	0	; () banked
 39897  007298  6F99               	movwf	SwTimerStart@timerId& (0+255),b
 39898                           
 39899                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 39900                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 39901  00729A  9EF2               	bcf	intcon,7,c	;volatile
 39902                           
 39903                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 39904  00729C  EC27  F02F         	call	_SwTimersInterrupt	;wreg free
 39905  0072A0  C080  F095         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 39906  0072A4  C081  F096         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 39907  0072A8  C082  F097         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 39908  0072AC  C083  F098         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 39909                           
 39910                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 39911  0072B0  0100               	movlb	0	; () banked
 39912  0072B2  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 39913  0072B4  0D08               	mullw	8
 39914  0072B6  0E00               	movlw	low _swTimers
 39915  0072B8  24F3               	addwf	prodl,w,c
 39916  0072BA  6ED9               	movwf	fsr2l,c
 39917  0072BC  0E03               	movlw	high _swTimers
 39918  0072BE  20F4               	addwfc	prodh,w,c
 39919  0072C0  6EDA               	movwf	fsr2h,c
 39920  0072C2  5195               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 39921  0072C4  5CDE               	subwf	postinc2,w,c
 39922  0072C6  5196               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 39923  0072C8  58DE               	subwfb	postinc2,w,c
 39924  0072CA  5197               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 39925  0072CC  58DE               	subwfb	postinc2,w,c
 39926  0072CE  5198               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 39927  0072D0  58DE               	subwfb	postinc2,w,c
 39928  0072D2  B0D8               	btfsc	status,0,c
 39929  0072D4  D010               	goto	l260
 39930                           
 39931                           ; BSR set to: 0
 39932                           ;sw_timer.c: 225: {
 39933                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 39934  0072D6  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 39935  0072D8  0D08               	mullw	8
 39936  0072DA  0E00               	movlw	low _swTimers
 39937  0072DC  24F3               	addwf	prodl,w,c
 39938  0072DE  6ED9               	movwf	fsr2l,c
 39939  0072E0  0E03               	movlw	high _swTimers
 39940  0072E2  20F4               	addwfc	prodh,w,c
 39941  0072E4  6EDA               	movwf	fsr2h,c
 39942  0072E6  CFDE F095          	movff	postinc2,SwTimerStart@ticksRemaining
 39943  0072EA  CFDE F096          	movff	postinc2,SwTimerStart@ticksRemaining+1
 39944  0072EE  CFDE F097          	movff	postinc2,SwTimerStart@ticksRemaining+2
 39945  0072F2  CFDE F098          	movff	postinc2,SwTimerStart@ticksRemaining+3
 39946  0072F6                     l260:
 39947                           
 39948                           ; BSR set to: 0
 39949                           ;sw_timer.c: 227: }
 39950                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 39951                           
 39952                           ; BSR set to: 0
 39953  0072F6  C095  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 39954  0072FA  C096  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 39955  0072FE  C097  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 39956  007302  C098  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 39957  007306  EC96  F039         	call	_TMR_OverrideRemaining	;wreg free
 39958                           
 39959                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 39960  00730A  0100               	movlb	0	; () banked
 39961  00730C  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 39962  00730E  0D08               	mullw	8
 39963  007310  0E04               	movlw	4
 39964  007312  26F3               	addwf	prodl,f,c
 39965  007314  0E00               	movlw	0
 39966  007316  22F4               	addwfc	prodh,f,c
 39967  007318  0E00               	movlw	low _swTimers
 39968  00731A  24F3               	addwf	prodl,w,c
 39969  00731C  6ED9               	movwf	fsr2l,c
 39970  00731E  0E03               	movlw	high _swTimers
 39971  007320  20F4               	addwfc	prodh,w,c
 39972  007322  6EDA               	movwf	fsr2h,c
 39973  007324  0E01               	movlw	1
 39974  007326  6EDF               	movwf	indf2,c
 39975                           
 39976                           ; BSR set to: 0
 39977                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 39978  007328  8EF2               	bsf	intcon,7,c	;volatile
 39979                           
 39980                           ; BSR set to: 0
 39981  00732A  0012               	return		;funcret
 39982  00732C                     __end_of_SwTimerStart:
 39983                           	opt stack 0
 39984                           tosu	equ	0xFFF
 39985                           tosh	equ	0xFFE
 39986                           tosl	equ	0xFFD
 39987                           pclath	equ	0xFFA
 39988                           tblptru	equ	0xFF8
 39989                           tblptrh	equ	0xFF7
 39990                           tblptrl	equ	0xFF6
 39991                           tablat	equ	0xFF5
 39992                           prodh	equ	0xFF4
 39993                           prodl	equ	0xFF3
 39994                           intcon	equ	0xFF2
 39995                           intcon2	equ	0xFF1
 39996                           intcon3	equ	0xFF0
 39997                           indf0	equ	0xFEF
 39998                           postinc0	equ	0xFEE
 39999                           plusw0	equ	0xFEB
 40000                           fsr0h	equ	0xFEA
 40001                           fsr0l	equ	0xFE9
 40002                           wreg	equ	0xFE8
 40003                           postinc1	equ	0xFE6
 40004                           postdec1	equ	0xFE5
 40005                           plusw1	equ	0xFE3
 40006                           fsr1h	equ	0xFE2
 40007                           fsr1l	equ	0xFE1
 40008                           indf2	equ	0xFDF
 40009                           postinc2	equ	0xFDE
 40010                           postdec2	equ	0xFDD
 40011                           plusw2	equ	0xFDB
 40012                           fsr2h	equ	0xFDA
 40013                           fsr2l	equ	0xFD9
 40014                           status	equ	0xFD8
 40015                           
 40016 ;; *************** function _TMR_OverrideRemaining *****************
 40017 ;; Defined at:
 40018 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40019 ;; Parameters:    Size  Location     Type
 40020 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 40021 ;; Auto vars:     Size  Location     Type
 40022 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 40023 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 40024 ;; Return value:  Size  Location     Type
 40025 ;;                  1    wreg      void 
 40026 ;; Registers used:
 40027 ;;		wreg, status,2, status,0, cstack
 40028 ;; Tracked objects:
 40029 ;;		On entry : 0/0
 40030 ;;		On exit  : 0/0
 40031 ;;		Unchanged: 0/0
 40032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40034 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40036 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40037 ;;Total ram usage:       10 bytes
 40038 ;; Hardware stack levels used:    1
 40039 ;; Hardware stack levels required when called:    9
 40040 ;; This function calls:
 40041 ;;		_TMR_SwapTimer
 40042 ;; This function is called by:
 40043 ;;		_SwTimerStart
 40044 ;; This function uses a non-reentrant model
 40045 ;;
 40046                           
 40047                           	psect	text197
 40048  00732C                     __ptext197:
 40049                           	opt stack 0
 40050  00732C                     _TMR_OverrideRemaining:
 40051                           	opt stack 18
 40052                           
 40053                           ;sw_timer.c: 67: uint16_t tmrVal;
 40054                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 40055                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 40056                           
 40057                           ; BSR set to: 0
 40058                           ;incstack = 0
 40059  00732C  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 40060  00732E  1056               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 40061  007330  1055               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 40062  007332  E104               	bnz	u15090
 40063  007334  0E0B               	movlw	11
 40064  007336  5C54               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 40065  007338  A0D8               	btfss	status,0,c
 40066  00733A  0012               	return	
 40067  00733C                     u15090:
 40068                           
 40069                           ;sw_timer.c: 72: {
 40070                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 40071  00733C  5054               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 40072  00733E  0100               	movlb	0	; () banked
 40073  007340  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 40074  007342  5055               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 40075  007344  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 40076  007346  5056               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 40077  007348  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 40078  00734A  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 40079  00734C  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 40080  00734E  B0D8               	btfsc	status,0,c
 40081  007350  0012               	return	
 40082                           
 40083                           ; BSR set to: 0
 40084                           ;sw_timer.c: 74: {
 40085                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 40086  007352  C06A  F054         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 40087  007356  C06B  F055         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 40088  00735A  C06C  F056         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 40089  00735E  C06D  F057         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 40090                           
 40091                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 40092  007362  C044  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 40093  007366  C045  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 40094                           
 40095                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 40096  00736A  C06A  F06E         	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 40097  00736E  C06B  F06F         	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 40098  007372  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 40099  007374  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 40100  007376  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 40101  007378  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 40102  00737A  C06E  F044         	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 40103  00737E  C06F  F045         	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 40104                           
 40105                           ; BSR set to: 0
 40106                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 40107  007382  C044  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 40108  007386  C045  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 40109  00738A  EC29  F042         	call	_TMR_SwapTimer	;wreg free
 40110  00738E  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 40111  007392  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 40112                           
 40113                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 40114  007396  C072  F06E         	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 40115  00739A  C073  F06F         	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 40116  00739E  0100               	movlb	0	; () banked
 40117  0073A0  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 40118  0073A2  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 40119  0073A4  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 40120  0073A6  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 40121  0073A8  5170               	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 40122  0073AA  276E               	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 40123  0073AC  5171               	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 40124  0073AE  236F               	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 40125  0073B0  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 40126  0073B2  2640               	addwf	_ticksAdded,f,c	;volatile
 40127  0073B4  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 40128  0073B6  2241               	addwfc	_ticksAdded+1,f,c	;volatile
 40129  0073B8  0E00               	movlw	0
 40130  0073BA  2242               	addwfc	_ticksAdded+2,f,c	;volatile
 40131  0073BC  0E00               	movlw	0
 40132  0073BE  2243               	addwfc	_ticksAdded+3,f,c	;volatile
 40133                           
 40134                           ; BSR set to: 0
 40135  0073C0  0012               	return	
 40136  0073C2                     __end_of_TMR_OverrideRemaining:
 40137                           	opt stack 0
 40138                           tosu	equ	0xFFF
 40139                           tosh	equ	0xFFE
 40140                           tosl	equ	0xFFD
 40141                           pclath	equ	0xFFA
 40142                           tblptru	equ	0xFF8
 40143                           tblptrh	equ	0xFF7
 40144                           tblptrl	equ	0xFF6
 40145                           tablat	equ	0xFF5
 40146                           prodh	equ	0xFF4
 40147                           prodl	equ	0xFF3
 40148                           intcon	equ	0xFF2
 40149                           intcon2	equ	0xFF1
 40150                           intcon3	equ	0xFF0
 40151                           indf0	equ	0xFEF
 40152                           postinc0	equ	0xFEE
 40153                           plusw0	equ	0xFEB
 40154                           fsr0h	equ	0xFEA
 40155                           fsr0l	equ	0xFE9
 40156                           wreg	equ	0xFE8
 40157                           postinc1	equ	0xFE6
 40158                           postdec1	equ	0xFE5
 40159                           plusw1	equ	0xFE3
 40160                           fsr1h	equ	0xFE2
 40161                           fsr1l	equ	0xFE1
 40162                           indf2	equ	0xFDF
 40163                           postinc2	equ	0xFDE
 40164                           postdec2	equ	0xFDD
 40165                           plusw2	equ	0xFDB
 40166                           fsr2h	equ	0xFDA
 40167                           fsr2l	equ	0xFD9
 40168                           status	equ	0xFD8
 40169                           
 40170 ;; *************** function _TMR_SwapTimer *****************
 40171 ;; Defined at:
 40172 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40173 ;; Parameters:    Size  Location     Type
 40174 ;;  timerVal        2    8[BANK0 ] unsigned int 
 40175 ;; Auto vars:     Size  Location     Type
 40176 ;;		None
 40177 ;; Return value:  Size  Location     Type
 40178 ;;                  2    8[BANK0 ] unsigned int 
 40179 ;; Registers used:
 40180 ;;		wreg, status,2, status,0, cstack
 40181 ;; Tracked objects:
 40182 ;;		On entry : 0/0
 40183 ;;		On exit  : 0/0
 40184 ;;		Unchanged: 0/0
 40185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40186 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40189 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40190 ;;Total ram usage:        2 bytes
 40191 ;; Hardware stack levels used:    1
 40192 ;; Hardware stack levels required when called:    8
 40193 ;; This function calls:
 40194 ;;		_TMR1_ReadTimer
 40195 ;;		_TMR1_WriteTimer
 40196 ;; This function is called by:
 40197 ;;		_TMR_OverrideRemaining
 40198 ;; This function uses a non-reentrant model
 40199 ;;
 40200                           
 40201                           	psect	text198
 40202  008452                     __ptext198:
 40203                           	opt stack 0
 40204  008452                     _TMR_SwapTimer:
 40205                           	opt stack 18
 40206                           
 40207                           ;sw_timer.c: 114: static uint16_t oldVal;
 40208                           ;sw_timer.c: 115: static uint16_t retVal;
 40209                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 40210                           
 40211                           ;incstack = 0
 40212  008452  EC24  F047         	call	_TMR1_ReadTimer	;wreg free
 40213  008456  C060  F117         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 40214  00845A  C061  F118         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 40215  00845E                     
 40216                           ;sw_timer.c: 123: ;
 40217  00845E  EC24  F047         	call	_TMR1_ReadTimer	;wreg free
 40218  008462  0101               	movlb	1	; () banked
 40219  008464  5117               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 40220  008466  0100               	movlb	0	; () banked
 40221  008468  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 40222  00846A  E106               	bnz	l13411
 40223  00846C  0101               	movlb	1	; () banked
 40224  00846E  5118               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 40225  008470  0100               	movlb	0	; () banked
 40226  008472  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 40227  008474  B4D8               	btfsc	status,2,c
 40228  008476  D7F3               	goto	l226
 40229  008478                     l13411:
 40230                           
 40231                           ; BSR set to: 0
 40232                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 40233  008478  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 40234  00847C  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 40235  008480  EC65  F047         	call	_TMR1_WriteTimer	;wreg free
 40236                           
 40237                           ;sw_timer.c: 128: oldVal++;
 40238  008484  0101               	movlb	1	; () banked
 40239  008486  4B17               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 40240  008488  2B18               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 40241                           
 40242                           ; BSR set to: 1
 40243                           ;sw_timer.c: 130: retVal = oldVal;
 40244  00848A  C117  F115         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 40245  00848E  C118  F116         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 40246                           
 40247                           ; BSR set to: 1
 40248                           ;sw_timer.c: 132: return retVal;
 40249  008492  C115  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 40250  008496  C116  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 40251  00849A  0012               	return	
 40252  00849C                     __end_of_TMR_SwapTimer:
 40253                           	opt stack 0
 40254                           tosu	equ	0xFFF
 40255                           tosh	equ	0xFFE
 40256                           tosl	equ	0xFFD
 40257                           pclath	equ	0xFFA
 40258                           tblptru	equ	0xFF8
 40259                           tblptrh	equ	0xFF7
 40260                           tblptrl	equ	0xFF6
 40261                           tablat	equ	0xFF5
 40262                           prodh	equ	0xFF4
 40263                           prodl	equ	0xFF3
 40264                           intcon	equ	0xFF2
 40265                           intcon2	equ	0xFF1
 40266                           intcon3	equ	0xFF0
 40267                           indf0	equ	0xFEF
 40268                           postinc0	equ	0xFEE
 40269                           plusw0	equ	0xFEB
 40270                           fsr0h	equ	0xFEA
 40271                           fsr0l	equ	0xFE9
 40272                           wreg	equ	0xFE8
 40273                           postinc1	equ	0xFE6
 40274                           postdec1	equ	0xFE5
 40275                           plusw1	equ	0xFE3
 40276                           fsr1h	equ	0xFE2
 40277                           fsr1l	equ	0xFE1
 40278                           indf2	equ	0xFDF
 40279                           postinc2	equ	0xFDE
 40280                           postdec2	equ	0xFDD
 40281                           plusw2	equ	0xFDB
 40282                           fsr2h	equ	0xFDA
 40283                           fsr2l	equ	0xFD9
 40284                           status	equ	0xFD8
 40285                           
 40286 ;; *************** function _TMR1_WriteTimer *****************
 40287 ;; Defined at:
 40288 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 40289 ;; Parameters:    Size  Location     Type
 40290 ;;  timerVal        2    0[BANK0 ] unsigned int 
 40291 ;; Auto vars:     Size  Location     Type
 40292 ;;		None
 40293 ;; Return value:  Size  Location     Type
 40294 ;;                  1    wreg      void 
 40295 ;; Registers used:
 40296 ;;		wreg, status,2
 40297 ;; Tracked objects:
 40298 ;;		On entry : 0/0
 40299 ;;		On exit  : 0/0
 40300 ;;		Unchanged: 0/0
 40301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40302 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40305 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40306 ;;Total ram usage:        2 bytes
 40307 ;; Hardware stack levels used:    1
 40308 ;; Hardware stack levels required when called:    7
 40309 ;; This function calls:
 40310 ;;		Nothing
 40311 ;; This function is called by:
 40312 ;;		_TMR_SwapTimer
 40313 ;;		_TMR1_Reload
 40314 ;; This function uses a non-reentrant model
 40315 ;;
 40316                           
 40317                           	psect	text199
 40318  008ECA                     __ptext199:
 40319                           	opt stack 0
 40320  008ECA                     _TMR1_WriteTimer:
 40321                           	opt stack 18
 40322                           
 40323                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 40324                           
 40325                           ; BSR set to: 1
 40326                           ;incstack = 0
 40327  008ECA  A4CD               	btfss	4045,2,c	;volatile
 40328  008ECC  D008               	goto	l2437
 40329                           
 40330                           ;tmr1.c: 124: {
 40331                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 40332  008ECE  90CD               	bcf	4045,0,c	;volatile
 40333                           
 40334                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 40335  008ED0  0100               	movlb	0	; () banked
 40336  008ED2  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 40337  008ED4  6ECF               	movwf	4047,c	;volatile
 40338                           
 40339                           ; BSR set to: 0
 40340                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 40341  008ED6  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 40342                           
 40343                           ; BSR set to: 0
 40344                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 40345  008EDA  80CD               	bsf	4045,0,c	;volatile
 40346                           
 40347                           ;tmr1.c: 134: }
 40348  008EDC  0012               	return	
 40349  008EDE                     l2437:
 40350                           
 40351                           ;tmr1.c: 135: else
 40352                           ;tmr1.c: 136: {
 40353                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 40354                           
 40355                           ; BSR set to: 0
 40356  008EDE  0100               	movlb	0	; () banked
 40357  008EE0  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 40358  008EE2  6ECF               	movwf	4047,c	;volatile
 40359                           
 40360                           ; BSR set to: 0
 40361                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 40362  008EE4  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 40363  008EE8  0012               	return	
 40364  008EEA                     __end_of_TMR1_WriteTimer:
 40365                           	opt stack 0
 40366                           tosu	equ	0xFFF
 40367                           tosh	equ	0xFFE
 40368                           tosl	equ	0xFFD
 40369                           pclath	equ	0xFFA
 40370                           tblptru	equ	0xFF8
 40371                           tblptrh	equ	0xFF7
 40372                           tblptrl	equ	0xFF6
 40373                           tablat	equ	0xFF5
 40374                           prodh	equ	0xFF4
 40375                           prodl	equ	0xFF3
 40376                           intcon	equ	0xFF2
 40377                           intcon2	equ	0xFF1
 40378                           intcon3	equ	0xFF0
 40379                           indf0	equ	0xFEF
 40380                           postinc0	equ	0xFEE
 40381                           plusw0	equ	0xFEB
 40382                           fsr0h	equ	0xFEA
 40383                           fsr0l	equ	0xFE9
 40384                           wreg	equ	0xFE8
 40385                           postinc1	equ	0xFE6
 40386                           postdec1	equ	0xFE5
 40387                           plusw1	equ	0xFE3
 40388                           fsr1h	equ	0xFE2
 40389                           fsr1l	equ	0xFE1
 40390                           indf2	equ	0xFDF
 40391                           postinc2	equ	0xFDE
 40392                           postdec2	equ	0xFDD
 40393                           plusw2	equ	0xFDB
 40394                           fsr2h	equ	0xFDA
 40395                           fsr2l	equ	0xFD9
 40396                           status	equ	0xFD8
 40397                           
 40398 ;; *************** function _SwTimersInterrupt *****************
 40399 ;; Defined at:
 40400 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40401 ;; Parameters:    Size  Location     Type
 40402 ;;		None
 40403 ;; Auto vars:     Size  Location     Type
 40404 ;;  ticksToNextT    4   44[BANK0 ] unsigned long 
 40405 ;;  timeElapsed     4   40[BANK0 ] unsigned long 
 40406 ;;  i               1   48[BANK0 ] unsigned char 
 40407 ;; Return value:  Size  Location     Type
 40408 ;;                  4   32[BANK0 ] unsigned long 
 40409 ;; Registers used:
 40410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40411 ;; Tracked objects:
 40412 ;;		On entry : 0/0
 40413 ;;		On exit  : 0/0
 40414 ;;		Unchanged: 0/0
 40415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40416 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40417 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40418 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40419 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40420 ;;Total ram usage:       17 bytes
 40421 ;; Hardware stack levels used:    1
 40422 ;; Hardware stack levels required when called:    9
 40423 ;; This function calls:
 40424 ;;		_TMR_GetDeltaTime
 40425 ;; This function is called by:
 40426 ;;		_SwTimerReadValue
 40427 ;;		_SwTimerStart
 40428 ;;		_SwTimersCanSleep
 40429 ;; This function uses a non-reentrant model
 40430 ;;
 40431                           
 40432                           	psect	text200
 40433  005E4E                     __ptext200:
 40434                           	opt stack 0
 40435  005E4E                     _SwTimersInterrupt:
 40436                           	opt stack 18
 40437                           
 40438                           ;sw_timer.c: 289: uint8_t i;
 40439                           ;sw_timer.c: 290: uint32_t timeElapsed;
 40440                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 40441                           
 40442                           ; BSR set to: 0
 40443                           ;incstack = 0
 40444  005E4E  0100               	movlb	0	; () banked
 40445  005E50  698C               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 40446  005E52  698D               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 40447  005E54  698E               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 40448  005E56  698F               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 40449                           
 40450                           ; BSR set to: 0
 40451                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 40452  005E58  EC52  F024         	call	_TMR_GetDeltaTime	;wreg free
 40453  005E5C  C068  F088         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 40454  005E60  C069  F089         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 40455  005E64  C06A  F08A         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 40456  005E68  C06B  F08B         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 40457                           
 40458                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 40459  005E6C  0E00               	movlw	0
 40460  005E6E  0100               	movlb	0	; () banked
 40461  005E70  6F90               	movwf	SwTimersInterrupt@i& (0+255),b
 40462  005E72  D061               	goto	l283
 40463  005E74                     
 40464                           ; BSR set to: 0
 40465                           ;sw_timer.c: 298: {
 40466                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 40467                           
 40468                           ; BSR set to: 0
 40469  005E74  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 40470  005E76  0D08               	mullw	8
 40471  005E78  0E04               	movlw	4
 40472  005E7A  26F3               	addwf	prodl,f,c
 40473  005E7C  0E00               	movlw	0
 40474  005E7E  22F4               	addwfc	prodh,f,c
 40475  005E80  0E00               	movlw	low _swTimers
 40476  005E82  24F3               	addwf	prodl,w,c
 40477  005E84  6ED9               	movwf	fsr2l,c
 40478  005E86  0E03               	movlw	high _swTimers
 40479  005E88  20F4               	addwfc	prodh,w,c
 40480  005E8A  6EDA               	movwf	fsr2h,c
 40481  005E8C  04DE               	decf	postinc2,w,c
 40482  005E8E  A4D8               	btfss	status,2,c
 40483  005E90  D051               	goto	l288
 40484                           
 40485                           ; BSR set to: 0
 40486                           ;sw_timer.c: 302: {
 40487                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 40488  005E92  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 40489  005E94  0D08               	mullw	8
 40490  005E96  0E00               	movlw	low _swTimers
 40491  005E98  24F3               	addwf	prodl,w,c
 40492  005E9A  6ED9               	movwf	fsr2l,c
 40493  005E9C  0E03               	movlw	high _swTimers
 40494  005E9E  20F4               	addwfc	prodh,w,c
 40495  005EA0  6EDA               	movwf	fsr2h,c
 40496  005EA2  50DE               	movf	postinc2,w,c
 40497  005EA4  5D88               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 40498  005EA6  50DE               	movf	postinc2,w,c
 40499  005EA8  5989               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 40500  005EAA  50DE               	movf	postinc2,w,c
 40501  005EAC  598A               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 40502  005EAE  50DE               	movf	postinc2,w,c
 40503  005EB0  598B               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 40504  005EB2  A0D8               	btfss	status,0,c
 40505  005EB4  D00D               	goto	l286
 40506                           
 40507                           ; BSR set to: 0
 40508                           ;sw_timer.c: 304: {
 40509                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 40510  005EB6  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 40511  005EB8  0D08               	mullw	8
 40512  005EBA  0E00               	movlw	low _swTimers
 40513  005EBC  24F3               	addwf	prodl,w,c
 40514  005EBE  6ED9               	movwf	fsr2l,c
 40515  005EC0  0E03               	movlw	high _swTimers
 40516  005EC2  20F4               	addwfc	prodh,w,c
 40517  005EC4  6EDA               	movwf	fsr2h,c
 40518  005EC6  6ADE               	clrf	postinc2,c
 40519  005EC8  6ADE               	clrf	postinc2,c
 40520  005ECA  6ADE               	clrf	postinc2,c
 40521  005ECC  6ADD               	clrf	postdec2,c
 40522                           
 40523                           ;sw_timer.c: 306: }
 40524  005ECE  D032               	goto	l288
 40525  005ED0                     l286:
 40526                           
 40527                           ; BSR set to: 0
 40528                           ;sw_timer.c: 307: else
 40529                           ;sw_timer.c: 308: {
 40530                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 40531                           
 40532                           ; BSR set to: 0
 40533  005ED0  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 40534  005ED2  0D08               	mullw	8
 40535  005ED4  0E00               	movlw	low _swTimers
 40536  005ED6  24F3               	addwf	prodl,w,c
 40537  005ED8  6ED9               	movwf	fsr2l,c
 40538  005EDA  0E03               	movlw	high _swTimers
 40539  005EDC  20F4               	addwfc	prodh,w,c
 40540  005EDE  6EDA               	movwf	fsr2h,c
 40541  005EE0  5188               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 40542  005EE2  5EDE               	subwf	postinc2,f,c
 40543  005EE4  5189               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 40544  005EE6  5ADE               	subwfb	postinc2,f,c
 40545  005EE8  518A               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 40546  005EEA  5ADE               	subwfb	postinc2,f,c
 40547  005EEC  518B               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 40548  005EEE  5ADE               	subwfb	postinc2,f,c
 40549                           
 40550                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 40551  005EF0  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 40552  005EF2  0D08               	mullw	8
 40553  005EF4  0E00               	movlw	low _swTimers
 40554  005EF6  24F3               	addwf	prodl,w,c
 40555  005EF8  6ED9               	movwf	fsr2l,c
 40556  005EFA  0E03               	movlw	high _swTimers
 40557  005EFC  20F4               	addwfc	prodh,w,c
 40558  005EFE  6EDA               	movwf	fsr2h,c
 40559  005F00  518C               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 40560  005F02  5CDE               	subwf	postinc2,w,c
 40561  005F04  518D               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 40562  005F06  58DE               	subwfb	postinc2,w,c
 40563  005F08  518E               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 40564  005F0A  58DE               	subwfb	postinc2,w,c
 40565  005F0C  518F               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 40566  005F0E  58DE               	subwfb	postinc2,w,c
 40567  005F10  B0D8               	btfsc	status,0,c
 40568  005F12  D010               	goto	l288
 40569                           
 40570                           ; BSR set to: 0
 40571                           ;sw_timer.c: 313: {
 40572                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 40573  005F14  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 40574  005F16  0D08               	mullw	8
 40575  005F18  0E00               	movlw	low _swTimers
 40576  005F1A  24F3               	addwf	prodl,w,c
 40577  005F1C  6ED9               	movwf	fsr2l,c
 40578  005F1E  0E03               	movlw	high _swTimers
 40579  005F20  20F4               	addwfc	prodh,w,c
 40580  005F22  6EDA               	movwf	fsr2h,c
 40581  005F24  CFDE F08C          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 40582  005F28  CFDE F08D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 40583  005F2C  CFDE F08E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 40584  005F30  CFDE F08F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 40585  005F34                     l288:
 40586                           
 40587                           ; BSR set to: 0
 40588                           
 40589                           ; BSR set to: 0
 40590                           
 40591                           ; BSR set to: 0
 40592                           
 40593                           ; BSR set to: 0
 40594  005F34  2B90               	incf	SwTimersInterrupt@i& (0+255),f,b
 40595  005F36                     l283:
 40596                           
 40597                           ; BSR set to: 0
 40598                           
 40599                           ; BSR set to: 0
 40600  005F36  51F9               	movf	_allocatedTimers& (0+255),w,b	;volatile
 40601  005F38  5D90               	subwf	SwTimersInterrupt@i& (0+255),w,b
 40602  005F3A  A0D8               	btfss	status,0,c
 40603  005F3C  D79B               	goto	l284
 40604                           
 40605                           ; BSR set to: 0
 40606                           ;sw_timer.c: 315: }
 40607                           ;sw_timer.c: 316: }
 40608                           ;sw_timer.c: 317: }
 40609                           ;sw_timer.c: 318: }
 40610                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 40611  005F3E  C08C  F080         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 40612  005F42  C08D  F081         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 40613  005F46  C08E  F082         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 40614  005F4A  C08F  F083         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 40615                           
 40616                           ; BSR set to: 0
 40617  005F4E  0012               	return		;funcret
 40618  005F50                     __end_of_SwTimersInterrupt:
 40619                           	opt stack 0
 40620                           tosu	equ	0xFFF
 40621                           tosh	equ	0xFFE
 40622                           tosl	equ	0xFFD
 40623                           pclath	equ	0xFFA
 40624                           tblptru	equ	0xFF8
 40625                           tblptrh	equ	0xFF7
 40626                           tblptrl	equ	0xFF6
 40627                           tablat	equ	0xFF5
 40628                           prodh	equ	0xFF4
 40629                           prodl	equ	0xFF3
 40630                           intcon	equ	0xFF2
 40631                           intcon2	equ	0xFF1
 40632                           intcon3	equ	0xFF0
 40633                           indf0	equ	0xFEF
 40634                           postinc0	equ	0xFEE
 40635                           plusw0	equ	0xFEB
 40636                           fsr0h	equ	0xFEA
 40637                           fsr0l	equ	0xFE9
 40638                           wreg	equ	0xFE8
 40639                           postinc1	equ	0xFE6
 40640                           postdec1	equ	0xFE5
 40641                           plusw1	equ	0xFE3
 40642                           fsr1h	equ	0xFE2
 40643                           fsr1l	equ	0xFE1
 40644                           indf2	equ	0xFDF
 40645                           postinc2	equ	0xFDE
 40646                           postdec2	equ	0xFDD
 40647                           plusw2	equ	0xFDB
 40648                           fsr2h	equ	0xFDA
 40649                           fsr2l	equ	0xFD9
 40650                           status	equ	0xFD8
 40651                           
 40652 ;; *************** function _TMR_GetDeltaTime *****************
 40653 ;; Defined at:
 40654 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40655 ;; Parameters:    Size  Location     Type
 40656 ;;		None
 40657 ;; Auto vars:     Size  Location     Type
 40658 ;;		None
 40659 ;; Return value:  Size  Location     Type
 40660 ;;                  4    8[BANK0 ] unsigned long 
 40661 ;; Registers used:
 40662 ;;		wreg, status,2, status,0, cstack
 40663 ;; Tracked objects:
 40664 ;;		On entry : 0/0
 40665 ;;		On exit  : 0/0
 40666 ;;		Unchanged: 0/0
 40667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40668 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40670 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40671 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40672 ;;Total ram usage:       24 bytes
 40673 ;; Hardware stack levels used:    1
 40674 ;; Hardware stack levels required when called:    8
 40675 ;; This function calls:
 40676 ;;		_TMR1_ReadTimer
 40677 ;; This function is called by:
 40678 ;;		_SwTimersInterrupt
 40679 ;; This function uses a non-reentrant model
 40680 ;;
 40681                           
 40682                           	psect	text201
 40683  0048A4                     __ptext201:
 40684                           	opt stack 0
 40685  0048A4                     _TMR_GetDeltaTime:
 40686                           	opt stack 18
 40687                           
 40688                           ;sw_timer.c: 90: static uint32_t retVal;
 40689                           ;sw_timer.c: 91: static uint16_t tmrVal;
 40690                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 40691                           
 40692                           ; BSR set to: 0
 40693                           ;incstack = 0
 40694  0048A4  EC24  F047         	call	_TMR1_ReadTimer	;wreg free
 40695  0048A8  C060  F119         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 40696  0048AC  C061  F11A         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 40697                           
 40698                           ;sw_timer.c: 95: if (timerOverflow == 1)
 40699  0048B0  0447               	decf	_timerOverflow,w,c	;volatile
 40700  0048B2  A4D8               	btfss	status,2,c
 40701  0048B4  D071               	goto	l216
 40702                           
 40703                           ;sw_timer.c: 96: {
 40704                           ;sw_timer.c: 97: timerOverflow = 0;
 40705  0048B6  0E00               	movlw	0
 40706  0048B8  6E47               	movwf	_timerOverflow,c	;volatile
 40707                           
 40708                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 40709  0048BA  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 40710  0048BE  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 40711  0048C2  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 40712  0048C6  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 40713  0048CA  0100               	movlb	0	; () banked
 40714  0048CC  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 40715  0048CE  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 40716  0048D0  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 40717  0048D2  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 40718  0048D4  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 40719  0048D6  0E00               	movlw	0
 40720  0048D8  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 40721  0048DA  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 40722  0048DC  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 40723  0048DE  5044               	movf	_reloadVal,w,c	;volatile
 40724  0048E0  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 40725  0048E2  5045               	movf	_reloadVal+1,w,c	;volatile
 40726  0048E4  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 40727  0048E6  6B72               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 40728  0048E8  6B73               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 40729  0048EA  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 40730  0048EC  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 40731  0048EE  1F72               	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 40732  0048F0  1F73               	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 40733  0048F2  2B70               	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 40734  0048F4  0E00               	movlw	0
 40735  0048F6  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 40736  0048F8  2372               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 40737  0048FA  2373               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 40738  0048FC  0101               	movlb	1	; () banked
 40739  0048FE  5119               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 40740  004900  0100               	movlb	0	; () banked
 40741  004902  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 40742  004904  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 40743  004906  0101               	movlb	1	; () banked
 40744  004908  511A               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 40745  00490A  0100               	movlb	0	; () banked
 40746  00490C  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 40747  00490E  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 40748  004910  0E00               	movlw	0
 40749  004912  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 40750  004914  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 40751  004916  0E00               	movlw	0
 40752  004918  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 40753  00491A  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 40754  00491C  516C               	movf	??_TMR_GetDeltaTime& (0+255),w,b
 40755  00491E  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 40756  004920  6F78               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 40757  004922  516D               	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 40758  004924  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 40759  004926  6F79               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 40760  004928  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 40761  00492A  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 40762  00492C  6F7A               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 40763  00492E  516F               	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 40764  004930  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 40765  004932  6F7B               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 40766  004934  5040               	movf	_ticksAdded,w,c	;volatile
 40767  004936  2578               	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 40768  004938  6F7C               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 40769  00493A  5041               	movf	_ticksAdded+1,w,c	;volatile
 40770  00493C  2179               	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 40771  00493E  6F7D               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 40772  004940  5042               	movf	_ticksAdded+2,w,c	;volatile
 40773  004942  217A               	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 40774  004944  6F7E               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 40775  004946  5043               	movf	_ticksAdded+3,w,c	;volatile
 40776  004948  217B               	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 40777  00494A  6F7F               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 40778  00494C  0E00               	movlw	0
 40779  00494E  257C               	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 40780  004950  0101               	movlb	1	; () banked
 40781  004952  6F08               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 40782  004954  0E00               	movlw	0
 40783  004956  0100               	movlb	0	; () banked
 40784  004958  217D               	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 40785  00495A  0101               	movlb	1	; () banked
 40786  00495C  6F09               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 40787  00495E  0E01               	movlw	1
 40788  004960  0100               	movlb	0	; () banked
 40789  004962  217E               	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 40790  004964  0101               	movlb	1	; () banked
 40791  004966  6F0A               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 40792  004968  0E00               	movlw	0
 40793  00496A  0100               	movlb	0	; () banked
 40794  00496C  217F               	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 40795  00496E  0101               	movlb	1	; () banked
 40796  004970  6F0B               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 40797                           
 40798                           ; BSR set to: 1
 40799                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 40800  004972  C119  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 40801  004976  C11A  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 40802  00497A  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 40803  00497C  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 40804                           
 40805                           ; BSR set to: 1
 40806                           ;sw_timer.c: 100: ticksAdded = 0;
 40807  00497E  0E00               	movlw	0
 40808  004980  6E40               	movwf	_ticksAdded,c	;volatile
 40809  004982  0E00               	movlw	0
 40810  004984  6E41               	movwf	_ticksAdded+1,c	;volatile
 40811  004986  0E00               	movlw	0
 40812  004988  6E42               	movwf	_ticksAdded+2,c	;volatile
 40813  00498A  0E00               	movlw	0
 40814  00498C  6E43               	movwf	_ticksAdded+3,c	;volatile
 40815                           
 40816                           ; BSR set to: 1
 40817                           ;sw_timer.c: 101: reloadVal = 0;
 40818  00498E  0E00               	movlw	0
 40819  004990  6E45               	movwf	_reloadVal+1,c	;volatile
 40820  004992  0E00               	movlw	0
 40821  004994  6E44               	movwf	_reloadVal,c	;volatile
 40822                           
 40823                           ;sw_timer.c: 102: }
 40824  004996  D049               	goto	l217
 40825  004998                     l216:
 40826                           
 40827                           ;sw_timer.c: 103: else
 40828                           ;sw_timer.c: 104: {
 40829                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 40830                           
 40831                           ; BSR set to: 1
 40832  004998  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 40833  00499C  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 40834  0049A0  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 40835  0049A4  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 40836  0049A8  0100               	movlb	0	; () banked
 40837  0049AA  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 40838  0049AC  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 40839  0049AE  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 40840  0049B0  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 40841  0049B2  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 40842  0049B4  0E00               	movlw	0
 40843  0049B6  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 40844  0049B8  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 40845  0049BA  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 40846  0049BC  C044  F070         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 40847  0049C0  C045  F071         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 40848  0049C4  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 40849  0049C6  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 40850  0049C8  4B70               	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 40851  0049CA  2B71               	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 40852  0049CC  0101               	movlb	1	; () banked
 40853  0049CE  5119               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 40854  0049D0  0100               	movlb	0	; () banked
 40855  0049D2  2770               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 40856  0049D4  0101               	movlb	1	; () banked
 40857  0049D6  511A               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 40858  0049D8  0100               	movlb	0	; () banked
 40859  0049DA  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 40860  0049DC  5170               	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 40861  0049DE  256C               	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 40862  0049E0  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 40863  0049E2  5171               	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 40864  0049E4  216D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 40865  0049E6  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 40866  0049E8  0E00               	movlw	0
 40867  0049EA  216E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 40868  0049EC  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 40869  0049EE  0E00               	movlw	0
 40870  0049F0  216F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 40871  0049F2  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 40872  0049F4  5040               	movf	_ticksAdded,w,c	;volatile
 40873  0049F6  2572               	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 40874  0049F8  0101               	movlb	1	; () banked
 40875  0049FA  6F08               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 40876  0049FC  5041               	movf	_ticksAdded+1,w,c	;volatile
 40877  0049FE  0100               	movlb	0	; () banked
 40878  004A00  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 40879  004A02  0101               	movlb	1	; () banked
 40880  004A04  6F09               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 40881  004A06  5042               	movf	_ticksAdded+2,w,c	;volatile
 40882  004A08  0100               	movlb	0	; () banked
 40883  004A0A  2174               	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 40884  004A0C  0101               	movlb	1	; () banked
 40885  004A0E  6F0A               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 40886  004A10  5043               	movf	_ticksAdded+3,w,c	;volatile
 40887  004A12  0100               	movlb	0	; () banked
 40888  004A14  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 40889  004A16  0101               	movlb	1	; () banked
 40890  004A18  6F0B               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 40891                           
 40892                           ;sw_timer.c: 106: ticksAccounted += retVal;
 40893  004A1A  5108               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 40894  004A1C  263C               	addwf	_ticksAccounted,f,c	;volatile
 40895  004A1E  5109               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 40896  004A20  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 40897  004A22  510A               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 40898  004A24  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 40899  004A26  510B               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 40900  004A28  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 40901  004A2A                     l217:
 40902                           
 40903                           ; BSR set to: 1
 40904                           ;sw_timer.c: 107: }
 40905                           ;sw_timer.c: 109: return retVal;
 40906                           
 40907                           ; BSR set to: 1
 40908  004A2A  C108  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 40909  004A2E  C109  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 40910  004A32  C10A  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 40911  004A36  C10B  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 40912  004A3A  0012               	return	
 40913  004A3C                     __end_of_TMR_GetDeltaTime:
 40914                           	opt stack 0
 40915                           tosu	equ	0xFFF
 40916                           tosh	equ	0xFFE
 40917                           tosl	equ	0xFFD
 40918                           pclath	equ	0xFFA
 40919                           tblptru	equ	0xFF8
 40920                           tblptrh	equ	0xFF7
 40921                           tblptrl	equ	0xFF6
 40922                           tablat	equ	0xFF5
 40923                           prodh	equ	0xFF4
 40924                           prodl	equ	0xFF3
 40925                           intcon	equ	0xFF2
 40926                           intcon2	equ	0xFF1
 40927                           intcon3	equ	0xFF0
 40928                           indf0	equ	0xFEF
 40929                           postinc0	equ	0xFEE
 40930                           plusw0	equ	0xFEB
 40931                           fsr0h	equ	0xFEA
 40932                           fsr0l	equ	0xFE9
 40933                           wreg	equ	0xFE8
 40934                           postinc1	equ	0xFE6
 40935                           postdec1	equ	0xFE5
 40936                           plusw1	equ	0xFE3
 40937                           fsr1h	equ	0xFE2
 40938                           fsr1l	equ	0xFE1
 40939                           indf2	equ	0xFDF
 40940                           postinc2	equ	0xFDE
 40941                           postdec2	equ	0xFDD
 40942                           plusw2	equ	0xFDB
 40943                           fsr2h	equ	0xFDA
 40944                           fsr2l	equ	0xFD9
 40945                           status	equ	0xFD8
 40946                           
 40947 ;; *************** function _TMR1_ReadTimer *****************
 40948 ;; Defined at:
 40949 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 40950 ;; Parameters:    Size  Location     Type
 40951 ;;		None
 40952 ;; Auto vars:     Size  Location     Type
 40953 ;;  readVal         2    4[BANK0 ] unsigned int 
 40954 ;;  readValLow      1    7[BANK0 ] unsigned char 
 40955 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 40956 ;; Return value:  Size  Location     Type
 40957 ;;                  2    0[BANK0 ] unsigned int 
 40958 ;; Registers used:
 40959 ;;		wreg, status,2
 40960 ;; Tracked objects:
 40961 ;;		On entry : 0/0
 40962 ;;		On exit  : 0/0
 40963 ;;		Unchanged: 0/0
 40964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40965 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40966 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40967 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40968 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40969 ;;Total ram usage:        8 bytes
 40970 ;; Hardware stack levels used:    1
 40971 ;; Hardware stack levels required when called:    7
 40972 ;; This function calls:
 40973 ;;		Nothing
 40974 ;; This function is called by:
 40975 ;;		_TMR_GetDeltaTime
 40976 ;;		_TMR_SwapTimer
 40977 ;; This function uses a non-reentrant model
 40978 ;;
 40979                           
 40980                           	psect	text202
 40981  008E48                     __ptext202:
 40982                           	opt stack 0
 40983  008E48                     _TMR1_ReadTimer:
 40984                           	opt stack 18
 40985                           
 40986                           ;tmr1.c: 107: uint16_t readVal;
 40987                           ;tmr1.c: 108: uint8_t readValHigh;
 40988                           ;tmr1.c: 109: uint8_t readValLow;
 40989                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 40990                           
 40991                           ; BSR set to: 1
 40992                           ;incstack = 0
 40993  008E48  82CD               	bsf	4045,1,c	;volatile
 40994                           
 40995                           ;tmr1.c: 113: readValLow = TMR1L;
 40996  008E4A  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 40997                           
 40998                           ;tmr1.c: 114: readValHigh = TMR1H;
 40999  008E4E  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 41000                           
 41001                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 41002  008E52  0100               	movlb	0	; () banked
 41003  008E54  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 41004  008E56  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 41005  008E58  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 41006  008E5A  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 41007  008E5C  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 41008                           
 41009                           ; BSR set to: 0
 41010                           ;tmr1.c: 118: return readVal;
 41011  008E60  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 41012  008E64  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 41013  008E68  0012               	return	
 41014  008E6A                     __end_of_TMR1_ReadTimer:
 41015                           	opt stack 0
 41016                           tosu	equ	0xFFF
 41017                           tosh	equ	0xFFE
 41018                           tosl	equ	0xFFD
 41019                           pclath	equ	0xFFA
 41020                           tblptru	equ	0xFF8
 41021                           tblptrh	equ	0xFF7
 41022                           tblptrl	equ	0xFF6
 41023                           tablat	equ	0xFF5
 41024                           prodh	equ	0xFF4
 41025                           prodl	equ	0xFF3
 41026                           intcon	equ	0xFF2
 41027                           intcon2	equ	0xFF1
 41028                           intcon3	equ	0xFF0
 41029                           indf0	equ	0xFEF
 41030                           postinc0	equ	0xFEE
 41031                           plusw0	equ	0xFEB
 41032                           fsr0h	equ	0xFEA
 41033                           fsr0l	equ	0xFE9
 41034                           wreg	equ	0xFE8
 41035                           postinc1	equ	0xFE6
 41036                           postdec1	equ	0xFE5
 41037                           plusw1	equ	0xFE3
 41038                           fsr1h	equ	0xFE2
 41039                           fsr1l	equ	0xFE1
 41040                           indf2	equ	0xFDF
 41041                           postinc2	equ	0xFDE
 41042                           postdec2	equ	0xFDD
 41043                           plusw2	equ	0xFDB
 41044                           fsr2h	equ	0xFDA
 41045                           fsr2l	equ	0xFD9
 41046                           status	equ	0xFD8
 41047                           
 41048 ;; *************** function _SwTimerSetTimeout *****************
 41049 ;; Defined at:
 41050 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41051 ;; Parameters:    Size  Location     Type
 41052 ;;  timerId         1    wreg     unsigned char 
 41053 ;;  timeout         4   13[BANK0 ] unsigned long 
 41054 ;; Auto vars:     Size  Location     Type
 41055 ;;  timerId         1   21[BANK0 ] unsigned char 
 41056 ;; Return value:  Size  Location     Type
 41057 ;;                  1    wreg      void 
 41058 ;; Registers used:
 41059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41060 ;; Tracked objects:
 41061 ;;		On entry : 0/0
 41062 ;;		On exit  : 0/0
 41063 ;;		Unchanged: 0/0
 41064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41065 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41067 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41068 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41069 ;;Total ram usage:        9 bytes
 41070 ;; Hardware stack levels used:    1
 41071 ;; Hardware stack levels required when called:    7
 41072 ;; This function calls:
 41073 ;;		Nothing
 41074 ;; This function is called by:
 41075 ;;		_RADIO_Transmit
 41076 ;;		_RADIO_ReceiveStart
 41077 ;;		_LORAWAN_TxDone
 41078 ;;		_LORAWAN_RxTimeout
 41079 ;;		_StartReTxTimer
 41080 ;;		_DutyCycleCallback
 41081 ;;		_LORAWAN_Join
 41082 ;;		_LORAWAN_LinkCheckConfigure
 41083 ;;		_LORAWAN_LinkCheckCallback
 41084 ;;		_UpdateRetransmissionAckTimeoutState
 41085 ;;		_UpdateJoinSuccessState
 41086 ;; This function uses a non-reentrant model
 41087 ;;
 41088                           
 41089                           	psect	text203
 41090  0086C4                     __ptext203:
 41091                           	opt stack 0
 41092  0086C4                     _SwTimerSetTimeout:
 41093                           	opt stack 21
 41094                           
 41095                           ; BSR set to: 0
 41096                           ;incstack = 0
 41097                           ;SwTimerSetTimeout@timerId stored from wreg
 41098  0086C4  0100               	movlb	0	; () banked
 41099  0086C6  6F75               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 41100                           
 41101                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 41102  0086C8  9EF2               	bcf	intcon,7,c	;volatile
 41103                           
 41104                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 41105  0086CA  0EE0               	movlw	224
 41106  0086CC  0100               	movlb	0	; () banked
 41107  0086CE  256D               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 41108  0086D0  6F71               	movwf	??_SwTimerSetTimeout& (0+255),b
 41109  0086D2  0EFF               	movlw	255
 41110  0086D4  216E               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 41111  0086D6  6F72               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 41112  0086D8  0EFF               	movlw	255
 41113  0086DA  216F               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 41114  0086DC  6F73               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 41115  0086DE  0EFF               	movlw	255
 41116  0086E0  2170               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 41117  0086E2  6F74               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 41118  0086E4  5175               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 41119  0086E6  0D08               	mullw	8
 41120  0086E8  0E00               	movlw	low _swTimers
 41121  0086EA  24F3               	addwf	prodl,w,c
 41122  0086EC  6ED9               	movwf	fsr2l,c
 41123  0086EE  0E03               	movlw	high _swTimers
 41124  0086F0  20F4               	addwfc	prodh,w,c
 41125  0086F2  6EDA               	movwf	fsr2h,c
 41126  0086F4  C071  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 41127  0086F8  C072  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 41128  0086FC  C073  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 41129  008700  C074  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 41130                           
 41131                           ; BSR set to: 0
 41132                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 41133  008704  8EF2               	bsf	intcon,7,c	;volatile
 41134                           
 41135                           ; BSR set to: 0
 41136  008706  0012               	return		;funcret
 41137  008708                     __end_of_SwTimerSetTimeout:
 41138                           	opt stack 0
 41139                           tosu	equ	0xFFF
 41140                           tosh	equ	0xFFE
 41141                           tosl	equ	0xFFD
 41142                           pclath	equ	0xFFA
 41143                           tblptru	equ	0xFF8
 41144                           tblptrh	equ	0xFF7
 41145                           tblptrl	equ	0xFF6
 41146                           tablat	equ	0xFF5
 41147                           prodh	equ	0xFF4
 41148                           prodl	equ	0xFF3
 41149                           intcon	equ	0xFF2
 41150                           intcon2	equ	0xFF1
 41151                           intcon3	equ	0xFF0
 41152                           indf0	equ	0xFEF
 41153                           postinc0	equ	0xFEE
 41154                           plusw0	equ	0xFEB
 41155                           fsr0h	equ	0xFEA
 41156                           fsr0l	equ	0xFE9
 41157                           wreg	equ	0xFE8
 41158                           postinc1	equ	0xFE6
 41159                           postdec1	equ	0xFE5
 41160                           plusw1	equ	0xFE3
 41161                           fsr1h	equ	0xFE2
 41162                           fsr1l	equ	0xFE1
 41163                           indf2	equ	0xFDF
 41164                           postinc2	equ	0xFDE
 41165                           postdec2	equ	0xFDD
 41166                           plusw2	equ	0xFDB
 41167                           fsr2h	equ	0xFDA
 41168                           fsr2l	equ	0xFD9
 41169                           status	equ	0xFD8
 41170                           
 41171 ;; *************** function _InitDefault868Channels *****************
 41172 ;; Defined at:
 41173 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 41174 ;; Parameters:    Size  Location     Type
 41175 ;;		None
 41176 ;; Auto vars:     Size  Location     Type
 41177 ;;  i               1   11[BANK0 ] unsigned char 
 41178 ;; Return value:  Size  Location     Type
 41179 ;;                  1    wreg      void 
 41180 ;; Registers used:
 41181 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41182 ;; Tracked objects:
 41183 ;;		On entry : 0/0
 41184 ;;		On exit  : 0/0
 41185 ;;		Unchanged: 0/0
 41186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41188 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41190 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41191 ;;Total ram usage:        1 bytes
 41192 ;; Hardware stack levels used:    1
 41193 ;; Hardware stack levels required when called:    8
 41194 ;; This function calls:
 41195 ;;		_memcpy
 41196 ;;		_memset
 41197 ;; This function is called by:
 41198 ;;		_LORAWAN_Reset
 41199 ;; This function uses a non-reentrant model
 41200 ;;
 41201                           
 41202                           	psect	text204
 41203  007568                     __ptext204:
 41204                           	opt stack 0
 41205  007568                     _InitDefault868Channels:
 41206                           	opt stack 20
 41207                           
 41208                           ;lorawan_eu.c: 981: uint8_t i;
 41209                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 41210                           
 41211                           ; BSR set to: 0
 41212                           ;incstack = 0
 41213  007568  0E00               	movlw	low _Channels
 41214  00756A  0100               	movlb	0	; () banked
 41215  00756C  6F60               	movwf	memset@p1& (0+255),b
 41216  00756E  0E04               	movlw	high _Channels
 41217  007570  6F61               	movwf	(memset@p1+1)& (0+255),b
 41218  007572  0E00               	movlw	0
 41219  007574  6F63               	movwf	(memset@c+1)& (0+255),b
 41220  007576  0E00               	movlw	0
 41221  007578  6F62               	movwf	memset@c& (0+255),b
 41222  00757A  0E00               	movlw	0
 41223  00757C  6F65               	movwf	(memset@n+1)& (0+255),b
 41224  00757E  0EE0               	movlw	224
 41225  007580  6F64               	movwf	memset@n& (0+255),b
 41226  007582  EC45  F045         	call	_memset	;wreg free
 41227                           
 41228                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 41229  007586  0E00               	movlw	low _Channels
 41230  007588  0100               	movlb	0	; () banked
 41231  00758A  6F60               	movwf	memcpy@d1& (0+255),b
 41232  00758C  0E04               	movlw	high _Channels
 41233  00758E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41234  007590  0EAC               	movlw	low _DefaultChannels868
 41235  007592  6F62               	movwf	memcpy@s1& (0+255),b
 41236  007594  0EFF               	movlw	high _DefaultChannels868
 41237  007596  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41238  007598  0E00               	movlw	0
 41239  00759A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41240  00759C  0E2A               	movlw	42
 41241  00759E  6F64               	movwf	memcpy@n& (0+255),b
 41242  0075A0  EC6C  F03F         	call	_memcpy	;wreg free
 41243                           
 41244                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 41245  0075A4  0E03               	movlw	3
 41246  0075A6  0100               	movlb	0	; () banked
 41247  0075A8  6F6B               	movwf	InitDefault868Channels@i& (0+255),b
 41248  0075AA                     l16543:
 41249                           
 41250                           ; BSR set to: 0
 41251  0075AA  0E0F               	movlw	15
 41252  0075AC  656B               	cpfsgt	InitDefault868Channels@i& (0+255),b
 41253  0075AE  D001               	goto	l1201
 41254  0075B0  0012               	return	
 41255  0075B2                     l1201:
 41256                           
 41257                           ; BSR set to: 0
 41258                           ;lorawan_eu.c: 986: {
 41259                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 41260                           
 41261                           ; BSR set to: 0
 41262  0075B2  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 41263  0075B4  0D0E               	mullw	14
 41264  0075B6  0E06               	movlw	6
 41265  0075B8  26F3               	addwf	prodl,f,c
 41266  0075BA  0E00               	movlw	0
 41267  0075BC  22F4               	addwfc	prodh,f,c
 41268  0075BE  0E00               	movlw	low _Channels
 41269  0075C0  24F3               	addwf	prodl,w,c
 41270  0075C2  6ED9               	movwf	fsr2l,c
 41271  0075C4  0E04               	movlw	high _Channels
 41272  0075C6  20F4               	addwfc	prodh,w,c
 41273  0075C8  6EDA               	movwf	fsr2h,c
 41274  0075CA  0EFF               	movlw	255
 41275  0075CC  6EDE               	movwf	postinc2,c
 41276  0075CE  0EFF               	movlw	255
 41277  0075D0  6EDD               	movwf	postdec2,c
 41278                           
 41279                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 41280  0075D2  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 41281  0075D4  0D0E               	mullw	14
 41282  0075D6  0E05               	movlw	5
 41283  0075D8  26F3               	addwf	prodl,f,c
 41284  0075DA  0E00               	movlw	0
 41285  0075DC  22F4               	addwfc	prodh,f,c
 41286  0075DE  0E00               	movlw	low _Channels
 41287  0075E0  24F3               	addwf	prodl,w,c
 41288  0075E2  6ED9               	movwf	fsr2l,c
 41289  0075E4  0E04               	movlw	high _Channels
 41290  0075E6  20F4               	addwfc	prodh,w,c
 41291  0075E8  6EDA               	movwf	fsr2h,c
 41292  0075EA  0EFF               	movlw	255
 41293  0075EC  6EDF               	movwf	indf2,c
 41294                           
 41295                           ; BSR set to: 0
 41296  0075EE  2B6B               	incf	InitDefault868Channels@i& (0+255),f,b
 41297  0075F0  D7DC               	goto	l16543
 41298  0075F2                     __end_of_InitDefault868Channels:
 41299                           	opt stack 0
 41300                           tosu	equ	0xFFF
 41301                           tosh	equ	0xFFE
 41302                           tosl	equ	0xFFD
 41303                           pclath	equ	0xFFA
 41304                           tblptru	equ	0xFF8
 41305                           tblptrh	equ	0xFF7
 41306                           tblptrl	equ	0xFF6
 41307                           tablat	equ	0xFF5
 41308                           prodh	equ	0xFF4
 41309                           prodl	equ	0xFF3
 41310                           intcon	equ	0xFF2
 41311                           intcon2	equ	0xFF1
 41312                           intcon3	equ	0xFF0
 41313                           indf0	equ	0xFEF
 41314                           postinc0	equ	0xFEE
 41315                           plusw0	equ	0xFEB
 41316                           fsr0h	equ	0xFEA
 41317                           fsr0l	equ	0xFE9
 41318                           wreg	equ	0xFE8
 41319                           postinc1	equ	0xFE6
 41320                           postdec1	equ	0xFE5
 41321                           plusw1	equ	0xFE3
 41322                           fsr1h	equ	0xFE2
 41323                           fsr1l	equ	0xFE1
 41324                           indf2	equ	0xFDF
 41325                           postinc2	equ	0xFDE
 41326                           postdec2	equ	0xFDD
 41327                           plusw2	equ	0xFDB
 41328                           fsr2h	equ	0xFDA
 41329                           fsr2l	equ	0xFD9
 41330                           status	equ	0xFD8
 41331                           
 41332 ;; *************** function _InitDefault433Channels *****************
 41333 ;; Defined at:
 41334 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 41335 ;; Parameters:    Size  Location     Type
 41336 ;;		None
 41337 ;; Auto vars:     Size  Location     Type
 41338 ;;  i               1   11[BANK0 ] unsigned char 
 41339 ;; Return value:  Size  Location     Type
 41340 ;;                  1    wreg      void 
 41341 ;; Registers used:
 41342 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41343 ;; Tracked objects:
 41344 ;;		On entry : 0/0
 41345 ;;		On exit  : 0/0
 41346 ;;		Unchanged: 0/0
 41347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41351 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41352 ;;Total ram usage:        1 bytes
 41353 ;; Hardware stack levels used:    1
 41354 ;; Hardware stack levels required when called:    8
 41355 ;; This function calls:
 41356 ;;		_memcpy
 41357 ;;		_memset
 41358 ;; This function is called by:
 41359 ;;		_LORAWAN_Reset
 41360 ;; This function uses a non-reentrant model
 41361 ;;
 41362                           
 41363                           	psect	text205
 41364  0075F2                     __ptext205:
 41365                           	opt stack 0
 41366  0075F2                     _InitDefault433Channels:
 41367                           	opt stack 20
 41368                           
 41369                           ;lorawan_eu.c: 996: uint8_t i;
 41370                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 41371                           
 41372                           ; BSR set to: 0
 41373                           ;incstack = 0
 41374  0075F2  0E00               	movlw	low _Channels
 41375  0075F4  0100               	movlb	0	; () banked
 41376  0075F6  6F60               	movwf	memset@p1& (0+255),b
 41377  0075F8  0E04               	movlw	high _Channels
 41378  0075FA  6F61               	movwf	(memset@p1+1)& (0+255),b
 41379  0075FC  0E00               	movlw	0
 41380  0075FE  6F63               	movwf	(memset@c+1)& (0+255),b
 41381  007600  0E00               	movlw	0
 41382  007602  6F62               	movwf	memset@c& (0+255),b
 41383  007604  0E00               	movlw	0
 41384  007606  6F65               	movwf	(memset@n+1)& (0+255),b
 41385  007608  0EE0               	movlw	224
 41386  00760A  6F64               	movwf	memset@n& (0+255),b
 41387  00760C  EC45  F045         	call	_memset	;wreg free
 41388                           
 41389                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 41390  007610  0E00               	movlw	low _Channels
 41391  007612  0100               	movlb	0	; () banked
 41392  007614  6F60               	movwf	memcpy@d1& (0+255),b
 41393  007616  0E04               	movlw	high _Channels
 41394  007618  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41395  00761A  0E82               	movlw	low _DefaultChannels433
 41396  00761C  6F62               	movwf	memcpy@s1& (0+255),b
 41397  00761E  0EFF               	movlw	high _DefaultChannels433
 41398  007620  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41399  007622  0E00               	movlw	0
 41400  007624  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41401  007626  0E2A               	movlw	42
 41402  007628  6F64               	movwf	memcpy@n& (0+255),b
 41403  00762A  EC6C  F03F         	call	_memcpy	;wreg free
 41404                           
 41405                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 41406  00762E  0E03               	movlw	3
 41407  007630  0100               	movlb	0	; () banked
 41408  007632  6F6B               	movwf	InitDefault433Channels@i& (0+255),b
 41409  007634                     l16559:
 41410                           
 41411                           ; BSR set to: 0
 41412  007634  0E0F               	movlw	15
 41413  007636  656B               	cpfsgt	InitDefault433Channels@i& (0+255),b
 41414  007638  D001               	goto	l1206
 41415  00763A  0012               	return	
 41416  00763C                     l1206:
 41417                           
 41418                           ; BSR set to: 0
 41419                           ;lorawan_eu.c: 1001: {
 41420                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 41421                           
 41422                           ; BSR set to: 0
 41423  00763C  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 41424  00763E  0D0E               	mullw	14
 41425  007640  0E06               	movlw	6
 41426  007642  26F3               	addwf	prodl,f,c
 41427  007644  0E00               	movlw	0
 41428  007646  22F4               	addwfc	prodh,f,c
 41429  007648  0E00               	movlw	low _Channels
 41430  00764A  24F3               	addwf	prodl,w,c
 41431  00764C  6ED9               	movwf	fsr2l,c
 41432  00764E  0E04               	movlw	high _Channels
 41433  007650  20F4               	addwfc	prodh,w,c
 41434  007652  6EDA               	movwf	fsr2h,c
 41435  007654  0EFF               	movlw	255
 41436  007656  6EDE               	movwf	postinc2,c
 41437  007658  0EFF               	movlw	255
 41438  00765A  6EDD               	movwf	postdec2,c
 41439                           
 41440                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 41441  00765C  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 41442  00765E  0D0E               	mullw	14
 41443  007660  0E05               	movlw	5
 41444  007662  26F3               	addwf	prodl,f,c
 41445  007664  0E00               	movlw	0
 41446  007666  22F4               	addwfc	prodh,f,c
 41447  007668  0E00               	movlw	low _Channels
 41448  00766A  24F3               	addwf	prodl,w,c
 41449  00766C  6ED9               	movwf	fsr2l,c
 41450  00766E  0E04               	movlw	high _Channels
 41451  007670  20F4               	addwfc	prodh,w,c
 41452  007672  6EDA               	movwf	fsr2h,c
 41453  007674  0EFF               	movlw	255
 41454  007676  6EDF               	movwf	indf2,c
 41455                           
 41456                           ; BSR set to: 0
 41457  007678  2B6B               	incf	InitDefault433Channels@i& (0+255),f,b
 41458  00767A  D7DC               	goto	l16559
 41459  00767C                     __end_of_InitDefault433Channels:
 41460                           	opt stack 0
 41461                           tosu	equ	0xFFF
 41462                           tosh	equ	0xFFE
 41463                           tosl	equ	0xFFD
 41464                           pclath	equ	0xFFA
 41465                           tblptru	equ	0xFF8
 41466                           tblptrh	equ	0xFF7
 41467                           tblptrl	equ	0xFF6
 41468                           tablat	equ	0xFF5
 41469                           prodh	equ	0xFF4
 41470                           prodl	equ	0xFF3
 41471                           intcon	equ	0xFF2
 41472                           intcon2	equ	0xFF1
 41473                           intcon3	equ	0xFF0
 41474                           indf0	equ	0xFEF
 41475                           postinc0	equ	0xFEE
 41476                           plusw0	equ	0xFEB
 41477                           fsr0h	equ	0xFEA
 41478                           fsr0l	equ	0xFE9
 41479                           wreg	equ	0xFE8
 41480                           postinc1	equ	0xFE6
 41481                           postdec1	equ	0xFE5
 41482                           plusw1	equ	0xFE3
 41483                           fsr1h	equ	0xFE2
 41484                           fsr1l	equ	0xFE1
 41485                           indf2	equ	0xFDF
 41486                           postinc2	equ	0xFDE
 41487                           postdec2	equ	0xFDD
 41488                           plusw2	equ	0xFDB
 41489                           fsr2h	equ	0xFDA
 41490                           fsr2l	equ	0xFD9
 41491                           status	equ	0xFD8
 41492                           
 41493 ;; *************** function _memset *****************
 41494 ;; Defined at:
 41495 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 41496 ;; Parameters:    Size  Location     Type
 41497 ;;  p1              2    0[BANK0 ] PTR void 
 41498 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 41499 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 41500 ;;  c               2    2[BANK0 ] int 
 41501 ;;  n               2    4[BANK0 ] unsigned int 
 41502 ;; Auto vars:     Size  Location     Type
 41503 ;;  p               2    6[BANK0 ] PTR unsigned char 
 41504 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 41505 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 41506 ;; Return value:  Size  Location     Type
 41507 ;;                  2    0[BANK0 ] PTR void 
 41508 ;; Registers used:
 41509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41510 ;; Tracked objects:
 41511 ;;		On entry : 0/0
 41512 ;;		On exit  : 0/0
 41513 ;;		Unchanged: 0/0
 41514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41515 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41516 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41518 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41519 ;;Total ram usage:        8 bytes
 41520 ;; Hardware stack levels used:    1
 41521 ;; Hardware stack levels required when called:    7
 41522 ;; This function calls:
 41523 ;;		Nothing
 41524 ;; This function is called by:
 41525 ;;		_AESCmac
 41526 ;;		_GenerateSubkey
 41527 ;;		_LORAWAN_Reset
 41528 ;;		_InitDefault868Channels
 41529 ;;		_InitDefault433Channels
 41530 ;;		_AssemblePacket
 41531 ;;		_PrepareJoinRequestFrame
 41532 ;;		_PrepareSessionKeys
 41533 ;;		_AssembleEncryptionBlock
 41534 ;; This function uses a non-reentrant model
 41535 ;;
 41536                           
 41537                           	psect	text206
 41538  008A8A                     __ptext206:
 41539                           	opt stack 0
 41540  008A8A                     _memset:
 41541                           	opt stack 21
 41542                           
 41543                           ; BSR set to: 0
 41544                           ;incstack = 0
 41545  008A8A  C060  F066         	movff	memset@p1,memset@p
 41546  008A8E  C061  F067         	movff	memset@p1+1,memset@p+1
 41547  008A92  D009               	goto	l3175
 41548  008A94                     l13605:
 41549  008A94  C066  FFD9         	movff	memset@p,fsr2l
 41550  008A98  C067  FFDA         	movff	memset@p+1,fsr2h
 41551  008A9C  C062  FFDF         	movff	memset@c,indf2
 41552  008AA0  0100               	movlb	0	; () banked
 41553  008AA2  4B66               	infsnz	memset@p& (0+255),f,b
 41554  008AA4  2B67               	incf	(memset@p+1)& (0+255),f,b
 41555  008AA6                     l3175:
 41556                           
 41557                           ; BSR set to: 0
 41558  008AA6  0100               	movlb	0	; () banked
 41559  008AA8  0764               	decf	memset@n& (0+255),f,b
 41560  008AAA  A0D8               	btfss	status,0,c
 41561  008AAC  0765               	decf	(memset@n+1)& (0+255),f,b
 41562  008AAE  2964               	incf	memset@n& (0+255),w,b
 41563  008AB0  E1F1               	bnz	l13605
 41564  008AB2  2965               	incf	(memset@n+1)& (0+255),w,b
 41565  008AB4  B4D8               	btfsc	status,2,c
 41566  008AB6  0012               	return	
 41567  008AB8  D7ED               	goto	l3176
 41568  008ABA                     __end_of_memset:
 41569                           	opt stack 0
 41570                           tosu	equ	0xFFF
 41571                           tosh	equ	0xFFE
 41572                           tosl	equ	0xFFD
 41573                           pclath	equ	0xFFA
 41574                           tblptru	equ	0xFF8
 41575                           tblptrh	equ	0xFF7
 41576                           tblptrl	equ	0xFF6
 41577                           tablat	equ	0xFF5
 41578                           prodh	equ	0xFF4
 41579                           prodl	equ	0xFF3
 41580                           intcon	equ	0xFF2
 41581                           intcon2	equ	0xFF1
 41582                           intcon3	equ	0xFF0
 41583                           indf0	equ	0xFEF
 41584                           postinc0	equ	0xFEE
 41585                           plusw0	equ	0xFEB
 41586                           fsr0h	equ	0xFEA
 41587                           fsr0l	equ	0xFE9
 41588                           wreg	equ	0xFE8
 41589                           postinc1	equ	0xFE6
 41590                           postdec1	equ	0xFE5
 41591                           plusw1	equ	0xFE3
 41592                           fsr1h	equ	0xFE2
 41593                           fsr1l	equ	0xFE1
 41594                           indf2	equ	0xFDF
 41595                           postinc2	equ	0xFDE
 41596                           postdec2	equ	0xFDD
 41597                           plusw2	equ	0xFDB
 41598                           fsr2h	equ	0xFDA
 41599                           fsr2l	equ	0xFD9
 41600                           status	equ	0xFD8
 41601                           
 41602 ;; *************** function _memcpy *****************
 41603 ;; Defined at:
 41604 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 41605 ;; Parameters:    Size  Location     Type
 41606 ;;  d1              2    0[BANK0 ] PTR void 
 41607 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 41608 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 41609 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 41610 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 41611 ;;  s1              2    2[BANK0 ] PTR const void 
 41612 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), adcResult.cfList(16), data(8), 
 41613 ;;		 -> adcResult(4), appSKey(16), nwkSKey(16), applicationKey(16), 
 41614 ;;		 -> deviceEUI(8), applicationEUI(8), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2)
      +, 
 41615 ;;		 -> PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), 
 41616 ;;		 -> loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessionKey(16), loRa.activati
      +onParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), 
 41617 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), loRa.activationParameters.m
      +castApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
 41618 ;;		 -> loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activation
      +Parameters(105), 
 41619 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 41620 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 41621 ;;		 -> AESCmac@y(16), NULL(0), 
 41622 ;;  n               2    4[BANK0 ] unsigned int 
 41623 ;; Auto vars:     Size  Location     Type
 41624 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 41625 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), adcResult.cfList(16), data(8), 
 41626 ;;		 -> adcResult(4), appSKey(16), nwkSKey(16), applicationKey(16), 
 41627 ;;		 -> deviceEUI(8), applicationEUI(8), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2)
      +, 
 41628 ;;		 -> PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), 
 41629 ;;		 -> loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessionKey(16), loRa.activati
      +onParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), 
 41630 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), loRa.activationParameters.m
      +castApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
 41631 ;;		 -> loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activation
      +Parameters(105), 
 41632 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 41633 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 41634 ;;		 -> AESCmac@y(16), NULL(0), 
 41635 ;;  d               2    7[BANK0 ] PTR unsigned char 
 41636 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 41637 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 41638 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 41639 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 41640 ;;  tmp             1    6[BANK0 ] unsigned char 
 41641 ;; Return value:  Size  Location     Type
 41642 ;;                  2    0[BANK0 ] PTR void 
 41643 ;; Registers used:
 41644 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 41645 ;; Tracked objects:
 41646 ;;		On entry : 0/0
 41647 ;;		On exit  : 0/0
 41648 ;;		Unchanged: 0/0
 41649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41650 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41651 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41653 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41654 ;;Total ram usage:       11 bytes
 41655 ;; Hardware stack levels used:    1
 41656 ;; Hardware stack levels required when called:    7
 41657 ;; This function calls:
 41658 ;;		Nothing
 41659 ;; This function is called by:
 41660 ;;		_AESCmac
 41661 ;;		_RADIO_SetFSKSyncWord
 41662 ;;		_UpdateCfList
 41663 ;;		_InitDefault868Channels
 41664 ;;		_InitDefault433Channels
 41665 ;;		_AESEncodeLoRa
 41666 ;;		_LORAWAN_SetDeviceEui
 41667 ;;		_LORAWAN_SetApplicationEui
 41668 ;;		_LORAWAN_SetNetworkSessionKey
 41669 ;;		_LORAWAN_SetApplicationSessionKey
 41670 ;;		_LORAWAN_SetApplicationKey
 41671 ;;		_LORAWAN_RxDone
 41672 ;;		_AssemblePacket
 41673 ;;		_PrepareJoinRequestFrame
 41674 ;;		_PrepareSessionKeys
 41675 ;;		_AssembleEncryptionBlock
 41676 ;;		_ExtractMic
 41677 ;;		_ComputeMic
 41678 ;;		_RADIO_GetData
 41679 ;;		_RADIO_GetFSKSyncWord
 41680 ;;		_LORAWAN_SetMcastNetworkSessionKey
 41681 ;;		_LORAWAN_SetMcastApplicationSessionKey
 41682 ;;		_LORAWAN_GetMcastApplicationSessionKey
 41683 ;;		_LORAWAN_GetMcastNetworkSessionKey
 41684 ;;		_LORAWAN_GetDeviceEui
 41685 ;;		_LORAWAN_GetApplicationEui
 41686 ;;		_LORAWAN_GetNetworkSessionKey
 41687 ;;		_LORAWAN_GetApplicationSessionKey
 41688 ;;		_LORAWAN_GetApplicationKey
 41689 ;; This function uses a non-reentrant model
 41690 ;;
 41691                           
 41692                           	psect	text207
 41693  007ED8                     __ptext207:
 41694                           	opt stack 0
 41695  007ED8                     _memcpy:
 41696                           	opt stack 22
 41697                           
 41698                           ; BSR set to: 0
 41699                           ;incstack = 0
 41700  007ED8  C062  F069         	movff	memcpy@s1,memcpy@s
 41701  007EDC  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 41702  007EE0  C060  F067         	movff	memcpy@d1,memcpy@d
 41703  007EE4  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 41704  007EE8  D01D               	goto	l3169
 41705  007EEA                     l13393:
 41706  007EEA  C069  FFF6         	movff	memcpy@s,tblptrl
 41707  007EEE  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 41708  007EF2  0E00               	movlw	low (__mediumconst shr (0+16))
 41709  007EF4  6EF8               	movwf	tblptru,c
 41710  007EF6  0E0F               	movlw	(high __ramtop+-1)
 41711  007EF8  64F7               	cpfsgt	tblptrh,c
 41712  007EFA  D003               	bra	u14787
 41713  007EFC  0008               	tblrd		*
 41714  007EFE  50F5               	movf	tablat,w,c
 41715  007F00  D005               	bra	u14780
 41716  007F02                     u14787:
 41717  007F02  CFF6 FFE9          	movff	tblptrl,fsr0l
 41718  007F06  CFF7 FFEA          	movff	tblptrh,fsr0h
 41719  007F0A  50EF               	movf	indf0,w,c
 41720  007F0C                     u14780:
 41721  007F0C  0100               	movlb	0	; () banked
 41722  007F0E  6F66               	movwf	memcpy@tmp& (0+255),b
 41723                           
 41724                           ; BSR set to: 0
 41725  007F10  4B69               	infsnz	memcpy@s& (0+255),f,b
 41726  007F12  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 41727                           
 41728                           ; BSR set to: 0
 41729  007F14  C067  FFD9         	movff	memcpy@d,fsr2l
 41730  007F18  C068  FFDA         	movff	memcpy@d+1,fsr2h
 41731  007F1C  C066  FFDF         	movff	memcpy@tmp,indf2
 41732                           
 41733                           ; BSR set to: 0
 41734  007F20  4B67               	infsnz	memcpy@d& (0+255),f,b
 41735  007F22  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 41736  007F24                     l3169:
 41737                           
 41738                           ; BSR set to: 0
 41739  007F24  0100               	movlb	0	; () banked
 41740  007F26  0764               	decf	memcpy@n& (0+255),f,b
 41741  007F28  A0D8               	btfss	status,0,c
 41742  007F2A  0765               	decf	(memcpy@n+1)& (0+255),f,b
 41743  007F2C  2964               	incf	memcpy@n& (0+255),w,b
 41744  007F2E  E1DD               	bnz	l13393
 41745  007F30  2965               	incf	(memcpy@n+1)& (0+255),w,b
 41746  007F32  B4D8               	btfsc	status,2,c
 41747  007F34  0012               	return	
 41748  007F36  D7D9               	goto	l3170
 41749  007F38                     __end_of_memcpy:
 41750                           	opt stack 0
 41751                           tosu	equ	0xFFF
 41752                           tosh	equ	0xFFE
 41753                           tosl	equ	0xFFD
 41754                           pclath	equ	0xFFA
 41755                           tblptru	equ	0xFF8
 41756                           tblptrh	equ	0xFF7
 41757                           tblptrl	equ	0xFF6
 41758                           tablat	equ	0xFF5
 41759                           prodh	equ	0xFF4
 41760                           prodl	equ	0xFF3
 41761                           intcon	equ	0xFF2
 41762                           intcon2	equ	0xFF1
 41763                           intcon3	equ	0xFF0
 41764                           indf0	equ	0xFEF
 41765                           postinc0	equ	0xFEE
 41766                           plusw0	equ	0xFEB
 41767                           fsr0h	equ	0xFEA
 41768                           fsr0l	equ	0xFE9
 41769                           wreg	equ	0xFE8
 41770                           postinc1	equ	0xFE6
 41771                           postdec1	equ	0xFE5
 41772                           plusw1	equ	0xFE3
 41773                           fsr1h	equ	0xFE2
 41774                           fsr1l	equ	0xFE1
 41775                           indf2	equ	0xFDF
 41776                           postinc2	equ	0xFDE
 41777                           postdec2	equ	0xFDD
 41778                           plusw2	equ	0xFDB
 41779                           fsr2h	equ	0xFDA
 41780                           fsr2l	equ	0xFD9
 41781                           status	equ	0xFD8
 41782                           
 41783 ;; *************** function _CreateAllSoftwareTimers *****************
 41784 ;; Defined at:
 41785 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 41786 ;; Parameters:    Size  Location     Type
 41787 ;;		None
 41788 ;; Auto vars:     Size  Location     Type
 41789 ;;		None
 41790 ;; Return value:  Size  Location     Type
 41791 ;;                  1    wreg      void 
 41792 ;; Registers used:
 41793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41794 ;; Tracked objects:
 41795 ;;		On entry : 0/0
 41796 ;;		On exit  : 0/0
 41797 ;;		Unchanged: 0/0
 41798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41803 ;;Total ram usage:        0 bytes
 41804 ;; Hardware stack levels used:    1
 41805 ;; Hardware stack levels required when called:    8
 41806 ;; This function calls:
 41807 ;;		_SwTimerCreate
 41808 ;; This function is called by:
 41809 ;;		_LORAWAN_Init
 41810 ;; This function uses a non-reentrant model
 41811 ;;
 41812                           
 41813                           	psect	text208
 41814  0083B2                     __ptext208:
 41815                           	opt stack 0
 41816  0083B2                     _CreateAllSoftwareTimers:
 41817                           	opt stack 21
 41818                           
 41819                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 41820                           
 41821                           ; BSR set to: 0
 41822                           ;incstack = 0
 41823  0083B2  EC29  F03A         	call	_SwTimerCreate	;wreg free
 41824  0083B6  0102               	movlb	2	; () banked
 41825  0083B8  6FE2               	movwf	(_loRa+226)& (0+255),b
 41826                           
 41827                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 41828  0083BA  EC29  F03A         	call	_SwTimerCreate	;wreg free
 41829  0083BE  0102               	movlb	2	; () banked
 41830  0083C0  6FE3               	movwf	(_loRa+227)& (0+255),b
 41831                           
 41832                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 41833  0083C2  EC29  F03A         	call	_SwTimerCreate	;wreg free
 41834  0083C6  0102               	movlb	2	; () banked
 41835  0083C8  6FE4               	movwf	(_loRa+228)& (0+255),b
 41836                           
 41837                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 41838  0083CA  EC29  F03A         	call	_SwTimerCreate	;wreg free
 41839  0083CE  0102               	movlb	2	; () banked
 41840  0083D0  6FE5               	movwf	(_loRa+229)& (0+255),b
 41841                           
 41842                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 41843  0083D2  EC29  F03A         	call	_SwTimerCreate	;wreg free
 41844  0083D6  0102               	movlb	2	; () banked
 41845  0083D8  6FE7               	movwf	(_loRa+231)& (0+255),b
 41846                           
 41847                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 41848  0083DA  EC29  F03A         	call	_SwTimerCreate	;wreg free
 41849  0083DE  0102               	movlb	2	; () banked
 41850  0083E0  6FE8               	movwf	(_loRa+232)& (0+255),b
 41851                           
 41852                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 41853  0083E2  EC29  F03A         	call	_SwTimerCreate	;wreg free
 41854  0083E6  0102               	movlb	2	; () banked
 41855  0083E8  6FE6               	movwf	(_loRa+230)& (0+255),b
 41856                           
 41857                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 41858  0083EA  EC29  F03A         	call	_SwTimerCreate	;wreg free
 41859  0083EE  0102               	movlb	2	; () banked
 41860  0083F0  6FEA               	movwf	(_loRa+234)& (0+255),b
 41861                           
 41862                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 41863  0083F2  EC29  F03A         	call	_SwTimerCreate	;wreg free
 41864  0083F6  0102               	movlb	2	; () banked
 41865  0083F8  6FF3               	movwf	(_loRa+243)& (0+255),b
 41866                           
 41867                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 41868  0083FA  EC29  F03A         	call	_SwTimerCreate	;wreg free
 41869  0083FE  0102               	movlb	2	; () banked
 41870  008400  6FE9               	movwf	(_loRa+233)& (0+255),b
 41871                           
 41872                           ; BSR set to: 2
 41873  008402  0012               	return		;funcret
 41874  008404                     __end_of_CreateAllSoftwareTimers:
 41875                           	opt stack 0
 41876                           tosu	equ	0xFFF
 41877                           tosh	equ	0xFFE
 41878                           tosl	equ	0xFFD
 41879                           pclath	equ	0xFFA
 41880                           tblptru	equ	0xFF8
 41881                           tblptrh	equ	0xFF7
 41882                           tblptrl	equ	0xFF6
 41883                           tablat	equ	0xFF5
 41884                           prodh	equ	0xFF4
 41885                           prodl	equ	0xFF3
 41886                           intcon	equ	0xFF2
 41887                           intcon2	equ	0xFF1
 41888                           intcon3	equ	0xFF0
 41889                           indf0	equ	0xFEF
 41890                           postinc0	equ	0xFEE
 41891                           plusw0	equ	0xFEB
 41892                           fsr0h	equ	0xFEA
 41893                           fsr0l	equ	0xFE9
 41894                           wreg	equ	0xFE8
 41895                           postinc1	equ	0xFE6
 41896                           postdec1	equ	0xFE5
 41897                           plusw1	equ	0xFE3
 41898                           fsr1h	equ	0xFE2
 41899                           fsr1l	equ	0xFE1
 41900                           indf2	equ	0xFDF
 41901                           postinc2	equ	0xFDE
 41902                           postdec2	equ	0xFDD
 41903                           plusw2	equ	0xFDB
 41904                           fsr2h	equ	0xFDA
 41905                           fsr2l	equ	0xFD9
 41906                           status	equ	0xFD8
 41907                           
 41908 ;; *************** function _SwTimerCreate *****************
 41909 ;; Defined at:
 41910 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41911 ;; Parameters:    Size  Location     Type
 41912 ;;		None
 41913 ;; Auto vars:     Size  Location     Type
 41914 ;;  retVal          1    0[BANK0 ] unsigned char 
 41915 ;; Return value:  Size  Location     Type
 41916 ;;                  1    wreg      unsigned char 
 41917 ;; Registers used:
 41918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41919 ;; Tracked objects:
 41920 ;;		On entry : 0/0
 41921 ;;		On exit  : 0/0
 41922 ;;		Unchanged: 0/0
 41923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41927 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41928 ;;Total ram usage:        1 bytes
 41929 ;; Hardware stack levels used:    1
 41930 ;; Hardware stack levels required when called:    7
 41931 ;; This function calls:
 41932 ;;		Nothing
 41933 ;; This function is called by:
 41934 ;;		_RADIO_Init
 41935 ;;		_CreateAllSoftwareTimers
 41936 ;; This function uses a non-reentrant model
 41937 ;;
 41938                           
 41939                           	psect	text209
 41940  007452                     __ptext209:
 41941                           	opt stack 0
 41942  007452                     _SwTimerCreate:
 41943                           	opt stack 21
 41944                           
 41945                           ;sw_timer.c: 156: uint8_t retVal;
 41946                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 41947                           
 41948                           ; BSR set to: 2
 41949                           ;incstack = 0
 41950  007452  0E14               	movlw	20
 41951  007454  0100               	movlb	0	; () banked
 41952  007456  61F9               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 41953  007458  D03E               	goto	l240
 41954                           
 41955                           ; BSR set to: 0
 41956                           ;sw_timer.c: 158: {
 41957                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 41958  00745A  9EF2               	bcf	intcon,7,c	;volatile
 41959                           
 41960                           ;sw_timer.c: 160: retVal = allocatedTimers;
 41961  00745C  C0F9  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 41962                           
 41963                           ; BSR set to: 0
 41964                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 41965  007460  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 41966  007462  0D08               	mullw	8
 41967  007464  0E04               	movlw	4
 41968  007466  26F3               	addwf	prodl,f,c
 41969  007468  0E00               	movlw	0
 41970  00746A  22F4               	addwfc	prodh,f,c
 41971  00746C  0E00               	movlw	low _swTimers
 41972  00746E  24F3               	addwf	prodl,w,c
 41973  007470  6ED9               	movwf	fsr2l,c
 41974  007472  0E03               	movlw	high _swTimers
 41975  007474  20F4               	addwfc	prodh,w,c
 41976  007476  6EDA               	movwf	fsr2h,c
 41977  007478  0E00               	movlw	0
 41978  00747A  6EDF               	movwf	indf2,c
 41979                           
 41980                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 41981  00747C  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 41982  00747E  0D08               	mullw	8
 41983  007480  0E00               	movlw	low _swTimers
 41984  007482  24F3               	addwf	prodl,w,c
 41985  007484  6ED9               	movwf	fsr2l,c
 41986  007486  0E03               	movlw	high _swTimers
 41987  007488  20F4               	addwfc	prodh,w,c
 41988  00748A  6EDA               	movwf	fsr2h,c
 41989  00748C  6ADE               	clrf	postinc2,c
 41990  00748E  6ADE               	clrf	postinc2,c
 41991  007490  6ADE               	clrf	postinc2,c
 41992  007492  6ADD               	clrf	postdec2,c
 41993                           
 41994                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 41995  007494  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 41996  007496  0D08               	mullw	8
 41997  007498  0E05               	movlw	5
 41998  00749A  26F3               	addwf	prodl,f,c
 41999  00749C  0E00               	movlw	0
 42000  00749E  22F4               	addwfc	prodh,f,c
 42001  0074A0  0E00               	movlw	low _swTimers
 42002  0074A2  24F3               	addwf	prodl,w,c
 42003  0074A4  6ED9               	movwf	fsr2l,c
 42004  0074A6  0E03               	movlw	high _swTimers
 42005  0074A8  20F4               	addwfc	prodh,w,c
 42006  0074AA  6EDA               	movwf	fsr2h,c
 42007  0074AC  0E00               	movlw	0
 42008  0074AE  6EDF               	movwf	indf2,c
 42009                           
 42010                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 42011  0074B0  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 42012  0074B2  0D08               	mullw	8
 42013  0074B4  0E06               	movlw	6
 42014  0074B6  26F3               	addwf	prodl,f,c
 42015  0074B8  0E00               	movlw	0
 42016  0074BA  22F4               	addwfc	prodh,f,c
 42017  0074BC  0E00               	movlw	low _swTimers
 42018  0074BE  24F3               	addwf	prodl,w,c
 42019  0074C0  6ED9               	movwf	fsr2l,c
 42020  0074C2  0E03               	movlw	high _swTimers
 42021  0074C4  20F4               	addwfc	prodh,w,c
 42022  0074C6  6EDA               	movwf	fsr2h,c
 42023  0074C8  0E00               	movlw	0
 42024  0074CA  6EDE               	movwf	postinc2,c
 42025  0074CC  0E00               	movlw	0
 42026  0074CE  6EDD               	movwf	postdec2,c
 42027                           
 42028                           ; BSR set to: 0
 42029                           ;sw_timer.c: 165: allocatedTimers++;
 42030  0074D0  2BF9               	incf	_allocatedTimers& (0+255),f,b	;volatile
 42031                           
 42032                           ; BSR set to: 0
 42033                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 42034  0074D2  8EF2               	bsf	intcon,7,c	;volatile
 42035                           
 42036                           ;sw_timer.c: 167: }
 42037  0074D4  D001               	goto	l244
 42038  0074D6                     l240:
 42039                           
 42040                           ;sw_timer.c: 171: {
 42041                           
 42042                           ; BSR set to: 0
 42043                           ;sw_timer.c: 168: else
 42044                           ;sw_timer.c: 169: {
 42045                           ;sw_timer.c: 170: while(1)
 42046  0074D6  D7FF               	goto	l240
 42047  0074D8                     l244:
 42048                           
 42049                           ;sw_timer.c: 175: }
 42050                           ;sw_timer.c: 176: }
 42051                           ;sw_timer.c: 177: return retVal;
 42052  0074D8  0100               	movlb	0	; () banked
 42053  0074DA  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 42054  0074DC  0012               	return	
 42055  0074DE                     __end_of_SwTimerCreate:
 42056                           	opt stack 0
 42057                           tosu	equ	0xFFF
 42058                           tosh	equ	0xFFE
 42059                           tosl	equ	0xFFD
 42060                           pclath	equ	0xFFA
 42061                           tblptru	equ	0xFF8
 42062                           tblptrh	equ	0xFF7
 42063                           tblptrl	equ	0xFF6
 42064                           tablat	equ	0xFF5
 42065                           prodh	equ	0xFF4
 42066                           prodl	equ	0xFF3
 42067                           intcon	equ	0xFF2
 42068                           intcon2	equ	0xFF1
 42069                           intcon3	equ	0xFF0
 42070                           indf0	equ	0xFEF
 42071                           postinc0	equ	0xFEE
 42072                           plusw0	equ	0xFEB
 42073                           fsr0h	equ	0xFEA
 42074                           fsr0l	equ	0xFE9
 42075                           wreg	equ	0xFE8
 42076                           postinc1	equ	0xFE6
 42077                           postdec1	equ	0xFE5
 42078                           plusw1	equ	0xFE3
 42079                           fsr1h	equ	0xFE2
 42080                           fsr1l	equ	0xFE1
 42081                           indf2	equ	0xFDF
 42082                           postinc2	equ	0xFDE
 42083                           postdec2	equ	0xFDD
 42084                           plusw2	equ	0xFDB
 42085                           fsr2h	equ	0xFDA
 42086                           fsr2l	equ	0xFD9
 42087                           status	equ	0xFD8
 42088                           
 42089 ;; *************** function _ADC_GetConversion *****************
 42090 ;; Defined at:
 42091 ;;		line 108 in file "mcc_generated_files/adc.c"
 42092 ;; Parameters:    Size  Location     Type
 42093 ;;  channel         1    wreg     enum E6990
 42094 ;; Auto vars:     Size  Location     Type
 42095 ;;  channel         1    4[BANK0 ] enum E6990
 42096 ;; Return value:  Size  Location     Type
 42097 ;;                  2    0[BANK0 ] unsigned int 
 42098 ;; Registers used:
 42099 ;;		wreg, status,2, status,0
 42100 ;; Tracked objects:
 42101 ;;		On entry : 0/0
 42102 ;;		On exit  : 0/0
 42103 ;;		Unchanged: 0/0
 42104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42107 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42108 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42109 ;;Total ram usage:        5 bytes
 42110 ;; Hardware stack levels used:    1
 42111 ;; Hardware stack levels required when called:    7
 42112 ;; This function calls:
 42113 ;;		Nothing
 42114 ;; This function is called by:
 42115 ;;		_main
 42116 ;; This function uses a non-reentrant model
 42117 ;;
 42118                           
 42119                           	psect	text210
 42120  0088FE                     __ptext210:
 42121                           	opt stack 0
 42122  0088FE                     _ADC_GetConversion:
 42123                           	opt stack 23
 42124                           
 42125                           ; BSR set to: 0
 42126                           ;incstack = 0
 42127                           ;ADC_GetConversion@channel stored from wreg
 42128  0088FE  0100               	movlb	0	; () banked
 42129  008900  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
 42130                           
 42131                           ;adc.c: 111: ADCON0bits.CHS = channel;
 42132  008902  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 42133  008906  0100               	movlb	0	; () banked
 42134  008908  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 42135  00890A  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 42136  00890C  50C2               	movf	4034,w,c	;volatile
 42137  00890E  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 42138  008910  0B83               	andlw	-125
 42139  008912  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 42140  008914  6EC2               	movwf	4034,c	;volatile
 42141                           
 42142                           ; BSR set to: 0
 42143                           ;adc.c: 114: ADCON0bits.ADON = 1;
 42144  008916  80C2               	bsf	4034,0,c	;volatile
 42145                           
 42146                           ; BSR set to: 0
 42147                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
 42148  008918  82C2               	bsf	4034,1,c	;volatile
 42149  00891A                     
 42150                           ; BSR set to: 0
 42151                           ;adc.c: 121: {
 42152  00891A  B2C2               	btfsc	4034,1,c	;volatile
 42153  00891C  D7FE               	goto	l2576
 42154                           
 42155                           ;adc.c: 122: }
 42156                           ;adc.c: 125: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 42157  00891E  50C4               	movf	4036,w,c	;volatile
 42158  008920  0100               	movlb	0	; () banked
 42159  008922  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 42160  008924  6B62               	clrf	??_ADC_GetConversion& (0+255),b
 42161  008926  50C3               	movf	4035,w,c	;volatile
 42162  008928  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
 42163  00892A  6F60               	movwf	?_ADC_GetConversion& (0+255),b
 42164  00892C  0E00               	movlw	0
 42165  00892E  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 42166  008930  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 42167  008932  0012               	return	
 42168  008934                     __end_of_ADC_GetConversion:
 42169                           	opt stack 0
 42170                           tosu	equ	0xFFF
 42171                           tosh	equ	0xFFE
 42172                           tosl	equ	0xFFD
 42173                           pclath	equ	0xFFA
 42174                           tblptru	equ	0xFF8
 42175                           tblptrh	equ	0xFF7
 42176                           tblptrl	equ	0xFF6
 42177                           tablat	equ	0xFF5
 42178                           prodh	equ	0xFF4
 42179                           prodl	equ	0xFF3
 42180                           intcon	equ	0xFF2
 42181                           intcon2	equ	0xFF1
 42182                           intcon3	equ	0xFF0
 42183                           indf0	equ	0xFEF
 42184                           postinc0	equ	0xFEE
 42185                           plusw0	equ	0xFEB
 42186                           fsr0h	equ	0xFEA
 42187                           fsr0l	equ	0xFE9
 42188                           wreg	equ	0xFE8
 42189                           postinc1	equ	0xFE6
 42190                           postdec1	equ	0xFE5
 42191                           plusw1	equ	0xFE3
 42192                           fsr1h	equ	0xFE2
 42193                           fsr1l	equ	0xFE1
 42194                           indf2	equ	0xFDF
 42195                           postinc2	equ	0xFDE
 42196                           postdec2	equ	0xFDD
 42197                           plusw2	equ	0xFDB
 42198                           fsr2h	equ	0xFDA
 42199                           fsr2l	equ	0xFD9
 42200                           status	equ	0xFD8
 42201                           
 42202 ;; *************** function _INTERRUPT_InterruptManager *****************
 42203 ;; Defined at:
 42204 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 42205 ;; Parameters:    Size  Location     Type
 42206 ;;		None
 42207 ;; Auto vars:     Size  Location     Type
 42208 ;;		None
 42209 ;; Return value:  Size  Location     Type
 42210 ;;                  1    wreg      void 
 42211 ;; Registers used:
 42212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 42213 ;; Tracked objects:
 42214 ;;		On entry : 0/0
 42215 ;;		On exit  : 0/0
 42216 ;;		Unchanged: 0/0
 42217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42220 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42221 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42222 ;;Total ram usage:        8 bytes
 42223 ;; Hardware stack levels used:    1
 42224 ;; Hardware stack levels required when called:    6
 42225 ;; This function calls:
 42226 ;;		_INT1_ISR
 42227 ;;		_INT2_ISR
 42228 ;;		_PIN_MANAGER_IOC
 42229 ;;		_TMR1_ISR
 42230 ;; This function is called by:
 42231 ;;		Interrupt level 2
 42232 ;; This function uses a non-reentrant model
 42233 ;;
 42234                           
 42235                           	psect	intcode
 42236  000008                     __pintcode:
 42237                           	opt stack 0
 42238  000008                     _INTERRUPT_InterruptManager:
 42239                           	opt stack 12
 42240                           
 42241                           ; BSR set to: 0
 42242                           ;incstack = 0
 42243  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
 42244  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 42245  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 42246  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 42247  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 42248  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 42249  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
 42250  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
 42251  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 42252                           
 42253                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 42254  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 42255  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 42256  000030  D003               	goto	i2l2285
 42257                           
 42258                           ;interrupt_manager.c: 62: {
 42259                           ;interrupt_manager.c: 63: INT1_ISR();
 42260  000032  EC5D  F049         	call	_INT1_ISR	;wreg free
 42261                           
 42262                           ;interrupt_manager.c: 64: }
 42263  000036  D012               	goto	i2l2292
 42264  000038                     i2l2285:
 42265                           
 42266                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 42267  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 42268  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 42269  00003C  D003               	goto	i2l2287
 42270                           
 42271                           ;interrupt_manager.c: 66: {
 42272                           ;interrupt_manager.c: 67: INT2_ISR();
 42273  00003E  EC59  F049         	call	_INT2_ISR	;wreg free
 42274                           
 42275                           ;interrupt_manager.c: 68: }
 42276  000042  D00C               	goto	i2l2292
 42277  000044                     i2l2287:
 42278                           
 42279                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 42280  000044  B6F2               	btfsc	intcon,3,c	;volatile
 42281  000046  A0F2               	btfss	intcon,0,c	;volatile
 42282  000048  D003               	goto	i2l2289
 42283                           
 42284                           ;interrupt_manager.c: 70: {
 42285                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
 42286  00004A  EC4C  F049         	call	_PIN_MANAGER_IOC	;wreg free
 42287                           
 42288                           ;interrupt_manager.c: 72: }
 42289  00004E  D006               	goto	i2l2292
 42290  000050                     i2l2289:
 42291                           
 42292                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
 42293  000050  BCF2               	btfsc	intcon,6,c	;volatile
 42294                           
 42295                           ;interrupt_manager.c: 74: {
 42296                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 42297  000052  A09D               	btfss	3997,0,c	;volatile
 42298  000054  D003               	goto	i2l2292
 42299  000056  B09E               	btfsc	3998,0,c	;volatile
 42300                           
 42301                           ;interrupt_manager.c: 76: {
 42302                           ;interrupt_manager.c: 77: TMR1_ISR();
 42303  000058  EC66  F048         	call	_TMR1_ISR	;wreg free
 42304  00005C                     i2l2292:
 42305                           
 42306                           ;interrupt_manager.c: 84: else
 42307                           ;interrupt_manager.c: 85: {
 42308                           
 42309                           ;interrupt_manager.c: 82: }
 42310                           ;interrupt_manager.c: 83: }
 42311                           
 42312                           ;interrupt_manager.c: 79: else
 42313                           ;interrupt_manager.c: 80: {
 42314  00005C  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 42315  000060  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 42316  000064  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 42317  000068  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 42318  00006C  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 42319  000070  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 42320  000074  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 42321  000078  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 42322  00007C  0011               	retfie		f
 42323  00007E                     __end_of_INTERRUPT_InterruptManager:
 42324                           	opt stack 0
 42325                           tosu	equ	0xFFF
 42326                           tosh	equ	0xFFE
 42327                           tosl	equ	0xFFD
 42328                           pclatu	equ	0xFFB
 42329                           pclath	equ	0xFFA
 42330                           tblptru	equ	0xFF8
 42331                           tblptrh	equ	0xFF7
 42332                           tblptrl	equ	0xFF6
 42333                           tablat	equ	0xFF5
 42334                           prodh	equ	0xFF4
 42335                           prodl	equ	0xFF3
 42336                           intcon	equ	0xFF2
 42337                           intcon2	equ	0xFF1
 42338                           intcon3	equ	0xFF0
 42339                           indf0	equ	0xFEF
 42340                           postinc0	equ	0xFEE
 42341                           plusw0	equ	0xFEB
 42342                           fsr0h	equ	0xFEA
 42343                           fsr0l	equ	0xFE9
 42344                           wreg	equ	0xFE8
 42345                           postinc1	equ	0xFE6
 42346                           postdec1	equ	0xFE5
 42347                           plusw1	equ	0xFE3
 42348                           fsr1h	equ	0xFE2
 42349                           fsr1l	equ	0xFE1
 42350                           indf2	equ	0xFDF
 42351                           postinc2	equ	0xFDE
 42352                           postdec2	equ	0xFDD
 42353                           plusw2	equ	0xFDB
 42354                           fsr2h	equ	0xFDA
 42355                           fsr2l	equ	0xFD9
 42356                           status	equ	0xFD8
 42357                           
 42358 ;; *************** function _TMR1_ISR *****************
 42359 ;; Defined at:
 42360 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 42361 ;; Parameters:    Size  Location     Type
 42362 ;;		None
 42363 ;; Auto vars:     Size  Location     Type
 42364 ;;		None
 42365 ;; Return value:  Size  Location     Type
 42366 ;;                  1    wreg      void 
 42367 ;; Registers used:
 42368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 42369 ;; Tracked objects:
 42370 ;;		On entry : 0/0
 42371 ;;		On exit  : 0/0
 42372 ;;		Unchanged: 0/0
 42373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42378 ;;Total ram usage:        0 bytes
 42379 ;; Hardware stack levels used:    1
 42380 ;; Hardware stack levels required when called:    5
 42381 ;; This function calls:
 42382 ;;		_TMR1_CallBack
 42383 ;;		i2_TMR1_WriteTimer
 42384 ;; This function is called by:
 42385 ;;		_INTERRUPT_InterruptManager
 42386 ;; This function uses a non-reentrant model
 42387 ;;
 42388                           
 42389                           	psect	text212
 42390  0090CC                     __ptext212:
 42391                           	opt stack 0
 42392  0090CC                     _TMR1_ISR:
 42393                           	opt stack 12
 42394                           
 42395                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
 42396                           
 42397                           ;incstack = 0
 42398  0090CC  909E               	bcf	3998,0,c	;volatile
 42399                           
 42400                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
 42401  0090CE  C1E6  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 42402  0090D2  C1E7  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 42403  0090D6  ECF0  F047         	call	i2_TMR1_WriteTimer	;wreg free
 42404                           
 42405                           ;tmr1.c: 167: TMR1_CallBack();
 42406  0090DA  EC75  F047         	call	_TMR1_CallBack	;wreg free
 42407  0090DE  0012               	return		;funcret
 42408  0090E0                     __end_of_TMR1_ISR:
 42409                           	opt stack 0
 42410                           tosu	equ	0xFFF
 42411                           tosh	equ	0xFFE
 42412                           tosl	equ	0xFFD
 42413                           pclatu	equ	0xFFB
 42414                           pclath	equ	0xFFA
 42415                           tblptru	equ	0xFF8
 42416                           tblptrh	equ	0xFF7
 42417                           tblptrl	equ	0xFF6
 42418                           tablat	equ	0xFF5
 42419                           prodh	equ	0xFF4
 42420                           prodl	equ	0xFF3
 42421                           intcon	equ	0xFF2
 42422                           intcon2	equ	0xFF1
 42423                           intcon3	equ	0xFF0
 42424                           indf0	equ	0xFEF
 42425                           postinc0	equ	0xFEE
 42426                           plusw0	equ	0xFEB
 42427                           fsr0h	equ	0xFEA
 42428                           fsr0l	equ	0xFE9
 42429                           wreg	equ	0xFE8
 42430                           postinc1	equ	0xFE6
 42431                           postdec1	equ	0xFE5
 42432                           plusw1	equ	0xFE3
 42433                           fsr1h	equ	0xFE2
 42434                           fsr1l	equ	0xFE1
 42435                           indf2	equ	0xFDF
 42436                           postinc2	equ	0xFDE
 42437                           postdec2	equ	0xFDD
 42438                           plusw2	equ	0xFDB
 42439                           fsr2h	equ	0xFDA
 42440                           fsr2l	equ	0xFD9
 42441                           status	equ	0xFD8
 42442                           
 42443 ;; *************** function _TMR1_CallBack *****************
 42444 ;; Defined at:
 42445 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 42446 ;; Parameters:    Size  Location     Type
 42447 ;;		None
 42448 ;; Auto vars:     Size  Location     Type
 42449 ;;		None
 42450 ;; Return value:  Size  Location     Type
 42451 ;;                  1    wreg      void 
 42452 ;; Registers used:
 42453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 42454 ;; Tracked objects:
 42455 ;;		On entry : 0/0
 42456 ;;		On exit  : 0/0
 42457 ;;		Unchanged: 0/0
 42458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42463 ;;Total ram usage:        0 bytes
 42464 ;; Hardware stack levels used:    1
 42465 ;; Hardware stack levels required when called:    4
 42466 ;; This function calls:
 42467 ;;		Absolute function
 42468 ;;		_TMR1_DefaultInterruptHandler
 42469 ;;		_TMR_ISR_lora
 42470 ;; This function is called by:
 42471 ;;		_TMR1_ISR
 42472 ;; This function uses a non-reentrant model
 42473 ;;
 42474                           
 42475                           	psect	text213
 42476  008EEA                     __ptext213:
 42477                           	opt stack 0
 42478  008EEA                     _TMR1_CallBack:
 42479                           	opt stack 12
 42480                           
 42481                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
 42482                           
 42483                           ;incstack = 0
 42484  008EEA  0101               	movlb	1	; () banked
 42485  008EEC  51E4               	movf	_TMR1_InterruptHandler& (0+255),w,b
 42486  008EEE  11E5               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 42487  008EF0  B4D8               	btfsc	status,2,c
 42488  008EF2  0012               	return	
 42489                           
 42490                           ; BSR set to: 1
 42491                           ;tmr1.c: 174: {
 42492                           ;tmr1.c: 175: TMR1_InterruptHandler();
 42493  008EF4  D801               	call	i2u2233_48
 42494  008EF6  0012               	return	
 42495  008EF8                     i2u2233_48:
 42496  008EF8  0005               	push	
 42497  008EFA  6EFA               	movwf	pclath,c
 42498  008EFC  51E4               	movf	_TMR1_InterruptHandler& (0+255),w,b
 42499  008EFE  6EFD               	movwf	tosl,c
 42500  008F00  51E5               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 42501  008F02  6EFE               	movwf	tosh,c
 42502  008F04  6AFF               	clrf	tosu,c
 42503  008F06  50FA               	movf	pclath,w,c
 42504  008F08  0012               	return		;indir
 42505  008F0A                     __end_of_TMR1_CallBack:
 42506                           	opt stack 0
 42507                           tosu	equ	0xFFF
 42508                           tosh	equ	0xFFE
 42509                           tosl	equ	0xFFD
 42510                           pclatu	equ	0xFFB
 42511                           pclath	equ	0xFFA
 42512                           tblptru	equ	0xFF8
 42513                           tblptrh	equ	0xFF7
 42514                           tblptrl	equ	0xFF6
 42515                           tablat	equ	0xFF5
 42516                           prodh	equ	0xFF4
 42517                           prodl	equ	0xFF3
 42518                           intcon	equ	0xFF2
 42519                           intcon2	equ	0xFF1
 42520                           intcon3	equ	0xFF0
 42521                           indf0	equ	0xFEF
 42522                           postinc0	equ	0xFEE
 42523                           plusw0	equ	0xFEB
 42524                           fsr0h	equ	0xFEA
 42525                           fsr0l	equ	0xFE9
 42526                           wreg	equ	0xFE8
 42527                           postinc1	equ	0xFE6
 42528                           postdec1	equ	0xFE5
 42529                           plusw1	equ	0xFE3
 42530                           fsr1h	equ	0xFE2
 42531                           fsr1l	equ	0xFE1
 42532                           indf2	equ	0xFDF
 42533                           postinc2	equ	0xFDE
 42534                           postdec2	equ	0xFDD
 42535                           plusw2	equ	0xFDB
 42536                           fsr2h	equ	0xFDA
 42537                           fsr2l	equ	0xFD9
 42538                           status	equ	0xFD8
 42539                           
 42540 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 42541 ;; Defined at:
 42542 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 42543 ;; Parameters:    Size  Location     Type
 42544 ;;		None
 42545 ;; Auto vars:     Size  Location     Type
 42546 ;;		None
 42547 ;; Return value:  Size  Location     Type
 42548 ;;                  1    wreg      void 
 42549 ;; Registers used:
 42550 ;;		None
 42551 ;; Tracked objects:
 42552 ;;		On entry : 0/0
 42553 ;;		On exit  : 0/0
 42554 ;;		Unchanged: 0/0
 42555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42560 ;;Total ram usage:        0 bytes
 42561 ;; Hardware stack levels used:    1
 42562 ;; This function calls:
 42563 ;;		Nothing
 42564 ;; This function is called by:
 42565 ;;		_TMR1_Initialize
 42566 ;;		_TMR1_CallBack
 42567 ;; This function uses a non-reentrant model
 42568 ;;
 42569                           
 42570                           	psect	text214
 42571  00930E                     __ptext214:
 42572                           	opt stack 0
 42573  00930E                     _TMR1_DefaultInterruptHandler:
 42574                           	opt stack 15
 42575                           
 42576                           ;incstack = 0
 42577  00930E  0012               	return		;funcret
 42578  009310                     __end_of_TMR1_DefaultInterruptHandler:
 42579                           	opt stack 0
 42580                           tosu	equ	0xFFF
 42581                           tosh	equ	0xFFE
 42582                           tosl	equ	0xFFD
 42583                           pclatu	equ	0xFFB
 42584                           pclath	equ	0xFFA
 42585                           tblptru	equ	0xFF8
 42586                           tblptrh	equ	0xFF7
 42587                           tblptrl	equ	0xFF6
 42588                           tablat	equ	0xFF5
 42589                           prodh	equ	0xFF4
 42590                           prodl	equ	0xFF3
 42591                           intcon	equ	0xFF2
 42592                           intcon2	equ	0xFF1
 42593                           intcon3	equ	0xFF0
 42594                           indf0	equ	0xFEF
 42595                           postinc0	equ	0xFEE
 42596                           plusw0	equ	0xFEB
 42597                           fsr0h	equ	0xFEA
 42598                           fsr0l	equ	0xFE9
 42599                           wreg	equ	0xFE8
 42600                           postinc1	equ	0xFE6
 42601                           postdec1	equ	0xFE5
 42602                           plusw1	equ	0xFE3
 42603                           fsr1h	equ	0xFE2
 42604                           fsr1l	equ	0xFE1
 42605                           indf2	equ	0xFDF
 42606                           postinc2	equ	0xFDE
 42607                           postdec2	equ	0xFDD
 42608                           plusw2	equ	0xFDB
 42609                           fsr2h	equ	0xFDA
 42610                           fsr2l	equ	0xFD9
 42611                           status	equ	0xFD8
 42612                           
 42613 ;; *************** function _TMR_ISR_lora *****************
 42614 ;; Defined at:
 42615 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 42616 ;; Parameters:    Size  Location     Type
 42617 ;;		None
 42618 ;; Auto vars:     Size  Location     Type
 42619 ;;		None
 42620 ;; Return value:  Size  Location     Type
 42621 ;;                  1    wreg      void 
 42622 ;; Registers used:
 42623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42624 ;; Tracked objects:
 42625 ;;		On entry : 0/0
 42626 ;;		On exit  : 0/0
 42627 ;;		Unchanged: 0/0
 42628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42633 ;;Total ram usage:        2 bytes
 42634 ;; Hardware stack levels used:    1
 42635 ;; Hardware stack levels required when called:    3
 42636 ;; This function calls:
 42637 ;;		i2_SwTimersInterrupt
 42638 ;;		i2_TMR_SwapTimer
 42639 ;; This function is called by:
 42640 ;;		_TMR_ISR_Lora_Init
 42641 ;;		_TMR1_CallBack
 42642 ;; This function uses a non-reentrant model
 42643 ;;
 42644                           
 42645                           	psect	text215
 42646  008210                     __ptext215:
 42647                           	opt stack 0
 42648  008210                     _TMR_ISR_lora:
 42649                           	opt stack 12
 42650                           
 42651                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 42652                           
 42653                           ;incstack = 0
 42654  008210  0E01               	movlw	1
 42655  008212  6E47               	movwf	_timerOverflow,c	;volatile
 42656                           
 42657                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 42658  008214  ECA8  F02F         	call	i2_SwTimersInterrupt	;wreg free
 42659  008218  C021  F054         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 42660  00821C  C022  F055         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 42661  008220  C023  F056         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 42662  008224  C024  F057         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 42663                           
 42664                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 42665  008228  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 42666  00822A  E11C               	bnz	i2l1334
 42667  00822C  0456               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 42668  00822E  B0D8               	btfsc	status,0,c
 42669  008230  0012               	return	
 42670                           
 42671                           ;tmr_lora_addons.c: 66: {
 42672                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 42673  008232  C054  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 42674  008236  C055  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 42675  00823A  1E32               	comf	??_TMR_ISR_lora,f,c
 42676  00823C  1E33               	comf	??_TMR_ISR_lora+1,f,c
 42677  00823E  4A32               	infsnz	??_TMR_ISR_lora,f,c
 42678  008240  2A33               	incf	??_TMR_ISR_lora+1,f,c
 42679  008242  C032  F044         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 42680  008246  C033  F045         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 42681                           
 42682                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 42683  00824A  C044  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 42684  00824E  C045  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 42685  008252  EC84  F043         	call	i2_TMR_SwapTimer	;wreg free
 42686  008256  C009  F040         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 42687  00825A  C00A  F041         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 42688  00825E  6A42               	clrf	_ticksAdded+2,c	;volatile
 42689  008260  6A43               	clrf	_ticksAdded+3,c	;volatile
 42690  008262  0012               	return	
 42691  008264                     i2l1334:
 42692  008264  0012               	return		;funcret
 42693  008266                     __end_of_TMR_ISR_lora:
 42694                           	opt stack 0
 42695                           tosu	equ	0xFFF
 42696                           tosh	equ	0xFFE
 42697                           tosl	equ	0xFFD
 42698                           pclatu	equ	0xFFB
 42699                           pclath	equ	0xFFA
 42700                           tblptru	equ	0xFF8
 42701                           tblptrh	equ	0xFF7
 42702                           tblptrl	equ	0xFF6
 42703                           tablat	equ	0xFF5
 42704                           prodh	equ	0xFF4
 42705                           prodl	equ	0xFF3
 42706                           intcon	equ	0xFF2
 42707                           intcon2	equ	0xFF1
 42708                           intcon3	equ	0xFF0
 42709                           indf0	equ	0xFEF
 42710                           postinc0	equ	0xFEE
 42711                           plusw0	equ	0xFEB
 42712                           fsr0h	equ	0xFEA
 42713                           fsr0l	equ	0xFE9
 42714                           wreg	equ	0xFE8
 42715                           postinc1	equ	0xFE6
 42716                           postdec1	equ	0xFE5
 42717                           plusw1	equ	0xFE3
 42718                           fsr1h	equ	0xFE2
 42719                           fsr1l	equ	0xFE1
 42720                           indf2	equ	0xFDF
 42721                           postinc2	equ	0xFDE
 42722                           postdec2	equ	0xFDD
 42723                           plusw2	equ	0xFDB
 42724                           fsr2h	equ	0xFDA
 42725                           fsr2l	equ	0xFD9
 42726                           status	equ	0xFD8
 42727                           
 42728 ;; *************** function i2_TMR_SwapTimer *****************
 42729 ;; Defined at:
 42730 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 42731 ;; Parameters:    Size  Location     Type
 42732 ;;  timerVal        2    8[COMRAM] unsigned int 
 42733 ;; Auto vars:     Size  Location     Type
 42734 ;;		None
 42735 ;; Return value:  Size  Location     Type
 42736 ;;                  2    8[COMRAM] unsigned int 
 42737 ;; Registers used:
 42738 ;;		wreg, status,2, status,0, cstack
 42739 ;; Tracked objects:
 42740 ;;		On entry : 0/0
 42741 ;;		On exit  : 0/0
 42742 ;;		Unchanged: 0/0
 42743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42747 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42748 ;;Total ram usage:        2 bytes
 42749 ;; Hardware stack levels used:    1
 42750 ;; Hardware stack levels required when called:    1
 42751 ;; This function calls:
 42752 ;;		i2_TMR1_ReadTimer
 42753 ;;		i2_TMR1_WriteTimer
 42754 ;; This function is called by:
 42755 ;;		_TMR_ISR_lora
 42756 ;; This function uses a non-reentrant model
 42757 ;;
 42758                           
 42759                           	psect	text216
 42760  008708                     __ptext216:
 42761                           	opt stack 0
 42762  008708                     i2_TMR_SwapTimer:
 42763                           	opt stack 13
 42764                           
 42765                           ;sw_timer.c: 114: static uint16_t oldVal;
 42766                           ;sw_timer.c: 115: static uint16_t retVal;
 42767                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 42768                           
 42769                           ;incstack = 0
 42770  008708  EC85  F047         	call	i2_TMR1_ReadTimer	;wreg free
 42771  00870C  C001  F117         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 42772  008710  C002  F118         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 42773  008714                     
 42774                           ;sw_timer.c: 123: ;
 42775  008714  EC85  F047         	call	i2_TMR1_ReadTimer	;wreg free
 42776  008718  0101               	movlb	1	; () banked
 42777  00871A  5117               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 42778  00871C  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 42779  00871E  E104               	bnz	i2l11567
 42780  008720  5118               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 42781  008722  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 42782  008724  B4D8               	btfsc	status,2,c
 42783  008726  D7F6               	goto	i2l226
 42784  008728                     i2l11567:
 42785                           
 42786                           ; BSR set to: 1
 42787                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 42788  008728  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 42789  00872C  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 42790  008730  ECF0  F047         	call	i2_TMR1_WriteTimer	;wreg free
 42791                           
 42792                           ;sw_timer.c: 128: oldVal++;
 42793  008734  0101               	movlb	1	; () banked
 42794  008736  4B17               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 42795  008738  2B18               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 42796                           
 42797                           ; BSR set to: 1
 42798                           ;sw_timer.c: 130: retVal = oldVal;
 42799  00873A  C117  F115         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 42800  00873E  C118  F116         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 42801                           
 42802                           ; BSR set to: 1
 42803                           ;sw_timer.c: 132: return retVal;
 42804  008742  C115  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 42805  008746  C116  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 42806  00874A  0012               	return	
 42807  00874C                     __end_ofi2_TMR_SwapTimer:
 42808                           	opt stack 0
 42809                           tosu	equ	0xFFF
 42810                           tosh	equ	0xFFE
 42811                           tosl	equ	0xFFD
 42812                           pclatu	equ	0xFFB
 42813                           pclath	equ	0xFFA
 42814                           tblptru	equ	0xFF8
 42815                           tblptrh	equ	0xFF7
 42816                           tblptrl	equ	0xFF6
 42817                           tablat	equ	0xFF5
 42818                           prodh	equ	0xFF4
 42819                           prodl	equ	0xFF3
 42820                           intcon	equ	0xFF2
 42821                           intcon2	equ	0xFF1
 42822                           intcon3	equ	0xFF0
 42823                           indf0	equ	0xFEF
 42824                           postinc0	equ	0xFEE
 42825                           plusw0	equ	0xFEB
 42826                           fsr0h	equ	0xFEA
 42827                           fsr0l	equ	0xFE9
 42828                           wreg	equ	0xFE8
 42829                           postinc1	equ	0xFE6
 42830                           postdec1	equ	0xFE5
 42831                           plusw1	equ	0xFE3
 42832                           fsr1h	equ	0xFE2
 42833                           fsr1l	equ	0xFE1
 42834                           indf2	equ	0xFDF
 42835                           postinc2	equ	0xFDE
 42836                           postdec2	equ	0xFDD
 42837                           plusw2	equ	0xFDB
 42838                           fsr2h	equ	0xFDA
 42839                           fsr2l	equ	0xFD9
 42840                           status	equ	0xFD8
 42841                           
 42842 ;; *************** function i2_TMR1_WriteTimer *****************
 42843 ;; Defined at:
 42844 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 42845 ;; Parameters:    Size  Location     Type
 42846 ;;  timerVal        2    0[COMRAM] unsigned int 
 42847 ;; Auto vars:     Size  Location     Type
 42848 ;;		None
 42849 ;; Return value:  Size  Location     Type
 42850 ;;                  1    wreg      void 
 42851 ;; Registers used:
 42852 ;;		wreg, status,2
 42853 ;; Tracked objects:
 42854 ;;		On entry : 0/0
 42855 ;;		On exit  : 0/0
 42856 ;;		Unchanged: 0/0
 42857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42862 ;;Total ram usage:        2 bytes
 42863 ;; Hardware stack levels used:    1
 42864 ;; This function calls:
 42865 ;;		Nothing
 42866 ;; This function is called by:
 42867 ;;		_TMR1_ISR
 42868 ;;		i2_TMR_SwapTimer
 42869 ;; This function uses a non-reentrant model
 42870 ;;
 42871                           
 42872                           	psect	text217
 42873  008FE0                     __ptext217:
 42874                           	opt stack 0
 42875  008FE0                     i2_TMR1_WriteTimer:
 42876                           	opt stack 16
 42877                           
 42878                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 42879                           
 42880                           ; BSR set to: 1
 42881                           ;incstack = 0
 42882  008FE0  A4CD               	btfss	4045,2,c	;volatile
 42883  008FE2  D007               	goto	i2l2437
 42884                           
 42885                           ;tmr1.c: 124: {
 42886                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 42887  008FE4  90CD               	bcf	4045,0,c	;volatile
 42888                           
 42889                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 42890  008FE6  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 42891  008FE8  6ECF               	movwf	4047,c	;volatile
 42892                           
 42893                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 42894  008FEA  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 42895                           
 42896                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 42897  008FEE  80CD               	bsf	4045,0,c	;volatile
 42898                           
 42899                           ;tmr1.c: 134: }
 42900  008FF0  0012               	return	
 42901  008FF2                     i2l2437:
 42902                           
 42903                           ;tmr1.c: 135: else
 42904                           ;tmr1.c: 136: {
 42905                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 42906  008FF2  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 42907  008FF4  6ECF               	movwf	4047,c	;volatile
 42908                           
 42909                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 42910  008FF6  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 42911  008FFA  0012               	return	
 42912  008FFC                     __end_ofi2_TMR1_WriteTimer:
 42913                           	opt stack 0
 42914                           tosu	equ	0xFFF
 42915                           tosh	equ	0xFFE
 42916                           tosl	equ	0xFFD
 42917                           pclatu	equ	0xFFB
 42918                           pclath	equ	0xFFA
 42919                           tblptru	equ	0xFF8
 42920                           tblptrh	equ	0xFF7
 42921                           tblptrl	equ	0xFF6
 42922                           tablat	equ	0xFF5
 42923                           prodh	equ	0xFF4
 42924                           prodl	equ	0xFF3
 42925                           intcon	equ	0xFF2
 42926                           intcon2	equ	0xFF1
 42927                           intcon3	equ	0xFF0
 42928                           indf0	equ	0xFEF
 42929                           postinc0	equ	0xFEE
 42930                           plusw0	equ	0xFEB
 42931                           fsr0h	equ	0xFEA
 42932                           fsr0l	equ	0xFE9
 42933                           wreg	equ	0xFE8
 42934                           postinc1	equ	0xFE6
 42935                           postdec1	equ	0xFE5
 42936                           plusw1	equ	0xFE3
 42937                           fsr1h	equ	0xFE2
 42938                           fsr1l	equ	0xFE1
 42939                           indf2	equ	0xFDF
 42940                           postinc2	equ	0xFDE
 42941                           postdec2	equ	0xFDD
 42942                           plusw2	equ	0xFDB
 42943                           fsr2h	equ	0xFDA
 42944                           fsr2l	equ	0xFD9
 42945                           status	equ	0xFD8
 42946                           
 42947 ;; *************** function i2_SwTimersInterrupt *****************
 42948 ;; Defined at:
 42949 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 42950 ;; Parameters:    Size  Location     Type
 42951 ;;		None
 42952 ;; Auto vars:     Size  Location     Type
 42953 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 42954 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 42955 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 42956 ;; Return value:  Size  Location     Type
 42957 ;;                  4   32[COMRAM] unsigned long 
 42958 ;; Registers used:
 42959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42960 ;; Tracked objects:
 42961 ;;		On entry : 0/0
 42962 ;;		On exit  : 0/0
 42963 ;;		Unchanged: 0/0
 42964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42965 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42966 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42967 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42968 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42969 ;;Total ram usage:       17 bytes
 42970 ;; Hardware stack levels used:    1
 42971 ;; Hardware stack levels required when called:    2
 42972 ;; This function calls:
 42973 ;;		i2_TMR_GetDeltaTime
 42974 ;; This function is called by:
 42975 ;;		_TMR_ISR_lora
 42976 ;; This function uses a non-reentrant model
 42977 ;;
 42978                           
 42979                           	psect	text218
 42980  005F50                     __ptext218:
 42981                           	opt stack 0
 42982  005F50                     i2_SwTimersInterrupt:
 42983                           	opt stack 12
 42984                           
 42985                           ;sw_timer.c: 289: uint8_t i;
 42986                           ;sw_timer.c: 290: uint32_t timeElapsed;
 42987                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 42988                           
 42989                           ;incstack = 0
 42990  005F50  682D               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 42991  005F52  682E               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 42992  005F54  682F               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 42993  005F56  6830               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 42994                           
 42995                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 42996  005F58  EC23  F028         	call	i2_TMR_GetDeltaTime	;wreg free
 42997  005F5C  C009  F029         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 42998  005F60  C00A  F02A         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 42999  005F64  C00B  F02B         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 43000  005F68  C00C  F02C         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 43001                           
 43002                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 43003  005F6C  0E00               	movlw	0
 43004  005F6E  6E31               	movwf	i2SwTimersInterrupt@i,c
 43005  005F70  D061               	goto	i2l283
 43006  005F72                     
 43007                           ;sw_timer.c: 298: {
 43008                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 43009  005F72  5031               	movf	i2SwTimersInterrupt@i,w,c
 43010  005F74  0D08               	mullw	8
 43011  005F76  0E04               	movlw	4
 43012  005F78  26F3               	addwf	prodl,f,c
 43013  005F7A  0E00               	movlw	0
 43014  005F7C  22F4               	addwfc	prodh,f,c
 43015  005F7E  0E00               	movlw	low _swTimers
 43016  005F80  24F3               	addwf	prodl,w,c
 43017  005F82  6ED9               	movwf	fsr2l,c
 43018  005F84  0E03               	movlw	high _swTimers
 43019  005F86  20F4               	addwfc	prodh,w,c
 43020  005F88  6EDA               	movwf	fsr2h,c
 43021  005F8A  04DE               	decf	postinc2,w,c
 43022  005F8C  A4D8               	btfss	status,2,c
 43023  005F8E  D051               	goto	i2l288
 43024                           
 43025                           ;sw_timer.c: 302: {
 43026                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 43027  005F90  5031               	movf	i2SwTimersInterrupt@i,w,c
 43028  005F92  0D08               	mullw	8
 43029  005F94  0E00               	movlw	low _swTimers
 43030  005F96  24F3               	addwf	prodl,w,c
 43031  005F98  6ED9               	movwf	fsr2l,c
 43032  005F9A  0E03               	movlw	high _swTimers
 43033  005F9C  20F4               	addwfc	prodh,w,c
 43034  005F9E  6EDA               	movwf	fsr2h,c
 43035  005FA0  50DE               	movf	postinc2,w,c
 43036  005FA2  5C29               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 43037  005FA4  50DE               	movf	postinc2,w,c
 43038  005FA6  582A               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 43039  005FA8  50DE               	movf	postinc2,w,c
 43040  005FAA  582B               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 43041  005FAC  50DE               	movf	postinc2,w,c
 43042  005FAE  582C               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 43043  005FB0  A0D8               	btfss	status,0,c
 43044  005FB2  D00D               	goto	i2l286
 43045                           
 43046                           ;sw_timer.c: 304: {
 43047                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 43048  005FB4  5031               	movf	i2SwTimersInterrupt@i,w,c
 43049  005FB6  0D08               	mullw	8
 43050  005FB8  0E00               	movlw	low _swTimers
 43051  005FBA  24F3               	addwf	prodl,w,c
 43052  005FBC  6ED9               	movwf	fsr2l,c
 43053  005FBE  0E03               	movlw	high _swTimers
 43054  005FC0  20F4               	addwfc	prodh,w,c
 43055  005FC2  6EDA               	movwf	fsr2h,c
 43056  005FC4  6ADE               	clrf	postinc2,c
 43057  005FC6  6ADE               	clrf	postinc2,c
 43058  005FC8  6ADE               	clrf	postinc2,c
 43059  005FCA  6ADD               	clrf	postdec2,c
 43060                           
 43061                           ;sw_timer.c: 306: }
 43062  005FCC  D032               	goto	i2l288
 43063  005FCE                     i2l286:
 43064                           
 43065                           ;sw_timer.c: 307: else
 43066                           ;sw_timer.c: 308: {
 43067                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 43068  005FCE  5031               	movf	i2SwTimersInterrupt@i,w,c
 43069  005FD0  0D08               	mullw	8
 43070  005FD2  0E00               	movlw	low _swTimers
 43071  005FD4  24F3               	addwf	prodl,w,c
 43072  005FD6  6ED9               	movwf	fsr2l,c
 43073  005FD8  0E03               	movlw	high _swTimers
 43074  005FDA  20F4               	addwfc	prodh,w,c
 43075  005FDC  6EDA               	movwf	fsr2h,c
 43076  005FDE  5029               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 43077  005FE0  5EDE               	subwf	postinc2,f,c
 43078  005FE2  502A               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 43079  005FE4  5ADE               	subwfb	postinc2,f,c
 43080  005FE6  502B               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 43081  005FE8  5ADE               	subwfb	postinc2,f,c
 43082  005FEA  502C               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 43083  005FEC  5ADE               	subwfb	postinc2,f,c
 43084                           
 43085                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 43086  005FEE  5031               	movf	i2SwTimersInterrupt@i,w,c
 43087  005FF0  0D08               	mullw	8
 43088  005FF2  0E00               	movlw	low _swTimers
 43089  005FF4  24F3               	addwf	prodl,w,c
 43090  005FF6  6ED9               	movwf	fsr2l,c
 43091  005FF8  0E03               	movlw	high _swTimers
 43092  005FFA  20F4               	addwfc	prodh,w,c
 43093  005FFC  6EDA               	movwf	fsr2h,c
 43094  005FFE  502D               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 43095  006000  5CDE               	subwf	postinc2,w,c
 43096  006002  502E               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 43097  006004  58DE               	subwfb	postinc2,w,c
 43098  006006  502F               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 43099  006008  58DE               	subwfb	postinc2,w,c
 43100  00600A  5030               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 43101  00600C  58DE               	subwfb	postinc2,w,c
 43102  00600E  B0D8               	btfsc	status,0,c
 43103  006010  D010               	goto	i2l288
 43104                           
 43105                           ;sw_timer.c: 313: {
 43106                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 43107  006012  5031               	movf	i2SwTimersInterrupt@i,w,c
 43108  006014  0D08               	mullw	8
 43109  006016  0E00               	movlw	low _swTimers
 43110  006018  24F3               	addwf	prodl,w,c
 43111  00601A  6ED9               	movwf	fsr2l,c
 43112  00601C  0E03               	movlw	high _swTimers
 43113  00601E  20F4               	addwfc	prodh,w,c
 43114  006020  6EDA               	movwf	fsr2h,c
 43115  006022  CFDE F02D          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 43116  006026  CFDE F02E          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 43117  00602A  CFDE F02F          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 43118  00602E  CFDE F030          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 43119  006032                     i2l288:
 43120  006032  2A31               	incf	i2SwTimersInterrupt@i,f,c
 43121  006034                     i2l283:
 43122  006034  0100               	movlb	0	; () banked
 43123  006036  51F9               	movf	_allocatedTimers& (0+255),w,b	;volatile
 43124  006038  5C31               	subwf	i2SwTimersInterrupt@i,w,c
 43125  00603A  A0D8               	btfss	status,0,c
 43126  00603C  D79A               	goto	i2l284
 43127                           
 43128                           ; BSR set to: 0
 43129                           ;sw_timer.c: 315: }
 43130                           ;sw_timer.c: 316: }
 43131                           ;sw_timer.c: 317: }
 43132                           ;sw_timer.c: 318: }
 43133                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 43134  00603E  C02D  F021         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 43135  006042  C02E  F022         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 43136  006046  C02F  F023         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 43137  00604A  C030  F024         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 43138                           
 43139                           ; BSR set to: 0
 43140  00604E  0012               	return		;funcret
 43141  006050                     __end_ofi2_SwTimersInterrupt:
 43142                           	opt stack 0
 43143                           tosu	equ	0xFFF
 43144                           tosh	equ	0xFFE
 43145                           tosl	equ	0xFFD
 43146                           pclatu	equ	0xFFB
 43147                           pclath	equ	0xFFA
 43148                           tblptru	equ	0xFF8
 43149                           tblptrh	equ	0xFF7
 43150                           tblptrl	equ	0xFF6
 43151                           tablat	equ	0xFF5
 43152                           prodh	equ	0xFF4
 43153                           prodl	equ	0xFF3
 43154                           intcon	equ	0xFF2
 43155                           intcon2	equ	0xFF1
 43156                           intcon3	equ	0xFF0
 43157                           indf0	equ	0xFEF
 43158                           postinc0	equ	0xFEE
 43159                           plusw0	equ	0xFEB
 43160                           fsr0h	equ	0xFEA
 43161                           fsr0l	equ	0xFE9
 43162                           wreg	equ	0xFE8
 43163                           postinc1	equ	0xFE6
 43164                           postdec1	equ	0xFE5
 43165                           plusw1	equ	0xFE3
 43166                           fsr1h	equ	0xFE2
 43167                           fsr1l	equ	0xFE1
 43168                           indf2	equ	0xFDF
 43169                           postinc2	equ	0xFDE
 43170                           postdec2	equ	0xFDD
 43171                           plusw2	equ	0xFDB
 43172                           fsr2h	equ	0xFDA
 43173                           fsr2l	equ	0xFD9
 43174                           status	equ	0xFD8
 43175                           
 43176 ;; *************** function i2_TMR_GetDeltaTime *****************
 43177 ;; Defined at:
 43178 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 43179 ;; Parameters:    Size  Location     Type
 43180 ;;		None
 43181 ;; Auto vars:     Size  Location     Type
 43182 ;;		None
 43183 ;; Return value:  Size  Location     Type
 43184 ;;                  4    8[COMRAM] unsigned long 
 43185 ;; Registers used:
 43186 ;;		wreg, status,2, status,0, cstack
 43187 ;; Tracked objects:
 43188 ;;		On entry : 0/0
 43189 ;;		On exit  : 0/0
 43190 ;;		Unchanged: 0/0
 43191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43194 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43195 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43196 ;;Total ram usage:       24 bytes
 43197 ;; Hardware stack levels used:    1
 43198 ;; Hardware stack levels required when called:    1
 43199 ;; This function calls:
 43200 ;;		i2_TMR1_ReadTimer
 43201 ;; This function is called by:
 43202 ;;		i2_SwTimersInterrupt
 43203 ;; This function uses a non-reentrant model
 43204 ;;
 43205                           
 43206                           	psect	text219
 43207  005046                     __ptext219:
 43208                           	opt stack 0
 43209  005046                     i2_TMR_GetDeltaTime:
 43210                           	opt stack 12
 43211                           
 43212                           ;sw_timer.c: 90: static uint32_t retVal;
 43213                           ;sw_timer.c: 91: static uint16_t tmrVal;
 43214                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 43215                           
 43216                           ; BSR set to: 0
 43217                           ;incstack = 0
 43218  005046  EC85  F047         	call	i2_TMR1_ReadTimer	;wreg free
 43219  00504A  C001  F119         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 43220  00504E  C002  F11A         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 43221                           
 43222                           ;sw_timer.c: 95: if (timerOverflow == 1)
 43223  005052  0447               	decf	_timerOverflow,w,c	;volatile
 43224  005054  A4D8               	btfss	status,2,c
 43225  005056  D066               	goto	i2l216
 43226                           
 43227                           ;sw_timer.c: 96: {
 43228                           ;sw_timer.c: 97: timerOverflow = 0;
 43229  005058  0E00               	movlw	0
 43230  00505A  6E47               	movwf	_timerOverflow,c	;volatile
 43231                           
 43232                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 43233  00505C  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 43234  005060  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 43235  005064  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 43236  005068  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 43237  00506C  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 43238  00506E  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 43239  005070  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 43240  005072  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 43241  005074  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 43242  005076  0E00               	movlw	0
 43243  005078  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 43244  00507A  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 43245  00507C  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 43246  00507E  5044               	movf	_reloadVal,w,c	;volatile
 43247  005080  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 43248  005082  5045               	movf	_reloadVal+1,w,c	;volatile
 43249  005084  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 43250  005086  6A13               	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 43251  005088  6A14               	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 43252  00508A  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 43253  00508C  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 43254  00508E  1E13               	comf	??i2_TMR_GetDeltaTime+6,f,c
 43255  005090  1E14               	comf	??i2_TMR_GetDeltaTime+7,f,c
 43256  005092  2A11               	incf	??i2_TMR_GetDeltaTime+4,f,c
 43257  005094  0E00               	movlw	0
 43258  005096  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 43259  005098  2213               	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 43260  00509A  2214               	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 43261  00509C  0101               	movlb	1	; () banked
 43262  00509E  5119               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 43263  0050A0  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 43264  0050A2  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 43265  0050A4  511A               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 43266  0050A6  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 43267  0050A8  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 43268  0050AA  0E00               	movlw	0
 43269  0050AC  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 43270  0050AE  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 43271  0050B0  0E00               	movlw	0
 43272  0050B2  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 43273  0050B4  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 43274  0050B6  500D               	movf	??i2_TMR_GetDeltaTime,w,c
 43275  0050B8  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 43276  0050BA  6E19               	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 43277  0050BC  500E               	movf	??i2_TMR_GetDeltaTime+1,w,c
 43278  0050BE  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 43279  0050C0  6E1A               	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 43280  0050C2  500F               	movf	??i2_TMR_GetDeltaTime+2,w,c
 43281  0050C4  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 43282  0050C6  6E1B               	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 43283  0050C8  5010               	movf	??i2_TMR_GetDeltaTime+3,w,c
 43284  0050CA  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 43285  0050CC  6E1C               	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 43286  0050CE  5040               	movf	_ticksAdded,w,c	;volatile
 43287  0050D0  2419               	addwf	??i2_TMR_GetDeltaTime+12,w,c
 43288  0050D2  6E1D               	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 43289  0050D4  5041               	movf	_ticksAdded+1,w,c	;volatile
 43290  0050D6  201A               	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 43291  0050D8  6E1E               	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 43292  0050DA  5042               	movf	_ticksAdded+2,w,c	;volatile
 43293  0050DC  201B               	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 43294  0050DE  6E1F               	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 43295  0050E0  5043               	movf	_ticksAdded+3,w,c	;volatile
 43296  0050E2  201C               	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 43297  0050E4  6E20               	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 43298  0050E6  0E00               	movlw	0
 43299  0050E8  241D               	addwf	??i2_TMR_GetDeltaTime+16,w,c
 43300  0050EA  6F08               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 43301  0050EC  0E00               	movlw	0
 43302  0050EE  201E               	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 43303  0050F0  6F09               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 43304  0050F2  0E01               	movlw	1
 43305  0050F4  201F               	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 43306  0050F6  6F0A               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 43307  0050F8  0E00               	movlw	0
 43308  0050FA  2020               	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 43309  0050FC  6F0B               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 43310                           
 43311                           ; BSR set to: 1
 43312                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 43313  0050FE  C119  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 43314  005102  C11A  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 43315  005106  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 43316  005108  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 43317                           
 43318                           ; BSR set to: 1
 43319                           ;sw_timer.c: 100: ticksAdded = 0;
 43320  00510A  0E00               	movlw	0
 43321  00510C  6E40               	movwf	_ticksAdded,c	;volatile
 43322  00510E  0E00               	movlw	0
 43323  005110  6E41               	movwf	_ticksAdded+1,c	;volatile
 43324  005112  0E00               	movlw	0
 43325  005114  6E42               	movwf	_ticksAdded+2,c	;volatile
 43326  005116  0E00               	movlw	0
 43327  005118  6E43               	movwf	_ticksAdded+3,c	;volatile
 43328                           
 43329                           ; BSR set to: 1
 43330                           ;sw_timer.c: 101: reloadVal = 0;
 43331  00511A  0E00               	movlw	0
 43332  00511C  6E45               	movwf	_reloadVal+1,c	;volatile
 43333  00511E  0E00               	movlw	0
 43334  005120  6E44               	movwf	_reloadVal,c	;volatile
 43335                           
 43336                           ;sw_timer.c: 102: }
 43337  005122  D03E               	goto	i2l217
 43338  005124                     i2l216:
 43339                           
 43340                           ;sw_timer.c: 103: else
 43341                           ;sw_timer.c: 104: {
 43342                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 43343                           
 43344                           ; BSR set to: 1
 43345  005124  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 43346  005128  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 43347  00512C  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 43348  005130  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 43349  005134  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 43350  005136  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 43351  005138  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 43352  00513A  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 43353  00513C  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 43354  00513E  0E00               	movlw	0
 43355  005140  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 43356  005142  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 43357  005144  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 43358  005146  C044  F011         	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 43359  00514A  C045  F012         	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 43360  00514E  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 43361  005150  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 43362  005152  4A11               	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 43363  005154  2A12               	incf	??i2_TMR_GetDeltaTime+5,f,c
 43364  005156  0101               	movlb	1	; () banked
 43365  005158  5119               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 43366  00515A  2611               	addwf	??i2_TMR_GetDeltaTime+4,f,c
 43367  00515C  511A               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 43368  00515E  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 43369  005160  5011               	movf	??i2_TMR_GetDeltaTime+4,w,c
 43370  005162  240D               	addwf	??i2_TMR_GetDeltaTime,w,c
 43371  005164  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 43372  005166  5012               	movf	??i2_TMR_GetDeltaTime+5,w,c
 43373  005168  200E               	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 43374  00516A  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 43375  00516C  0E00               	movlw	0
 43376  00516E  200F               	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 43377  005170  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 43378  005172  0E00               	movlw	0
 43379  005174  2010               	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 43380  005176  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 43381  005178  5040               	movf	_ticksAdded,w,c	;volatile
 43382  00517A  2413               	addwf	??i2_TMR_GetDeltaTime+6,w,c
 43383  00517C  6F08               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 43384  00517E  5041               	movf	_ticksAdded+1,w,c	;volatile
 43385  005180  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 43386  005182  6F09               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 43387  005184  5042               	movf	_ticksAdded+2,w,c	;volatile
 43388  005186  2015               	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 43389  005188  6F0A               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 43390  00518A  5043               	movf	_ticksAdded+3,w,c	;volatile
 43391  00518C  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 43392  00518E  6F0B               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 43393                           
 43394                           ;sw_timer.c: 106: ticksAccounted += retVal;
 43395  005190  5108               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 43396  005192  263C               	addwf	_ticksAccounted,f,c	;volatile
 43397  005194  5109               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 43398  005196  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 43399  005198  510A               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 43400  00519A  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 43401  00519C  510B               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 43402  00519E  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 43403  0051A0                     i2l217:
 43404                           
 43405                           ; BSR set to: 1
 43406                           ;sw_timer.c: 107: }
 43407                           ;sw_timer.c: 109: return retVal;
 43408                           
 43409                           ; BSR set to: 1
 43410  0051A0  C108  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 43411  0051A4  C109  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 43412  0051A8  C10A  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 43413  0051AC  C10B  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 43414  0051B0  0012               	return	
 43415  0051B2                     __end_ofi2_TMR_GetDeltaTime:
 43416                           	opt stack 0
 43417                           tosu	equ	0xFFF
 43418                           tosh	equ	0xFFE
 43419                           tosl	equ	0xFFD
 43420                           pclatu	equ	0xFFB
 43421                           pclath	equ	0xFFA
 43422                           tblptru	equ	0xFF8
 43423                           tblptrh	equ	0xFF7
 43424                           tblptrl	equ	0xFF6
 43425                           tablat	equ	0xFF5
 43426                           prodh	equ	0xFF4
 43427                           prodl	equ	0xFF3
 43428                           intcon	equ	0xFF2
 43429                           intcon2	equ	0xFF1
 43430                           intcon3	equ	0xFF0
 43431                           indf0	equ	0xFEF
 43432                           postinc0	equ	0xFEE
 43433                           plusw0	equ	0xFEB
 43434                           fsr0h	equ	0xFEA
 43435                           fsr0l	equ	0xFE9
 43436                           wreg	equ	0xFE8
 43437                           postinc1	equ	0xFE6
 43438                           postdec1	equ	0xFE5
 43439                           plusw1	equ	0xFE3
 43440                           fsr1h	equ	0xFE2
 43441                           fsr1l	equ	0xFE1
 43442                           indf2	equ	0xFDF
 43443                           postinc2	equ	0xFDE
 43444                           postdec2	equ	0xFDD
 43445                           plusw2	equ	0xFDB
 43446                           fsr2h	equ	0xFDA
 43447                           fsr2l	equ	0xFD9
 43448                           status	equ	0xFD8
 43449                           
 43450 ;; *************** function i2_TMR1_ReadTimer *****************
 43451 ;; Defined at:
 43452 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 43453 ;; Parameters:    Size  Location     Type
 43454 ;;		None
 43455 ;; Auto vars:     Size  Location     Type
 43456 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 43457 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 43458 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 43459 ;; Return value:  Size  Location     Type
 43460 ;;                  2    0[COMRAM] unsigned int 
 43461 ;; Registers used:
 43462 ;;		wreg, status,2
 43463 ;; Tracked objects:
 43464 ;;		On entry : 0/0
 43465 ;;		On exit  : 0/0
 43466 ;;		Unchanged: 0/0
 43467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43469 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43471 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43472 ;;Total ram usage:        8 bytes
 43473 ;; Hardware stack levels used:    1
 43474 ;; This function calls:
 43475 ;;		Nothing
 43476 ;; This function is called by:
 43477 ;;		i2_TMR_GetDeltaTime
 43478 ;;		i2_TMR_SwapTimer
 43479 ;; This function uses a non-reentrant model
 43480 ;;
 43481                           
 43482                           	psect	text220
 43483  008F0A                     __ptext220:
 43484                           	opt stack 0
 43485  008F0A                     i2_TMR1_ReadTimer:
 43486                           	opt stack 13
 43487                           
 43488                           ;tmr1.c: 107: uint16_t readVal;
 43489                           ;tmr1.c: 108: uint8_t readValHigh;
 43490                           ;tmr1.c: 109: uint8_t readValLow;
 43491                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 43492                           
 43493                           ; BSR set to: 1
 43494                           ;incstack = 0
 43495  008F0A  82CD               	bsf	4045,1,c	;volatile
 43496                           
 43497                           ;tmr1.c: 113: readValLow = TMR1L;
 43498  008F0C  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 43499                           
 43500                           ;tmr1.c: 114: readValHigh = TMR1H;
 43501  008F10  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 43502                           
 43503                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 43504  008F14  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 43505  008F16  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 43506  008F18  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 43507  008F1A  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 43508  008F1C  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 43509                           
 43510                           ;tmr1.c: 118: return readVal;
 43511  008F20  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 43512  008F24  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 43513  008F28  0012               	return	
 43514  008F2A                     __end_ofi2_TMR1_ReadTimer:
 43515                           	opt stack 0
 43516                           tosu	equ	0xFFF
 43517                           tosh	equ	0xFFE
 43518                           tosl	equ	0xFFD
 43519                           pclatu	equ	0xFFB
 43520                           pclath	equ	0xFFA
 43521                           tblptru	equ	0xFF8
 43522                           tblptrh	equ	0xFF7
 43523                           tblptrl	equ	0xFF6
 43524                           tablat	equ	0xFF5
 43525                           prodh	equ	0xFF4
 43526                           prodl	equ	0xFF3
 43527                           intcon	equ	0xFF2
 43528                           intcon2	equ	0xFF1
 43529                           intcon3	equ	0xFF0
 43530                           indf0	equ	0xFEF
 43531                           postinc0	equ	0xFEE
 43532                           plusw0	equ	0xFEB
 43533                           fsr0h	equ	0xFEA
 43534                           fsr0l	equ	0xFE9
 43535                           wreg	equ	0xFE8
 43536                           postinc1	equ	0xFE6
 43537                           postdec1	equ	0xFE5
 43538                           plusw1	equ	0xFE3
 43539                           fsr1h	equ	0xFE2
 43540                           fsr1l	equ	0xFE1
 43541                           indf2	equ	0xFDF
 43542                           postinc2	equ	0xFDE
 43543                           postdec2	equ	0xFDD
 43544                           plusw2	equ	0xFDB
 43545                           fsr2h	equ	0xFDA
 43546                           fsr2l	equ	0xFD9
 43547                           status	equ	0xFD8
 43548                           
 43549 ;; *************** function _PIN_MANAGER_IOC *****************
 43550 ;; Defined at:
 43551 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
 43552 ;; Parameters:    Size  Location     Type
 43553 ;;		None
 43554 ;; Auto vars:     Size  Location     Type
 43555 ;;		None
 43556 ;; Return value:  Size  Location     Type
 43557 ;;                  1    wreg      void 
 43558 ;; Registers used:
 43559 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 43560 ;; Tracked objects:
 43561 ;;		On entry : 0/0
 43562 ;;		On exit  : 0/0
 43563 ;;		Unchanged: 0/0
 43564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43569 ;;Total ram usage:        0 bytes
 43570 ;; Hardware stack levels used:    1
 43571 ;; Hardware stack levels required when called:    2
 43572 ;; This function calls:
 43573 ;;		_IOCB4_ISR
 43574 ;; This function is called by:
 43575 ;;		_INTERRUPT_InterruptManager
 43576 ;; This function uses a non-reentrant model
 43577 ;;
 43578                           
 43579                           	psect	text221
 43580  009298                     __ptext221:
 43581                           	opt stack 0
 43582  009298                     _PIN_MANAGER_IOC:
 43583                           	opt stack 15
 43584                           
 43585                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
 43586                           
 43587                           ;incstack = 0
 43588  009298  B862               	btfsc	3938,4,c	;volatile
 43589                           
 43590                           ;pin_manager.c: 114: {
 43591                           ;pin_manager.c: 115: IOCB4_ISR();
 43592  00929A  EC95  F047         	call	_IOCB4_ISR	;wreg free
 43593                           
 43594                           ;pin_manager.c: 116: }
 43595                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
 43596  00929E  90F2               	bcf	intcon,0,c	;volatile
 43597  0092A0  0012               	return		;funcret
 43598  0092A2                     __end_of_PIN_MANAGER_IOC:
 43599                           	opt stack 0
 43600                           tosu	equ	0xFFF
 43601                           tosh	equ	0xFFE
 43602                           tosl	equ	0xFFD
 43603                           pclatu	equ	0xFFB
 43604                           pclath	equ	0xFFA
 43605                           tblptru	equ	0xFF8
 43606                           tblptrh	equ	0xFF7
 43607                           tblptrl	equ	0xFF6
 43608                           tablat	equ	0xFF5
 43609                           prodh	equ	0xFF4
 43610                           prodl	equ	0xFF3
 43611                           intcon	equ	0xFF2
 43612                           intcon2	equ	0xFF1
 43613                           intcon3	equ	0xFF0
 43614                           indf0	equ	0xFEF
 43615                           postinc0	equ	0xFEE
 43616                           plusw0	equ	0xFEB
 43617                           fsr0h	equ	0xFEA
 43618                           fsr0l	equ	0xFE9
 43619                           wreg	equ	0xFE8
 43620                           postinc1	equ	0xFE6
 43621                           postdec1	equ	0xFE5
 43622                           plusw1	equ	0xFE3
 43623                           fsr1h	equ	0xFE2
 43624                           fsr1l	equ	0xFE1
 43625                           indf2	equ	0xFDF
 43626                           postinc2	equ	0xFDE
 43627                           postdec2	equ	0xFDD
 43628                           plusw2	equ	0xFDB
 43629                           fsr2h	equ	0xFDA
 43630                           fsr2l	equ	0xFD9
 43631                           status	equ	0xFD8
 43632                           
 43633 ;; *************** function _IOCB4_ISR *****************
 43634 ;; Defined at:
 43635 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
 43636 ;; Parameters:    Size  Location     Type
 43637 ;;		None
 43638 ;; Auto vars:     Size  Location     Type
 43639 ;;		None
 43640 ;; Return value:  Size  Location     Type
 43641 ;;                  1    wreg      void 
 43642 ;; Registers used:
 43643 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 43644 ;; Tracked objects:
 43645 ;;		On entry : 0/0
 43646 ;;		On exit  : 0/0
 43647 ;;		Unchanged: 0/0
 43648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43653 ;;Total ram usage:        0 bytes
 43654 ;; Hardware stack levels used:    1
 43655 ;; Hardware stack levels required when called:    1
 43656 ;; This function calls:
 43657 ;;		Absolute function
 43658 ;;		_DIO2_ISR_Lora
 43659 ;;		_IOCB4_DefaultInterruptHandler
 43660 ;; This function is called by:
 43661 ;;		_PIN_MANAGER_IOC
 43662 ;; This function uses a non-reentrant model
 43663 ;;
 43664                           
 43665                           	psect	text222
 43666  008F2A                     __ptext222:
 43667                           	opt stack 0
 43668  008F2A                     _IOCB4_ISR:
 43669                           	opt stack 15
 43670                           
 43671                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
 43672                           
 43673                           ;incstack = 0
 43674  008F2A  0101               	movlb	1	; () banked
 43675  008F2C  51E8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 43676  008F2E  11E9               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 43677  008F30  B4D8               	btfsc	status,2,c
 43678  008F32  0012               	return	
 43679                           
 43680                           ; BSR set to: 1
 43681                           ;pin_manager.c: 130: {
 43682                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
 43683  008F34  D801               	call	i2u2231_48
 43684  008F36  0012               	return	
 43685  008F38                     i2u2231_48:
 43686  008F38  0005               	push	
 43687  008F3A  6EFA               	movwf	pclath,c
 43688  008F3C  51E8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 43689  008F3E  6EFD               	movwf	tosl,c
 43690  008F40  51E9               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 43691  008F42  6EFE               	movwf	tosh,c
 43692  008F44  6AFF               	clrf	tosu,c
 43693  008F46  50FA               	movf	pclath,w,c
 43694  008F48  0012               	return		;indir
 43695  008F4A                     __end_of_IOCB4_ISR:
 43696                           	opt stack 0
 43697                           tosu	equ	0xFFF
 43698                           tosh	equ	0xFFE
 43699                           tosl	equ	0xFFD
 43700                           pclatu	equ	0xFFB
 43701                           pclath	equ	0xFFA
 43702                           tblptru	equ	0xFF8
 43703                           tblptrh	equ	0xFF7
 43704                           tblptrl	equ	0xFF6
 43705                           tablat	equ	0xFF5
 43706                           prodh	equ	0xFF4
 43707                           prodl	equ	0xFF3
 43708                           intcon	equ	0xFF2
 43709                           intcon2	equ	0xFF1
 43710                           intcon3	equ	0xFF0
 43711                           indf0	equ	0xFEF
 43712                           postinc0	equ	0xFEE
 43713                           plusw0	equ	0xFEB
 43714                           fsr0h	equ	0xFEA
 43715                           fsr0l	equ	0xFE9
 43716                           wreg	equ	0xFE8
 43717                           postinc1	equ	0xFE6
 43718                           postdec1	equ	0xFE5
 43719                           plusw1	equ	0xFE3
 43720                           fsr1h	equ	0xFE2
 43721                           fsr1l	equ	0xFE1
 43722                           indf2	equ	0xFDF
 43723                           postinc2	equ	0xFDE
 43724                           postdec2	equ	0xFDD
 43725                           plusw2	equ	0xFDB
 43726                           fsr2h	equ	0xFDA
 43727                           fsr2l	equ	0xFD9
 43728                           status	equ	0xFD8
 43729                           
 43730 ;; *************** function _DIO2_ISR_Lora *****************
 43731 ;; Defined at:
 43732 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 43733 ;; Parameters:    Size  Location     Type
 43734 ;;		None
 43735 ;; Auto vars:     Size  Location     Type
 43736 ;;		None
 43737 ;; Return value:  Size  Location     Type
 43738 ;;                  1    wreg      void 
 43739 ;; Registers used:
 43740 ;;		status,2, status,0
 43741 ;; Tracked objects:
 43742 ;;		On entry : 0/0
 43743 ;;		On exit  : 0/0
 43744 ;;		Unchanged: 0/0
 43745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43750 ;;Total ram usage:        0 bytes
 43751 ;; Hardware stack levels used:    1
 43752 ;; This function calls:
 43753 ;;		Nothing
 43754 ;; This function is called by:
 43755 ;;		_DIO2_ISR_Lora_Init
 43756 ;;		_IOCB4_ISR
 43757 ;; This function uses a non-reentrant model
 43758 ;;
 43759                           
 43760                           	psect	text223
 43761  0092DA                     __ptext223:
 43762                           	opt stack 0
 43763  0092DA                     _DIO2_ISR_Lora:
 43764                           	opt stack 15
 43765                           
 43766                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 43767                           
 43768                           ;incstack = 0
 43769  0092DA  0101               	movlb	1	; () banked
 43770  0092DC  8520               	bsf	_dioStatus& (0+255),2,b	;volatile
 43771                           
 43772                           ; BSR set to: 1
 43773  0092DE  0012               	return		;funcret
 43774  0092E0                     __end_of_DIO2_ISR_Lora:
 43775                           	opt stack 0
 43776                           tosu	equ	0xFFF
 43777                           tosh	equ	0xFFE
 43778                           tosl	equ	0xFFD
 43779                           pclatu	equ	0xFFB
 43780                           pclath	equ	0xFFA
 43781                           tblptru	equ	0xFF8
 43782                           tblptrh	equ	0xFF7
 43783                           tblptrl	equ	0xFF6
 43784                           tablat	equ	0xFF5
 43785                           prodh	equ	0xFF4
 43786                           prodl	equ	0xFF3
 43787                           intcon	equ	0xFF2
 43788                           intcon2	equ	0xFF1
 43789                           intcon3	equ	0xFF0
 43790                           indf0	equ	0xFEF
 43791                           postinc0	equ	0xFEE
 43792                           plusw0	equ	0xFEB
 43793                           fsr0h	equ	0xFEA
 43794                           fsr0l	equ	0xFE9
 43795                           wreg	equ	0xFE8
 43796                           postinc1	equ	0xFE6
 43797                           postdec1	equ	0xFE5
 43798                           plusw1	equ	0xFE3
 43799                           fsr1h	equ	0xFE2
 43800                           fsr1l	equ	0xFE1
 43801                           indf2	equ	0xFDF
 43802                           postinc2	equ	0xFDE
 43803                           postdec2	equ	0xFDD
 43804                           plusw2	equ	0xFDB
 43805                           fsr2h	equ	0xFDA
 43806                           fsr2l	equ	0xFD9
 43807                           status	equ	0xFD8
 43808                           
 43809 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 43810 ;; Defined at:
 43811 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 43812 ;; Parameters:    Size  Location     Type
 43813 ;;		None
 43814 ;; Auto vars:     Size  Location     Type
 43815 ;;		None
 43816 ;; Return value:  Size  Location     Type
 43817 ;;                  1    wreg      void 
 43818 ;; Registers used:
 43819 ;;		None
 43820 ;; Tracked objects:
 43821 ;;		On entry : 0/0
 43822 ;;		On exit  : 0/0
 43823 ;;		Unchanged: 0/0
 43824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43829 ;;Total ram usage:        0 bytes
 43830 ;; Hardware stack levels used:    1
 43831 ;; This function calls:
 43832 ;;		Nothing
 43833 ;; This function is called by:
 43834 ;;		_PIN_MANAGER_Initialize
 43835 ;;		_IOCB4_ISR
 43836 ;; This function uses a non-reentrant model
 43837 ;;
 43838                           
 43839                           	psect	text224
 43840  009310                     __ptext224:
 43841                           	opt stack 0
 43842  009310                     _IOCB4_DefaultInterruptHandler:
 43843                           	opt stack 15
 43844                           
 43845                           ; BSR set to: 1
 43846                           ;incstack = 0
 43847  009310  0012               	return		;funcret
 43848  009312                     __end_of_IOCB4_DefaultInterruptHandler:
 43849                           	opt stack 0
 43850                           tosu	equ	0xFFF
 43851                           tosh	equ	0xFFE
 43852                           tosl	equ	0xFFD
 43853                           pclatu	equ	0xFFB
 43854                           pclath	equ	0xFFA
 43855                           tblptru	equ	0xFF8
 43856                           tblptrh	equ	0xFF7
 43857                           tblptrl	equ	0xFF6
 43858                           tablat	equ	0xFF5
 43859                           prodh	equ	0xFF4
 43860                           prodl	equ	0xFF3
 43861                           intcon	equ	0xFF2
 43862                           intcon2	equ	0xFF1
 43863                           intcon3	equ	0xFF0
 43864                           indf0	equ	0xFEF
 43865                           postinc0	equ	0xFEE
 43866                           plusw0	equ	0xFEB
 43867                           fsr0h	equ	0xFEA
 43868                           fsr0l	equ	0xFE9
 43869                           wreg	equ	0xFE8
 43870                           postinc1	equ	0xFE6
 43871                           postdec1	equ	0xFE5
 43872                           plusw1	equ	0xFE3
 43873                           fsr1h	equ	0xFE2
 43874                           fsr1l	equ	0xFE1
 43875                           indf2	equ	0xFDF
 43876                           postinc2	equ	0xFDE
 43877                           postdec2	equ	0xFDD
 43878                           plusw2	equ	0xFDB
 43879                           fsr2h	equ	0xFDA
 43880                           fsr2l	equ	0xFD9
 43881                           status	equ	0xFD8
 43882                           
 43883 ;; *************** function _INT2_ISR *****************
 43884 ;; Defined at:
 43885 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 43886 ;; Parameters:    Size  Location     Type
 43887 ;;		None
 43888 ;; Auto vars:     Size  Location     Type
 43889 ;;		None
 43890 ;; Return value:  Size  Location     Type
 43891 ;;                  1    wreg      void 
 43892 ;; Registers used:
 43893 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 43894 ;; Tracked objects:
 43895 ;;		On entry : 0/0
 43896 ;;		On exit  : 0/0
 43897 ;;		Unchanged: 0/0
 43898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43903 ;;Total ram usage:        0 bytes
 43904 ;; Hardware stack levels used:    1
 43905 ;; Hardware stack levels required when called:    2
 43906 ;; This function calls:
 43907 ;;		_INT2_CallBack
 43908 ;; This function is called by:
 43909 ;;		_INTERRUPT_InterruptManager
 43910 ;; This function uses a non-reentrant model
 43911 ;;
 43912                           
 43913                           	psect	text225
 43914  0092B2                     __ptext225:
 43915                           	opt stack 0
 43916  0092B2                     _INT2_ISR:
 43917                           	opt stack 15
 43918                           
 43919                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 43920                           
 43921                           ;incstack = 0
 43922  0092B2  92F0               	bcf	intcon3,1,c	;volatile
 43923                           
 43924                           ;ext_int.c: 64: INT2_CallBack();
 43925  0092B4  ECA5  F047         	call	_INT2_CallBack	;wreg free
 43926  0092B8  0012               	return		;funcret
 43927  0092BA                     __end_of_INT2_ISR:
 43928                           	opt stack 0
 43929                           tosu	equ	0xFFF
 43930                           tosh	equ	0xFFE
 43931                           tosl	equ	0xFFD
 43932                           pclatu	equ	0xFFB
 43933                           pclath	equ	0xFFA
 43934                           tblptru	equ	0xFF8
 43935                           tblptrh	equ	0xFF7
 43936                           tblptrl	equ	0xFF6
 43937                           tablat	equ	0xFF5
 43938                           prodh	equ	0xFF4
 43939                           prodl	equ	0xFF3
 43940                           intcon	equ	0xFF2
 43941                           intcon2	equ	0xFF1
 43942                           intcon3	equ	0xFF0
 43943                           indf0	equ	0xFEF
 43944                           postinc0	equ	0xFEE
 43945                           plusw0	equ	0xFEB
 43946                           fsr0h	equ	0xFEA
 43947                           fsr0l	equ	0xFE9
 43948                           wreg	equ	0xFE8
 43949                           postinc1	equ	0xFE6
 43950                           postdec1	equ	0xFE5
 43951                           plusw1	equ	0xFE3
 43952                           fsr1h	equ	0xFE2
 43953                           fsr1l	equ	0xFE1
 43954                           indf2	equ	0xFDF
 43955                           postinc2	equ	0xFDE
 43956                           postdec2	equ	0xFDD
 43957                           plusw2	equ	0xFDB
 43958                           fsr2h	equ	0xFDA
 43959                           fsr2l	equ	0xFD9
 43960                           status	equ	0xFD8
 43961                           
 43962 ;; *************** function _INT2_CallBack *****************
 43963 ;; Defined at:
 43964 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 43965 ;; Parameters:    Size  Location     Type
 43966 ;;		None
 43967 ;; Auto vars:     Size  Location     Type
 43968 ;;		None
 43969 ;; Return value:  Size  Location     Type
 43970 ;;                  1    wreg      void 
 43971 ;; Registers used:
 43972 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 43973 ;; Tracked objects:
 43974 ;;		On entry : 0/0
 43975 ;;		On exit  : 0/0
 43976 ;;		Unchanged: 0/0
 43977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43982 ;;Total ram usage:        0 bytes
 43983 ;; Hardware stack levels used:    1
 43984 ;; Hardware stack levels required when called:    1
 43985 ;; This function calls:
 43986 ;;		Absolute function
 43987 ;;		_DIO1_ISR_Lora
 43988 ;;		_INT2_DefaultInterruptHandler
 43989 ;; This function is called by:
 43990 ;;		_INT2_ISR
 43991 ;; This function uses a non-reentrant model
 43992 ;;
 43993                           
 43994                           	psect	text226
 43995  008F4A                     __ptext226:
 43996                           	opt stack 0
 43997  008F4A                     _INT2_CallBack:
 43998                           	opt stack 15
 43999                           
 44000                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 44001                           
 44002                           ;incstack = 0
 44003  008F4A  0101               	movlb	1	; () banked
 44004  008F4C  51EA               	movf	_INT2_InterruptHandler& (0+255),w,b
 44005  008F4E  11EB               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 44006  008F50  B4D8               	btfsc	status,2,c
 44007  008F52  0012               	return	
 44008                           
 44009                           ; BSR set to: 1
 44010                           ;ext_int.c: 72: {
 44011                           ;ext_int.c: 73: INT2_InterruptHandler();
 44012  008F54  D801               	call	i2u2229_48
 44013  008F56  0012               	return	
 44014  008F58                     i2u2229_48:
 44015  008F58  0005               	push	
 44016  008F5A  6EFA               	movwf	pclath,c
 44017  008F5C  51EA               	movf	_INT2_InterruptHandler& (0+255),w,b
 44018  008F5E  6EFD               	movwf	tosl,c
 44019  008F60  51EB               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 44020  008F62  6EFE               	movwf	tosh,c
 44021  008F64  6AFF               	clrf	tosu,c
 44022  008F66  50FA               	movf	pclath,w,c
 44023  008F68  0012               	return		;indir
 44024  008F6A                     __end_of_INT2_CallBack:
 44025                           	opt stack 0
 44026                           tosu	equ	0xFFF
 44027                           tosh	equ	0xFFE
 44028                           tosl	equ	0xFFD
 44029                           pclatu	equ	0xFFB
 44030                           pclath	equ	0xFFA
 44031                           tblptru	equ	0xFF8
 44032                           tblptrh	equ	0xFF7
 44033                           tblptrl	equ	0xFF6
 44034                           tablat	equ	0xFF5
 44035                           prodh	equ	0xFF4
 44036                           prodl	equ	0xFF3
 44037                           intcon	equ	0xFF2
 44038                           intcon2	equ	0xFF1
 44039                           intcon3	equ	0xFF0
 44040                           indf0	equ	0xFEF
 44041                           postinc0	equ	0xFEE
 44042                           plusw0	equ	0xFEB
 44043                           fsr0h	equ	0xFEA
 44044                           fsr0l	equ	0xFE9
 44045                           wreg	equ	0xFE8
 44046                           postinc1	equ	0xFE6
 44047                           postdec1	equ	0xFE5
 44048                           plusw1	equ	0xFE3
 44049                           fsr1h	equ	0xFE2
 44050                           fsr1l	equ	0xFE1
 44051                           indf2	equ	0xFDF
 44052                           postinc2	equ	0xFDE
 44053                           postdec2	equ	0xFDD
 44054                           plusw2	equ	0xFDB
 44055                           fsr2h	equ	0xFDA
 44056                           fsr2l	equ	0xFD9
 44057                           status	equ	0xFD8
 44058                           
 44059 ;; *************** function _DIO1_ISR_Lora *****************
 44060 ;; Defined at:
 44061 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 44062 ;; Parameters:    Size  Location     Type
 44063 ;;		None
 44064 ;; Auto vars:     Size  Location     Type
 44065 ;;		None
 44066 ;; Return value:  Size  Location     Type
 44067 ;;                  1    wreg      void 
 44068 ;; Registers used:
 44069 ;;		status,2, status,0
 44070 ;; Tracked objects:
 44071 ;;		On entry : 0/0
 44072 ;;		On exit  : 0/0
 44073 ;;		Unchanged: 0/0
 44074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44079 ;;Total ram usage:        0 bytes
 44080 ;; Hardware stack levels used:    1
 44081 ;; This function calls:
 44082 ;;		Nothing
 44083 ;; This function is called by:
 44084 ;;		_DIO1_ISR_Lora_Init
 44085 ;;		_INT2_CallBack
 44086 ;; This function uses a non-reentrant model
 44087 ;;
 44088                           
 44089                           	psect	text227
 44090  0092E0                     __ptext227:
 44091                           	opt stack 0
 44092  0092E0                     _DIO1_ISR_Lora:
 44093                           	opt stack 15
 44094                           
 44095                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 44096                           
 44097                           ;incstack = 0
 44098  0092E0  0101               	movlb	1	; () banked
 44099  0092E2  8320               	bsf	_dioStatus& (0+255),1,b	;volatile
 44100                           
 44101                           ; BSR set to: 1
 44102  0092E4  0012               	return		;funcret
 44103  0092E6                     __end_of_DIO1_ISR_Lora:
 44104                           	opt stack 0
 44105                           tosu	equ	0xFFF
 44106                           tosh	equ	0xFFE
 44107                           tosl	equ	0xFFD
 44108                           pclatu	equ	0xFFB
 44109                           pclath	equ	0xFFA
 44110                           tblptru	equ	0xFF8
 44111                           tblptrh	equ	0xFF7
 44112                           tblptrl	equ	0xFF6
 44113                           tablat	equ	0xFF5
 44114                           prodh	equ	0xFF4
 44115                           prodl	equ	0xFF3
 44116                           intcon	equ	0xFF2
 44117                           intcon2	equ	0xFF1
 44118                           intcon3	equ	0xFF0
 44119                           indf0	equ	0xFEF
 44120                           postinc0	equ	0xFEE
 44121                           plusw0	equ	0xFEB
 44122                           fsr0h	equ	0xFEA
 44123                           fsr0l	equ	0xFE9
 44124                           wreg	equ	0xFE8
 44125                           postinc1	equ	0xFE6
 44126                           postdec1	equ	0xFE5
 44127                           plusw1	equ	0xFE3
 44128                           fsr1h	equ	0xFE2
 44129                           fsr1l	equ	0xFE1
 44130                           indf2	equ	0xFDF
 44131                           postinc2	equ	0xFDE
 44132                           postdec2	equ	0xFDD
 44133                           plusw2	equ	0xFDB
 44134                           fsr2h	equ	0xFDA
 44135                           fsr2l	equ	0xFD9
 44136                           status	equ	0xFD8
 44137                           
 44138 ;; *************** function _INT2_DefaultInterruptHandler *****************
 44139 ;; Defined at:
 44140 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 44141 ;; Parameters:    Size  Location     Type
 44142 ;;		None
 44143 ;; Auto vars:     Size  Location     Type
 44144 ;;		None
 44145 ;; Return value:  Size  Location     Type
 44146 ;;                  1    wreg      void 
 44147 ;; Registers used:
 44148 ;;		None
 44149 ;; Tracked objects:
 44150 ;;		On entry : 0/0
 44151 ;;		On exit  : 0/0
 44152 ;;		Unchanged: 0/0
 44153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44158 ;;Total ram usage:        0 bytes
 44159 ;; Hardware stack levels used:    1
 44160 ;; This function calls:
 44161 ;;		Nothing
 44162 ;; This function is called by:
 44163 ;;		_EXT_INT_Initialize
 44164 ;;		_INT2_CallBack
 44165 ;; This function uses a non-reentrant model
 44166 ;;
 44167                           
 44168                           	psect	text228
 44169  009312                     __ptext228:
 44170                           	opt stack 0
 44171  009312                     _INT2_DefaultInterruptHandler:
 44172                           	opt stack 15
 44173                           
 44174                           ; BSR set to: 1
 44175                           ;incstack = 0
 44176  009312  0012               	return		;funcret
 44177  009314                     __end_of_INT2_DefaultInterruptHandler:
 44178                           	opt stack 0
 44179                           tosu	equ	0xFFF
 44180                           tosh	equ	0xFFE
 44181                           tosl	equ	0xFFD
 44182                           pclatu	equ	0xFFB
 44183                           pclath	equ	0xFFA
 44184                           tblptru	equ	0xFF8
 44185                           tblptrh	equ	0xFF7
 44186                           tblptrl	equ	0xFF6
 44187                           tablat	equ	0xFF5
 44188                           prodh	equ	0xFF4
 44189                           prodl	equ	0xFF3
 44190                           intcon	equ	0xFF2
 44191                           intcon2	equ	0xFF1
 44192                           intcon3	equ	0xFF0
 44193                           indf0	equ	0xFEF
 44194                           postinc0	equ	0xFEE
 44195                           plusw0	equ	0xFEB
 44196                           fsr0h	equ	0xFEA
 44197                           fsr0l	equ	0xFE9
 44198                           wreg	equ	0xFE8
 44199                           postinc1	equ	0xFE6
 44200                           postdec1	equ	0xFE5
 44201                           plusw1	equ	0xFE3
 44202                           fsr1h	equ	0xFE2
 44203                           fsr1l	equ	0xFE1
 44204                           indf2	equ	0xFDF
 44205                           postinc2	equ	0xFDE
 44206                           postdec2	equ	0xFDD
 44207                           plusw2	equ	0xFDB
 44208                           fsr2h	equ	0xFDA
 44209                           fsr2l	equ	0xFD9
 44210                           status	equ	0xFD8
 44211                           
 44212 ;; *************** function _INT1_ISR *****************
 44213 ;; Defined at:
 44214 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 44215 ;; Parameters:    Size  Location     Type
 44216 ;;		None
 44217 ;; Auto vars:     Size  Location     Type
 44218 ;;		None
 44219 ;; Return value:  Size  Location     Type
 44220 ;;                  1    wreg      void 
 44221 ;; Registers used:
 44222 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 44223 ;; Tracked objects:
 44224 ;;		On entry : 0/0
 44225 ;;		On exit  : 0/0
 44226 ;;		Unchanged: 0/0
 44227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44232 ;;Total ram usage:        0 bytes
 44233 ;; Hardware stack levels used:    1
 44234 ;; Hardware stack levels required when called:    2
 44235 ;; This function calls:
 44236 ;;		_INT1_CallBack
 44237 ;; This function is called by:
 44238 ;;		_INTERRUPT_InterruptManager
 44239 ;; This function uses a non-reentrant model
 44240 ;;
 44241                           
 44242                           	psect	text229
 44243  0092BA                     __ptext229:
 44244                           	opt stack 0
 44245  0092BA                     _INT1_ISR:
 44246                           	opt stack 15
 44247                           
 44248                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 44249                           
 44250                           ;incstack = 0
 44251  0092BA  90F0               	bcf	intcon3,0,c	;volatile
 44252                           
 44253                           ;ext_int.c: 38: INT1_CallBack();
 44254  0092BC  ECB5  F047         	call	_INT1_CallBack	;wreg free
 44255  0092C0  0012               	return		;funcret
 44256  0092C2                     __end_of_INT1_ISR:
 44257                           	opt stack 0
 44258                           tosu	equ	0xFFF
 44259                           tosh	equ	0xFFE
 44260                           tosl	equ	0xFFD
 44261                           pclatu	equ	0xFFB
 44262                           pclath	equ	0xFFA
 44263                           tblptru	equ	0xFF8
 44264                           tblptrh	equ	0xFF7
 44265                           tblptrl	equ	0xFF6
 44266                           tablat	equ	0xFF5
 44267                           prodh	equ	0xFF4
 44268                           prodl	equ	0xFF3
 44269                           intcon	equ	0xFF2
 44270                           intcon2	equ	0xFF1
 44271                           intcon3	equ	0xFF0
 44272                           indf0	equ	0xFEF
 44273                           postinc0	equ	0xFEE
 44274                           plusw0	equ	0xFEB
 44275                           fsr0h	equ	0xFEA
 44276                           fsr0l	equ	0xFE9
 44277                           wreg	equ	0xFE8
 44278                           postinc1	equ	0xFE6
 44279                           postdec1	equ	0xFE5
 44280                           plusw1	equ	0xFE3
 44281                           fsr1h	equ	0xFE2
 44282                           fsr1l	equ	0xFE1
 44283                           indf2	equ	0xFDF
 44284                           postinc2	equ	0xFDE
 44285                           postdec2	equ	0xFDD
 44286                           plusw2	equ	0xFDB
 44287                           fsr2h	equ	0xFDA
 44288                           fsr2l	equ	0xFD9
 44289                           status	equ	0xFD8
 44290                           
 44291 ;; *************** function _INT1_CallBack *****************
 44292 ;; Defined at:
 44293 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 44294 ;; Parameters:    Size  Location     Type
 44295 ;;		None
 44296 ;; Auto vars:     Size  Location     Type
 44297 ;;		None
 44298 ;; Return value:  Size  Location     Type
 44299 ;;                  1    wreg      void 
 44300 ;; Registers used:
 44301 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 44302 ;; Tracked objects:
 44303 ;;		On entry : 0/0
 44304 ;;		On exit  : 0/0
 44305 ;;		Unchanged: 0/0
 44306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44311 ;;Total ram usage:        0 bytes
 44312 ;; Hardware stack levels used:    1
 44313 ;; Hardware stack levels required when called:    1
 44314 ;; This function calls:
 44315 ;;		Absolute function
 44316 ;;		_DIO0_ISR_Lora
 44317 ;;		_INT1_DefaultInterruptHandler
 44318 ;; This function is called by:
 44319 ;;		_INT1_ISR
 44320 ;; This function uses a non-reentrant model
 44321 ;;
 44322                           
 44323                           	psect	text230
 44324  008F6A                     __ptext230:
 44325                           	opt stack 0
 44326  008F6A                     _INT1_CallBack:
 44327                           	opt stack 15
 44328                           
 44329                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 44330                           
 44331                           ;incstack = 0
 44332  008F6A  0101               	movlb	1	; () banked
 44333  008F6C  51EC               	movf	_INT1_InterruptHandler& (0+255),w,b
 44334  008F6E  11ED               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 44335  008F70  B4D8               	btfsc	status,2,c
 44336  008F72  0012               	return	
 44337                           
 44338                           ; BSR set to: 1
 44339                           ;ext_int.c: 46: {
 44340                           ;ext_int.c: 47: INT1_InterruptHandler();
 44341  008F74  D801               	call	i2u2227_48
 44342  008F76  0012               	return	
 44343  008F78                     i2u2227_48:
 44344  008F78  0005               	push	
 44345  008F7A  6EFA               	movwf	pclath,c
 44346  008F7C  51EC               	movf	_INT1_InterruptHandler& (0+255),w,b
 44347  008F7E  6EFD               	movwf	tosl,c
 44348  008F80  51ED               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 44349  008F82  6EFE               	movwf	tosh,c
 44350  008F84  6AFF               	clrf	tosu,c
 44351  008F86  50FA               	movf	pclath,w,c
 44352  008F88  0012               	return		;indir
 44353  008F8A                     __end_of_INT1_CallBack:
 44354                           	opt stack 0
 44355                           tosu	equ	0xFFF
 44356                           tosh	equ	0xFFE
 44357                           tosl	equ	0xFFD
 44358                           pclatu	equ	0xFFB
 44359                           pclath	equ	0xFFA
 44360                           tblptru	equ	0xFF8
 44361                           tblptrh	equ	0xFF7
 44362                           tblptrl	equ	0xFF6
 44363                           tablat	equ	0xFF5
 44364                           prodh	equ	0xFF4
 44365                           prodl	equ	0xFF3
 44366                           intcon	equ	0xFF2
 44367                           intcon2	equ	0xFF1
 44368                           intcon3	equ	0xFF0
 44369                           indf0	equ	0xFEF
 44370                           postinc0	equ	0xFEE
 44371                           plusw0	equ	0xFEB
 44372                           fsr0h	equ	0xFEA
 44373                           fsr0l	equ	0xFE9
 44374                           wreg	equ	0xFE8
 44375                           postinc1	equ	0xFE6
 44376                           postdec1	equ	0xFE5
 44377                           plusw1	equ	0xFE3
 44378                           fsr1h	equ	0xFE2
 44379                           fsr1l	equ	0xFE1
 44380                           indf2	equ	0xFDF
 44381                           postinc2	equ	0xFDE
 44382                           postdec2	equ	0xFDD
 44383                           plusw2	equ	0xFDB
 44384                           fsr2h	equ	0xFDA
 44385                           fsr2l	equ	0xFD9
 44386                           status	equ	0xFD8
 44387                           
 44388 ;; *************** function _DIO0_ISR_Lora *****************
 44389 ;; Defined at:
 44390 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 44391 ;; Parameters:    Size  Location     Type
 44392 ;;		None
 44393 ;; Auto vars:     Size  Location     Type
 44394 ;;		None
 44395 ;; Return value:  Size  Location     Type
 44396 ;;                  1    wreg      void 
 44397 ;; Registers used:
 44398 ;;		status,2, status,0
 44399 ;; Tracked objects:
 44400 ;;		On entry : 0/0
 44401 ;;		On exit  : 0/0
 44402 ;;		Unchanged: 0/0
 44403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44408 ;;Total ram usage:        0 bytes
 44409 ;; Hardware stack levels used:    1
 44410 ;; This function calls:
 44411 ;;		Nothing
 44412 ;; This function is called by:
 44413 ;;		_DIO0_ISR_Lora_Init
 44414 ;;		_INT1_CallBack
 44415 ;; This function uses a non-reentrant model
 44416 ;;
 44417                           
 44418                           	psect	text231
 44419  0092E6                     __ptext231:
 44420                           	opt stack 0
 44421  0092E6                     _DIO0_ISR_Lora:
 44422                           	opt stack 15
 44423                           
 44424                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 44425                           
 44426                           ;incstack = 0
 44427  0092E6  0101               	movlb	1	; () banked
 44428  0092E8  8120               	bsf	_dioStatus& (0+255),0,b	;volatile
 44429                           
 44430                           ; BSR set to: 1
 44431  0092EA  0012               	return		;funcret
 44432  0092EC                     __end_of_DIO0_ISR_Lora:
 44433                           	opt stack 0
 44434                           tosu	equ	0xFFF
 44435                           tosh	equ	0xFFE
 44436                           tosl	equ	0xFFD
 44437                           pclatu	equ	0xFFB
 44438                           pclath	equ	0xFFA
 44439                           tblptru	equ	0xFF8
 44440                           tblptrh	equ	0xFF7
 44441                           tblptrl	equ	0xFF6
 44442                           tablat	equ	0xFF5
 44443                           prodh	equ	0xFF4
 44444                           prodl	equ	0xFF3
 44445                           intcon	equ	0xFF2
 44446                           intcon2	equ	0xFF1
 44447                           intcon3	equ	0xFF0
 44448                           indf0	equ	0xFEF
 44449                           postinc0	equ	0xFEE
 44450                           plusw0	equ	0xFEB
 44451                           fsr0h	equ	0xFEA
 44452                           fsr0l	equ	0xFE9
 44453                           wreg	equ	0xFE8
 44454                           postinc1	equ	0xFE6
 44455                           postdec1	equ	0xFE5
 44456                           plusw1	equ	0xFE3
 44457                           fsr1h	equ	0xFE2
 44458                           fsr1l	equ	0xFE1
 44459                           indf2	equ	0xFDF
 44460                           postinc2	equ	0xFDE
 44461                           postdec2	equ	0xFDD
 44462                           plusw2	equ	0xFDB
 44463                           fsr2h	equ	0xFDA
 44464                           fsr2l	equ	0xFD9
 44465                           status	equ	0xFD8
 44466                           
 44467 ;; *************** function _INT1_DefaultInterruptHandler *****************
 44468 ;; Defined at:
 44469 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 44470 ;; Parameters:    Size  Location     Type
 44471 ;;		None
 44472 ;; Auto vars:     Size  Location     Type
 44473 ;;		None
 44474 ;; Return value:  Size  Location     Type
 44475 ;;                  1    wreg      void 
 44476 ;; Registers used:
 44477 ;;		None
 44478 ;; Tracked objects:
 44479 ;;		On entry : 0/0
 44480 ;;		On exit  : 0/0
 44481 ;;		Unchanged: 0/0
 44482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44487 ;;Total ram usage:        0 bytes
 44488 ;; Hardware stack levels used:    1
 44489 ;; This function calls:
 44490 ;;		Nothing
 44491 ;; This function is called by:
 44492 ;;		_EXT_INT_Initialize
 44493 ;;		_INT1_CallBack
 44494 ;; This function uses a non-reentrant model
 44495 ;;
 44496                           
 44497                           	psect	text232
 44498  009314                     __ptext232:
 44499                           	opt stack 0
 44500  009314                     _INT1_DefaultInterruptHandler:
 44501                           	opt stack 15
 44502                           
 44503                           ; BSR set to: 1
 44504                           ;incstack = 0
 44505  009314  0012               	return		;funcret
 44506  009316                     __end_of_INT1_DefaultInterruptHandler:
 44507                           	opt stack 0
 44508                           tosu	equ	0xFFF
 44509                           tosh	equ	0xFFE
 44510                           tosl	equ	0xFFD
 44511                           pclatu	equ	0xFFB
 44512                           pclath	equ	0xFFA
 44513                           tblptru	equ	0xFF8
 44514                           tblptrh	equ	0xFF7
 44515                           tblptrl	equ	0xFF6
 44516                           tablat	equ	0xFF5
 44517                           prodh	equ	0xFF4
 44518                           prodl	equ	0xFF3
 44519                           intcon	equ	0xFF2
 44520                           intcon2	equ	0xFF1
 44521                           intcon3	equ	0xFF0
 44522                           indf0	equ	0xFEF
 44523                           postinc0	equ	0xFEE
 44524                           plusw0	equ	0xFEB
 44525                           fsr0h	equ	0xFEA
 44526                           fsr0l	equ	0xFE9
 44527                           wreg	equ	0xFE8
 44528                           postinc1	equ	0xFE6
 44529                           postdec1	equ	0xFE5
 44530                           plusw1	equ	0xFE3
 44531                           fsr1h	equ	0xFE2
 44532                           fsr1l	equ	0xFE1
 44533                           indf2	equ	0xFDF
 44534                           postinc2	equ	0xFDE
 44535                           postdec2	equ	0xFDD
 44536                           plusw2	equ	0xFDB
 44537                           fsr2h	equ	0xFDA
 44538                           fsr2l	equ	0xFD9
 44539                           status	equ	0xFD8
 44540                           tosu	equ	0xFFF
 44541                           tosh	equ	0xFFE
 44542                           tosl	equ	0xFFD
 44543                           pclatu	equ	0xFFB
 44544                           pclath	equ	0xFFA
 44545                           tblptru	equ	0xFF8
 44546                           tblptrh	equ	0xFF7
 44547                           tblptrl	equ	0xFF6
 44548                           tablat	equ	0xFF5
 44549                           prodh	equ	0xFF4
 44550                           prodl	equ	0xFF3
 44551                           intcon	equ	0xFF2
 44552                           intcon2	equ	0xFF1
 44553                           intcon3	equ	0xFF0
 44554                           indf0	equ	0xFEF
 44555                           postinc0	equ	0xFEE
 44556                           plusw0	equ	0xFEB
 44557                           fsr0h	equ	0xFEA
 44558                           fsr0l	equ	0xFE9
 44559                           wreg	equ	0xFE8
 44560                           postinc1	equ	0xFE6
 44561                           postdec1	equ	0xFE5
 44562                           plusw1	equ	0xFE3
 44563                           fsr1h	equ	0xFE2
 44564                           fsr1l	equ	0xFE1
 44565                           indf2	equ	0xFDF
 44566                           postinc2	equ	0xFDE
 44567                           postdec2	equ	0xFDD
 44568                           plusw2	equ	0xFDB
 44569                           fsr2h	equ	0xFDA
 44570                           fsr2l	equ	0xFD9
 44571                           status	equ	0xFD8
 44572                           
 44573                           	psect	text233
 44574  000000                     __ptext233:
 44575                           	opt stack 0
 44576                           tosu	equ	0xFFF
 44577                           tosh	equ	0xFFE
 44578                           tosl	equ	0xFFD
 44579                           pclatu	equ	0xFFB
 44580                           pclath	equ	0xFFA
 44581                           tblptru	equ	0xFF8
 44582                           tblptrh	equ	0xFF7
 44583                           tblptrl	equ	0xFF6
 44584                           tablat	equ	0xFF5
 44585                           prodh	equ	0xFF4
 44586                           prodl	equ	0xFF3
 44587                           intcon	equ	0xFF2
 44588                           intcon2	equ	0xFF1
 44589                           intcon3	equ	0xFF0
 44590                           indf0	equ	0xFEF
 44591                           postinc0	equ	0xFEE
 44592                           plusw0	equ	0xFEB
 44593                           fsr0h	equ	0xFEA
 44594                           fsr0l	equ	0xFE9
 44595                           wreg	equ	0xFE8
 44596                           postinc1	equ	0xFE6
 44597                           postdec1	equ	0xFE5
 44598                           plusw1	equ	0xFE3
 44599                           fsr1h	equ	0xFE2
 44600                           fsr1l	equ	0xFE1
 44601                           indf2	equ	0xFDF
 44602                           postinc2	equ	0xFDE
 44603                           postdec2	equ	0xFDD
 44604                           plusw2	equ	0xFDB
 44605                           fsr2h	equ	0xFDA
 44606                           fsr2l	equ	0xFD9
 44607                           status	equ	0xFD8
 44608                           
 44609                           	psect	rparam
 44610  0000                     tosu	equ	0xFFF
 44611                           tosh	equ	0xFFE
 44612                           tosl	equ	0xFFD
 44613                           pclatu	equ	0xFFB
 44614                           pclath	equ	0xFFA
 44615                           tblptru	equ	0xFF8
 44616                           tblptrh	equ	0xFF7
 44617                           tblptrl	equ	0xFF6
 44618                           tablat	equ	0xFF5
 44619                           prodh	equ	0xFF4
 44620                           prodl	equ	0xFF3
 44621                           intcon	equ	0xFF2
 44622                           intcon2	equ	0xFF1
 44623                           intcon3	equ	0xFF0
 44624                           indf0	equ	0xFEF
 44625                           postinc0	equ	0xFEE
 44626                           plusw0	equ	0xFEB
 44627                           fsr0h	equ	0xFEA
 44628                           fsr0l	equ	0xFE9
 44629                           wreg	equ	0xFE8
 44630                           postinc1	equ	0xFE6
 44631                           postdec1	equ	0xFE5
 44632                           plusw1	equ	0xFE3
 44633                           fsr1h	equ	0xFE2
 44634                           fsr1l	equ	0xFE1
 44635                           indf2	equ	0xFDF
 44636                           postinc2	equ	0xFDE
 44637                           postdec2	equ	0xFDD
 44638                           plusw2	equ	0xFDB
 44639                           fsr2h	equ	0xFDA
 44640                           fsr2l	equ	0xFD9
 44641                           status	equ	0xFD8
 44642                           
 44643                           	psect	temp
 44644  000048                     btemp:
 44645                           	opt stack 0
 44646  000048                     	ds	12
 44647  0000                     wtemp0	set	btemp
 44648  0000                     wtemp1	set	btemp+2
 44649  0000                     wtemp2	set	btemp+4
 44650  0000                     wtemp3	set	btemp+6
 44651  0000                     wtemp4	set	btemp+8
 44652  0000                     wtemp5	set	btemp+10
 44653  0000                     wtemp6	set	btemp+1
 44654  0000                     ttemp0	set	btemp
 44655  0000                     ttemp1	set	btemp+3
 44656  0000                     ttemp2	set	btemp+6
 44657  0000                     ttemp3	set	btemp+9
 44658  0000                     ltemp0	set	btemp
 44659  0000                     ltemp1	set	btemp+4
 44660  0000                     ltemp2	set	btemp+8
 44661                           tosu	equ	0xFFF
 44662                           tosh	equ	0xFFE
 44663                           tosl	equ	0xFFD
 44664                           pclatu	equ	0xFFB
 44665                           pclath	equ	0xFFA
 44666                           tblptru	equ	0xFF8
 44667                           tblptrh	equ	0xFF7
 44668                           tblptrl	equ	0xFF6
 44669                           tablat	equ	0xFF5
 44670                           prodh	equ	0xFF4
 44671                           prodl	equ	0xFF3
 44672                           intcon	equ	0xFF2
 44673                           intcon2	equ	0xFF1
 44674                           intcon3	equ	0xFF0
 44675                           indf0	equ	0xFEF
 44676                           postinc0	equ	0xFEE
 44677                           plusw0	equ	0xFEB
 44678                           fsr0h	equ	0xFEA
 44679                           fsr0l	equ	0xFE9
 44680                           wreg	equ	0xFE8
 44681                           postinc1	equ	0xFE6
 44682                           postdec1	equ	0xFE5
 44683                           plusw1	equ	0xFE3
 44684                           fsr1h	equ	0xFE2
 44685                           fsr1l	equ	0xFE1
 44686                           indf2	equ	0xFDF
 44687                           postinc2	equ	0xFDE
 44688                           postdec2	equ	0xFDD
 44689                           plusw2	equ	0xFDB
 44690                           fsr2h	equ	0xFDA
 44691                           fsr2l	equ	0xFD9
 44692                           status	equ	0xFD8


Data Sizes:
    Strings     37
    Constant    408
    Data        92
    BSS         1299
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      75
    BANK0           160    153     154
    BANK1           256    105     254
    BANK2           256      0     253
    BANK3           256      0     224
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1236$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), adcResult.cfList(COMRAM[16]), data(BANK1[8]), 
		 -> adcResult(BANK1[4]), appSKey(BANK3[16]), nwkSKey(BANK3[16]), applicationKey(BANK3[16]), 
		 -> deviceEUI(BANK1[8]), applicationEUI(BANK2[8]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), 
		 -> PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), 
		 -> loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), adcResult.cfList(COMRAM[16]), data(BANK1[8]), 
		 -> adcResult(BANK1[4]), appSKey(BANK3[16]), nwkSKey(BANK3[16]), applicationKey(BANK3[16]), 
		 -> deviceEUI(BANK1[8]), applicationEUI(BANK2[8]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), 
		 -> PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), 
		 -> loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[13]), STR_2(CODE[14]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), Absolute function(), DIO2_ISR_Lora(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), DIO1_ISR_Lora(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), DIO0_ISR_Lora(), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> data(BANK1[8]), adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 
		 -> NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> adcResult(BANK1[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> adcResult(BANK1[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> data(BANK1[8]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationKey@applicationKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> applicationKey(BANK3[16]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK3[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK3[16]), 

    LORAWAN_SetApplicationEui@applicationEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> applicationEUI(BANK2[8]), 

    LORAWAN_SetDeviceEui@deviceEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> deviceEUI(BANK1[8]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 8
		 -> data(BANK1[8]), NULL(NULL[0]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK0[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1236$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1236$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S567$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S567$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S345$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> adcResult(BANK1[4]), LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _printf->_putch
    _putch->_EUSART1_Write
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lltoft
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetDeviceEui->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_SetApplicationKey->_memcpy
    _LORAWAN_SetApplicationEui->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 6941908
                  _ADC_GetConversion
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
                       _LORAWAN_Send
          _LORAWAN_SetApplicationEui
          _LORAWAN_SetApplicationKey
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
               _LORAWAN_SetDeviceEui
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
            _TMR5_HasOverflowOccured
                    _TMR5_StartTimer
                            ___ftmul
                            ___fttol
                           ___lltoft
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     357
                                              2 BANK0      5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lltoft                                             9     5      4    2975
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     875
                                             32 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4185
                                             17 BANK0     15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2817
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR5_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1933
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     333
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceEui                                 2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationKey                            2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationEui                            2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 6093343
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2366018
                                            122 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  156134
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  693430
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  508445
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  158447
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9521
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9964
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  327333
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  166277
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           3     3      0    9960
                                              5 BANK0      3     3      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36563
                                             26 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  554668
                                            107 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  518077
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26569
                                             25 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 3106191
                                            149 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              4 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  217228
                                            131 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1094645
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              7     6      1     549
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1576601
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  492335
                                             98 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  326528
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1067995
                                            122 BANK0     25    25      0
                                            102 BANK1      3     0      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9382
                                             58 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9419
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                         9     7      2   25173
                                             70 BANK0      9     7      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9673
                                             58 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  168115
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   27672
                                             80 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2    1745
                                              7 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  1     1      0    1542
                                              6 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1480
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               9     7      2    7473
                                             70 BANK0      9     7      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                   10     8      2   13487
                                             70 BANK0     10     8      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     684
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              2 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     405
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     405
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     628
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2489
                                              4 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     962
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                      10     8      2    3388
                                             15 BANK0     10     8      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  5     3      2     302
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2075
                                             12 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      8     3      5    1805
                                              4 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Send                                         7     3      4  327333
                                            115 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                              8 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (2) _AssemblePacket                                      12     7      5  158326
                                            103 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _IncludeMacCommandsResponse                          15    10      5    2532
                                              0 BANK0     15    10      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (4) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FindSmallestDataRate                                 4     4      0     455
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _EncryptFRMPayload                                   22     8     14   46483
                                             49 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _AssembleEncryptionBlock                              9     2      7   20074
                                             11 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CountfOptsLength                                     8     8      0     198
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          12     8      4   14693
                                             11 BANK0     12     8      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   39374
                                             49 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   18513
                                             11 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  207596
                                            131 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      40    38      2  185180
                                             91 BANK0     40    38      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                             _RxData *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             49 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  163264
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _RxData                                               4     0      4    4851
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  126952
                                             81 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   15546
                                             19 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  263894
                                            123 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SelectChannelForTransmission                         3     3      0   23204
                                             91 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (3) _SearchAvailableChannel                              12     9      3    7600
                                             79 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (3) _ConfigureRadioTx                                     6     2      4   15406
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetOutputPower                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetIQInverted                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetCRC                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadio                                       5     1      4   15110
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetModulation                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFSKSyncWord                                 3     1      2   14167
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetChannelFrequency                            4     0      4     321
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetBandwidth                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Transmit                                      17    14      3  128079
                                             81 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteConfiguration                            11     9      2   91386
                                             70 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _RADIO_WritePower                                     3     3      0   10383
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15890
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKBitRate                                8     4      4   15887
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0  108927
                                            112 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _Random                                               2     0      2    6391
                                             77 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 2     0      2    5712
                                             70 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     440
                                             72 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   84335
                                            103 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _AESCmac                                            116   109      7   69611
                                             89 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _GenerateSubkey                                      40    34      6   27112
                                             49 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (5) _FillSubKey                                           8     3      5    1539
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _AESEncodeLoRa                                       20    16      4   20630
                                             29 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _AESEncode                                           24    20      4    4744
                                              6 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (6) _EncodeShiftRow                                       3     1      2     984
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EncKeySchedule                                       6     4      2    1164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  176370
                                             82 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0  100781
                                             81 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46235
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteMode                                      7     5      2   15915
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterRead                                   2     2      0     130
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (4) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFrequency                                12     8      4   16640
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     440
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterWrite                                  2     1      1    9796
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALSPISend                                           1     1      0      62
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _SystemBlockingWaitMs                                 5     1      4     658
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   15427
                                             70 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    5712
                                             58 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    5857
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _SwTimerStop                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SwTimerStart                                         9     9      0    1591
                                             49 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (4) _TMR_OverrideRemaining                               10     6      4     972
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (5) _TMR_SwapTimer                                        2     0      2     707
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     401
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _SwTimersInterrupt                                   17    13      4     458
                                             32 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (5) _TMR_GetDeltaTime                                    24    20      4     102
                                              8 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_ReadTimer                                       8     6      2     102
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetTimeout                                    9     5      4    1934
                                             13 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    3569
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6   13936
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     713
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        2     2      0     573
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_Send
     _AssemblePacket
       _AESCmac
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _GenerateSubkey
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _FillSubKey
           _memset
         _memcpy
         _memset
       _AssembleEncryptionBlock
         _memcpy
         _memset
       _CountfOptsLength
       _EncryptFRMPayload
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _AssembleEncryptionBlock
           _memcpy
           _memset
         ___awdiv
       _FindSmallestDataRate
       _IncludeMacCommandsResponse
         _RADIO_GetPacketSnr
       _memcpy
       _memset
     _LORAWAN_GetMaxPayloadSize
       _CountfOptsLength
     _RADIO_ReceiveStop
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
   _LORAWAN_SetApplicationEui
     _memcpy
   _LORAWAN_SetApplicationKey
     _memcpy
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetDeviceEui
     _memcpy
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR5_Initialize
   _TMR5_HasOverflowOccured
   _TMR5_StartTimer
   ___ftmul
     ___ftpack
     ___lltoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___lltoft (ARG)
       ___ftpack
   ___lltoft
     ___ftpack
   _printf
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E0      11       87.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      9A       5       96.3%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4A0      12        0.0%
DATA                 0      0     6C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Sep 24 15:51:33 2019

                                        ??_LORAWAN_TxDone 00BD  
                              __end_of_DIO3_ISR_Lora_Init 930A  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 0040  
                                          HALSPISend@data 0061  
                         __end_of_ValidateChannelMaskCntl 8E8A  
                                                      l41 225A  
                                                      l50 2378  
                                                      l43 2308  
                                                      l52 239A  
                                                      l44 22CE  
                                                      l61 251E  
                                                      l53 23AE  
                                                      l45 2286  
                                                      l70 57BA  
                                                      l54 23BE  
                                                      l80 7DC4  
                                                      l72 580E  
                                                      l56 24D6  
                                                      l48 2346  
                                                      l57 242A  
                                                      l74 5836  
                                                      l58 2438  
                                                      l68 5792  
                                                      l79 7E0C  
                                            ___awdiv@sign 0065  
                         __size_of_UpdateJoinSuccessState 013E  
                                     ___wmul@multiplicand 0062  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 8210  
                                   __end_of_AESEncodeLoRa 88FE  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0060  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00C2  
                                                     l303 2916  
                                                     l240 74D6  
                                                     l216 4998  
                                                     l144 9026  
                                                     l400 60FE  
                                                     l320 2ADE  
                                                     l312 2A86  
                                                     l217 4A2A  
                                                     l226 845E  
                                                     l234 8A7A  
                                                     l402 6136  
                                                     l330 3624  
                                                     l322 2AE8  
                                                     l314 2A90  
                                                     l306 2950  
                                                     l235 8A5C  
                                                     l323 2C10  
                                                     l244 74D8  
                                                     l260 72F6  
                                                     l332 362E  
                                                     l316 2AB2  
                                                     l309 29B6  
                                                     l501 3CCC  
                                                     l318 2ABC  
                                                     l502 3CE6  
                                                     l503 3D52  
                                                     l432 65A6  
                                                     l504 3D6A  
                                                     l520 3EEC  
                                                     l441 47DE  
                                                     l433 65B4  
                                                     l513 3ECE  
                                                     l505 3D7C  
                                                     l442 47F4  
                                                     l426 6596  
                                                     l506 3DA8  
                                                     l530 402E  
                                                     l522 3F04  
                                                     l610 73F4  
                                                     l602 8800  
                                                     l274 67E4  
                                                     l283 5F36  
                                                     l435 65C2  
                                                     l427 6546  
                                                     l515 3E58  
                                                     l507 3D8E  
                                                     l531 40FE  
                                                     l523 3F1A  
                                                     l611 73FA  
                                                     l275 6714  
                                                     l284 5E74  
                                                     l444 4828  
                                                     l436 65EE  
                                                     l428 6554  
                                                     l460 15BE  
                                                     l524 3F26  
                                                     l620 743E  
                                                     l437 65F6  
                                                     l429 6586  
                                                     l461 15E6  
                                                     l533 4088  
                                                     l525 3F54  
                                                     l613 7446  
                                                     l286 5ED0  
                                                     l462 161E  
                                                     l526 3F80  
                                                     l614 7414  
                                                     l278 67E0  
                                                     l391 6086  
                                                     l455 18EC  
                                                     l471 1744  
                                                     l463 1676  
                                                     l527 3FA2  
                                                     l543 68AA  
                                                     l615 7426  
                                                     l607 7402  
                                                     l631 844C  
                                                     l288 5F34  
                                                     l480 18C6  
                                                     l464 16C4  
                                                     l456 1664  
                                                     l560 6F2E  
                                                     l608 73EE  
                                                     l640 81EA  
                                                     l393 60CE  
                                                     l481 18DE  
                                                     l457 1632  
                                                     l529 3FBC  
                                                     l561 6F44  
                                                     l617 7436  
                                                     l625 843A  
                                                     l394 60B0  
                                                     l474 1764  
                                                     l458 1596  
                                                     l554 6EEE  
                                                     l546 6878  
                                                     l626 8426  
                                                     l395 60BC  
                                                     l387 606C  
                                                     l483 1962  
                                                     l459 164A  
                                                     l555 6ED0  
                                                     l547 685A  
                                                     l571 5C94  
                                                     l484 1994  
                                                     l476 1844  
                                                     l804 8A3A  
                                                     l580 5A3C  
                                                     l628 842C  
                                                     l644 81F0  
                                                     l485 1974  
                                                     l469 16C8  
                                                     l557 6F2C  
                                                     l549 68AE  
                                                     l629 8432  
                                             ?_RADIO_Init 0079  
                                                     l398 6108  
                                                     l478 1890  
                                                     l558 6F26  
                                                     l399 60FA  
                                                     l487 19B8  
                                                     l479 189C  
                                                     l639 81F8  
                                                     l488 19C4  
                                                     l673 7234  
                                                     l682 8512  
                                                     l499 3CB4  
                                                     l596 897E  
                                                     l685 8524  
                                                     l679 88C2  
                                                     l970 7E32  
                                                     l975 461C  
                                         ??_UpdateTxPower 0060  
                                                     l969 7E2E  
                                                     l999 80D0  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 7B4C  
                   __size_of_SelectChannelForTransmission 006C  
                            _SelectChannelForTransmission 7AE0  
                                  _ExecuteRxParamSetupReq 410A  
                                      _RADIO_Transmit$772 00B8  
                                      _RADIO_Transmit$774 00BC  
                                      _DIO2_ISR_Lora_Init 9136  
                                      __size_of_AESEncode 034A  
                                         _timer1ReloadVal 01E6  
                                         ?_EncKeySchedule 0060  
                                   _RADIO_SetLoRaSyncWord 928E  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                              _TXSTA1bits 000FAC  
                                         __end_of_AESCmac 259A  
                                 __end_of_SwTimersExecute 67F0  
                                  SystemBlockingWaitMs@ms 0060  
                                 LORAWAN_Join@bufferIndex 00DB  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0060  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 00B2  
                            __end_of_FindSmallestDataRate 69B2  
                     __end_of_RADIO_SetFrequencyHopPeriod 9284  
                             _RADIO_SetFrequencyHopPeriod 927A  
                                              _CheckFlags 7FF4  
                                         _CCP5_Initialize 9166  
                                  ?_TMR_OverrideRemaining 006A  
                                           _INT1_CallBack 8F6A  
                                ?_AssembleEncryptionBlock 006B  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0064  
                                      __size_of_IOCB4_ISR 0020  
                                                    l1001 8100  
                                                    l1100 82F8  
                                                    l1101 8304  
                                                    l1110 345E  
                                                    l1031 0FF8  
                                                    l1032 11D4  
                                                    l1112 3502  
                                                    l1120 3B2E  
                                                    l2000 3188  
                                                    l1201 75B2  
                                                    l1041 12E8  
                                                    l1105 3478  
                                                    l2001 3212  
                                                    l1042 1308  
                                                    l1034 113E  
                                                    l1106 32F4  
                                                    l1130 3C94  
                                                    l1051 14AA  
                                                    l1043 1386  
                                                    l1107 3346  
                                                    l1211 5702  
                                                    l1123 3B6C  
                                                    l1028 1476  
                                                    l1044 145E  
                                                    l2020 1FA6  
                                                    l1108 3384  
                                                    l1212 5628  
                                                    l1124 3C98  
                                                    l2100 877E  
                                                    l1037 11E2  
                                                    l1029 0EDA  
                                                    l1221 5212  
                                                    l1213 5696  
                                                    l1125 3C30  
                                                    l1206 763C  
                                                    l1142 5B00  
                                                    l1046 13EA  
                                                    l2030 205A  
                                                    l2014 1EBC  
                                                    l1222 52F2  
                                                    l1214 56FE  
                                                    l1126 3C22  
                                                    l1134 41D8  
                                                    l1143 5BCC  
                                                    l2031 20E4  
                                                    l2015 1EC6  
                                                    l1223 5218  
                                                    l1135 4218  
                                                    l1071 2892  
                                                    l1063 25E0  
                                                    l1152 5BE8  
                                                    l1144 5B06  
                                                    l2120 7846  
                                                    l2024 1FAC  
                                                    l1224 5286  
                                                    l1232 905C  
                                                    l1136 4258  
                                                    l1160 433C  
                                                    l1072 2718  
                                                    l2113 800A  
                                                    l2033 214C  
                                                    l2025 1FBA  
                                                    l2017 1FAA  
                                                    l1225 52EE  
                                                    l1241 7D4E  
                                                    l1129 3C86  
                                                    l1137 4314  
                                                    l1057 28CA  
                                                    l1073 26E0  
                                                    l1154 5C02  
                                                    l1146 5BC6  
                                                    l2114 8020  
                                                    l2130 6DCE  
                                                    l2050 1A8C  
                                                    l2026 1FDC  
                                                    l2018 1F62  
                                                    l1162 44F2  
                                                    l1066 2698  
                                                    l1058 25D6  
                                                    l1306 2F44  
                                                    l1155 5C06  
                                                    l2115 8036  
                                                    l2131 6D20  
                                                    l2051 1AFA  
                                                    l1067 2660  
                                                    l1059 25C4  
                                                    l1148 5BC8  
                                                    l2124 7860  
                                                    l2044 1E26  
                                                    l2060 1CE2  
                                                    l2052 1B40  
                                                    l1092 8C78  
                                                    l1236 7D20  
                                                    l1164 4500  
                                                    l2037 4A92  
                                                    l2045 19F6  
                                                    l2029 1FEE  
                                                    l1253 8DDE  
                                                    l1181 4E60  
                                                    l1077 2818  
                                                    l3102 7C3E  
                                                    l1502 71BA  
                                                    l2126 7876  
                                                    l2134 6DCC  
                                                    l2150 4CAC  
                                                    l2054 1E24  
                                                    l1182 4D68  
                                                    l1078 2720  
                                                    l3103 7C32  
                                                    l2039 4AE8  
                                                    l2127 788A  
                                                    l2151 4BF8  
                                                    l2055 1B88  
                                                    l1247 856A  
                                                    l1183 4E5C  
                                                    l1079 2814  
                                                    l1168 713C  
                                                    l2152 4C3E  
                                                    l2064 1D02  
                                                    l2056 1BF6  
                                                    l1272 7FF0  
                                                    l1088 9074  
                                                    l1176 8FB8  
                                                    l2081 6990  
                                                    l2049 1DE8  
                                                    l2065 1D70  
                                                    l2057 1C3C  
                                                    l1281 7A9C  
                                                    l1273 7FB0  
                                                    l3041 63EC  
                                                    l3113 7F4C  
                                                    l3106 7C66  
                                                    l2058 1C82  
                                                    l1530 6D06  
                                                    l1522 6C62  
                                                    l1290 7AC4  
                                                    l1282 7A92  
                                                    l3042 63FC  
                                                    l3114 7F40  
                                                    l3107 7C74  
                                                    l2139 64BA  
                                                    l2067 1DB8  
                                                    l2059 1C86  
                                                    l1283 7A84  
                                                    l1275 7FDA  
                                                    l1259 8E86  
                                                    l3035 636A  
                                                    l1188 7B46  
                                                    l2156 4D46  
                                                    l2076 68EE  
                                                    l2068 1DC2  
                                                    l1524 6C8A  
                                                    l2157 4D00  
                                                    l2085 69AC  
                                                    l2077 696E  
                                                    l1525 6C9A  
                                                    l3037 6392  
                                                    l2190 910E  
                                                    l2078 68F4  
                                                    l3038 63C4  
                                                    l2079 696C  
                                                    l1287 7AD6  
                                                    l3039 63D4  
                                                    l3160 8676  
                                                    l1288 7AA8  
                                                    l3064 6312  
                                                    l3056 6276  
                                                    l1289 7AB8  
                                                    l2089 78F6  
                                                    l1801 6C2E  
                                                    l3065 6306  
                                                    l3170 7EEA  
                                                    l1810 6C3E  
                                                    l3058 62EE  
                                                    l3155 8654  
                                                    l3067 632E  
                                                    l3059 62DE  
                                                    l3092 77B8  
                                                    l3156 864C  
                                                    l2437 8EDE  
                                                    l3093 77AC  
                                                    l1901 0CC4  
                                                    l1902 025C  
                   RADIO_WriteConfiguration@symbolTimeout 00A6  
                                                    l3175 8AA6  
                                                    l3159 866C  
                                                    l3176 8A94  
                                                    l3096 77EC  
                                                    l1920 03EE  
                                                    l1904 00BC  
                                                    l2536 3824  
                                                    l3169 7F24  
                                                    l3097 77FA  
                                                    l1921 04AA  
                                                    l1913 01B2  
                                                    l1905 010A  
                                                    l1825 503C  
                                                    l2537 3868  
                                                    l1922 0492  
                                                    l1906 010E  
                                                    l2538 386C  
                                                    l1915 0CBE  
                                                    l1931 0592  
                                                    l2539 38E8  
                                                    l1780 54FC  
                                                    l1908 01A0  
                                                    l1941 08E6  
                                                    l1933 05A4  
                                                    l2910 76A2  
                                                    l1950 096E  
                                                    l1942 08CE  
                                                    l1918 06AE  
                                                    l1934 0652  
                                                    l1926 04DA  
                                                    l1927 051E  
                                                    l1919 02DE  
                                                    l1847 5E48  
                                                    l2576 891A  
                                                    l1880 6236  
                                                    l2912 76C0  
                                                    l1960 0C18  
                                                    l1952 0980  
                                                    l2753 8174  
                                                    l1785 5562  
                                                    l1777 550E  
                                                    l2913 76B8  
                                                    l1961 0C12  
                                                    l1953 09D6  
                                                    l1937 06F4  
                                                    l1929 0576  
                                                    l2754 8188  
                                                    l1778 5500  
                                                    l1954 09E4  
                                                    l2738 89DC  
                                                    l1779 54CC  
                                                    l1955 0B48  
                                                    l1947 0926  
                                                    l1939 0810  
                                                    l2739 89D6  
                                                    l2916 76E0  
                                                    l1980 0D02  
                                                    l1956 0AB2  
                                                    l1948 0942  
                                                    l2772 7CDA  
                                                    l1796 6E08  
                                                    l1877 623A  
                                                    l2917 76EA  
                                                    l2909 7692  
                                                    l2773 7CE2  
                                                    l2765 7C9A  
                                                    l1878 6160  
                                                    l2918 76F8  
                                                    l1990 2F5E  
                                                    l1974 0CA2  
                                                    l1966 0C0C  
                                                    l1958 0B42  
                                                    l2766 7CA4  
                                                    l1798 6E8C  
                                                    l1879 61CE  
                                                    l1991 31B6  
                                                    l1975 0CA6  
                                                    l1984 7EAC  
                                                    l1992 30EE  
                                                    l2768 7CBA  
                                                    l2960 6F92  
                                                    l1985 7ED2  
                                                    l1993 31F2  
                                                    l2769 7CB4  
                                                    l1994 3104  
                                                    l2962 6FD0  
                                                    l1995 311A  
                                                    l2963 6FC6  
                                                    l1996 3130  
                                                    l2956 6F74  
                                                    l1997 3146  
                                                    l2957 6F6A  
                                                    l1998 315C  
                                                    l1999 3172  
                                                    l2959 6FA8  
                                                    STR_1 FFF4  
                                                    STR_2 FFD9  
                                                    STR_3 FFE7  
                                        _RADIO_WritePower 652A  
                            ??_LORAWAN_SetChannelIdStatus 0065  
                                 _PrepareJoinRequestFrame 4A3C  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 0020  
                                                    _TMR1 000FCE  
                                                    _TMR5 000F4F  
                                       ??_UpdateDutyCycle 0062  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0062  
                                           _INT2_CallBack 8F4A  
                       __end_of_LORAWAN_SetApplicationEui 8BCE  
                       __end_of_LORAWAN_SetApplicationKey 8BA0  
                                           _EUSART1_Write 9194  
                                ??_InitDefault433Channels 006B  
                                ExecuteNewChannel@drRange 00AA  
                                                    _data 0167  
                                      _PrepareSessionKeys 6FFA  
                                                    _loRa 0200  
                                                    _main 37B0  
                                            ___ftpack@arg 0060  
                                                    _rand 8052  
                                            ___ftpack@exp 0063  
                          __end_of_UpdateMinMaxChDataRate 6248  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 0238  
                                                    btemp 0048  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00CC  
                                           ComputeMic@key 00C7  
                               __end_of_LORAWAN_RxTimeout 28FE  
                               __size_of_ConfigureRadioRx 002A  
                               __size_of_ConfigureRadioTx 0052  
                       __size_of_INT2_SetInterruptHandler 000A  
                           __end_of_StopAllSoftwareTimers 83B2  
                               ?_INT2_SetInterruptHandler 0060  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 007E  
                                         _timer5ReloadVal 01DC  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 6DDE  
                                   ExecuteLinkAdr@txPower 0075  
                                     __size_of_HALSPISend 000E  
                              ??_TMR1_SetInterruptHandler 0062  
                              EnableChannels1@channelMask 0064  
                                            ___ftmul@cntr 007E  
                                        ??_AssemblePacket 00CC  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006B  
                                  __size_of_TMR_SwapTimer 004A  
                              __end_of_RADIO_GetPacketSnr 92CE  
                                            ___param_bank 000000  
                                            ___ftmul@sign 007F  
                                              _GetRx1Freq 90E0  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0062  
                         __end_of_CreateAllSoftwareTimers 8404  
                                            ___fttol@exp1 008E  
                  SearchAvailableChannel@transmissionType 00AF  
                         __size_of_HALResetPinOutputValue 001A  
                                            ___fttol@lval 008A  
                                   MacExecuteCommands@ptr 00B6  
                                   _RADIO_WriteFSKBitRate 7BB6  
                                __size_of_SystemTimerInit 0008  
                                        __end_of_INT1_ISR 92C2  
                                        __end_of_INT2_ISR 92BA  
                          __size_of_OSCILLATOR_Initialize 000E  
                                  ExecuteLinkAdr@dataRate 0078  
                           __end_of_OSCILLATOR_Initialize 91BE  
                      __size_of_LORAWAN_LinkCheckCallback 016C  
                                         __end_of___abdiv 7CEC  
                                                   l12097 9198  
                                                   l13411 8478  
                                                   l13451 290E  
                                                   l14307 233E  
                                                   l14219 64DE  
                                                   l13605 8A94  
                                                   l13519 2C08  
                                                   l13463 2948  
                                                   l14343 2430  
                                                   l14327 23B6  
                                                   l15223 1F5E  
                                                   l13393 7EEA  
                                                   l15225 1F62  
                                                   l14363 2516  
                                                   l15237 1FA4  
                                                   l13479 29AE  
                                                   l17023 4A8A  
                                                   l16217 11DA  
                                                   l15521 58EA  
                                                   l16075 0C9C  
                                                   l13917 57B2  
                                                   l17037 4AE0  
                                                   l15381 6C36  
                                                   l15373 6C18  
                                                   l13935 582E  
                                                   l15527 5986  
                                                   l14729 4C36  
                                                   l15473 6C8A  
                                                   l14569 7FA8  
                                                   l15393 4334  
                                                   l15377 6C26  
                                                   l14771 6DDA  
                                                   l16543 75AA  
                                                   l15815 04DA  
                                                   l15657 319E  
                                                   l16617 2D3C  
                                                   l16609 2C80  
                                                   l16619 2D56  
                                                   l16627 2DF2  
                                                   l15837 0576  
                                                   l16725 5DD2  
                                                   l16559 7634  
                                                   l16655 6E0A  
                                                   l16735 5E02  
                                                   l16639 2EA0  
                                                   l16673 4EF0  
                                                   l16729 5DD8  
                                                   l16745 5E44  
                                                   l15971 096E  
                                                   l16755 79C6  
                                                   l15949 0926  
                                                   l16695 4FA0  
                                                   l16679 4F0E  
                                                   l16689 4F42  
                                                   l16883 722C  
                                                   ?_main 0001  
                                                   ?_rand 00A6  
                                         __end_of___awdiv 7702  
                                              _FillSubKey 7DB4  
                       __end_of_IOCB4_SetInterruptHandler 91F8  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 780C  
                                         RADIO_Transmit@i 00C1  
                                                   u20005 5550  
                                         __end_of___ftmul 6436  
                                                   u20015 5574  
                                                   u20105 2E90  
                                                   u20115 2EBA  
                                                   u20220 4F58  
                                         ___awdiv@divisor 0062  
                                                   u20320 5DCC  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 7C86  
                                                   u14001 625A  
                                                   u20090 2E4A  
                                                   u20235 4F90  
                                                   u20180 4F1C  
                                                   u14020 6294  
                                                   u20245 4FB2  
                                         __end_of___fttol 6340  
                                                   u15000 77BC  
                                                   u14025 628C  
                                                   u20428 79EA  
                                                   u20348 5DFC  
                                                   u14060 6318  
                                       ??_EnableChannels1 0069  
                                                   u20429 79FE  
                                                   u15030 7C42  
                                                   u20630 4AD6  
                                                   u13600 6FDA  
                                                   _LATC2 007C5A  
                                                   u20650 4B2C  
                                    RxJoinResponse@status 0001  
                                                   u20555 8942  
                                                   _LATD3 007C63  
                                                   u15060 7E08  
                                                   u16020 76C4  
                                                   u20388 5E30  
                                                   u20485 73D0  
                                                   u20590 7266  
                                                   u15070 7E0A  
                                                   u15400 7530  
                       __end_of_AckRetransmissionCallback 5E4E  
                                                   u22248 67CC  
                                                   u13560 6F5C  
                  SearchAvailableChannel@randomNumberCopy 00B6  
                                                   u22249 67DE  
                                                   u15090 733C  
                                                   u16210 2564  
                                                   u16140 23B2  
                                                   u15420 7556  
                                                   u16300 404E  
                                                   u15270 612A  
                                                   u16070 226C  
                                                   u17030 1CCA  
                                                   u16055 223C  
                                                   u14800 91E0  
                                                   u16160 2404  
                                                   u16080 226E  
                                                   _T5CON 000F4E  
                                                   u22537 8A64  
                                                   u15530 8658  
                                                   u16410 8564  
                                                   u16315 4076  
                                                   u16180 249E  
                                                   u15700 16BE  
                                                   u15380 7508  
                                                   u17060 1E32  
                                                   u16325 409A  
                                                   u13941 6352  
                                                   u17150 3E1E  
                                                   u18110 7842  
                                                   u15551 5738  
                                                   u17208 7976  
                                                   u16600 7FEC  
                                                   u16520 8C6C  
                                                   u18040 58A2  
                                                   u18025 7A20  
                                                   u13961 637A  
                                                   u14930 2BF6  
                                                   u14850 2942  
                                                   u15730 1716  
                                                   u15650 165E  
                                                   u17234 82E8  
                                                   u16530 8C74  
                                                   u13890 91D4  
                                                   u17235 82E2  
                                                   u14780 7F0C  
                                                   u15580 57E6  
                                                   u16380 7D4A  
                                                   u17165 3E46  
                                                   u16285 3FDC  
                                                   u14950 2C3C  
                                                   u14870 2994  
                                                   u16710 5BEE  
                                                   u15910 8DDA  
                                          __CFG_DEBUG$OFF 000000  
                                                   u15655 1654  
                                                   u17175 3E6A  
                                                   u18055 58DA  
                                                   u15680 16AE  
                                                   u18208 78DE  
                                                   u18209 78F2  
                                                   u18065 58FC  
                                                   u17610 1FD0  
                                                   u18170 78AA  
                                                   u19018 0CEE  
                                                   u18410 0278  
                                                   u14787 7F02  
                                                   u15755 177E  
                                                   u19115 260C  
                                                   u16820 69A4  
                                                   u17380 3AFE  
                                                   u19028 0D18  
                                                   u16910 6D8E  
                                                   u18350 017E  
                                                   u18431 02B6  
                                                   u19400 1174  
                                                   u16920 6DDA  
                                                   u18600 05E4  
                                                   u18088 5994  
                                                   u18089 59A8  
                                                   u16690 5BDA  
                                                   u18290 323A  
                                                   u19138 2684  
                                                   u19500 13B2  
                                                   u16860 4CAA  
                                                   u16780 697A  
                                                   u18508 046E  
                                                   u18460 03DE  
                                                   u18380 019A  
                                                   u19405 1168  
                                                   u19325 0D9E  
                                                   u18509 0482  
                                                   u16950 1A8A  
                                                   u18630 06D8  
                                                   u17718 6C04  
                                                   u19335 0E22  
                                                   u19255 2834  
                                                   u19345 0F14  
                                                   u18650 07F4  
                                                   u19610 7CC8  
                                                   u19515 13D8  
                                                   u19355 0F98  
                                                   u19380 10F6  
                                                   u17748 8A16  
                                                   u18708 089E  
                                                   u18628 068A  
                                                   u18548 04FA  
                                                   u19188 2704  
                                                   u19525 13FC  
                                                   u18709 08B2  
                                                   u18629 069E  
                                                   u18549 050E  
                                                   u19390 1114  
                                                   u17790 4506  
                                                   u19278 28B6  
                                                   u19480 138A  
                                                   u18578 0552  
                                                   u19298 28EA  
                                                   u19395 110A  
                                                   u18579 0566  
                                                   u19820 59FA  
                                                   u17885 4E84  
                                                   u19558 1496  
                                                   u19830 5A12  
                                                   u18790 0A18  
                                                   u19840 5A7A  
                                                   u18960 0C68  
                                                   u18928 0C44  
                                                   u18929 0C58  
                                                   u19578 14CA  
                                                   u18890 0BD6  
                                                   u18858 0BB0  
                                                   u19690 6832  
                                                   u19770 5C52  
                                                   u19835 5A06  
                                                   u18859 0BC4  
                                                   u19780 5C6A  
                                                   u19845 5A6E  
                                                   u19790 5CD2  
                                         __end_of___lwmod 8680  
                                                   u19785 5C5E  
                                                   u19795 5CC6  
                                                   u19990 5528  
                                                   i2l216 5124  
                                                   i2l217 51A0  
                                                   i2l226 8714  
                                                   i2l283 6034  
                                                   i2l284 5F72  
                                                   i2l286 5FCE  
                                                   i2l288 6032  
                                           ?_RADIO_RxDone 0001  
                                         ___awdiv@counter 0064  
                             __size_of_RADIO_ReceiveStart 0230  
                     __size_of_LORAWAN_SetChannelIdStatus 005A  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TMR5H 000F50  
                                                   _TMR5L 000F4F  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 002E  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 009E  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 930A  
                                            ___lltoft@exp 0070  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0071  
                                        __end_of_TMR1_ISR 90E0  
                               FindSmallestDataRate@found 0061  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00C6  
                             __size_of_RADIO_SetBandwidth 000A  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0046  
                                                   __rcon 0046  
                                 __end_of_PIN_MANAGER_IOC 92A2  
                            ??_IncludeMacCommandsResponse 0065  
                           __end_of_RADIO_WatchdogTimeout 8528  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0018  
                                                   _randx 01EE  
                          LORAWAN_RxDone@frmPayloadLength 00F0  
                           ValidateChannelMaskCntl@result 0060  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                           ___ftpack@sign 0064  
                                                   _srand 9176  
                                        UpdateDataRange@i 0063  
                                LORAWAN_RxDone@joinAccept 00EE  
                                                   _putch 9186  
                                  _UpdateJoinSuccessState 5874  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 9202  
                                          ?_EUSART1_Write 0001  
                                              _ComputeMic 7D52  
                                 __end_of_TMR1_Initialize 8C28  
                                  UpdateCfList@joinAccept 00A6  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                                   ltemp0 0048  
                                 RADIO_WriteFrequency@num 0075  
                                                   ltemp1 004C  
                                                   ltemp2 0050  
                          __size_of_UpdateCurrentDataRate 000A  
                          __size_of_UpdateChannelIdStatus 0166  
                              PrepareSessionKeys@appNonce 006D  
                                  UpdateChannelIdStatus@i 0063  
                           __end_of_UpdateCurrentDataRate 923E  
                            __size_of_RADIO_FSKPacketSent 012E  
                           __end_of_UpdateChannelIdStatus 5318  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                                   ttemp0 0048  
                                                   ttemp1 004B  
                                                   ttemp2 004E  
                                                   ttemp3 0051  
                                UpdateFrequency@channelId 0064  
                                                   status 000FD8  
                                                   wtemp0 0048  
                                                   wtemp1 004A  
                                                   wtemp2 004C  
                                                   wtemp3 004E  
                                                   wtemp4 0050  
                                                   wtemp5 0052  
                                                   wtemp6 0049  
                                      _MacExecuteCommands 2F4E  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 00AD  
                                     __size_of_RADIO_DIO0 0090  
                                     __size_of_RADIO_DIO1 004E  
                                     __size_of_RADIO_DIO2 0056  
                                     __size_of_RADIO_DIO3 0022  
                                     __size_of_RADIO_DIO4 0032  
                                     __size_of_RADIO_DIO5 0028  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                      _EUSART1_DefaultFramingErrorHandler 000000  
                                         _TMR1_WriteTimer 8ECA  
                       TMR_OverrideRemaining@oldReloadVal 0072  
                                     LORAWAN_RxDone@fPort 00DF  
                                __size_of_RADIO_WriteMode 00FE  
                                       __end_of_AESEncode 2C48  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 01CA  
                        __end_of_RADIO_WriteConfiguration 19DE  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                                         _TMR5_Initialize 8F8A  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 0020  
                               RADIO_WriteMode@dioMapping 0068  
                                         __initialization 6A90  
                            __size_ofi2_SwTimersInterrupt 0100  
                                        LORAWAN_Send@port 00D3  
                             __size_of_DIO1_ISR_Lora_Init 0010  
                                     ?_MacExecuteCommands 00B0  
                                       _SPI2_Exchange8bit 9104  
                              __end_of_EUSART1_Initialize 84E2  
                                            __end_of_main 3A32  
                              AssembleEncryptionBlock@dir 0072  
                                            __end_of_rand 80AE  
                                       ?_TMR_GetDeltaTime 0068  
                                           AESCmac@padded 01A3  
                                __end_of_RADIO_ReadRandom 7296  
                                        _SetJoinFailState 89FA  
                                 RADIO_WriteMode@blocking 0066  
                                    _UpdateJoinInProgress 8FFC  
                                    _ExecuteRxTimingSetup 8CF8  
                                       __end_of_IOCB4_ISR 8F4A  
                               __size_of_UpdateDLSettings 001C  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0018  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 006C  
                                           AESCmac@output 00BB  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 9252  
                                               ??_AESCmac 00C0  
                                          ??_RADIO_SetCRC 0060  
                                  MacExecuteCommands@done 00B5  
                                 InitDefault868Channels@i 006B  
                                                  ??_main 00F9  
                                           ___fttol@sign1 0089  
                                                  ??_rand 00A8  
                                 __end_of_CCP5_Initialize 9176  
                                          ??_RADIO_RxDone 00F3  
                                          ??_RADIO_TxDone 00E3  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 930C  
                       __end_of_LORAWAN_LinkCheckCallback 5046  
                          __end_of_SetReceptionNotOkState 790C  
                             __end_of_UpdateReceiveDelays 878E  
                         __end_of_AssembleEncryptionBlock 652A  
                                __size_of_SPI2_Initialize 000E  
                                  ??_SystemBlockingWaitMs 0064  
                                        ??_StartReTxTimer 009A  
                                     ??_SPI2_Exchange8bit 0060  
                        CountfOptsLength@macCommandLength 0066  
                                      EncodeShiftRow@temp 0062  
                                ??_InitDefault868Channels 006B  
                             __size_of_RADIO_RegisterRead 0028  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 8452  
                                          _EnableChannels 8FC4  
                               ??_PrepareJoinRequestFrame 00D0  
                                          _HALSPICSAssert 92F8  
                                    ??_MacExecuteCommands 00B3  
                                             ?_CheckFlags 0060  
                                 LORAWAN_TxDone@timeOnAir 00BB  
                                              _ExtractMic 8108  
                         __size_of_SearchAvailableChannel 012A  
                                                  _ADCON0 000FC2  
                                                  _ADCON1 000FC1  
                                                  _ADCON2 000FC0  
                                      ??_HALSPICSDeassert 0060  
                                  _HALResetPinOutputValue 9016  
                                        ___llmod@dividend 0060  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                                  _CCPR5H 000F56  
                                                  _CCPR5L 000F55  
                                        ___awdiv@dividend 0060  
                                                  ?_srand 0072  
                  __end_of_LORAWAN_ReceiveWindow1Callback 6E96  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B8  
                          _LORAWAN_ReceiveWindow1Callback 6DDE  
                                                  _ANSELA 000F38  
                                                  ?_putch 0001  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                        __end_of___ftpack 6FFA  
                                         _ValidateTxPower 8C52  
                                                  _T1GCON 000FCC  
                                                  _T5GCON 000F4D  
                                 SwTimerReadValue@timerId 0099  
                                        __end_of___lltoft 7F96  
                                 TMR1_WriteTimer@timerVal 0060  
                                          _ExecuteLinkAdr 3244  
                                                  i2l1334 8264  
                  __end_of_LORAWAN_ReceiveWindow2Callback 6C42  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00D8  
                          _LORAWAN_ReceiveWindow2Callback 6B6A  
                                                  i2l2292 005C  
                                                  i2l2437 8FF2  
                                                  i2l2285 0038  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l2287 0044  
                                                  i2l2289 0050  
                           __size_of_RADIO_SetFSKSyncWord 0030  
                                                  _RCREG1 000FAE  
                                                  _RCSTA1 000FAB  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0060  
                                                  _SPBRG1 000FAF  
                        __size_of_ValidateChannelMaskCntl 0020  
                                                  _TMR5IF 007BF1  
                         __size_of_InitDefault433Channels 008A  
                                                  _TRISC2 007CA2  
                                           ?_LORAWAN_Init 00B2  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0070  
                                           ?_LORAWAN_Send 00D3  
                         __size_of_AutomaticReplyCallback 0026  
                                                  _TXREG1 000FAD  
                              __size_of_LORAWAN_RxTimeout 0364  
                                                  _TXSTA1 000FAC  
                                       ?_ExecuteDevStatus 0060  
                              __end_of_DIO0_ISR_Lora_Init 9166  
                                __size_ofi2_TMR_SwapTimer 0044  
                                       ExecuteLinkAdr@ptr 006F  
                           __size_of_RADIO_WriteFrequency 00F0  
                                                  _STable FE41  
                             RADIO_WriteFrequency@num_mod 0071  
                                     LORAWAN_TxDone@delta 00D2  
                             __size_of_ComputeSessionKeys 0086  
                                               AESCmac@k1 0183  
                                               AESCmac@k2 0173  
                               __end_of_SPI2_Exchange8bit 9116  
                                     LORAWAN_TxDone@found 00D1  
                                         _CheckMcastFlags 780C  
                                     LORAWAN_TxDone@minim 00DE  
                                      ??_ExecuteDevStatus 0062  
                                                  _Random 8E26  
                                          __CFG_XINST$OFF 000000  
                                                  _RxData 930C  
                                     LORAWAN_TxDone@ticks 00DA  
                      SearchAvailableChannel@randomNumber 00B9  
                    __end_of_TMR1_DefaultInterruptHandler 9310  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 930E  
                                             ?_GetRx1Freq 0060  
                           ValidateDataRange@dataRangeNew 0063  
                                 _RADIO_FHSSChangeChannel 87CE  
                                               ??___abdiv 0061  
                                                  ___lmul 8162  
                                  ?_RADIO_WriteFSKBitRate 006D  
                                   ?_UpdateJoinInProgress 0001  
                                                  ___wmul 8D20  
                             ?_LORAWAN_LinkCheckConfigure 00A6  
                                   ?_ExecuteRxTimingSetup 0067  
                                               ??___awdiv 0064  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 68D4  
                                               ??___lldiv 0068  
                                               ??___ftmul 0077  
                                               ??___llmod 0068  
                                               ??___fttol 0084  
                                               ??___lwmod 00AC  
                      RADIO_SetChannelFrequency@frequency 0060  
                                         StartReTxTimer@i 00A2  
                                ?_EUSART1_SetErrorHandler 0060  
                               ExecuteRxParamSetupReq@ptr 00A6  
                                  __size_of_LORAWAN_Reset 01CE  
                                                  _memcpy 7ED8  
                                                  _memset 8A8A  
                                                  clear_0 6B18  
                                                  clear_1 6B2A  
                                                  clear_2 6B36  
                                                  clear_3 6B42  
                                                  clear_4 6B4E  
                                                  clear_5 6B5E  
                                 SwTimerIsRunning@timerId 0060  
                                        ___awdiv@quotient 0066  
                                                  _printf 89CA  
                        ??_EUSART1_SetOverrunErrorHandler 0062  
                         ?_EUSART1_SetOverrunErrorHandler 0060  
                             __size_of_DIO5_ISR_Lora_Init 0002  
                                             ?_FillSubKey 0060  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0060  
                                   ___ftmul@f3_as_product 007B  
                                         _TMR5_StartTimer 92C2  
                                         ?_RxJoinResponse 0001  
                                ?_TMR5_HasOverflowOccured 0001  
                                 __size_of_EncodeShiftRow 0164  
                                  __end_of_EnableChannels 8FE0  
                              ??_RADIO_UnhandledInterrupt 0064  
                                            ??_HALSPISend 0061  
                    __end_of_INT2_DefaultInterruptHandler 9314  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 9312  
                                            __pdataCOMRAM 0054  
                                             RxData@pData 0060  
                                  __end_of_HALSPICSAssert 92FC  
                       __size_of_RADIO_SetSpreadingFactor 000A  
                            __size_of_ValidateChannelMask 005E  
                                           ??_SwTimerStop 0060  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0060  
                               ?_RADIO_SetSpreadingFactor 0001  
                                       ?_SwTimerReadValue 0091  
                                      ??_SwTimerIsRunning 0060  
                                          ?_TMR_SwapTimer 0068  
                         RADIO_FHSSChangeChannel@irqFlags 0079  
                                       ?_ExecuteDutyCycle 0060  
                                      ??_ExecuteLinkCheck 0062  
                                            __mediumconst FE40  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0072  
                                ADC_GetConversion@channel 0064  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0095  
                                         _UpdateDataRange 55DA  
                                         ??_EUSART1_Write 0060  
                                  __end_of_ExecuteLinkAdr 350C  
                                      ??_ExecuteDutyCycle 0062  
                TMR1_SetInterruptHandler@InterruptHandler 0060  
               IOCB4_SetInterruptHandler@InterruptHandler 0060  
                INT2_SetInterruptHandler@InterruptHandler 0060  
                INT1_SetInterruptHandler@InterruptHandler 0060  
                      __end_of_LORAWAN_SetChannelIdStatus 8108  
                              _LORAWAN_SetChannelIdStatus 80AE  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007A  
                                           AESEncode@aux2 0079  
                                           AESEncode@aux3 007B  
                                 __end_of_TMR1_WriteTimer 8EEA  
                                   __end_of_SwTimerCreate 74DE  
                          ??_SelectChannelForTransmission 00BB  
                                             ?_ComputeMic 00C7  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 8F0A  
                             ??_LORAWAN_SetApplicationEui 006D  
                             ??_LORAWAN_SetApplicationKey 006D  
                               ExecuteDutyCycle@maxDCycle 0065  
                                       ??_RADIO_RxTimeout 00CB  
                                        ?_TMR1_Initialize 0001  
                                 __end_of_TMR5_Initialize 8FA8  
                             UpdateFrequency@frequencyNew 0060  
                                       _SYSTEM_Initialize 8ABA  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 014C  
                                          ??_LORAWAN_Init 00B6  
                                          ??_LORAWAN_Join 00DB  
                                          ??_LORAWAN_Send 00D7  
                          __size_of_RADIO_FSKPayloadReady 00B4  
                                              __accesstop 0060  
                                 __end_of__initialization 6B64  
                           __end_of_RADIO_FSKPayloadReady 6F4A  
                                          _RADIO_Transmit 3CA2  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 01D9  
                                  RADIO_ReadRandom@retVal 006F  
                                        _ConfigureRadioRx 8CA6  
                                    __size_of_RADIO_Reset 0046  
                                        _ConfigureRadioTx 830E  
                                     ExecuteDevStatus@ptr 0060  
                        ??_UpdateReceiveWindow2Parameters 0065  
                         ?_UpdateReceiveWindow2Parameters 0060  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 00E8  
                                          _maxPayloadSize FF51  
                           RADIO_SetLoRaSyncWord@syncWord 0060  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0062  
                               ExecuteLinkAdr@channelMask 0073  
                                              ___ftmul@f1 0071  
                                              ___ftmul@f2 0074  
                                              ___fttol@f1 0080  
                                              _adcVoltage 0100  
                                      __end_of_HALSPISend 91CC  
                                          __pcstackCOMRAM 0001  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 5AE0  
                                 ValidateChannelId@result 0061  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 9116  
                                            __pidataBANK2 92A2  
                                            __pidataBANK3 878E  
                                     ??_SYSTEM_Initialize 0062  
                              __end_of_DIO4_ISR_Lora_Init 9308  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                                              ___lltoft@c 0068  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                _RADIO_WriteConfiguration 14DE  
                                       ??_RADIO_WriteMode 0067  
                                         _spreadingFactor FF6F  
                               __size_of_LORAWAN_Mainloop 003E  
                                        ??_EncKeySchedule 0062  
                   __end_of_IOCB4_DefaultInterruptHandler 9312  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 9310  
                                __end_of_RADIO_WritePower 661A  
                                 ?_ExecuteRxParamSetupReq 00A6  
                                           __end_of_srand 9186  
                                           __end_of_putch 9194  
                                       LORAWAN_RxDone@hdr 00F1  
                                            ??_RADIO_DIO0 00F5  
                                            ??_RADIO_DIO1 00CB  
                                            ??_RADIO_DIO2 007A  
                                            ??_RADIO_DIO3 0065  
                                            ??_RADIO_DIO4 0065  
                                            ??_RADIO_DIO5 0065  
                                  _InitDefault433Channels 75F2  
                                         _UpdateFrequency 85B4  
                                  _AutomaticReplyCallback 8D98  
                             ??_IOCB4_SetInterruptHandler 0062  
                                ??_INTERRUPT_GetDioStatus 0060  
                                            ??_RADIO_Init 007F  
                                        ?_CCP5_Initialize 0001  
                               SwTimerSetCallback@timerId 0063  
                              LORAWAN_RxDone@channelIndex 00E0  
                          AssembleEncryptionBlock@blockId 006F  
                             __size_of_EXT_INT_Initialize 002A  
                                         _UpdateDutyCycle 85F8  
                                         ?_EnableChannels 006C  
                                 ??_TMR_OverrideRemaining 006E  
                                 __end_of_ValidateTxPower 8C7C  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 9308  
                            __end_of_HALResetPinMakeInput 9304  
                                 __size_of_TMR1_ReadTimer 0022  
                        __end_of_INT2_SetInterruptHandler 9202  
                                        RADIO_DIO0@opMode 00F8  
                             RADIO_RegisterRead@readValue 0063  
                      __end_of_IncludeMacCommandsResponse 1E40  
                              _IncludeMacCommandsResponse 19DE  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 008A  
                                UpdateCfList@bufferLength 00A8  
                                        RADIO_DIO2@opMode 007B  
                                   LORAWAN_Send@confirmed 00D9  
                                             ?_ExtractMic 006B  
                                         ?_ExecuteLinkAdr 006F  
                                        _ValidateDataRate 9060  
                         LORAWAN_GetMaxPayloadSize@result 006A  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 8AE8  
                      __size_of_RADIO_SetChannelFrequency 008A  
                                                 ??_srand 0074  
                                                 ??_putch 0061  
                                  __end_of_RADIO_Transmit 3EDA  
                                       ??_SPI2_Initialize 0060  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 450C  
                              ?_RADIO_SetChannelFrequency 0060  
                                              __pbssBANK0 00F9  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                        RxData@dataLength 0062  
                                     __end_of_SwTimerStop 8D98  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 788E  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF59  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 0090  
                                    _RADIO_SetOutputPower 9248  
                                    __end_of_RADIO_SetCRC 9266  
                                  _RADIO_ReceiveStart$777 00B7  
                                  __size_of_DIO0_ISR_Lora 0006  
                                 ??_HALResetPinMakeOutput 0060  
                                    __end_of_RADIO_RxDone 68D4  
                              __end_of_RADIO_RxFSKTimeout 88C8  
                                    __end_of_RADIO_TxDone 5D30  
                                     __size_of_FillSubKey 0062  
                                      __end_of_RADIO_DIO0 7452  
                                      __end_of_RADIO_DIO1 8452  
                                      __end_of_RADIO_DIO2 8210  
                                      __end_of_RADIO_DIO3 8E26  
                                      __end_of_RADIO_DIO4 8966  
                                      __end_of_RADIO_DIO5 8CF8  
                               ??_RADIO_FHSSChangeChannel 0079  
                             __size_of_SwTimerSetCallback 0044  
                           __size_of_LORAWAN_SetDeviceEui 002E  
                               RADIO_SetOutputPower@power 0060  
                              __size_of_SPI2_Exchange8bit 0012  
                                      __end_of_RADIO_Init 48A4  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00BB  
                                                 ?_Random 00AD  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                                                 ?_RxData 0060  
                         __end_of_EUSART1_SetErrorHandler 922A  
                               ?_LORAWAN_SetDeviceAddress 0060  
                                        i2_TMR1_ReadTimer 8F0A  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0064  
                                         _EnableChannels1 7A74  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 0020  
                                  ??_UpdateJoinInProgress 0060  
                        __size_of_AssembleEncryptionBlock 00F4  
                                  ??_ExecuteRxTimingSetup 0069  
                                        FillSubKey@source 0060  
            SelectChannelForTransmission@transmissionType 00BB  
                                                 ?___lmul 009A  
                  AssembleEncryptionBlock@multicastStatus 0071  
                          __end_of_ExecuteRxParamSetupReq 431E  
                                      ??_CountfOptsLength 0060  
                                                 ?___wmul 0060  
                                  __size_of_DIO2_ISR_Lora 0006  
                                      EncryptFRMPayload@i 00A5  
                                      EncryptFRMPayload@j 00A6  
                                      EncryptFRMPayload@k 00A4  
                                              ??_TMR1_ISR 0034  
                                 __end_of_TMR5_StartTimer 92C8  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                               _LORAWAN_SetApplicationEui 8BA0  
                                    ??_DIO3_ISR_Lora_Init 0060  
                               _LORAWAN_SetApplicationKey 8B72  
                                        _UpdateDLSettings 8FA8  
                                              _deviceAddr 01F2  
                         __end_of_TMR5_HasOverflowOccured 91D8  
                                        _ValidateRxOffset 9048  
                                                 _CCP5CON 000F54  
                                                 ?_memcpy 0060  
                                                 ?_memset 0060  
                                          ___lmul@product 00A2  
                                       _TMR_ISR_Lora_Init 9126  
                                  RADIO_RegisterWrite@reg 0063  
                                               ?___ftpack 0060  
                                     __size_of_ComputeMic 0062  
                                  RADIO_Transmit@regValue 00C0  
                            __size_of_RADIO_SetModulation 000A  
                                     _RADIO_FSKPacketSent 59B2  
                                                 _AESCmac 21F0  
                                                 ?_printf 0062  
                                  ComputeMic@bufferLength 00CB  
                                               ?___lltoft 0068  
                                 __size_of_ADC_Initialize 0016  
                  __end_of_EUSART1_SetFramingErrorHandler 9220  
                 __size_of_EUSART1_SetFramingErrorHandler 000A  
                          _EUSART1_SetFramingErrorHandler 9216  
                                 __end_of_UpdateDataRange 5728  
                                         ??_TMR_SwapTimer 006A  
                                RADIO_WriteFSKBitRate@num 0071  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0062  
                                                 i2l11567 8728  
                                    EncryptFRMPayload@dir 0094  
                                      _RADIO_GetPacketSnr 92C8  
                                    EncryptFRMPayload@key 0099  
                                   __end_of_UpdateTxPower 9234  
                                     _RADIO_SetIQInverted 9252  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 00A8  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 016C  
                                                 _SPBRGH1 000FB0  
                                     i2_SwTimersInterrupt 5F50  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0062  
                                       __end_of_bandwidth FF6F  
                  UpdateReceiveWindow2Parameters@dataRate 0064  
                                __end_of_SetJoinFailState 8A2A  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0065  
                                  ValidateDataRate@result 0061  
                                        ?_TMR1_WriteTimer 0060  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0060  
                                         ?_RADIO_Transmit 00B1  
                                 _ValidateChannelMaskCntl 8E6A  
                                         ___abdiv@counter 0063  
                                     StartReTxTimer@minim 009E  
                              AssemblePacket@bufferLength 00CA  
                            PrepareSessionKeys@sessionKey 006B  
                        LORAWAN_SetDeviceEui@deviceEuiNew 006B  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 0068  
                                        ?_TMR5_Initialize 0001  
                       __end_of_RADIO_SetChannelFrequency 7568  
                             PrepareJoinRequestFrame@iCtr 00D9  
                               _IOCB4_SetInterruptHandler 91EE  
                       __end_of_SetCallbackSoftwareTimers 6A90  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 5D30  
                             PrepareJoinRequestFrame@mhdr 00D8  
                                  __size_of_AESEncodeLoRa 0036  
                                      _EncKeySchedule$514 0064  
                           __size_of_LORAWAN_PlatformInit 0022  
                                          _ticksAccounted 003C  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00B9  
                                              AESCmac@ptr 01D3  
                                 __end_of_spreadingFactor FF76  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0060  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D4  
                                  _InitDefault868Channels 7568  
                                RADIO_RegisterWrite@value 0062  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0060  
                                LORAWAN_Send@bufferLength 00D6  
                                   _StopAllSoftwareTimers 8360  
                                         __size_of_Random 0022  
                                         __size_of_RxData 0002  
                                    ?i2_SwTimersInterrupt 0021  
                                 __end_of_UpdateFrequency 85F8  
                                     AssemblePacket@fCtrl 00D0  
                                                 ___abdiv 7C86  
                                              AESEncode@i 007C  
                                               _AESEncode 28FE  
                                  ValidateRxOffset@result 0061  
                               __end_of_TMR_ISR_Lora_Init 9136  
                                                 ___awdiv 767C  
                                         __size_of___lmul 0058  
                             __size_of_DIO2_ISR_Lora_Init 0010  
                                 __end_of_UpdateDutyCycle 863C  
                                                 ___lldiv 7788  
                                     __size_of_ExtractMic 005A  
                                         __size_of___wmul 0028  
                                                 ___ftmul 6340  
                                    ??_RADIO_GetPacketSnr 0060  
                                                 ___llmod 7C1E  
                                                 ___fttol 6248  
                                       ?_RADIO_ReadRandom 006C  
                                                 ___lwmod 863C  
                               SwTimerIsRunning@isRunning 0061  
                                 ??_RADIO_SetLoRaSyncWord 0060  
                                    ValidateChannelMask@i 0064  
                                                 __pcinit 6A90  
                      __size_of_LORAWAN_GetMaxPayloadSize 0060  
                                                 _appSKey 03B0  
                                         __size_of_memcpy 0060  
                              __end_of_RADIO_ReceiveStart 410A  
                                              ??___ftpack 0065  
                                   RADIO_Init@radioBuffer 0079  
                                         __size_of_memset 0030  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 0067  
                        EncryptFRMPayload@multicastStatus 009E  
                                      ??_RADIO_ReadRandom 006E  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
                                              ??___lltoft 006C  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060  
                                                 __ptext0 37B0  
                                                 __ptext1 89CA  
                                                 __ptext2 9186  
                                                 __ptext3 9194  
                                                 __ptext4 7F38  
                                                 __ptext5 6248  
                                                 __ptext6 6340  
                                                 __ptext7 6F4A  
                                                 __ptext8 92C2  
                                                 __ptext9 91CC  
                                    __end_of_LORAWAN_Init 7E78  
                                    __end_of_LORAWAN_Join 71F2  
                                    __end_of_LORAWAN_Send 6D14  
                                         __size_of_printf 0030  
                                           _DIO0_ISR_Lora 92E6  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 006D  
                                          _EncodeShiftRow 5318  
                                               _IOCB4_ISR 8F2A  
                              ExecuteNewChannel@frequency 00AB  
                               TMR1_ReadTimer@readValHigh 0066  
                         __size_of_INTERRUPT_GetDioStatus 0014  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 00BC  
                                                 _counter 011C  
                                 __size_of_LORAWAN_RxDone 0CA6  
                                   _OSCILLATOR_Initialize 91B0  
                          __end_of_UpdateJoinSuccessState 59B2  
                                 __size_of_LORAWAN_TxDone 07B2  
                              __end_of_RADIO_SetBandwidth 928E  
                                         _RADIO_GetStatus 92CE  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF68  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 92E0  
                                      _EUSART1_Initialize 849C  
                                             _SwTimerStop 8D70  
                                ??_PIN_MANAGER_Initialize 0062  
                               ?_TMR1_SetInterruptHandler 0060  
                                                 _nwkSKey 03C0  
                             IncludeMacCommandsResponse@i 006D  
                                               _T5CONbits 000F4E  
                                           ?_UpdateCfList 00A6  
                                       _ExecuteNewChannel 3A32  
                             __size_of_PrepareSessionKeys 00AC  
                                            ??_CheckFlags 0062  
                           RADIO_SetModulation@modulation 0060  
                                 UpdateDLSettings@dlRx2Dr 0061  
                               __size_of_TMR_GetDeltaTime 0198  
                                           _DIO2_ISR_Lora 92DA  
                              __size_of_SYSTEM_Initialize 002E  
                    __end_of_LORAWAN_SetNetworkSessionKey 8B16  
                   __size_of_LORAWAN_SetNetworkSessionKey 002E  
                            _LORAWAN_SetNetworkSessionKey 8AE8  
                                      ?_ExecuteNewChannel 00A6  
                              RADIO_WriteMode@currentMode 0069  
                                        ComputeMic@buffer 00C9  
                                    end_of_initialization 6B64  
                                 _CreateAllSoftwareTimers 83B2  
                                     SwTimerCreate@retVal 0060  
                                _INT2_SetInterruptHandler 91F8  
                                   ??_RADIO_FSKPacketSent 00E3  
                                     ?_EUSART1_Initialize 0001  
                                          _GenerateSubkey 5728  
                                   _RADIO_WatchdogTimeout 84E2  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF41  
                                        ?_CheckMcastFlags 0060  
                                  ExtractMic@bufferLength 006D  
                                                 memcpy@d 0067  
                                                 memcpy@n 0064  
                                                 memcpy@s 0069  
                                 __end_of_EnableChannels1 7AE0  
                                                 memset@c 0062  
                                                 memset@n 0064  
                                                 memset@p 0066  
                               _LORAWAN_LinkCheckCallback 4EDA  
                             _EUSART1_OverrunErrorHandler 01E0  
                                          ??_SwTimerStart 0091  
                                     ??_ExecuteNewChannel 00A8  
                                               i2u2231_48 8F38  
                                               i2u2233_48 8EF8  
                                               i2u2227_48 8F78  
                                               i2u2229_48 8F58  
                                   _UpdateCurrentDataRate 9234  
                                   _UpdateChannelIdStatus 51B2  
                                 ??_RADIO_WriteFSKBitRate 0071  
                                   ??_RADIO_SetIQInverted 0060  
                              __end_of_DIO1_ISR_Lora_Init 9156  
                                         ___lldiv@divisor 0064  
                                     _ValidateChannelMask 7F96  
                                              _ticksAdded 0040  
                             HALResetPinOutputValue@value 0060  
                                EncodeShiftRow@stateTable 0060  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0060  
                                         ___lldiv@counter 006C  
                             TMR_OverrideRemaining@tmrVal 0070  
                                   ??i2_SwTimersInterrupt 0025  
                                ExecuteLinkAdr@redundancy 0076  
                                       GenerateSubkey@key 0091  
                                    _HALResetPinMakeInput 9300  
                                            ??_GetRx1Freq 0064  
              LORAWAN_SetApplicationKey@applicationKeyNew 006B  
                           UpdateDLSettings@dlRx1DrOffset 0060  
                              LORAWAN_Init@RxJoinResponse 00B4  
                              LORAWAN_RxDone@bufferLength 01DB  
                        __end_of_RADIO_SetSpreadingFactor 9270  
                                                 printf@c 0066  
                      AssembleEncryptionBlock@bufferIndex 0073  
                                                 printf@f 0062  
                                            RxData@status 0063  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 0066  
                                         _SystemTimerInit 92AA  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                        ?_TMR5_StartTimer 0001  
                                           _AESEncode$510 0074  
                                           _AESEncode$511 0076  
                                           _AESEncode$509 0072  
                                        ??_RxJoinResponse 0060  
                                        _LORAWAN_Mainloop 884E  
                            __end_of_RADIO_SetFSKSyncWord 8A5A  
                                      LORAWAN_Join@result 00DC  
                                      __end_of_CheckFlags 8052  
                                    ??_EUSART1_Initialize 0062  
                               ValidateTxPower@txPowerNew 0061  
                                          AESEncode@block 0066  
                       SearchAvailableChannel@maxChannels 00B8  
                                  __end_of_EncodeShiftRow 547C  
                                      _DIO0_ISR_Lora_Init 9156  
                                       ??_HALDIO5PinValue 0060  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 01EC  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 0065  
                            SwTimersInterrupt@timeElapsed 0088  
                                           _AESEncodeLoRa 88C8  
                               __size_of_ExecuteDevStatus 000A  
                            __end_of_RADIO_WriteFrequency 670A  
                              __end_of_RADIO_RegisterRead 8D70  
                       __end_of_LORAWAN_GetMaxPayloadSize 7ED8  
                          __end_of_HALResetPinOutputValue 9030  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0060  
                                __end_of_ConfigureRadioRx 8CD0  
                                __end_of_ConfigureRadioTx 8360  
                                         _RADIO_RxTimeout 8BCE  
                          UpdateChannelIdStatus@channelId 0062  
                               __end_of_ExecuteNewChannel 3CA2  
                                        EnableChannels1@i 006B  
                                 __size_of_AssemblePacket 03B0  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0060  
                                       _SwTimerSetTimeout 86C4  
                                          _TMR1_ReadTimer 8E48  
                                          ??_UpdateCfList 00A8  
                                              _txPower433 FF76  
                                              _txPower868 FF7C  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         ??_LORAWAN_Reset 00B1  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 0030  
                               ??_ValidateChannelMaskCntl 0060  
                                      ?_SwTimerSetTimeout 006D  
                             __size_of_MacExecuteCommands 02F6  
                                    ExecuteNewChannel@ptr 00A6  
                                ??_UpdateMinMaxChDataRate 0060  
                                  __end_of_GenerateSubkey 5874  
                        __size_of_EUSART1_SetErrorHandler 000A  
                                           RADIO_RxDone@i 00F4  
                                     EUSART1_Write@txData 0060  
                                   __size_of_RADIO_SetCRC 000A  
                                 AssemblePacket@macCmdIdx 00D1  
                             ?_LORAWAN_SetChannelIdStatus 0064  
                                          _localDioStatus 011E  
                                      __end_of_GetRx1Freq 90F2  
                                   __size_of_RADIO_RxDone 00E4  
                                            ??_ComputeMic 00CC  
                            __size_of_UpdateReceiveDelays 0042  
                                   __size_of_RADIO_TxDone 0126  
                                  ??_RADIO_SetOutputPower 0060  
                         EncryptFRMPayload@macBufferIndex 009B  
                           ?_LORAWAN_SetNetworkSessionKey 006B  
                                 UpdateMinMaxChDataRate@i 0061  
                                 LORAWAN_Reset@ismBandNew 00B1  
                               __size_of_SwTimerIsRunning 002A  
                              __end_of_ComputeSessionKeys 7788  
                        __size_of_TMR5_HasOverflowOccured 000C  
                                     ??_SwTimerSetTimeout 0071  
                                __size_of_SwTimersExecute 00E6  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 90B8  
                                         _RADIO_WriteMode 6050  
                              ??_RADIO_WriteConfiguration 00A8  
                                   SPI2_Exchange8bit@data 0060  
                                 ?_SearchAvailableChannel 00AF  
                               __size_of_SwTimerReadValue 0040  
                             RADIO_FSKPacketSent@irqFlags 00EF  
                               __size_of_ExecuteDutyCycle 0054  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00CE  
                                      __end_of_FillSubKey 7E16  
                                 _AssembleEncryptionBlock 6436  
                                       __size_of_INT1_ISR 0008  
                                       __size_of_INT2_ISR 0008  
                                    ??_DIO0_ISR_Lora_Init 0062  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF41  
                                     AESEncodeLoRa@useKey 0081  
                                             ___ftmul@exp 007A  
                              SwTimerSetCallback@callback 0060  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0060  
                                        ?_UpdateFrequency 0060  
                                      LORAWAN_Send@buffer 00D4  
                                          __end_of_Random 8E48  
                                          __end_of_RxData 930E  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 0010  
                                __end_of_ValidateDataRate 9078  
                            __end_of_INTERRUPT_Initialize 92F4  
                          EnableChannels1@channelMaskCntl 0066  
                          EnableChannels1@channelIndexMax 0068  
                          EnableChannels1@channelIndexMin 0067  
                     LORAWAN_SetChannelIdStatus@channelId 0066  
                                        ?_UpdateDutyCycle 0060  
                              __end_of_DIO5_ISR_Lora_Init 9306  
                                 __end_of_RADIO_GetStatus 92D4  
                                          __end_of___lmul 81BA  
                                      LORAWAN_Send@result 00D8  
                                        ??_EnableChannels 006F  
                               i2TMR1_WriteTimer@timerVal 0001  
                                          __end_of___wmul 8D48  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0060  
                     TMR_OverrideRemaining@ticksRemaining 006A  
                                       ?_RADIO_WritePower 0001  
                                           __pidataCOMRAM 92EC  
                                         ?_EncodeShiftRow 0060  
                                          ?_AESEncodeLoRa 007D  
                                       __size_of_TMR1_ISR 0014  
                                          _ADC_Initialize 9078  
                                      __end_of_ComputeMic 7DB4  
                                               Random@max 00AD  
                                          __end_of_memcpy 7F38  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 8708  
                                  __end_of_TMR1_ReadTimer 8E6A  
                                          __end_of_memset 8ABA  
                                         _SPI2_Initialize 91A2  
                        LORAWAN_SetChannelIdStatus@result 0065  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0064  
                                            _RADIO_SetCRC 925C  
                                   ??_ValidateChannelMask 0062  
                                        ??_ExecuteLinkAdr 0071  
                                   UpdateCfList@frequency 00A9  
                                          __end_of_printf 89FA  
                                            _RADIO_RxDone 67F0  
                                            _RADIO_TxDone 5C0A  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006B  
                                     start_initialization 6A90  
                                          _ConfigureRadio 70A6  
                                      LORAWAN_RxDone@mhdr 00E1  
                                      LORAWAN_RxDone@temp 00E7  
                                      _DIO4_ISR_Lora_Init 9306  
                                __end_ofi2_TMR1_ReadTimer 8F2A  
                          __size_of_TMR_OverrideRemaining 0096  
                                     _RADIO_RegisterWrite 8EAA  
                                            AESCmac@mLast 0193  
                               ??_CreateAllSoftwareTimers 0061  
                         __size_of_PIN_MANAGER_Initialize 0054  
                           __end_of_TMR_OverrideRemaining 73C2  
                             ?_IncludeMacCommandsResponse 0060  
                                   __end_of_INT1_CallBack 8F8A  
                                            ??_ExtractMic 006F  
                    EncryptFRMPayload@bufferToBeEncrypted 009C  
                                            AESCmac@input 00BD  
                        __end_of_LORAWAN_SetDeviceAddress 9048  
                                         ?_GenerateSubkey 0091  
                            ?_RADIO_SetFrequencyHopPeriod 0060  
                                         LORAWAN_TxDone@i 00E2  
                                   LORAWAN_Init@RxPayload 00B2  
                     AssembleEncryptionBlock@frameCounter 006B  
                                 i2TMR_SwapTimer@timerVal 0009  
                                             putch@txData 0061  
                                   __end_of_INT2_CallBack 8F6A  
                                           ??_RADIO_Reset 0065  
                                __end_of_UpdateDLSettings 8FC4  
                                   __end_of_EUSART1_Write 91A2  
                              SwTimerStart@ticksRemaining 0095  
                                  RADIO_WriteMode@newMode 006A  
                                __end_of_ValidateRxOffset 9060  
                             ??_RADIO_SetChannelFrequency 0064  
                             ??_SetCallbackSoftwareTimers 0064  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 9270  
                           ExecuteNewChannel@channelIndex 00AF  
                          __end_of_SearchAvailableChannel 5C0A  
                                        ?_EnableChannels1 0064  
                                         i2_TMR_SwapTimer 8708  
                                 __size_of_StartReTxTimer 0182  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0060  
                                         ___llmod@divisor 0064  
                              MacExecuteCommands@fOptsLen 00B2  
                                 _RADIO_FSKPacketSent$793 00EB  
                                 __end_of_SystemTimerInit 92B2  
                          UpdateChannelIdStatus@statusNew 0060  
                       __size_of_RADIO_UnhandledInterrupt 0032  
                                         ___llmod@counter 0068  
                                     TMR_SwapTimer@oldVal 0117  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0115  
                                   _RADIO_FSKPayloadReady 6E96  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 9300  
                                                ??_Random 00AF  
                                                ??_RxData 0064  
                                                AESCmac@i 01D8  
                                                AESCmac@j 01D7  
                                                AESCmac@n 01D6  
                                                AESCmac@x 01C3  
                                                AESCmac@y 01B3  
                              SwTimerReadValue@ticksCount 0095  
                                    ?_RADIO_RegisterWrite 0062  
                          __end_of_InitDefault433Channels 767C  
                          __end_of_AutomaticReplyCallback 8DBE  
                                     RADIO_Init@frequency 007B  
                                __size_of_TMR1_Initialize 002C  
                                    _macEndDevCmdReplyLen FF61  
                                                ??___lmul 00A2  
                                             ??_AESEncode 006A  
                       RADIO_WriteConfiguration@tempValue 00AC  
                                        _activationMethod 011D  
                                   __size_of_LORAWAN_Init 0062  
                      __size_of_AckRetransmissionCallback 011E  
                                   __size_of_LORAWAN_Join 00A4  
                                                ??___wmul 0064  
                                   __size_of_LORAWAN_Send 00D2  
                                 __end_of_RADIO_RxTimeout 8BFC  
                                MacExecuteCommands@buffer 00B0  
                                ??_SetReceptionNotOkState 00BB  
                                  __end_of_ADC_Initialize 908E  
                                          ??_TMR_ISR_lora 0032  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK1 01EE  
                                             __pdataBANK2 02F5  
                                             __pdataBANK3 03A0  
                                       _ValidateDataRange 8528  
                                      __end_of_ExtractMic 8162  
                i2SwTimersInterrupt@ticksToNextTimerEvent 002D  
                  SwTimersInterrupt@ticksToNextTimerEvent 008C  
                                                ??_memcpy 0066  
                                  __size_of_SwTimerCreate 008C  
                                                ??_memset 0066  
                                    ??_DIO4_ISR_Lora_Init 0060  
                              __end_of_EXT_INT_Initialize 8C52  
                                       _ValidateChannelId 8DBE  
                                    ?_RADIO_SetModulation 0001  
                                _RADIO_SetSpreadingFactor 9266  
                                      _RADIO_RxFSKTimeout 888C  
                                                ?_AESCmac 00B9  
                                  __size_of_TMR1_CallBack 0020  
                                                ??_printf 0064  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0060  
                                            AESEncode@aux 0078  
                                            AESEncode@key 0068  
                                  TMR_GetDeltaTime@retVal 0108  
                                         ?_TMR1_ReadTimer 0060  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 714E  
                                          _LORAWAN_RxDone 0086  
                                      ?_ValidateChannelId 0060  
                                  TMR_GetDeltaTime@tmrVal 0119  
                                          _LORAWAN_TxDone 0D2C  
                            __end_of_LORAWAN_SetDeviceEui 8B44  
                              __size_of_ExecuteNewChannel 0270  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 0069  
                                       __size_of___ftpack 00B0  
                                    __end_of_SwTimerStart 732C  
                  __end_of_LORAWAN_EnterContinuousReceive 798A  
                 __size_of_LORAWAN_EnterContinuousReceive 007E  
                          _LORAWAN_EnterContinuousReceive 790C  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00CA  
                                       __size_of___lltoft 005E  
                                       CountfOptsLength@i 0067  
                                             __pbssCOMRAM 003C  
                              __end_of_DefaultChannels433 FFAC  
                              __end_of_DefaultChannels868 FFD6  
                                        ??_RADIO_Transmit 00B4  
                                               _adcResult 016F  
                                      LORAWAN_RxTimeout@i 00CA  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0173  
                                     ??_ValidateDataRange 0062  
                                        _TMR_GetDeltaTime 48A4  
                           EnableChannels@channelMaskCntl 006E  
                                 __end_of_RADIO_WriteMode 614E  
                 __end_of_UnconfirmedTransmissionCallback 7A02  
                __size_of_UnconfirmedTransmissionCallback 0078  
                         _UnconfirmedTransmissionCallback 798A  
                                 SearchAvailableChannel@i 00BA  
                                     ??_ValidateChannelId 0061  
                                   RADIO_RegisterRead@reg 0062  
                         __size_of_UpdateMinMaxChDataRate 00FA  
                     LORAWAN_SetChannelIdStatus@statusNew 0064  
                                __size_of_CCP5_Initialize 0010  
                                               _aesBuffer 0157  
                                 INTERRUPT_GetDioStatus@a 0060  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0099  
                           ??_RADIO_SetFrequencyHopPeriod 0062  
                                    _RADIO_SetFSKSyncWord 8A2A  
                             RADIO_SetBandwidth@bandwidth 0060  
                        ??_EUSART1_SetFramingErrorHandler 0062  
                         ?_EUSART1_SetFramingErrorHandler 0060  
                              __end_of_SwTimerSetCallback 86C4  
       __end_of_ResetParametersForUnconfirmedTransmission 90B8  
      __size_of_ResetParametersForUnconfirmedTransmission 0014  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0060  
               _ResetParametersForUnconfirmedTransmission 90A4  
                               ??_AssembleEncryptionBlock 0072  
                                   _INT2_InterruptHandler 01EA  
                                               _bandwidth FF68  
                                      ??_SetJoinFailState 0060  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 7E16  
                                            _LORAWAN_Join 714E  
                                            _LORAWAN_Send 6C42  
                                  RADIO_FSKPayloadReady@i 00F4  
                                       _ValidateFrequency 7CEC  
                                               __pnvBANK1 01DC  
                                  ??_HALResetPinMakeInput 0060  
                                    _RADIO_WriteFrequency 661A  
                                         FillSubKey@carry 0066  
                                        _HALSPICSDeassert 92F4  
                          ??_LORAWAN_SetNetworkSessionKey 006D  
                                     __end_of_RADIO_Reset 85B4  
                                   ??_RADIO_RegisterWrite 0063  
                                  _PIN_MANAGER_Initialize 8266  
                                           FillSubKey@key 0062  
                                      ?_ValidateFrequency 0060  
                                    __end_of_UpdateCfList 450C  
                     RADIO_WriteFSKFrequencyDeviation@num 0071  
                               EnableChannels@channelMask 006C  
                                               _macBuffer 04E0  
                                               _dioStatus 0120  
                               __end_of_ValidateDataRange 856E  
                           RADIO_FSKPayloadReady@irqFlags 00F3  
                                       _SwTimersInterrupt 5E4E  
                                       ??_SwTimersExecute 00DA  
                                               __pintcode 0008  
                                                ?___abdiv 0060  
                                               _deviceEUI 01F6  
                        __end_of_TMR1_SetInterruptHandler 91EE  
                                           __pmediumconst FE40  
                                 RADIO_Transmit@bufferLen 00B3  
                                 __end_of_SPI2_Initialize 91B0  
                                                ?___awdiv 0060  
                                               __ptext100 9234  
                                               __ptext101 8FC4  
                                               __ptext110 92C8  
                                               __ptext102 7A74  
                               __end_of_ValidateChannelId 8DE2  
                                               __ptext111 68D4  
                                               __ptext103 51B2  
                                               __ptext200 5E4E  
                                               __ptext120 7FF4  
                                               __ptext112 4BCC  
                                               __ptext104 82BA  
                                               __ptext201 48A4  
                                               __ptext121 59B2  
                                               __ptext113 767C  
                                               __ptext105 923E  
                                               __ptext210 88FE  
                                               __ptext202 8E48  
                                               __ptext130 92D4  
                                               __ptext122 0D2C  
                                               __ptext114 6436  
                                               __ptext106 6C42  
                                               __ptext203 86C4  
                                               __ptext131 8E8A  
                                               __ptext123 880E  
                                               __ptext115 6D14  
                                               __ptext107 7E78  
                                               __ptext220 8F0A  
                                               __ptext212 90CC  
                                               __ptext204 7568  
                                               __ptext140 9248  
                                               __ptext132 3EDA  
                                               __ptext124 8C7C  
                                               __ptext116 8108  
                                               __ptext108 1E40  
                                               __ptext221 9298  
                                               __ptext213 8EEA  
                                               __ptext205 75F2  
                                               __ptext141 9252  
                                               __ptext133 8CA6  
                                               __ptext125 92CE  
                                               __ptext117 7702  
                                               __ptext109 19DE  
                                               __ptext230 8F6A  
                                               __ptext222 8F2A  
                                               __ptext214 930E  
                                               __ptext206 8A8A  
                                               __ptext150 3CA2  
                                               __ptext142 925C  
                                               __ptext134 90B8  
                                               __ptext126 790C  
                                               __ptext118 6FFA  
                                               __ptext231 92E6  
                                               __ptext223 92DA  
                                               __ptext215 8210  
                                               __ptext207 7ED8  
                                               __ptext151 14DE  
                                               __ptext143 70A6  
                                               __ptext135 714E  
                                               __ptext127 930C  
                                               __ptext119 780C  
                                               __ptext232 9314  
                                               __ptext224 9310  
                                               __ptext216 8708  
                                               __ptext208 83B2  
                                               __ptext160 21F0  
                                               __ptext152 652A  
                                               __ptext144 9266  
                                               __ptext136 8FFC  
                                               __ptext128 90A4  
                                               __ptext233 0000  
                                               __ptext225 92B2  
                                               __ptext217 8FE0  
                                               __ptext209 7452  
                                               __ptext161 5728  
                                               __ptext153 7B4C  
                                               __ptext145 9270  
                                               __ptext137 7AE0  
                                               __ptext129 90F2  
                                               __ptext226 8F4A  
                                               __ptext218 5F50  
                                               __ptext170 71F2  
                                               __ptext162 7DB4  
                                               __ptext154 7BB6  
                                               __ptext146 927A  
                                               __ptext138 5AE0  
                                               __ptext227 92E0  
                                               __ptext219 5046  
                                               __ptext171 450C  
                                               __ptext163 88C8  
                                               __ptext155 4A3C  
                                               __ptext147 8A2A  
                                               __ptext139 830E  
                                               __ptext228 9312  
                                               __ptext180 661A  
                                               __ptext172 614E  
                                               __ptext164 28FE  
                                               __ptext156 8E26  
                                               __ptext148 74DE  
                                               __ptext229 92BA  
                                               __ptext181 7C1E  
                                               __ptext173 8360  
                                               __ptext165 5318  
                                               __ptext157 8052  
                                               __ptext149 9284  
                                               __ptext190 92FC  
                                               __ptext182 8EAA  
                                               __ptext174 928E  
                                               __ptext166 350C  
                                               __ptext158 863C  
                                               __ptext191 9300  
                                               __ptext183 91BE  
                                               __ptext175 46DA  
                                               __ptext167 7E16  
                                               __ptext159 7D52  
                                               __ptext192 547C  
                                               __ptext184 9104  
                                               __ptext176 8680  
                                               __ptext168 9176  
                                               __ptext193 8162  
                                               __ptext185 92F4  
                                               __ptext177 6050  
                                               __ptext169 69B2  
                                               __ptext194 7788  
                                               __ptext186 92F8  
                                               __ptext178 8D48  
                                               __ptext195 8D70  
                                               __ptext187 856E  
                                               __ptext179 91D8  
                                               __ptext196 7296  
                                               __ptext188 8A5A  
                                               __ptext197 732C  
                                               __ptext189 9016  
                                               __ptext198 8452  
                                               __ptext199 8ECA  
                                       _EncryptFRMPayload 4BCC  
                                                ?___lldiv 0060  
                            RADIO_FSKPacketSent@timeOnAir 00E7  
                                                ?___ftmul 0071  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0060  
                           __size_of_ExecuteRxTimingSetup 0028  
                                                ?___fttol 0080  
                                         ??_AESEncodeLoRa 0081  
                SelectChannelForTransmission@channelIndex 00BD  
                         __end_of_PrepareJoinRequestFrame 4BCC  
                                                ?___lwmod 00A8  
                                         ?_ADC_Initialize 0001  
                                      ?_SwTimersInterrupt 0080  
                               _RADIO_SetChannelFrequency 74DE  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006E  
                               _SetCallbackSoftwareTimers 69B2  
                                      ConfigureRadio@freq 006E  
                                   ??_RADIO_SetModulation 0060  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0D2C  
                                     ??_ValidateFrequency 0064  
                                  __end_of_LORAWAN_TxDone 14DE  
                                      ?_EncryptFRMPayload 0091  
                            ??_INTERRUPT_InterruptManager 0034  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 8E04  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 923E  
                           __end_of_RADIO_SetLoRaSyncWord 9298  
                  IncludeMacCommandsResponse@pBufferIndex 0062  
                              __size_of_SwTimerSetTimeout 0044  
                             ??_LORAWAN_GetMaxPayloadSize 0068  
                          LORAWAN_LinkCheckConfigure@iCtr 00B0  
                        ExecuteRxParamSetupReq@dlSettings 00AE  
                                          _AssemblePacket 1E40  
                                         ?_ConfigureRadio 006E  
                               AssemblePacket@bufferIndex 00D2  
                              ??_INT2_SetInterruptHandler 0062  
                                                _BAUDCON1 000FB8  
                              __end_ofi2_TMR_GetDeltaTime 51B2  
                      _EUSART1_DefaultOverrunErrorHandler 000000  
                                     ??_SwTimersInterrupt 0084  
                                    RADIO_DIO0@dioMapping 00F7  
                                       _DutyCycleCallback 2C48  
                                 InitDefault433Channels@i 006B  
                                    _EUSART1_ErrorHandler 01DE  
                                   __end_of_TMR_SwapTimer 849C  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 009F  
                                 _EUSART1_SetErrorHandler 9220  
                                 __end_ofi2_TMR_SwapTimer 874C  
                                 __size_of_EncKeySchedule 02A4  
                                      AssemblePacket@mhdr 00CF  
                                      AssemblePacket@port 00C7  
                               __size_of_RADIO_ReadRandom 00A4  
                                ConfigureRadioRx@dataRate 0077  
                                      _RADIO_ReceiveStart 3EDA  
                                          __size_of_srand 0010  
                                __end_of_LORAWAN_Mainloop 888C  
                                          __size_of_putch 000E  
                                   ?_RADIO_SetFSKSyncWord 006B  
                                    _INTERRUPT_Initialize 92F0  
                                           _SwTimerCreate 7452  
                          __end_of_InitDefault868Channels 75F2  
                     IncludeMacCommandsResponse@macBuffer 0060  
                                 _TMR5_HasOverflowOccured 91CC  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0060  
                                           _TMR1_CallBack 8EEA  
                               __end_of_ValidateFrequency 7D52  
                                        _SwTimerIsRunning 8C7C  
                                        _ExecuteLinkCheck 8998  
                                    i2SwTimersInterrupt@i 0031  
                                                _INT1_ISR 92BA  
                                _LORAWAN_SetDeviceAddress 9030  
                                                _INT2_ISR 92B2  
                                       EncKeySchedule@key 0060  
                                          ___wmul@product 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 9284  
                 EUSART1_SetErrorHandler@interruptHandler 0060  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF61  
                                   ?_RADIO_WriteFrequency 006D  
                               ?_INT1_SetInterruptHandler 0060  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 0044  
                                     ?_RADIO_ReceiveStart 00B1  
                                        _SwTimerReadValue 880E  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle 82BA  
                                         _HALDIO5PinValue 91D8  
                                    RADIO_DIO1@dioMapping 00CC  
                               __end_of_SwTimersInterrupt 5F50  
                                __size_of_TMR1_WriteTimer 0020  
                     __size_of_INTERRUPT_InterruptManager 0076  
                              __end_of_DIO2_ISR_Lora_Init 9146  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0093  
                                        GenerateSubkey@k2 0095  
                                    ConfigureRadioRx@freq 0073  
                               __end_of_EncryptFRMPayload 4D58  
                                                _PIR5bits 000F7E  
                          __size_of_RADIO_WriteFSKBitRate 0068  
                                UpdateReceiveDelays@delay 0066  
                               LORAWAN_RxDone@bufferIndex 00E6  
                                  __size_of_UpdateTxPower 000A  
                           __end_of_RADIO_WriteFSKBitRate 7C1E  
                                    ConfigureRadioTx@freq 0073  
                             UpdateDataRange@dataRangeNew 0060  
                                __size_of_TMR5_Initialize 001E  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 00B0  
                                               _rxPayload 0104  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 614E  
                           EncryptFRMPayload@bufferLength 0093  
                                 ValidateDataRange@result 0062  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0060  
              ValidateChannelId@allowedForDefaultChannels 0060  
                           __size_of_FindSmallestDataRate 00DE  
                                                _TMR1_ISR 90CC  
                                ConfigureRadioTx@dataRate 0077  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0060  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 0462  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 00A8  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 874C  
                         __size_of_SetReceptionNotOkState 007E  
                                  __end_of_AssemblePacket 21F0  
                                         ?_LORAWAN_RxDone 01D9  
                                         ?_LORAWAN_TxDone 00BB  
                                       ??_TMR1_Initialize 0062  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 0066  
                                      _DIO1_ISR_Lora_Init 9146  
                               __end_of_DutyCycleCallback 2F4E  
                                       ___wmul@multiplier 0060  
                                        __size_of_AESCmac 03AA  
                                    ??_RADIO_ReceiveStart 00B3  
                                 ValidateFrequency@result 0064  
                              __end_of_PrepareSessionKeys 70A6  
                                       ?_ConfigureRadioRx 0073  
                                       ?_ConfigureRadioTx 0073  
                                    RADIO_DIO2@dioMapping 007C  
                                      AESEncodeLoRa@block 007D  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 5AE0  
                 RADIO_SetSpreadingFactor@spreadingFactor 0060  
                                      ??_ConfigureRadioRx 0077  
                                      ??_ConfigureRadioTx 0077  
                                    ??_RADIO_SetBandwidth 0060  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0060  
                                        ?_RADIO_WriteMode 0065  
                               LORAWAN_RxDone@computedMic 00EA  
                                       ___lmul@multiplier 009A  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 6AA4  
                                               copy_data1 6AC4  
                                               copy_data2 6AE4  
                                               copy_data3 6B04  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                             __end_of_RADIO_SetIQInverted 925C  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 8266  
                                             _RADIO_Reset 856E  
                                     ExecuteLinkCheck@ptr 0060  
                          i2SwTimersInterrupt@timeElapsed 0029  
                                      _RADIO_RegisterRead 8D48  
                                __size_of_ValidateTxPower 002A  
                                 ??_StopAllSoftwareTimers 0061  
                                          _StartReTxTimer 4D58  
                             __end_ofi2_SwTimersInterrupt 6050  
                               _LORAWAN_GetMaxPayloadSize 7E78  
                              LORAWAN_RxDone@extractedMic 00E2  
                                             AESCmac@flag 01D5  
                           EncryptFRMPayload@frameCounter 0095  
                                      CheckMcastFlags@hdr 0060  
                                             AESCmac@size 00BF  
                                SwTimerSetTimeout@timerId 0075  
                                SwTimerSetTimeout@timeout 006D  
                                   RADIO_WriteMode@opMode 006B  
                                ??_ExecuteRxParamSetupReq 00A8  
                     __size_of_LORAWAN_LinkCheckConfigure 015E  
                                       ??_CCP5_Initialize 0060  
                                        ___abdiv@quotient 0065  
                 UpdateReceiveWindow2Parameters@frequency 0060  
                                    RADIO_DIO3@dioMapping 0066  
                                    _LORAWAN_SetDeviceEui 8B16  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 8A8A  
                  ValidateChannelMaskCntl@channelMaskCntl 0061  
                                       i2_TMR1_WriteTimer 8FE0  
                                               memcpy@tmp 0066  
              LORAWAN_SetApplicationEui@applicationEuiNew 006B  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0062  
                                    ??_DIO1_ISR_Lora_Init 0062  
                                       _ADC_GetConversion 88FE  
                                __size_of_CheckMcastFlags 0082  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0064  
                              __size_of_ValidateDataRange 0046  
                               _ticksToScheduledInterrupt 0054  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0064  
                            ValidateDataRange@dataRateMin 0065  
                              __size_of_ValidateChannelId 0024  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0066  
                                 ??_OSCILLATOR_Initialize 0060  
                                      ?_ADC_GetConversion 0060  
                                       ?_ValidateDataRate 0001  
                                        __size_of___awdiv 0086  
                                      _ComputeSessionKeys 7702  
                                   __size_of_SwTimerStart 0096  
                                        __size_of___lldiv 0084  
                                        __size_of___ftmul 00F6  
                                        __size_of___llmod 0068  
                                        __size_of___fttol 00F8  
                             __size_of_EUSART1_Initialize 0046  
                                          _applicationEUI 02F5  
                                        __size_of___lwmod 0044  
                                         ?_AssemblePacket 00C7  
                                    AssemblePacket@buffer 00C8  
                                        SwTimersExecute@i 00DE  
                                                ___ftpack 6F4A  
                                          _applicationKey 03D0  
                                      ??_ValidateDataRate 0060  
                                                ___lltoft 7F38  
                                _TMR1_SetInterruptHandler 91E4  
                                  _IOCB4_InterruptHandler 01E8  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 9104  
        __size_of_ResetParametersForConfirmedTransmission 0012  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0060  
                 _ResetParametersForConfirmedTransmission 90F2  
                                   _TMR1_InterruptHandler 01E4  
                               ??_EUSART1_SetErrorHandler 0062  
                                        ??_GenerateSubkey 0097  
                             _EUSART1_DefaultErrorHandler 000000  
                                     ??_ADC_GetConversion 0062  
                                        _CountfOptsLength 6D14  
                                              _HALSPISend 91BE  
                                     ?_ComputeSessionKeys 0091  
                                          _rxWindowOffset FF49  
                      RADIO_UnhandledInterrupt@modulation 0064  
                              __end_of_MacExecuteCommands 3244  
                                __size_of_TMR5_StartTimer 0006  
                                    ??_RADIO_RegisterRead 0062  
                                    RADIO_DIO4@dioMapping 0067  
                        __end_of_RADIO_UnhandledInterrupt 8998  
                                           _UpdateTxPower 922A  
                                    RADIO_Transmit@buffer 00B1  
                         __end_of_RADIO_FHSSChangeChannel 880E  
                                         _allocatedTimers 00F9  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus 90CC  
                                       ?i2_TMR1_ReadTimer 0001  
                               ??_TMR5_HasOverflowOccured 0060  
                                      _DIO5_ISR_Lora_Init 9304  
                                                __ptext10 8ABA  
                                                __ptext11 8F8A  
                                                __ptext20 9304  
                                                __ptext12 8BFC  
                                                __ptext21 9306  
                                                __ptext13 91A2  
                                              _T1GCONbits 000FCC  
                                                __ptext30 9202  
                                                __ptext22 9308  
                                                __ptext14 8266  
                                                __ptext31 849C  
                                                __ptext23 9136  
                                                __ptext15 91B0  
                                                __ptext40 8B44  
                                                __ptext32 920C  
                                                __ptext24 91EE  
                                                __ptext16 8DE2  
                                                __ptext41 8B72  
                                                __ptext33 9216  
                                                __ptext25 9146  
                                                __ptext17 9126  
                                                __ptext50 6DDE  
                                                __ptext42 8BA0  
                                                __ptext34 9220  
                                                __ptext26 9156  
                                                __ptext18 91E4  
                                                __ptext51 6B6A  
                                                __ptext43 884E  
                                                __ptext35 9166  
                                                __ptext27 92F0  
                                                __ptext19 92AA  
                                                __ptext60 8404  
                                                __ptext52 84E2  
                                                __ptext44 670A  
                                                __ptext36 9078  
                                                __ptext28 8C28  
                                                __ptext61 8BCE  
                                                __ptext53 888C  
                                                __ptext45 2C48  
                                                __ptext37 8AE8  
                                                __ptext29 91F8  
                                                __ptext70 0086  
                                                __ptext62 87CE  
                                                __ptext54 798A  
                                                __ptext46 5874  
                                                __ptext38 8B16  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 7A02  
                                                __ptext63 73C2  
                                                __ptext55 90E0  
                                                __ptext47 8D98  
                                                __ptext39 9030  
                                                __ptext80 874C  
                                                __ptext72 8FA8  
                                                __ptext64 8966  
                                                __ptext56 8CD0  
                                                __ptext48 5D30  
                                                __ptext81 8D20  
                                                __ptext73 431E  
                                                __ptext65 5C0A  
                                                __ptext57 8934  
                                                __ptext49 4EDA  
                                                __ptext90 55DA  
                                                __ptext82 410A  
                                                __ptext74 4D58  
                                                __ptext66 67F0  
                                                __ptext58 8E04  
                                                __ptext91 80AE  
                                                __ptext83 9048  
                                                __ptext75 788E  
                                                __ptext67 7C86  
                                                __ptext59 81BA  
                                                __ptext92 8DBE  
                                                __ptext84 908E  
                                                __ptext76 89FA  
                                                __ptext68 6E96  
                                                __ptext93 8998  
                                                __ptext85 3A32  
                                                __ptext77 930A  
                                                __ptext69 259A  
                                                __ptext94 3244  
                                                __ptext86 7CEC  
                                                __ptext78 2F4E  
                                                __ptext95 8C52  
                                                __ptext87 8528  
                                                __ptext79 8CF8  
                                                __ptext96 9060  
                                                __ptext88 85B4  
                                                __ptext97 8E6A  
                                                __ptext89 85F8  
                                                __ptext98 7F96  
                                                __ptext99 922A  
                                 ExecuteRxTimingSetup@ptr 0067  
                                  ??_RADIO_SetFSKSyncWord 006D  
                                   ??_UpdateReceiveDelays 0066  
                                   __end_of_LORAWAN_Reset 46DA  
                                  __end_of_StartReTxTimer 4EDA  
                                 ??_UpdateCurrentDataRate 0060  
                                 ??_UpdateChannelIdStatus 0061  
                                __size_of_UpdateDataRange 014E  
                                  _SetReceptionNotOkState 788E  
                                            _SSP2CON1bits 000F6C  
                                     GenerateSubkey@F7103 03A0  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00F0  
                                 __end_of_HALDIO5PinValue 91E4  
                                       ?_UpdateDLSettings 0060  
                                  ConfigureRadio@dataRate 0072  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 0066  
                        __size_of_PrepareJoinRequestFrame 0190  
                                           CheckFlags@hdr 0060  
                                  ??_RADIO_WriteFrequency 0071  
                                   __size_of_UpdateCfList 01EE  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 000A  
                                           __size_of_main 0282  
                                           __size_of_rand 005C  
                                              _T5GCONbits 000F4D  
                                       _RADIO_ReceiveStop 8E8A  
                                      ??_UpdateDLSettings 0061  
                                    _LORAWAN_PlatformInit 8DE2  
                                         _FskSyncWordBuff FFD6  
                                      ??_ValidateRxOffset 0060  
                               __end_ofi2_TMR1_WriteTimer 8FFC  
               IncludeMacCommandsResponse@bIncludeInFopts 0064  
                                                _humidity 010C  
                                    ??_ComputeSessionKeys 0093  
                                   ?_LORAWAN_SetDeviceEui 006B  
                               __end_of_ADC_GetConversion 8934  
                                           _timerOverflow 0047  
                                            _SwTimerStart 7296  
                              __size_of_SwTimersInterrupt 0102  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0060  
                                    RADIO_DIO5@dioMapping 0066  
                                   RADIO_TxDone@timeOnAir 00E7  
                          ValidateChannelMask@channelMask 0060  
                             __size_of_DIO0_ISR_Lora_Init 0010  
                              __size_of_EncryptFRMPayload 018C  
                                         GenerateSubkey@i 00B8  
                                         GenerateSubkey@l 00A8  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0060  
                                 PrepareSessionKeys@index 0071  
                                __end_of_TMR_GetDeltaTime 4A3C  
                                      SwTimerStop@timerId 0060  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0062  
                                                _pressure 010F  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006B  
                                    RADIO_RxDone@irqFlags 00F3  
                             __end_of_ValidateChannelMask 7FF4  
                                           UpdateCfList@i 00AE  
                      __end_of_INTERRUPT_InterruptManager 007E  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 006C  
                             PrepareSessionKeys@networkId 006F  
                                       _RADIO_ReleaseData 92D4  
                                       ??_TMR1_WriteTimer 0062  
                             _EUSART1_FramingErrorHandler 01E2  
                                              _RADIO_DIO0 73C2  
                                              _RADIO_DIO1 8404  
                                              _RADIO_DIO2 81BA  
                                              _RADIO_DIO3 8E04  
                                              _RADIO_DIO4 8934  
                                              _RADIO_DIO5 8CD0  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0060  
                    __end_of_INT1_DefaultInterruptHandler 9316  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 9314  
                       __size_of_RADIO_WriteConfiguration 0500  
                                  __end_of_rxWindowOffset FF51  
                             i2TMR1_ReadTimer@readValHigh 0007  
                                       ??_TMR5_Initialize 0060  
                              __size_of_DutyCycleCallback 0306  
                                 EncryptFRMPayload@buffer 0091  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 00A6  
                                      __end_of_modulation FF49  
                                              _RADIO_Init 46DA  
                         ExecuteRxParamSetupReq@frequency 00AA  
                                __size_of_UpdateFrequency 0044  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 011F  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 0078  
                                __end_of_HALSPICSDeassert 92F8  
                                __size_of_UpdateDutyCycle 0044  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0060  
                                                memcpy@s1 0062  
                                          _EncKeySchedule 350C  
                      __size_of_SetCallbackSoftwareTimers 00DE  
                                 __size_of_RxJoinResponse 0002  
                                         ??_SwTimerCreate 0060  
                                     ExecuteDutyCycle@ptr 0060  
                                            _UpdateCfList 431E  
                                     ??_RADIO_ReleaseData 0060  
                                  ??_INTERRUPT_Initialize 0060  
                                                memset@p1 0060  
                                         ??_TMR1_CallBack 0034  
                                    __size_of_SwTimerStop 0028  
                                        _RADIO_ReadRandom 71F2  
                                      _EXT_INT_Initialize 8C28  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 732C  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 00B1  
                               __end_of_RADIO_ReceiveStop 8EAA  
                                         _SwTimersExecute 670A  
                     SwTimerSetCallback@callbackParameter 0062  
                                             FillSubKey@i 0067  
                           RADIO_WriteFrequency@frequency 006D  
                                        ___lwmod@dividend 00A8  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0060  
                                __end_of_ExecuteDevStatus 9248  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels433 FF82  
                                      _DefaultChannels868 FFAC  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0064  
                  __end_of_EUSART1_SetOverrunErrorHandler 9216  
                 __size_of_EUSART1_SetOverrunErrorHandler 000A  
                          _EUSART1_SetOverrunErrorHandler 920C  
                                UpdateDutyCycle@channelId 0062  
                                              _RCSTA1bits 000FAB  
                                  GenerateSubkey@const_Rb 0098  
                         __size_of_ExecuteRxParamSetupReq 0214  
                                        ??_ADC_Initialize 0060  
                               UpdateJoinInProgress@state 0060  
                                       ??_ValidateTxPower 0060  
                                     _LORAWAN_TxDone$1666 00C9  
                                     _LORAWAN_TxDone$1667 00CD  
                                     _LORAWAN_TxDone$5616 00D6  
                      __end_of_LORAWAN_LinkCheckConfigure 55DA  
                               __end_of_RADIO_ReleaseData 92DA  
                              _LORAWAN_LinkCheckConfigure 547C  
                                      __end_of_txPower433 FF7C  
                                __size_of_EnableChannels1 006C  
                                      __end_of_txPower868 FF82  
                                                printf@ap 0064  
                                   _HALResetPinMakeOutput 92FC  
                                ??_HALResetPinOutputValue 0060  
                                  __size_of_INT1_CallBack 0020  
                               RADIO_WriteConfiguration@i 00AB  
                               ExecuteRxTimingSetup@delay 0069  
                                        AESEncodeLoRa@key 007F  
                               __size_of_SetJoinFailState 0030  
                        LORAWAN_LinkCheckConfigure@period 00A6  
                                        ??_ConfigureRadio 0072  
          EUSART1_SetFramingErrorHandler@interruptHandler 0060  
                                      _SwTimerSetCallback 8680  
             __end_of_UpdateRetransmissionAckTimeoutState 7A74  
            __size_of_UpdateRetransmissionAckTimeoutState 0072  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 009A  
                     _UpdateRetransmissionAckTimeoutState 7A02  
                                       RADIO_ReadRandom@i 0071  
                            SearchAvailableChannel@result 00B7  
                                   RADIO_WritePower@paDac 0065  
                                  __size_of_INT2_CallBack 0020  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                  __size_of_EUSART1_Write 000E  
                                      _eusart1RxLastError 011B  
                                   __end_of_DIO0_ISR_Lora 92EC  
                                __end_of_SwTimerIsRunning 8CA6  
                                       ??_CheckMcastFlags 0062  
                                __end_of_ExecuteLinkCheck 89CA  
                                   RADIO_WritePower@power 0066  
                                        _RADIO_TxDone$789 00EB  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 0067  
                                    ??_EXT_INT_Initialize 0062  
                                             _temperature 0112  
                            RADIO_SetFSKSyncWord@syncWord 006B  
                                            _rxWindowSize FF59  
                                  __end_of_EncKeySchedule 37B0  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 92E6  
                                     ?_SwTimerSetCallback 0060  
                                __end_of_SwTimerReadValue 884E  
                                        ___lldiv@quotient 0068  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 830E  
                                         ___lwmod@divisor 00AA  
                  __end_of_UpdateReceiveWindow2Parameters 90A4  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 908E  
                                 UpdateTxPower@txPowerNew 0060  
                                         ___lwmod@counter 00AC  
                         _LORAWAN_LinkCheckConfigure$2492 00AC  
                        __end_of_INT1_SetInterruptHandler 920C  
                            FindSmallestDataRate@dataRate 0063  
                           LORAWAN_Join@activationTypeNew 00DD  
                                   __size_of_TMR_ISR_lora 0056  
                              ??_LORAWAN_SetDeviceAddress 0064  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 92E0  
                                    _SystemBlockingWaitMs 8A5A  
                                   FindSmallestDataRate@i 0062  
                      ComputeSessionKeys@joinAcceptBuffer 0091  
                                 __size_of_EnableChannels 001C  
                            __end_of_UpdateJoinInProgress 9016  
                            __end_of_ExecuteRxTimingSetup 8D20  
                                 __size_of_HALSPICSAssert 0004  
                                 __end_of_FskSyncWordBuff FFD9  
                      __size_of_LORAWAN_SetApplicationEui 002E  
                __end_of_RADIO_WriteFSKFrequencyDeviation 7BB6  
               __size_of_RADIO_WriteFSKFrequencyDeviation 006A  
                      ??_RADIO_WriteFSKFrequencyDeviation 0071  
                       ?_RADIO_WriteFSKFrequencyDeviation 006D  
                        _RADIO_WriteFSKFrequencyDeviation 7B4C  
                      __size_of_LORAWAN_SetApplicationKey 002E  
                __end_of_LORAWAN_SetApplicationSessionKey 8B72  
               __size_of_LORAWAN_SetApplicationSessionKey 002E  
                      ??_LORAWAN_SetApplicationSessionKey 006D  
                       ?_LORAWAN_SetApplicationSessionKey 006B  
                        _LORAWAN_SetApplicationSessionKey 8B44  
                                        ExtractMic@buffer 006B  
                              ?_LORAWAN_SetApplicationEui 006B  
                                 ??_RADIO_FSKPayloadReady 00F3  
                                UpdateDataRange@channelId 0062  
                              ?_LORAWAN_SetApplicationKey 006B  
                                       ??_TMR5_StartTimer 0060  
                                _RADIO_UnhandledInterrupt 8966  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 82BA  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 8ECA  
                                 __size_of_ExecuteLinkAdr 02C8  
                            RADIO_WriteFSKBitRate@bitRate 006D  
                                      i2_TMR_GetDeltaTime 5046  
                                         RADIO_SetCRC@crc 0060  
                                       __CFG_FOSC$INTIO67 000000  
                                  ??_LORAWAN_SetDeviceEui 006D  
                                         _PIN_MANAGER_IOC 9298  
                                     RADIO_WritePower@ocp 0064  
                                      ??_LORAWAN_Mainloop 00F9  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0063  
                              __size_of_ADC_GetConversion 0036  
                                       ??_UpdateDataRange 0061  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 8BFC  
                        RADIO_WriteConfiguration@regValue 00B0  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 0121  
                                           ExtractMic@mic 0073  
                                       _LORAWAN_RxTimeout 259A  
                             __end_of_RADIO_SetModulation 927A  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 003C  
                                        ??_LORAWAN_RxDone 00DA  
                                     ?i2_TMR_GetDeltaTime 0009  
