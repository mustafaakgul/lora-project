

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Oct 03 10:31:54 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    16                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    26                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    27                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	text0,global,reloc=2,class=CODE,delta=1
    33                           	psect	text1,global,reloc=2,class=CODE,delta=1
    34                           	psect	text2,global,reloc=2,class=CODE,delta=1
    35                           	psect	text3,global,reloc=2,class=CODE,delta=1
    36                           	psect	text4,global,reloc=2,class=CODE,delta=1
    37                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text6,global,reloc=2,class=CODE,delta=1
    39                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text17,global,reloc=2,class=CODE,delta=1
    50                           	psect	text18,global,reloc=2,class=CODE,delta=1
    51                           	psect	text19,global,reloc=2,class=CODE,delta=1
    52                           	psect	text20,global,reloc=2,class=CODE,delta=1
    53                           	psect	text21,global,reloc=2,class=CODE,delta=1
    54                           	psect	text22,global,reloc=2,class=CODE,delta=1
    55                           	psect	text23,global,reloc=2,class=CODE,delta=1
    56                           	psect	text24,global,reloc=2,class=CODE,delta=1
    57                           	psect	text25,global,reloc=2,class=CODE,delta=1
    58                           	psect	text26,global,reloc=2,class=CODE,delta=1
    59                           	psect	text27,global,reloc=2,class=CODE,delta=1
    60                           	psect	text28,global,reloc=2,class=CODE,delta=1
    61                           	psect	text29,global,reloc=2,class=CODE,delta=1
    62                           	psect	text30,global,reloc=2,class=CODE,delta=1
    63                           	psect	text31,global,reloc=2,class=CODE,delta=1
    64                           	psect	text32,global,reloc=2,class=CODE,delta=1
    65                           	psect	text33,global,reloc=2,class=CODE,delta=1
    66                           	psect	text34,global,reloc=2,class=CODE,delta=1
    67                           	psect	text35,global,reloc=2,class=CODE,delta=1
    68                           	psect	text36,global,reloc=2,class=CODE,delta=1
    69                           	psect	text37,global,reloc=2,class=CODE,delta=1
    70                           	psect	text38,global,reloc=2,class=CODE,delta=1
    71                           	psect	text39,global,reloc=2,class=CODE,delta=1
    72                           	psect	text40,global,reloc=2,class=CODE,delta=1
    73                           	psect	text41,global,reloc=2,class=CODE,delta=1,inline
    74                           	psect	text42,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text43,global,reloc=2,class=CODE,delta=1
    76                           	psect	text44,global,reloc=2,class=CODE,delta=1
    77                           	psect	text45,global,reloc=2,class=CODE,delta=1
    78                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text49,global,reloc=2,class=CODE,delta=1
    82                           	psect	text50,global,reloc=2,class=CODE,delta=1
    83                           	psect	text51,global,reloc=2,class=CODE,delta=1
    84                           	psect	text52,global,reloc=2,class=CODE,delta=1
    85                           	psect	text53,global,reloc=2,class=CODE,delta=1
    86                           	psect	text54,global,reloc=2,class=CODE,delta=1
    87                           	psect	text55,global,reloc=2,class=CODE,delta=1
    88                           	psect	text56,global,reloc=2,class=CODE,delta=1
    89                           	psect	text57,global,reloc=2,class=CODE,delta=1
    90                           	psect	text58,global,reloc=2,class=CODE,delta=1
    91                           	psect	text59,global,reloc=2,class=CODE,delta=1
    92                           	psect	text60,global,reloc=2,class=CODE,delta=1
    93                           	psect	text61,global,reloc=2,class=CODE,delta=1
    94                           	psect	text62,global,reloc=2,class=CODE,delta=1
    95                           	psect	text63,global,reloc=2,class=CODE,delta=1
    96                           	psect	text64,global,reloc=2,class=CODE,delta=1
    97                           	psect	text65,global,reloc=2,class=CODE,delta=1
    98                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text73,global,reloc=2,class=CODE,delta=1
   106                           	psect	text74,global,reloc=2,class=CODE,delta=1
   107                           	psect	text75,global,reloc=2,class=CODE,delta=1
   108                           	psect	text76,global,reloc=2,class=CODE,delta=1
   109                           	psect	text77,global,reloc=2,class=CODE,delta=1
   110                           	psect	text78,global,reloc=2,class=CODE,delta=1
   111                           	psect	text79,global,reloc=2,class=CODE,delta=1
   112                           	psect	text80,global,reloc=2,class=CODE,delta=1
   113                           	psect	text81,global,reloc=2,class=CODE,delta=1
   114                           	psect	text82,global,reloc=2,class=CODE,delta=1
   115                           	psect	text83,global,reloc=2,class=CODE,delta=1
   116                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   117                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   118                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text88,global,reloc=2,class=CODE,delta=1
   121                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   123                           	psect	text91,global,reloc=2,class=CODE,delta=1
   124                           	psect	text92,global,reloc=2,class=CODE,delta=1
   125                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text94,global,reloc=2,class=CODE,delta=1
   127                           	psect	text95,global,reloc=2,class=CODE,delta=1
   128                           	psect	text96,global,reloc=2,class=CODE,delta=1
   129                           	psect	text97,global,reloc=2,class=CODE,delta=1
   130                           	psect	text98,global,reloc=2,class=CODE,delta=1
   131                           	psect	text99,global,reloc=2,class=CODE,delta=1
   132                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text103,global,reloc=2,class=CODE,delta=1
   136                           	psect	text104,global,reloc=2,class=CODE,delta=1
   137                           	psect	text105,global,reloc=2,class=CODE,delta=1
   138                           	psect	text106,global,reloc=2,class=CODE,delta=1
   139                           	psect	text107,global,reloc=2,class=CODE,delta=1
   140                           	psect	text108,global,reloc=2,class=CODE,delta=1
   141                           	psect	text109,global,reloc=2,class=CODE,delta=1
   142                           	psect	text110,global,reloc=2,class=CODE,delta=1
   143                           	psect	text111,global,reloc=2,class=CODE,delta=1
   144                           	psect	text112,global,reloc=2,class=CODE,delta=1
   145                           	psect	text113,global,reloc=2,class=CODE,delta=1
   146                           	psect	text114,global,reloc=2,class=CODE,delta=1
   147                           	psect	text115,global,reloc=2,class=CODE,delta=1
   148                           	psect	text116,global,reloc=2,class=CODE,delta=1
   149                           	psect	text117,global,reloc=2,class=CODE,delta=1
   150                           	psect	text118,global,reloc=2,class=CODE,delta=1
   151                           	psect	text119,global,reloc=2,class=CODE,delta=1
   152                           	psect	text120,global,reloc=2,class=CODE,delta=1
   153                           	psect	text121,global,reloc=2,class=CODE,delta=1
   154                           	psect	text122,global,reloc=2,class=CODE,delta=1
   155                           	psect	text123,global,reloc=2,class=CODE,delta=1
   156                           	psect	text124,global,reloc=2,class=CODE,delta=1
   157                           	psect	text125,global,reloc=2,class=CODE,delta=1
   158                           	psect	text126,global,reloc=2,class=CODE,delta=1
   159                           	psect	text127,global,reloc=2,class=CODE,delta=1
   160                           	psect	text128,global,reloc=2,class=CODE,delta=1
   161                           	psect	text129,global,reloc=2,class=CODE,delta=1
   162                           	psect	text130,global,reloc=2,class=CODE,delta=1
   163                           	psect	text131,global,reloc=2,class=CODE,delta=1
   164                           	psect	text132,global,reloc=2,class=CODE,delta=1
   165                           	psect	text133,global,reloc=2,class=CODE,delta=1
   166                           	psect	text134,global,reloc=2,class=CODE,delta=1
   167                           	psect	text135,global,reloc=2,class=CODE,delta=1
   168                           	psect	text136,global,reloc=2,class=CODE,delta=1
   169                           	psect	text137,global,reloc=2,class=CODE,delta=1
   170                           	psect	text138,global,reloc=2,class=CODE,delta=1
   171                           	psect	text139,global,reloc=2,class=CODE,delta=1
   172                           	psect	text140,global,reloc=2,class=CODE,delta=1
   173                           	psect	text141,global,reloc=2,class=CODE,delta=1
   174                           	psect	text142,global,reloc=2,class=CODE,delta=1
   175                           	psect	text143,global,reloc=2,class=CODE,delta=1
   176                           	psect	text144,global,reloc=2,class=CODE,delta=1
   177                           	psect	text145,global,reloc=2,class=CODE,delta=1
   178                           	psect	text146,global,reloc=2,class=CODE,delta=1
   179                           	psect	text147,global,reloc=2,class=CODE,delta=1
   180                           	psect	text148,global,reloc=2,class=CODE,delta=1
   181                           	psect	text149,global,reloc=2,class=CODE,delta=1
   182                           	psect	text150,global,reloc=2,class=CODE,delta=1
   183                           	psect	text151,global,reloc=2,class=CODE,delta=1
   184                           	psect	text152,global,reloc=2,class=CODE,delta=1
   185                           	psect	text153,global,reloc=2,class=CODE,delta=1
   186                           	psect	text154,global,reloc=2,class=CODE,delta=1
   187                           	psect	text155,global,reloc=2,class=CODE,delta=1
   188                           	psect	text156,global,reloc=2,class=CODE,delta=1
   189                           	psect	text157,global,reloc=2,class=CODE,delta=1
   190                           	psect	text158,global,reloc=2,class=CODE,delta=1
   191                           	psect	text159,global,reloc=2,class=CODE,delta=1
   192                           	psect	text160,global,reloc=2,class=CODE,delta=1
   193                           	psect	text161,global,reloc=2,class=CODE,delta=1
   194                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=1
   195                           	psect	text163,global,reloc=2,class=CODE,delta=1
   196                           	psect	text164,global,reloc=2,class=CODE,delta=1
   197                           	psect	text165,global,reloc=2,class=CODE,delta=1
   198                           	psect	text166,global,reloc=2,class=CODE,delta=1
   199                           	psect	text167,global,reloc=2,class=CODE,delta=1
   200                           	psect	text168,global,reloc=2,class=CODE,delta=1
   201                           	psect	text169,global,reloc=2,class=CODE,delta=1
   202                           	psect	text170,global,reloc=2,class=CODE,delta=1
   203                           	psect	text171,global,reloc=2,class=CODE,delta=1
   204                           	psect	text172,global,reloc=2,class=CODE,delta=1
   205                           	psect	text173,global,reloc=2,class=CODE,delta=1
   206                           	psect	text174,global,reloc=2,class=CODE,delta=1
   207                           	psect	text175,global,reloc=2,class=CODE,delta=1
   208                           	psect	text176,global,reloc=2,class=CODE,delta=1,group=1
   209                           	psect	text177,global,reloc=2,class=CODE,delta=1
   210                           	psect	text178,global,reloc=2,class=CODE,delta=1
   211                           	psect	text179,global,reloc=2,class=CODE,delta=1
   212                           	psect	text180,global,reloc=2,class=CODE,delta=1
   213                           	psect	text181,global,reloc=2,class=CODE,delta=1
   214                           	psect	text182,global,reloc=2,class=CODE,delta=1
   215                           	psect	text183,global,reloc=2,class=CODE,delta=1
   216                           	psect	text184,global,reloc=2,class=CODE,delta=1
   217                           	psect	text185,global,reloc=2,class=CODE,delta=1
   218                           	psect	text186,global,reloc=2,class=CODE,delta=1
   219                           	psect	text187,global,reloc=2,class=CODE,delta=1
   220                           	psect	text188,global,reloc=2,class=CODE,delta=1
   221                           	psect	text189,global,reloc=2,class=CODE,delta=1
   222                           	psect	text190,global,reloc=2,class=CODE,delta=1
   223                           	psect	text191,global,reloc=2,class=CODE,delta=1
   224                           	psect	text192,global,reloc=2,class=CODE,delta=1
   225                           	psect	text193,global,reloc=2,class=CODE,delta=1
   226                           	psect	text194,global,reloc=2,class=CODE,delta=1
   227                           	psect	text195,global,reloc=2,class=CODE,delta=1
   228                           	psect	text196,global,reloc=2,class=CODE,delta=1
   229                           	psect	text197,global,reloc=2,class=CODE,delta=1
   230                           	psect	text198,global,reloc=2,class=CODE,delta=1
   231                           	psect	text199,global,reloc=2,class=CODE,delta=1
   232                           	psect	text200,global,reloc=2,class=CODE,delta=1
   233                           	psect	text201,global,reloc=2,class=CODE,delta=1
   234                           	psect	text202,global,reloc=2,class=CODE,delta=1
   235                           	psect	text203,global,reloc=2,class=CODE,delta=1
   236                           	psect	text204,global,reloc=2,class=CODE,delta=1
   237                           	psect	text205,global,reloc=2,class=CODE,delta=1
   238                           	psect	text206,global,reloc=2,class=CODE,delta=1
   239                           	psect	text207,global,reloc=2,class=CODE,delta=1
   240                           	psect	text208,global,reloc=2,class=CODE,delta=1,group=1
   241                           	psect	text209,global,reloc=2,class=CODE,delta=1
   242                           	psect	text210,global,reloc=2,class=CODE,delta=1
   243                           	psect	text211,global,reloc=2,class=CODE,delta=1
   244                           	psect	text212,global,reloc=2,class=CODE,delta=1
   245                           	psect	text213,global,reloc=2,class=CODE,delta=1
   246                           	psect	text214,global,reloc=2,class=CODE,delta=1
   247                           	psect	text215,global,reloc=2,class=CODE,delta=1
   248                           	psect	text216,global,reloc=2,class=CODE,delta=1
   249                           	psect	text217,global,reloc=2,class=CODE,delta=1
   250                           	psect	text218,global,reloc=2,class=CODE,delta=1
   251                           	psect	text219,global,reloc=2,class=CODE,delta=1
   252                           	psect	text220,global,reloc=2,class=CODE,delta=1
   253                           	psect	text221,global,reloc=2,class=CODE,delta=1
   254                           	psect	text222,global,reloc=2,class=CODE,delta=1
   255                           	psect	text223,global,reloc=2,class=CODE,delta=1
   256                           	psect	text224,global,reloc=2,class=CODE,delta=1
   257                           	psect	text225,global,reloc=2,class=CODE,delta=1
   258                           	psect	text226,global,reloc=2,class=CODE,delta=1
   259                           	psect	text227,global,reloc=2,class=CODE,delta=1
   260                           	psect	text228,global,reloc=2,class=CODE,delta=1
   261                           	psect	text229,global,reloc=2,class=CODE,delta=1
   262                           	psect	text230,global,reloc=2,class=CODE,delta=1
   263                           	psect	text231,global,reloc=2,class=CODE,delta=1
   264                           	psect	text232,global,reloc=2,class=CODE,delta=1
   265                           	psect	text233,global,reloc=2,class=CODE,delta=1
   266                           	psect	text234,global,reloc=2,class=CODE,delta=1
   267                           	psect	text235,global,reloc=2,class=CODE,delta=1
   268                           	psect	text236,global,reloc=2,class=CODE,delta=1
   269                           	psect	text237,global,reloc=2,class=CODE,delta=1
   270                           	psect	text238,global,reloc=2,class=CODE,delta=1
   271                           	psect	text239,global,reloc=2,class=CODE,delta=1
   272                           	psect	text240,global,reloc=2,class=CODE,delta=1
   273                           	psect	text241,global,reloc=2,class=CODE,delta=1
   274                           	psect	text242,global,reloc=2,class=CODE,delta=1
   275                           	psect	text243,global,reloc=2,class=CODE,delta=1
   276                           	psect	text244,global,reloc=2,class=CODE,delta=1
   277                           	psect	text245,global,reloc=2,class=CODE,delta=1
   278                           	psect	text246,global,reloc=2,class=CODE,delta=1
   279                           	psect	text247,global,reloc=2,class=CODE,delta=1
   280                           	psect	text248,global,reloc=2,class=CODE,delta=1
   281                           	psect	text249,global,reloc=2,class=CODE,delta=1
   282                           	psect	text250,global,reloc=2,class=CODE,delta=1
   283                           	psect	text251,global,reloc=2,class=CODE,delta=1
   284                           	psect	text252,global,reloc=2,class=CODE,delta=1,group=1
   285                           	psect	text253,global,reloc=2,class=CODE,delta=1,group=1
   286                           	psect	text254,global,reloc=2,class=CODE,delta=1
   287                           	psect	text255,global,reloc=2,class=CODE,delta=1
   288                           	psect	text256,global,reloc=2,class=CODE,delta=1
   289                           	psect	text257,global,reloc=2,class=CODE,delta=1
   290                           	psect	text258,global,reloc=2,class=CODE,delta=1
   291                           	psect	text259,global,reloc=2,class=CODE,delta=1
   292                           	psect	text260,global,reloc=2,class=CODE,delta=1
   293                           	psect	text261,global,reloc=2,class=CODE,delta=1
   294                           	psect	text262,global,reloc=2,class=CODE,delta=1
   295                           	psect	text263,global,reloc=2,class=CODE,delta=1,group=1
   296                           	psect	text264,global,reloc=2,class=CODE,delta=1
   297                           	psect	text265,global,reloc=2,class=CODE,delta=1
   298                           	psect	text266,global,reloc=2,class=CODE,delta=1
   299                           	psect	text267,global,reloc=2,class=CODE,delta=1
   300                           	psect	text268,global,reloc=2,class=CODE,delta=1
   301                           	psect	text269,global,reloc=2,class=CODE,delta=1
   302                           	psect	text270,global,reloc=2,class=CODE,delta=1
   303                           	psect	text271,global,reloc=2,class=CODE,delta=1
   304                           	psect	text272,global,reloc=2,class=CODE,delta=1
   305                           	psect	text273,global,reloc=2,class=CODE,delta=1
   306                           	psect	text274,global,reloc=2,class=CODE,delta=1
   307                           	psect	text275,global,reloc=2,class=CODE,delta=1
   308                           	psect	text276,global,reloc=2,class=CODE,delta=1,group=1
   309                           	psect	text277,global,reloc=2,class=CODE,delta=1
   310                           	psect	text278,global,reloc=2,class=CODE,delta=1
   311                           	psect	text279,global,reloc=2,class=CODE,delta=1
   312                           	psect	text280,global,reloc=2,class=CODE,delta=1
   313                           	psect	text281,global,reloc=2,class=CODE,delta=1
   314                           	psect	text282,global,reloc=2,class=CODE,delta=1
   315                           	psect	text283,global,reloc=2,class=CODE,delta=1
   316                           	psect	text284,global,reloc=2,class=CODE,delta=1
   317                           	psect	text285,global,reloc=2,class=CODE,delta=1
   318                           	psect	text286,global,reloc=2,class=CODE,delta=1
   319                           	psect	text287,global,reloc=2,class=CODE,delta=1
   320                           	psect	text288,global,reloc=2,class=CODE,delta=1,group=1
   321                           	psect	text289,global,reloc=2,class=CODE,delta=1,group=1
   322                           	psect	text290,global,reloc=2,class=CODE,delta=1
   323                           	psect	text291,global,reloc=2,class=CODE,delta=1
   324                           	psect	text292,global,reloc=2,class=CODE,delta=1
   325                           	psect	text293,global,reloc=2,class=CODE,delta=1
   326                           	psect	text294,global,reloc=2,class=CODE,delta=1
   327                           	psect	text295,global,reloc=2,class=CODE,delta=1
   328                           	psect	text296,global,reloc=2,class=CODE,delta=1
   329                           	psect	text297,global,reloc=2,class=CODE,delta=1
   330                           	psect	text298,global,reloc=2,class=CODE,delta=1
   331                           	psect	text299,global,reloc=2,class=CODE,delta=1
   332                           	psect	text300,global,reloc=2,class=CODE,delta=1
   333                           	psect	text301,global,reloc=2,class=CODE,delta=1,group=1
   334                           	psect	text302,global,reloc=2,class=CODE,delta=1,group=1
   335                           	psect	text303,global,reloc=2,class=CODE,delta=1
   336                           	psect	text304,global,reloc=2,class=CODE,delta=1
   337                           	psect	text305,global,reloc=2,class=CODE,delta=1
   338                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   339                           	psect	text307,global,reloc=2,class=CODE,delta=1
   340                           	psect	text308,global,reloc=2,class=CODE,delta=1
   341                           	psect	text309,global,reloc=2,class=CODE,delta=1
   342                           	psect	text310,global,reloc=2,class=CODE,delta=1
   343                           	psect	text311,global,reloc=2,class=CODE,delta=1
   344                           	psect	text312,global,reloc=2,class=CODE,delta=1
   345                           	psect	text313,global,reloc=2,class=CODE,delta=1
   346                           	psect	text314,global,reloc=2,class=CODE,delta=1
   347                           	psect	text315,global,reloc=2,class=CODE,delta=1
   348                           	psect	text316,global,reloc=2,class=CODE,delta=1
   349                           	psect	text317,global,reloc=2,class=CODE,delta=1
   350                           	psect	text318,global,reloc=2,class=CODE,delta=1
   351                           	psect	text319,global,reloc=2,class=CODE,delta=1
   352                           	psect	text320,global,reloc=2,class=CODE,delta=1
   353                           	psect	text321,global,reloc=2,class=CODE,delta=1
   354                           	psect	text322,global,reloc=2,class=CODE,delta=1
   355                           	psect	text323,global,reloc=2,class=CODE,delta=1
   356                           	psect	text324,global,reloc=2,class=CODE,delta=1
   357                           	psect	text325,global,reloc=2,class=CODE,delta=1
   358                           	psect	text326,global,reloc=2,class=CODE,delta=1
   359                           	psect	text327,global,reloc=2,class=CODE,delta=1
   360                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   361                           	psect	text328,global,reloc=2,class=CODE,delta=1
   362                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   363                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   364  0000                     
   365                           ; Version 1.45
   366                           ; Generated 16/11/2017 GMT
   367                           ; 
   368                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   369                           ; All rights reserved.
   370                           ; 
   371                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   372                           ; 
   373                           ; Redistribution and use in source and binary forms, with or without modification, are
   374                           ; permitted provided that the following conditions are met:
   375                           ; 
   376                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   377                           ;        conditions and the following disclaimer.
   378                           ; 
   379                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   380                           ;        of conditions and the following disclaimer in the documentation and/or other
   381                           ;        materials provided with the distribution.
   382                           ; 
   383                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   384                           ;        software without specific prior written permission.
   385                           ; 
   386                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   387                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   388                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   389                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   390                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   391                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   392                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   393                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   394                           ; 
   395                           ; 
   396                           ; Code-generator required, PIC18LF46K22 Definitions
   397                           ; 
   398                           ; SFR Addresses
   399  0000                     
   400 ;; Function _i2c_busCollisionISR is unused but had its address taken
   401  0000                     
   402 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   403  0000                     
   404 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   405  0000                     
   406 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   407  0000                     
   408 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   409 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   410 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   411 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   412 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   413 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   414 ;;_LORAWAN_LinkCheckCallback$2906	offset	0
   415 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   416 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   417 ;;_DutyCycleCallback$2252	offset	0
   418 ;;DutyCycleCallback@minim	offset	4
   419 ;;DutyCycleCallback@i	offset	8
   420 ;;DutyCycleCallback@found	offset	9
   421 ;;DutyCycleCallback@param	offset=-1 (param)
   422 ;;AutomaticReplyCallback@param	offset=-1 (param)
   423 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   424 ;;AckRetransmissionCallback@param	offset=-1 (param)
   425 ;;_param	offset=-1 (param)
   426 ;;_UpdateJoinSuccessState$2923	offset	0
   427 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   428                           
   429                           	psect	idataCOMRAM
   430  00C69C                     __pidataCOMRAM:
   431                           	opt stack 0
   432                           
   433                           ;initializer for _ticksToScheduledInterrupt
   434  00C69C  FFFF               	dw	65535
   435  00C69E  FFFF               	dw	65535
   436                           
   437                           	psect	idataBANK1
   438  00C6A0                     __pidataBANK1:
   439                           	opt stack 0
   440                           
   441                           ;initializer for _randx
   442  00C6A0  0001               	dw	1
   443  00C6A2  0000               	dw	0
   444                           
   445                           	psect	idataBANK2
   446  00C6A4                     __pidataBANK2:
   447                           	opt stack 0
   448                           
   449                           ;initializer for _deviceAddr
   450  00C6A4  198B               	dw	6539
   451  00C6A6  2601               	dw	9729
   452                           
   453                           	psect	idataBANK3
   454  00C3FA                     __pidataBANK3:
   455                           	opt stack 0
   456                           
   457                           ;initializer for _applicationEUI
   458  00C3FA  70                 	db	112
   459  00C3FB  B3                 	db	179
   460  00C3FC  D5                 	db	213
   461  00C3FD  7E                 	db	126
   462  00C3FE  D0                 	db	208
   463  00C3FF  00                 	db	0
   464  00C400  B6                 	db	182
   465  00C401  92                 	db	146
   466                           
   467                           ;initializer for _deviceEUI
   468  00C402  00                 	db	0
   469  00C403  09                 	db	9
   470  00C404  50                 	db	80
   471  00C405  DF                 	db	223
   472  00C406  9B                 	db	155
   473  00C407  E2                 	db	226
   474  00C408  73                 	db	115
   475  00C409  3B                 	db	59
   476                           
   477                           	psect	idataBANK4
   478  00BEDE                     __pidataBANK4:
   479                           	opt stack 0
   480                           
   481                           ;initializer for GenerateSubkey@F7103
   482  00BEDE  00                 	db	0
   483  00BEDF  00                 	db	0
   484  00BEE0  00                 	db	0
   485  00BEE1  00                 	db	0
   486  00BEE2  00                 	db	0
   487  00BEE3  00                 	db	0
   488  00BEE4  00                 	db	0
   489  00BEE5  00                 	db	0
   490  00BEE6  00                 	db	0
   491  00BEE7  00                 	db	0
   492  00BEE8  00                 	db	0
   493  00BEE9  00                 	db	0
   494  00BEEA  00                 	db	0
   495  00BEEB  00                 	db	0
   496  00BEEC  00                 	db	0
   497  00BEED  87                 	db	135
   498                           
   499                           ;initializer for _applicationKey
   500  00BEEE  60                 	db	96
   501  00BEEF  86                 	db	134
   502  00BEF0  59                 	db	89
   503  00BEF1  FB                 	db	251
   504  00BEF2  FD                 	db	253
   505  00BEF3  B0                 	db	176
   506  00BEF4  D7                 	db	215
   507  00BEF5  3E                 	db	62
   508  00BEF6  0C                 	db	12
   509  00BEF7  71                 	db	113
   510  00BEF8  85                 	db	133
   511  00BEF9  31                 	db	49
   512  00BEFA  70                 	db	112
   513  00BEFB  8E                 	db	142
   514  00BEFC  7A                 	db	122
   515  00BEFD  8D                 	db	141
   516                           
   517                           	psect	idataBANK5
   518  00BEFE                     __pidataBANK5:
   519                           	opt stack 0
   520                           
   521                           ;initializer for _appSessionKey
   522  00BEFE  77                 	db	119
   523  00BEFF  D1                 	db	209
   524  00BF00  17                 	db	23
   525  00BF01  66                 	db	102
   526  00BF02  E8                 	db	232
   527  00BF03  BD                 	db	189
   528  00BF04  E5                 	db	229
   529  00BF05  D4                 	db	212
   530  00BF06  E0                 	db	224
   531  00BF07  A7                 	db	167
   532  00BF08  E8                 	db	232
   533  00BF09  71                 	db	113
   534  00BF0A  B5                 	db	181
   535  00BF0B  6E                 	db	110
   536  00BF0C  57                 	db	87
   537  00BF0D  9C                 	db	156
   538                           
   539                           ;initializer for _nwkSessionKey
   540  00BF0E  1A                 	db	26
   541  00BF0F  BB                 	db	187
   542  00BF10  89                 	db	137
   543  00BF11  EB                 	db	235
   544  00BF12  2A                 	db	42
   545  00BF13  B0                 	db	176
   546  00BF14  24                 	db	36
   547  00BF15  E4                 	db	228
   548  00BF16  1D                 	db	29
   549  00BF17  CD                 	db	205
   550  00BF18  53                 	db	83
   551  00BF19  2D                 	db	45
   552  00BF1A  74                 	db	116
   553  00BF1B  01                 	db	1
   554  00BF1C  37                 	db	55
   555  00BF1D  E2                 	db	226
   556                           
   557                           	psect	mediumconst
   558  00FCF8                     __pmediumconst:
   559                           	opt stack 0
   560  00FCF8  00                 	db	0
   561  00FCF9                     _STable:
   562                           	opt stack 0
   563  00FCF9  63                 	db	99
   564  00FCFA  7C                 	db	124
   565  00FCFB  77                 	db	119
   566  00FCFC  7B                 	db	123
   567  00FCFD  F2                 	db	242
   568  00FCFE  6B                 	db	107
   569  00FCFF  6F                 	db	111
   570  00FD00  C5                 	db	197
   571  00FD01  30                 	db	48
   572  00FD02  01                 	db	1
   573  00FD03  67                 	db	103
   574  00FD04  2B                 	db	43
   575  00FD05  FE                 	db	254
   576  00FD06  D7                 	db	215
   577  00FD07  AB                 	db	171
   578  00FD08  76                 	db	118
   579  00FD09  CA                 	db	202
   580  00FD0A  82                 	db	130
   581  00FD0B  C9                 	db	201
   582  00FD0C  7D                 	db	125
   583  00FD0D  FA                 	db	250
   584  00FD0E  59                 	db	89
   585  00FD0F  47                 	db	71
   586  00FD10  F0                 	db	240
   587  00FD11  AD                 	db	173
   588  00FD12  D4                 	db	212
   589  00FD13  A2                 	db	162
   590  00FD14  AF                 	db	175
   591  00FD15  9C                 	db	156
   592  00FD16  A4                 	db	164
   593  00FD17  72                 	db	114
   594  00FD18  C0                 	db	192
   595  00FD19  B7                 	db	183
   596  00FD1A  FD                 	db	253
   597  00FD1B  93                 	db	147
   598  00FD1C  26                 	db	38
   599  00FD1D  36                 	db	54
   600  00FD1E  3F                 	db	63
   601  00FD1F  F7                 	db	247
   602  00FD20  CC                 	db	204
   603  00FD21  34                 	db	52
   604  00FD22  A5                 	db	165
   605  00FD23  E5                 	db	229
   606  00FD24  F1                 	db	241
   607  00FD25  71                 	db	113
   608  00FD26  D8                 	db	216
   609  00FD27  31                 	db	49
   610  00FD28  15                 	db	21
   611  00FD29  04                 	db	4
   612  00FD2A  C7                 	db	199
   613  00FD2B  23                 	db	35
   614  00FD2C  C3                 	db	195
   615  00FD2D  18                 	db	24
   616  00FD2E  96                 	db	150
   617  00FD2F  05                 	db	5
   618  00FD30  9A                 	db	154
   619  00FD31  07                 	db	7
   620  00FD32  12                 	db	18
   621  00FD33  80                 	db	128
   622  00FD34  E2                 	db	226
   623  00FD35  EB                 	db	235
   624  00FD36  27                 	db	39
   625  00FD37  B2                 	db	178
   626  00FD38  75                 	db	117
   627  00FD39  09                 	db	9
   628  00FD3A  83                 	db	131
   629  00FD3B  2C                 	db	44
   630  00FD3C  1A                 	db	26
   631  00FD3D  1B                 	db	27
   632  00FD3E  6E                 	db	110
   633  00FD3F  5A                 	db	90
   634  00FD40  A0                 	db	160
   635  00FD41  52                 	db	82
   636  00FD42  3B                 	db	59
   637  00FD43  D6                 	db	214
   638  00FD44  B3                 	db	179
   639  00FD45  29                 	db	41
   640  00FD46  E3                 	db	227
   641  00FD47  2F                 	db	47
   642  00FD48  84                 	db	132
   643  00FD49  53                 	db	83
   644  00FD4A  D1                 	db	209
   645  00FD4B  00                 	db	0
   646  00FD4C  ED                 	db	237
   647  00FD4D  20                 	db	32
   648  00FD4E  FC                 	db	252
   649  00FD4F  B1                 	db	177
   650  00FD50  5B                 	db	91
   651  00FD51  6A                 	db	106
   652  00FD52  CB                 	db	203
   653  00FD53  BE                 	db	190
   654  00FD54  39                 	db	57
   655  00FD55  4A                 	db	74
   656  00FD56  4C                 	db	76
   657  00FD57  58                 	db	88
   658  00FD58  CF                 	db	207
   659  00FD59  D0                 	db	208
   660  00FD5A  EF                 	db	239
   661  00FD5B  AA                 	db	170
   662  00FD5C  FB                 	db	251
   663  00FD5D  43                 	db	67
   664  00FD5E  4D                 	db	77
   665  00FD5F  33                 	db	51
   666  00FD60  85                 	db	133
   667  00FD61  45                 	db	69
   668  00FD62  F9                 	db	249
   669  00FD63  02                 	db	2
   670  00FD64  7F                 	db	127
   671  00FD65  50                 	db	80
   672  00FD66  3C                 	db	60
   673  00FD67  9F                 	db	159
   674  00FD68  A8                 	db	168
   675  00FD69  51                 	db	81
   676  00FD6A  A3                 	db	163
   677  00FD6B  40                 	db	64
   678  00FD6C  8F                 	db	143
   679  00FD6D  92                 	db	146
   680  00FD6E  9D                 	db	157
   681  00FD6F  38                 	db	56
   682  00FD70  F5                 	db	245
   683  00FD71  BC                 	db	188
   684  00FD72  B6                 	db	182
   685  00FD73  DA                 	db	218
   686  00FD74  21                 	db	33
   687  00FD75  10                 	db	16
   688  00FD76  FF                 	db	255
   689  00FD77  F3                 	db	243
   690  00FD78  D2                 	db	210
   691  00FD79  CD                 	db	205
   692  00FD7A  0C                 	db	12
   693  00FD7B  13                 	db	19
   694  00FD7C  EC                 	db	236
   695  00FD7D  5F                 	db	95
   696  00FD7E  97                 	db	151
   697  00FD7F  44                 	db	68
   698  00FD80  17                 	db	23
   699  00FD81  C4                 	db	196
   700  00FD82  A7                 	db	167
   701  00FD83  7E                 	db	126
   702  00FD84  3D                 	db	61
   703  00FD85  64                 	db	100
   704  00FD86  5D                 	db	93
   705  00FD87  19                 	db	25
   706  00FD88  73                 	db	115
   707  00FD89  60                 	db	96
   708  00FD8A  81                 	db	129
   709  00FD8B  4F                 	db	79
   710  00FD8C  DC                 	db	220
   711  00FD8D  22                 	db	34
   712  00FD8E  2A                 	db	42
   713  00FD8F  90                 	db	144
   714  00FD90  88                 	db	136
   715  00FD91  46                 	db	70
   716  00FD92  EE                 	db	238
   717  00FD93  B8                 	db	184
   718  00FD94  14                 	db	20
   719  00FD95  DE                 	db	222
   720  00FD96  5E                 	db	94
   721  00FD97  0B                 	db	11
   722  00FD98  DB                 	db	219
   723  00FD99  E0                 	db	224
   724  00FD9A  32                 	db	50
   725  00FD9B  3A                 	db	58
   726  00FD9C  0A                 	db	10
   727  00FD9D  49                 	db	73
   728  00FD9E  06                 	db	6
   729  00FD9F  24                 	db	36
   730  00FDA0  5C                 	db	92
   731  00FDA1  C2                 	db	194
   732  00FDA2  D3                 	db	211
   733  00FDA3  AC                 	db	172
   734  00FDA4  62                 	db	98
   735  00FDA5  91                 	db	145
   736  00FDA6  95                 	db	149
   737  00FDA7  E4                 	db	228
   738  00FDA8  79                 	db	121
   739  00FDA9  E7                 	db	231
   740  00FDAA  C8                 	db	200
   741  00FDAB  37                 	db	55
   742  00FDAC  6D                 	db	109
   743  00FDAD  8D                 	db	141
   744  00FDAE  D5                 	db	213
   745  00FDAF  4E                 	db	78
   746  00FDB0  A9                 	db	169
   747  00FDB1  6C                 	db	108
   748  00FDB2  56                 	db	86
   749  00FDB3  F4                 	db	244
   750  00FDB4  EA                 	db	234
   751  00FDB5  65                 	db	101
   752  00FDB6  7A                 	db	122
   753  00FDB7  AE                 	db	174
   754  00FDB8  08                 	db	8
   755  00FDB9  BA                 	db	186
   756  00FDBA  78                 	db	120
   757  00FDBB  25                 	db	37
   758  00FDBC  2E                 	db	46
   759  00FDBD  1C                 	db	28
   760  00FDBE  A6                 	db	166
   761  00FDBF  B4                 	db	180
   762  00FDC0  C6                 	db	198
   763  00FDC1  E8                 	db	232
   764  00FDC2  DD                 	db	221
   765  00FDC3  74                 	db	116
   766  00FDC4  1F                 	db	31
   767  00FDC5  4B                 	db	75
   768  00FDC6  BD                 	db	189
   769  00FDC7  8B                 	db	139
   770  00FDC8  8A                 	db	138
   771  00FDC9  70                 	db	112
   772  00FDCA  3E                 	db	62
   773  00FDCB  B5                 	db	181
   774  00FDCC  66                 	db	102
   775  00FDCD  48                 	db	72
   776  00FDCE  03                 	db	3
   777  00FDCF  F6                 	db	246
   778  00FDD0  0E                 	db	14
   779  00FDD1  61                 	db	97
   780  00FDD2  35                 	db	53
   781  00FDD3  57                 	db	87
   782  00FDD4  B9                 	db	185
   783  00FDD5  86                 	db	134
   784  00FDD6  C1                 	db	193
   785  00FDD7  1D                 	db	29
   786  00FDD8  9E                 	db	158
   787  00FDD9  E1                 	db	225
   788  00FDDA  F8                 	db	248
   789  00FDDB  98                 	db	152
   790  00FDDC  11                 	db	17
   791  00FDDD  69                 	db	105
   792  00FDDE  D9                 	db	217
   793  00FDDF  8E                 	db	142
   794  00FDE0  94                 	db	148
   795  00FDE1  9B                 	db	155
   796  00FDE2  1E                 	db	30
   797  00FDE3  87                 	db	135
   798  00FDE4  E9                 	db	233
   799  00FDE5  CE                 	db	206
   800  00FDE6  55                 	db	85
   801  00FDE7  28                 	db	40
   802  00FDE8  DF                 	db	223
   803  00FDE9  8C                 	db	140
   804  00FDEA  A1                 	db	161
   805  00FDEB  89                 	db	137
   806  00FDEC  0D                 	db	13
   807  00FDED  BF                 	db	191
   808  00FDEE  E6                 	db	230
   809  00FDEF  42                 	db	66
   810  00FDF0  68                 	db	104
   811  00FDF1  41                 	db	65
   812  00FDF2  99                 	db	153
   813  00FDF3  2D                 	db	45
   814  00FDF4  0F                 	db	15
   815  00FDF5  B0                 	db	176
   816  00FDF6  54                 	db	84
   817  00FDF7  BB                 	db	187
   818  00FDF8  16                 	db	22
   819  00FDF9                     __end_of_STable:
   820                           	opt stack 0
   821  00FDF9                     _dpowers:
   822                           	opt stack 0
   823  00FDF9  0001               	dw	1
   824  00FDFB  0000               	dw	0
   825  00FDFD  000A               	dw	10
   826  00FDFF  0000               	dw	0
   827  00FE01  0064               	dw	100
   828  00FE03  0000               	dw	0
   829  00FE05  03E8               	dw	1000
   830  00FE07  0000               	dw	0
   831  00FE09  2710               	dw	10000
   832  00FE0B  0000               	dw	0
   833  00FE0D  86A0               	dw	34464
   834  00FE0F  0001               	dw	1
   835  00FE11  4240               	dw	16960
   836  00FE13  000F               	dw	15
   837  00FE15  9680               	dw	38528
   838  00FE17  0098               	dw	152
   839  00FE19  E100               	dw	57600
   840  00FE1B  05F5               	dw	1525
   841  00FE1D  CA00               	dw	51712
   842  00FE1F  3B9A               	dw	15258
   843  00FE21                     __end_of_dpowers:
   844                           	opt stack 0
   845  00FE21                     __powers_:
   846                           	opt stack 0
   847  00FE21  00                 	db	0
   848  00FE22  80                 	db	128
   849  00FE23  3F                 	db	63
   850  00FE24  00                 	db	0
   851  00FE25  20                 	db	32
   852  00FE26  41                 	db	65
   853  00FE27  00                 	db	0
   854  00FE28  C8                 	db	200
   855  00FE29  42                 	db	66
   856  00FE2A  00                 	db	0
   857  00FE2B  7A                 	db	122
   858  00FE2C  44                 	db	68
   859  00FE2D  40                 	db	64
   860  00FE2E  1C                 	db	28
   861  00FE2F  46                 	db	70
   862  00FE30  50                 	db	80
   863  00FE31  C3                 	db	195
   864  00FE32  47                 	db	71
   865  00FE33  24                 	db	36
   866  00FE34  74                 	db	116
   867  00FE35  49                 	db	73
   868  00FE36  97                 	db	151
   869  00FE37  18                 	db	24
   870  00FE38  4B                 	db	75
   871  00FE39  BC                 	db	188
   872  00FE3A  BE                 	db	190
   873  00FE3B  4C                 	db	76
   874  00FE3C  6B                 	db	107
   875  00FE3D  6E                 	db	110
   876  00FE3E  4E                 	db	78
   877  00FE3F  03                 	db	3
   878  00FE40  15                 	db	21
   879  00FE41  50                 	db	80
   880  00FE42  79                 	db	121
   881  00FE43  AD                 	db	173
   882  00FE44  60                 	db	96
   883  00FE45  F3                 	db	243
   884  00FE46  49                 	db	73
   885  00FE47  71                 	db	113
   886  00FE48                     __end_of__powers_:
   887                           	opt stack 0
   888  00FE48                     __npowers_:
   889                           	opt stack 0
   890  00FE48  00                 	db	0
   891  00FE49  80                 	db	128
   892  00FE4A  3F                 	db	63
   893  00FE4B  CD                 	db	205
   894  00FE4C  CC                 	db	204
   895  00FE4D  3D                 	db	61
   896  00FE4E  D7                 	db	215
   897  00FE4F  23                 	db	35
   898  00FE50  3C                 	db	60
   899  00FE51  12                 	db	18
   900  00FE52  83                 	db	131
   901  00FE53  3A                 	db	58
   902  00FE54  B7                 	db	183
   903  00FE55  D1                 	db	209
   904  00FE56  38                 	db	56
   905  00FE57  C6                 	db	198
   906  00FE58  27                 	db	39
   907  00FE59  37                 	db	55
   908  00FE5A  38                 	db	56
   909  00FE5B  86                 	db	134
   910  00FE5C  35                 	db	53
   911  00FE5D  C0                 	db	192
   912  00FE5E  D6                 	db	214
   913  00FE5F  33                 	db	51
   914  00FE60  CC                 	db	204
   915  00FE61  2B                 	db	43
   916  00FE62  32                 	db	50
   917  00FE63  70                 	db	112
   918  00FE64  89                 	db	137
   919  00FE65  30                 	db	48
   920  00FE66  E7                 	db	231
   921  00FE67  DB                 	db	219
   922  00FE68  2E                 	db	46
   923  00FE69  E5                 	db	229
   924  00FE6A  3C                 	db	60
   925  00FE6B  1E                 	db	30
   926  00FE6C  42                 	db	66
   927  00FE6D  A2                 	db	162
   928  00FE6E  0D                 	db	13
   929  00FE6F                     __end_of__npowers_:
   930                           	opt stack 0
   931  00FE6F                     _fsmStateTable:
   932                           	opt stack 0
   933  00FE6F  0A                 	db	low _do_I2C_IDLE
   934  00FE70  C5                 	db	high _do_I2C_IDLE
   935  00FE71  2A                 	db	low _do_I2C_SEND_ADR_READ
   936  00FE72  C4                 	db	high _do_I2C_SEND_ADR_READ
   937  00FE73  1A                 	db	low _do_I2C_SEND_ADR_WRITE
   938  00FE74  C4                 	db	high _do_I2C_SEND_ADR_WRITE
   939  00FE75  0A                 	db	low _do_I2C_TX
   940  00FE76  9D                 	db	high _do_I2C_TX
   941  00FE77  1E                 	db	low _do_I2C_RX
   942  00FE78  A6                 	db	high _do_I2C_RX
   943  00FE79  FE                 	db	low _do_I2C_RCEN
   944  00FE7A  C4                 	db	high _do_I2C_RCEN
   945  00FE7B  3E                 	db	low _do_I2C_TX_EMPTY
   946  00FE7C  AF                 	db	high _do_I2C_TX_EMPTY
   947  00FE7D  4C                 	db	low _do_I2C_SEND_RESTART_READ
   948  00FE7E  C6                 	db	high _do_I2C_SEND_RESTART_READ
   949  00FE7F  44                 	db	low _do_I2C_SEND_RESTART_WRITE
   950  00FE80  C6                 	db	high _do_I2C_SEND_RESTART_WRITE
   951  00FE81  3C                 	db	low _do_I2C_SEND_RESTART
   952  00FE82  C6                 	db	high _do_I2C_SEND_RESTART
   953  00FE83  34                 	db	low _do_I2C_SEND_STOP
   954  00FE84  C6                 	db	high _do_I2C_SEND_STOP
   955  00FE85  2C                 	db	low _do_I2C_DO_ACK
   956  00FE86  C6                 	db	high _do_I2C_DO_ACK
   957  00FE87  24                 	db	low _do_I2C_DO_NACK_STOP
   958  00FE88  C6                 	db	high _do_I2C_DO_NACK_STOP
   959  00FE89  1C                 	db	low _do_I2C_DO_NACK_RESTART
   960  00FE8A  C6                 	db	high _do_I2C_DO_NACK_RESTART
   961  00FE8B  3A                 	db	low _do_I2C_RESET
   962  00FE8C  C4                 	db	high _do_I2C_RESET
   963  00FE8D  16                 	db	low _do_I2C_DO_ADDRESS_NACK
   964  00FE8E  B4                 	db	high _do_I2C_DO_ADDRESS_NACK
   965  00FE8F                     __end_of_fsmStateTable:
   966                           	opt stack 0
   967  00FE8F                     _modulation:
   968                           	opt stack 0
   969  00FE8F  01                 	db	1
   970  00FE90  01                 	db	1
   971  00FE91  01                 	db	1
   972  00FE92  01                 	db	1
   973  00FE93  01                 	db	1
   974  00FE94  01                 	db	1
   975  00FE95  01                 	db	1
   976  00FE96  00                 	db	0
   977  00FE97                     __end_of_modulation:
   978                           	opt stack 0
   979  00FE97                     _rxWindowOffset:
   980                           	opt stack 0
   981  00FE97  DF                 	db	223
   982  00FE98  CE                 	db	206
   983  00FE99  C6                 	db	198
   984  00FE9A  C2                 	db	194
   985  00FE9B  BE                 	db	190
   986  00FE9C  BC                 	db	188
   987  00FE9D  F1                 	db	241
   988  00FE9E  FE                 	db	254
   989  00FE9F                     __end_of_rxWindowOffset:
   990                           	opt stack 0
   991  00FE9F                     _maxPayloadSize:
   992                           	opt stack 0
   993  00FE9F  33                 	db	51
   994  00FEA0  33                 	db	51
   995  00FEA1  33                 	db	51
   996  00FEA2  73                 	db	115
   997  00FEA3  F2                 	db	242
   998  00FEA4  F2                 	db	242
   999  00FEA5  F2                 	db	242
  1000  00FEA6  38                 	db	56
  1001  00FEA7                     __end_of_maxPayloadSize:
  1002                           	opt stack 0
  1003  00FEA7                     _rxWindowSize:
  1004                           	opt stack 0
  1005  00FEA7  08                 	db	8
  1006  00FEA8  0A                 	db	10
  1007  00FEA9  0E                 	db	14
  1008  00FEAA  1A                 	db	26
  1009  00FEAB  31                 	db	49
  1010  00FEAC  58                 	db	88
  1011  00FEAD  3C                 	db	60
  1012  00FEAE  08                 	db	8
  1013  00FEAF                     __end_of_rxWindowSize:
  1014                           	opt stack 0
  1015  00FEAF                     _macEndDevCmdReplyLen:
  1016                           	opt stack 0
  1017  00FEAF  01                 	db	1
  1018  00FEB0  02                 	db	2
  1019  00FEB1  01                 	db	1
  1020  00FEB2  02                 	db	2
  1021  00FEB3  03                 	db	3
  1022  00FEB4  02                 	db	2
  1023  00FEB5  01                 	db	1
  1024  00FEB6                     __end_of_macEndDevCmdReplyLen:
  1025                           	opt stack 0
  1026  00FEB6                     _bandwidth:
  1027                           	opt stack 0
  1028  00FEB6  07                 	db	7
  1029  00FEB7  07                 	db	7
  1030  00FEB8  07                 	db	7
  1031  00FEB9  07                 	db	7
  1032  00FEBA  07                 	db	7
  1033  00FEBB  07                 	db	7
  1034  00FEBC  08                 	db	8
  1035  00FEBD                     __end_of_bandwidth:
  1036                           	opt stack 0
  1037  00FEBD                     _spreadingFactor:
  1038                           	opt stack 0
  1039  00FEBD  0C                 	db	12
  1040  00FEBE  0B                 	db	11
  1041  00FEBF  0A                 	db	10
  1042  00FEC0  09                 	db	9
  1043  00FEC1  08                 	db	8
  1044  00FEC2  07                 	db	7
  1045  00FEC3  07                 	db	7
  1046  00FEC4                     __end_of_spreadingFactor:
  1047                           	opt stack 0
  1048  00FEC4  0A                 	db	10
  1049  00FEC5  07                 	db	7
  1050  00FEC6  04                 	db	4
  1051  00FEC7  01                 	db	1
  1052  00FEC8  FE                 	db	254
  1053  00FEC9  FB                 	db	251
  1054  00FECA                     __end_of_txPower433:
  1055                           	opt stack 0
  1056  00FECA                     _txPower868:
  1057                           	opt stack 0
  1058  00FECA  14                 	db	20
  1059  00FECB  0E                 	db	14
  1060  00FECC  0B                 	db	11
  1061  00FECD  08                 	db	8
  1062  00FECE  05                 	db	5
  1063  00FECF  02                 	db	2
  1064  00FED0                     __end_of_txPower868:
  1065                           	opt stack 0
  1066  00FED0                     _DefaultChannels433:
  1067                           	opt stack 0
  1068  00FED0  B9D8               	dw	47576
  1069  00FED2  19D1               	dw	6609
  1070  00FED4  01                 	db	1
  1071  00FED5  50                 	db	80
  1072  00FED6  012E               	dw	302
  1073  00FED8  0000               	dw	0
  1074  00FEDA  0000               	dw	0
  1075  00FEDC  01                 	db	1
  1076  00FEDD  FF                 	db	255
  1077  00FEDE  C718               	dw	50968
  1078  00FEE0  19D4               	dw	6612
  1079  00FEE2  01                 	db	1
  1080  00FEE3  50                 	db	80
  1081  00FEE4  012E               	dw	302
  1082  00FEE6  0000               	dw	0
  1083  00FEE8  0000               	dw	0
  1084  00FEEA  01                 	db	1
  1085  00FEEB  FF                 	db	255
  1086  00FEEC  D458               	dw	54360
  1087  00FEEE  19D7               	dw	6615
  1088  00FEF0  01                 	db	1
  1089  00FEF1  50                 	db	80
  1090  00FEF2  012E               	dw	302
  1091  00FEF4  0000               	dw	0
  1092  00FEF6  0000               	dw	0
  1093  00FEF8  01                 	db	1
  1094  00FEF9  FF                 	db	255
  1095  00FEFA                     __end_of_DefaultChannels433:
  1096                           	opt stack 0
  1097  00FEFA                     _DefaultChannels868:
  1098                           	opt stack 0
  1099  00FEFA  27A0               	dw	10144
  1100  00FEFC  33BE               	dw	13246
  1101  00FEFE  01                 	db	1
  1102  00FEFF  50                 	db	80
  1103  00FF00  012E               	dw	302
  1104  00FF02  0000               	dw	0
  1105  00FF04  0000               	dw	0
  1106  00FF06  01                 	db	1
  1107  00FF07  FF                 	db	255
  1108  00FF08  34E0               	dw	13536
  1109  00FF0A  33C1               	dw	13249
  1110  00FF0C  01                 	db	1
  1111  00FF0D  50                 	db	80
  1112  00FF0E  012E               	dw	302
  1113  00FF10  0000               	dw	0
  1114  00FF12  0000               	dw	0
  1115  00FF14  01                 	db	1
  1116  00FF15  FF                 	db	255
  1117  00FF16  4220               	dw	16928
  1118  00FF18  33C4               	dw	13252
  1119  00FF1A  01                 	db	1
  1120  00FF1B  50                 	db	80
  1121  00FF1C  012E               	dw	302
  1122  00FF1E  0000               	dw	0
  1123  00FF20  0000               	dw	0
  1124  00FF22  01                 	db	1
  1125  00FF23  FF                 	db	255
  1126  00FF24                     __end_of_DefaultChannels868:
  1127                           	opt stack 0
  1128  00FF24                     _FskSyncWordBuff:
  1129                           	opt stack 0
  1130  00FF24  C1                 	db	193
  1131  00FF25  94                 	db	148
  1132  00FF26  C1                 	db	193
  1133  00FF27                     __end_of_FskSyncWordBuff:
  1134                           	opt stack 0
  1135  00FF27                     STR_3:
  1136                           
  1137                           ; BSR set to: 1
  1138  00FF27  54                 	db	84	;'T'
  1139  00FF28  65                 	db	101	;'e'
  1140  00FF29  6D                 	db	109	;'m'
  1141  00FF2A  70                 	db	112	;'p'
  1142  00FF2B  65                 	db	101	;'e'
  1143  00FF2C  72                 	db	114	;'r'
  1144  00FF2D  61                 	db	97	;'a'
  1145  00FF2E  74                 	db	116	;'t'
  1146  00FF2F  75                 	db	117	;'u'
  1147  00FF30  72                 	db	114	;'r'
  1148  00FF31  65                 	db	101	;'e'
  1149  00FF32  20                 	db	32
  1150  00FF33  3D                 	db	61	;'='
  1151  00FF34  20                 	db	32
  1152  00FF35  25                 	db	37
  1153  00FF36  33                 	db	51	;'3'
  1154  00FF37  2E                 	db	46
  1155  00FF38  32                 	db	50	;'2'
  1156  00FF39  66                 	db	102	;'f'
  1157  00FF3A  20                 	db	32
  1158  00FF3B  43                 	db	67	;'C'
  1159  00FF3C  20                 	db	32
  1160  00FF3D  7C                 	db	124
  1161  00FF3E  7C                 	db	124
  1162  00FF3F  20                 	db	32
  1163  00FF40  50                 	db	80	;'P'
  1164  00FF41  72                 	db	114	;'r'
  1165  00FF42  65                 	db	101	;'e'
  1166  00FF43  73                 	db	115	;'s'
  1167  00FF44  73                 	db	115	;'s'
  1168  00FF45  75                 	db	117	;'u'
  1169  00FF46  72                 	db	114	;'r'
  1170  00FF47  65                 	db	101	;'e'
  1171  00FF48  20                 	db	32
  1172  00FF49  3D                 	db	61	;'='
  1173  00FF4A  20                 	db	32
  1174  00FF4B  25                 	db	37
  1175  00FF4C  33                 	db	51	;'3'
  1176  00FF4D  2E                 	db	46
  1177  00FF4E  32                 	db	50	;'2'
  1178  00FF4F  66                 	db	102	;'f'
  1179  00FF50  20                 	db	32
  1180  00FF51  6B                 	db	107	;'k'
  1181  00FF52  50                 	db	80	;'P'
  1182  00FF53  61                 	db	97	;'a'
  1183  00FF54  20                 	db	32
  1184  00FF55  7C                 	db	124
  1185  00FF56  7C                 	db	124
  1186  00FF57  20                 	db	32
  1187  00FF58  48                 	db	72	;'H'
  1188  00FF59  75                 	db	117	;'u'
  1189  00FF5A  6D                 	db	109	;'m'
  1190  00FF5B  69                 	db	105	;'i'
  1191  00FF5C  64                 	db	100	;'d'
  1192  00FF5D  69                 	db	105	;'i'
  1193  00FF5E  74                 	db	116	;'t'
  1194  00FF5F  79                 	db	121	;'y'
  1195  00FF60  20                 	db	32
  1196  00FF61  3D                 	db	61	;'='
  1197  00FF62  20                 	db	32
  1198  00FF63  25                 	db	37
  1199  00FF64  33                 	db	51	;'3'
  1200  00FF65  2E                 	db	46
  1201  00FF66  32                 	db	50	;'2'
  1202  00FF67  66                 	db	102	;'f'
  1203  00FF68  20                 	db	32
  1204  00FF69  25                 	db	37
  1205  00FF6A  25                 	db	37
  1206  00FF6B  52                 	db	82	;'R'
  1207  00FF6C  48                 	db	72	;'H'
  1208  00FF6D  20                 	db	32
  1209  00FF6E  7C                 	db	124
  1210  00FF6F  7C                 	db	124
  1211  00FF70  20                 	db	32
  1212  00FF71  56                 	db	86	;'V'
  1213  00FF72  6F                 	db	111	;'o'
  1214  00FF73  6C                 	db	108	;'l'
  1215  00FF74  74                 	db	116	;'t'
  1216  00FF75  61                 	db	97	;'a'
  1217  00FF76  67                 	db	103	;'g'
  1218  00FF77  65                 	db	101	;'e'
  1219  00FF78  20                 	db	32
  1220  00FF79  3D                 	db	61	;'='
  1221  00FF7A  20                 	db	32
  1222  00FF7B  25                 	db	37
  1223  00FF7C  33                 	db	51	;'3'
  1224  00FF7D  2E                 	db	46
  1225  00FF7E  32                 	db	50	;'2'
  1226  00FF7F  66                 	db	102	;'f'
  1227  00FF80  20                 	db	32
  1228  00FF81  56                 	db	86	;'V'
  1229  00FF82  20                 	db	32
  1230  00FF83  0D                 	db	13
  1231  00FF84  00                 	db	0
  1232  00FF85                     
  1233                           ; BSR set to: 1
  1234  00FF85  54                 	db	84	;'T'
  1235  00FF86  65                 	db	101	;'e'
  1236  00FF87  6D                 	db	109	;'m'
  1237  00FF88  70                 	db	112	;'p'
  1238  00FF89  65                 	db	101	;'e'
  1239  00FF8A  72                 	db	114	;'r'
  1240  00FF8B  61                 	db	97	;'a'
  1241  00FF8C  74                 	db	116	;'t'
  1242  00FF8D  75                 	db	117	;'u'
  1243  00FF8E  72                 	db	114	;'r'
  1244  00FF8F  65                 	db	101	;'e'
  1245  00FF90  20                 	db	32
  1246  00FF91  3D                 	db	61	;'='
  1247  00FF92  20                 	db	32
  1248  00FF93  25                 	db	37
  1249  00FF94  33                 	db	51	;'3'
  1250  00FF95  2E                 	db	46
  1251  00FF96  32                 	db	50	;'2'
  1252  00FF97  66                 	db	102	;'f'
  1253  00FF98  20                 	db	32
  1254  00FF99  43                 	db	67	;'C'
  1255  00FF9A  20                 	db	32
  1256  00FF9B  09                 	db	9
  1257  00FF9C  50                 	db	80	;'P'
  1258  00FF9D  72                 	db	114	;'r'
  1259  00FF9E  65                 	db	101	;'e'
  1260  00FF9F  73                 	db	115	;'s'
  1261  00FFA0  73                 	db	115	;'s'
  1262  00FFA1  75                 	db	117	;'u'
  1263  00FFA2  72                 	db	114	;'r'
  1264  00FFA3  65                 	db	101	;'e'
  1265  00FFA4  20                 	db	32
  1266  00FFA5  3D                 	db	61	;'='
  1267  00FFA6  20                 	db	32
  1268  00FFA7  25                 	db	37
  1269  00FFA8  33                 	db	51	;'3'
  1270  00FFA9  2E                 	db	46
  1271  00FFAA  32                 	db	50	;'2'
  1272  00FFAB  66                 	db	102	;'f'
  1273  00FFAC  20                 	db	32
  1274  00FFAD  6B                 	db	107	;'k'
  1275  00FFAE  50                 	db	80	;'P'
  1276  00FFAF  61                 	db	97	;'a'
  1277  00FFB0  20                 	db	32
  1278  00FFB1  09                 	db	9
  1279  00FFB2  48                 	db	72	;'H'
  1280  00FFB3  75                 	db	117	;'u'
  1281  00FFB4  6D                 	db	109	;'m'
  1282  00FFB5  69                 	db	105	;'i'
  1283  00FFB6  64                 	db	100	;'d'
  1284  00FFB7  69                 	db	105	;'i'
  1285  00FFB8  74                 	db	116	;'t'
  1286  00FFB9  79                 	db	121	;'y'
  1287  00FFBA  20                 	db	32
  1288  00FFBB  3D                 	db	61	;'='
  1289  00FFBC  20                 	db	32
  1290  00FFBD  25                 	db	37
  1291  00FFBE  33                 	db	51	;'3'
  1292  00FFBF  2E                 	db	46
  1293  00FFC0  32                 	db	50	;'2'
  1294  00FFC1  66                 	db	102	;'f'
  1295  00FFC2  20                 	db	32
  1296  00FFC3  25                 	db	37
  1297  00FFC4  25                 	db	37
  1298  00FFC5  52                 	db	82	;'R'
  1299  00FFC6  48                 	db	72	;'H'
  1300  00FFC7  20                 	db	32
  1301  00FFC8  0A                 	db	10
  1302  00FFC9  0D                 	db	13
  1303  00FFCA  00                 	db	0
  1304  00FFCB                     STR_5:
  1305                           
  1306                           ; BSR set to: 1
  1307  00FFCB  4F                 	db	79	;'O'
  1308  00FFCC  54                 	db	84	;'T'
  1309  00FFCD  41                 	db	65	;'A'
  1310  00FFCE  41                 	db	65	;'A'
  1311  00FFCF  20                 	db	32
  1312  00FFD0  4A                 	db	74	;'J'
  1313  00FFD1  6F                 	db	111	;'o'
  1314  00FFD2  69                 	db	105	;'i'
  1315  00FFD3  6E                 	db	110	;'n'
  1316  00FFD4  65                 	db	101	;'e'
  1317  00FFD5  64                 	db	100	;'d'
  1318  00FFD6  21                 	db	33
  1319  00FFD7  0D                 	db	13
  1320  00FFD8  00                 	db	0
  1321  00FFD9                     STR_6:
  1322                           
  1323                           ; BSR set to: 1
  1324  00FFD9  41                 	db	65	;'A'
  1325  00FFDA  42                 	db	66	;'B'
  1326  00FFDB  50                 	db	80	;'P'
  1327  00FFDC  20                 	db	32
  1328  00FFDD  4A                 	db	74	;'J'
  1329  00FFDE  6F                 	db	111	;'o'
  1330  00FFDF  69                 	db	105	;'i'
  1331  00FFE0  6E                 	db	110	;'n'
  1332  00FFE1  65                 	db	101	;'e'
  1333  00FFE2  64                 	db	100	;'d'
  1334  00FFE3  21                 	db	33
  1335  00FFE4  0D                 	db	13
  1336  00FFE5  00                 	db	0
  1337  00FFE6                     STR_4:
  1338                           
  1339                           ; BSR set to: 1
  1340  00FFE6  4C                 	db	76	;'L'
  1341  00FFE7  6F                 	db	111	;'o'
  1342  00FFE8  52                 	db	82	;'R'
  1343  00FFE9  41                 	db	65	;'A'
  1344  00FFEA  20                 	db	32
  1345  00FFEB  53                 	db	83	;'S'
  1346  00FFEC  74                 	db	116	;'t'
  1347  00FFED  61                 	db	97	;'a'
  1348  00FFEE  72                 	db	114	;'r'
  1349  00FFEF  74                 	db	116	;'t'
  1350  00FFF0  21                 	db	33
  1351  00FFF1  0D                 	db	13
  1352  00FFF2  00                 	db	0
  1353  00FFF3                     STR_2:
  1354                           
  1355                           ; BSR set to: 1
  1356  00FFF3  49                 	db	73	;'I'
  1357  00FFF4  4E                 	db	78	;'N'
  1358  00FFF5  49                 	db	73	;'I'
  1359  00FFF6  54                 	db	84	;'T'
  1360  00FFF7  20                 	db	32
  1361  00FFF8  44                 	db	68	;'D'
  1362  00FFF9  6F                 	db	111	;'o'
  1363  00FFFA  6E                 	db	110	;'n'
  1364  00FFFB  65                 	db	101	;'e'
  1365  00FFFC  21                 	db	33
  1366  00FFFD  0D                 	db	13
  1367  00FFFE  00                 	db	0
  1368                           
  1369                           ; #config settings
  1370  00FFFF  00                 	db	0	; dummy byte at the end
  1371  0000                     
  1372                           	psect	nvBANK1
  1373  0001F5                     __pnvBANK1:
  1374                           	opt stack 0
  1375  0001F5                     _timer1ReloadVal:
  1376                           	opt stack 0
  1377  0001F5                     	ds	2
  1378  0001F7                     _INT1_InterruptHandler:
  1379                           	opt stack 0
  1380  0001F7                     	ds	2
  1381                           
  1382                           	psect	nvBANK2
  1383  0002FD                     __pnvBANK2:
  1384                           	opt stack 0
  1385  0002FD                     _INT2_InterruptHandler:
  1386                           	opt stack 0
  1387  0002FD                     	ds	2
  1388                           
  1389                           	psect	nvBANK3
  1390  0003F0                     __pnvBANK3:
  1391                           	opt stack 0
  1392  0003F0                     _timer5ReloadVal:
  1393                           	opt stack 0
  1394  0003F0                     	ds	2
  1395  0003F2                     _EUSART1_ErrorHandler:
  1396                           	opt stack 0
  1397  0003F2                     	ds	2
  1398  0003F4                     _EUSART1_OverrunErrorHandler:
  1399                           	opt stack 0
  1400  0003F4                     	ds	2
  1401  0003F6                     _EUSART1_FramingErrorHandler:
  1402                           	opt stack 0
  1403  0003F6                     	ds	2
  1404  0003F8                     _TMR1_InterruptHandler:
  1405                           	opt stack 0
  1406  0003F8                     	ds	2
  1407  0003FA                     _IOCB4_InterruptHandler:
  1408                           	opt stack 0
  1409  0003FA                     	ds	2
  1410  0000                     _TMR5	set	3919
  1411  0000                     _T5GCONbits	set	3917
  1412  0000                     _T5CONbits	set	3918
  1413  0000                     _T5CON	set	3918
  1414  0000                     _TMR5L	set	3919
  1415  0000                     _TMR5H	set	3920
  1416  0000                     _T5GCON	set	3917
  1417  0000                     _CCPR5H	set	3926
  1418  0000                     _CCPR5L	set	3925
  1419  0000                     _CCP5CON	set	3924
  1420  0000                     _ANSELA	set	3896
  1421  0000                     _ANSELE	set	3900
  1422  0000                     _ANSELB	set	3897
  1423  0000                     _ANSELC	set	3898
  1424  0000                     _ANSELD	set	3899
  1425  0000                     _TMR1	set	4046
  1426  0000                     _WDTCONbits	set	4049
  1427  0000                     _PIR2bits	set	4001
  1428  0000                     _SSP1STATbits	set	4039
  1429  0000                     _SSP1MSK	set	4042
  1430  0000                     _SSP1BUF	set	4041
  1431  0000                     _SSP1CON2bits	set	4037
  1432  0000                     _SSP1ADD	set	4040
  1433  0000                     _SSP1CON2	set	4037
  1434  0000                     _SSP1CON1	set	4038
  1435  0000                     _SSP1STAT	set	4039
  1436  0000                     _SSP1CON1bits	set	4038
  1437  0000                     _PIR5bits	set	3966
  1438  0000                     _TXREG1	set	4013
  1439  0000                     _RCREG1	set	4014
  1440  0000                     _RCSTA1bits	set	4011
  1441  0000                     _TXSTA1bits	set	4012
  1442  0000                     _SPBRGH1	set	4016
  1443  0000                     _SPBRG1	set	4015
  1444  0000                     _TXSTA1	set	4012
  1445  0000                     _RCSTA1	set	4011
  1446  0000                     _BAUDCON1	set	4024
  1447  0000                     _ADCON0bits	set	4034
  1448  0000                     _ADRESH	set	4036
  1449  0000                     _ADRESL	set	4035
  1450  0000                     _ADCON2	set	4032
  1451  0000                     _ADCON1	set	4033
  1452  0000                     _ADCON0	set	4034
  1453  0000                     _T1GCONbits	set	4044
  1454  0000                     _T1CONbits	set	4045
  1455  0000                     _T1CON	set	4045
  1456  0000                     _TMR1L	set	4046
  1457  0000                     _TMR1H	set	4047
  1458  0000                     _T1GCON	set	4044
  1459  0000                     _IOCBbits	set	3938
  1460  0000                     _WPUB	set	3937
  1461  0000                     _TRISD	set	3989
  1462  0000                     _TRISC	set	3988
  1463  0000                     _TRISB	set	3987
  1464  0000                     _TRISA	set	3986
  1465  0000                     _TRISE	set	3990
  1466  0000                     _LATC	set	3979
  1467  0000                     _LATB	set	3978
  1468  0000                     _LATA	set	3977
  1469  0000                     _LATD	set	3980
  1470  0000                     _LATE	set	3981
  1471  0000                     _OSCTUNE	set	3995
  1472  0000                     _OSCCON2	set	4050
  1473  0000                     _OSCCON	set	4051
  1474  0000                     _PIR1bits	set	3998
  1475  0000                     _PIE1bits	set	3997
  1476  0000                     _RCONbits	set	4048
  1477  0000                     _INTCON2bits	set	4081
  1478  0000                     _INTCON3bits	set	4080
  1479  0000                     _SSP2STATbits	set	3949
  1480  0000                     _SSP2BUF	set	3951
  1481  0000                     _SSP2CON1bits	set	3948
  1482  0000                     _SSP2ADD	set	3950
  1483  0000                     _SSP2CON1	set	3948
  1484  0000                     _SSP2STAT	set	3949
  1485  0000                     _PORTBbits	set	3969
  1486  0000                     _INTCONbits	set	4082
  1487  0000                     _TMR5IF	set	31729
  1488  0000                     _LATD3	set	31843
  1489  0000                     _LATC2	set	31834
  1490  0000                     _TRISC2	set	31906
  1491                           
  1492                           	psect	cinit
  1493  0084A0                     __pcinit:
  1494                           	opt stack 0
  1495  0084A0                     start_initialization:
  1496                           	opt stack 0
  1497  0084A0                     __initialization:
  1498                           	opt stack 0
  1499                           
  1500                           ; Initialize objects allocated to BANK5 (32 bytes)
  1501                           ; load TBLPTR registers with __pidataBANK5
  1502  0084A0  0EFE               	movlw	low __pidataBANK5
  1503  0084A2  6EF6               	movwf	tblptrl,c
  1504  0084A4  0EBE               	movlw	high __pidataBANK5
  1505  0084A6  6EF7               	movwf	tblptrh,c
  1506  0084A8  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1507  0084AA  6EF8               	movwf	tblptru,c
  1508  0084AC  EE05  F000         	lfsr	0,__pdataBANK5
  1509  0084B0  EE20 F020          	lfsr	2,32
  1510  0084B4                     copy_data0:
  1511  0084B4  0009               	tblrd		*+
  1512  0084B6  CFF5 FFEE          	movff	tablat,postinc0
  1513  0084BA  50DD               	movf	postdec2,w,c
  1514  0084BC  50D9               	movf	fsr2l,w,c
  1515  0084BE  E1FA               	bnz	copy_data0
  1516                           
  1517                           ; Initialize objects allocated to BANK4 (32 bytes)
  1518                           ; load TBLPTR registers with __pidataBANK4
  1519  0084C0  0EDE               	movlw	low __pidataBANK4
  1520  0084C2  6EF6               	movwf	tblptrl,c
  1521  0084C4  0EBE               	movlw	high __pidataBANK4
  1522  0084C6  6EF7               	movwf	tblptrh,c
  1523  0084C8  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1524  0084CA  6EF8               	movwf	tblptru,c
  1525  0084CC  EE04  F0E0         	lfsr	0,__pdataBANK4
  1526  0084D0  EE20 F020          	lfsr	2,32
  1527  0084D4                     copy_data1:
  1528  0084D4  0009               	tblrd		*+
  1529  0084D6  CFF5 FFEE          	movff	tablat,postinc0
  1530  0084DA  50DD               	movf	postdec2,w,c
  1531  0084DC  50D9               	movf	fsr2l,w,c
  1532  0084DE  E1FA               	bnz	copy_data1
  1533                           
  1534                           ; Initialize objects allocated to BANK3 (16 bytes)
  1535                           ; load TBLPTR registers with __pidataBANK3
  1536  0084E0  0EFA               	movlw	low __pidataBANK3
  1537  0084E2  6EF6               	movwf	tblptrl,c
  1538  0084E4  0EC3               	movlw	high __pidataBANK3
  1539  0084E6  6EF7               	movwf	tblptrh,c
  1540  0084E8  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1541  0084EA  6EF8               	movwf	tblptru,c
  1542  0084EC  EE03  F0E0         	lfsr	0,__pdataBANK3
  1543  0084F0  EE20 F010          	lfsr	2,16
  1544  0084F4                     copy_data2:
  1545  0084F4  0009               	tblrd		*+
  1546  0084F6  CFF5 FFEE          	movff	tablat,postinc0
  1547  0084FA  50DD               	movf	postdec2,w,c
  1548  0084FC  50D9               	movf	fsr2l,w,c
  1549  0084FE  E1FA               	bnz	copy_data2
  1550                           
  1551                           ; Initialize objects allocated to BANK2 (4 bytes)
  1552                           ; load TBLPTR registers with __pidataBANK2
  1553  008500  0EA4               	movlw	low __pidataBANK2
  1554  008502  6EF6               	movwf	tblptrl,c
  1555  008504  0EC6               	movlw	high __pidataBANK2
  1556  008506  6EF7               	movwf	tblptrh,c
  1557  008508  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1558  00850A  6EF8               	movwf	tblptru,c
  1559  00850C  EE02  F0F9         	lfsr	0,__pdataBANK2
  1560  008510  EE20 F004          	lfsr	2,4
  1561  008514                     copy_data3:
  1562  008514  0009               	tblrd		*+
  1563  008516  CFF5 FFEE          	movff	tablat,postinc0
  1564  00851A  50DD               	movf	postdec2,w,c
  1565  00851C  50D9               	movf	fsr2l,w,c
  1566  00851E  E1FA               	bnz	copy_data3
  1567                           
  1568                           ; Initialize objects allocated to BANK1 (4 bytes)
  1569                           ; load TBLPTR registers with __pidataBANK1
  1570  008520  0EA0               	movlw	low __pidataBANK1
  1571  008522  6EF6               	movwf	tblptrl,c
  1572  008524  0EC6               	movlw	high __pidataBANK1
  1573  008526  6EF7               	movwf	tblptrh,c
  1574  008528  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1575  00852A  6EF8               	movwf	tblptru,c
  1576  00852C  EE01  F0F9         	lfsr	0,__pdataBANK1
  1577  008530  EE20 F004          	lfsr	2,4
  1578  008534                     copy_data4:
  1579  008534  0009               	tblrd		*+
  1580  008536  CFF5 FFEE          	movff	tablat,postinc0
  1581  00853A  50DD               	movf	postdec2,w,c
  1582  00853C  50D9               	movf	fsr2l,w,c
  1583  00853E  E1FA               	bnz	copy_data4
  1584                           
  1585                           ; Initialize objects allocated to COMRAM (4 bytes)
  1586                           ; load TBLPTR registers with __pidataCOMRAM
  1587  008540  0E9C               	movlw	low __pidataCOMRAM
  1588  008542  6EF6               	movwf	tblptrl,c
  1589  008544  0EC6               	movlw	high __pidataCOMRAM
  1590  008546  6EF7               	movwf	tblptrh,c
  1591  008548  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1592  00854A  6EF8               	movwf	tblptru,c
  1593  00854C  EE00  F054         	lfsr	0,__pdataCOMRAM
  1594  008550  EE20 F004          	lfsr	2,4
  1595  008554                     copy_data5:
  1596  008554  0009               	tblrd		*+
  1597  008556  CFF5 FFEE          	movff	tablat,postinc0
  1598  00855A  50DD               	movf	postdec2,w,c
  1599  00855C  50D9               	movf	fsr2l,w,c
  1600  00855E  E1FA               	bnz	copy_data5
  1601                           
  1602                           ; Clear objects allocated to BIGRAM (542 bytes)
  1603  008560  EE05  F020         	lfsr	0,__pbssBIGRAM
  1604  008564  EE22 F01E          	lfsr	2,542
  1605  008568                     clear_0:
  1606  008568  6AEE               	clrf	postinc0,c
  1607  00856A  50DD               	movf	postdec2,w,c
  1608  00856C  50D9               	movf	fsr2l,w,c
  1609  00856E  E1FC               	bnz	clear_0
  1610  008570  50DA               	movf	fsr2h,w,c
  1611  008572  E1FA               	bnz	clear_0
  1612                           
  1613                           ; Clear objects allocated to BANK4 (224 bytes)
  1614  008574  EE04  F000         	lfsr	0,__pbssBANK4
  1615  008578  0EE0               	movlw	224
  1616  00857A                     clear_1:
  1617  00857A  6AEE               	clrf	postinc0,c
  1618  00857C  06E8               	decf	wreg,f,c
  1619  00857E  E1FD               	bnz	clear_1
  1620                           
  1621                           ; Clear objects allocated to BANK3 (224 bytes)
  1622  008580  EE03  F000         	lfsr	0,__pbssBANK3
  1623  008584  0EE0               	movlw	224
  1624  008586                     clear_2:
  1625  008586  6AEE               	clrf	postinc0,c
  1626  008588  06E8               	decf	wreg,f,c
  1627  00858A  E1FD               	bnz	clear_2
  1628                           
  1629                           ; Clear objects allocated to BANK2 (249 bytes)
  1630  00858C  EE02  F000         	lfsr	0,__pbssBANK2
  1631  008590  0EF9               	movlw	249
  1632  008592                     clear_3:
  1633  008592  6AEE               	clrf	postinc0,c
  1634  008594  06E8               	decf	wreg,f,c
  1635  008596  E1FD               	bnz	clear_3
  1636                           
  1637                           ; Clear objects allocated to BANK1 (140 bytes)
  1638  008598  EE01  F000         	lfsr	0,__pbssBANK1
  1639  00859C  0E8C               	movlw	140
  1640  00859E                     clear_4:
  1641  00859E  6AEE               	clrf	postinc0,c
  1642  0085A0  06E8               	decf	wreg,f,c
  1643  0085A2  E1FD               	bnz	clear_4
  1644                           
  1645                           ; Clear objects allocated to BANK0 (1 bytes)
  1646  0085A4  0100               	movlb	0
  1647  0085A6  6BFF               	clrf	__pbssBANK0& (0+255),b
  1648                           
  1649                           ; Clear objects allocated to COMRAM (12 bytes)
  1650  0085A8  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1651  0085AC  0E0C               	movlw	12
  1652  0085AE                     clear_5:
  1653  0085AE  6AEE               	clrf	postinc0,c
  1654  0085B0  06E8               	decf	wreg,f,c
  1655  0085B2  E1FD               	bnz	clear_5
  1656  0085B4                     end_of_initialization:
  1657                           	opt stack 0
  1658  0085B4                     __end_of__initialization:
  1659                           	opt stack 0
  1660  0085B4  0100               	movlb	0
  1661  0085B6  EF07  F021         	goto	_main	;jump to C main() function
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           postinc0	equ	0xFEE
  1667                           wreg	equ	0xFE8
  1668                           postdec2	equ	0xFDD
  1669                           fsr2h	equ	0xFDA
  1670                           fsr2l	equ	0xFD9
  1671                           
  1672                           	psect	bssCOMRAM
  1673  00003C                     __pbssCOMRAM:
  1674                           	opt stack 0
  1675  00003C                     _ticksAccounted:
  1676                           	opt stack 0
  1677  00003C                     	ds	4
  1678  000040                     _ticksAdded:
  1679                           	opt stack 0
  1680  000040                     	ds	4
  1681  000044                     _reloadVal:
  1682                           	opt stack 0
  1683  000044                     	ds	2
  1684  000046                     __rcon:
  1685                           	opt stack 0
  1686  000046                     	ds	1
  1687  000047                     _timerOverflow:
  1688                           	opt stack 0
  1689  000047                     	ds	1
  1690                           tblptru	equ	0xFF8
  1691                           tblptrh	equ	0xFF7
  1692                           tblptrl	equ	0xFF6
  1693                           tablat	equ	0xFF5
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           postdec2	equ	0xFDD
  1697                           fsr2h	equ	0xFDA
  1698                           fsr2l	equ	0xFD9
  1699                           
  1700                           	psect	dataCOMRAM
  1701  000054                     __pdataCOMRAM:
  1702                           	opt stack 0
  1703  000054                     _ticksToScheduledInterrupt:
  1704                           	opt stack 0
  1705  000054                     	ds	4
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           postinc0	equ	0xFEE
  1711                           wreg	equ	0xFE8
  1712                           postdec2	equ	0xFDD
  1713                           fsr2h	equ	0xFDA
  1714                           fsr2l	equ	0xFD9
  1715                           
  1716                           	psect	bssBANK0
  1717  0000FF                     __pbssBANK0:
  1718                           	opt stack 0
  1719  0000FF                     _allocatedTimers:
  1720                           	opt stack 0
  1721  0000FF                     	ds	1
  1722                           tblptru	equ	0xFF8
  1723                           tblptrh	equ	0xFF7
  1724                           tblptrl	equ	0xFF6
  1725                           tablat	equ	0xFF5
  1726                           postinc0	equ	0xFEE
  1727                           wreg	equ	0xFE8
  1728                           postdec2	equ	0xFDD
  1729                           fsr2h	equ	0xFDA
  1730                           fsr2l	equ	0xFD9
  1731                           
  1732                           	psect	bssBANK1
  1733  000100                     __pbssBANK1:
  1734                           	opt stack 0
  1735  000100                     _t_fine:
  1736                           	opt stack 0
  1737  000100                     	ds	4
  1738  000104                     _adc_H:
  1739                           	opt stack 0
  1740  000104                     	ds	4
  1741  000108                     _adc_T:
  1742                           	opt stack 0
  1743  000108                     	ds	4
  1744  00010C                     _rxPayload:
  1745                           	opt stack 0
  1746  00010C                     	ds	4
  1747  000110                     TMR_GetDeltaTime@retVal:
  1748                           	opt stack 0
  1749  000110                     	ds	4
  1750  000114                     _humidity:
  1751                           	opt stack 0
  1752  000114                     	ds	3
  1753  000117                     _pressure:
  1754                           	opt stack 0
  1755  000117                     	ds	3
  1756  00011A                     _temperature:
  1757                           	opt stack 0
  1758  00011A                     	ds	3
  1759  00011D                     _adcVoltage:
  1760                           	opt stack 0
  1761  00011D                     	ds	3
  1762  000120                     TMR_SwapTimer@retVal:
  1763                           	opt stack 0
  1764  000120                     	ds	2
  1765  000122                     TMR_SwapTimer@oldVal:
  1766                           	opt stack 0
  1767  000122                     	ds	2
  1768  000124                     TMR_GetDeltaTime@tmrVal:
  1769                           	opt stack 0
  1770  000124                     	ds	2
  1771  000126                     _i2c1_driver_i2cISR:
  1772                           	opt stack 0
  1773  000126                     	ds	2
  1774  000128                     _i2c1_driver_busCollisionISR:
  1775                           	opt stack 0
  1776  000128                     	ds	2
  1777  00012A                     _counter:
  1778                           	opt stack 0
  1779  00012A                     	ds	1
  1780  00012B                     _activationMethod:
  1781                           	opt stack 0
  1782  00012B                     	ds	1
  1783  00012C                     _weather_initialized:
  1784                           	opt stack 0
  1785  00012C                     	ds	1
  1786  00012D                     _bme280_status:
  1787                           	opt stack 0
  1788  00012D                     	ds	1
  1789  00012E                     _bme280_ctrl_meas:
  1790                           	opt stack 0
  1791  00012E                     	ds	1
  1792  00012F                     _bme280_ctrl_hum:
  1793                           	opt stack 0
  1794  00012F                     	ds	1
  1795  000130                     _bme280_config:
  1796                           	opt stack 0
  1797  000130                     	ds	1
  1798  000131                     _eusart1RxLastError:
  1799                           	opt stack 0
  1800  000131                     	ds	1
  1801  000132                     _localDioStatus:
  1802                           	opt stack 0
  1803  000132                     	ds	1
  1804  000133                     __roundCounter:
  1805                           	opt stack 0
  1806  000133                     	ds	1
  1807  000134                     _dioStatus:
  1808                           	opt stack 0
  1809  000134                     	ds	1
  1810  000135                     _RadioConfiguration:
  1811                           	opt stack 0
  1812  000135                     	ds	54
  1813  00016B                     _calibParam:
  1814                           	opt stack 0
  1815  00016B                     	ds	33
  1816                           tblptru	equ	0xFF8
  1817                           tblptrh	equ	0xFF7
  1818                           tblptrl	equ	0xFF6
  1819                           tablat	equ	0xFF5
  1820                           postinc0	equ	0xFEE
  1821                           wreg	equ	0xFE8
  1822                           postdec2	equ	0xFDD
  1823                           fsr2h	equ	0xFDA
  1824                           fsr2l	equ	0xFD9
  1825                           
  1826                           	psect	dataBANK1
  1827  0001F9                     __pdataBANK1:
  1828                           	opt stack 0
  1829  0001F9                     _randx:
  1830                           	opt stack 0
  1831  0001F9                     	ds	4
  1832                           tblptru	equ	0xFF8
  1833                           tblptrh	equ	0xFF7
  1834                           tblptrl	equ	0xFF6
  1835                           tablat	equ	0xFF5
  1836                           postinc0	equ	0xFEE
  1837                           wreg	equ	0xFE8
  1838                           postdec2	equ	0xFDD
  1839                           fsr2h	equ	0xFDA
  1840                           fsr2l	equ	0xFD9
  1841                           
  1842                           	psect	bssBANK2
  1843  000200                     __pbssBANK2:
  1844                           	opt stack 0
  1845  000200                     _adc_P:
  1846                           	opt stack 0
  1847  000200                     	ds	4
  1848  000204                     _loRa:
  1849                           	opt stack 0
  1850  000204                     	ds	245
  1851                           tblptru	equ	0xFF8
  1852                           tblptrh	equ	0xFF7
  1853                           tblptrl	equ	0xFF6
  1854                           tablat	equ	0xFF5
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           postdec2	equ	0xFDD
  1858                           fsr2h	equ	0xFDA
  1859                           fsr2l	equ	0xFD9
  1860                           
  1861                           	psect	dataBANK2
  1862  0002F9                     __pdataBANK2:
  1863                           	opt stack 0
  1864  0002F9                     _deviceAddr:
  1865                           	opt stack 0
  1866  0002F9                     	ds	4
  1867                           tblptru	equ	0xFF8
  1868                           tblptrh	equ	0xFF7
  1869                           tblptrl	equ	0xFF6
  1870                           tablat	equ	0xFF5
  1871                           postinc0	equ	0xFEE
  1872                           wreg	equ	0xFE8
  1873                           postdec2	equ	0xFDD
  1874                           fsr2h	equ	0xFDA
  1875                           fsr2l	equ	0xFD9
  1876                           
  1877                           	psect	bssBANK3
  1878  000300                     __pbssBANK3:
  1879                           	opt stack 0
  1880  000300                     _swTimers:
  1881                           	opt stack 0
  1882  000300                     	ds	160
  1883  0003A0                     _i2c_status:
  1884                           	opt stack 0
  1885  0003A0                     	ds	36
  1886  0003C4                     _adcResult:
  1887                           	opt stack 0
  1888  0003C4                     	ds	4
  1889  0003C8                     _aesBuffer:
  1890                           	opt stack 0
  1891  0003C8                     	ds	16
  1892  0003D8                     _data:
  1893                           	opt stack 0
  1894  0003D8                     	ds	8
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           postinc0	equ	0xFEE
  1900                           wreg	equ	0xFE8
  1901                           postdec2	equ	0xFDD
  1902                           fsr2h	equ	0xFDA
  1903                           fsr2l	equ	0xFD9
  1904                           
  1905                           	psect	dataBANK3
  1906  0003E0                     __pdataBANK3:
  1907                           	opt stack 0
  1908  0003E0                     _applicationEUI:
  1909                           	opt stack 0
  1910  0003E0                     	ds	8
  1911  0003E8                     _deviceEUI:
  1912                           	opt stack 0
  1913  0003E8                     	ds	8
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           postdec2	equ	0xFDD
  1921                           fsr2h	equ	0xFDA
  1922                           fsr2l	equ	0xFD9
  1923                           
  1924                           	psect	bssBANK4
  1925  000400                     __pbssBANK4:
  1926                           	opt stack 0
  1927  000400                     _Channels:
  1928                           	opt stack 0
  1929  000400                     	ds	224
  1930                           tblptru	equ	0xFF8
  1931                           tblptrh	equ	0xFF7
  1932                           tblptrl	equ	0xFF6
  1933                           tablat	equ	0xFF5
  1934                           postinc0	equ	0xFEE
  1935                           wreg	equ	0xFE8
  1936                           postdec2	equ	0xFDD
  1937                           fsr2h	equ	0xFDA
  1938                           fsr2l	equ	0xFD9
  1939                           
  1940                           	psect	dataBANK4
  1941  0004E0                     __pdataBANK4:
  1942                           	opt stack 0
  1943  0004E0                     GenerateSubkey@F7103:
  1944                           	opt stack 0
  1945  0004E0                     	ds	16
  1946  0004F0                     _applicationKey:
  1947                           	opt stack 0
  1948  0004F0                     	ds	16
  1949                           tblptru	equ	0xFF8
  1950                           tblptrh	equ	0xFF7
  1951                           tblptrl	equ	0xFF6
  1952                           tablat	equ	0xFF5
  1953                           postinc0	equ	0xFEE
  1954                           wreg	equ	0xFE8
  1955                           postdec2	equ	0xFDD
  1956                           fsr2h	equ	0xFDA
  1957                           fsr2l	equ	0xFD9
  1958                           
  1959                           	psect	dataBANK5
  1960  000500                     __pdataBANK5:
  1961                           	opt stack 0
  1962  000500                     _appSessionKey:
  1963                           	opt stack 0
  1964  000500                     	ds	16
  1965  000510                     _nwkSessionKey:
  1966                           	opt stack 0
  1967  000510                     	ds	16
  1968                           tblptru	equ	0xFF8
  1969                           tblptrh	equ	0xFF7
  1970                           tblptrl	equ	0xFF6
  1971                           tablat	equ	0xFF5
  1972                           postinc0	equ	0xFEE
  1973                           wreg	equ	0xFE8
  1974                           postdec2	equ	0xFDD
  1975                           fsr2h	equ	0xFDA
  1976                           fsr2l	equ	0xFD9
  1977                           
  1978                           	psect	bssBIGRAM
  1979  000520                     __pbssBIGRAM:
  1980                           	opt stack 0
  1981  000520                     _macBuffer:
  1982                           	opt stack 0
  1983  000520                     	ds	271
  1984  00062F                     _radioBuffer:
  1985                           	opt stack 0
  1986  00062F                     	ds	271
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           postinc0	equ	0xFEE
  1992                           wreg	equ	0xFE8
  1993                           postdec2	equ	0xFDD
  1994                           fsr2h	equ	0xFDA
  1995                           fsr2l	equ	0xFD9
  1996                           
  1997                           	psect	cstackBANK1
  1998  00018C                     __pcstackBANK1:
  1999                           	opt stack 0
  2000  00018C                     ?_Weather_getTemperatureDegC:
  2001                           	opt stack 0
  2002  00018C                     ?_Weather_getPressureKPa:
  2003                           	opt stack 0
  2004  00018C                     ?_Weather_getHumidityRH:
  2005                           	opt stack 0
  2006  00018C                     AESCmac@k2:
  2007                           	opt stack 0
  2008                           
  2009                           ; 16 bytes @ 0x0
  2010  00018C                     	ds	3
  2011  00018F                     ?_printf:
  2012                           	opt stack 0
  2013  00018F                     printf@f:
  2014                           	opt stack 0
  2015                           
  2016                           ; 2 bytes @ 0x3
  2017  00018F                     	ds	13
  2018  00019C                     AESCmac@k1:
  2019                           	opt stack 0
  2020                           
  2021                           ; 16 bytes @ 0x10
  2022  00019C                     	ds	1
  2023  00019D                     _printf$7057:
  2024                           	opt stack 0
  2025                           
  2026                           ; 3 bytes @ 0x11
  2027  00019D                     	ds	3
  2028  0001A0                     printf@ap:
  2029                           	opt stack 0
  2030                           
  2031                           ; 2 bytes @ 0x14
  2032  0001A0                     	ds	2
  2033  0001A2                     printf@cp:
  2034                           	opt stack 0
  2035                           
  2036                           ; 2 bytes @ 0x16
  2037  0001A2                     	ds	2
  2038  0001A4                     printf@len:
  2039                           	opt stack 0
  2040                           
  2041                           ; 2 bytes @ 0x18
  2042  0001A4                     	ds	2
  2043  0001A6                     printf@val:
  2044                           	opt stack 0
  2045                           
  2046                           ; 4 bytes @ 0x1A
  2047  0001A6                     	ds	4
  2048  0001AA                     printf@flag:
  2049                           	opt stack 0
  2050                           
  2051                           ; 2 bytes @ 0x1E
  2052  0001AA                     	ds	2
  2053  0001AC                     printf@tmpval:
  2054                           	opt stack 0
  2055  0001AC                     AESCmac@mLast:
  2056                           	opt stack 0
  2057                           
  2058                           ; 16 bytes @ 0x20
  2059  0001AC                     	ds	4
  2060  0001B0                     printf@exp:
  2061                           	opt stack 0
  2062                           
  2063                           ; 2 bytes @ 0x24
  2064  0001B0                     	ds	2
  2065  0001B2                     printf@width:
  2066                           	opt stack 0
  2067                           
  2068                           ; 2 bytes @ 0x26
  2069  0001B2                     	ds	2
  2070  0001B4                     printf@fval:
  2071                           	opt stack 0
  2072                           
  2073                           ; 3 bytes @ 0x28
  2074  0001B4                     	ds	3
  2075  0001B7                     printf@prec:
  2076                           	opt stack 0
  2077                           
  2078                           ; 2 bytes @ 0x2B
  2079  0001B7                     	ds	2
  2080  0001B9                     printf@c:
  2081                           	opt stack 0
  2082                           
  2083                           ; 1 bytes @ 0x2D
  2084  0001B9                     	ds	3
  2085  0001BC                     AESCmac@padded:
  2086                           	opt stack 0
  2087                           
  2088                           ; 16 bytes @ 0x30
  2089  0001BC                     	ds	16
  2090  0001CC                     AESCmac@y:
  2091                           	opt stack 0
  2092                           
  2093                           ; 16 bytes @ 0x40
  2094  0001CC                     	ds	16
  2095  0001DC                     AESCmac@x:
  2096                           	opt stack 0
  2097                           
  2098                           ; 16 bytes @ 0x50
  2099  0001DC                     	ds	16
  2100  0001EC                     AESCmac@ptr:
  2101                           	opt stack 0
  2102                           
  2103                           ; 2 bytes @ 0x60
  2104  0001EC                     	ds	2
  2105  0001EE                     AESCmac@flag:
  2106                           	opt stack 0
  2107                           
  2108                           ; 1 bytes @ 0x62
  2109  0001EE                     	ds	1
  2110  0001EF                     AESCmac@n:
  2111                           	opt stack 0
  2112                           
  2113                           ; 1 bytes @ 0x63
  2114  0001EF                     	ds	1
  2115  0001F0                     AESCmac@j:
  2116                           	opt stack 0
  2117                           
  2118                           ; 1 bytes @ 0x64
  2119  0001F0                     	ds	1
  2120  0001F1                     AESCmac@i:
  2121                           	opt stack 0
  2122                           
  2123                           ; 1 bytes @ 0x65
  2124  0001F1                     	ds	1
  2125  0001F2                     LORAWAN_RxDone@buffer:
  2126                           	opt stack 0
  2127                           
  2128                           ; 2 bytes @ 0x66
  2129  0001F2                     	ds	2
  2130  0001F4                     LORAWAN_RxDone@bufferLength:
  2131                           	opt stack 0
  2132                           
  2133                           ; 1 bytes @ 0x68
  2134  0001F4                     	ds	1
  2135                           tblptru	equ	0xFF8
  2136                           tblptrh	equ	0xFF7
  2137                           tblptrl	equ	0xFF6
  2138                           tablat	equ	0xFF5
  2139                           postinc0	equ	0xFEE
  2140                           wreg	equ	0xFE8
  2141                           postdec2	equ	0xFDD
  2142                           fsr2h	equ	0xFDA
  2143                           fsr2l	equ	0xFD9
  2144                           
  2145                           	psect	cstackBANK0
  2146  000060                     __pcstackBANK0:
  2147                           	opt stack 0
  2148  000060                     ??_mssp1_IRQisEnabled:
  2149  000060                     ??_i2c1_driver_isNACK:
  2150  000060                     ??_UpdateMinMaxChDataRate:
  2151  000060                     ??_FindSmallestDataRate:
  2152  000060                     ??_CountfOptsLength:
  2153  000060                     ??_isdigit:
  2154  000060                     ??_BME280_setStandbyTime:
  2155  000060                     ??_BME280_setFilterCoefficient:
  2156  000060                     ??_BME280_setOversamplingTemperature:
  2157  000060                     ??_BME280_setOversamplingPressure:
  2158  000060                     ?_TMR1_ReadTimer:
  2159                           	opt stack 0
  2160  000060                     ?_ExecuteDutyCycle:
  2161                           	opt stack 0
  2162  000060                     ?_ExecuteDevStatus:
  2163                           	opt stack 0
  2164  000060                     ?_ExecuteLinkCheck:
  2165                           	opt stack 0
  2166  000060                     ?_ADC_GetConversion:
  2167                           	opt stack 0
  2168  000060                     ?___awmod:
  2169                           	opt stack 0
  2170  000060                     ?___ftpack:
  2171                           	opt stack 0
  2172  000060                     ?___ftneg:
  2173                           	opt stack 0
  2174  000060                     ?__tdiv_to_l_:
  2175                           	opt stack 0
  2176  000060                     ?__div_to_l_:
  2177                           	opt stack 0
  2178  000060                     ?_GetRx1Freq:
  2179                           	opt stack 0
  2180  000060                     ?___lldiv:
  2181                           	opt stack 0
  2182  000060                     ?___llmod:
  2183                           	opt stack 0
  2184  000060                     i2c_close@ret:
  2185                           	opt stack 0
  2186  000060                     INTERRUPT_GetDioStatus@a:
  2187                           	opt stack 0
  2188  000060                     HALResetPinOutputValue@value:
  2189                           	opt stack 0
  2190  000060                     SwTimerCreate@retVal:
  2191                           	opt stack 0
  2192  000060                     SwTimerIsRunning@timerId:
  2193                           	opt stack 0
  2194  000060                     SwTimerStop@timerId:
  2195                           	opt stack 0
  2196  000060                     RADIO_SetLoRaSyncWord@syncWord:
  2197                           	opt stack 0
  2198  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  2199                           	opt stack 0
  2200  000060                     RADIO_SetOutputPower@power:
  2201                           	opt stack 0
  2202  000060                     RADIO_SetCRC@crc:
  2203                           	opt stack 0
  2204  000060                     RADIO_SetIQInverted@iqInverted:
  2205                           	opt stack 0
  2206  000060                     RADIO_SetBandwidth@bandwidth:
  2207                           	opt stack 0
  2208  000060                     RADIO_SetModulation@modulation:
  2209                           	opt stack 0
  2210  000060                     ValidateDataRate@dataRate:
  2211                           	opt stack 0
  2212  000060                     ValidateTxPower@result:
  2213                           	opt stack 0
  2214  000060                     UpdateDLSettings@dlRx1DrOffset:
  2215                           	opt stack 0
  2216  000060                     UpdateDataRange@dataRangeNew:
  2217                           	opt stack 0
  2218  000060                     UpdateChannelIdStatus@statusNew:
  2219                           	opt stack 0
  2220  000060                     ValidateRxOffset@rxOffset:
  2221                           	opt stack 0
  2222  000060                     ValidateChannelId@allowedForDefaultChannels:
  2223                           	opt stack 0
  2224  000060                     ValidateChannelMaskCntl@result:
  2225                           	opt stack 0
  2226  000060                     UpdateCurrentDataRate@valueNew:
  2227                           	opt stack 0
  2228  000060                     UpdateTxPower@txPowerNew:
  2229                           	opt stack 0
  2230  000060                     UpdateJoinInProgress@state:
  2231                           	opt stack 0
  2232  000060                     SPI2_Exchange8bit@data:
  2233                           	opt stack 0
  2234  000060                     EUSART1_Write@txData:
  2235                           	opt stack 0
  2236  000060                     BME280_setOversamplingHumidity@osrs_h:
  2237                           	opt stack 0
  2238  000060                     BME280_setSensorMode@mode:
  2239                           	opt stack 0
  2240  000060                     i2c1_driver_TXData@d:
  2241                           	opt stack 0
  2242  000060                     ___abdiv@divisor:
  2243                           	opt stack 0
  2244  000060                     i2c_setBuffer@buffer:
  2245                           	opt stack 0
  2246  000060                     setCallBack@cb:
  2247                           	opt stack 0
  2248  000060                     FillSubKey@source:
  2249                           	opt stack 0
  2250  000060                     SwTimerSetCallback@callback:
  2251                           	opt stack 0
  2252  000060                     EncKeySchedule@key:
  2253                           	opt stack 0
  2254  000060                     EncodeShiftRow@stateTable:
  2255                           	opt stack 0
  2256  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  2257                           	opt stack 0
  2258  000060                     ExecuteDutyCycle@ptr:
  2259                           	opt stack 0
  2260  000060                     ExecuteDevStatus@ptr:
  2261                           	opt stack 0
  2262  000060                     UpdateDutyCycle@dutyCycleNew:
  2263                           	opt stack 0
  2264  000060                     ValidateChannelMask@channelMask:
  2265                           	opt stack 0
  2266  000060                     ExecuteLinkCheck@ptr:
  2267                           	opt stack 0
  2268  000060                     IncludeMacCommandsResponse@macBuffer:
  2269                           	opt stack 0
  2270  000060                     CheckFlags@hdr:
  2271                           	opt stack 0
  2272  000060                     CheckMcastFlags@hdr:
  2273                           	opt stack 0
  2274  000060                     INT1_SetInterruptHandler@InterruptHandler:
  2275                           	opt stack 0
  2276  000060                     INT2_SetInterruptHandler@InterruptHandler:
  2277                           	opt stack 0
  2278  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  2279                           	opt stack 0
  2280  000060                     TMR1_WriteTimer@timerVal:
  2281                           	opt stack 0
  2282  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  2283                           	opt stack 0
  2284  000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2285                           	opt stack 0
  2286  000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2287                           	opt stack 0
  2288  000060                     EUSART1_SetErrorHandler@interruptHandler:
  2289                           	opt stack 0
  2290  000060                     mssp1_waitForEvent@timeout:
  2291                           	opt stack 0
  2292  000060                     i2c1_driver_setBusCollisionISR@handler:
  2293                           	opt stack 0
  2294  000060                     i2c1_driver_setI2cISR@handler:
  2295                           	opt stack 0
  2296  000060                     DELAY_milliseconds@milliseconds:
  2297                           	opt stack 0
  2298  000060                     RxData@pData:
  2299                           	opt stack 0
  2300  000060                     ___awmod@dividend:
  2301                           	opt stack 0
  2302  000060                     memcpy@d1:
  2303                           	opt stack 0
  2304  000060                     memset@p1:
  2305                           	opt stack 0
  2306  000060                     __div_to_l_@f1:
  2307                           	opt stack 0
  2308  000060                     ___ftpack@arg:
  2309                           	opt stack 0
  2310  000060                     __tdiv_to_l_@f1:
  2311                           	opt stack 0
  2312  000060                     ___ftge@ff1:
  2313                           	opt stack 0
  2314  000060                     ___ftneg@f1:
  2315                           	opt stack 0
  2316  000060                     SystemBlockingWaitMs@ms:
  2317                           	opt stack 0
  2318  000060                     RADIO_SetChannelFrequency@frequency:
  2319                           	opt stack 0
  2320  000060                     ValidateFrequency@frequencyNew:
  2321                           	opt stack 0
  2322  000060                     UpdateFrequency@frequencyNew:
  2323                           	opt stack 0
  2324  000060                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  2325                           	opt stack 0
  2326  000060                     UpdateReceiveWindow2Parameters@frequency:
  2327                           	opt stack 0
  2328  000060                     ___lldiv@dividend:
  2329                           	opt stack 0
  2330  000060                     ___llmod@dividend:
  2331                           	opt stack 0
  2332                           
  2333                           ; 4 bytes @ 0x0
  2334  000060                     	ds	1
  2335  000061                     ??_UpdateDataRange:
  2336  000061                     ??_UpdateChannelIdStatus:
  2337  000061                     ??___abdiv:
  2338  000061                     HALSPISend@data:
  2339                           	opt stack 0
  2340  000061                     SwTimerIsRunning@isRunning:
  2341                           	opt stack 0
  2342  000061                     ValidateDataRate@result:
  2343                           	opt stack 0
  2344  000061                     ValidateTxPower@txPowerNew:
  2345                           	opt stack 0
  2346  000061                     UpdateDLSettings@dlRx2Dr:
  2347                           	opt stack 0
  2348  000061                     ValidateRxOffset@result:
  2349                           	opt stack 0
  2350  000061                     ValidateChannelId@result:
  2351                           	opt stack 0
  2352  000061                     ValidateChannelMaskCntl@channelMaskCntl:
  2353                           	opt stack 0
  2354  000061                     UpdateMinMaxChDataRate@i:
  2355                           	opt stack 0
  2356  000061                     FindSmallestDataRate@found:
  2357                           	opt stack 0
  2358  000061                     putch@txData:
  2359                           	opt stack 0
  2360  000061                     BME280_setStandbyTime@sbtime:
  2361                           	opt stack 0
  2362  000061                     BME280_setFilterCoefficient@coeff:
  2363                           	opt stack 0
  2364  000061                     BME280_setOversamplingTemperature@osrs_t:
  2365                           	opt stack 0
  2366  000061                     BME280_setOversamplingPressure@osrs_p:
  2367                           	opt stack 0
  2368  000061                     _isdigit$5855:
  2369                           	opt stack 0
  2370                           
  2371                           ; 1 bytes @ 0x1
  2372  000061                     	ds	1
  2373  000062                     ??_TMR1_ReadTimer:
  2374  000062                     ??_EncKeySchedule:
  2375  000062                     ??_ValidateChannelMask:
  2376  000062                     ??_ExecuteDutyCycle:
  2377  000062                     ??_DELAY_milliseconds:
  2378  000062                     ??_ADC_GetConversion:
  2379  000062                     i2c_open@address:
  2380                           	opt stack 0
  2381  000062                     SwTimerSetCallback@callbackParameter:
  2382                           	opt stack 0
  2383  000062                     EncodeShiftRow@temp:
  2384                           	opt stack 0
  2385  000062                     RADIO_RegisterWrite@value:
  2386                           	opt stack 0
  2387  000062                     RADIO_RegisterRead@reg:
  2388                           	opt stack 0
  2389  000062                     UpdateDataRange@channelId:
  2390                           	opt stack 0
  2391  000062                     UpdateChannelIdStatus@channelId:
  2392                           	opt stack 0
  2393  000062                     ValidateDataRange@result:
  2394                           	opt stack 0
  2395  000062                     ValidateChannelId@channelId:
  2396                           	opt stack 0
  2397  000062                     UpdateDutyCycle@channelId:
  2398                           	opt stack 0
  2399  000062                     FindSmallestDataRate@i:
  2400                           	opt stack 0
  2401  000062                     RxData@dataLength:
  2402                           	opt stack 0
  2403  000062                     isdigit@c:
  2404                           	opt stack 0
  2405  000062                     i2c_setBuffer@bufferSize:
  2406                           	opt stack 0
  2407  000062                     setCallBack@p:
  2408                           	opt stack 0
  2409  000062                     FillSubKey@key:
  2410                           	opt stack 0
  2411  000062                     IncludeMacCommandsResponse@pBufferIndex:
  2412                           	opt stack 0
  2413  000062                     ___awmod@divisor:
  2414                           	opt stack 0
  2415  000062                     memcpy@s1:
  2416                           	opt stack 0
  2417  000062                     memset@c:
  2418                           	opt stack 0
  2419                           
  2420                           ; 2 bytes @ 0x2
  2421  000062                     	ds	1
  2422  000063                     i2c_open@ret:
  2423                           	opt stack 0
  2424  000063                     SwTimerSetCallback@timerId:
  2425                           	opt stack 0
  2426  000063                     RADIO_RegisterWrite@reg:
  2427                           	opt stack 0
  2428  000063                     RADIO_RegisterRead@readValue:
  2429                           	opt stack 0
  2430  000063                     UpdateDataRange@i:
  2431                           	opt stack 0
  2432  000063                     UpdateChannelIdStatus@i:
  2433                           	opt stack 0
  2434  000063                     ValidateDataRange@dataRangeNew:
  2435                           	opt stack 0
  2436  000063                     FindSmallestDataRate@dataRate:
  2437                           	opt stack 0
  2438  000063                     RxData@status:
  2439                           	opt stack 0
  2440  000063                     ___abdiv@counter:
  2441                           	opt stack 0
  2442  000063                     ___ftpack@exp:
  2443                           	opt stack 0
  2444  000063                     __div_to_l_@f2:
  2445                           	opt stack 0
  2446  000063                     __tdiv_to_l_@f2:
  2447                           	opt stack 0
  2448  000063                     ___ftge@ff2:
  2449                           	opt stack 0
  2450                           
  2451                           ; 3 bytes @ 0x3
  2452  000063                     	ds	1
  2453  000064                     ??_SystemBlockingWaitMs:
  2454  000064                     setCallBack@idx:
  2455                           	opt stack 0
  2456  000064                     FillSubKey@size:
  2457                           	opt stack 0
  2458  000064                     RADIO_WritePower@ocp:
  2459                           	opt stack 0
  2460  000064                     RADIO_UnhandledInterrupt@modulation:
  2461                           	opt stack 0
  2462  000064                     LORAWAN_SetChannelIdStatus@statusNew:
  2463                           	opt stack 0
  2464  000064                     ValidateFrequency@result:
  2465                           	opt stack 0
  2466  000064                     ValidateDataRange@dataRateMax:
  2467                           	opt stack 0
  2468  000064                     UpdateFrequency@channelId:
  2469                           	opt stack 0
  2470  000064                     ValidateChannelMask@i:
  2471                           	opt stack 0
  2472  000064                     UpdateReceiveWindow2Parameters@dataRate:
  2473                           	opt stack 0
  2474  000064                     IncludeMacCommandsResponse@bIncludeInFopts:
  2475                           	opt stack 0
  2476  000064                     ADC_GetConversion@channel:
  2477                           	opt stack 0
  2478  000064                     ___abdiv@sign:
  2479                           	opt stack 0
  2480  000064                     ___awmod@counter:
  2481                           	opt stack 0
  2482  000064                     ___ftpack@sign:
  2483                           	opt stack 0
  2484  000064                     _EncKeySchedule$914:
  2485                           	opt stack 0
  2486  000064                     EnableChannels1@channelMask:
  2487                           	opt stack 0
  2488  000064                     TMR1_ReadTimer@readVal:
  2489                           	opt stack 0
  2490  000064                     memcpy@n:
  2491                           	opt stack 0
  2492  000064                     memset@n:
  2493                           	opt stack 0
  2494  000064                     ___lldiv@divisor:
  2495                           	opt stack 0
  2496  000064                     ___llmod@divisor:
  2497                           	opt stack 0
  2498                           
  2499                           ; 4 bytes @ 0x4
  2500  000064                     	ds	1
  2501  000065                     ??_FillSubKey:
  2502  000065                     ??_IncludeMacCommandsResponse:
  2503  000065                     ??___ftpack:
  2504  000065                     ??_RADIO_DIO3:
  2505  000065                     ??_RADIO_DIO4:
  2506  000065                     ??_RADIO_DIO5:
  2507  000065                     RADIO_WriteMode@newModulation:
  2508                           	opt stack 0
  2509  000065                     RADIO_WritePower@paDac:
  2510                           	opt stack 0
  2511  000065                     LORAWAN_SetChannelIdStatus@result:
  2512                           	opt stack 0
  2513  000065                     ExecuteDutyCycle@maxDCycle:
  2514                           	opt stack 0
  2515  000065                     ValidateDataRange@dataRateMin:
  2516                           	opt stack 0
  2517  000065                     ___abdiv@quotient:
  2518                           	opt stack 0
  2519  000065                     ___awmod@sign:
  2520                           	opt stack 0
  2521  000065                     i2c_setDataCompleteCallback@cb:
  2522                           	opt stack 0
  2523  000065                     i2c_setAddressNACKCallback@cb:
  2524                           	opt stack 0
  2525                           
  2526                           ; 2 bytes @ 0x5
  2527  000065                     	ds	1
  2528  000066                     ??__tdiv_to_l_:
  2529  000066                     ??___ftge:
  2530  000066                     ?___awdiv:
  2531                           	opt stack 0
  2532  000066                     FillSubKey@carry:
  2533                           	opt stack 0
  2534  000066                     RADIO_WriteMode@blocking:
  2535                           	opt stack 0
  2536  000066                     RADIO_WritePower@power:
  2537                           	opt stack 0
  2538  000066                     RADIO_DIO3@dioMapping:
  2539                           	opt stack 0
  2540  000066                     RADIO_DIO5@dioMapping:
  2541                           	opt stack 0
  2542  000066                     LORAWAN_SetChannelIdStatus@channelId:
  2543                           	opt stack 0
  2544  000066                     EnableChannels1@channelMaskCntl:
  2545                           	opt stack 0
  2546  000066                     CountfOptsLength@macCommandLength:
  2547                           	opt stack 0
  2548  000066                     TMR1_ReadTimer@readValHigh:
  2549                           	opt stack 0
  2550  000066                     ___abdiv@dividend:
  2551                           	opt stack 0
  2552  000066                     memcpy@tmp:
  2553                           	opt stack 0
  2554  000066                     AESEncode@block:
  2555                           	opt stack 0
  2556  000066                     ___awdiv@dividend:
  2557                           	opt stack 0
  2558  000066                     memset@p:
  2559                           	opt stack 0
  2560  000066                     __div_to_l_@quot:
  2561                           	opt stack 0
  2562                           
  2563                           ; 4 bytes @ 0x6
  2564  000066                     	ds	1
  2565  000067                     FillSubKey@i:
  2566                           	opt stack 0
  2567  000067                     RADIO_WriteMode@currentModulation:
  2568                           	opt stack 0
  2569  000067                     RADIO_DIO4@dioMapping:
  2570                           	opt stack 0
  2571  000067                     EnableChannels1@channelIndexMin:
  2572                           	opt stack 0
  2573  000067                     CountfOptsLength@i:
  2574                           	opt stack 0
  2575  000067                     TMR1_ReadTimer@readValLow:
  2576                           	opt stack 0
  2577  000067                     i2c_setDataCompleteCallback@p:
  2578                           	opt stack 0
  2579  000067                     i2c_setAddressNACKCallback@p:
  2580                           	opt stack 0
  2581  000067                     memcpy@d:
  2582                           	opt stack 0
  2583                           
  2584                           ; 2 bytes @ 0x7
  2585  000067                     	ds	1
  2586  000068                     ??_LORAWAN_GetMaxPayloadSize:
  2587  000068                     ?_TMR_SwapTimer:
  2588                           	opt stack 0
  2589  000068                     ?___lwtoft:
  2590                           	opt stack 0
  2591  000068                     ?_TMR_GetDeltaTime:
  2592                           	opt stack 0
  2593  000068                     RADIO_WriteMode@dioMapping:
  2594                           	opt stack 0
  2595  000068                     EnableChannels1@channelIndexMax:
  2596                           	opt stack 0
  2597  000068                     ___llmod@counter:
  2598                           	opt stack 0
  2599  000068                     TMR_SwapTimer@timerVal:
  2600                           	opt stack 0
  2601  000068                     AESEncode@key:
  2602                           	opt stack 0
  2603  000068                     ___awdiv@divisor:
  2604                           	opt stack 0
  2605  000068                     ___lwtoft@c:
  2606                           	opt stack 0
  2607  000068                     ___lldiv@quotient:
  2608                           	opt stack 0
  2609                           
  2610                           ; 4 bytes @ 0x8
  2611  000068                     	ds	1
  2612  000069                     ??_EnableChannels1:
  2613  000069                     RADIO_WriteMode@currentMode:
  2614                           	opt stack 0
  2615  000069                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  2616                           	opt stack 0
  2617  000069                     wr1RegCompleteHandler@p:
  2618                           	opt stack 0
  2619  000069                     rd1RegCompleteHandler@p:
  2620                           	opt stack 0
  2621  000069                     rd2RegCompleteHandler@p:
  2622                           	opt stack 0
  2623  000069                     wr2RegCompleteHandler@p:
  2624                           	opt stack 0
  2625  000069                     rdBlkRegCompleteHandler@p:
  2626                           	opt stack 0
  2627  000069                     memcpy@s:
  2628                           	opt stack 0
  2629  000069                     __tdiv_to_l_@quot:
  2630                           	opt stack 0
  2631                           
  2632                           ; 4 bytes @ 0x9
  2633  000069                     	ds	1
  2634  00006A                     ??_AESEncode:
  2635  00006A                     RADIO_WriteMode@newMode:
  2636                           	opt stack 0
  2637  00006A                     LORAWAN_GetMaxPayloadSize@result:
  2638                           	opt stack 0
  2639  00006A                     ___awdiv@counter:
  2640                           	opt stack 0
  2641  00006A                     __div_to_l_@cntr:
  2642                           	opt stack 0
  2643  00006A                     TMR_OverrideRemaining@ticksRemaining:
  2644                           	opt stack 0
  2645                           
  2646                           ; 4 bytes @ 0xA
  2647  00006A                     	ds	1
  2648  00006B                     ?_ExtractMic:
  2649                           	opt stack 0
  2650  00006B                     RADIO_WriteMode@opMode:
  2651                           	opt stack 0
  2652  00006B                     InitDefault868Channels@i:
  2653                           	opt stack 0
  2654  00006B                     InitDefault433Channels@i:
  2655                           	opt stack 0
  2656  00006B                     EnableChannels1@i:
  2657                           	opt stack 0
  2658  00006B                     ___awdiv@sign:
  2659                           	opt stack 0
  2660  00006B                     __div_to_l_@exp1:
  2661                           	opt stack 0
  2662  00006B                     _do_I2C_TX$317:
  2663                           	opt stack 0
  2664  00006B                     RADIO_SetFSKSyncWord@syncWord:
  2665                           	opt stack 0
  2666  00006B                     LORAWAN_SetDeviceEui@deviceEuiNew:
  2667                           	opt stack 0
  2668  00006B                     LORAWAN_SetApplicationEui@applicationEuiNew:
  2669                           	opt stack 0
  2670  00006B                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  2671                           	opt stack 0
  2672  00006B                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  2673                           	opt stack 0
  2674  00006B                     LORAWAN_SetApplicationKey@applicationKeyNew:
  2675                           	opt stack 0
  2676  00006B                     PrepareSessionKeys@sessionKey:
  2677                           	opt stack 0
  2678  00006B                     ExtractMic@buffer:
  2679                           	opt stack 0
  2680  00006B                     AssembleEncryptionBlock@frameCounter:
  2681                           	opt stack 0
  2682                           
  2683                           ; 4 bytes @ 0xB
  2684  00006B                     	ds	1
  2685  00006C                     ??_TMR_GetDeltaTime:
  2686  00006C                     ?_RADIO_ReadRandom:
  2687                           	opt stack 0
  2688  00006C                     ___lldiv@counter:
  2689                           	opt stack 0
  2690  00006C                     EnableChannels@channelMask:
  2691                           	opt stack 0
  2692  00006C                     ___awdiv@quotient:
  2693                           	opt stack 0
  2694                           
  2695                           ; 2 bytes @ 0xC
  2696  00006C                     	ds	1
  2697  00006D                     ??_i2c_ISR:
  2698  00006D                     RADIO_SetFSKSyncWord@syncWordLen:
  2699                           	opt stack 0
  2700  00006D                     IncludeMacCommandsResponse@i:
  2701                           	opt stack 0
  2702  00006D                     ExtractMic@bufferLength:
  2703                           	opt stack 0
  2704  00006D                     __tdiv_to_l_@cntr:
  2705                           	opt stack 0
  2706  00006D                     PrepareSessionKeys@appNonce:
  2707                           	opt stack 0
  2708  00006D                     SwTimerSetTimeout@timeout:
  2709                           	opt stack 0
  2710  00006D                     RADIO_WriteFrequency@frequency:
  2711                           	opt stack 0
  2712  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  2713                           	opt stack 0
  2714  00006D                     RADIO_WriteFSKBitRate@bitRate:
  2715                           	opt stack 0
  2716                           
  2717                           ; 4 bytes @ 0xD
  2718  00006D                     	ds	1
  2719  00006E                     ??_TMR_OverrideRemaining:
  2720  00006E                     ??_RADIO_ReadRandom:
  2721  00006E                     ?___wmul:
  2722                           	opt stack 0
  2723  00006E                     EnableChannels@channelMaskCntl:
  2724                           	opt stack 0
  2725  00006E                     IncludeMacCommandsResponse@bufferIndex:
  2726                           	opt stack 0
  2727  00006E                     __tdiv_to_l_@exp1:
  2728                           	opt stack 0
  2729  00006E                     ___wmul@multiplier:
  2730                           	opt stack 0
  2731  00006E                     ConfigureRadio@freq:
  2732                           	opt stack 0
  2733                           
  2734                           ; 4 bytes @ 0xE
  2735  00006E                     	ds	1
  2736  00006F                     ??_ExtractMic:
  2737  00006F                     ?_ExecuteLinkAdr:
  2738                           	opt stack 0
  2739  00006F                     i2c_masterOperation@read:
  2740                           	opt stack 0
  2741  00006F                     AssembleEncryptionBlock@blockId:
  2742                           	opt stack 0
  2743  00006F                     RADIO_ReadRandom@retVal:
  2744                           	opt stack 0
  2745  00006F                     ExecuteLinkAdr@ptr:
  2746                           	opt stack 0
  2747  00006F                     PrepareSessionKeys@networkId:
  2748                           	opt stack 0
  2749                           
  2750                           ; 2 bytes @ 0xF
  2751  00006F                     	ds	1
  2752  000070                     i2c_masterOperation@ret:
  2753                           	opt stack 0
  2754  000070                     AssembleEncryptionBlock@firstByte:
  2755                           	opt stack 0
  2756  000070                     TMR_OverrideRemaining@tmrVal:
  2757                           	opt stack 0
  2758  000070                     ___wmul@multiplicand:
  2759                           	opt stack 0
  2760                           
  2761                           ; 2 bytes @ 0x10
  2762  000070                     	ds	1
  2763  000071                     ??_ExecuteLinkAdr:
  2764  000071                     ??_SwTimerSetTimeout:
  2765  000071                     i2c_write1ByteRegister@reg:
  2766                           	opt stack 0
  2767  000071                     i2c_read1ByteRegister@reg:
  2768                           	opt stack 0
  2769  000071                     i2c_readDataBlock@reg:
  2770                           	opt stack 0
  2771  000071                     RADIO_ReadRandom@i:
  2772                           	opt stack 0
  2773  000071                     PrepareSessionKeys@index:
  2774                           	opt stack 0
  2775  000071                     AssembleEncryptionBlock@multicastStatus:
  2776                           	opt stack 0
  2777  000071                     RADIO_WriteFrequency@num_mod:
  2778                           	opt stack 0
  2779  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  2780                           	opt stack 0
  2781  000071                     RADIO_WriteFSKBitRate@num:
  2782                           	opt stack 0
  2783                           
  2784                           ; 4 bytes @ 0x11
  2785  000071                     	ds	1
  2786  000072                     i2c_write1ByteRegister@data:
  2787                           	opt stack 0
  2788  000072                     i2c_read1ByteRegister@address:
  2789                           	opt stack 0
  2790  000072                     ConfigureRadio@dataRate:
  2791                           	opt stack 0
  2792  000072                     AssembleEncryptionBlock@dir:
  2793                           	opt stack 0
  2794  000072                     i2c_readDataBlock@data:
  2795                           	opt stack 0
  2796  000072                     TMR_OverrideRemaining@oldReloadVal:
  2797                           	opt stack 0
  2798  000072                     _AESEncode$909:
  2799                           	opt stack 0
  2800  000072                     ___wmul@product:
  2801                           	opt stack 0
  2802  000072                     srand@x:
  2803                           	opt stack 0
  2804                           
  2805                           ; 2 bytes @ 0x12
  2806  000072                     	ds	1
  2807  000073                     i2c_write1ByteRegister@address:
  2808                           	opt stack 0
  2809  000073                     i2c_read1ByteRegister@e:
  2810                           	opt stack 0
  2811  000073                     AssembleEncryptionBlock@bufferIndex:
  2812                           	opt stack 0
  2813  000073                     ExecuteLinkAdr@channelMask:
  2814                           	opt stack 0
  2815  000073                     ConfigureRadioTx@freq:
  2816                           	opt stack 0
  2817  000073                     ConfigureRadioRx@freq:
  2818                           	opt stack 0
  2819  000073                     ExtractMic@mic:
  2820                           	opt stack 0
  2821                           
  2822                           ; 4 bytes @ 0x13
  2823  000073                     	ds	1
  2824  000074                     ?___ftmul:
  2825                           	opt stack 0
  2826  000074                     UpdateReceiveDelays@delay:
  2827                           	opt stack 0
  2828  000074                     BME280_writeByte@data:
  2829                           	opt stack 0
  2830  000074                     i2c_read1ByteRegister@x:
  2831                           	opt stack 0
  2832  000074                     i2c_readDataBlock@len:
  2833                           	opt stack 0
  2834  000074                     _AESEncode$910:
  2835                           	opt stack 0
  2836  000074                     ___ftmul@f1:
  2837                           	opt stack 0
  2838                           
  2839                           ; 3 bytes @ 0x14
  2840  000074                     	ds	1
  2841  000075                     ?_ExecuteRxTimingSetup:
  2842                           	opt stack 0
  2843  000075                     SwTimerSetTimeout@timerId:
  2844                           	opt stack 0
  2845  000075                     ExecuteLinkAdr@txPower:
  2846                           	opt stack 0
  2847  000075                     BME280_writeByte@reg_addr:
  2848                           	opt stack 0
  2849  000075                     ExecuteRxTimingSetup@ptr:
  2850                           	opt stack 0
  2851  000075                     RADIO_WriteFrequency@num:
  2852                           	opt stack 0
  2853                           
  2854                           ; 4 bytes @ 0x15
  2855  000075                     	ds	1
  2856  000076                     i2c_read1ByteRegister@d2:
  2857                           	opt stack 0
  2858  000076                     i2c_readDataBlock@address:
  2859                           	opt stack 0
  2860  000076                     _AESEncode$911:
  2861                           	opt stack 0
  2862  000076                     ExecuteLinkAdr@redundancy:
  2863                           	opt stack 0
  2864                           
  2865                           ; 2 bytes @ 0x16
  2866  000076                     	ds	1
  2867  000077                     ConfigureRadioTx@dataRate:
  2868                           	opt stack 0
  2869  000077                     ExecuteRxTimingSetup@delay:
  2870                           	opt stack 0
  2871  000077                     ConfigureRadioRx@dataRate:
  2872                           	opt stack 0
  2873  000077                     BME280_readByte@reg_addr:
  2874                           	opt stack 0
  2875  000077                     ___ftmul@f2:
  2876                           	opt stack 0
  2877  000077                     i2c_readDataBlock@d:
  2878                           	opt stack 0
  2879                           
  2880                           ; 4 bytes @ 0x17
  2881  000077                     	ds	1
  2882  000078                     AESEncode@aux:
  2883                           	opt stack 0
  2884  000078                     ExecuteLinkAdr@dataRate:
  2885                           	opt stack 0
  2886  000078                     ConfigureRadioTx@txPower:
  2887                           	opt stack 0
  2888                           
  2889                           ; 1 bytes @ 0x18
  2890  000078                     	ds	1
  2891  000079                     AESEncode@aux2:
  2892                           	opt stack 0
  2893  000079                     RADIO_FHSSChangeChannel@irqFlags:
  2894                           	opt stack 0
  2895  000079                     RADIO_Init@radioBuffer:
  2896                           	opt stack 0
  2897                           
  2898                           ; 2 bytes @ 0x19
  2899  000079                     	ds	1
  2900  00007A                     ??___ftmul:
  2901  00007A                     ??_RADIO_DIO2:
  2902  00007A                     AESEncode@aux1:
  2903                           	opt stack 0
  2904                           
  2905                           ; 1 bytes @ 0x1A
  2906  00007A                     	ds	1
  2907  00007B                     AESEncode@aux3:
  2908                           	opt stack 0
  2909  00007B                     RADIO_DIO2@opMode:
  2910                           	opt stack 0
  2911  00007B                     BME280_readBlock@read_buff:
  2912                           	opt stack 0
  2913  00007B                     RADIO_Init@frequency:
  2914                           	opt stack 0
  2915                           
  2916                           ; 4 bytes @ 0x1B
  2917  00007B                     	ds	1
  2918  00007C                     AESEncode@i:
  2919                           	opt stack 0
  2920  00007C                     RADIO_DIO2@dioMapping:
  2921                           	opt stack 0
  2922                           
  2923                           ; 1 bytes @ 0x1C
  2924  00007C                     	ds	1
  2925  00007D                     BME280_readBlock@length:
  2926                           	opt stack 0
  2927  00007D                     ___ftmul@exp:
  2928                           	opt stack 0
  2929  00007D                     AESEncodeLoRa@block:
  2930                           	opt stack 0
  2931                           
  2932                           ; 2 bytes @ 0x1D
  2933  00007D                     	ds	1
  2934  00007E                     BME280_readBlock@reg_addr:
  2935                           	opt stack 0
  2936  00007E                     ___ftmul@f3_as_product:
  2937                           	opt stack 0
  2938                           
  2939                           ; 3 bytes @ 0x1E
  2940  00007E                     	ds	1
  2941  00007F                     ??_RADIO_Init:
  2942  00007F                     ??_BME280_readFactoryCalibrationParams:
  2943  00007F                     ??_BME280_readMeasurements:
  2944  00007F                     AESEncodeLoRa@key:
  2945                           	opt stack 0
  2946                           
  2947                           ; 2 bytes @ 0x1F
  2948  00007F                     	ds	1
  2949  000080                     ?_SwTimersInterrupt:
  2950                           	opt stack 0
  2951                           
  2952                           ; 4 bytes @ 0x20
  2953  000080                     	ds	1
  2954  000081                     ___ftmul@cntr:
  2955                           	opt stack 0
  2956  000081                     AESEncodeLoRa@useKey:
  2957                           	opt stack 0
  2958                           
  2959                           ; 16 bytes @ 0x21
  2960  000081                     	ds	1
  2961  000082                     ___ftmul@sign:
  2962                           	opt stack 0
  2963  000082                     BME280_readFactoryCalibrationParams@paramBuff:
  2964                           	opt stack 0
  2965                           
  2966                           ; 24 bytes @ 0x22
  2967  000082                     	ds	1
  2968  000083                     ?_fround:
  2969                           	opt stack 0
  2970  000083                     ?_scale:
  2971                           	opt stack 0
  2972  000083                     ?___fttol:
  2973                           	opt stack 0
  2974  000083                     ___fttol@f1:
  2975                           	opt stack 0
  2976                           
  2977                           ; 3 bytes @ 0x23
  2978  000083                     	ds	1
  2979  000084                     
  2980                           ; 1 bytes @ 0x24
  2981  000084                     	ds	2
  2982  000086                     _fround$7055:
  2983                           	opt stack 0
  2984  000086                     _scale$7056:
  2985                           	opt stack 0
  2986                           
  2987                           ; 3 bytes @ 0x26
  2988  000086                     	ds	1
  2989  000087                     ??___fttol:
  2990                           
  2991                           ; 1 bytes @ 0x27
  2992  000087                     	ds	1
  2993  000088                     SwTimersInterrupt@timeElapsed:
  2994                           	opt stack 0
  2995                           
  2996                           ; 4 bytes @ 0x28
  2997  000088                     	ds	1
  2998  000089                     scale@scl:
  2999                           	opt stack 0
  3000  000089                     _fround$7054:
  3001                           	opt stack 0
  3002                           
  3003                           ; 3 bytes @ 0x29
  3004  000089                     	ds	3
  3005  00008C                     fround@prec:
  3006                           	opt stack 0
  3007  00008C                     ___fttol@sign1:
  3008                           	opt stack 0
  3009  00008C                     SwTimersInterrupt@ticksToNextTimerEvent:
  3010                           	opt stack 0
  3011  00008C                     BME280_readMeasurements@sensorData:
  3012                           	opt stack 0
  3013                           
  3014                           ; 8 bytes @ 0x2C
  3015  00008C                     	ds	1
  3016  00008D                     ?___ftadd:
  3017                           	opt stack 0
  3018  00008D                     ___ftadd@f1:
  3019                           	opt stack 0
  3020  00008D                     ___fttol@lval:
  3021                           	opt stack 0
  3022                           
  3023                           ; 4 bytes @ 0x2D
  3024  00008D                     	ds	3
  3025  000090                     SwTimersInterrupt@i:
  3026                           	opt stack 0
  3027  000090                     ___ftadd@f2:
  3028                           	opt stack 0
  3029                           
  3030                           ; 3 bytes @ 0x30
  3031  000090                     	ds	1
  3032  000091                     ?_SwTimerReadValue:
  3033                           	opt stack 0
  3034  000091                     ___fttol@exp1:
  3035                           	opt stack 0
  3036  000091                     GenerateSubkey@key:
  3037                           	opt stack 0
  3038  000091                     ComputeSessionKeys@joinAcceptBuffer:
  3039                           	opt stack 0
  3040  000091                     EncryptFRMPayload@buffer:
  3041                           	opt stack 0
  3042                           
  3043                           ; 2 bytes @ 0x31
  3044  000091                     	ds	2
  3045  000093                     ??___ftadd:
  3046  000093                     EncryptFRMPayload@bufferLength:
  3047                           	opt stack 0
  3048  000093                     GenerateSubkey@k1:
  3049                           	opt stack 0
  3050                           
  3051                           ; 2 bytes @ 0x33
  3052  000093                     	ds	1
  3053  000094                     EncryptFRMPayload@dir:
  3054                           	opt stack 0
  3055                           
  3056                           ; 1 bytes @ 0x34
  3057  000094                     	ds	1
  3058  000095                     GenerateSubkey@k2:
  3059                           	opt stack 0
  3060  000095                     SwTimerReadValue@ticksCount:
  3061                           	opt stack 0
  3062  000095                     SwTimerStart@ticksRemaining:
  3063                           	opt stack 0
  3064  000095                     EncryptFRMPayload@frameCounter:
  3065                           	opt stack 0
  3066                           
  3067                           ; 4 bytes @ 0x35
  3068  000095                     	ds	1
  3069  000096                     ___ftadd@sign:
  3070                           	opt stack 0
  3071                           
  3072                           ; 1 bytes @ 0x36
  3073  000096                     	ds	1
  3074  000097                     ??_GenerateSubkey:
  3075  000097                     ___ftadd@exp2:
  3076                           	opt stack 0
  3077                           
  3078                           ; 1 bytes @ 0x37
  3079  000097                     	ds	1
  3080  000098                     ___ftadd@exp1:
  3081                           	opt stack 0
  3082  000098                     GenerateSubkey@const_Rb:
  3083                           	opt stack 0
  3084                           
  3085                           ; 16 bytes @ 0x38
  3086  000098                     	ds	1
  3087  000099                     SwTimerReadValue@timerId:
  3088                           	opt stack 0
  3089  000099                     SwTimerStart@timerId:
  3090                           	opt stack 0
  3091  000099                     EncryptFRMPayload@key:
  3092                           	opt stack 0
  3093                           
  3094                           ; 2 bytes @ 0x39
  3095  000099                     	ds	1
  3096  00009A                     ??_UpdateRetransmissionAckTimeoutState:
  3097  00009A                     ??_StartReTxTimer:
  3098  00009A                     ?___lmul:
  3099                           	opt stack 0
  3100  00009A                     ___lmul@multiplier:
  3101                           	opt stack 0
  3102                           
  3103                           ; 4 bytes @ 0x3A
  3104  00009A                     	ds	1
  3105  00009B                     EncryptFRMPayload@macBufferIndex:
  3106                           	opt stack 0
  3107                           
  3108                           ; 1 bytes @ 0x3B
  3109  00009B                     	ds	1
  3110  00009C                     EncryptFRMPayload@bufferToBeEncrypted:
  3111                           	opt stack 0
  3112                           
  3113                           ; 2 bytes @ 0x3C
  3114  00009C                     	ds	2
  3115  00009E                     EncryptFRMPayload@multicastStatus:
  3116                           	opt stack 0
  3117  00009E                     StartReTxTimer@minim:
  3118                           	opt stack 0
  3119  00009E                     ___lmul@multiplicand:
  3120                           	opt stack 0
  3121                           
  3122                           ; 4 bytes @ 0x3E
  3123  00009E                     	ds	1
  3124  00009F                     ??_EncryptFRMPayload:
  3125                           
  3126                           ; 1 bytes @ 0x3F
  3127  00009F                     	ds	3
  3128  0000A2                     StartReTxTimer@i:
  3129                           	opt stack 0
  3130  0000A2                     ___lmul@product:
  3131                           	opt stack 0
  3132                           
  3133                           ; 4 bytes @ 0x42
  3134  0000A2                     	ds	2
  3135  0000A4                     EncryptFRMPayload@k:
  3136                           	opt stack 0
  3137                           
  3138                           ; 1 bytes @ 0x44
  3139  0000A4                     	ds	1
  3140  0000A5                     EncryptFRMPayload@i:
  3141                           	opt stack 0
  3142                           
  3143                           ; 1 bytes @ 0x45
  3144  0000A5                     	ds	1
  3145  0000A6                     ?_ExecuteNewChannel:
  3146                           	opt stack 0
  3147  0000A6                     ?_ExecuteRxParamSetupReq:
  3148                           	opt stack 0
  3149  0000A6                     ?_rand:
  3150                           	opt stack 0
  3151  0000A6                     ?_BME280_compensateTemperature:
  3152                           	opt stack 0
  3153  0000A6                     ?_BME280_compensatePressure:
  3154                           	opt stack 0
  3155  0000A6                     ?_BME280_compensateHumidity:
  3156                           	opt stack 0
  3157  0000A6                     EncryptFRMPayload@j:
  3158                           	opt stack 0
  3159  0000A6                     RADIO_WriteConfiguration@symbolTimeout:
  3160                           	opt stack 0
  3161  0000A6                     ExecuteNewChannel@ptr:
  3162                           	opt stack 0
  3163  0000A6                     ExecuteRxParamSetupReq@ptr:
  3164                           	opt stack 0
  3165  0000A6                     UpdateCfList@joinAccept:
  3166                           	opt stack 0
  3167  0000A6                     LORAWAN_LinkCheckConfigure@period:
  3168                           	opt stack 0
  3169                           
  3170                           ; 2 bytes @ 0x46
  3171  0000A6                     	ds	2
  3172  0000A8                     ??_LORAWAN_LinkCheckConfigure:
  3173  0000A8                     ??_ExecuteNewChannel:
  3174  0000A8                     ??_ExecuteRxParamSetupReq:
  3175  0000A8                     ??_RADIO_WriteConfiguration:
  3176  0000A8                     ?___lwmod:
  3177                           	opt stack 0
  3178  0000A8                     UpdateCfList@bufferLength:
  3179                           	opt stack 0
  3180  0000A8                     ___lwmod@dividend:
  3181                           	opt stack 0
  3182  0000A8                     GenerateSubkey@l:
  3183                           	opt stack 0
  3184                           
  3185                           ; 16 bytes @ 0x48
  3186  0000A8                     	ds	1
  3187  0000A9                     UpdateCfList@frequency:
  3188                           	opt stack 0
  3189                           
  3190                           ; 4 bytes @ 0x49
  3191  0000A9                     	ds	1
  3192  0000AA                     ??_BME280_compensateTemperature:
  3193  0000AA                     ??_BME280_compensatePressure:
  3194  0000AA                     ??_BME280_compensateHumidity:
  3195  0000AA                     ExecuteNewChannel@drRange:
  3196                           	opt stack 0
  3197  0000AA                     ___lwmod@divisor:
  3198                           	opt stack 0
  3199  0000AA                     ExecuteRxParamSetupReq@frequency:
  3200                           	opt stack 0
  3201                           
  3202                           ; 4 bytes @ 0x4A
  3203  0000AA                     	ds	1
  3204  0000AB                     RADIO_WriteConfiguration@i:
  3205                           	opt stack 0
  3206  0000AB                     ExecuteNewChannel@frequency:
  3207                           	opt stack 0
  3208                           
  3209                           ; 4 bytes @ 0x4B
  3210  0000AB                     	ds	1
  3211  0000AC                     ___lwmod@counter:
  3212                           	opt stack 0
  3213  0000AC                     RADIO_WriteConfiguration@tempValue:
  3214                           	opt stack 0
  3215  0000AC                     _LORAWAN_LinkCheckConfigure$2892:
  3216                           	opt stack 0
  3217                           
  3218                           ; 4 bytes @ 0x4C
  3219  0000AC                     	ds	1
  3220  0000AD                     ?_Random:
  3221                           	opt stack 0
  3222  0000AD                     UpdateCfList@channelIndex:
  3223                           	opt stack 0
  3224  0000AD                     Random@max:
  3225                           	opt stack 0
  3226                           
  3227                           ; 2 bytes @ 0x4D
  3228  0000AD                     	ds	1
  3229  0000AE                     ExecuteRxParamSetupReq@dlSettings:
  3230                           	opt stack 0
  3231  0000AE                     UpdateCfList@i:
  3232                           	opt stack 0
  3233                           
  3234                           ; 1 bytes @ 0x4E
  3235  0000AE                     	ds	1
  3236  0000AF                     ExecuteNewChannel@channelIndex:
  3237                           	opt stack 0
  3238  0000AF                     SearchAvailableChannel@transmissionType:
  3239                           	opt stack 0
  3240                           
  3241                           ; 1 bytes @ 0x4F
  3242  0000AF                     	ds	1
  3243  0000B0                     ?_MacExecuteCommands:
  3244                           	opt stack 0
  3245  0000B0                     RADIO_WriteConfiguration@regValue:
  3246                           	opt stack 0
  3247  0000B0                     LORAWAN_LinkCheckConfigure@iCtr:
  3248                           	opt stack 0
  3249  0000B0                     SearchAvailableChannel@channelIndex:
  3250                           	opt stack 0
  3251  0000B0                     MacExecuteCommands@buffer:
  3252                           	opt stack 0
  3253                           
  3254                           ; 2 bytes @ 0x50
  3255  0000B0                     	ds	1
  3256  0000B1                     ?_RADIO_Transmit:
  3257                           	opt stack 0
  3258  0000B1                     ?_RADIO_ReceiveStart:
  3259                           	opt stack 0
  3260  0000B1                     LORAWAN_Reset@ismBandNew:
  3261                           	opt stack 0
  3262  0000B1                     RADIO_Transmit@buffer:
  3263                           	opt stack 0
  3264  0000B1                     RADIO_ReceiveStart@rxWindowSize:
  3265                           	opt stack 0
  3266                           
  3267                           ; 2 bytes @ 0x51
  3268  0000B1                     	ds	1
  3269  0000B2                     ??_SearchAvailableChannel:
  3270  0000B2                     MacExecuteCommands@fOptsLen:
  3271                           	opt stack 0
  3272  0000B2                     LORAWAN_Init@RxPayload:
  3273                           	opt stack 0
  3274                           
  3275                           ; 2 bytes @ 0x52
  3276  0000B2                     	ds	1
  3277  0000B3                     ??_MacExecuteCommands:
  3278  0000B3                     ??_RADIO_ReceiveStart:
  3279  0000B3                     RADIO_Transmit@bufferLen:
  3280                           	opt stack 0
  3281                           
  3282                           ; 1 bytes @ 0x53
  3283  0000B3                     	ds	1
  3284  0000B4                     ??_RADIO_Transmit:
  3285  0000B4                     LORAWAN_Init@RxJoinResponse:
  3286                           	opt stack 0
  3287                           
  3288                           ; 2 bytes @ 0x54
  3289  0000B4                     	ds	1
  3290  0000B5                     MacExecuteCommands@done:
  3291                           	opt stack 0
  3292                           
  3293                           ; 1 bytes @ 0x55
  3294  0000B5                     	ds	1
  3295  0000B6                     SearchAvailableChannel@randomNumberCopy:
  3296                           	opt stack 0
  3297  0000B6                     MacExecuteCommands@ptr:
  3298                           	opt stack 0
  3299                           
  3300                           ; 2 bytes @ 0x56
  3301  0000B6                     	ds	1
  3302  0000B7                     SearchAvailableChannel@result:
  3303                           	opt stack 0
  3304  0000B7                     _RADIO_ReceiveStart$1177:
  3305                           	opt stack 0
  3306  0000B7                     _BME280_compensatePressure$7048:
  3307                           	opt stack 0
  3308                           
  3309                           ; 4 bytes @ 0x57
  3310  0000B7                     	ds	1
  3311  0000B8                     GenerateSubkey@i:
  3312                           	opt stack 0
  3313  0000B8                     SearchAvailableChannel@maxChannels:
  3314                           	opt stack 0
  3315  0000B8                     _RADIO_Transmit$1172:
  3316                           	opt stack 0
  3317                           
  3318                           ; 4 bytes @ 0x58
  3319  0000B8                     	ds	1
  3320  0000B9                     SearchAvailableChannel@randomNumber:
  3321                           	opt stack 0
  3322  0000B9                     AESCmac@key:
  3323                           	opt stack 0
  3324                           
  3325                           ; 2 bytes @ 0x59
  3326  0000B9                     	ds	1
  3327  0000BA                     SearchAvailableChannel@i:
  3328                           	opt stack 0
  3329                           
  3330                           ; 1 bytes @ 0x5A
  3331  0000BA                     	ds	1
  3332  0000BB                     SelectChannelForTransmission@transmissionType:
  3333                           	opt stack 0
  3334  0000BB                     AESCmac@output:
  3335                           	opt stack 0
  3336  0000BB                     LORAWAN_TxDone@timeOnAir:
  3337                           	opt stack 0
  3338  0000BB                     BME280_compensatePressure@pressV2:
  3339                           	opt stack 0
  3340                           
  3341                           ; 4 bytes @ 0x5B
  3342  0000BB                     	ds	1
  3343  0000BC                     SelectChannelForTransmission@result:
  3344                           	opt stack 0
  3345  0000BC                     _RADIO_Transmit$1174:
  3346                           	opt stack 0
  3347                           
  3348                           ; 4 bytes @ 0x5C
  3349  0000BC                     	ds	1
  3350  0000BD                     ??_LORAWAN_TxDone:
  3351  0000BD                     SelectChannelForTransmission@channelIndex:
  3352                           	opt stack 0
  3353  0000BD                     AESCmac@input:
  3354                           	opt stack 0
  3355  0000BD                     BME280_compensateTemperature@tempV1:
  3356                           	opt stack 0
  3357                           
  3358                           ; 4 bytes @ 0x5D
  3359  0000BD                     	ds	2
  3360  0000BF                     AESCmac@size:
  3361                           	opt stack 0
  3362  0000BF                     BME280_compensatePressure@p:
  3363                           	opt stack 0
  3364  0000BF                     BME280_compensateHumidity@h:
  3365                           	opt stack 0
  3366                           
  3367                           ; 4 bytes @ 0x5F
  3368  0000BF                     	ds	1
  3369  0000C0                     ??_AESCmac:
  3370  0000C0                     RADIO_Transmit@regValue:
  3371                           	opt stack 0
  3372                           
  3373                           ; 1 bytes @ 0x60
  3374  0000C0                     	ds	1
  3375  0000C1                     RADIO_Transmit@i:
  3376                           	opt stack 0
  3377  0000C1                     BME280_compensateTemperature@tempV2:
  3378                           	opt stack 0
  3379                           
  3380                           ; 4 bytes @ 0x61
  3381  0000C1                     	ds	1
  3382  0000C2                     ??_LORAWAN_RxTimeout:
  3383                           
  3384                           ; 1 bytes @ 0x62
  3385  0000C2                     	ds	1
  3386  0000C3                     BME280_compensatePressure@pressV1:
  3387                           	opt stack 0
  3388  0000C3                     _BME280_compensateHumidity$7050:
  3389                           	opt stack 0
  3390                           
  3391                           ; 4 bytes @ 0x63
  3392  0000C3                     	ds	2
  3393  0000C5                     BME280_compensateTemperature@t:
  3394                           	opt stack 0
  3395                           
  3396                           ; 4 bytes @ 0x65
  3397  0000C5                     	ds	1
  3398  0000C6                     LORAWAN_RxTimeout@minim:
  3399                           	opt stack 0
  3400                           
  3401                           ; 4 bytes @ 0x66
  3402  0000C6                     	ds	1
  3403  0000C7                     ?_ComputeMic:
  3404                           	opt stack 0
  3405  0000C7                     AssemblePacket@port:
  3406                           	opt stack 0
  3407  0000C7                     ComputeMic@key:
  3408                           	opt stack 0
  3409  0000C7                     _BME280_compensateHumidity$7051:
  3410                           	opt stack 0
  3411                           
  3412                           ; 4 bytes @ 0x67
  3413  0000C7                     	ds	1
  3414  0000C8                     AssemblePacket@buffer:
  3415                           	opt stack 0
  3416                           
  3417                           ; 2 bytes @ 0x68
  3418  0000C8                     	ds	1
  3419  0000C9                     ComputeMic@buffer:
  3420                           	opt stack 0
  3421  0000C9                     _LORAWAN_TxDone$2066:
  3422                           	opt stack 0
  3423  0000C9                     _BME280_compensateTemperature$7047:
  3424                           	opt stack 0
  3425                           
  3426                           ; 4 bytes @ 0x69
  3427  0000C9                     	ds	1
  3428  0000CA                     LORAWAN_RxTimeout@i:
  3429                           	opt stack 0
  3430  0000CA                     AssemblePacket@bufferLength:
  3431                           	opt stack 0
  3432                           
  3433                           ; 2 bytes @ 0x6A
  3434  0000CA                     	ds	1
  3435  0000CB                     ??_RADIO_DIO1:
  3436  0000CB                     ComputeMic@bufferLength:
  3437                           	opt stack 0
  3438  0000CB                     _BME280_compensateHumidity$7052:
  3439                           	opt stack 0
  3440                           
  3441                           ; 4 bytes @ 0x6B
  3442  0000CB                     	ds	1
  3443  0000CC                     ??_AssemblePacket:
  3444  0000CC                     RADIO_DIO1@dioMapping:
  3445                           	opt stack 0
  3446  0000CC                     ComputeMic@mic:
  3447                           	opt stack 0
  3448                           
  3449                           ; 4 bytes @ 0x6C
  3450  0000CC                     	ds	1
  3451  0000CD                     ?___altoft:
  3452                           	opt stack 0
  3453  0000CD                     _LORAWAN_TxDone$2067:
  3454                           	opt stack 0
  3455  0000CD                     ___altoft@c:
  3456                           	opt stack 0
  3457                           
  3458                           ; 4 bytes @ 0x6D
  3459  0000CD                     	ds	1
  3460  0000CE                     AssemblePacket@confirmed:
  3461                           	opt stack 0
  3462                           
  3463                           ; 1 bytes @ 0x6E
  3464  0000CE                     	ds	1
  3465  0000CF                     AssemblePacket@mhdr:
  3466                           	opt stack 0
  3467  0000CF                     _BME280_compensateHumidity$7053:
  3468                           	opt stack 0
  3469                           
  3470                           ; 4 bytes @ 0x6F
  3471  0000CF                     	ds	1
  3472  0000D0                     ??_PrepareJoinRequestFrame:
  3473  0000D0                     AssemblePacket@fCtrl:
  3474                           	opt stack 0
  3475                           
  3476                           ; 1 bytes @ 0x70
  3477  0000D0                     	ds	1
  3478  0000D1                     ??___altoft:
  3479  0000D1                     LORAWAN_TxDone@found:
  3480                           	opt stack 0
  3481  0000D1                     AssemblePacket@macCmdIdx:
  3482                           	opt stack 0
  3483                           
  3484                           ; 1 bytes @ 0x71
  3485  0000D1                     	ds	1
  3486  0000D2                     AssemblePacket@bufferIndex:
  3487                           	opt stack 0
  3488  0000D2                     LORAWAN_TxDone@delta:
  3489                           	opt stack 0
  3490                           
  3491                           ; 4 bytes @ 0x72
  3492  0000D2                     	ds	1
  3493  0000D3                     LORAWAN_Send@port:
  3494                           	opt stack 0
  3495  0000D3                     _BME280_compensateHumidity$7049:
  3496                           	opt stack 0
  3497                           
  3498                           ; 4 bytes @ 0x73
  3499  0000D3                     	ds	1
  3500  0000D4                     LORAWAN_Send@buffer:
  3501                           	opt stack 0
  3502  0000D4                     PrepareJoinRequestFrame@mic:
  3503                           	opt stack 0
  3504                           
  3505                           ; 4 bytes @ 0x74
  3506  0000D4                     	ds	1
  3507  0000D5                     ___altoft@exp:
  3508                           	opt stack 0
  3509                           
  3510                           ; 1 bytes @ 0x75
  3511  0000D5                     	ds	1
  3512  0000D6                     LORAWAN_Send@bufferLength:
  3513                           	opt stack 0
  3514  0000D6                     ___altoft@sign:
  3515                           	opt stack 0
  3516  0000D6                     _LORAWAN_TxDone$7046:
  3517                           	opt stack 0
  3518                           
  3519                           ; 4 bytes @ 0x76
  3520  0000D6                     	ds	1
  3521  0000D7                     ??_LORAWAN_Send:
  3522  0000D7                     BME280_compensateHumidity@humV:
  3523                           	opt stack 0
  3524                           
  3525                           ; 4 bytes @ 0x77
  3526  0000D7                     	ds	1
  3527  0000D8                     LORAWAN_Send@result:
  3528                           	opt stack 0
  3529  0000D8                     PrepareJoinRequestFrame@mhdr:
  3530                           	opt stack 0
  3531                           
  3532                           ; 1 bytes @ 0x78
  3533  0000D8                     	ds	1
  3534  0000D9                     LORAWAN_Send@confirmed:
  3535                           	opt stack 0
  3536  0000D9                     PrepareJoinRequestFrame@iCtr:
  3537                           	opt stack 0
  3538                           
  3539                           ; 1 bytes @ 0x79
  3540  0000D9                     	ds	1
  3541  0000DA                     ??_LORAWAN_RxDone:
  3542  0000DA                     ??_SwTimersExecute:
  3543  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  3544                           	opt stack 0
  3545  0000DA                     LORAWAN_TxDone@ticks:
  3546                           	opt stack 0
  3547                           
  3548                           ; 4 bytes @ 0x7A
  3549  0000DA                     	ds	1
  3550  0000DB                     ?___lltoft:
  3551                           	opt stack 0
  3552  0000DB                     LORAWAN_Join@bufferIndex:
  3553                           	opt stack 0
  3554  0000DB                     ___lltoft@c:
  3555                           	opt stack 0
  3556                           
  3557                           ; 4 bytes @ 0x7B
  3558  0000DB                     	ds	1
  3559  0000DC                     LORAWAN_Join@result:
  3560                           	opt stack 0
  3561                           
  3562                           ; 1 bytes @ 0x7C
  3563  0000DC                     	ds	1
  3564  0000DD                     LORAWAN_Join@activationTypeNew:
  3565                           	opt stack 0
  3566                           
  3567                           ; 1 bytes @ 0x7D
  3568  0000DD                     	ds	1
  3569  0000DE                     SwTimersExecute@i:
  3570                           	opt stack 0
  3571  0000DE                     LORAWAN_TxDone@minim:
  3572                           	opt stack 0
  3573                           
  3574                           ; 4 bytes @ 0x7E
  3575  0000DE                     	ds	1
  3576  0000DF                     ??___lltoft:
  3577  0000DF                     LORAWAN_RxDone@fPort:
  3578                           	opt stack 0
  3579                           
  3580                           ; 1 bytes @ 0x7F
  3581  0000DF                     	ds	1
  3582  0000E0                     LORAWAN_RxDone@channelIndex:
  3583                           	opt stack 0
  3584                           
  3585                           ; 1 bytes @ 0x80
  3586  0000E0                     	ds	1
  3587  0000E1                     LORAWAN_RxDone@mhdr:
  3588                           	opt stack 0
  3589                           
  3590                           ; 1 bytes @ 0x81
  3591  0000E1                     	ds	1
  3592  0000E2                     LORAWAN_TxDone@i:
  3593                           	opt stack 0
  3594  0000E2                     LORAWAN_RxDone@extractedMic:
  3595                           	opt stack 0
  3596                           
  3597                           ; 4 bytes @ 0x82
  3598  0000E2                     	ds	1
  3599  0000E3                     ??_RADIO_TxDone:
  3600  0000E3                     ??_RADIO_FSKPacketSent:
  3601  0000E3                     ___lltoft@exp:
  3602                           	opt stack 0
  3603                           
  3604                           ; 1 bytes @ 0x83
  3605  0000E3                     	ds	1
  3606  0000E4                     ?___ftdiv:
  3607                           	opt stack 0
  3608  0000E4                     ?___ftsub:
  3609                           	opt stack 0
  3610  0000E4                     ___ftdiv@f1:
  3611                           	opt stack 0
  3612  0000E4                     ___ftsub@f1:
  3613                           	opt stack 0
  3614                           
  3615                           ; 3 bytes @ 0x84
  3616  0000E4                     	ds	2
  3617  0000E6                     LORAWAN_RxDone@bufferIndex:
  3618                           	opt stack 0
  3619                           
  3620                           ; 1 bytes @ 0x86
  3621  0000E6                     	ds	1
  3622  0000E7                     LORAWAN_RxDone@temp:
  3623                           	opt stack 0
  3624  0000E7                     ___ftdiv@f2:
  3625                           	opt stack 0
  3626  0000E7                     ___ftsub@f2:
  3627                           	opt stack 0
  3628  0000E7                     RADIO_TxDone@timeOnAir:
  3629                           	opt stack 0
  3630  0000E7                     RADIO_FSKPacketSent@timeOnAir:
  3631                           	opt stack 0
  3632                           
  3633                           ; 4 bytes @ 0x87
  3634  0000E7                     	ds	1
  3635  0000E8                     LORAWAN_RxDone@packet:
  3636                           	opt stack 0
  3637                           
  3638                           ; 2 bytes @ 0x88
  3639  0000E8                     	ds	2
  3640  0000EA                     ??___ftdiv:
  3641  0000EA                     LORAWAN_RxDone@computedMic:
  3642                           	opt stack 0
  3643                           
  3644                           ; 4 bytes @ 0x8A
  3645  0000EA                     	ds	1
  3646  0000EB                     _RADIO_TxDone$1189:
  3647                           	opt stack 0
  3648  0000EB                     _RADIO_FSKPacketSent$1193:
  3649                           	opt stack 0
  3650                           
  3651                           ; 4 bytes @ 0x8B
  3652  0000EB                     	ds	2
  3653  0000ED                     ___ftdiv@cntr:
  3654                           	opt stack 0
  3655                           
  3656                           ; 1 bytes @ 0x8D
  3657  0000ED                     	ds	1
  3658  0000EE                     LORAWAN_RxDone@joinAccept:
  3659                           	opt stack 0
  3660  0000EE                     ___ftdiv@f3:
  3661                           	opt stack 0
  3662                           
  3663                           ; 3 bytes @ 0x8E
  3664  0000EE                     	ds	1
  3665  0000EF                     RADIO_FSKPacketSent@irqFlags:
  3666                           	opt stack 0
  3667                           
  3668                           ; 1 bytes @ 0x8F
  3669  0000EF                     	ds	1
  3670  0000F0                     LORAWAN_RxDone@frmPayloadLength:
  3671                           	opt stack 0
  3672                           
  3673                           ; 1 bytes @ 0x90
  3674  0000F0                     	ds	1
  3675  0000F1                     ___ftdiv@exp:
  3676                           	opt stack 0
  3677  0000F1                     LORAWAN_RxDone@hdr:
  3678                           	opt stack 0
  3679                           
  3680                           ; 2 bytes @ 0x91
  3681  0000F1                     	ds	1
  3682  0000F2                     ___ftdiv@sign:
  3683                           	opt stack 0
  3684                           
  3685                           ; 1 bytes @ 0x92
  3686  0000F2                     	ds	1
  3687  0000F3                     ?_BME280_getTemperature:
  3688                           	opt stack 0
  3689  0000F3                     ?_BME280_getPressure:
  3690                           	opt stack 0
  3691  0000F3                     ?_BME280_getHumidity:
  3692                           	opt stack 0
  3693  0000F3                     RADIO_RxDone@irqFlags:
  3694                           	opt stack 0
  3695  0000F3                     RADIO_FSKPayloadReady@irqFlags:
  3696                           	opt stack 0
  3697                           
  3698                           ; 1 bytes @ 0x93
  3699  0000F3                     	ds	1
  3700  0000F4                     RADIO_RxDone@i:
  3701                           	opt stack 0
  3702  0000F4                     RADIO_FSKPayloadReady@i:
  3703                           	opt stack 0
  3704                           
  3705                           ; 1 bytes @ 0x94
  3706  0000F4                     	ds	1
  3707  0000F5                     ??_RADIO_DIO0:
  3708                           
  3709                           ; 1 bytes @ 0x95
  3710  0000F5                     	ds	1
  3711  0000F6                     BME280_getTemperature@temperature:
  3712                           	opt stack 0
  3713  0000F6                     BME280_getPressure@pressure:
  3714                           	opt stack 0
  3715  0000F6                     BME280_getHumidity@humidity:
  3716                           	opt stack 0
  3717                           
  3718                           ; 3 bytes @ 0x96
  3719  0000F6                     	ds	1
  3720  0000F7                     RADIO_DIO0@dioMapping:
  3721                           	opt stack 0
  3722                           
  3723                           ; 1 bytes @ 0x97
  3724  0000F7                     	ds	1
  3725  0000F8                     RADIO_DIO0@opMode:
  3726                           	opt stack 0
  3727                           
  3728                           ; 1 bytes @ 0x98
  3729  0000F8                     	ds	1
  3730  0000F9                     ??_printf:
  3731  0000F9                     
  3732                           ; 1 bytes @ 0x99
  3733  0000F9                     	ds	6
  3734  0000FF                     tblptru	equ	0xFF8
  3735                           tblptrh	equ	0xFF7
  3736                           tblptrl	equ	0xFF6
  3737                           tablat	equ	0xFF5
  3738                           postinc0	equ	0xFEE
  3739                           wreg	equ	0xFE8
  3740                           postdec2	equ	0xFDD
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           
  3744                           ; 1 bytes @ 0x9F
  3745                           
  3746                           	psect	cstackCOMRAM
  3747  000001                     __pcstackCOMRAM:
  3748                           	opt stack 0
  3749  000001                     ?i2_TMR1_ReadTimer:
  3750                           	opt stack 0
  3751  000001                     i2TMR1_WriteTimer@timerVal:
  3752                           	opt stack 0
  3753                           
  3754                           ; 2 bytes @ 0x0
  3755  000001                     	ds	2
  3756  000003                     ??i2_TMR1_ReadTimer:
  3757  000003                     
  3758                           ; 1 bytes @ 0x2
  3759  000003                     	ds	2
  3760  000005                     i2TMR1_ReadTimer@readVal:
  3761                           	opt stack 0
  3762                           
  3763                           ; 2 bytes @ 0x4
  3764  000005                     	ds	2
  3765  000007                     i2TMR1_ReadTimer@readValHigh:
  3766                           	opt stack 0
  3767                           
  3768                           ; 1 bytes @ 0x6
  3769  000007                     	ds	1
  3770  000008                     i2TMR1_ReadTimer@readValLow:
  3771                           	opt stack 0
  3772                           
  3773                           ; 1 bytes @ 0x7
  3774  000008                     	ds	1
  3775  000009                     ?i2_TMR_SwapTimer:
  3776                           	opt stack 0
  3777  000009                     ?i2_TMR_GetDeltaTime:
  3778                           	opt stack 0
  3779  000009                     i2TMR_SwapTimer@timerVal:
  3780                           	opt stack 0
  3781                           
  3782                           ; 2 bytes @ 0x8
  3783  000009                     	ds	2
  3784  00000B                     
  3785                           ; 1 bytes @ 0xA
  3786  00000B                     	ds	2
  3787  00000D                     ??i2_TMR_GetDeltaTime:
  3788                           
  3789                           ; 1 bytes @ 0xC
  3790  00000D                     	ds	20
  3791  000021                     ?i2_SwTimersInterrupt:
  3792                           	opt stack 0
  3793                           
  3794                           ; 4 bytes @ 0x20
  3795  000021                     	ds	4
  3796  000025                     
  3797                           ; 1 bytes @ 0x24
  3798  000025                     	ds	4
  3799  000029                     i2SwTimersInterrupt@timeElapsed:
  3800                           	opt stack 0
  3801                           
  3802                           ; 4 bytes @ 0x28
  3803  000029                     	ds	4
  3804  00002D                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  3805                           	opt stack 0
  3806                           
  3807                           ; 4 bytes @ 0x2C
  3808  00002D                     	ds	4
  3809  000031                     i2SwTimersInterrupt@i:
  3810                           	opt stack 0
  3811                           
  3812                           ; 1 bytes @ 0x30
  3813  000031                     	ds	1
  3814  000032                     ??_TMR_ISR_lora:
  3815                           
  3816                           ; 1 bytes @ 0x31
  3817  000032                     	ds	2
  3818  000034                     ??_INTERRUPT_InterruptManager:
  3819                           
  3820                           ; 1 bytes @ 0x33
  3821  000034                     	ds	8
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           postinc0	equ	0xFEE
  3827                           wreg	equ	0xFE8
  3828                           postdec2	equ	0xFDD
  3829                           fsr2h	equ	0xFDA
  3830                           fsr2l	equ	0xFD9
  3831                           
  3832 ;;
  3833 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3834 ;;
  3835 ;; *************** function _main *****************
  3836 ;; Defined at:
  3837 ;;		line 88 in file "main.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3855 ;;Total ram usage:        0 bytes
  3856 ;; Hardware stack levels required when called:   20
  3857 ;; This function calls:
  3858 ;;		_ADC_GetConversion
  3859 ;;		_LORAWAN_Init
  3860 ;;		_LORAWAN_Join
  3861 ;;		_LORAWAN_Mainloop
  3862 ;;		_LORAWAN_Send
  3863 ;;		_LORAWAN_SetApplicationEui
  3864 ;;		_LORAWAN_SetApplicationKey
  3865 ;;		_LORAWAN_SetApplicationSessionKey
  3866 ;;		_LORAWAN_SetDeviceAddress
  3867 ;;		_LORAWAN_SetDeviceEui
  3868 ;;		_LORAWAN_SetNetworkSessionKey
  3869 ;;		_SYSTEM_Initialize
  3870 ;;		_TMR5_HasOverflowOccured
  3871 ;;		_Weather_getHumidityRH
  3872 ;;		_Weather_getPressureKPa
  3873 ;;		_Weather_getTemperatureDegC
  3874 ;;		_Weather_readSensors
  3875 ;;		___ftmul
  3876 ;;		___fttol
  3877 ;;		___lwtoft
  3878 ;;		_printf
  3879 ;; This function is called by:
  3880 ;;		Startup code after reset
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text0
  3885  00420E                     __ptext0:
  3886                           	opt stack 0
  3887  00420E                     _main:
  3888                           	opt stack 11
  3889                           
  3890                           ;main.c: 91: SYSTEM_Initialize();
  3891                           
  3892                           ;incstack = 0
  3893  00420E  EC3B  F05D         	call	_SYSTEM_Initialize	;wreg free
  3894                           
  3895                           ;main.c: 98: (INTCONbits.GIE = 1);
  3896  004212  8EF2               	bsf	intcon,7,c	;volatile
  3897                           
  3898                           ;main.c: 101: (INTCONbits.PEIE = 1);
  3899  004214  8CF2               	bsf	intcon,6,c	;volatile
  3900                           
  3901                           ;main.c: 109: printf("INIT Done!\r");
  3902  004216  0EF3               	movlw	low STR_2
  3903  004218  0101               	movlb	1	; () banked
  3904  00421A  6F8F               	movwf	printf@f& (0+255),b
  3905  00421C  0EFF               	movlw	high STR_2
  3906  00421E  6F90               	movwf	(printf@f+1)& (0+255),b
  3907  004220  EC96  F006         	call	_printf	;wreg free
  3908                           
  3909                           ;main.c: 112: Weather_readSensors();
  3910  004224  EC5F  F060         	call	_Weather_readSensors	;wreg free
  3911                           
  3912                           ;main.c: 113: adcVoltage = 3.267*ADC_GetConversion(channel_AN0);
  3913  004228  0E00               	movlw	0
  3914  00422A  ECF8  F05B         	call	_ADC_GetConversion
  3915  00422E  C060  F068         	movff	?_ADC_GetConversion,___lwtoft@c
  3916  004232  C061  F069         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
  3917  004236  ECD1  F05E         	call	___lwtoft	;wreg free
  3918  00423A  C068  F074         	movff	?___lwtoft,___ftmul@f1
  3919  00423E  C069  F075         	movff	?___lwtoft+1,___ftmul@f1+1
  3920  004242  C06A  F076         	movff	?___lwtoft+2,___ftmul@f1+2
  3921  004246  0E17               	movlw	23
  3922  004248  0100               	movlb	0	; () banked
  3923  00424A  6F77               	movwf	___ftmul@f2& (0+255),b
  3924  00424C  0E51               	movlw	81
  3925  00424E  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  3926  004250  0E40               	movlw	64
  3927  004252  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  3928  004254  EC56  F045         	call	___ftmul	;wreg free
  3929  004258  C074  F11D         	movff	?___ftmul,_adcVoltage
  3930  00425C  C075  F11E         	movff	?___ftmul+1,_adcVoltage+1
  3931  004260  C076  F11F         	movff	?___ftmul+2,_adcVoltage+2
  3932                           
  3933                           ;main.c: 114: printf("Temperature = %3.2f C || Pressure = %3.2f kPa || Humidity = %3.2f 
      +                          %%RH || Voltage = %3.2f V \r",
  3934                           ;main.c: 115: Weather_getTemperatureDegC(), Weather_getPressureKPa(), Weather_getHumidit
      +                          yRH(), adcVoltage);
  3935  004264  0E27               	movlw	low STR_3
  3936  004266  0101               	movlb	1	; () banked
  3937  004268  6F8F               	movwf	printf@f& (0+255),b
  3938  00426A  0EFF               	movlw	high STR_3
  3939  00426C  6F90               	movwf	(printf@f+1)& (0+255),b
  3940  00426E  ECD0  F061         	call	_Weather_getTemperatureDegC	;wreg free
  3941  004272  C18C  F191         	movff	?_Weather_getTemperatureDegC,?_printf+2
  3942  004276  C18D  F192         	movff	?_Weather_getTemperatureDegC+1,?_printf+3
  3943  00427A  C18E  F193         	movff	?_Weather_getTemperatureDegC+2,?_printf+4
  3944  00427E  ECD9  F061         	call	_Weather_getPressureKPa	;wreg free
  3945  004282  C18C  F194         	movff	?_Weather_getPressureKPa,?_printf+5
  3946  004286  C18D  F195         	movff	?_Weather_getPressureKPa+1,?_printf+6
  3947  00428A  C18E  F196         	movff	?_Weather_getPressureKPa+2,?_printf+7
  3948  00428E  ECE2  F061         	call	_Weather_getHumidityRH	;wreg free
  3949  004292  C18C  F197         	movff	?_Weather_getHumidityRH,?_printf+8
  3950  004296  C18D  F198         	movff	?_Weather_getHumidityRH+1,?_printf+9
  3951  00429A  C18E  F199         	movff	?_Weather_getHumidityRH+2,?_printf+10
  3952  00429E  C11D  F19A         	movff	_adcVoltage,?_printf+11
  3953  0042A2  C11E  F19B         	movff	_adcVoltage+1,?_printf+12
  3954  0042A6  C11F  F19C         	movff	_adcVoltage+2,?_printf+13
  3955  0042AA  EC96  F006         	call	_printf	;wreg free
  3956                           
  3957                           ;main.c: 117: printf("LoRA Start!\r");
  3958  0042AE  0EE6               	movlw	low STR_4
  3959  0042B0  0101               	movlb	1	; () banked
  3960  0042B2  6F8F               	movwf	printf@f& (0+255),b
  3961  0042B4  0EFF               	movlw	high STR_4
  3962  0042B6  6F90               	movwf	(printf@f+1)& (0+255),b
  3963  0042B8  EC96  F006         	call	_printf	;wreg free
  3964                           
  3965                           ;main.c: 121: LORAWAN_Init(RxData, RxJoinResponse);
  3966  0042BC  0EF2               	movlw	low _RxData
  3967  0042BE  0100               	movlb	0	; () banked
  3968  0042C0  6FB2               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  3969  0042C2  0EC6               	movlw	high _RxData
  3970  0042C4  6FB3               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  3971  0042C6  0EF0               	movlw	low _RxJoinResponse
  3972  0042C8  6FB4               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  3973  0042CA  0EC6               	movlw	high _RxJoinResponse
  3974  0042CC  6FB5               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  3975  0042CE  EC4A  F055         	call	_LORAWAN_Init	;wreg free
  3976                           
  3977                           ;main.c: 123: if(activationMethod == 0){
  3978  0042D2  0101               	movlb	1	; () banked
  3979  0042D4  512B               	movf	_activationMethod& (0+255),w,b
  3980  0042D6  A4D8               	btfss	status,2,c
  3981  0042D8  D020               	goto	l3431
  3982                           
  3983                           ; BSR set to: 1
  3984                           ;main.c: 125: LORAWAN_SetApplicationEui(applicationEUI);
  3985  0042DA  0EE0               	movlw	low _applicationEUI
  3986  0042DC  0100               	movlb	0	; () banked
  3987  0042DE  6F6B               	movwf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),b
  3988  0042E0  0E03               	movlw	high _applicationEUI
  3989  0042E2  6F6C               	movwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),b
  3990  0042E4  ECAE  F05D         	call	_LORAWAN_SetApplicationEui	;wreg free
  3991                           
  3992                           ;main.c: 126: LORAWAN_SetDeviceEui(deviceEUI);
  3993  0042E8  0EE8               	movlw	low _deviceEUI
  3994  0042EA  0100               	movlb	0	; () banked
  3995  0042EC  6F6B               	movwf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),b
  3996  0042EE  0E03               	movlw	high _deviceEUI
  3997  0042F0  6F6C               	movwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),b
  3998  0042F2  EC69  F05D         	call	_LORAWAN_SetDeviceEui	;wreg free
  3999                           
  4000                           ;main.c: 127: LORAWAN_SetApplicationKey(applicationKey);
  4001  0042F6  0EF0               	movlw	low _applicationKey
  4002  0042F8  0100               	movlb	0	; () banked
  4003  0042FA  6F6B               	movwf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),b
  4004  0042FC  0E04               	movlw	high _applicationKey
  4005  0042FE  6F6C               	movwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),b
  4006  004300  EC97  F05D         	call	_LORAWAN_SetApplicationKey	;wreg free
  4007                           
  4008                           ;main.c: 129: LORAWAN_Join(OTAA);
  4009  004304  0E00               	movlw	0
  4010  004306  ECB8  F04C         	call	_LORAWAN_Join
  4011                           
  4012                           ;main.c: 130: printf("OTAA Joined!\r");
  4013  00430A  0ECB               	movlw	low STR_5
  4014  00430C  0101               	movlb	1	; () banked
  4015  00430E  6F8F               	movwf	printf@f& (0+255),b
  4016  004310  0EFF               	movlw	high STR_5
  4017  004312  6F90               	movwf	(printf@f+1)& (0+255),b
  4018  004314  EC96  F006         	call	_printf	;wreg free
  4019                           
  4020                           ;main.c: 131: }
  4021  004318  D022               	goto	l3432
  4022  00431A                     l3431:
  4023                           
  4024                           ;main.c: 132: else{
  4025                           ;main.c: 134: LORAWAN_SetNetworkSessionKey(nwkSessionKey);
  4026  00431A  0E10               	movlw	low _nwkSessionKey
  4027  00431C  0100               	movlb	0	; () banked
  4028  00431E  6F6B               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  4029  004320  0E05               	movlw	high _nwkSessionKey
  4030  004322  6F6C               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  4031  004324  EC52  F05D         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  4032                           
  4033                           ;main.c: 135: LORAWAN_SetApplicationSessionKey(appSessionKey);
  4034  004328  0E00               	movlw	low _appSessionKey
  4035  00432A  0100               	movlb	0	; () banked
  4036  00432C  6F6B               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  4037  00432E  0E05               	movlw	high _appSessionKey
  4038  004330  6F6C               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  4039  004332  EC80  F05D         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  4040                           
  4041                           ;main.c: 136: LORAWAN_SetDeviceAddress(deviceAddr);
  4042  004336  C2F9  F060         	movff	_deviceAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  4043  00433A  C2FA  F061         	movff	_deviceAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  4044  00433E  C2FB  F062         	movff	_deviceAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  4045  004342  C2FC  F063         	movff	_deviceAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  4046  004346  EC12  F061         	call	_LORAWAN_SetDeviceAddress	;wreg free
  4047                           
  4048                           ;main.c: 138: LORAWAN_Join(ABP);
  4049  00434A  0E01               	movlw	1
  4050  00434C  ECB8  F04C         	call	_LORAWAN_Join
  4051                           
  4052                           ;main.c: 139: printf("ABP Joined!\r");
  4053  004350  0ED9               	movlw	low STR_6
  4054  004352  0101               	movlb	1	; () banked
  4055  004354  6F8F               	movwf	printf@f& (0+255),b
  4056  004356  0EFF               	movlw	high STR_6
  4057  004358  6F90               	movwf	(printf@f+1)& (0+255),b
  4058  00435A  EC96  F006         	call	_printf	;wreg free
  4059  00435E                     l3432:
  4060                           
  4061                           ;main.c: 143: {
  4062                           ;main.c: 147: LORAWAN_Mainloop();
  4063                           
  4064                           ;main.c: 140: }
  4065                           ;main.c: 142: while (1)
  4066  00435E  EC9D  F05B         	call	_LORAWAN_Mainloop	;wreg free
  4067                           
  4068                           ;main.c: 152: if (TMR5_HasOverflowOccured())
  4069  004362  EC8B  F062         	call	_TMR5_HasOverflowOccured	;wreg free
  4070  004366  0900               	iorlw	0
  4071  004368  B4D8               	btfsc	status,2,c
  4072  00436A  D03B               	goto	l3434
  4073                           
  4074                           ;main.c: 153: {
  4075                           ;main.c: 154: counter ++;
  4076  00436C  0101               	movlb	1	; () banked
  4077  00436E  2B2A               	incf	_counter& (0+255),f,b
  4078                           
  4079                           ; BSR set to: 1
  4080                           ;main.c: 156: adcVoltage = 3.267*ADC_GetConversion(channel_AN0);
  4081  004370  0E00               	movlw	0
  4082  004372  ECF8  F05B         	call	_ADC_GetConversion
  4083  004376  C060  F068         	movff	?_ADC_GetConversion,___lwtoft@c
  4084  00437A  C061  F069         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
  4085  00437E  ECD1  F05E         	call	___lwtoft	;wreg free
  4086  004382  C068  F074         	movff	?___lwtoft,___ftmul@f1
  4087  004386  C069  F075         	movff	?___lwtoft+1,___ftmul@f1+1
  4088  00438A  C06A  F076         	movff	?___lwtoft+2,___ftmul@f1+2
  4089  00438E  0E17               	movlw	23
  4090  004390  0100               	movlb	0	; () banked
  4091  004392  6F77               	movwf	___ftmul@f2& (0+255),b
  4092  004394  0E51               	movlw	81
  4093  004396  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4094  004398  0E40               	movlw	64
  4095  00439A  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4096  00439C  EC56  F045         	call	___ftmul	;wreg free
  4097  0043A0  C074  F11D         	movff	?___ftmul,_adcVoltage
  4098  0043A4  C075  F11E         	movff	?___ftmul+1,_adcVoltage+1
  4099  0043A8  C076  F11F         	movff	?___ftmul+2,_adcVoltage+2
  4100                           
  4101                           ;main.c: 158: Weather_readSensors();
  4102  0043AC  EC5F  F060         	call	_Weather_readSensors	;wreg free
  4103                           
  4104                           ;main.c: 159: temperature = Weather_getTemperatureDegC();
  4105  0043B0  ECD0  F061         	call	_Weather_getTemperatureDegC	;wreg free
  4106  0043B4  C18C  F11A         	movff	?_Weather_getTemperatureDegC,_temperature
  4107  0043B8  C18D  F11B         	movff	?_Weather_getTemperatureDegC+1,_temperature+1
  4108  0043BC  C18E  F11C         	movff	?_Weather_getTemperatureDegC+2,_temperature+2
  4109                           
  4110                           ;main.c: 160: pressure = Weather_getPressureKPa();
  4111  0043C0  ECD9  F061         	call	_Weather_getPressureKPa	;wreg free
  4112  0043C4  C18C  F117         	movff	?_Weather_getPressureKPa,_pressure
  4113  0043C8  C18D  F118         	movff	?_Weather_getPressureKPa+1,_pressure+1
  4114  0043CC  C18E  F119         	movff	?_Weather_getPressureKPa+2,_pressure+2
  4115                           
  4116                           ;main.c: 161: humidity = Weather_getHumidityRH();
  4117  0043D0  ECE2  F061         	call	_Weather_getHumidityRH	;wreg free
  4118  0043D4  C18C  F114         	movff	?_Weather_getHumidityRH,_humidity
  4119  0043D8  C18D  F115         	movff	?_Weather_getHumidityRH+1,_humidity+1
  4120  0043DC  C18E  F116         	movff	?_Weather_getHumidityRH+2,_humidity+2
  4121                           
  4122                           ;main.c: 163: TMR5IF = 0;
  4123  0043E0  927E               	bcf	3966,1,c	;volatile
  4124  0043E2                     l3434:
  4125                           
  4126                           ;main.c: 164: }
  4127                           ;main.c: 166: if (counter == 20)
  4128  0043E2  0E14               	movlw	20
  4129  0043E4  0101               	movlb	1	; () banked
  4130  0043E6  192A               	xorwf	_counter& (0+255),w,b
  4131  0043E8  A4D8               	btfss	status,2,c
  4132  0043EA  D0B7               	goto	l3435
  4133                           
  4134                           ; BSR set to: 1
  4135                           ;main.c: 167: {
  4136                           ;main.c: 169: data[0] = (uint16_t)(temperature * 100) >> 8;
  4137  0043EC  0E00               	movlw	0
  4138  0043EE  0100               	movlb	0	; () banked
  4139  0043F0  6F77               	movwf	___ftmul@f2& (0+255),b
  4140  0043F2  0EC8               	movlw	200
  4141  0043F4  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4142  0043F6  0E42               	movlw	66
  4143  0043F8  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4144  0043FA  C11A  F074         	movff	_temperature,___ftmul@f1
  4145  0043FE  C11B  F075         	movff	_temperature+1,___ftmul@f1+1
  4146  004402  C11C  F076         	movff	_temperature+2,___ftmul@f1+2
  4147  004406  EC56  F045         	call	___ftmul	;wreg free
  4148  00440A  C074  F083         	movff	?___ftmul,___fttol@f1
  4149  00440E  C075  F084         	movff	?___ftmul+1,___fttol@f1+1
  4150  004412  C076  F085         	movff	?___ftmul+2,___fttol@f1+2
  4151  004416  ECDA  F044         	call	___fttol	;wreg free
  4152  00441A  0100               	movlb	0	; () banked
  4153  00441C  C084  F083         	movff	?___fttol+1,?___fttol
  4154  004420  6B84               	clrf	(?___fttol+1)& (0+255),b
  4155  004422  5183               	movf	?___fttol& (0+255),w,b
  4156  004424  0103               	movlb	3	; () banked
  4157  004426  6FD8               	movwf	_data& (0+255),b
  4158                           
  4159                           ;main.c: 170: data[1] = (uint16_t)(temperature * 100) & 0xFF;
  4160  004428  0E00               	movlw	0
  4161  00442A  0100               	movlb	0	; () banked
  4162  00442C  6F77               	movwf	___ftmul@f2& (0+255),b
  4163  00442E  0EC8               	movlw	200
  4164  004430  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4165  004432  0E42               	movlw	66
  4166  004434  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4167  004436  C11A  F074         	movff	_temperature,___ftmul@f1
  4168  00443A  C11B  F075         	movff	_temperature+1,___ftmul@f1+1
  4169  00443E  C11C  F076         	movff	_temperature+2,___ftmul@f1+2
  4170  004442  EC56  F045         	call	___ftmul	;wreg free
  4171  004446  C074  F083         	movff	?___ftmul,___fttol@f1
  4172  00444A  C075  F084         	movff	?___ftmul+1,___fttol@f1+1
  4173  00444E  C076  F085         	movff	?___ftmul+2,___fttol@f1+2
  4174  004452  ECDA  F044         	call	___fttol	;wreg free
  4175  004456  0100               	movlb	0	; () banked
  4176  004458  5183               	movf	?___fttol& (0+255),w,b
  4177  00445A  0103               	movlb	3	; () banked
  4178  00445C  6FD9               	movwf	(_data+1)& (0+255),b
  4179                           
  4180                           ;main.c: 171: data[2] = (uint16_t) pressure >>8;
  4181  00445E  C117  F083         	movff	_pressure,___fttol@f1
  4182  004462  C118  F084         	movff	_pressure+1,___fttol@f1+1
  4183  004466  C119  F085         	movff	_pressure+2,___fttol@f1+2
  4184  00446A  ECDA  F044         	call	___fttol	;wreg free
  4185  00446E  0100               	movlb	0	; () banked
  4186  004470  C084  F083         	movff	?___fttol+1,?___fttol
  4187  004474  6B84               	clrf	(?___fttol+1)& (0+255),b
  4188  004476  5183               	movf	?___fttol& (0+255),w,b
  4189  004478  0103               	movlb	3	; () banked
  4190  00447A  6FDA               	movwf	(_data+2)& (0+255),b
  4191                           
  4192                           ;main.c: 172: data[3] = (uint16_t) pressure & 0xFF;
  4193  00447C  C117  F083         	movff	_pressure,___fttol@f1
  4194  004480  C118  F084         	movff	_pressure+1,___fttol@f1+1
  4195  004484  C119  F085         	movff	_pressure+2,___fttol@f1+2
  4196  004488  ECDA  F044         	call	___fttol	;wreg free
  4197  00448C  0100               	movlb	0	; () banked
  4198  00448E  5183               	movf	?___fttol& (0+255),w,b
  4199  004490  0103               	movlb	3	; () banked
  4200  004492  6FDB               	movwf	(_data+3)& (0+255),b
  4201                           
  4202                           ;main.c: 173: data[4] = (uint16_t)(humidity * 100) >> 8;
  4203  004494  0E00               	movlw	0
  4204  004496  0100               	movlb	0	; () banked
  4205  004498  6F77               	movwf	___ftmul@f2& (0+255),b
  4206  00449A  0EC8               	movlw	200
  4207  00449C  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4208  00449E  0E42               	movlw	66
  4209  0044A0  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4210  0044A2  C114  F074         	movff	_humidity,___ftmul@f1
  4211  0044A6  C115  F075         	movff	_humidity+1,___ftmul@f1+1
  4212  0044AA  C116  F076         	movff	_humidity+2,___ftmul@f1+2
  4213  0044AE  EC56  F045         	call	___ftmul	;wreg free
  4214  0044B2  C074  F083         	movff	?___ftmul,___fttol@f1
  4215  0044B6  C075  F084         	movff	?___ftmul+1,___fttol@f1+1
  4216  0044BA  C076  F085         	movff	?___ftmul+2,___fttol@f1+2
  4217  0044BE  ECDA  F044         	call	___fttol	;wreg free
  4218  0044C2  0100               	movlb	0	; () banked
  4219  0044C4  C084  F083         	movff	?___fttol+1,?___fttol
  4220  0044C8  6B84               	clrf	(?___fttol+1)& (0+255),b
  4221  0044CA  5183               	movf	?___fttol& (0+255),w,b
  4222  0044CC  0103               	movlb	3	; () banked
  4223  0044CE  6FDC               	movwf	(_data+4)& (0+255),b
  4224                           
  4225                           ;main.c: 174: data[5] = (uint16_t)(humidity * 100) & 0xFF;
  4226  0044D0  0E00               	movlw	0
  4227  0044D2  0100               	movlb	0	; () banked
  4228  0044D4  6F77               	movwf	___ftmul@f2& (0+255),b
  4229  0044D6  0EC8               	movlw	200
  4230  0044D8  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4231  0044DA  0E42               	movlw	66
  4232  0044DC  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4233  0044DE  C114  F074         	movff	_humidity,___ftmul@f1
  4234  0044E2  C115  F075         	movff	_humidity+1,___ftmul@f1+1
  4235  0044E6  C116  F076         	movff	_humidity+2,___ftmul@f1+2
  4236  0044EA  EC56  F045         	call	___ftmul	;wreg free
  4237  0044EE  C074  F083         	movff	?___ftmul,___fttol@f1
  4238  0044F2  C075  F084         	movff	?___ftmul+1,___fttol@f1+1
  4239  0044F6  C076  F085         	movff	?___ftmul+2,___fttol@f1+2
  4240  0044FA  ECDA  F044         	call	___fttol	;wreg free
  4241  0044FE  0100               	movlb	0	; () banked
  4242  004500  5183               	movf	?___fttol& (0+255),w,b
  4243  004502  0103               	movlb	3	; () banked
  4244  004504  6FDD               	movwf	(_data+5)& (0+255),b
  4245                           
  4246                           ;main.c: 175: data[6] = (uint16_t) adcVoltage >> 8;
  4247  004506  C11D  F083         	movff	_adcVoltage,___fttol@f1
  4248  00450A  C11E  F084         	movff	_adcVoltage+1,___fttol@f1+1
  4249  00450E  C11F  F085         	movff	_adcVoltage+2,___fttol@f1+2
  4250  004512  ECDA  F044         	call	___fttol	;wreg free
  4251  004516  0100               	movlb	0	; () banked
  4252  004518  C084  F083         	movff	?___fttol+1,?___fttol
  4253  00451C  6B84               	clrf	(?___fttol+1)& (0+255),b
  4254  00451E  5183               	movf	?___fttol& (0+255),w,b
  4255  004520  0103               	movlb	3	; () banked
  4256  004522  6FDE               	movwf	(_data+6)& (0+255),b
  4257                           
  4258                           ;main.c: 176: data[7] = (uint16_t) adcVoltage & 0xFF;
  4259  004524  C11D  F083         	movff	_adcVoltage,___fttol@f1
  4260  004528  C11E  F084         	movff	_adcVoltage+1,___fttol@f1+1
  4261  00452C  C11F  F085         	movff	_adcVoltage+2,___fttol@f1+2
  4262  004530  ECDA  F044         	call	___fttol	;wreg free
  4263  004534  0100               	movlb	0	; () banked
  4264  004536  5183               	movf	?___fttol& (0+255),w,b
  4265  004538  0103               	movlb	3	; () banked
  4266  00453A  6FDF               	movwf	(_data+7)& (0+255),b
  4267                           
  4268                           ; BSR set to: 3
  4269                           ;main.c: 178: LORAWAN_Send(UNCNF, 2, data, 8);
  4270  00453C  0E02               	movlw	2
  4271  00453E  0100               	movlb	0	; () banked
  4272  004540  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  4273  004542  0ED8               	movlw	low _data
  4274  004544  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  4275  004546  0E03               	movlw	high _data
  4276  004548  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  4277  00454A  0E08               	movlw	8
  4278  00454C  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  4279  00454E  0E00               	movlw	0
  4280  004550  ECDE  F049         	call	_LORAWAN_Send
  4281                           
  4282                           ;main.c: 180: counter = 0;
  4283  004554  0E00               	movlw	0
  4284  004556  0101               	movlb	1	; () banked
  4285  004558  6F2A               	movwf	_counter& (0+255),b
  4286  00455A                     l3435:
  4287                           
  4288                           ; BSR set to: 1
  4289                           ;main.c: 181: }
  4290                           ;main.c: 183: (WDTCONbits.SWDTEN = 1);
  4291                           
  4292                           ; BSR set to: 1
  4293  00455A  80D1               	bsf	4049,0,c	;volatile
  4294  00455C  0003               	sleep		;# 
  4295  00455E  D6FF               	goto	l3432
  4296  004560                     __end_of_main:
  4297                           	opt stack 0
  4298                           tblptru	equ	0xFF8
  4299                           tblptrh	equ	0xFF7
  4300                           tblptrl	equ	0xFF6
  4301                           tablat	equ	0xFF5
  4302                           intcon	equ	0xFF2
  4303                           postinc0	equ	0xFEE
  4304                           wreg	equ	0xFE8
  4305                           postdec2	equ	0xFDD
  4306                           fsr2h	equ	0xFDA
  4307                           fsr2l	equ	0xFD9
  4308                           status	equ	0xFD8
  4309                           
  4310 ;; *************** function _printf *****************
  4311 ;; Defined at:
  4312 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  f               2    3[BANK1 ] PTR const unsigned char 
  4315 ;;		 -> STR_6(13), STR_5(14), STR_4(13), STR_3(94), 
  4316 ;;		 -> STR_2(12), STR_1(70), 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  tmpval          4   32[BANK1 ] struct .
  4319 ;;  val             4   26[BANK1 ] unsigned long 
  4320 ;;  fval            3   40[BANK1 ] unsigned long 
  4321 ;;  prec            2   43[BANK1 ] int 
  4322 ;;  width           2   38[BANK1 ] int 
  4323 ;;  exp             2   36[BANK1 ] int 
  4324 ;;  flag            2   30[BANK1 ] unsigned short 
  4325 ;;  len             2   24[BANK1 ] unsigned int 
  4326 ;;  cp              2   22[BANK1 ] PTR const unsigned char 
  4327 ;;		 -> printf@c(1), 
  4328 ;;  ap              2   20[BANK1 ] PTR void [1]
  4329 ;;		 -> ?_printf(2), 
  4330 ;;  c               1   45[BANK1 ] char 
  4331 ;;  d               1    0        unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  2    3[BANK1 ] int 
  4334 ;; Registers used:
  4335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4341 ;;      Params:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Totals:         0       6      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;Total ram usage:       49 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:   10
  4348 ;; This function calls:
  4349 ;;		___awdiv
  4350 ;;		___ftadd
  4351 ;;		___ftge
  4352 ;;		___ftmul
  4353 ;;		___ftneg
  4354 ;;		___ftsub
  4355 ;;		___fttol
  4356 ;;		___lldiv
  4357 ;;		___llmod
  4358 ;;		___lltoft
  4359 ;;		___wmul
  4360 ;;		__div_to_l_
  4361 ;;		__tdiv_to_l_
  4362 ;;		_fround
  4363 ;;		_isdigit
  4364 ;;		_putch
  4365 ;;		_scale
  4366 ;; This function is called by:
  4367 ;;		_main
  4368 ;;		_Weather_example
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text1
  4373  000D2C                     __ptext1:
  4374                           	opt stack 0
  4375  000D2C                     _printf:
  4376                           	opt stack 20
  4377                           
  4378                           ;doprnt.c: 466: va_list ap;
  4379                           ;doprnt.c: 499: signed char c;
  4380                           ;doprnt.c: 501: int width;
  4381                           ;doprnt.c: 504: int prec;
  4382                           ;doprnt.c: 508: unsigned short flag;
  4383                           ;doprnt.c: 515: char d;
  4384                           ;doprnt.c: 516: double fval;
  4385                           ;doprnt.c: 517: int exp;
  4386                           ;doprnt.c: 523: union {
  4387                           ;doprnt.c: 524: unsigned long vd;
  4388                           ;doprnt.c: 525: double integ;
  4389                           ;doprnt.c: 526: } tmpval;
  4390                           ;doprnt.c: 528: unsigned long val;
  4391                           ;doprnt.c: 529: unsigned len;
  4392                           ;doprnt.c: 530: const char * cp;
  4393                           ;doprnt.c: 533: *ap = __va_start();
  4394                           
  4395                           ;incstack = 0
  4396  000D2C  0E91               	movlw	low (?_printf+2)
  4397  000D2E  0101               	movlb	1	; () banked
  4398  000D30  6FA0               	movwf	printf@ap& (0+255),b
  4399  000D32  0E01               	movlw	high (?_printf+2)
  4400  000D34  6FA1               	movwf	(printf@ap+1)& (0+255),b
  4401                           
  4402                           ;doprnt.c: 536: while(c = *f++) {
  4403  000D36  EF4B  F00B         	goto	l3558
  4404  000D3A                     
  4405                           ; BSR set to: 1
  4406                           ;doprnt.c: 538: if(c != '%')
  4407                           
  4408                           ; BSR set to: 1
  4409  000D3A  0E25               	movlw	37
  4410  000D3C  19B9               	xorwf	printf@c& (0+255),w,b
  4411  000D3E  B4D8               	btfsc	status,2,c
  4412  000D40  D005               	goto	l3477
  4413                           
  4414                           ; BSR set to: 1
  4415                           ;doprnt.c: 540: {
  4416                           ;doprnt.c: 541: (putch(c) );
  4417  000D42  51B9               	movf	printf@c& (0+255),w,b
  4418  000D44  EC55  F062         	call	_putch
  4419                           
  4420                           ;doprnt.c: 542: continue;
  4421  000D48  EF4B  F00B         	goto	l3558
  4422  000D4C                     l3477:
  4423                           
  4424                           ;doprnt.c: 543: }
  4425                           ;doprnt.c: 546: width = 0;
  4426  000D4C  0E00               	movlw	0
  4427  000D4E  0101               	movlb	1	; () banked
  4428  000D50  6FB3               	movwf	(printf@width+1)& (0+255),b
  4429  000D52  0E00               	movlw	0
  4430  000D54  6FB2               	movwf	printf@width& (0+255),b
  4431                           
  4432                           ;doprnt.c: 548: flag = 0;
  4433  000D56  0E00               	movlw	0
  4434  000D58  6FAB               	movwf	(printf@flag+1)& (0+255),b
  4435  000D5A  0E00               	movlw	0
  4436  000D5C  6FAA               	movwf	printf@flag& (0+255),b
  4437                           
  4438                           ; BSR set to: 1
  4439                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4440  000D5E  C18F  FFF6         	movff	printf@f,tblptrl
  4441  000D62  C190  FFF7         	movff	printf@f+1,tblptrh
  4442  000D66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4443  000D66  6AF8               	clrf	tblptru,c
  4444  000D68                     	endif
  4445  000D68                     	if	0	;tblptru may be non-zero
  4446  000D68                     	endif
  4447  000D68  0008               	tblrd		*
  4448  000D6A  50F5               	movf	tablat,w,c
  4449  000D6C  EC09  F05F         	call	_isdigit
  4450  000D70  A0D8               	btfss	status,0,c
  4451  000D72  D03A               	goto	u25860
  4452                           
  4453                           ;doprnt.c: 598: width = 0;
  4454  000D74  0E00               	movlw	0
  4455  000D76  0101               	movlb	1	; () banked
  4456  000D78  6FB3               	movwf	(printf@width+1)& (0+255),b
  4457  000D7A  0E00               	movlw	0
  4458  000D7C  6FB2               	movwf	printf@width& (0+255),b
  4459  000D7E                     
  4460                           ;doprnt.c: 600: width *= 10;
  4461                           
  4462                           ; BSR set to: 1
  4463  000D7E  C1B2  F06E         	movff	printf@width,___wmul@multiplier
  4464  000D82  C1B3  F06F         	movff	printf@width+1,___wmul@multiplier+1
  4465  000D86  0E00               	movlw	0
  4466  000D88  0100               	movlb	0	; () banked
  4467  000D8A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4468  000D8C  0E0A               	movlw	10
  4469  000D8E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  4470  000D90  EC82  F05E         	call	___wmul	;wreg free
  4471  000D94  C06E  F1B2         	movff	?___wmul,printf@width
  4472  000D98  C06F  F1B3         	movff	?___wmul+1,printf@width+1
  4473                           
  4474                           ;doprnt.c: 601: width += *f++ - '0';
  4475  000D9C  0ED0               	movlw	208
  4476  000D9E  0100               	movlb	0	; () banked
  4477  000DA0  6FF9               	movwf	??_printf& (0+255),b
  4478  000DA2  0EFF               	movlw	255
  4479  000DA4  6FFA               	movwf	(??_printf+1)& (0+255),b
  4480  000DA6  C18F  FFF6         	movff	printf@f,tblptrl
  4481  000DAA  C190  FFF7         	movff	printf@f+1,tblptrh
  4482  000DAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4483  000DAE  6AF8               	clrf	tblptru,c
  4484  000DB0                     	endif
  4485  000DB0                     	if	0	;tblptru may be non-zero
  4486  000DB0                     	endif
  4487  000DB0  0008               	tblrd		*
  4488  000DB2  50F5               	movf	tablat,w,c
  4489  000DB4  6FFB               	movwf	(??_printf+2)& (0+255),b
  4490  000DB6  6BFC               	clrf	(??_printf+3)& (0+255),b
  4491  000DB8  51F9               	movf	??_printf& (0+255),w,b
  4492  000DBA  27FB               	addwf	(??_printf+2)& (0+255),f,b
  4493  000DBC  51FA               	movf	(??_printf+1)& (0+255),w,b
  4494  000DBE  23FC               	addwfc	(??_printf+3)& (0+255),f,b
  4495  000DC0  51FB               	movf	(??_printf+2)& (0+255),w,b
  4496  000DC2  0101               	movlb	1	; () banked
  4497  000DC4  27B2               	addwf	printf@width& (0+255),f,b
  4498  000DC6  0100               	movlb	0	; () banked
  4499  000DC8  51FC               	movf	(??_printf+3)& (0+255),w,b
  4500  000DCA  0101               	movlb	1	; () banked
  4501  000DCC  23B3               	addwfc	(printf@width+1)& (0+255),f,b
  4502                           
  4503                           ; BSR set to: 1
  4504  000DCE  4B8F               	infsnz	printf@f& (0+255),f,b
  4505  000DD0  2B90               	incf	(printf@f+1)& (0+255),f,b
  4506                           
  4507                           ; BSR set to: 1
  4508                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4509  000DD2  C18F  FFF6         	movff	printf@f,tblptrl
  4510  000DD6  C190  FFF7         	movff	printf@f+1,tblptrh
  4511  000DDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4512  000DDA  6AF8               	clrf	tblptru,c
  4513  000DDC                     	endif
  4514  000DDC                     	if	0	;tblptru may be non-zero
  4515  000DDC                     	endif
  4516  000DDC  0008               	tblrd		*
  4517  000DDE  50F5               	movf	tablat,w,c
  4518  000DE0  EC09  F05F         	call	_isdigit
  4519  000DE4  B0D8               	btfsc	status,0,c
  4520  000DE6  D7CB               	goto	l3479
  4521  000DE8                     u25860:
  4522                           
  4523                           ;doprnt.c: 608: }
  4524                           ;doprnt.c: 611: if(*f == '.') {
  4525  000DE8  C18F  FFF6         	movff	printf@f,tblptrl
  4526  000DEC  C190  FFF7         	movff	printf@f+1,tblptrh
  4527  000DF0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4528  000DF0  6AF8               	clrf	tblptru,c
  4529  000DF2                     	endif
  4530  000DF2                     	if	0	;tblptru may be non-zero
  4531  000DF2                     	endif
  4532  000DF2  0008               	tblrd		*
  4533  000DF4  50F5               	movf	tablat,w,c
  4534  000DF6  0A2E               	xorlw	46
  4535  000DF8  A4D8               	btfss	status,2,c
  4536  000DFA  D036               	goto	l3481
  4537                           
  4538                           ;doprnt.c: 612: flag |= 0x4000;
  4539  000DFC  0101               	movlb	1	; () banked
  4540  000DFE  8DAB               	bsf	(printf@flag+1)& (0+255),6,b
  4541                           
  4542                           ;doprnt.c: 613: f++;
  4543  000E00  4B8F               	infsnz	printf@f& (0+255),f,b
  4544  000E02  2B90               	incf	(printf@f+1)& (0+255),f,b
  4545                           
  4546                           ; BSR set to: 1
  4547                           ;doprnt.c: 620: {
  4548                           ;doprnt.c: 621: prec = 0;
  4549  000E04  0E00               	movlw	0
  4550  000E06  6FB8               	movwf	(printf@prec+1)& (0+255),b
  4551  000E08  0E00               	movlw	0
  4552  000E0A  6FB7               	movwf	printf@prec& (0+255),b
  4553                           
  4554                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  4555  000E0C  D021               	goto	l3482
  4556  000E0E                     
  4557                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  4558                           
  4559                           ; BSR set to: 1
  4560  000E0E  C1B7  F06E         	movff	printf@prec,___wmul@multiplier
  4561  000E12  C1B8  F06F         	movff	printf@prec+1,___wmul@multiplier+1
  4562  000E16  0E00               	movlw	0
  4563  000E18  0100               	movlb	0	; () banked
  4564  000E1A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4565  000E1C  0E0A               	movlw	10
  4566  000E1E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  4567  000E20  EC82  F05E         	call	___wmul	;wreg free
  4568  000E24  C18F  FFF6         	movff	printf@f,tblptrl
  4569  000E28  C190  FFF7         	movff	printf@f+1,tblptrh
  4570  000E2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4571  000E2C  6AF8               	clrf	tblptru,c
  4572  000E2E                     	endif
  4573  000E2E                     	if	0	;tblptru may be non-zero
  4574  000E2E                     	endif
  4575  000E2E  0008               	tblrd		*
  4576  000E30  50F5               	movf	tablat,w,c
  4577  000E32  0100               	movlb	0	; () banked
  4578  000E34  276E               	addwf	?___wmul& (0+255),f,b
  4579  000E36  0E00               	movlw	0
  4580  000E38  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  4581  000E3A  0ED0               	movlw	208
  4582  000E3C  256E               	addwf	?___wmul& (0+255),w,b
  4583  000E3E  0101               	movlb	1	; () banked
  4584  000E40  6FB7               	movwf	printf@prec& (0+255),b
  4585  000E42  0EFF               	movlw	255
  4586  000E44  0100               	movlb	0	; () banked
  4587  000E46  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  4588  000E48  0101               	movlb	1	; () banked
  4589  000E4A  6FB8               	movwf	(printf@prec+1)& (0+255),b
  4590                           
  4591                           ; BSR set to: 1
  4592  000E4C  4B8F               	infsnz	printf@f& (0+255),f,b
  4593  000E4E  2B90               	incf	(printf@f+1)& (0+255),f,b
  4594  000E50                     l3482:
  4595                           
  4596                           ; BSR set to: 1
  4597                           
  4598                           ; BSR set to: 1
  4599  000E50  C18F  FFF6         	movff	printf@f,tblptrl
  4600  000E54  C190  FFF7         	movff	printf@f+1,tblptrh
  4601  000E58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4602  000E58  6AF8               	clrf	tblptru,c
  4603  000E5A                     	endif
  4604  000E5A                     	if	0	;tblptru may be non-zero
  4605  000E5A                     	endif
  4606  000E5A  0008               	tblrd		*
  4607  000E5C  50F5               	movf	tablat,w,c
  4608  000E5E  EC09  F05F         	call	_isdigit
  4609  000E62  A0D8               	btfss	status,0,c
  4610  000E64  D051               	goto	l3486
  4611  000E66  D7D3               	goto	l3483
  4612  000E68                     l3481:
  4613                           
  4614                           ;doprnt.c: 626: prec = 0;
  4615  000E68  0E00               	movlw	0
  4616  000E6A  0101               	movlb	1	; () banked
  4617  000E6C  6FB8               	movwf	(printf@prec+1)& (0+255),b
  4618  000E6E  0E00               	movlw	0
  4619  000E70  6FB7               	movwf	printf@prec& (0+255),b
  4620                           
  4621                           ; BSR set to: 1
  4622                           ;doprnt.c: 628: flag |= 0x1000;
  4623  000E72  89AB               	bsf	(printf@flag+1)& (0+255),4,b
  4624                           
  4625                           ; BSR set to: 1
  4626                           ;doprnt.c: 630: }
  4627                           ;doprnt.c: 635: switch(c = *f++) {
  4628  000E74  D049               	goto	l3486
  4629  000E76                     
  4630                           ; BSR set to: 1
  4631                           ;doprnt.c: 663: flag |= 0x400;
  4632                           
  4633                           ; BSR set to: 1
  4634  000E76  85AB               	bsf	(printf@flag+1)& (0+255),2,b
  4635                           
  4636                           ;doprnt.c: 664: break;
  4637  000E78  D05A               	goto	l3490
  4638  000E7A                     
  4639                           ; BSR set to: 1
  4640                           ;doprnt.c: 753: if(prec && prec < len)
  4641                           
  4642                           ; BSR set to: 1
  4643  000E7A  51B7               	movf	printf@prec& (0+255),w,b
  4644  000E7C  11B8               	iorwf	(printf@prec+1)& (0+255),w,b
  4645  000E7E  B4D8               	btfsc	status,2,c
  4646  000E80  D00A               	goto	l3492
  4647                           
  4648                           ; BSR set to: 1
  4649  000E82  51A4               	movf	printf@len& (0+255),w,b
  4650  000E84  5DB7               	subwf	printf@prec& (0+255),w,b
  4651  000E86  51A5               	movf	(printf@len+1)& (0+255),w,b
  4652  000E88  59B8               	subwfb	(printf@prec+1)& (0+255),w,b
  4653  000E8A  B0D8               	btfsc	status,0,c
  4654  000E8C  D004               	goto	l3492
  4655                           
  4656                           ; BSR set to: 1
  4657                           ;doprnt.c: 754: len = prec;
  4658  000E8E  C1B7  F1A4         	movff	printf@prec,printf@len
  4659  000E92  C1B8  F1A5         	movff	printf@prec+1,printf@len+1
  4660  000E96                     l3492:
  4661                           
  4662                           ; BSR set to: 1
  4663                           ;doprnt.c: 757: if(width > len)
  4664                           
  4665                           ; BSR set to: 1
  4666  000E96  51B2               	movf	printf@width& (0+255),w,b
  4667  000E98  5DA4               	subwf	printf@len& (0+255),w,b
  4668  000E9A  51B3               	movf	(printf@width+1)& (0+255),w,b
  4669  000E9C  59A5               	subwfb	(printf@len+1)& (0+255),w,b
  4670  000E9E  B0D8               	btfsc	status,0,c
  4671  000EA0  D005               	goto	l3493
  4672                           
  4673                           ; BSR set to: 1
  4674                           ;doprnt.c: 758: width -= len;
  4675  000EA2  51A4               	movf	printf@len& (0+255),w,b
  4676  000EA4  5FB2               	subwf	printf@width& (0+255),f,b
  4677  000EA6  51A5               	movf	(printf@len+1)& (0+255),w,b
  4678  000EA8  5BB3               	subwfb	(printf@width+1)& (0+255),f,b
  4679  000EAA  D008               	goto	l3495
  4680  000EAC                     l3493:
  4681                           
  4682                           ; BSR set to: 1
  4683                           ;doprnt.c: 759: else
  4684                           ;doprnt.c: 760: width = 0;
  4685                           
  4686                           ; BSR set to: 1
  4687  000EAC  0E00               	movlw	0
  4688  000EAE  6FB3               	movwf	(printf@width+1)& (0+255),b
  4689  000EB0  0E00               	movlw	0
  4690  000EB2  6FB2               	movwf	printf@width& (0+255),b
  4691                           
  4692                           ; BSR set to: 1
  4693                           ;doprnt.c: 764: while(width--)
  4694  000EB4  D003               	goto	l3495
  4695  000EB6                     l21683:
  4696                           
  4697                           ; BSR set to: 1
  4698                           ;doprnt.c: 765: (putch(' ') );
  4699  000EB6  0E20               	movlw	32
  4700  000EB8  EC55  F062         	call	_putch
  4701  000EBC                     l3495:
  4702  000EBC  0101               	movlb	1	; () banked
  4703  000EBE  07B2               	decf	printf@width& (0+255),f,b
  4704  000EC0  A0D8               	btfss	status,0,c
  4705  000EC2  07B3               	decf	(printf@width+1)& (0+255),f,b
  4706  000EC4  29B2               	incf	printf@width& (0+255),w,b
  4707  000EC6  E1F7               	bnz	l21683
  4708  000EC8  29B3               	incf	(printf@width+1)& (0+255),w,b
  4709  000ECA  B4D8               	btfsc	status,2,c
  4710  000ECC  D00B               	goto	l3498
  4711  000ECE  D7F3               	goto	l3496
  4712  000ED0                     l21687:
  4713                           
  4714                           ; BSR set to: 1
  4715                           ;doprnt.c: 768: (putch(*cp++) );
  4716  000ED0  C1A2  FFD9         	movff	printf@cp,fsr2l
  4717  000ED4  C1A3  FFDA         	movff	printf@cp+1,fsr2h
  4718  000ED8  50DF               	movf	indf2,w,c
  4719  000EDA  EC55  F062         	call	_putch
  4720  000EDE  0101               	movlb	1	; () banked
  4721  000EE0  4BA2               	infsnz	printf@cp& (0+255),f,b
  4722  000EE2  2BA3               	incf	(printf@cp+1)& (0+255),f,b
  4723  000EE4                     l3498:
  4724                           
  4725                           ; BSR set to: 1
  4726                           
  4727                           ; BSR set to: 1
  4728  000EE4  07A4               	decf	printf@len& (0+255),f,b
  4729  000EE6  A0D8               	btfss	status,0,c
  4730  000EE8  07A5               	decf	(printf@len+1)& (0+255),f,b
  4731  000EEA  29A4               	incf	printf@len& (0+255),w,b
  4732  000EEC  E1F1               	bnz	l21687
  4733  000EEE  29A5               	incf	(printf@len+1)& (0+255),w,b
  4734  000EF0  B4D8               	btfsc	status,2,c
  4735  000EF2  D3D1               	goto	l3558
  4736  000EF4  D7ED               	goto	l3499
  4737  000EF6                     
  4738                           ; BSR set to: 1
  4739                           ;doprnt.c: 805: cp = (char *)&c;
  4740                           
  4741                           ; BSR set to: 1
  4742  000EF6  0EB9               	movlw	low printf@c
  4743  000EF8  6FA2               	movwf	printf@cp& (0+255),b
  4744  000EFA  0E01               	movlw	high printf@c
  4745  000EFC  6FA3               	movwf	(printf@cp+1)& (0+255),b
  4746                           
  4747                           ; BSR set to: 1
  4748                           ;doprnt.c: 806: len = 1;
  4749  000EFE  0E00               	movlw	0
  4750  000F00  6FA5               	movwf	(printf@len+1)& (0+255),b
  4751  000F02  0E01               	movlw	1
  4752  000F04  6FA4               	movwf	printf@len& (0+255),b
  4753                           
  4754                           ;doprnt.c: 807: goto dostring;
  4755  000F06  D7B9               	goto	l3491
  4756  000F08                     l3486:
  4757                           
  4758                           ; BSR set to: 1
  4759  000F08  C18F  FFF6         	movff	printf@f,tblptrl
  4760  000F0C  C190  FFF7         	movff	printf@f+1,tblptrh
  4761  000F10  0101               	movlb	1	; () banked
  4762  000F12  4B8F               	infsnz	printf@f& (0+255),f,b
  4763  000F14  2B90               	incf	(printf@f+1)& (0+255),f,b
  4764  000F16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4765  000F16  6AF8               	clrf	tblptru,c
  4766  000F18                     	endif
  4767  000F18                     	if	0	;tblptru may be non-zero
  4768  000F18                     	endif
  4769  000F18  0008               	tblrd		*
  4770  000F1A  CFF5 F1B9          	movff	tablat,printf@c
  4771  000F1E  51B9               	movf	printf@c& (0+255),w,b
  4772                           
  4773                           ; Switch size 1, requested type "space"
  4774                           ; Number of cases is 2, Range of values is 0 to 102
  4775                           ; switch strategies available:
  4776                           ; Name         Instructions Cycles
  4777                           ; simple_byte            7     4 (average)
  4778                           ;	Chosen strategy is simple_byte
  4779  000F20  0A00               	xorlw	0	; case 0
  4780  000F22  B4D8               	btfsc	status,2,c
  4781  000F24  0012               	return	
  4782  000F26  0A66               	xorlw	102	; case 102
  4783  000F28  B4D8               	btfsc	status,2,c
  4784  000F2A  D7A5               	goto	l3489
  4785  000F2C  D7E4               	goto	l3501
  4786  000F2E                     l3490:
  4787                           
  4788                           ; BSR set to: 1
  4789                           ;doprnt.c: 825: if(flag & (0x700)) {
  4790                           
  4791                           ; BSR set to: 1
  4792  000F2E  0E07               	movlw	7
  4793  000F30  15AB               	andwf	(printf@flag+1)& (0+255),w,b
  4794  000F32  B4D8               	btfsc	status,2,c
  4795  000F34  D313               	goto	l3502
  4796                           
  4797                           ; BSR set to: 1
  4798                           ;doprnt.c: 827: if(flag & 0x1000)
  4799  000F36  A9AB               	btfss	(printf@flag+1)& (0+255),4,b
  4800  000F38  D004               	goto	l3503
  4801                           
  4802                           ; BSR set to: 1
  4803                           ;doprnt.c: 829: prec = 6;
  4804  000F3A  0E00               	movlw	0
  4805  000F3C  6FB8               	movwf	(printf@prec+1)& (0+255),b
  4806  000F3E  0E06               	movlw	6
  4807  000F40  6FB7               	movwf	printf@prec& (0+255),b
  4808  000F42                     l3503:
  4809                           
  4810                           ; BSR set to: 1
  4811                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4812                           
  4813                           ; BSR set to: 1
  4814  000F42  C1A0  FFD9         	movff	printf@ap,fsr2l
  4815  000F46  C1A1  FFDA         	movff	printf@ap+1,fsr2h
  4816  000F4A  CFDE F1B4          	movff	postinc2,printf@fval
  4817  000F4E  CFDE F1B5          	movff	postinc2,printf@fval+1
  4818  000F52  CFDD F1B6          	movff	postdec2,printf@fval+2
  4819                           
  4820                           ; BSR set to: 1
  4821  000F56  0E03               	movlw	3
  4822  000F58  27A0               	addwf	printf@ap& (0+255),f,b
  4823  000F5A  0E00               	movlw	0
  4824  000F5C  23A1               	addwfc	(printf@ap+1)& (0+255),f,b
  4825                           
  4826                           ; BSR set to: 1
  4827                           ;doprnt.c: 831: if(fval < 0.0) {
  4828  000F5E  AFB6               	btfss	(printf@fval+2)& (0+255),7,b
  4829  000F60  D011               	goto	l3504
  4830                           
  4831                           ; BSR set to: 1
  4832                           ;doprnt.c: 832: fval = -fval;
  4833  000F62  C1B4  F060         	movff	printf@fval,___ftneg@f1
  4834  000F66  C1B5  F061         	movff	printf@fval+1,___ftneg@f1+1
  4835  000F6A  C1B6  F062         	movff	printf@fval+2,___ftneg@f1+2
  4836  000F6E  ECBE  F05E         	call	___ftneg	;wreg free
  4837  000F72  C060  F1B4         	movff	?___ftneg,printf@fval
  4838  000F76  C061  F1B5         	movff	?___ftneg+1,printf@fval+1
  4839  000F7A  C062  F1B6         	movff	?___ftneg+2,printf@fval+2
  4840                           
  4841                           ;doprnt.c: 833: flag |= 0x03;
  4842  000F7E  0E03               	movlw	3
  4843  000F80  0101               	movlb	1	; () banked
  4844  000F82  13AA               	iorwf	printf@flag& (0+255),f,b
  4845  000F84                     l3504:
  4846                           
  4847                           ; BSR set to: 1
  4848                           ;doprnt.c: 834: }
  4849                           ;doprnt.c: 835: exp = 0;
  4850                           
  4851                           ; BSR set to: 1
  4852  000F84  0E00               	movlw	0
  4853  000F86  6FB1               	movwf	(printf@exp+1)& (0+255),b
  4854  000F88  0E00               	movlw	0
  4855  000F8A  6FB0               	movwf	printf@exp& (0+255),b
  4856                           
  4857                           ; BSR set to: 1
  4858                           ;doprnt.c: 836: if( fval!=0) {
  4859  000F8C  51B4               	movf	printf@fval& (0+255),w,b
  4860  000F8E  11B5               	iorwf	(printf@fval+1)& (0+255),w,b
  4861  000F90  11B6               	iorwf	(printf@fval+2)& (0+255),w,b
  4862  000F92  B4D8               	btfsc	status,2,c
  4863  000F94  D090               	goto	l3509
  4864                           
  4865                           ; BSR set to: 1
  4866                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4867  000F96  0E82               	movlw	130
  4868  000F98  0100               	movlb	0	; () banked
  4869  000F9A  6FF9               	movwf	??_printf& (0+255),b
  4870  000F9C  0EFF               	movlw	255
  4871  000F9E  6FFA               	movwf	(??_printf+1)& (0+255),b
  4872  000FA0  C1B4  F0FB         	movff	printf@fval,??_printf+2
  4873  000FA4  C1B5  F0FC         	movff	printf@fval+1,??_printf+3
  4874  000FA8  C1B6  F0FD         	movff	printf@fval+2,??_printf+4
  4875  000FAC  C1B7  F0FE         	movff	printf@fval+3,??_printf+5
  4876  000FB0  0E10               	movlw	16
  4877  000FB2  D005               	goto	u25980
  4878  000FB4                     u25985:
  4879  000FB4  90D8               	bcf	status,0,c
  4880  000FB6  33FE               	rrcf	(??_printf+5)& (0+255),f,b
  4881  000FB8  33FD               	rrcf	(??_printf+4)& (0+255),f,b
  4882  000FBA  33FC               	rrcf	(??_printf+3)& (0+255),f,b
  4883  000FBC  33FB               	rrcf	(??_printf+2)& (0+255),f,b
  4884  000FBE                     u25980:
  4885  000FBE  2EE8               	decfsz	wreg,f,c
  4886  000FC0  D7F9               	goto	u25985
  4887  000FC2  51FB               	movf	(??_printf+2)& (0+255),w,b
  4888  000FC4  25F9               	addwf	??_printf& (0+255),w,b
  4889  000FC6  0101               	movlb	1	; () banked
  4890  000FC8  6FB0               	movwf	printf@exp& (0+255),b
  4891  000FCA  0E00               	movlw	0
  4892  000FCC  0100               	movlb	0	; () banked
  4893  000FCE  21FA               	addwfc	(??_printf+1)& (0+255),w,b
  4894  000FD0  0101               	movlb	1	; () banked
  4895  000FD2  6FB1               	movwf	(printf@exp+1)& (0+255),b
  4896                           
  4897                           ; BSR set to: 1
  4898                           ;doprnt.c: 838: exp--;
  4899  000FD4  07B0               	decf	printf@exp& (0+255),f,b
  4900  000FD6  A0D8               	btfss	status,0,c
  4901  000FD8  07B1               	decf	(printf@exp+1)& (0+255),f,b
  4902                           
  4903                           ; BSR set to: 1
  4904                           ;doprnt.c: 839: exp *= 3;
  4905  000FDA  C1B0  F06E         	movff	printf@exp,___wmul@multiplier
  4906  000FDE  C1B1  F06F         	movff	printf@exp+1,___wmul@multiplier+1
  4907  000FE2  0E00               	movlw	0
  4908  000FE4  0100               	movlb	0	; () banked
  4909  000FE6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4910  000FE8  0E03               	movlw	3
  4911  000FEA  6F70               	movwf	___wmul@multiplicand& (0+255),b
  4912  000FEC  EC82  F05E         	call	___wmul	;wreg free
  4913  000FF0  C06E  F1B0         	movff	?___wmul,printf@exp
  4914  000FF4  C06F  F1B1         	movff	?___wmul+1,printf@exp+1
  4915                           
  4916                           ;doprnt.c: 840: exp /= 10;
  4917  000FF8  C1B0  F066         	movff	printf@exp,___awdiv@dividend
  4918  000FFC  C1B1  F067         	movff	printf@exp+1,___awdiv@dividend+1
  4919  001000  0E00               	movlw	0
  4920  001002  0100               	movlb	0	; () banked
  4921  001004  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  4922  001006  0E0A               	movlw	10
  4923  001008  6F68               	movwf	___awdiv@divisor& (0+255),b
  4924  00100A  EC2A  F050         	call	___awdiv	;wreg free
  4925  00100E  C066  F1B0         	movff	?___awdiv,printf@exp
  4926  001012  C067  F1B1         	movff	?___awdiv+1,printf@exp+1
  4927                           
  4928                           ;doprnt.c: 841: if(exp < 0)
  4929  001016  0101               	movlb	1	; () banked
  4930  001018  AFB1               	btfss	(printf@exp+1)& (0+255),7,b
  4931  00101A  D003               	goto	l3506
  4932                           
  4933                           ; BSR set to: 1
  4934                           ;doprnt.c: 842: exp--;
  4935  00101C  07B0               	decf	printf@exp& (0+255),f,b
  4936  00101E  A0D8               	btfss	status,0,c
  4937  001020  07B1               	decf	(printf@exp+1)& (0+255),f,b
  4938  001022                     l3506:
  4939                           
  4940                           ; BSR set to: 1
  4941                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  4942                           
  4943                           ; BSR set to: 1
  4944  001022  51B0               	movf	printf@exp& (0+255),w,b
  4945  001024  0800               	sublw	0
  4946  001026  EC07  F015         	call	_scale
  4947  00102A  C083  F1AC         	movff	?_scale,printf@tmpval
  4948  00102E  C084  F1AD         	movff	?_scale+1,printf@tmpval+1
  4949  001032  C085  F1AE         	movff	?_scale+2,printf@tmpval+2
  4950                           
  4951                           ;doprnt.c: 847: tmpval.integ *= fval;
  4952  001036  C1AC  F074         	movff	printf@tmpval,___ftmul@f1
  4953  00103A  C1AD  F075         	movff	printf@tmpval+1,___ftmul@f1+1
  4954  00103E  C1AE  F076         	movff	printf@tmpval+2,___ftmul@f1+2
  4955  001042  C1B4  F077         	movff	printf@fval,___ftmul@f2
  4956  001046  C1B5  F078         	movff	printf@fval+1,___ftmul@f2+1
  4957  00104A  C1B6  F079         	movff	printf@fval+2,___ftmul@f2+2
  4958  00104E  EC56  F045         	call	___ftmul	;wreg free
  4959  001052  C074  F1AC         	movff	?___ftmul,printf@tmpval
  4960  001056  C075  F1AD         	movff	?___ftmul+1,printf@tmpval+1
  4961  00105A  C076  F1AE         	movff	?___ftmul+2,printf@tmpval+2
  4962                           
  4963                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  4964  00105E  C1AC  F060         	movff	printf@tmpval,___ftge@ff1
  4965  001062  C1AD  F061         	movff	printf@tmpval+1,___ftge@ff1+1
  4966  001066  C1AE  F062         	movff	printf@tmpval+2,___ftge@ff1+2
  4967  00106A  0E00               	movlw	0
  4968  00106C  0100               	movlb	0	; () banked
  4969  00106E  6F63               	movwf	___ftge@ff2& (0+255),b
  4970  001070  0E80               	movlw	128
  4971  001072  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  4972  001074  0E3F               	movlw	63
  4973  001076  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  4974  001078  EC3C  F04E         	call	___ftge	;wreg free
  4975  00107C  0100               	movlb	0	; () banked
  4976  00107E  B0D8               	btfsc	status,0,c
  4977  001080  D005               	goto	l3507
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;doprnt.c: 849: exp--;
  4981  001082  0101               	movlb	1	; () banked
  4982  001084  07B0               	decf	printf@exp& (0+255),f,b
  4983  001086  A0D8               	btfss	status,0,c
  4984  001088  07B1               	decf	(printf@exp+1)& (0+255),f,b
  4985  00108A  D015               	goto	l3509
  4986  00108C                     l3507:
  4987                           
  4988                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  4989                           
  4990                           ; BSR set to: 1
  4991  00108C  C1AC  F060         	movff	printf@tmpval,___ftge@ff1
  4992  001090  C1AD  F061         	movff	printf@tmpval+1,___ftge@ff1+1
  4993  001094  C1AE  F062         	movff	printf@tmpval+2,___ftge@ff1+2
  4994  001098  0E00               	movlw	0
  4995  00109A  0100               	movlb	0	; () banked
  4996  00109C  6F63               	movwf	___ftge@ff2& (0+255),b
  4997  00109E  0E20               	movlw	32
  4998  0010A0  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  4999  0010A2  0E41               	movlw	65
  5000  0010A4  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  5001  0010A6  EC3C  F04E         	call	___ftge	;wreg free
  5002  0010AA  0100               	movlb	0	; () banked
  5003  0010AC  A0D8               	btfss	status,0,c
  5004  0010AE  D003               	goto	l3509
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;doprnt.c: 851: exp++;
  5008  0010B0  0101               	movlb	1	; () banked
  5009  0010B2  4BB0               	infsnz	printf@exp& (0+255),f,b
  5010  0010B4  2BB1               	incf	(printf@exp+1)& (0+255),f,b
  5011  0010B6                     l3509:
  5012                           
  5013                           ;doprnt.c: 852: }
  5014                           ;doprnt.c: 1112: if(prec <= 12)
  5015                           
  5016                           ; BSR set to: 1
  5017                           
  5018                           ; BSR set to: 1
  5019                           
  5020                           ; BSR set to: 1
  5021  0010B6  0101               	movlb	1	; () banked
  5022  0010B8  BFB8               	btfsc	(printf@prec+1)& (0+255),7,b
  5023  0010BA  D006               	goto	u26020
  5024  0010BC  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5025  0010BE  E11B               	bnz	l21749
  5026  0010C0  0E0D               	movlw	13
  5027  0010C2  5DB7               	subwf	printf@prec& (0+255),w,b
  5028  0010C4  B0D8               	btfsc	status,0,c
  5029  0010C6  D017               	goto	l3510
  5030  0010C8                     u26020:
  5031                           
  5032                           ; BSR set to: 1
  5033                           ;doprnt.c: 1113: fval += fround(prec);
  5034  0010C8  C1B4  F08D         	movff	printf@fval,___ftadd@f1
  5035  0010CC  C1B5  F08E         	movff	printf@fval+1,___ftadd@f1+1
  5036  0010D0  C1B6  F08F         	movff	printf@fval+2,___ftadd@f1+2
  5037  0010D4  51B7               	movf	printf@prec& (0+255),w,b
  5038  0010D6  EC62  F02B         	call	_fround
  5039  0010DA  C083  F090         	movff	?_fround,___ftadd@f2
  5040  0010DE  C084  F091         	movff	?_fround+1,___ftadd@f2+1
  5041  0010E2  C085  F092         	movff	?_fround+2,___ftadd@f2+2
  5042  0010E6  ECD5  F034         	call	___ftadd	;wreg free
  5043  0010EA  C08D  F1B4         	movff	?___ftadd,printf@fval
  5044  0010EE  C08E  F1B5         	movff	?___ftadd+1,printf@fval+1
  5045  0010F2  C08F  F1B6         	movff	?___ftadd+2,printf@fval+2
  5046  0010F6                     l3510:
  5047  0010F6                     l21749:
  5048                           
  5049                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5050  0010F6  0101               	movlb	1	; () banked
  5051  0010F8  BFB1               	btfsc	(printf@exp+1)& (0+255),7,b
  5052  0010FA  D006               	goto	u26030
  5053  0010FC  51B1               	movf	(printf@exp+1)& (0+255),w,b
  5054  0010FE  E121               	bnz	l21757
  5055  001100  0E0A               	movlw	10
  5056  001102  5DB0               	subwf	printf@exp& (0+255),w,b
  5057  001104  B0D8               	btfsc	status,0,c
  5058  001106  D01D               	goto	u26060
  5059  001108                     u26030:
  5060                           
  5061                           ; BSR set to: 1
  5062  001108  51B4               	movf	printf@fval& (0+255),w,b
  5063  00110A  11B5               	iorwf	(printf@fval+1)& (0+255),w,b
  5064  00110C  11B6               	iorwf	(printf@fval+2)& (0+255),w,b
  5065  00110E  B4D8               	btfsc	status,2,c
  5066  001110  D059               	goto	l3511
  5067                           
  5068                           ; BSR set to: 1
  5069  001112  C1B4  F083         	movff	printf@fval,___fttol@f1
  5070  001116  C1B5  F084         	movff	printf@fval+1,___fttol@f1+1
  5071  00111A  C1B6  F085         	movff	printf@fval+2,___fttol@f1+2
  5072  00111E  ECDA  F044         	call	___fttol	;wreg free
  5073  001122  0100               	movlb	0	; () banked
  5074  001124  5183               	movf	?___fttol& (0+255),w,b
  5075  001126  1184               	iorwf	(?___fttol+1)& (0+255),w,b
  5076  001128  1185               	iorwf	(?___fttol+2)& (0+255),w,b
  5077  00112A  1186               	iorwf	(?___fttol+3)& (0+255),w,b
  5078  00112C  A4D8               	btfss	status,2,c
  5079  00112E  D04A               	goto	l3511
  5080                           
  5081                           ; BSR set to: 0
  5082  001130  0101               	movlb	1	; () banked
  5083  001132  BFB1               	btfsc	(printf@exp+1)& (0+255),7,b
  5084  001134  D047               	goto	l3511
  5085  001136  51B1               	movf	(printf@exp+1)& (0+255),w,b
  5086  001138  E104               	bnz	l21757
  5087  00113A  0E02               	movlw	2
  5088  00113C  5DB0               	subwf	printf@exp& (0+255),w,b
  5089  00113E  A0D8               	btfss	status,0,c
  5090  001140  D041               	goto	l3511
  5091  001142                     u26060:
  5092  001142                     l21757:
  5093                           
  5094                           ; BSR set to: 1
  5095                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  5096  001142  C1AC  F060         	movff	printf@tmpval,___ftge@ff1
  5097  001146  C1AD  F061         	movff	printf@tmpval+1,___ftge@ff1+1
  5098  00114A  C1AE  F062         	movff	printf@tmpval+2,___ftge@ff1+2
  5099  00114E  0E70               	movlw	112
  5100  001150  0100               	movlb	0	; () banked
  5101  001152  6F63               	movwf	___ftge@ff2& (0+255),b
  5102  001154  0E89               	movlw	137
  5103  001156  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  5104  001158  0E40               	movlw	64
  5105  00115A  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  5106  00115C  EC3C  F04E         	call	___ftge	;wreg free
  5107  001160  0100               	movlb	0	; () banked
  5108  001162  B0D8               	btfsc	status,0,c
  5109  001164  D003               	goto	l3514
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5113  001166  0101               	movlb	1	; () banked
  5114  001168  0EF7               	movlw	247
  5115  00116A  D002               	goto	L1
  5116  00116C                     l3514:
  5117                           
  5118                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5119                           
  5120                           ; BSR set to: 1
  5121  00116C  0101               	movlb	1	; () banked
  5122  00116E  0EF8               	movlw	248
  5123  001170                     L1:
  5124  001170  27B0               	addwf	printf@exp& (0+255),f,b
  5125  001172  0EFF               	movlw	255
  5126  001174  23B1               	addwfc	(printf@exp+1)& (0+255),f,b
  5127                           
  5128                           ; BSR set to: 1
  5129                           ;doprnt.c: 1124: }
  5130                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  5131                           
  5132                           ; BSR set to: 1
  5133  001176  51B0               	movf	printf@exp& (0+255),w,b
  5134  001178  EC07  F015         	call	_scale
  5135  00117C  C083  F1AC         	movff	?_scale,printf@tmpval
  5136  001180  C084  F1AD         	movff	?_scale+1,printf@tmpval+1
  5137  001184  C085  F1AE         	movff	?_scale+2,printf@tmpval+2
  5138                           
  5139                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5140  001188  C1B4  F060         	movff	printf@fval,__tdiv_to_l_@f1
  5141  00118C  C1B5  F061         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  5142  001190  C1B6  F062         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  5143  001194  C1AC  F063         	movff	printf@tmpval,__tdiv_to_l_@f2
  5144  001198  C1AD  F064         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  5145  00119C  C1AE  F065         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  5146  0011A0  ECD3  F03E         	call	__tdiv_to_l_	;wreg free
  5147  0011A4  C060  F1A6         	movff	?__tdiv_to_l_,printf@val
  5148  0011A8  C061  F1A7         	movff	?__tdiv_to_l_+1,printf@val+1
  5149  0011AC  C062  F1A8         	movff	?__tdiv_to_l_+2,printf@val+2
  5150  0011B0  C063  F1A9         	movff	?__tdiv_to_l_+3,printf@val+3
  5151                           
  5152                           ;doprnt.c: 1129: fval = 0.0;
  5153  0011B4  0E00               	movlw	0
  5154  0011B6  0101               	movlb	1	; () banked
  5155  0011B8  6FB4               	movwf	printf@fval& (0+255),b
  5156  0011BA  0E00               	movlw	0
  5157  0011BC  6FB5               	movwf	(printf@fval+1)& (0+255),b
  5158  0011BE  0E00               	movlw	0
  5159  0011C0  6FB6               	movwf	(printf@fval+2)& (0+255),b
  5160                           
  5161                           ;doprnt.c: 1130: } else {
  5162  0011C2  D033               	goto	l3520
  5163  0011C4                     l3511:
  5164                           
  5165                           ;doprnt.c: 1131: val = (unsigned long)fval;
  5166                           
  5167                           ; BSR set to: 1
  5168  0011C4  C1B4  F083         	movff	printf@fval,___fttol@f1
  5169  0011C8  C1B5  F084         	movff	printf@fval+1,___fttol@f1+1
  5170  0011CC  C1B6  F085         	movff	printf@fval+2,___fttol@f1+2
  5171  0011D0  ECDA  F044         	call	___fttol	;wreg free
  5172  0011D4  C083  F1A6         	movff	?___fttol,printf@val
  5173  0011D8  C084  F1A7         	movff	?___fttol+1,printf@val+1
  5174  0011DC  C085  F1A8         	movff	?___fttol+2,printf@val+2
  5175  0011E0  C086  F1A9         	movff	?___fttol+3,printf@val+3
  5176                           
  5177                           ;doprnt.c: 1132: fval -= (double)val;
  5178  0011E4  C1B4  F0E4         	movff	printf@fval,___ftsub@f1
  5179  0011E8  C1B5  F0E5         	movff	printf@fval+1,___ftsub@f1+1
  5180  0011EC  C1B6  F0E6         	movff	printf@fval+2,___ftsub@f1+2
  5181  0011F0  C1A6  F0DB         	movff	printf@val,___lltoft@c
  5182  0011F4  C1A7  F0DC         	movff	printf@val+1,___lltoft@c+1
  5183  0011F8  C1A8  F0DD         	movff	printf@val+2,___lltoft@c+2
  5184  0011FC  C1A9  F0DE         	movff	printf@val+3,___lltoft@c+3
  5185  001200  ECDB  F055         	call	___lltoft	;wreg free
  5186  001204  C0DB  F0E7         	movff	?___lltoft,___ftsub@f2
  5187  001208  C0DC  F0E8         	movff	?___lltoft+1,___ftsub@f2+1
  5188  00120C  C0DD  F0E9         	movff	?___lltoft+2,___ftsub@f2+2
  5189  001210  EC1B  F05B         	call	___ftsub	;wreg free
  5190  001214  C0E4  F1B4         	movff	?___ftsub,printf@fval
  5191  001218  C0E5  F1B5         	movff	?___ftsub+1,printf@fval+1
  5192  00121C  C0E6  F1B6         	movff	?___ftsub+2,printf@fval+2
  5193                           
  5194                           ;doprnt.c: 1133: exp = 0;
  5195  001220  0E00               	movlw	0
  5196  001222  0101               	movlb	1	; () banked
  5197  001224  6FB1               	movwf	(printf@exp+1)& (0+255),b
  5198  001226  0E00               	movlw	0
  5199  001228  6FB0               	movwf	printf@exp& (0+255),b
  5200  00122A                     l3520:
  5201                           
  5202                           ; BSR set to: 1
  5203                           ;doprnt.c: 1134: }
  5204                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5205                           
  5206                           ; BSR set to: 1
  5207  00122A  0E01               	movlw	1
  5208  00122C  6FB9               	movwf	printf@c& (0+255),b
  5209  00122E                     l21777:
  5210                           
  5211                           ; BSR set to: 1
  5212  00122E  0E0A               	movlw	10
  5213  001230  19B9               	xorwf	printf@c& (0+255),w,b
  5214  001232  B4D8               	btfsc	status,2,c
  5215  001234  D01B               	goto	u26100
  5216                           
  5217                           ; BSR set to: 1
  5218                           ;doprnt.c: 1137: if(val < dpowers[c])
  5219                           
  5220                           ; BSR set to: 1
  5221                           
  5222                           ; BSR set to: 1
  5223  001236  51B9               	movf	printf@c& (0+255),w,b
  5224  001238  0D04               	mullw	4
  5225  00123A  0EF9               	movlw	low _dpowers
  5226  00123C  24F3               	addwf	prodl,w,c
  5227  00123E  6EF6               	movwf	tblptrl,c
  5228  001240  0EFD               	movlw	high _dpowers
  5229  001242  20F4               	addwfc	prodh,w,c
  5230  001244  6EF7               	movwf	tblptrh,c
  5231  001246                     	if	1	;There are 3 active tblptr bytes
  5232  001246  6AF8               	clrf	tblptru,c
  5233  001248  0E00               	movlw	low (__mediumconst shr (0+16))
  5234  00124A  22F8               	addwfc	tblptru,f,c
  5235  00124C                     	endif
  5236  00124C  0009               	tblrd		*+
  5237  00124E  50F5               	movf	tablat,w,c
  5238  001250  5DA6               	subwf	printf@val& (0+255),w,b
  5239  001252  0009               	tblrd		*+
  5240  001254  50F5               	movf	tablat,w,c
  5241  001256  59A7               	subwfb	(printf@val+1)& (0+255),w,b
  5242  001258  0009               	tblrd		*+
  5243  00125A  50F5               	movf	tablat,w,c
  5244  00125C  59A8               	subwfb	(printf@val+2)& (0+255),w,b
  5245  00125E  0009               	tblrd		*+
  5246  001260  50F5               	movf	tablat,w,c
  5247  001262  59A9               	subwfb	(printf@val+3)& (0+255),w,b
  5248  001264  A0D8               	btfss	status,0,c
  5249  001266  D002               	goto	u26100
  5250                           
  5251                           ; BSR set to: 1
  5252                           
  5253                           ; BSR set to: 1
  5254                           
  5255                           ; BSR set to: 1
  5256                           ;doprnt.c: 1138: break;
  5257  001268  2BB9               	incf	printf@c& (0+255),f,b
  5258  00126A  D7E1               	goto	l21777
  5259  00126C                     u26100:
  5260                           
  5261                           ; BSR set to: 1
  5262                           ;doprnt.c: 1142: width -= prec + c + exp;
  5263                           
  5264                           ; BSR set to: 1
  5265  00126C  C1B9  F0F9         	movff	printf@c,??_printf
  5266  001270  0100               	movlb	0	; () banked
  5267  001272  6BFA               	clrf	(??_printf+1)& (0+255),b
  5268  001274  BFF9               	btfsc	??_printf& (0+255),7,b
  5269  001276  07FA               	decf	(??_printf+1)& (0+255),f,b
  5270  001278  0101               	movlb	1	; () banked
  5271  00127A  51B7               	movf	printf@prec& (0+255),w,b
  5272  00127C  0100               	movlb	0	; () banked
  5273  00127E  27F9               	addwf	??_printf& (0+255),f,b
  5274  001280  0101               	movlb	1	; () banked
  5275  001282  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5276  001284  0100               	movlb	0	; () banked
  5277  001286  23FA               	addwfc	(??_printf+1)& (0+255),f,b
  5278  001288  0101               	movlb	1	; () banked
  5279  00128A  51B0               	movf	printf@exp& (0+255),w,b
  5280  00128C  0100               	movlb	0	; () banked
  5281  00128E  27F9               	addwf	??_printf& (0+255),f,b
  5282  001290  0101               	movlb	1	; () banked
  5283  001292  51B1               	movf	(printf@exp+1)& (0+255),w,b
  5284  001294  0100               	movlb	0	; () banked
  5285  001296  23FA               	addwfc	(??_printf+1)& (0+255),f,b
  5286  001298  51F9               	movf	??_printf& (0+255),w,b
  5287  00129A  0101               	movlb	1	; () banked
  5288  00129C  5FB2               	subwf	printf@width& (0+255),f,b
  5289  00129E  0100               	movlb	0	; () banked
  5290  0012A0  51FA               	movf	(??_printf+1)& (0+255),w,b
  5291  0012A2  0101               	movlb	1	; () banked
  5292  0012A4  5BB3               	subwfb	(printf@width+1)& (0+255),f,b
  5293                           
  5294                           ;doprnt.c: 1143: if(
  5295                           ;doprnt.c: 1147: prec)
  5296  0012A6  51B7               	movf	printf@prec& (0+255),w,b
  5297  0012A8  11B8               	iorwf	(printf@prec+1)& (0+255),w,b
  5298  0012AA  B4D8               	btfsc	status,2,c
  5299  0012AC  D003               	goto	l3524
  5300                           
  5301                           ; BSR set to: 1
  5302                           ;doprnt.c: 1148: width--;
  5303  0012AE  07B2               	decf	printf@width& (0+255),f,b
  5304  0012B0  A0D8               	btfss	status,0,c
  5305  0012B2  07B3               	decf	(printf@width+1)& (0+255),f,b
  5306  0012B4                     l3524:
  5307                           
  5308                           ; BSR set to: 1
  5309                           ;doprnt.c: 1149: if(flag & 0x03)
  5310                           
  5311                           ; BSR set to: 1
  5312  0012B4  0E03               	movlw	3
  5313  0012B6  15AA               	andwf	printf@flag& (0+255),w,b
  5314  0012B8  0100               	movlb	0	; () banked
  5315  0012BA  6FF9               	movwf	??_printf& (0+255),b
  5316  0012BC  0E00               	movlw	0
  5317  0012BE  0101               	movlb	1	; () banked
  5318  0012C0  15AB               	andwf	(printf@flag+1)& (0+255),w,b
  5319  0012C2  0100               	movlb	0	; () banked
  5320  0012C4  6FFA               	movwf	(??_printf+1)& (0+255),b
  5321  0012C6  51F9               	movf	??_printf& (0+255),w,b
  5322  0012C8  11FA               	iorwf	(??_printf+1)& (0+255),w,b
  5323  0012CA  B4D8               	btfsc	status,2,c
  5324  0012CC  D008               	goto	l3526
  5325  0012CE  D003               	goto	l21799
  5326  0012D0                     l21797:
  5327                           
  5328                           ; BSR set to: 1
  5329                           ;doprnt.c: 1181: (putch(' ') );
  5330  0012D0  0E20               	movlw	32
  5331  0012D2  EC55  F062         	call	_putch
  5332  0012D6                     l21799:
  5333                           
  5334                           ;doprnt.c: 1182: width--;
  5335  0012D6  0101               	movlb	1	; () banked
  5336  0012D8  07B2               	decf	printf@width& (0+255),f,b
  5337  0012DA  A0D8               	btfss	status,0,c
  5338  0012DC  07B3               	decf	(printf@width+1)& (0+255),f,b
  5339  0012DE                     l3526:
  5340                           
  5341                           ; BSR set to: 1
  5342  0012DE  0101               	movlb	1	; () banked
  5343  0012E0  BFB3               	btfsc	(printf@width+1)& (0+255),7,b
  5344  0012E2  D005               	goto	u26130
  5345  0012E4  51B3               	movf	(printf@width+1)& (0+255),w,b
  5346  0012E6  E1F4               	bnz	l21797
  5347  0012E8  05B2               	decf	printf@width& (0+255),w,b
  5348  0012EA  B0D8               	btfsc	status,0,c
  5349  0012EC  D7F1               	goto	l3527
  5350  0012EE                     u26130:
  5351                           
  5352                           ; BSR set to: 1
  5353                           ;doprnt.c: 1183: }
  5354                           ;doprnt.c: 1188: if(flag & 0x03)
  5355                           
  5356                           ; BSR set to: 1
  5357  0012EE  0E03               	movlw	3
  5358  0012F0  15AA               	andwf	printf@flag& (0+255),w,b
  5359  0012F2  0100               	movlb	0	; () banked
  5360  0012F4  6FF9               	movwf	??_printf& (0+255),b
  5361  0012F6  0E00               	movlw	0
  5362  0012F8  0101               	movlb	1	; () banked
  5363  0012FA  15AB               	andwf	(printf@flag+1)& (0+255),w,b
  5364  0012FC  0100               	movlb	0	; () banked
  5365  0012FE  6FFA               	movwf	(??_printf+1)& (0+255),b
  5366  001300  51F9               	movf	??_printf& (0+255),w,b
  5367  001302  11FA               	iorwf	(??_printf+1)& (0+255),w,b
  5368  001304  B4D8               	btfsc	status,2,c
  5369  001306  D04E               	goto	l3530
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;doprnt.c: 1190: (putch('-') );
  5373  001308  0E2D               	movlw	45
  5374  00130A  EC55  F062         	call	_putch
  5375                           
  5376                           ;doprnt.c: 1195: }
  5377                           ;doprnt.c: 1196: while(c--) {
  5378  00130E  D04A               	goto	l3530
  5379  001310                     
  5380                           ;doprnt.c: 1200: {
  5381                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  5382  001310  C1A6  F060         	movff	printf@val,___lldiv@dividend
  5383  001314  C1A7  F061         	movff	printf@val+1,___lldiv@dividend+1
  5384  001318  C1A8  F062         	movff	printf@val+2,___lldiv@dividend+2
  5385  00131C  C1A9  F063         	movff	printf@val+3,___lldiv@dividend+3
  5386  001320  0101               	movlb	1	; () banked
  5387  001322  51B9               	movf	printf@c& (0+255),w,b
  5388  001324  0D04               	mullw	4
  5389  001326  0EF9               	movlw	low _dpowers
  5390  001328  24F3               	addwf	prodl,w,c
  5391  00132A  6EF6               	movwf	tblptrl,c
  5392  00132C  0EFD               	movlw	high _dpowers
  5393  00132E  20F4               	addwfc	prodh,w,c
  5394  001330  6EF7               	movwf	tblptrh,c
  5395  001332                     	if	1	;There are 3 active tblptr bytes
  5396  001332  6AF8               	clrf	tblptru,c
  5397  001334  0E00               	movlw	low (__mediumconst shr (0+16))
  5398  001336  22F8               	addwfc	tblptru,f,c
  5399  001338                     	endif
  5400  001338  0009               	tblrd		*+
  5401  00133A  CFF5 F064          	movff	tablat,___lldiv@divisor
  5402  00133E  0009               	tblrd		*+
  5403  001340  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  5404  001344  0009               	tblrd		*+
  5405  001346  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  5406  00134A  000A               	tblrd		*-
  5407  00134C  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  5408  001350  ECB0  F050         	call	___lldiv	;wreg free
  5409  001354  C060  F1AC         	movff	?___lldiv,printf@tmpval
  5410  001358  C061  F1AD         	movff	?___lldiv+1,printf@tmpval+1
  5411  00135C  C062  F1AE         	movff	?___lldiv+2,printf@tmpval+2
  5412  001360  C063  F1AF         	movff	?___lldiv+3,printf@tmpval+3
  5413                           
  5414                           ;doprnt.c: 1202: tmpval.vd %= 10;
  5415  001364  C1AC  F060         	movff	printf@tmpval,___llmod@dividend
  5416  001368  C1AD  F061         	movff	printf@tmpval+1,___llmod@dividend+1
  5417  00136C  C1AE  F062         	movff	printf@tmpval+2,___llmod@dividend+2
  5418  001370  C1AF  F063         	movff	printf@tmpval+3,___llmod@dividend+3
  5419  001374  0E0A               	movlw	10
  5420  001376  0100               	movlb	0	; () banked
  5421  001378  6F64               	movwf	___llmod@divisor& (0+255),b
  5422  00137A  0E00               	movlw	0
  5423  00137C  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  5424  00137E  0E00               	movlw	0
  5425  001380  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  5426  001382  0E00               	movlw	0
  5427  001384  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  5428  001386  EC1C  F054         	call	___llmod	;wreg free
  5429  00138A  C060  F1AC         	movff	?___llmod,printf@tmpval
  5430  00138E  C061  F1AD         	movff	?___llmod+1,printf@tmpval+1
  5431  001392  C062  F1AE         	movff	?___llmod+2,printf@tmpval+2
  5432  001396  C063  F1AF         	movff	?___llmod+3,printf@tmpval+3
  5433                           
  5434                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  5435  00139A  0101               	movlb	1	; () banked
  5436  00139C  51AC               	movf	printf@tmpval& (0+255),w,b
  5437  00139E  0F30               	addlw	48
  5438  0013A0  EC55  F062         	call	_putch
  5439  0013A4                     l3530:
  5440  0013A4  0101               	movlb	1	; () banked
  5441  0013A6  07B9               	decf	printf@c& (0+255),f,b
  5442  0013A8  29B9               	incf	printf@c& (0+255),w,b
  5443  0013AA  B4D8               	btfsc	status,2,c
  5444  0013AC  D008               	goto	l3533
  5445  0013AE  D7B0               	goto	l3531
  5446  0013B0                     l21815:
  5447                           
  5448                           ; BSR set to: 1
  5449                           ;doprnt.c: 1208: (putch('0') );
  5450  0013B0  0E30               	movlw	48
  5451  0013B2  EC55  F062         	call	_putch
  5452                           
  5453                           ;doprnt.c: 1209: exp--;
  5454  0013B6  0101               	movlb	1	; () banked
  5455  0013B8  07B0               	decf	printf@exp& (0+255),f,b
  5456  0013BA  A0D8               	btfss	status,0,c
  5457  0013BC  07B1               	decf	(printf@exp+1)& (0+255),f,b
  5458  0013BE                     l3533:
  5459                           
  5460                           ; BSR set to: 1
  5461                           
  5462                           ; BSR set to: 1
  5463  0013BE  BFB1               	btfsc	(printf@exp+1)& (0+255),7,b
  5464  0013C0  D005               	goto	u26160
  5465  0013C2  51B1               	movf	(printf@exp+1)& (0+255),w,b
  5466  0013C4  E1F5               	bnz	l21815
  5467  0013C6  05B0               	decf	printf@exp& (0+255),w,b
  5468  0013C8  B0D8               	btfsc	status,0,c
  5469  0013CA  D7F2               	goto	l3534
  5470  0013CC                     u26160:
  5471                           
  5472                           ; BSR set to: 1
  5473                           ;doprnt.c: 1210: }
  5474                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  5475                           
  5476                           ; BSR set to: 1
  5477  0013CC  BFB8               	btfsc	(printf@prec+1)& (0+255),7,b
  5478  0013CE  D009               	goto	l3536
  5479  0013D0  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5480  0013D2  E104               	bnz	u26170
  5481  0013D4  0E09               	movlw	9
  5482  0013D6  5DB7               	subwf	printf@prec& (0+255),w,b
  5483  0013D8  A0D8               	btfss	status,0,c
  5484  0013DA  D003               	goto	l3536
  5485  0013DC                     u26170:
  5486                           
  5487                           ; BSR set to: 1
  5488                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5489  0013DC  0E08               	movlw	8
  5490  0013DE  6FB9               	movwf	printf@c& (0+255),b
  5491  0013E0  D002               	goto	l3537
  5492  0013E2                     l3536:
  5493                           
  5494                           ; BSR set to: 1
  5495                           ;doprnt.c: 1213: else
  5496                           ;doprnt.c: 1214: c = prec;
  5497  0013E2  C1B7  F1B9         	movff	printf@prec,printf@c
  5498  0013E6                     l3537:
  5499                           
  5500                           ; BSR set to: 1
  5501                           ;doprnt.c: 1215: prec -= c;
  5502                           
  5503                           ; BSR set to: 1
  5504  0013E6  51B9               	movf	printf@c& (0+255),w,b
  5505  0013E8  5FB7               	subwf	printf@prec& (0+255),f,b
  5506  0013EA  0E00               	movlw	0
  5507  0013EC  BFB9               	btfsc	printf@c& (0+255),7,b
  5508  0013EE  0EFF               	movlw	255
  5509  0013F0  5BB8               	subwfb	(printf@prec+1)& (0+255),f,b
  5510                           
  5511                           ; BSR set to: 1
  5512                           ;doprnt.c: 1219: if(c)
  5513  0013F2  51B9               	movf	printf@c& (0+255),w,b
  5514  0013F4  B4D8               	btfsc	status,2,c
  5515  0013F6  D003               	goto	l3538
  5516                           
  5517                           ; BSR set to: 1
  5518                           ;doprnt.c: 1221: (putch('.') );
  5519  0013F8  0E2E               	movlw	46
  5520  0013FA  EC55  F062         	call	_putch
  5521  0013FE                     l3538:
  5522                           
  5523                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5524  0013FE  0101               	movlb	1	; () banked
  5525  001400  51B9               	movf	printf@c& (0+255),w,b
  5526  001402  EC07  F015         	call	_scale
  5527  001406  C083  F19D         	movff	?_scale,_printf$7057
  5528  00140A  C084  F19E         	movff	?_scale+1,_printf$7057+1
  5529  00140E  C085  F19F         	movff	?_scale+2,_printf$7057+2
  5530                           
  5531                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5532  001412  C1B4  F077         	movff	printf@fval,___ftmul@f2
  5533  001416  C1B5  F078         	movff	printf@fval+1,___ftmul@f2+1
  5534  00141A  C1B6  F079         	movff	printf@fval+2,___ftmul@f2+2
  5535  00141E  C19D  F074         	movff	_printf$7057,___ftmul@f1
  5536  001422  C19E  F075         	movff	_printf$7057+1,___ftmul@f1+1
  5537  001426  C19F  F076         	movff	_printf$7057+2,___ftmul@f1+2
  5538  00142A  EC56  F045         	call	___ftmul	;wreg free
  5539  00142E  C074  F083         	movff	?___ftmul,___fttol@f1
  5540  001432  C075  F084         	movff	?___ftmul+1,___fttol@f1+1
  5541  001436  C076  F085         	movff	?___ftmul+2,___fttol@f1+2
  5542  00143A  ECDA  F044         	call	___fttol	;wreg free
  5543  00143E  C083  F1A6         	movff	?___fttol,printf@val
  5544  001442  C084  F1A7         	movff	?___fttol+1,printf@val+1
  5545  001446  C085  F1A8         	movff	?___fttol+2,printf@val+2
  5546  00144A  C086  F1A9         	movff	?___fttol+3,printf@val+3
  5547                           
  5548                           ;doprnt.c: 1228: while(c--) {
  5549  00144E  D074               	goto	l3539
  5550  001450                     
  5551                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  5552  001450  C1A6  F060         	movff	printf@val,___lldiv@dividend
  5553  001454  C1A7  F061         	movff	printf@val+1,___lldiv@dividend+1
  5554  001458  C1A8  F062         	movff	printf@val+2,___lldiv@dividend+2
  5555  00145C  C1A9  F063         	movff	printf@val+3,___lldiv@dividend+3
  5556  001460  0101               	movlb	1	; () banked
  5557  001462  51B9               	movf	printf@c& (0+255),w,b
  5558  001464  0D04               	mullw	4
  5559  001466  0EF9               	movlw	low _dpowers
  5560  001468  24F3               	addwf	prodl,w,c
  5561  00146A  6EF6               	movwf	tblptrl,c
  5562  00146C  0EFD               	movlw	high _dpowers
  5563  00146E  20F4               	addwfc	prodh,w,c
  5564  001470  6EF7               	movwf	tblptrh,c
  5565  001472                     	if	1	;There are 3 active tblptr bytes
  5566  001472  6AF8               	clrf	tblptru,c
  5567  001474  0E00               	movlw	low (__mediumconst shr (0+16))
  5568  001476  22F8               	addwfc	tblptru,f,c
  5569  001478                     	endif
  5570  001478  0009               	tblrd		*+
  5571  00147A  CFF5 F064          	movff	tablat,___lldiv@divisor
  5572  00147E  0009               	tblrd		*+
  5573  001480  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  5574  001484  0009               	tblrd		*+
  5575  001486  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  5576  00148A  000A               	tblrd		*-
  5577  00148C  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  5578  001490  ECB0  F050         	call	___lldiv	;wreg free
  5579  001494  C060  F1AC         	movff	?___lldiv,printf@tmpval
  5580  001498  C061  F1AD         	movff	?___lldiv+1,printf@tmpval+1
  5581  00149C  C062  F1AE         	movff	?___lldiv+2,printf@tmpval+2
  5582  0014A0  C063  F1AF         	movff	?___lldiv+3,printf@tmpval+3
  5583                           
  5584                           ;doprnt.c: 1230: tmpval.vd %= 10;
  5585  0014A4  C1AC  F060         	movff	printf@tmpval,___llmod@dividend
  5586  0014A8  C1AD  F061         	movff	printf@tmpval+1,___llmod@dividend+1
  5587  0014AC  C1AE  F062         	movff	printf@tmpval+2,___llmod@dividend+2
  5588  0014B0  C1AF  F063         	movff	printf@tmpval+3,___llmod@dividend+3
  5589  0014B4  0E0A               	movlw	10
  5590  0014B6  0100               	movlb	0	; () banked
  5591  0014B8  6F64               	movwf	___llmod@divisor& (0+255),b
  5592  0014BA  0E00               	movlw	0
  5593  0014BC  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  5594  0014BE  0E00               	movlw	0
  5595  0014C0  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  5596  0014C2  0E00               	movlw	0
  5597  0014C4  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  5598  0014C6  EC1C  F054         	call	___llmod	;wreg free
  5599  0014CA  C060  F1AC         	movff	?___llmod,printf@tmpval
  5600  0014CE  C061  F1AD         	movff	?___llmod+1,printf@tmpval+1
  5601  0014D2  C062  F1AE         	movff	?___llmod+2,printf@tmpval+2
  5602  0014D6  C063  F1AF         	movff	?___llmod+3,printf@tmpval+3
  5603                           
  5604                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  5605  0014DA  0101               	movlb	1	; () banked
  5606  0014DC  51AC               	movf	printf@tmpval& (0+255),w,b
  5607  0014DE  0F30               	addlw	48
  5608  0014E0  EC55  F062         	call	_putch
  5609                           
  5610                           ;doprnt.c: 1232: val %= dpowers[c];
  5611  0014E4  C1A6  F060         	movff	printf@val,___llmod@dividend
  5612  0014E8  C1A7  F061         	movff	printf@val+1,___llmod@dividend+1
  5613  0014EC  C1A8  F062         	movff	printf@val+2,___llmod@dividend+2
  5614  0014F0  C1A9  F063         	movff	printf@val+3,___llmod@dividend+3
  5615  0014F4  0101               	movlb	1	; () banked
  5616  0014F6  51B9               	movf	printf@c& (0+255),w,b
  5617  0014F8  0D04               	mullw	4
  5618  0014FA  0EF9               	movlw	low _dpowers
  5619  0014FC  24F3               	addwf	prodl,w,c
  5620  0014FE  6EF6               	movwf	tblptrl,c
  5621  001500  0EFD               	movlw	high _dpowers
  5622  001502  20F4               	addwfc	prodh,w,c
  5623  001504  6EF7               	movwf	tblptrh,c
  5624  001506                     	if	1	;There are 3 active tblptr bytes
  5625  001506  6AF8               	clrf	tblptru,c
  5626  001508  0E00               	movlw	low (__mediumconst shr (0+16))
  5627  00150A  22F8               	addwfc	tblptru,f,c
  5628  00150C                     	endif
  5629  00150C  0009               	tblrd		*+
  5630  00150E  CFF5 F064          	movff	tablat,___llmod@divisor
  5631  001512  0009               	tblrd		*+
  5632  001514  CFF5 F065          	movff	tablat,___llmod@divisor+1
  5633  001518  0009               	tblrd		*+
  5634  00151A  CFF5 F066          	movff	tablat,___llmod@divisor+2
  5635  00151E  000A               	tblrd		*-
  5636  001520  CFF5 F067          	movff	tablat,___llmod@divisor+3
  5637  001524  EC1C  F054         	call	___llmod	;wreg free
  5638  001528  C060  F1A6         	movff	?___llmod,printf@val
  5639  00152C  C061  F1A7         	movff	?___llmod+1,printf@val+1
  5640  001530  C062  F1A8         	movff	?___llmod+2,printf@val+2
  5641  001534  C063  F1A9         	movff	?___llmod+3,printf@val+3
  5642  001538                     l3539:
  5643  001538  0101               	movlb	1	; () banked
  5644  00153A  07B9               	decf	printf@c& (0+255),f,b
  5645  00153C  29B9               	incf	printf@c& (0+255),w,b
  5646  00153E  B4D8               	btfsc	status,2,c
  5647  001540  D008               	goto	l3542
  5648  001542  D786               	goto	l3540
  5649  001544                     
  5650                           ; BSR set to: 1
  5651                           ;doprnt.c: 1236: (putch('0') );
  5652                           
  5653                           ; BSR set to: 1
  5654  001544  0E30               	movlw	48
  5655  001546  EC55  F062         	call	_putch
  5656                           
  5657                           ;doprnt.c: 1237: prec--;
  5658  00154A  0101               	movlb	1	; () banked
  5659  00154C  07B7               	decf	printf@prec& (0+255),f,b
  5660  00154E  A0D8               	btfss	status,0,c
  5661  001550  07B8               	decf	(printf@prec+1)& (0+255),f,b
  5662  001552                     l3542:
  5663                           
  5664                           ; BSR set to: 1
  5665                           
  5666                           ; BSR set to: 1
  5667  001552  51B7               	movf	printf@prec& (0+255),w,b
  5668  001554  11B8               	iorwf	(printf@prec+1)& (0+255),w,b
  5669  001556  B4D8               	btfsc	status,2,c
  5670  001558  D09E               	goto	l3558
  5671  00155A  D7F4               	goto	l3543
  5672  00155C                     l3502:
  5673                           
  5674                           ; BSR set to: 1
  5675                           ;doprnt.c: 1246: }
  5676                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  5677                           
  5678                           ; BSR set to: 1
  5679  00155C  51B7               	movf	printf@prec& (0+255),w,b
  5680  00155E  11B8               	iorwf	(printf@prec+1)& (0+255),w,b
  5681  001560  A4D8               	btfss	status,2,c
  5682  001562  D008               	goto	l3545
  5683                           
  5684                           ; BSR set to: 1
  5685  001564  51A6               	movf	printf@val& (0+255),w,b
  5686  001566  11A7               	iorwf	(printf@val+1)& (0+255),w,b
  5687  001568  11A8               	iorwf	(printf@val+2)& (0+255),w,b
  5688  00156A  11A9               	iorwf	(printf@val+3)& (0+255),w,b
  5689  00156C  A4D8               	btfss	status,2,c
  5690  00156E  D002               	goto	l3545
  5691                           
  5692                           ; BSR set to: 1
  5693                           ;doprnt.c: 1291: prec++;
  5694  001570  4BB7               	infsnz	printf@prec& (0+255),f,b
  5695  001572  2BB8               	incf	(printf@prec+1)& (0+255),f,b
  5696  001574                     l3545:
  5697                           
  5698                           ; BSR set to: 1
  5699                           ;doprnt.c: 1339: if(c < prec)
  5700                           
  5701                           ; BSR set to: 1
  5702  001574  0E80               	movlw	128
  5703  001576  BFB9               	btfsc	printf@c& (0+255),7,b
  5704  001578  0E7F               	movlw	127
  5705  00157A  0100               	movlb	0	; () banked
  5706  00157C  6FF9               	movwf	??_printf& (0+255),b
  5707  00157E  0101               	movlb	1	; () banked
  5708  001580  51B7               	movf	printf@prec& (0+255),w,b
  5709  001582  5DB9               	subwf	printf@c& (0+255),w,b
  5710  001584  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5711  001586  0A80               	xorlw	128
  5712  001588  0100               	movlb	0	; () banked
  5713  00158A  59F9               	subwfb	??_printf& (0+255),w,b
  5714  00158C  B0D8               	btfsc	status,0,c
  5715  00158E  D003               	goto	l3546
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;doprnt.c: 1340: c = prec;
  5719  001590  C1B7  F1B9         	movff	printf@prec,printf@c
  5720  001594  D015               	goto	l3548
  5721  001596                     l3546:
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;doprnt.c: 1341: else if(prec < c)
  5725                           
  5726                           ; BSR set to: 0
  5727  001596  0101               	movlb	1	; () banked
  5728  001598  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5729  00159A  0A80               	xorlw	128
  5730  00159C  0100               	movlb	0	; () banked
  5731  00159E  6FF9               	movwf	??_printf& (0+255),b
  5732  0015A0  0101               	movlb	1	; () banked
  5733  0015A2  51B9               	movf	printf@c& (0+255),w,b
  5734  0015A4  5DB7               	subwf	printf@prec& (0+255),w,b
  5735  0015A6  0E80               	movlw	128
  5736  0015A8  BFB9               	btfsc	printf@c& (0+255),7,b
  5737  0015AA  0E7F               	movlw	127
  5738  0015AC  0100               	movlb	0	; () banked
  5739  0015AE  59F9               	subwfb	??_printf& (0+255),w,b
  5740  0015B0  B0D8               	btfsc	status,0,c
  5741  0015B2  D006               	goto	l3548
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;doprnt.c: 1342: prec = c;
  5745  0015B4  0101               	movlb	1	; () banked
  5746  0015B6  51B9               	movf	printf@c& (0+255),w,b
  5747  0015B8  6FB7               	movwf	printf@prec& (0+255),b
  5748  0015BA  6BB8               	clrf	(printf@prec+1)& (0+255),b
  5749  0015BC  BFB7               	btfsc	printf@prec& (0+255),7,b
  5750  0015BE  07B8               	decf	(printf@prec+1)& (0+255),f,b
  5751  0015C0                     l3548:
  5752                           
  5753                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5754                           
  5755                           ; BSR set to: 1
  5756                           
  5757                           ; BSR set to: 1
  5758  0015C0  0101               	movlb	1	; () banked
  5759  0015C2  51B2               	movf	printf@width& (0+255),w,b
  5760  0015C4  11B3               	iorwf	(printf@width+1)& (0+255),w,b
  5761  0015C6  B4D8               	btfsc	status,2,c
  5762  0015C8  D011               	goto	l3549
  5763                           
  5764                           ; BSR set to: 1
  5765  0015CA  0E03               	movlw	3
  5766  0015CC  15AA               	andwf	printf@flag& (0+255),w,b
  5767  0015CE  0100               	movlb	0	; () banked
  5768  0015D0  6FF9               	movwf	??_printf& (0+255),b
  5769  0015D2  0E00               	movlw	0
  5770  0015D4  0101               	movlb	1	; () banked
  5771  0015D6  15AB               	andwf	(printf@flag+1)& (0+255),w,b
  5772  0015D8  0100               	movlb	0	; () banked
  5773  0015DA  6FFA               	movwf	(??_printf+1)& (0+255),b
  5774  0015DC  51F9               	movf	??_printf& (0+255),w,b
  5775  0015DE  11FA               	iorwf	(??_printf+1)& (0+255),w,b
  5776  0015E0  B4D8               	btfsc	status,2,c
  5777  0015E2  D004               	goto	l3549
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;doprnt.c: 1346: width--;
  5781  0015E4  0101               	movlb	1	; () banked
  5782  0015E6  07B2               	decf	printf@width& (0+255),f,b
  5783  0015E8  A0D8               	btfss	status,0,c
  5784  0015EA  07B3               	decf	(printf@width+1)& (0+255),f,b
  5785  0015EC                     l3549:
  5786                           
  5787                           ;doprnt.c: 1348: if(flag & 0x4000) {
  5788                           
  5789                           ; BSR set to: 1
  5790  0015EC  0101               	movlb	1	; () banked
  5791  0015EE  ADAB               	btfss	(printf@flag+1)& (0+255),6,b
  5792  0015F0  D018               	goto	l3552
  5793                           
  5794                           ; BSR set to: 1
  5795                           ;doprnt.c: 1349: if(width > prec)
  5796  0015F2  51B2               	movf	printf@width& (0+255),w,b
  5797  0015F4  5DB7               	subwf	printf@prec& (0+255),w,b
  5798  0015F6  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5799  0015F8  0A80               	xorlw	128
  5800  0015FA  0100               	movlb	0	; () banked
  5801  0015FC  6FF9               	movwf	??_printf& (0+255),b
  5802  0015FE  0101               	movlb	1	; () banked
  5803  001600  51B3               	movf	(printf@width+1)& (0+255),w,b
  5804  001602  0A80               	xorlw	128
  5805  001604  0100               	movlb	0	; () banked
  5806  001606  59F9               	subwfb	??_printf& (0+255),w,b
  5807  001608  B0D8               	btfsc	status,0,c
  5808  00160A  D006               	goto	l3551
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;doprnt.c: 1350: width -= prec;
  5812  00160C  0101               	movlb	1	; () banked
  5813  00160E  51B7               	movf	printf@prec& (0+255),w,b
  5814  001610  5FB2               	subwf	printf@width& (0+255),f,b
  5815  001612  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5816  001614  5BB3               	subwfb	(printf@width+1)& (0+255),f,b
  5817  001616  D005               	goto	l3552
  5818  001618                     l3551:
  5819                           
  5820                           ;doprnt.c: 1351: else
  5821                           ;doprnt.c: 1352: width = 0;
  5822                           
  5823                           ; BSR set to: 1
  5824  001618  0E00               	movlw	0
  5825  00161A  0101               	movlb	1	; () banked
  5826  00161C  6FB3               	movwf	(printf@width+1)& (0+255),b
  5827  00161E  0E00               	movlw	0
  5828  001620  6FB2               	movwf	printf@width& (0+255),b
  5829  001622                     l3552:
  5830                           
  5831                           ; BSR set to: 1
  5832                           ;doprnt.c: 1353: }
  5833                           ;doprnt.c: 1381: if(width > c)
  5834                           
  5835                           ; BSR set to: 1
  5836                           
  5837                           ; BSR set to: 1
  5838  001622  0E80               	movlw	128
  5839  001624  BFB9               	btfsc	printf@c& (0+255),7,b
  5840  001626  0E7F               	movlw	127
  5841  001628  0100               	movlb	0	; () banked
  5842  00162A  6FF9               	movwf	??_printf& (0+255),b
  5843  00162C  0101               	movlb	1	; () banked
  5844  00162E  51B2               	movf	printf@width& (0+255),w,b
  5845  001630  5DB9               	subwf	printf@c& (0+255),w,b
  5846  001632  51B3               	movf	(printf@width+1)& (0+255),w,b
  5847  001634  0A80               	xorlw	128
  5848  001636  0100               	movlb	0	; () banked
  5849  001638  59F9               	subwfb	??_printf& (0+255),w,b
  5850  00163A  B0D8               	btfsc	status,0,c
  5851  00163C  D008               	goto	l3553
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;doprnt.c: 1382: width -= c;
  5855  00163E  0101               	movlb	1	; () banked
  5856  001640  51B9               	movf	printf@c& (0+255),w,b
  5857  001642  5FB2               	subwf	printf@width& (0+255),f,b
  5858  001644  0E00               	movlw	0
  5859  001646  BFB9               	btfsc	printf@c& (0+255),7,b
  5860  001648  0EFF               	movlw	255
  5861  00164A  5BB3               	subwfb	(printf@width+1)& (0+255),f,b
  5862  00164C  D005               	goto	l3554
  5863  00164E                     l3553:
  5864                           
  5865                           ;doprnt.c: 1383: else
  5866                           ;doprnt.c: 1384: width = 0;
  5867                           
  5868                           ; BSR set to: 1
  5869  00164E  0E00               	movlw	0
  5870  001650  0101               	movlb	1	; () banked
  5871  001652  6FB3               	movwf	(printf@width+1)& (0+255),b
  5872  001654  0E00               	movlw	0
  5873  001656  6FB2               	movwf	printf@width& (0+255),b
  5874  001658                     l3554:
  5875                           
  5876                           ; BSR set to: 1
  5877                           ;doprnt.c: 1422: {
  5878                           ;doprnt.c: 1424: if(width
  5879                           ;doprnt.c: 1428: )
  5880                           
  5881                           ; BSR set to: 1
  5882  001658  51B2               	movf	printf@width& (0+255),w,b
  5883  00165A  11B3               	iorwf	(printf@width+1)& (0+255),w,b
  5884  00165C  B4D8               	btfsc	status,2,c
  5885  00165E  D00B               	goto	u26310
  5886  001660                     u26300:
  5887                           
  5888                           ; BSR set to: 1
  5889                           ;doprnt.c: 1430: (putch(' ') );
  5890                           
  5891                           ; BSR set to: 1
  5892                           
  5893                           ;doprnt.c: 1429: do
  5894  001660  0E20               	movlw	32
  5895  001662  EC55  F062         	call	_putch
  5896                           
  5897                           ;doprnt.c: 1431: while(--width);
  5898  001666  0101               	movlb	1	; () banked
  5899  001668  07B2               	decf	printf@width& (0+255),f,b
  5900  00166A  A0D8               	btfss	status,0,c
  5901  00166C  07B3               	decf	(printf@width+1)& (0+255),f,b
  5902  00166E  51B2               	movf	printf@width& (0+255),w,b
  5903  001670  11B3               	iorwf	(printf@width+1)& (0+255),w,b
  5904  001672  A4D8               	btfss	status,2,c
  5905  001674  D7F5               	goto	u26300
  5906  001676                     u26310:
  5907                           
  5908                           ; BSR set to: 1
  5909                           ;doprnt.c: 1438: if(flag & 0x03)
  5910                           
  5911                           ; BSR set to: 1
  5912                           
  5913                           ; BSR set to: 1
  5914  001676  0E03               	movlw	3
  5915  001678  15AA               	andwf	printf@flag& (0+255),w,b
  5916  00167A  0100               	movlb	0	; () banked
  5917  00167C  6FF9               	movwf	??_printf& (0+255),b
  5918  00167E  0E00               	movlw	0
  5919  001680  0101               	movlb	1	; () banked
  5920  001682  15AB               	andwf	(printf@flag+1)& (0+255),w,b
  5921  001684  0100               	movlb	0	; () banked
  5922  001686  6FFA               	movwf	(??_printf+1)& (0+255),b
  5923  001688  51F9               	movf	??_printf& (0+255),w,b
  5924  00168A  11FA               	iorwf	(??_printf+1)& (0+255),w,b
  5925  00168C  B4D8               	btfsc	status,2,c
  5926  00168E  D003               	goto	l3558
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;doprnt.c: 1439: (putch('-') );
  5930  001690  0E2D               	movlw	45
  5931  001692  EC55  F062         	call	_putch
  5932  001696                     l3558:
  5933  001696  C18F  FFF6         	movff	printf@f,tblptrl
  5934  00169A  C190  FFF7         	movff	printf@f+1,tblptrh
  5935  00169E  0101               	movlb	1	; () banked
  5936  0016A0  4B8F               	infsnz	printf@f& (0+255),f,b
  5937  0016A2  2B90               	incf	(printf@f+1)& (0+255),f,b
  5938  0016A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5939  0016A4  6AF8               	clrf	tblptru,c
  5940  0016A6                     	endif
  5941  0016A6                     	if	0	;tblptru may be non-zero
  5942  0016A6                     	endif
  5943  0016A6  0008               	tblrd		*
  5944  0016A8  CFF5 F1B9          	movff	tablat,printf@c
  5945  0016AC  51B9               	movf	printf@c& (0+255),w,b
  5946  0016AE  B4D8               	btfsc	status,2,c
  5947  0016B0  0012               	return	
  5948  0016B2  EF9D  F006         	goto	l3476
  5949  0016B6                     __end_of_printf:
  5950                           	opt stack 0
  5951                           tblptru	equ	0xFF8
  5952                           tblptrh	equ	0xFF7
  5953                           tblptrl	equ	0xFF6
  5954                           tablat	equ	0xFF5
  5955                           prodh	equ	0xFF4
  5956                           prodl	equ	0xFF3
  5957                           intcon	equ	0xFF2
  5958                           postinc0	equ	0xFEE
  5959                           wreg	equ	0xFE8
  5960                           indf2	equ	0xFDF
  5961                           postinc2	equ	0xFDE
  5962                           postdec2	equ	0xFDD
  5963                           fsr2h	equ	0xFDA
  5964                           fsr2l	equ	0xFD9
  5965                           status	equ	0xFD8
  5966                           
  5967 ;; *************** function _scale *****************
  5968 ;; Defined at:
  5969 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  scl             1    wreg     char 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  scl             1   41[BANK0 ] char 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  3   35[BANK0 ] char 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5983 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5984 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;Total ram usage:        7 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:    9
  5990 ;; This function calls:
  5991 ;;		___awdiv
  5992 ;;		___awmod
  5993 ;;		___ftmul
  5994 ;;		___wmul
  5995 ;; This function is called by:
  5996 ;;		_printf
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text2
  6001  002A0E                     __ptext2:
  6002                           	opt stack 0
  6003  002A0E                     _scale:
  6004                           	opt stack 20
  6005                           
  6006                           ; BSR set to: 1
  6007                           ;incstack = 0
  6008                           ;scale@scl stored from wreg
  6009  002A0E  0100               	movlb	0	; () banked
  6010  002A10  6F89               	movwf	scale@scl& (0+255),b
  6011                           
  6012                           ;doprnt.c: 428: if(scl < 0) {
  6013  002A12  0100               	movlb	0	; () banked
  6014  002A14  AF89               	btfss	scale@scl& (0+255),7,b
  6015  002A16  D11E               	goto	l3465
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;doprnt.c: 429: scl = -scl;
  6019  002A18  6D89               	negf	scale@scl& (0+255),b
  6020                           
  6021                           ;doprnt.c: 430: if(scl>=110)
  6022  002A1A  5189               	movf	scale@scl& (0+255),w,b
  6023  002A1C  0A80               	xorlw	128
  6024  002A1E  0F12               	addlw	-238
  6025  002A20  A0D8               	btfss	status,0,c
  6026  002A22  D0A0               	goto	l3466
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6030  002A24  0E00               	movlw	0
  6031  002A26  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6032  002A28  0E03               	movlw	3
  6033  002A2A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6034  002A2C  0E00               	movlw	0
  6035  002A2E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6036  002A30  0E0A               	movlw	10
  6037  002A32  6F68               	movwf	___awdiv@divisor& (0+255),b
  6038  002A34  0E00               	movlw	0
  6039  002A36  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6040  002A38  0E64               	movlw	100
  6041  002A3A  6F62               	movwf	___awmod@divisor& (0+255),b
  6042  002A3C  5189               	movf	scale@scl& (0+255),w,b
  6043  002A3E  6F60               	movwf	___awmod@dividend& (0+255),b
  6044  002A40  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6045  002A42  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6046  002A44  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6047  002A46  EC64  F052         	call	___awmod	;wreg free
  6048  002A4A  C060  F066         	movff	?___awmod,___awdiv@dividend
  6049  002A4E  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  6050  002A52  EC2A  F050         	call	___awdiv	;wreg free
  6051  002A56  0E09               	movlw	9
  6052  002A58  0100               	movlb	0	; () banked
  6053  002A5A  2566               	addwf	?___awdiv& (0+255),w,b
  6054  002A5C  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6055  002A5E  0E00               	movlw	0
  6056  002A60  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6057  002A62  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6058  002A64  EC82  F05E         	call	___wmul	;wreg free
  6059  002A68  0E48               	movlw	low __npowers_
  6060  002A6A  0100               	movlb	0	; () banked
  6061  002A6C  256E               	addwf	?___wmul& (0+255),w,b
  6062  002A6E  6EF6               	movwf	tblptrl,c
  6063  002A70  0EFE               	movlw	high __npowers_
  6064  002A72  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6065  002A74  6EF7               	movwf	tblptrh,c
  6066  002A76                     	if	1	;There are 3 active tblptr bytes
  6067  002A76  6AF8               	clrf	tblptru,c
  6068  002A78  0E00               	movlw	low (__mediumconst shr (0+16))
  6069  002A7A  22F8               	addwfc	tblptru,f,c
  6070  002A7C                     	endif
  6071  002A7C  0009               	tblrd		*+
  6072  002A7E  CFF5 F077          	movff	tablat,___ftmul@f2
  6073  002A82  0009               	tblrd		*+
  6074  002A84  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6075  002A88  000A               	tblrd		*-
  6076  002A8A  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6077  002A8E  0E00               	movlw	0
  6078  002A90  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6079  002A92  0E64               	movlw	100
  6080  002A94  6F68               	movwf	___awdiv@divisor& (0+255),b
  6081  002A96  5189               	movf	scale@scl& (0+255),w,b
  6082  002A98  6F66               	movwf	___awdiv@dividend& (0+255),b
  6083  002A9A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6084  002A9C  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  6085  002A9E  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6086  002AA0  EC2A  F050         	call	___awdiv	;wreg free
  6087  002AA4  0E12               	movlw	18
  6088  002AA6  0100               	movlb	0	; () banked
  6089  002AA8  2566               	addwf	?___awdiv& (0+255),w,b
  6090  002AAA  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6091  002AAC  0E00               	movlw	0
  6092  002AAE  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6093  002AB0  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6094  002AB2  0E00               	movlw	0
  6095  002AB4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6096  002AB6  0E03               	movlw	3
  6097  002AB8  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6098  002ABA  EC82  F05E         	call	___wmul	;wreg free
  6099  002ABE  0E48               	movlw	low __npowers_
  6100  002AC0  0100               	movlb	0	; () banked
  6101  002AC2  256E               	addwf	?___wmul& (0+255),w,b
  6102  002AC4  6EF6               	movwf	tblptrl,c
  6103  002AC6  0EFE               	movlw	high __npowers_
  6104  002AC8  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6105  002ACA  6EF7               	movwf	tblptrh,c
  6106  002ACC                     	if	1	;There are 3 active tblptr bytes
  6107  002ACC  6AF8               	clrf	tblptru,c
  6108  002ACE  0E00               	movlw	low (__mediumconst shr (0+16))
  6109  002AD0  22F8               	addwfc	tblptru,f,c
  6110  002AD2                     	endif
  6111  002AD2  0009               	tblrd		*+
  6112  002AD4  CFF5 F074          	movff	tablat,___ftmul@f1
  6113  002AD8  0009               	tblrd		*+
  6114  002ADA  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6115  002ADE  000A               	tblrd		*-
  6116  002AE0  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6117  002AE4  EC56  F045         	call	___ftmul	;wreg free
  6118  002AE8  C074  F086         	movff	?___ftmul,_scale$7056
  6119  002AEC  C075  F087         	movff	?___ftmul+1,_scale$7056+1
  6120  002AF0  C076  F088         	movff	?___ftmul+2,_scale$7056+2
  6121                           
  6122                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6123  002AF4  C086  F074         	movff	_scale$7056,___ftmul@f1
  6124  002AF8  C087  F075         	movff	_scale$7056+1,___ftmul@f1+1
  6125  002AFC  C088  F076         	movff	_scale$7056+2,___ftmul@f1+2
  6126  002B00  0E00               	movlw	0
  6127  002B02  0100               	movlb	0	; () banked
  6128  002B04  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6129  002B06  0E03               	movlw	3
  6130  002B08  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6131  002B0A  0E00               	movlw	0
  6132  002B0C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6133  002B0E  0E0A               	movlw	10
  6134  002B10  6F62               	movwf	___awmod@divisor& (0+255),b
  6135  002B12  5189               	movf	scale@scl& (0+255),w,b
  6136  002B14  6F60               	movwf	___awmod@dividend& (0+255),b
  6137  002B16  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6138  002B18  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6139  002B1A  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6140  002B1C  EC64  F052         	call	___awmod	;wreg free
  6141  002B20  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6142  002B24  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6143  002B28  EC82  F05E         	call	___wmul	;wreg free
  6144  002B2C  0E48               	movlw	low __npowers_
  6145  002B2E  0100               	movlb	0	; () banked
  6146  002B30  256E               	addwf	?___wmul& (0+255),w,b
  6147  002B32  6EF6               	movwf	tblptrl,c
  6148  002B34  0EFE               	movlw	high __npowers_
  6149  002B36  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6150  002B38  6EF7               	movwf	tblptrh,c
  6151  002B3A                     	if	1	;There are 3 active tblptr bytes
  6152  002B3A  6AF8               	clrf	tblptru,c
  6153  002B3C  0E00               	movlw	low (__mediumconst shr (0+16))
  6154  002B3E  22F8               	addwfc	tblptru,f,c
  6155  002B40                     	endif
  6156  002B40  0009               	tblrd		*+
  6157  002B42  CFF5 F077          	movff	tablat,___ftmul@f2
  6158  002B46  0009               	tblrd		*+
  6159  002B48  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6160  002B4C  000A               	tblrd		*-
  6161  002B4E  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6162  002B52  EC56  F045         	call	___ftmul	;wreg free
  6163  002B56  C074  F083         	movff	?___ftmul,?_scale
  6164  002B5A  C075  F084         	movff	?___ftmul+1,?_scale+1
  6165  002B5E  C076  F085         	movff	?___ftmul+2,?_scale+2
  6166  002B62  0012               	return	
  6167  002B64                     l3466:
  6168                           
  6169                           ;doprnt.c: 432: else if(scl > 10)
  6170  002B64  0100               	movlb	0	; () banked
  6171  002B66  5189               	movf	scale@scl& (0+255),w,b
  6172  002B68  0A80               	xorlw	128
  6173  002B6A  0F75               	addlw	-139
  6174  002B6C  A0D8               	btfss	status,0,c
  6175  002B6E  D05C               	goto	l3469
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6179  002B70  0E00               	movlw	0
  6180  002B72  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6181  002B74  0E0A               	movlw	10
  6182  002B76  6F68               	movwf	___awdiv@divisor& (0+255),b
  6183  002B78  5189               	movf	scale@scl& (0+255),w,b
  6184  002B7A  6F66               	movwf	___awdiv@dividend& (0+255),b
  6185  002B7C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6186  002B7E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  6187  002B80  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6188  002B82  EC2A  F050         	call	___awdiv	;wreg free
  6189  002B86  0E09               	movlw	9
  6190  002B88  0100               	movlb	0	; () banked
  6191  002B8A  2566               	addwf	?___awdiv& (0+255),w,b
  6192  002B8C  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6193  002B8E  0E00               	movlw	0
  6194  002B90  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6195  002B92  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6196  002B94  0E00               	movlw	0
  6197  002B96  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6198  002B98  0E03               	movlw	3
  6199  002B9A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6200  002B9C  EC82  F05E         	call	___wmul	;wreg free
  6201  002BA0  0E48               	movlw	low __npowers_
  6202  002BA2  0100               	movlb	0	; () banked
  6203  002BA4  256E               	addwf	?___wmul& (0+255),w,b
  6204  002BA6  6EF6               	movwf	tblptrl,c
  6205  002BA8  0EFE               	movlw	high __npowers_
  6206  002BAA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6207  002BAC  6EF7               	movwf	tblptrh,c
  6208  002BAE                     	if	1	;There are 3 active tblptr bytes
  6209  002BAE  6AF8               	clrf	tblptru,c
  6210  002BB0  0E00               	movlw	low (__mediumconst shr (0+16))
  6211  002BB2  22F8               	addwfc	tblptru,f,c
  6212  002BB4                     	endif
  6213  002BB4  0009               	tblrd		*+
  6214  002BB6  CFF5 F074          	movff	tablat,___ftmul@f1
  6215  002BBA  0009               	tblrd		*+
  6216  002BBC  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6217  002BC0  000A               	tblrd		*-
  6218  002BC2  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6219  002BC6  0E00               	movlw	0
  6220  002BC8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6221  002BCA  0E03               	movlw	3
  6222  002BCC  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6223  002BCE  0E00               	movlw	0
  6224  002BD0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6225  002BD2  0E0A               	movlw	10
  6226  002BD4  6F62               	movwf	___awmod@divisor& (0+255),b
  6227  002BD6  5189               	movf	scale@scl& (0+255),w,b
  6228  002BD8  6F60               	movwf	___awmod@dividend& (0+255),b
  6229  002BDA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6230  002BDC  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6231  002BDE  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6232  002BE0  EC64  F052         	call	___awmod	;wreg free
  6233  002BE4  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6234  002BE8  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6235  002BEC  EC82  F05E         	call	___wmul	;wreg free
  6236  002BF0  0E48               	movlw	low __npowers_
  6237  002BF2  0100               	movlb	0	; () banked
  6238  002BF4  256E               	addwf	?___wmul& (0+255),w,b
  6239  002BF6  6EF6               	movwf	tblptrl,c
  6240  002BF8  0EFE               	movlw	high __npowers_
  6241  002BFA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6242  002BFC  6EF7               	movwf	tblptrh,c
  6243  002BFE                     	if	1	;There are 3 active tblptr bytes
  6244  002BFE  6AF8               	clrf	tblptru,c
  6245  002C00  0E00               	movlw	low (__mediumconst shr (0+16))
  6246  002C02  22F8               	addwfc	tblptru,f,c
  6247  002C04                     	endif
  6248  002C04  0009               	tblrd		*+
  6249  002C06  CFF5 F077          	movff	tablat,___ftmul@f2
  6250  002C0A  0009               	tblrd		*+
  6251  002C0C  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6252  002C10  000A               	tblrd		*-
  6253  002C12  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6254  002C16  EC56  F045         	call	___ftmul	;wreg free
  6255  002C1A  C074  F083         	movff	?___ftmul,?_scale
  6256  002C1E  C075  F084         	movff	?___ftmul+1,?_scale+1
  6257  002C22  C076  F085         	movff	?___ftmul+2,?_scale+2
  6258  002C26  0012               	return	
  6259  002C28                     l3469:
  6260                           
  6261                           ;doprnt.c: 434: return _npowers_[scl];
  6262  002C28  0100               	movlb	0	; () banked
  6263  002C2A  5189               	movf	scale@scl& (0+255),w,b
  6264  002C2C  0D03               	mullw	3
  6265  002C2E  0E48               	movlw	low __npowers_
  6266  002C30  24F3               	addwf	prodl,w,c
  6267  002C32  6EF6               	movwf	tblptrl,c
  6268  002C34  0EFE               	movlw	high __npowers_
  6269  002C36  20F4               	addwfc	prodh,w,c
  6270  002C38  6EF7               	movwf	tblptrh,c
  6271  002C3A                     	if	1	;There are 3 active tblptr bytes
  6272  002C3A  6AF8               	clrf	tblptru,c
  6273  002C3C  0E00               	movlw	low (__mediumconst shr (0+16))
  6274  002C3E  22F8               	addwfc	tblptru,f,c
  6275  002C40                     	endif
  6276  002C40  0009               	tblrd		*+
  6277  002C42  CFF5 F083          	movff	tablat,?_scale
  6278  002C46  0009               	tblrd		*+
  6279  002C48  CFF5 F084          	movff	tablat,?_scale+1
  6280  002C4C  000A               	tblrd		*-
  6281  002C4E  CFF5 F085          	movff	tablat,?_scale+2
  6282                           
  6283                           ; BSR set to: 0
  6284  002C52  0012               	return	
  6285  002C54                     l3465:
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;doprnt.c: 435: }
  6289                           ;doprnt.c: 436: if(scl>=110)
  6290                           
  6291                           ; BSR set to: 0
  6292  002C54  5189               	movf	scale@scl& (0+255),w,b
  6293  002C56  0A80               	xorlw	128
  6294  002C58  0F12               	addlw	-238
  6295  002C5A  A0D8               	btfss	status,0,c
  6296  002C5C  D0A0               	goto	l3470
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6300  002C5E  0E00               	movlw	0
  6301  002C60  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6302  002C62  0E03               	movlw	3
  6303  002C64  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6304  002C66  0E00               	movlw	0
  6305  002C68  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6306  002C6A  0E0A               	movlw	10
  6307  002C6C  6F68               	movwf	___awdiv@divisor& (0+255),b
  6308  002C6E  0E00               	movlw	0
  6309  002C70  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6310  002C72  0E64               	movlw	100
  6311  002C74  6F62               	movwf	___awmod@divisor& (0+255),b
  6312  002C76  5189               	movf	scale@scl& (0+255),w,b
  6313  002C78  6F60               	movwf	___awmod@dividend& (0+255),b
  6314  002C7A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6315  002C7C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6316  002C7E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6317  002C80  EC64  F052         	call	___awmod	;wreg free
  6318  002C84  C060  F066         	movff	?___awmod,___awdiv@dividend
  6319  002C88  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  6320  002C8C  EC2A  F050         	call	___awdiv	;wreg free
  6321  002C90  0E09               	movlw	9
  6322  002C92  0100               	movlb	0	; () banked
  6323  002C94  2566               	addwf	?___awdiv& (0+255),w,b
  6324  002C96  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6325  002C98  0E00               	movlw	0
  6326  002C9A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6327  002C9C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6328  002C9E  EC82  F05E         	call	___wmul	;wreg free
  6329  002CA2  0E21               	movlw	low __powers_
  6330  002CA4  0100               	movlb	0	; () banked
  6331  002CA6  256E               	addwf	?___wmul& (0+255),w,b
  6332  002CA8  6EF6               	movwf	tblptrl,c
  6333  002CAA  0EFE               	movlw	high __powers_
  6334  002CAC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6335  002CAE  6EF7               	movwf	tblptrh,c
  6336  002CB0                     	if	1	;There are 3 active tblptr bytes
  6337  002CB0  6AF8               	clrf	tblptru,c
  6338  002CB2  0E00               	movlw	low (__mediumconst shr (0+16))
  6339  002CB4  22F8               	addwfc	tblptru,f,c
  6340  002CB6                     	endif
  6341  002CB6  0009               	tblrd		*+
  6342  002CB8  CFF5 F077          	movff	tablat,___ftmul@f2
  6343  002CBC  0009               	tblrd		*+
  6344  002CBE  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6345  002CC2  000A               	tblrd		*-
  6346  002CC4  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6347  002CC8  0E00               	movlw	0
  6348  002CCA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6349  002CCC  0E64               	movlw	100
  6350  002CCE  6F68               	movwf	___awdiv@divisor& (0+255),b
  6351  002CD0  5189               	movf	scale@scl& (0+255),w,b
  6352  002CD2  6F66               	movwf	___awdiv@dividend& (0+255),b
  6353  002CD4  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6354  002CD6  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  6355  002CD8  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6356  002CDA  EC2A  F050         	call	___awdiv	;wreg free
  6357  002CDE  0E12               	movlw	18
  6358  002CE0  0100               	movlb	0	; () banked
  6359  002CE2  2566               	addwf	?___awdiv& (0+255),w,b
  6360  002CE4  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6361  002CE6  0E00               	movlw	0
  6362  002CE8  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6363  002CEA  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6364  002CEC  0E00               	movlw	0
  6365  002CEE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6366  002CF0  0E03               	movlw	3
  6367  002CF2  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6368  002CF4  EC82  F05E         	call	___wmul	;wreg free
  6369  002CF8  0E21               	movlw	low __powers_
  6370  002CFA  0100               	movlb	0	; () banked
  6371  002CFC  256E               	addwf	?___wmul& (0+255),w,b
  6372  002CFE  6EF6               	movwf	tblptrl,c
  6373  002D00  0EFE               	movlw	high __powers_
  6374  002D02  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6375  002D04  6EF7               	movwf	tblptrh,c
  6376  002D06                     	if	1	;There are 3 active tblptr bytes
  6377  002D06  6AF8               	clrf	tblptru,c
  6378  002D08  0E00               	movlw	low (__mediumconst shr (0+16))
  6379  002D0A  22F8               	addwfc	tblptru,f,c
  6380  002D0C                     	endif
  6381  002D0C  0009               	tblrd		*+
  6382  002D0E  CFF5 F074          	movff	tablat,___ftmul@f1
  6383  002D12  0009               	tblrd		*+
  6384  002D14  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6385  002D18  000A               	tblrd		*-
  6386  002D1A  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6387  002D1E  EC56  F045         	call	___ftmul	;wreg free
  6388  002D22  C074  F086         	movff	?___ftmul,_scale$7056
  6389  002D26  C075  F087         	movff	?___ftmul+1,_scale$7056+1
  6390  002D2A  C076  F088         	movff	?___ftmul+2,_scale$7056+2
  6391                           
  6392                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6393  002D2E  C086  F074         	movff	_scale$7056,___ftmul@f1
  6394  002D32  C087  F075         	movff	_scale$7056+1,___ftmul@f1+1
  6395  002D36  C088  F076         	movff	_scale$7056+2,___ftmul@f1+2
  6396  002D3A  0E00               	movlw	0
  6397  002D3C  0100               	movlb	0	; () banked
  6398  002D3E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6399  002D40  0E03               	movlw	3
  6400  002D42  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6401  002D44  0E00               	movlw	0
  6402  002D46  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6403  002D48  0E0A               	movlw	10
  6404  002D4A  6F62               	movwf	___awmod@divisor& (0+255),b
  6405  002D4C  5189               	movf	scale@scl& (0+255),w,b
  6406  002D4E  6F60               	movwf	___awmod@dividend& (0+255),b
  6407  002D50  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6408  002D52  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6409  002D54  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6410  002D56  EC64  F052         	call	___awmod	;wreg free
  6411  002D5A  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6412  002D5E  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6413  002D62  EC82  F05E         	call	___wmul	;wreg free
  6414  002D66  0E21               	movlw	low __powers_
  6415  002D68  0100               	movlb	0	; () banked
  6416  002D6A  256E               	addwf	?___wmul& (0+255),w,b
  6417  002D6C  6EF6               	movwf	tblptrl,c
  6418  002D6E  0EFE               	movlw	high __powers_
  6419  002D70  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6420  002D72  6EF7               	movwf	tblptrh,c
  6421  002D74                     	if	1	;There are 3 active tblptr bytes
  6422  002D74  6AF8               	clrf	tblptru,c
  6423  002D76  0E00               	movlw	low (__mediumconst shr (0+16))
  6424  002D78  22F8               	addwfc	tblptru,f,c
  6425  002D7A                     	endif
  6426  002D7A  0009               	tblrd		*+
  6427  002D7C  CFF5 F077          	movff	tablat,___ftmul@f2
  6428  002D80  0009               	tblrd		*+
  6429  002D82  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6430  002D86  000A               	tblrd		*-
  6431  002D88  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6432  002D8C  EC56  F045         	call	___ftmul	;wreg free
  6433  002D90  C074  F083         	movff	?___ftmul,?_scale
  6434  002D94  C075  F084         	movff	?___ftmul+1,?_scale+1
  6435  002D98  C076  F085         	movff	?___ftmul+2,?_scale+2
  6436  002D9C  0012               	return	
  6437  002D9E                     l3470:
  6438                           
  6439                           ;doprnt.c: 438: else if(scl > 10)
  6440  002D9E  0100               	movlb	0	; () banked
  6441  002DA0  5189               	movf	scale@scl& (0+255),w,b
  6442  002DA2  0A80               	xorlw	128
  6443  002DA4  0F75               	addlw	-139
  6444  002DA6  A0D8               	btfss	status,0,c
  6445  002DA8  D05C               	goto	l3472
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6449  002DAA  0E00               	movlw	0
  6450  002DAC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6451  002DAE  0E0A               	movlw	10
  6452  002DB0  6F68               	movwf	___awdiv@divisor& (0+255),b
  6453  002DB2  5189               	movf	scale@scl& (0+255),w,b
  6454  002DB4  6F66               	movwf	___awdiv@dividend& (0+255),b
  6455  002DB6  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6456  002DB8  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  6457  002DBA  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6458  002DBC  EC2A  F050         	call	___awdiv	;wreg free
  6459  002DC0  0E09               	movlw	9
  6460  002DC2  0100               	movlb	0	; () banked
  6461  002DC4  2566               	addwf	?___awdiv& (0+255),w,b
  6462  002DC6  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6463  002DC8  0E00               	movlw	0
  6464  002DCA  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6465  002DCC  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6466  002DCE  0E00               	movlw	0
  6467  002DD0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6468  002DD2  0E03               	movlw	3
  6469  002DD4  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6470  002DD6  EC82  F05E         	call	___wmul	;wreg free
  6471  002DDA  0E21               	movlw	low __powers_
  6472  002DDC  0100               	movlb	0	; () banked
  6473  002DDE  256E               	addwf	?___wmul& (0+255),w,b
  6474  002DE0  6EF6               	movwf	tblptrl,c
  6475  002DE2  0EFE               	movlw	high __powers_
  6476  002DE4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6477  002DE6  6EF7               	movwf	tblptrh,c
  6478  002DE8                     	if	1	;There are 3 active tblptr bytes
  6479  002DE8  6AF8               	clrf	tblptru,c
  6480  002DEA  0E00               	movlw	low (__mediumconst shr (0+16))
  6481  002DEC  22F8               	addwfc	tblptru,f,c
  6482  002DEE                     	endif
  6483  002DEE  0009               	tblrd		*+
  6484  002DF0  CFF5 F074          	movff	tablat,___ftmul@f1
  6485  002DF4  0009               	tblrd		*+
  6486  002DF6  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6487  002DFA  000A               	tblrd		*-
  6488  002DFC  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6489  002E00  0E00               	movlw	0
  6490  002E02  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6491  002E04  0E03               	movlw	3
  6492  002E06  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6493  002E08  0E00               	movlw	0
  6494  002E0A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6495  002E0C  0E0A               	movlw	10
  6496  002E0E  6F62               	movwf	___awmod@divisor& (0+255),b
  6497  002E10  5189               	movf	scale@scl& (0+255),w,b
  6498  002E12  6F60               	movwf	___awmod@dividend& (0+255),b
  6499  002E14  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6500  002E16  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6501  002E18  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6502  002E1A  EC64  F052         	call	___awmod	;wreg free
  6503  002E1E  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6504  002E22  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6505  002E26  EC82  F05E         	call	___wmul	;wreg free
  6506  002E2A  0E21               	movlw	low __powers_
  6507  002E2C  0100               	movlb	0	; () banked
  6508  002E2E  256E               	addwf	?___wmul& (0+255),w,b
  6509  002E30  6EF6               	movwf	tblptrl,c
  6510  002E32  0EFE               	movlw	high __powers_
  6511  002E34  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6512  002E36  6EF7               	movwf	tblptrh,c
  6513  002E38                     	if	1	;There are 3 active tblptr bytes
  6514  002E38  6AF8               	clrf	tblptru,c
  6515  002E3A  0E00               	movlw	low (__mediumconst shr (0+16))
  6516  002E3C  22F8               	addwfc	tblptru,f,c
  6517  002E3E                     	endif
  6518  002E3E  0009               	tblrd		*+
  6519  002E40  CFF5 F077          	movff	tablat,___ftmul@f2
  6520  002E44  0009               	tblrd		*+
  6521  002E46  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6522  002E4A  000A               	tblrd		*-
  6523  002E4C  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6524  002E50  EC56  F045         	call	___ftmul	;wreg free
  6525  002E54  C074  F083         	movff	?___ftmul,?_scale
  6526  002E58  C075  F084         	movff	?___ftmul+1,?_scale+1
  6527  002E5C  C076  F085         	movff	?___ftmul+2,?_scale+2
  6528  002E60  0012               	return	
  6529  002E62                     l3472:
  6530                           
  6531                           ;doprnt.c: 440: return _powers_[scl];
  6532  002E62  0100               	movlb	0	; () banked
  6533  002E64  5189               	movf	scale@scl& (0+255),w,b
  6534  002E66  0D03               	mullw	3
  6535  002E68  0E21               	movlw	low __powers_
  6536  002E6A  24F3               	addwf	prodl,w,c
  6537  002E6C  6EF6               	movwf	tblptrl,c
  6538  002E6E  0EFE               	movlw	high __powers_
  6539  002E70  20F4               	addwfc	prodh,w,c
  6540  002E72  6EF7               	movwf	tblptrh,c
  6541  002E74                     	if	1	;There are 3 active tblptr bytes
  6542  002E74  6AF8               	clrf	tblptru,c
  6543  002E76  0E00               	movlw	low (__mediumconst shr (0+16))
  6544  002E78  22F8               	addwfc	tblptru,f,c
  6545  002E7A                     	endif
  6546  002E7A  0009               	tblrd		*+
  6547  002E7C  CFF5 F083          	movff	tablat,?_scale
  6548  002E80  0009               	tblrd		*+
  6549  002E82  CFF5 F084          	movff	tablat,?_scale+1
  6550  002E86  000A               	tblrd		*-
  6551  002E88  CFF5 F085          	movff	tablat,?_scale+2
  6552  002E8C  0012               	return	
  6553  002E8E                     __end_of_scale:
  6554                           	opt stack 0
  6555                           tblptru	equ	0xFF8
  6556                           tblptrh	equ	0xFF7
  6557                           tblptrl	equ	0xFF6
  6558                           tablat	equ	0xFF5
  6559                           prodh	equ	0xFF4
  6560                           prodl	equ	0xFF3
  6561                           intcon	equ	0xFF2
  6562                           postinc0	equ	0xFEE
  6563                           wreg	equ	0xFE8
  6564                           indf2	equ	0xFDF
  6565                           postinc2	equ	0xFDE
  6566                           postdec2	equ	0xFDD
  6567                           fsr2h	equ	0xFDA
  6568                           fsr2l	equ	0xFD9
  6569                           status	equ	0xFD8
  6570                           
  6571 ;; *************** function _putch *****************
  6572 ;; Defined at:
  6573 ;;		line 148 in file "mcc_generated_files/eusart1.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  txData          1    wreg     unsigned char 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  txData          1    1[BANK0 ] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;Total ram usage:        1 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    8
  6594 ;; This function calls:
  6595 ;;		_EUSART1_Write
  6596 ;; This function is called by:
  6597 ;;		_printf
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text3
  6602  00C4AA                     __ptext3:
  6603                           	opt stack 0
  6604  00C4AA                     _putch:
  6605                           	opt stack 21
  6606                           
  6607                           ;incstack = 0
  6608                           ;putch@txData stored from wreg
  6609  00C4AA  0100               	movlb	0	; () banked
  6610  00C4AC  6F61               	movwf	putch@txData& (0+255),b
  6611                           
  6612                           ;eusart1.c: 150: EUSART1_Write(txData);
  6613  00C4AE  0100               	movlb	0	; () banked
  6614  00C4B0  5161               	movf	putch@txData& (0+255),w,b
  6615  00C4B2  ECBE  F061         	call	_EUSART1_Write
  6616  00C4B6  0012               	return		;funcret
  6617  00C4B8                     __end_of_putch:
  6618                           	opt stack 0
  6619                           tblptru	equ	0xFF8
  6620                           tblptrh	equ	0xFF7
  6621                           tblptrl	equ	0xFF6
  6622                           tablat	equ	0xFF5
  6623                           prodh	equ	0xFF4
  6624                           prodl	equ	0xFF3
  6625                           intcon	equ	0xFF2
  6626                           postinc0	equ	0xFEE
  6627                           wreg	equ	0xFE8
  6628                           indf2	equ	0xFDF
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           fsr2h	equ	0xFDA
  6632                           fsr2l	equ	0xFD9
  6633                           status	equ	0xFD8
  6634                           
  6635 ;; *************** function _EUSART1_Write *****************
  6636 ;; Defined at:
  6637 ;;		line 133 in file "mcc_generated_files/eusart1.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  txData          1    wreg     unsigned char 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  txData          1    0[BANK0 ] unsigned char 
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      void 
  6644 ;; Registers used:
  6645 ;;		wreg
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6652 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6654 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;Total ram usage:        1 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:    7
  6658 ;; This function calls:
  6659 ;;		Nothing
  6660 ;; This function is called by:
  6661 ;;		_putch
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text4
  6666  00C37C                     __ptext4:
  6667                           	opt stack 0
  6668  00C37C                     _EUSART1_Write:
  6669                           	opt stack 21
  6670                           
  6671                           ;incstack = 0
  6672                           ;EUSART1_Write@txData stored from wreg
  6673  00C37C  0100               	movlb	0	; () banked
  6674  00C37E  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  6675                           
  6676                           ;eusart1.c: 135: while(0 == PIR1bits.TX1IF)
  6677  00C380  D001               	goto	l2903
  6678  00C382                     l2904:
  6679  00C382  0004               	clrwdt		;# 
  6680  00C384                     l2903:
  6681  00C384  A89E               	btfss	3998,4,c	;volatile
  6682  00C386  D7FD               	goto	l2904
  6683                           
  6684                           ;eusart1.c: 138: }
  6685                           ;eusart1.c: 140: TXREG1 = txData;
  6686  00C388  C060  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6687  00C38C  0012               	return		;funcret
  6688  00C38E                     __end_of_EUSART1_Write:
  6689                           	opt stack 0
  6690                           tblptru	equ	0xFF8
  6691                           tblptrh	equ	0xFF7
  6692                           tblptrl	equ	0xFF6
  6693                           tablat	equ	0xFF5
  6694                           prodh	equ	0xFF4
  6695                           prodl	equ	0xFF3
  6696                           intcon	equ	0xFF2
  6697                           postinc0	equ	0xFEE
  6698                           wreg	equ	0xFE8
  6699                           indf2	equ	0xFDF
  6700                           postinc2	equ	0xFDE
  6701                           postdec2	equ	0xFDD
  6702                           fsr2h	equ	0xFDA
  6703                           fsr2l	equ	0xFD9
  6704                           status	equ	0xFD8
  6705                           
  6706 ;; *************** function _isdigit *****************
  6707 ;; Defined at:
  6708 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  c               1    wreg     unsigned char 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  c               1    2[BANK0 ] unsigned char 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;		None               void
  6715 ;; Registers used:
  6716 ;;		wreg, status,2, status,0
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;Total ram usage:        3 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    7
  6729 ;; This function calls:
  6730 ;;		Nothing
  6731 ;; This function is called by:
  6732 ;;		_printf
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text5
  6737  00BE12                     __ptext5:
  6738                           	opt stack 0
  6739  00BE12                     _isdigit:
  6740                           	opt stack 22
  6741                           
  6742                           ;incstack = 0
  6743                           ;isdigit@c stored from wreg
  6744  00BE12  0100               	movlb	0	; () banked
  6745  00BE14  6F62               	movwf	isdigit@c& (0+255),b
  6746  00BE16  0E00               	movlw	0
  6747  00BE18  0100               	movlb	0	; () banked
  6748  00BE1A  6F61               	movwf	_isdigit$5855& (0+255),b
  6749                           
  6750                           ; BSR set to: 0
  6751  00BE1C  0E3A               	movlw	58
  6752  00BE1E  6162               	cpfslt	isdigit@c& (0+255),b
  6753  00BE20  D005               	goto	l3924
  6754                           
  6755                           ; BSR set to: 0
  6756  00BE22  0E2F               	movlw	47
  6757  00BE24  6562               	cpfsgt	isdigit@c& (0+255),b
  6758  00BE26  D002               	goto	l3924
  6759                           
  6760                           ; BSR set to: 0
  6761  00BE28  0E01               	movlw	1
  6762  00BE2A  6F61               	movwf	_isdigit$5855& (0+255),b
  6763  00BE2C                     l3924:
  6764                           
  6765                           ; BSR set to: 0
  6766                           
  6767                           ; BSR set to: 0
  6768  00BE2C  C061  F060         	movff	_isdigit$5855,??_isdigit
  6769  00BE30  3160               	rrcf	??_isdigit& (0+255),w,b
  6770  00BE32  0012               	return	
  6771  00BE34                     __end_of_isdigit:
  6772                           	opt stack 0
  6773                           tblptru	equ	0xFF8
  6774                           tblptrh	equ	0xFF7
  6775                           tblptrl	equ	0xFF6
  6776                           tablat	equ	0xFF5
  6777                           prodh	equ	0xFF4
  6778                           prodl	equ	0xFF3
  6779                           intcon	equ	0xFF2
  6780                           postinc0	equ	0xFEE
  6781                           wreg	equ	0xFE8
  6782                           indf2	equ	0xFDF
  6783                           postinc2	equ	0xFDE
  6784                           postdec2	equ	0xFDD
  6785                           fsr2h	equ	0xFDA
  6786                           fsr2l	equ	0xFD9
  6787                           status	equ	0xFD8
  6788                           
  6789 ;; *************** function _fround *****************
  6790 ;; Defined at:
  6791 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  prec            1    wreg     unsigned char 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  prec            1   44[BANK0 ] unsigned char 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  3   35[BANK0 ] unsigned char 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6805 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;Total ram usage:       10 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:    9
  6812 ;; This function calls:
  6813 ;;		___awdiv
  6814 ;;		___awmod
  6815 ;;		___ftmul
  6816 ;;		___wmul
  6817 ;; This function is called by:
  6818 ;;		_printf
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text6
  6823  0056C4                     __ptext6:
  6824                           	opt stack 0
  6825  0056C4                     _fround:
  6826                           	opt stack 20
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;incstack = 0
  6830                           ;fround@prec stored from wreg
  6831  0056C4  0100               	movlb	0	; () banked
  6832  0056C6  6F8C               	movwf	fround@prec& (0+255),b
  6833                           
  6834                           ;doprnt.c: 413: if(prec>=110)
  6835  0056C8  0E6D               	movlw	109
  6836  0056CA  0100               	movlb	0	; () banked
  6837  0056CC  658C               	cpfsgt	fround@prec& (0+255),b
  6838  0056CE  D0AF               	goto	l3459
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6842  0056D0  0E00               	movlw	0
  6843  0056D2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6844  0056D4  0E03               	movlw	3
  6845  0056D6  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6846  0056D8  0E00               	movlw	0
  6847  0056DA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6848  0056DC  0E0A               	movlw	10
  6849  0056DE  6F68               	movwf	___awdiv@divisor& (0+255),b
  6850  0056E0  0E00               	movlw	0
  6851  0056E2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6852  0056E4  0E64               	movlw	100
  6853  0056E6  6F62               	movwf	___awmod@divisor& (0+255),b
  6854  0056E8  C08C  F060         	movff	fround@prec,___awmod@dividend
  6855  0056EC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6856  0056EE  EC64  F052         	call	___awmod	;wreg free
  6857  0056F2  C060  F066         	movff	?___awmod,___awdiv@dividend
  6858  0056F6  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  6859  0056FA  EC2A  F050         	call	___awdiv	;wreg free
  6860  0056FE  0E09               	movlw	9
  6861  005700  0100               	movlb	0	; () banked
  6862  005702  2566               	addwf	?___awdiv& (0+255),w,b
  6863  005704  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6864  005706  0E00               	movlw	0
  6865  005708  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6866  00570A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6867  00570C  EC82  F05E         	call	___wmul	;wreg free
  6868  005710  0E48               	movlw	low __npowers_
  6869  005712  0100               	movlb	0	; () banked
  6870  005714  256E               	addwf	?___wmul& (0+255),w,b
  6871  005716  6EF6               	movwf	tblptrl,c
  6872  005718  0EFE               	movlw	high __npowers_
  6873  00571A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6874  00571C  6EF7               	movwf	tblptrh,c
  6875  00571E                     	if	1	;There are 3 active tblptr bytes
  6876  00571E  6AF8               	clrf	tblptru,c
  6877  005720  0E00               	movlw	low (__mediumconst shr (0+16))
  6878  005722  22F8               	addwfc	tblptru,f,c
  6879  005724                     	endif
  6880  005724  0009               	tblrd		*+
  6881  005726  CFF5 F077          	movff	tablat,___ftmul@f2
  6882  00572A  0009               	tblrd		*+
  6883  00572C  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6884  005730  000A               	tblrd		*-
  6885  005732  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6886  005736  0E00               	movlw	0
  6887  005738  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6888  00573A  0E64               	movlw	100
  6889  00573C  6F68               	movwf	___awdiv@divisor& (0+255),b
  6890  00573E  C08C  F066         	movff	fround@prec,___awdiv@dividend
  6891  005742  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6892  005744  EC2A  F050         	call	___awdiv	;wreg free
  6893  005748  0E12               	movlw	18
  6894  00574A  0100               	movlb	0	; () banked
  6895  00574C  2566               	addwf	?___awdiv& (0+255),w,b
  6896  00574E  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6897  005750  0E00               	movlw	0
  6898  005752  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6899  005754  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6900  005756  0E00               	movlw	0
  6901  005758  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6902  00575A  0E03               	movlw	3
  6903  00575C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6904  00575E  EC82  F05E         	call	___wmul	;wreg free
  6905  005762  0E48               	movlw	low __npowers_
  6906  005764  0100               	movlb	0	; () banked
  6907  005766  256E               	addwf	?___wmul& (0+255),w,b
  6908  005768  6EF6               	movwf	tblptrl,c
  6909  00576A  0EFE               	movlw	high __npowers_
  6910  00576C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6911  00576E  6EF7               	movwf	tblptrh,c
  6912  005770                     	if	1	;There are 3 active tblptr bytes
  6913  005770  6AF8               	clrf	tblptru,c
  6914  005772  0E00               	movlw	low (__mediumconst shr (0+16))
  6915  005774  22F8               	addwfc	tblptru,f,c
  6916  005776                     	endif
  6917  005776  0009               	tblrd		*+
  6918  005778  CFF5 F074          	movff	tablat,___ftmul@f1
  6919  00577C  0009               	tblrd		*+
  6920  00577E  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6921  005782  000A               	tblrd		*-
  6922  005784  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6923  005788  EC56  F045         	call	___ftmul	;wreg free
  6924  00578C  C074  F089         	movff	?___ftmul,_fround$7054
  6925  005790  C075  F08A         	movff	?___ftmul+1,_fround$7054+1
  6926  005794  C076  F08B         	movff	?___ftmul+2,_fround$7054+2
  6927                           
  6928                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6929  005798  0E00               	movlw	0
  6930  00579A  0100               	movlb	0	; () banked
  6931  00579C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6932  00579E  0E03               	movlw	3
  6933  0057A0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6934  0057A2  0E00               	movlw	0
  6935  0057A4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6936  0057A6  0E0A               	movlw	10
  6937  0057A8  6F62               	movwf	___awmod@divisor& (0+255),b
  6938  0057AA  C08C  F060         	movff	fround@prec,___awmod@dividend
  6939  0057AE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6940  0057B0  EC64  F052         	call	___awmod	;wreg free
  6941  0057B4  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6942  0057B8  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6943  0057BC  EC82  F05E         	call	___wmul	;wreg free
  6944  0057C0  0E48               	movlw	low __npowers_
  6945  0057C2  0100               	movlb	0	; () banked
  6946  0057C4  256E               	addwf	?___wmul& (0+255),w,b
  6947  0057C6  6EF6               	movwf	tblptrl,c
  6948  0057C8  0EFE               	movlw	high __npowers_
  6949  0057CA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6950  0057CC  6EF7               	movwf	tblptrh,c
  6951  0057CE                     	if	1	;There are 3 active tblptr bytes
  6952  0057CE  6AF8               	clrf	tblptru,c
  6953  0057D0  0E00               	movlw	low (__mediumconst shr (0+16))
  6954  0057D2  22F8               	addwfc	tblptru,f,c
  6955  0057D4                     	endif
  6956  0057D4  0009               	tblrd		*+
  6957  0057D6  CFF5 F077          	movff	tablat,___ftmul@f2
  6958  0057DA  0009               	tblrd		*+
  6959  0057DC  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6960  0057E0  000A               	tblrd		*-
  6961  0057E2  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6962  0057E6  C089  F074         	movff	_fround$7054,___ftmul@f1
  6963  0057EA  C08A  F075         	movff	_fround$7054+1,___ftmul@f1+1
  6964  0057EE  C08B  F076         	movff	_fround$7054+2,___ftmul@f1+2
  6965  0057F2  EC56  F045         	call	___ftmul	;wreg free
  6966  0057F6  C074  F086         	movff	?___ftmul,_fround$7055
  6967  0057FA  C075  F087         	movff	?___ftmul+1,_fround$7055+1
  6968  0057FE  C076  F088         	movff	?___ftmul+2,_fround$7055+2
  6969                           
  6970                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6971  005802  C086  F074         	movff	_fround$7055,___ftmul@f1
  6972  005806  C087  F075         	movff	_fround$7055+1,___ftmul@f1+1
  6973  00580A  C088  F076         	movff	_fround$7055+2,___ftmul@f1+2
  6974  00580E  0E00               	movlw	0
  6975  005810  0100               	movlb	0	; () banked
  6976  005812  6F77               	movwf	___ftmul@f2& (0+255),b
  6977  005814  0E00               	movlw	0
  6978  005816  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  6979  005818  0E3F               	movlw	63
  6980  00581A  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  6981  00581C  EC56  F045         	call	___ftmul	;wreg free
  6982  005820  C074  F083         	movff	?___ftmul,?_fround
  6983  005824  C075  F084         	movff	?___ftmul+1,?_fround+1
  6984  005828  C076  F085         	movff	?___ftmul+2,?_fround+2
  6985  00582C  0012               	return	
  6986  00582E                     l3459:
  6987                           
  6988                           ;doprnt.c: 415: else if(prec > 10)
  6989  00582E  0E0A               	movlw	10
  6990  005830  0100               	movlb	0	; () banked
  6991  005832  658C               	cpfsgt	fround@prec& (0+255),b
  6992  005834  D06D               	goto	l3462
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6996  005836  0E00               	movlw	0
  6997  005838  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6998  00583A  0E03               	movlw	3
  6999  00583C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7000  00583E  0E00               	movlw	0
  7001  005840  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7002  005842  0E0A               	movlw	10
  7003  005844  6F62               	movwf	___awmod@divisor& (0+255),b
  7004  005846  C08C  F060         	movff	fround@prec,___awmod@dividend
  7005  00584A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7006  00584C  EC64  F052         	call	___awmod	;wreg free
  7007  005850  C060  F06E         	movff	?___awmod,___wmul@multiplier
  7008  005854  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  7009  005858  EC82  F05E         	call	___wmul	;wreg free
  7010  00585C  0E48               	movlw	low __npowers_
  7011  00585E  0100               	movlb	0	; () banked
  7012  005860  256E               	addwf	?___wmul& (0+255),w,b
  7013  005862  6EF6               	movwf	tblptrl,c
  7014  005864  0EFE               	movlw	high __npowers_
  7015  005866  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7016  005868  6EF7               	movwf	tblptrh,c
  7017  00586A                     	if	1	;There are 3 active tblptr bytes
  7018  00586A  6AF8               	clrf	tblptru,c
  7019  00586C  0E00               	movlw	low (__mediumconst shr (0+16))
  7020  00586E  22F8               	addwfc	tblptru,f,c
  7021  005870                     	endif
  7022  005870  0009               	tblrd		*+
  7023  005872  CFF5 F077          	movff	tablat,___ftmul@f2
  7024  005876  0009               	tblrd		*+
  7025  005878  CFF5 F078          	movff	tablat,___ftmul@f2+1
  7026  00587C  000A               	tblrd		*-
  7027  00587E  CFF5 F079          	movff	tablat,___ftmul@f2+2
  7028  005882  0E00               	movlw	0
  7029  005884  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  7030  005886  0E0A               	movlw	10
  7031  005888  6F68               	movwf	___awdiv@divisor& (0+255),b
  7032  00588A  C08C  F066         	movff	fround@prec,___awdiv@dividend
  7033  00588E  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  7034  005890  EC2A  F050         	call	___awdiv	;wreg free
  7035  005894  0E09               	movlw	9
  7036  005896  0100               	movlb	0	; () banked
  7037  005898  2566               	addwf	?___awdiv& (0+255),w,b
  7038  00589A  6F6E               	movwf	___wmul@multiplier& (0+255),b
  7039  00589C  0E00               	movlw	0
  7040  00589E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  7041  0058A0  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7042  0058A2  0E00               	movlw	0
  7043  0058A4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7044  0058A6  0E03               	movlw	3
  7045  0058A8  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7046  0058AA  EC82  F05E         	call	___wmul	;wreg free
  7047  0058AE  0E48               	movlw	low __npowers_
  7048  0058B0  0100               	movlb	0	; () banked
  7049  0058B2  256E               	addwf	?___wmul& (0+255),w,b
  7050  0058B4  6EF6               	movwf	tblptrl,c
  7051  0058B6  0EFE               	movlw	high __npowers_
  7052  0058B8  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7053  0058BA  6EF7               	movwf	tblptrh,c
  7054  0058BC                     	if	1	;There are 3 active tblptr bytes
  7055  0058BC  6AF8               	clrf	tblptru,c
  7056  0058BE  0E00               	movlw	low (__mediumconst shr (0+16))
  7057  0058C0  22F8               	addwfc	tblptru,f,c
  7058  0058C2                     	endif
  7059  0058C2  0009               	tblrd		*+
  7060  0058C4  CFF5 F074          	movff	tablat,___ftmul@f1
  7061  0058C8  0009               	tblrd		*+
  7062  0058CA  CFF5 F075          	movff	tablat,___ftmul@f1+1
  7063  0058CE  000A               	tblrd		*-
  7064  0058D0  CFF5 F076          	movff	tablat,___ftmul@f1+2
  7065  0058D4  EC56  F045         	call	___ftmul	;wreg free
  7066  0058D8  C074  F089         	movff	?___ftmul,_fround$7054
  7067  0058DC  C075  F08A         	movff	?___ftmul+1,_fround$7054+1
  7068  0058E0  C076  F08B         	movff	?___ftmul+2,_fround$7054+2
  7069                           
  7070                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7071  0058E4  C089  F074         	movff	_fround$7054,___ftmul@f1
  7072  0058E8  C08A  F075         	movff	_fround$7054+1,___ftmul@f1+1
  7073  0058EC  C08B  F076         	movff	_fround$7054+2,___ftmul@f1+2
  7074  0058F0  0E00               	movlw	0
  7075  0058F2  0100               	movlb	0	; () banked
  7076  0058F4  6F77               	movwf	___ftmul@f2& (0+255),b
  7077  0058F6  0E00               	movlw	0
  7078  0058F8  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  7079  0058FA  0E3F               	movlw	63
  7080  0058FC  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  7081  0058FE  EC56  F045         	call	___ftmul	;wreg free
  7082  005902  C074  F083         	movff	?___ftmul,?_fround
  7083  005906  C075  F084         	movff	?___ftmul+1,?_fround+1
  7084  00590A  C076  F085         	movff	?___ftmul+2,?_fround+2
  7085  00590E  0012               	return	
  7086  005910                     l3462:
  7087                           
  7088                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  7089  005910  0100               	movlb	0	; () banked
  7090  005912  518C               	movf	fround@prec& (0+255),w,b
  7091  005914  0D03               	mullw	3
  7092  005916  0E48               	movlw	low __npowers_
  7093  005918  24F3               	addwf	prodl,w,c
  7094  00591A  6EF6               	movwf	tblptrl,c
  7095  00591C  0EFE               	movlw	high __npowers_
  7096  00591E  20F4               	addwfc	prodh,w,c
  7097  005920  6EF7               	movwf	tblptrh,c
  7098  005922                     	if	1	;There are 3 active tblptr bytes
  7099  005922  6AF8               	clrf	tblptru,c
  7100  005924  0E00               	movlw	low (__mediumconst shr (0+16))
  7101  005926  22F8               	addwfc	tblptru,f,c
  7102  005928                     	endif
  7103  005928  0009               	tblrd		*+
  7104  00592A  CFF5 F074          	movff	tablat,___ftmul@f1
  7105  00592E  0009               	tblrd		*+
  7106  005930  CFF5 F075          	movff	tablat,___ftmul@f1+1
  7107  005934  000A               	tblrd		*-
  7108  005936  CFF5 F076          	movff	tablat,___ftmul@f1+2
  7109  00593A  0E00               	movlw	0
  7110  00593C  6F77               	movwf	___ftmul@f2& (0+255),b
  7111  00593E  0E00               	movlw	0
  7112  005940  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  7113  005942  0E3F               	movlw	63
  7114  005944  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  7115  005946  EC56  F045         	call	___ftmul	;wreg free
  7116  00594A  C074  F083         	movff	?___ftmul,?_fround
  7117  00594E  C075  F084         	movff	?___ftmul+1,?_fround+1
  7118  005952  C076  F085         	movff	?___ftmul+2,?_fround+2
  7119  005956  0012               	return	
  7120  005958                     __end_of_fround:
  7121                           	opt stack 0
  7122                           tblptru	equ	0xFF8
  7123                           tblptrh	equ	0xFF7
  7124                           tblptrl	equ	0xFF6
  7125                           tablat	equ	0xFF5
  7126                           prodh	equ	0xFF4
  7127                           prodl	equ	0xFF3
  7128                           intcon	equ	0xFF2
  7129                           postinc0	equ	0xFEE
  7130                           wreg	equ	0xFE8
  7131                           indf2	equ	0xFDF
  7132                           postinc2	equ	0xFDE
  7133                           postdec2	equ	0xFDD
  7134                           fsr2h	equ	0xFDA
  7135                           fsr2l	equ	0xFD9
  7136                           status	equ	0xFD8
  7137                           
  7138 ;; *************** function ___ftmul *****************
  7139 ;; Defined at:
  7140 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;  f1              3   20[BANK0 ] float 
  7143 ;;  f2              3   23[BANK0 ] float 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;  f3_as_produc    3   30[BANK0 ] unsigned um
  7146 ;;  sign            1   34[BANK0 ] unsigned char 
  7147 ;;  cntr            1   33[BANK0 ] unsigned char 
  7148 ;;  exp             1   29[BANK0 ] unsigned char 
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  3   20[BANK0 ] float 
  7151 ;; Registers used:
  7152 ;;		wreg, status,2, status,0, cstack
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7158 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7159 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7160 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7161 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7162 ;;Total ram usage:       15 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    8
  7165 ;; This function calls:
  7166 ;;		___ftpack
  7167 ;; This function is called by:
  7168 ;;		_main
  7169 ;;		_fround
  7170 ;;		_scale
  7171 ;;		_printf
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text7
  7176  008AAC                     __ptext7:
  7177                           	opt stack 0
  7178  008AAC                     ___ftmul:
  7179                           	opt stack 20
  7180                           
  7181                           ;incstack = 0
  7182  008AAC  C076  F07A         	movff	___ftmul@f1+2,??___ftmul
  7183  008AB0  0100               	movlb	0	; () banked
  7184  008AB2  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  7185  008AB4  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  7186  008AB6  3575               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7187  008AB8  377A               	rlcf	??___ftmul& (0+255),f,b
  7188  008ABA  E301               	bnc	u16371
  7189  008ABC  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  7190  008ABE                     u16371:
  7191  008ABE  517A               	movf	??___ftmul& (0+255),w,b
  7192  008AC0  6F7D               	movwf	___ftmul@exp& (0+255),b
  7193  008AC2  517D               	movf	___ftmul@exp& (0+255),w,b
  7194  008AC4  A4D8               	btfss	status,2,c
  7195  008AC6  D007               	goto	l3888
  7196                           
  7197                           ; BSR set to: 0
  7198  008AC8  0E00               	movlw	0
  7199  008ACA  6F74               	movwf	?___ftmul& (0+255),b
  7200  008ACC  0E00               	movlw	0
  7201  008ACE  6F75               	movwf	(?___ftmul+1)& (0+255),b
  7202  008AD0  0E00               	movlw	0
  7203  008AD2  6F76               	movwf	(?___ftmul+2)& (0+255),b
  7204                           
  7205                           ; BSR set to: 0
  7206  008AD4  0012               	return	
  7207  008AD6                     l3888:
  7208                           
  7209                           ; BSR set to: 0
  7210                           
  7211                           ; BSR set to: 0
  7212  008AD6  C079  F07A         	movff	___ftmul@f2+2,??___ftmul
  7213  008ADA  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  7214  008ADC  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  7215  008ADE  3578               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7216  008AE0  377A               	rlcf	??___ftmul& (0+255),f,b
  7217  008AE2  E301               	bnc	u16391
  7218  008AE4  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  7219  008AE6                     u16391:
  7220  008AE6  517A               	movf	??___ftmul& (0+255),w,b
  7221  008AE8  6F82               	movwf	___ftmul@sign& (0+255),b
  7222  008AEA  5182               	movf	___ftmul@sign& (0+255),w,b
  7223  008AEC  A4D8               	btfss	status,2,c
  7224  008AEE  D007               	goto	l3890
  7225                           
  7226                           ; BSR set to: 0
  7227  008AF0  0E00               	movlw	0
  7228  008AF2  6F74               	movwf	?___ftmul& (0+255),b
  7229  008AF4  0E00               	movlw	0
  7230  008AF6  6F75               	movwf	(?___ftmul+1)& (0+255),b
  7231  008AF8  0E00               	movlw	0
  7232  008AFA  6F76               	movwf	(?___ftmul+2)& (0+255),b
  7233                           
  7234                           ; BSR set to: 0
  7235  008AFC  0012               	return	
  7236  008AFE                     l3890:
  7237                           
  7238                           ; BSR set to: 0
  7239                           
  7240                           ; BSR set to: 0
  7241  008AFE  5182               	movf	___ftmul@sign& (0+255),w,b
  7242  008B00  0F7B               	addlw	123
  7243  008B02  277D               	addwf	___ftmul@exp& (0+255),f,b
  7244                           
  7245                           ; BSR set to: 0
  7246  008B04  C076  F082         	movff	___ftmul@f1+2,___ftmul@sign
  7247  008B08  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  7248  008B0A  1B82               	xorwf	___ftmul@sign& (0+255),f,b
  7249  008B0C  0E80               	movlw	128
  7250  008B0E  1782               	andwf	___ftmul@sign& (0+255),f,b
  7251                           
  7252                           ; BSR set to: 0
  7253  008B10  8F75               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7254                           
  7255                           ; BSR set to: 0
  7256  008B12  8F78               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7257                           
  7258                           ; BSR set to: 0
  7259  008B14  0EFF               	movlw	255
  7260  008B16  1777               	andwf	___ftmul@f2& (0+255),f,b
  7261  008B18  0EFF               	movlw	255
  7262  008B1A  1778               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7263  008B1C  0E00               	movlw	0
  7264  008B1E  1779               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7265                           
  7266                           ; BSR set to: 0
  7267  008B20  0E00               	movlw	0
  7268  008B22  6F7E               	movwf	___ftmul@f3_as_product& (0+255),b
  7269  008B24  0E00               	movlw	0
  7270  008B26  6F7F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7271  008B28  0E00               	movlw	0
  7272  008B2A  6F80               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7273                           
  7274                           ; BSR set to: 0
  7275  008B2C  0E07               	movlw	7
  7276  008B2E  6F81               	movwf	___ftmul@cntr& (0+255),b
  7277  008B30                     
  7278                           ; BSR set to: 0
  7279                           
  7280                           ; BSR set to: 0
  7281  008B30  A174               	btfss	___ftmul@f1& (0+255),0,b
  7282  008B32  D006               	goto	l3892
  7283                           
  7284                           ; BSR set to: 0
  7285  008B34  5177               	movf	___ftmul@f2& (0+255),w,b
  7286  008B36  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7287  008B38  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  7288  008B3A  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7289  008B3C  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  7290  008B3E  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7291  008B40                     l3892:
  7292                           
  7293                           ; BSR set to: 0
  7294                           
  7295                           ; BSR set to: 0
  7296  008B40  90D8               	bcf	status,0,c
  7297  008B42  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7298  008B44  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7299  008B46  3374               	rrcf	___ftmul@f1& (0+255),f,b
  7300  008B48  90D8               	bcf	status,0,c
  7301  008B4A  3777               	rlcf	___ftmul@f2& (0+255),f,b
  7302  008B4C  3778               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7303  008B4E  3779               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7304                           
  7305                           ; BSR set to: 0
  7306  008B50  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  7307  008B52  D7EE               	goto	l3891
  7308                           
  7309                           ; BSR set to: 0
  7310                           
  7311                           ; BSR set to: 0
  7312  008B54  0E09               	movlw	9
  7313  008B56  6F81               	movwf	___ftmul@cntr& (0+255),b
  7314  008B58                     
  7315                           ; BSR set to: 0
  7316                           
  7317                           ; BSR set to: 0
  7318  008B58  A174               	btfss	___ftmul@f1& (0+255),0,b
  7319  008B5A  D006               	goto	l3895
  7320                           
  7321                           ; BSR set to: 0
  7322  008B5C  5177               	movf	___ftmul@f2& (0+255),w,b
  7323  008B5E  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7324  008B60  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  7325  008B62  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7326  008B64  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  7327  008B66  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7328  008B68                     l3895:
  7329                           
  7330                           ; BSR set to: 0
  7331                           
  7332                           ; BSR set to: 0
  7333  008B68  90D8               	bcf	status,0,c
  7334  008B6A  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7335  008B6C  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7336  008B6E  3374               	rrcf	___ftmul@f1& (0+255),f,b
  7337  008B70  90D8               	bcf	status,0,c
  7338  008B72  3380               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7339  008B74  337F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7340  008B76  337E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7341                           
  7342                           ; BSR set to: 0
  7343  008B78  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  7344  008B7A  D7EE               	goto	l3894
  7345                           
  7346                           ; BSR set to: 0
  7347                           
  7348                           ; BSR set to: 0
  7349  008B7C  C07E  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  7350  008B80  C07F  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7351  008B84  C080  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7352  008B88  C07D  F063         	movff	___ftmul@exp,___ftpack@exp
  7353  008B8C  C082  F064         	movff	___ftmul@sign,___ftpack@sign
  7354  008B90  EC62  F04B         	call	___ftpack	;wreg free
  7355  008B94  C060  F074         	movff	?___ftpack,?___ftmul
  7356  008B98  C061  F075         	movff	?___ftpack+1,?___ftmul+1
  7357  008B9C  C062  F076         	movff	?___ftpack+2,?___ftmul+2
  7358  008BA0  0012               	return	
  7359  008BA2                     __end_of___ftmul:
  7360                           	opt stack 0
  7361                           tblptru	equ	0xFF8
  7362                           tblptrh	equ	0xFF7
  7363                           tblptrl	equ	0xFF6
  7364                           tablat	equ	0xFF5
  7365                           prodh	equ	0xFF4
  7366                           prodl	equ	0xFF3
  7367                           intcon	equ	0xFF2
  7368                           postinc0	equ	0xFEE
  7369                           wreg	equ	0xFE8
  7370                           indf2	equ	0xFDF
  7371                           postinc2	equ	0xFDE
  7372                           postdec2	equ	0xFDD
  7373                           fsr2h	equ	0xFDA
  7374                           fsr2l	equ	0xFD9
  7375                           status	equ	0xFD8
  7376                           
  7377 ;; *************** function ___awmod *****************
  7378 ;; Defined at:
  7379 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  dividend        2    0[BANK0 ] int 
  7382 ;;  divisor         2    2[BANK0 ] int 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  sign            1    5[BANK0 ] unsigned char 
  7385 ;;  counter         1    4[BANK0 ] unsigned char 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  2    0[BANK0 ] int 
  7388 ;; Registers used:
  7389 ;;		wreg, status,2, status,0
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7395 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;Total ram usage:        6 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:    7
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_fround
  7406 ;;		_scale
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text8
  7411  00A4C8                     __ptext8:
  7412                           	opt stack 0
  7413  00A4C8                     ___awmod:
  7414                           	opt stack 21
  7415                           
  7416                           ;incstack = 0
  7417  00A4C8  0E00               	movlw	0
  7418  00A4CA  0100               	movlb	0	; () banked
  7419  00A4CC  6F65               	movwf	___awmod@sign& (0+255),b
  7420                           
  7421                           ; BSR set to: 0
  7422  00A4CE  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7423  00A4D0  D006               	goto	l3741
  7424                           
  7425                           ; BSR set to: 0
  7426  00A4D2  6D60               	negf	___awmod@dividend& (0+255),b
  7427  00A4D4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7428  00A4D6  B0D8               	btfsc	status,0,c
  7429  00A4D8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7430                           
  7431                           ; BSR set to: 0
  7432  00A4DA  0E01               	movlw	1
  7433  00A4DC  6F65               	movwf	___awmod@sign& (0+255),b
  7434  00A4DE                     l3741:
  7435                           
  7436                           ; BSR set to: 0
  7437                           
  7438                           ; BSR set to: 0
  7439  00A4DE  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7440  00A4E0  D004               	goto	l3742
  7441                           
  7442                           ; BSR set to: 0
  7443  00A4E2  6D62               	negf	___awmod@divisor& (0+255),b
  7444  00A4E4  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7445  00A4E6  B0D8               	btfsc	status,0,c
  7446  00A4E8  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7447  00A4EA                     l3742:
  7448                           
  7449                           ; BSR set to: 0
  7450                           
  7451                           ; BSR set to: 0
  7452  00A4EA  5162               	movf	___awmod@divisor& (0+255),w,b
  7453  00A4EC  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7454  00A4EE  B4D8               	btfsc	status,2,c
  7455  00A4F0  D018               	goto	l3749
  7456                           
  7457                           ; BSR set to: 0
  7458  00A4F2  0E01               	movlw	1
  7459  00A4F4  6F64               	movwf	___awmod@counter& (0+255),b
  7460  00A4F6  D004               	goto	l3744
  7461  00A4F8                     
  7462                           ; BSR set to: 0
  7463                           
  7464                           ; BSR set to: 0
  7465  00A4F8  90D8               	bcf	status,0,c
  7466  00A4FA  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7467  00A4FC  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7468  00A4FE  2B64               	incf	___awmod@counter& (0+255),f,b
  7469  00A500                     l3744:
  7470                           
  7471                           ; BSR set to: 0
  7472                           
  7473                           ; BSR set to: 0
  7474  00A500  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7475  00A502  D7FA               	goto	l3745
  7476  00A504                     u16460:
  7477                           
  7478                           ; BSR set to: 0
  7479                           
  7480                           ; BSR set to: 0
  7481                           
  7482                           ; BSR set to: 0
  7483  00A504  5162               	movf	___awmod@divisor& (0+255),w,b
  7484  00A506  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7485  00A508  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7486  00A50A  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7487  00A50C  A0D8               	btfss	status,0,c
  7488  00A50E  D004               	goto	l3748
  7489                           
  7490                           ; BSR set to: 0
  7491  00A510  5162               	movf	___awmod@divisor& (0+255),w,b
  7492  00A512  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7493  00A514  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7494  00A516  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7495  00A518                     l3748:
  7496                           
  7497                           ; BSR set to: 0
  7498                           
  7499                           ; BSR set to: 0
  7500  00A518  90D8               	bcf	status,0,c
  7501  00A51A  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7502  00A51C  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7503                           
  7504                           ; BSR set to: 0
  7505  00A51E  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7506  00A520  D7F1               	goto	u16460
  7507  00A522                     l3749:
  7508                           
  7509                           ; BSR set to: 0
  7510                           
  7511                           ; BSR set to: 0
  7512                           
  7513                           ; BSR set to: 0
  7514  00A522  5165               	movf	___awmod@sign& (0+255),w,b
  7515  00A524  B4D8               	btfsc	status,2,c
  7516  00A526  D004               	goto	l3750
  7517                           
  7518                           ; BSR set to: 0
  7519  00A528  6D60               	negf	___awmod@dividend& (0+255),b
  7520  00A52A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7521  00A52C  B0D8               	btfsc	status,0,c
  7522  00A52E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7523  00A530                     l3750:
  7524                           
  7525                           ; BSR set to: 0
  7526                           
  7527                           ; BSR set to: 0
  7528  00A530  C060  F060         	movff	___awmod@dividend,?___awmod
  7529  00A534  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  7530  00A538  0012               	return	
  7531  00A53A                     __end_of___awmod:
  7532                           	opt stack 0
  7533                           tblptru	equ	0xFF8
  7534                           tblptrh	equ	0xFF7
  7535                           tblptrl	equ	0xFF6
  7536                           tablat	equ	0xFF5
  7537                           prodh	equ	0xFF4
  7538                           prodl	equ	0xFF3
  7539                           intcon	equ	0xFF2
  7540                           postinc0	equ	0xFEE
  7541                           wreg	equ	0xFE8
  7542                           indf2	equ	0xFDF
  7543                           postinc2	equ	0xFDE
  7544                           postdec2	equ	0xFDD
  7545                           fsr2h	equ	0xFDA
  7546                           fsr2l	equ	0xFD9
  7547                           status	equ	0xFD8
  7548                           
  7549 ;; *************** function __tdiv_to_l_ *****************
  7550 ;; Defined at:
  7551 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  f1              3    0[BANK0 ] float 
  7554 ;;  f2              3    3[BANK0 ] float 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;  quot            4    9[BANK0 ] unsigned long 
  7557 ;;  exp1            1   14[BANK0 ] unsigned char 
  7558 ;;  cntr            1   13[BANK0 ] unsigned char 
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  4    0[BANK0 ] unsigned long 
  7561 ;; Registers used:
  7562 ;;		wreg, status,2, status,0
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7568 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;Total ram usage:       15 bytes
  7573 ;; Hardware stack levels used:    1
  7574 ;; Hardware stack levels required when called:    7
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_printf
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text9
  7583  007DA6                     __ptext9:
  7584                           	opt stack 0
  7585  007DA6                     __tdiv_to_l_:
  7586                           	opt stack 22
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;incstack = 0
  7590  007DA6  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7591  007DAA  0100               	movlb	0	; () banked
  7592  007DAC  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7593  007DAE  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7594  007DB0  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7595  007DB2  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7596  007DB4  E301               	bnc	u16951
  7597  007DB6  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7598  007DB8                     u16951:
  7599  007DB8  5166               	movf	??__tdiv_to_l_& (0+255),w,b
  7600  007DBA  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7601  007DBC  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7602  007DBE  A4D8               	btfss	status,2,c
  7603  007DC0  D009               	goto	l3864
  7604                           
  7605                           ; BSR set to: 0
  7606  007DC2  0E00               	movlw	0
  7607  007DC4  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7608  007DC6  0E00               	movlw	0
  7609  007DC8  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7610  007DCA  0E00               	movlw	0
  7611  007DCC  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7612  007DCE  0E00               	movlw	0
  7613  007DD0  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7614                           
  7615                           ; BSR set to: 0
  7616  007DD2  0012               	return	
  7617  007DD4                     l3864:
  7618                           
  7619                           ; BSR set to: 0
  7620                           
  7621                           ; BSR set to: 0
  7622  007DD4  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7623  007DD8  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7624  007DDA  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7625  007DDC  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7626  007DDE  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7627  007DE0  E301               	bnc	u16971
  7628  007DE2  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7629  007DE4                     u16971:
  7630  007DE4  5166               	movf	??__tdiv_to_l_& (0+255),w,b
  7631  007DE6  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7632  007DE8  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7633  007DEA  A4D8               	btfss	status,2,c
  7634  007DEC  D009               	goto	l3866
  7635                           
  7636                           ; BSR set to: 0
  7637  007DEE  0E00               	movlw	0
  7638  007DF0  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7639  007DF2  0E00               	movlw	0
  7640  007DF4  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7641  007DF6  0E00               	movlw	0
  7642  007DF8  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7643  007DFA  0E00               	movlw	0
  7644  007DFC  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7645                           
  7646                           ; BSR set to: 0
  7647  007DFE  0012               	return	
  7648  007E00                     l3866:
  7649                           
  7650                           ; BSR set to: 0
  7651                           
  7652                           ; BSR set to: 0
  7653  007E00  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7654                           
  7655                           ; BSR set to: 0
  7656  007E02  0EFF               	movlw	255
  7657  007E04  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7658  007E06  0EFF               	movlw	255
  7659  007E08  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7660  007E0A  0E00               	movlw	0
  7661  007E0C  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7662  007E0E  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7663                           
  7664                           ; BSR set to: 0
  7665  007E10  0EFF               	movlw	255
  7666  007E12  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7667  007E14  0EFF               	movlw	255
  7668  007E16  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7669  007E18  0E00               	movlw	0
  7670  007E1A  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7671                           
  7672                           ; BSR set to: 0
  7673  007E1C  0E00               	movlw	0
  7674  007E1E  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
  7675  007E20  0E00               	movlw	0
  7676  007E22  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7677  007E24  0E00               	movlw	0
  7678  007E26  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7679  007E28  0E00               	movlw	0
  7680  007E2A  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7681                           
  7682                           ; BSR set to: 0
  7683  007E2C  0E7F               	movlw	127
  7684  007E2E  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7685                           
  7686                           ; BSR set to: 0
  7687  007E30  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7688  007E32  0F98               	addlw	152
  7689  007E34  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7690                           
  7691                           ; BSR set to: 0
  7692  007E36  0E18               	movlw	24
  7693  007E38  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7694  007E3A                     l3867:
  7695                           
  7696                           ; BSR set to: 0
  7697  007E3A  90D8               	bcf	status,0,c
  7698  007E3C  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7699  007E3E  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7700  007E40  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7701  007E42  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7702                           
  7703                           ; BSR set to: 0
  7704  007E44  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7705  007E46  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7706  007E48  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7707  007E4A  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7708  007E4C  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7709  007E4E  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7710  007E50  A0D8               	btfss	status,0,c
  7711  007E52  D007               	goto	l3868
  7712                           
  7713                           ; BSR set to: 0
  7714  007E54  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7715  007E56  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7716  007E58  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7717  007E5A  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7718  007E5C  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7719  007E5E  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7720                           
  7721                           ; BSR set to: 0
  7722  007E60  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7723  007E62                     l3868:
  7724                           
  7725                           ; BSR set to: 0
  7726  007E62  90D8               	bcf	status,0,c
  7727  007E64  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7728  007E66  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7729  007E68  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7730                           
  7731                           ; BSR set to: 0
  7732  007E6A  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7733  007E6C  D7E6               	goto	l3867
  7734                           
  7735                           ; BSR set to: 0
  7736                           
  7737                           ; BSR set to: 0
  7738  007E6E  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  7739  007E70  D016               	goto	l3870
  7740                           
  7741                           ; BSR set to: 0
  7742  007E72  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7743  007E74  0A80               	xorlw	128
  7744  007E76  0F97               	addlw	151
  7745  007E78  B0D8               	btfsc	status,0,c
  7746  007E7A  D009               	goto	l3871
  7747                           
  7748                           ; BSR set to: 0
  7749  007E7C  0E00               	movlw	0
  7750  007E7E  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7751  007E80  0E00               	movlw	0
  7752  007E82  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7753  007E84  0E00               	movlw	0
  7754  007E86  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7755  007E88  0E00               	movlw	0
  7756  007E8A  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7757                           
  7758                           ; BSR set to: 0
  7759  007E8C  0012               	return	
  7760  007E8E                     l3871:
  7761                           
  7762                           ; BSR set to: 0
  7763                           
  7764                           ; BSR set to: 0
  7765                           
  7766                           ; BSR set to: 0
  7767  007E8E  90D8               	bcf	status,0,c
  7768  007E90  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7769  007E92  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7770  007E94  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7771  007E96  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7772                           
  7773                           ; BSR set to: 0
  7774  007E98  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7775  007E9A  D7F9               	goto	l3871
  7776                           
  7777                           ; BSR set to: 0
  7778  007E9C  D015               	goto	u17030
  7779  007E9E                     l3870:
  7780                           
  7781                           ; BSR set to: 0
  7782                           
  7783                           ; BSR set to: 0
  7784  007E9E  0E17               	movlw	23
  7785  007EA0  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7786  007EA2  D00F               	goto	l3876
  7787                           
  7788                           ; BSR set to: 0
  7789  007EA4  0E00               	movlw	0
  7790  007EA6  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7791  007EA8  0E00               	movlw	0
  7792  007EAA  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7793  007EAC  0E00               	movlw	0
  7794  007EAE  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7795  007EB0  0E00               	movlw	0
  7796  007EB2  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7797                           
  7798                           ; BSR set to: 0
  7799  007EB4  0012               	return	
  7800  007EB6                     
  7801                           ; BSR set to: 0
  7802                           
  7803                           ; BSR set to: 0
  7804  007EB6  90D8               	bcf	status,0,c
  7805  007EB8  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7806  007EBA  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7807  007EBC  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7808  007EBE  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7809  007EC0  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7810  007EC2                     l3876:
  7811                           
  7812                           ; BSR set to: 0
  7813                           
  7814                           ; BSR set to: 0
  7815  007EC2  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7816  007EC4  A4D8               	btfss	status,2,c
  7817  007EC6  D7F7               	goto	l3877
  7818  007EC8                     u17030:
  7819                           
  7820                           ; BSR set to: 0
  7821                           
  7822                           ; BSR set to: 0
  7823  007EC8  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7824  007ECC  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7825  007ED0  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7826  007ED4  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7827                           
  7828                           ; BSR set to: 0
  7829  007ED8  0012               	return		;funcret
  7830  007EDA                     __end_of__tdiv_to_l_:
  7831                           	opt stack 0
  7832                           tblptru	equ	0xFF8
  7833                           tblptrh	equ	0xFF7
  7834                           tblptrl	equ	0xFF6
  7835                           tablat	equ	0xFF5
  7836                           prodh	equ	0xFF4
  7837                           prodl	equ	0xFF3
  7838                           intcon	equ	0xFF2
  7839                           postinc0	equ	0xFEE
  7840                           wreg	equ	0xFE8
  7841                           indf2	equ	0xFDF
  7842                           postinc2	equ	0xFDE
  7843                           postdec2	equ	0xFDD
  7844                           fsr2h	equ	0xFDA
  7845                           fsr2l	equ	0xFD9
  7846                           status	equ	0xFD8
  7847                           
  7848 ;; *************** function __div_to_l_ *****************
  7849 ;; Defined at:
  7850 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;  f1              3    0[BANK0 ] unsigned long 
  7853 ;;  f2              3    3[BANK0 ] unsigned long 
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;  quot            4    6[BANK0 ] unsigned long 
  7856 ;;  exp1            1   11[BANK0 ] unsigned char 
  7857 ;;  cntr            1   10[BANK0 ] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  4    0[BANK0 ] unsigned long 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7867 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7868 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7870 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7871 ;;Total ram usage:       12 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    7
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_printf
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text10
  7882  008008                     __ptext10:
  7883                           	opt stack 0
  7884  008008                     __div_to_l_:
  7885                           	opt stack 22
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;incstack = 0
  7889  008008  0100               	movlb	0	; () banked
  7890  00800A  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  7891  00800C  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  7892  00800E  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
  7893  008010  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  7894  008012  A4D8               	btfss	status,2,c
  7895  008014  D009               	goto	l3760
  7896                           
  7897                           ; BSR set to: 0
  7898  008016  0E00               	movlw	0
  7899  008018  6F60               	movwf	?__div_to_l_& (0+255),b
  7900  00801A  0E00               	movlw	0
  7901  00801C  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7902  00801E  0E00               	movlw	0
  7903  008020  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7904  008022  0E00               	movlw	0
  7905  008024  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7906                           
  7907                           ; BSR set to: 0
  7908  008026  0012               	return	
  7909  008028                     l3760:
  7910                           
  7911                           ; BSR set to: 0
  7912                           
  7913                           ; BSR set to: 0
  7914  008028  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7915  00802A  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7916  00802C  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
  7917  00802E  516A               	movf	__div_to_l_@cntr& (0+255),w,b
  7918  008030  A4D8               	btfss	status,2,c
  7919  008032  D009               	goto	l3762
  7920                           
  7921                           ; BSR set to: 0
  7922  008034  0E00               	movlw	0
  7923  008036  6F60               	movwf	?__div_to_l_& (0+255),b
  7924  008038  0E00               	movlw	0
  7925  00803A  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7926  00803C  0E00               	movlw	0
  7927  00803E  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7928  008040  0E00               	movlw	0
  7929  008042  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7930                           
  7931                           ; BSR set to: 0
  7932  008044  0012               	return	
  7933  008046                     l3762:
  7934                           
  7935                           ; BSR set to: 0
  7936                           
  7937                           ; BSR set to: 0
  7938  008046  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7939                           
  7940                           ; BSR set to: 0
  7941  008048  0EFF               	movlw	255
  7942  00804A  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  7943  00804C  0EFF               	movlw	255
  7944  00804E  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7945  008050  0EFF               	movlw	255
  7946  008052  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7947  008054  0E00               	movlw	0
  7948  008056  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7949                           
  7950                           ; BSR set to: 0
  7951  008058  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7952  00805A  0EFF               	movlw	255
  7953  00805C  1763               	andwf	__div_to_l_@f2& (0+255),f,b
  7954  00805E  0EFF               	movlw	255
  7955  008060  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7956  008062  0EFF               	movlw	255
  7957  008064  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7958  008066  0E00               	movlw	0
  7959  008068  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7960                           
  7961                           ; BSR set to: 0
  7962  00806A  0E00               	movlw	0
  7963  00806C  6F66               	movwf	__div_to_l_@quot& (0+255),b
  7964  00806E  0E00               	movlw	0
  7965  008070  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7966  008072  0E00               	movlw	0
  7967  008074  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7968  008076  0E00               	movlw	0
  7969  008078  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7970                           
  7971                           ; BSR set to: 0
  7972  00807A  0E7F               	movlw	127
  7973  00807C  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
  7974                           
  7975                           ; BSR set to: 0
  7976  00807E  516A               	movf	__div_to_l_@cntr& (0+255),w,b
  7977  008080  0FA0               	addlw	160
  7978  008082  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
  7979                           
  7980                           ; BSR set to: 0
  7981  008084  0E20               	movlw	32
  7982  008086  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
  7983  008088                     
  7984                           ; BSR set to: 0
  7985                           
  7986                           ; BSR set to: 0
  7987  008088  90D8               	bcf	status,0,c
  7988  00808A  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
  7989  00808C  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7990  00808E  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7991  008090  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7992                           
  7993                           ; BSR set to: 0
  7994  008092  5163               	movf	__div_to_l_@f2& (0+255),w,b
  7995  008094  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  7996  008096  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7997  008098  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7998  00809A  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7999  00809C  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  8000  00809E  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  8001  0080A0  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  8002  0080A2  A0D8               	btfss	status,0,c
  8003  0080A4  D009               	goto	l3764
  8004                           
  8005                           ; BSR set to: 0
  8006  0080A6  5163               	movf	__div_to_l_@f2& (0+255),w,b
  8007  0080A8  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  8008  0080AA  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  8009  0080AC  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  8010  0080AE  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  8011  0080B0  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  8012  0080B2  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  8013  0080B4  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  8014                           
  8015                           ; BSR set to: 0
  8016  0080B6  8166               	bsf	__div_to_l_@quot& (0+255),0,b
  8017  0080B8                     l3764:
  8018                           
  8019                           ; BSR set to: 0
  8020                           
  8021                           ; BSR set to: 0
  8022  0080B8  90D8               	bcf	status,0,c
  8023  0080BA  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  8024  0080BC  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  8025  0080BE  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  8026  0080C0  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  8027                           
  8028                           ; BSR set to: 0
  8029  0080C2  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  8030  0080C4  D7E1               	goto	l3763
  8031                           
  8032                           ; BSR set to: 0
  8033                           
  8034                           ; BSR set to: 0
  8035  0080C6  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
  8036  0080C8  D016               	goto	l3766
  8037                           
  8038                           ; BSR set to: 0
  8039  0080CA  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  8040  0080CC  0A80               	xorlw	128
  8041  0080CE  0F9F               	addlw	159
  8042  0080D0  B0D8               	btfsc	status,0,c
  8043  0080D2  D009               	goto	l3767
  8044                           
  8045                           ; BSR set to: 0
  8046  0080D4  0E00               	movlw	0
  8047  0080D6  6F60               	movwf	?__div_to_l_& (0+255),b
  8048  0080D8  0E00               	movlw	0
  8049  0080DA  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  8050  0080DC  0E00               	movlw	0
  8051  0080DE  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  8052  0080E0  0E00               	movlw	0
  8053  0080E2  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  8054                           
  8055                           ; BSR set to: 0
  8056  0080E4  0012               	return	
  8057  0080E6                     l3767:
  8058                           
  8059                           ; BSR set to: 0
  8060                           
  8061                           ; BSR set to: 0
  8062                           
  8063                           ; BSR set to: 0
  8064  0080E6  90D8               	bcf	status,0,c
  8065  0080E8  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  8066  0080EA  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  8067  0080EC  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  8068  0080EE  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
  8069                           
  8070                           ; BSR set to: 0
  8071  0080F0  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  8072  0080F2  D7F9               	goto	l3767
  8073                           
  8074                           ; BSR set to: 0
  8075  0080F4  D015               	goto	u17100
  8076  0080F6                     l3766:
  8077                           
  8078                           ; BSR set to: 0
  8079                           
  8080                           ; BSR set to: 0
  8081  0080F6  0E1F               	movlw	31
  8082  0080F8  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  8083  0080FA  D00F               	goto	l3772
  8084                           
  8085                           ; BSR set to: 0
  8086  0080FC  0E00               	movlw	0
  8087  0080FE  6F60               	movwf	?__div_to_l_& (0+255),b
  8088  008100  0E00               	movlw	0
  8089  008102  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  8090  008104  0E00               	movlw	0
  8091  008106  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  8092  008108  0E00               	movlw	0
  8093  00810A  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  8094                           
  8095                           ; BSR set to: 0
  8096  00810C  0012               	return	
  8097  00810E                     
  8098                           ; BSR set to: 0
  8099                           
  8100                           ; BSR set to: 0
  8101  00810E  90D8               	bcf	status,0,c
  8102  008110  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
  8103  008112  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  8104  008114  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  8105  008116  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  8106  008118  076B               	decf	__div_to_l_@exp1& (0+255),f,b
  8107  00811A                     l3772:
  8108                           
  8109                           ; BSR set to: 0
  8110                           
  8111                           ; BSR set to: 0
  8112  00811A  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  8113  00811C  A4D8               	btfss	status,2,c
  8114  00811E  D7F7               	goto	l3773
  8115  008120                     u17100:
  8116                           
  8117                           ; BSR set to: 0
  8118                           
  8119                           ; BSR set to: 0
  8120  008120  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
  8121  008124  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  8122  008128  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  8123  00812C  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  8124                           
  8125                           ; BSR set to: 0
  8126  008130  0012               	return		;funcret
  8127  008132                     __end_of__div_to_l_:
  8128                           	opt stack 0
  8129                           tblptru	equ	0xFF8
  8130                           tblptrh	equ	0xFF7
  8131                           tblptrl	equ	0xFF6
  8132                           tablat	equ	0xFF5
  8133                           prodh	equ	0xFF4
  8134                           prodl	equ	0xFF3
  8135                           intcon	equ	0xFF2
  8136                           postinc0	equ	0xFEE
  8137                           wreg	equ	0xFE8
  8138                           indf2	equ	0xFDF
  8139                           postinc2	equ	0xFDE
  8140                           postdec2	equ	0xFDD
  8141                           fsr2h	equ	0xFDA
  8142                           fsr2l	equ	0xFD9
  8143                           status	equ	0xFD8
  8144                           
  8145 ;; *************** function ___fttol *****************
  8146 ;; Defined at:
  8147 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  f1              3   35[BANK0 ] float 
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;  lval            4   45[BANK0 ] unsigned long 
  8152 ;;  exp1            1   49[BANK0 ] unsigned char 
  8153 ;;  sign1           1   44[BANK0 ] unsigned char 
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  4   35[BANK0 ] long 
  8156 ;; Registers used:
  8157 ;;		wreg, status,2, status,0
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8164 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8165 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8166 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8167 ;;Total ram usage:       15 bytes
  8168 ;; Hardware stack levels used:    1
  8169 ;; Hardware stack levels required when called:    7
  8170 ;; This function calls:
  8171 ;;		Nothing
  8172 ;; This function is called by:
  8173 ;;		_main
  8174 ;;		_printf
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text11
  8179  0089B4                     __ptext11:
  8180                           	opt stack 0
  8181  0089B4                     ___fttol:
  8182                           	opt stack 22
  8183                           
  8184                           ; BSR set to: 0
  8185                           ;incstack = 0
  8186  0089B4  C085  F087         	movff	___fttol@f1+2,??___fttol
  8187  0089B8  0100               	movlb	0	; () banked
  8188  0089BA  6B88               	clrf	(??___fttol+1)& (0+255),b
  8189  0089BC  6B89               	clrf	(??___fttol+2)& (0+255),b
  8190  0089BE  3584               	rlcf	(___fttol@f1+1)& (0+255),w,b
  8191  0089C0  3787               	rlcf	??___fttol& (0+255),f,b
  8192  0089C2  E301               	bnc	u17161
  8193  0089C4  8188               	bsf	(??___fttol+1)& (0+255),0,b
  8194  0089C6                     u17161:
  8195  0089C6  5187               	movf	??___fttol& (0+255),w,b
  8196  0089C8  6F91               	movwf	___fttol@exp1& (0+255),b
  8197  0089CA  5191               	movf	___fttol@exp1& (0+255),w,b
  8198  0089CC  A4D8               	btfss	status,2,c
  8199  0089CE  D009               	goto	l3909
  8200                           
  8201                           ; BSR set to: 0
  8202  0089D0  0E00               	movlw	0
  8203  0089D2  6F83               	movwf	?___fttol& (0+255),b
  8204  0089D4  0E00               	movlw	0
  8205  0089D6  6F84               	movwf	(?___fttol+1)& (0+255),b
  8206  0089D8  0E00               	movlw	0
  8207  0089DA  6F85               	movwf	(?___fttol+2)& (0+255),b
  8208  0089DC  0E00               	movlw	0
  8209  0089DE  6F86               	movwf	(?___fttol+3)& (0+255),b
  8210                           
  8211                           ; BSR set to: 0
  8212  0089E0  0012               	return	
  8213  0089E2                     l3909:
  8214                           
  8215                           ; BSR set to: 0
  8216                           
  8217                           ; BSR set to: 0
  8218  0089E2  0E17               	movlw	23
  8219  0089E4  6F87               	movwf	??___fttol& (0+255),b
  8220  0089E6  C083  F088         	movff	___fttol@f1,??___fttol+1
  8221  0089EA  C084  F089         	movff	___fttol@f1+1,??___fttol+2
  8222  0089EE  C085  F08A         	movff	___fttol@f1+2,??___fttol+3
  8223  0089F2  2987               	incf	??___fttol& (0+255),w,b
  8224  0089F4  6F8B               	movwf	(??___fttol+4)& (0+255),b
  8225  0089F6  D004               	goto	u17180
  8226  0089F8                     u17185:
  8227  0089F8  90D8               	bcf	status,0,c
  8228  0089FA  338A               	rrcf	(??___fttol+3)& (0+255),f,b
  8229  0089FC  3389               	rrcf	(??___fttol+2)& (0+255),f,b
  8230  0089FE  3388               	rrcf	(??___fttol+1)& (0+255),f,b
  8231  008A00                     u17180:
  8232  008A00  2F8B               	decfsz	(??___fttol+4)& (0+255),f,b
  8233  008A02  D7FA               	goto	u17185
  8234  008A04  0100               	movlb	0	; () banked
  8235  008A06  5188               	movf	(??___fttol+1)& (0+255),w,b
  8236  008A08  6F8C               	movwf	___fttol@sign1& (0+255),b
  8237                           
  8238                           ; BSR set to: 0
  8239  008A0A  8F84               	bsf	(___fttol@f1+1)& (0+255),7,b
  8240                           
  8241                           ; BSR set to: 0
  8242  008A0C  0EFF               	movlw	255
  8243  008A0E  1783               	andwf	___fttol@f1& (0+255),f,b
  8244  008A10  0EFF               	movlw	255
  8245  008A12  1784               	andwf	(___fttol@f1+1)& (0+255),f,b
  8246  008A14  0E00               	movlw	0
  8247  008A16  1785               	andwf	(___fttol@f1+2)& (0+255),f,b
  8248                           
  8249                           ; BSR set to: 0
  8250  008A18  5183               	movf	___fttol@f1& (0+255),w,b
  8251  008A1A  6F8D               	movwf	___fttol@lval& (0+255),b
  8252  008A1C  5184               	movf	(___fttol@f1+1)& (0+255),w,b
  8253  008A1E  6F8E               	movwf	(___fttol@lval+1)& (0+255),b
  8254  008A20  5185               	movf	(___fttol@f1+2)& (0+255),w,b
  8255  008A22  6F8F               	movwf	(___fttol@lval+2)& (0+255),b
  8256  008A24  6B90               	clrf	(___fttol@lval+3)& (0+255),b
  8257                           
  8258                           ; BSR set to: 0
  8259  008A26  0E8E               	movlw	142
  8260  008A28  5F91               	subwf	___fttol@exp1& (0+255),f,b
  8261                           
  8262                           ; BSR set to: 0
  8263  008A2A  AF91               	btfss	___fttol@exp1& (0+255),7,b
  8264  008A2C  D016               	goto	l3911
  8265                           
  8266                           ; BSR set to: 0
  8267  008A2E  5191               	movf	___fttol@exp1& (0+255),w,b
  8268  008A30  0A80               	xorlw	128
  8269  008A32  0F8F               	addlw	143
  8270  008A34  B0D8               	btfsc	status,0,c
  8271  008A36  D009               	goto	l3912
  8272                           
  8273                           ; BSR set to: 0
  8274  008A38  0E00               	movlw	0
  8275  008A3A  6F83               	movwf	?___fttol& (0+255),b
  8276  008A3C  0E00               	movlw	0
  8277  008A3E  6F84               	movwf	(?___fttol+1)& (0+255),b
  8278  008A40  0E00               	movlw	0
  8279  008A42  6F85               	movwf	(?___fttol+2)& (0+255),b
  8280  008A44  0E00               	movlw	0
  8281  008A46  6F86               	movwf	(?___fttol+3)& (0+255),b
  8282                           
  8283                           ; BSR set to: 0
  8284  008A48  0012               	return	
  8285  008A4A                     l3912:
  8286                           
  8287                           ; BSR set to: 0
  8288                           
  8289                           ; BSR set to: 0
  8290                           
  8291                           ; BSR set to: 0
  8292  008A4A  90D8               	bcf	status,0,c
  8293  008A4C  3390               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8294  008A4E  338F               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8295  008A50  338E               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8296  008A52  338D               	rrcf	___fttol@lval& (0+255),f,b
  8297                           
  8298                           ; BSR set to: 0
  8299  008A54  3F91               	incfsz	___fttol@exp1& (0+255),f,b
  8300  008A56  D7F9               	goto	l3912
  8301                           
  8302                           ; BSR set to: 0
  8303  008A58  D015               	goto	u17220
  8304  008A5A                     l3911:
  8305                           
  8306                           ; BSR set to: 0
  8307                           
  8308                           ; BSR set to: 0
  8309  008A5A  0E17               	movlw	23
  8310  008A5C  6591               	cpfsgt	___fttol@exp1& (0+255),b
  8311  008A5E  D00F               	goto	l3917
  8312                           
  8313                           ; BSR set to: 0
  8314  008A60  0E00               	movlw	0
  8315  008A62  6F83               	movwf	?___fttol& (0+255),b
  8316  008A64  0E00               	movlw	0
  8317  008A66  6F84               	movwf	(?___fttol+1)& (0+255),b
  8318  008A68  0E00               	movlw	0
  8319  008A6A  6F85               	movwf	(?___fttol+2)& (0+255),b
  8320  008A6C  0E00               	movlw	0
  8321  008A6E  6F86               	movwf	(?___fttol+3)& (0+255),b
  8322                           
  8323                           ; BSR set to: 0
  8324  008A70  0012               	return	
  8325  008A72                     
  8326                           ; BSR set to: 0
  8327                           
  8328                           ; BSR set to: 0
  8329  008A72  90D8               	bcf	status,0,c
  8330  008A74  378D               	rlcf	___fttol@lval& (0+255),f,b
  8331  008A76  378E               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8332  008A78  378F               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8333  008A7A  3790               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8334  008A7C  0791               	decf	___fttol@exp1& (0+255),f,b
  8335  008A7E                     l3917:
  8336                           
  8337                           ; BSR set to: 0
  8338                           
  8339                           ; BSR set to: 0
  8340  008A7E  5191               	movf	___fttol@exp1& (0+255),w,b
  8341  008A80  A4D8               	btfss	status,2,c
  8342  008A82  D7F7               	goto	l3918
  8343  008A84                     u17220:
  8344                           
  8345                           ; BSR set to: 0
  8346                           
  8347                           ; BSR set to: 0
  8348                           
  8349                           ; BSR set to: 0
  8350  008A84  518C               	movf	___fttol@sign1& (0+255),w,b
  8351  008A86  B4D8               	btfsc	status,2,c
  8352  008A88  D008               	goto	l3920
  8353                           
  8354                           ; BSR set to: 0
  8355  008A8A  1F90               	comf	(___fttol@lval+3)& (0+255),f,b
  8356  008A8C  1F8F               	comf	(___fttol@lval+2)& (0+255),f,b
  8357  008A8E  1F8E               	comf	(___fttol@lval+1)& (0+255),f,b
  8358  008A90  6D8D               	negf	___fttol@lval& (0+255),b
  8359  008A92  0E00               	movlw	0
  8360  008A94  238E               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8361  008A96  238F               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8362  008A98  2390               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8363  008A9A                     l3920:
  8364                           
  8365                           ; BSR set to: 0
  8366                           
  8367                           ; BSR set to: 0
  8368  008A9A  C08D  F083         	movff	___fttol@lval,?___fttol
  8369  008A9E  C08E  F084         	movff	___fttol@lval+1,?___fttol+1
  8370  008AA2  C08F  F085         	movff	___fttol@lval+2,?___fttol+2
  8371  008AA6  C090  F086         	movff	___fttol@lval+3,?___fttol+3
  8372  008AAA  0012               	return	
  8373  008AAC                     __end_of___fttol:
  8374                           	opt stack 0
  8375                           tblptru	equ	0xFF8
  8376                           tblptrh	equ	0xFF7
  8377                           tblptrl	equ	0xFF6
  8378                           tablat	equ	0xFF5
  8379                           prodh	equ	0xFF4
  8380                           prodl	equ	0xFF3
  8381                           intcon	equ	0xFF2
  8382                           postinc0	equ	0xFEE
  8383                           wreg	equ	0xFE8
  8384                           indf2	equ	0xFDF
  8385                           postinc2	equ	0xFDE
  8386                           postdec2	equ	0xFDD
  8387                           fsr2h	equ	0xFDA
  8388                           fsr2l	equ	0xFD9
  8389                           status	equ	0xFD8
  8390                           
  8391 ;; *************** function ___ftsub *****************
  8392 ;; Defined at:
  8393 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  f1              3  132[BANK0 ] float 
  8396 ;;  f2              3  135[BANK0 ] float 
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;		None
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  3  132[BANK0 ] float 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2, status,0, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8408 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8411 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8412 ;;Total ram usage:        6 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    9
  8415 ;; This function calls:
  8416 ;;		___ftadd
  8417 ;; This function is called by:
  8418 ;;		_printf
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text12
  8423  00B636                     __ptext12:
  8424                           	opt stack 0
  8425  00B636                     ___ftsub:
  8426                           	opt stack 20
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;incstack = 0
  8430  00B636  0100               	movlb	0	; () banked
  8431  00B638  51E7               	movf	___ftsub@f2& (0+255),w,b
  8432  00B63A  11E8               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  8433  00B63C  11E9               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  8434  00B63E  B4D8               	btfsc	status,2,c
  8435  00B640  D006               	goto	l3905
  8436                           
  8437                           ; BSR set to: 0
  8438  00B642  0E00               	movlw	0
  8439  00B644  1BE7               	xorwf	___ftsub@f2& (0+255),f,b
  8440  00B646  0E00               	movlw	0
  8441  00B648  1BE8               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8442  00B64A  0E80               	movlw	128
  8443  00B64C  1BE9               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8444  00B64E                     l3905:
  8445                           
  8446                           ; BSR set to: 0
  8447                           
  8448                           ; BSR set to: 0
  8449  00B64E  C0E4  F08D         	movff	___ftsub@f1,___ftadd@f1
  8450  00B652  C0E5  F08E         	movff	___ftsub@f1+1,___ftadd@f1+1
  8451  00B656  C0E6  F08F         	movff	___ftsub@f1+2,___ftadd@f1+2
  8452  00B65A  C0E7  F090         	movff	___ftsub@f2,___ftadd@f2
  8453  00B65E  C0E8  F091         	movff	___ftsub@f2+1,___ftadd@f2+1
  8454  00B662  C0E9  F092         	movff	___ftsub@f2+2,___ftadd@f2+2
  8455  00B666  ECD5  F034         	call	___ftadd	;wreg free
  8456  00B66A  C08D  F0E4         	movff	?___ftadd,?___ftsub
  8457  00B66E  C08E  F0E5         	movff	?___ftadd+1,?___ftsub+1
  8458  00B672  C08F  F0E6         	movff	?___ftadd+2,?___ftsub+2
  8459  00B676  0012               	return	
  8460  00B678                     __end_of___ftsub:
  8461                           	opt stack 0
  8462                           tblptru	equ	0xFF8
  8463                           tblptrh	equ	0xFF7
  8464                           tblptrl	equ	0xFF6
  8465                           tablat	equ	0xFF5
  8466                           prodh	equ	0xFF4
  8467                           prodl	equ	0xFF3
  8468                           intcon	equ	0xFF2
  8469                           postinc0	equ	0xFEE
  8470                           wreg	equ	0xFE8
  8471                           indf2	equ	0xFDF
  8472                           postinc2	equ	0xFDE
  8473                           postdec2	equ	0xFDD
  8474                           fsr2h	equ	0xFDA
  8475                           fsr2l	equ	0xFD9
  8476                           status	equ	0xFD8
  8477                           
  8478 ;; *************** function ___ftadd *****************
  8479 ;; Defined at:
  8480 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  f1              3   45[BANK0 ] float 
  8483 ;;  f2              3   48[BANK0 ] float 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  exp1            1   56[BANK0 ] unsigned char 
  8486 ;;  exp2            1   55[BANK0 ] unsigned char 
  8487 ;;  sign            1   54[BANK0 ] unsigned char 
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  3   45[BANK0 ] float 
  8490 ;; Registers used:
  8491 ;;		wreg, status,2, status,0, cstack
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8497 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8498 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8499 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8500 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8501 ;;Total ram usage:       12 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:    8
  8504 ;; This function calls:
  8505 ;;		___ftpack
  8506 ;; This function is called by:
  8507 ;;		_printf
  8508 ;;		___ftsub
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text13
  8513  0069AA                     __ptext13:
  8514                           	opt stack 0
  8515  0069AA                     ___ftadd:
  8516                           	opt stack 20
  8517                           
  8518                           ;incstack = 0
  8519  0069AA  C08F  F093         	movff	___ftadd@f1+2,??___ftadd
  8520  0069AE  0100               	movlb	0	; () banked
  8521  0069B0  6B94               	clrf	(??___ftadd+1)& (0+255),b
  8522  0069B2  6B95               	clrf	(??___ftadd+2)& (0+255),b
  8523  0069B4  358E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8524  0069B6  3793               	rlcf	??___ftadd& (0+255),f,b
  8525  0069B8  E301               	bnc	u16111
  8526  0069BA  8194               	bsf	(??___ftadd+1)& (0+255),0,b
  8527  0069BC                     u16111:
  8528  0069BC  5193               	movf	??___ftadd& (0+255),w,b
  8529  0069BE  6F98               	movwf	___ftadd@exp1& (0+255),b
  8530  0069C0  C092  F093         	movff	___ftadd@f2+2,??___ftadd
  8531  0069C4  6B94               	clrf	(??___ftadd+1)& (0+255),b
  8532  0069C6  6B95               	clrf	(??___ftadd+2)& (0+255),b
  8533  0069C8  3591               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8534  0069CA  3793               	rlcf	??___ftadd& (0+255),f,b
  8535  0069CC  E301               	bnc	u16121
  8536  0069CE  8194               	bsf	(??___ftadd+1)& (0+255),0,b
  8537  0069D0                     u16121:
  8538  0069D0  5193               	movf	??___ftadd& (0+255),w,b
  8539  0069D2  6F97               	movwf	___ftadd@exp2& (0+255),b
  8540                           
  8541                           ; BSR set to: 0
  8542  0069D4  5198               	movf	___ftadd@exp1& (0+255),w,b
  8543  0069D6  B4D8               	btfsc	status,2,c
  8544  0069D8  D00B               	goto	u16150
  8545                           
  8546                           ; BSR set to: 0
  8547  0069DA  5197               	movf	___ftadd@exp2& (0+255),w,b
  8548  0069DC  5D98               	subwf	___ftadd@exp1& (0+255),w,b
  8549  0069DE  B0D8               	btfsc	status,0,c
  8550  0069E0  D00E               	goto	l3823
  8551                           
  8552                           ; BSR set to: 0
  8553  0069E2  5198               	movf	___ftadd@exp1& (0+255),w,b
  8554  0069E4  0800               	sublw	0
  8555  0069E6  2597               	addwf	___ftadd@exp2& (0+255),w,b
  8556  0069E8  6F93               	movwf	??___ftadd& (0+255),b
  8557  0069EA  0E18               	movlw	24
  8558  0069EC  6593               	cpfsgt	??___ftadd& (0+255),b
  8559  0069EE  D007               	goto	l3823
  8560  0069F0                     u16150:
  8561                           
  8562                           ; BSR set to: 0
  8563  0069F0  C090  F08D         	movff	___ftadd@f2,?___ftadd
  8564  0069F4  C091  F08E         	movff	___ftadd@f2+1,?___ftadd+1
  8565  0069F8  C092  F08F         	movff	___ftadd@f2+2,?___ftadd+2
  8566  0069FC  0012               	return	
  8567  0069FE                     l3823:
  8568                           
  8569                           ; BSR set to: 0
  8570                           
  8571                           ; BSR set to: 0
  8572  0069FE  5197               	movf	___ftadd@exp2& (0+255),w,b
  8573  006A00  B4D8               	btfsc	status,2,c
  8574  006A02  D00B               	goto	u16180
  8575                           
  8576                           ; BSR set to: 0
  8577  006A04  5198               	movf	___ftadd@exp1& (0+255),w,b
  8578  006A06  5D97               	subwf	___ftadd@exp2& (0+255),w,b
  8579  006A08  B0D8               	btfsc	status,0,c
  8580  006A0A  D00E               	goto	l3827
  8581                           
  8582                           ; BSR set to: 0
  8583  006A0C  5197               	movf	___ftadd@exp2& (0+255),w,b
  8584  006A0E  0800               	sublw	0
  8585  006A10  2598               	addwf	___ftadd@exp1& (0+255),w,b
  8586  006A12  6F93               	movwf	??___ftadd& (0+255),b
  8587  006A14  0E18               	movlw	24
  8588  006A16  6593               	cpfsgt	??___ftadd& (0+255),b
  8589  006A18  D007               	goto	l3827
  8590  006A1A                     u16180:
  8591                           
  8592                           ; BSR set to: 0
  8593  006A1A  C08D  F08D         	movff	___ftadd@f1,?___ftadd
  8594  006A1E  C08E  F08E         	movff	___ftadd@f1+1,?___ftadd+1
  8595  006A22  C08F  F08F         	movff	___ftadd@f1+2,?___ftadd+2
  8596  006A26  0012               	return	
  8597  006A28                     l3827:
  8598                           
  8599                           ; BSR set to: 0
  8600                           
  8601                           ; BSR set to: 0
  8602  006A28  0E06               	movlw	6
  8603  006A2A  6F96               	movwf	___ftadd@sign& (0+255),b
  8604                           
  8605                           ; BSR set to: 0
  8606  006A2C  BF8F               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  8607                           
  8608                           ; BSR set to: 0
  8609  006A2E  8F96               	bsf	___ftadd@sign& (0+255),7,b
  8610                           
  8611                           ; BSR set to: 0
  8612                           
  8613                           ; BSR set to: 0
  8614  006A30  BF92               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  8615                           
  8616                           ; BSR set to: 0
  8617  006A32  8D96               	bsf	___ftadd@sign& (0+255),6,b
  8618                           
  8619                           ; BSR set to: 0
  8620  006A34  8F8E               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8621                           
  8622                           ; BSR set to: 0
  8623  006A36  0EFF               	movlw	255
  8624  006A38  178D               	andwf	___ftadd@f1& (0+255),f,b
  8625  006A3A  0EFF               	movlw	255
  8626  006A3C  178E               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8627  006A3E  0E00               	movlw	0
  8628  006A40  178F               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8629  006A42  8F91               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8630                           
  8631                           ; BSR set to: 0
  8632  006A44  0EFF               	movlw	255
  8633  006A46  1790               	andwf	___ftadd@f2& (0+255),f,b
  8634  006A48  0EFF               	movlw	255
  8635  006A4A  1791               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8636  006A4C  0E00               	movlw	0
  8637  006A4E  1792               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8638                           
  8639                           ; BSR set to: 0
  8640  006A50  5197               	movf	___ftadd@exp2& (0+255),w,b
  8641  006A52  5D98               	subwf	___ftadd@exp1& (0+255),w,b
  8642  006A54  B0D8               	btfsc	status,0,c
  8643  006A56  D01B               	goto	l3832
  8644  006A58                     u16210:
  8645                           
  8646                           ; BSR set to: 0
  8647                           
  8648                           ; BSR set to: 0
  8649  006A58  90D8               	bcf	status,0,c
  8650  006A5A  3790               	rlcf	___ftadd@f2& (0+255),f,b
  8651  006A5C  3791               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8652  006A5E  3792               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8653  006A60  0797               	decf	___ftadd@exp2& (0+255),f,b
  8654                           
  8655                           ; BSR set to: 0
  8656  006A62  5198               	movf	___ftadd@exp1& (0+255),w,b
  8657  006A64  1997               	xorwf	___ftadd@exp2& (0+255),w,b
  8658  006A66  B4D8               	btfsc	status,2,c
  8659  006A68  D00D               	goto	l3837
  8660                           
  8661                           ; BSR set to: 0
  8662  006A6A  0796               	decf	___ftadd@sign& (0+255),f,b
  8663  006A6C  C096  F093         	movff	___ftadd@sign,??___ftadd
  8664  006A70  0E07               	movlw	7
  8665  006A72  1793               	andwf	??___ftadd& (0+255),f,b
  8666  006A74  B4D8               	btfsc	status,2,c
  8667  006A76  D006               	goto	l3837
  8668  006A78  D7EF               	goto	u16210
  8669  006A7A                     
  8670                           ; BSR set to: 0
  8671                           
  8672                           ; BSR set to: 0
  8673  006A7A  90D8               	bcf	status,0,c
  8674  006A7C  338F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8675  006A7E  338E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8676  006A80  338D               	rrcf	___ftadd@f1& (0+255),f,b
  8677  006A82  2B98               	incf	___ftadd@exp1& (0+255),f,b
  8678  006A84                     l3837:
  8679                           
  8680                           ; BSR set to: 0
  8681                           
  8682                           ; BSR set to: 0
  8683  006A84  5197               	movf	___ftadd@exp2& (0+255),w,b
  8684  006A86  1998               	xorwf	___ftadd@exp1& (0+255),w,b
  8685  006A88  B4D8               	btfsc	status,2,c
  8686  006A8A  D01F               	goto	u16280
  8687  006A8C  D7F6               	goto	l3838
  8688  006A8E                     l3832:
  8689                           
  8690                           ; BSR set to: 0
  8691                           
  8692                           ; BSR set to: 0
  8693  006A8E  5198               	movf	___ftadd@exp1& (0+255),w,b
  8694  006A90  5D97               	subwf	___ftadd@exp2& (0+255),w,b
  8695  006A92  B0D8               	btfsc	status,0,c
  8696  006A94  D01A               	goto	u16280
  8697  006A96                     u16250:
  8698                           
  8699                           ; BSR set to: 0
  8700                           
  8701                           ; BSR set to: 0
  8702  006A96  90D8               	bcf	status,0,c
  8703  006A98  378D               	rlcf	___ftadd@f1& (0+255),f,b
  8704  006A9A  378E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8705  006A9C  378F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8706  006A9E  0798               	decf	___ftadd@exp1& (0+255),f,b
  8707                           
  8708                           ; BSR set to: 0
  8709  006AA0  5198               	movf	___ftadd@exp1& (0+255),w,b
  8710  006AA2  1997               	xorwf	___ftadd@exp2& (0+255),w,b
  8711  006AA4  B4D8               	btfsc	status,2,c
  8712  006AA6  D00D               	goto	l3846
  8713                           
  8714                           ; BSR set to: 0
  8715  006AA8  0796               	decf	___ftadd@sign& (0+255),f,b
  8716  006AAA  C096  F093         	movff	___ftadd@sign,??___ftadd
  8717  006AAE  0E07               	movlw	7
  8718  006AB0  1793               	andwf	??___ftadd& (0+255),f,b
  8719  006AB2  B4D8               	btfsc	status,2,c
  8720  006AB4  D006               	goto	l3846
  8721  006AB6  D7EF               	goto	u16250
  8722  006AB8                     
  8723                           ; BSR set to: 0
  8724                           
  8725                           ; BSR set to: 0
  8726  006AB8  90D8               	bcf	status,0,c
  8727  006ABA  3392               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8728  006ABC  3391               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8729  006ABE  3390               	rrcf	___ftadd@f2& (0+255),f,b
  8730  006AC0  2B97               	incf	___ftadd@exp2& (0+255),f,b
  8731  006AC2                     l3846:
  8732                           
  8733                           ; BSR set to: 0
  8734                           
  8735                           ; BSR set to: 0
  8736  006AC2  5197               	movf	___ftadd@exp2& (0+255),w,b
  8737  006AC4  1998               	xorwf	___ftadd@exp1& (0+255),w,b
  8738  006AC6  A4D8               	btfss	status,2,c
  8739  006AC8  D7F7               	goto	l3847
  8740  006ACA                     u16280:
  8741                           
  8742                           ; BSR set to: 0
  8743                           
  8744                           ; BSR set to: 0
  8745                           
  8746                           ; BSR set to: 0
  8747  006ACA  AF96               	btfss	___ftadd@sign& (0+255),7,b
  8748  006ACC  D00C               	goto	l3849
  8749                           
  8750                           ; BSR set to: 0
  8751  006ACE  0EFF               	movlw	255
  8752  006AD0  1B8D               	xorwf	___ftadd@f1& (0+255),f,b
  8753  006AD2  0EFF               	movlw	255
  8754  006AD4  1B8E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8755  006AD6  0EFF               	movlw	255
  8756  006AD8  1B8F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8757  006ADA  0E01               	movlw	1
  8758  006ADC  278D               	addwf	___ftadd@f1& (0+255),f,b
  8759  006ADE  0E00               	movlw	0
  8760  006AE0  238E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8761  006AE2  0E00               	movlw	0
  8762  006AE4  238F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8763  006AE6                     l3849:
  8764                           
  8765                           ; BSR set to: 0
  8766  006AE6  AD96               	btfss	___ftadd@sign& (0+255),6,b
  8767  006AE8  D00C               	goto	l3850
  8768                           
  8769                           ; BSR set to: 0
  8770  006AEA  0EFF               	movlw	255
  8771  006AEC  1B90               	xorwf	___ftadd@f2& (0+255),f,b
  8772  006AEE  0EFF               	movlw	255
  8773  006AF0  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8774  006AF2  0EFF               	movlw	255
  8775  006AF4  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8776  006AF6  0E01               	movlw	1
  8777  006AF8  2790               	addwf	___ftadd@f2& (0+255),f,b
  8778  006AFA  0E00               	movlw	0
  8779  006AFC  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8780  006AFE  0E00               	movlw	0
  8781  006B00  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8782  006B02                     l3850:
  8783                           
  8784                           ; BSR set to: 0
  8785                           
  8786                           ; BSR set to: 0
  8787  006B02  0E00               	movlw	0
  8788  006B04  6F96               	movwf	___ftadd@sign& (0+255),b
  8789                           
  8790                           ; BSR set to: 0
  8791  006B06  518D               	movf	___ftadd@f1& (0+255),w,b
  8792  006B08  2790               	addwf	___ftadd@f2& (0+255),f,b
  8793  006B0A  518E               	movf	(___ftadd@f1+1)& (0+255),w,b
  8794  006B0C  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8795  006B0E  518F               	movf	(___ftadd@f1+2)& (0+255),w,b
  8796  006B10  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8797                           
  8798                           ; BSR set to: 0
  8799  006B12  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8800  006B14  D00E               	goto	l3851
  8801                           
  8802                           ; BSR set to: 0
  8803  006B16  0EFF               	movlw	255
  8804  006B18  1B90               	xorwf	___ftadd@f2& (0+255),f,b
  8805  006B1A  0EFF               	movlw	255
  8806  006B1C  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8807  006B1E  0EFF               	movlw	255
  8808  006B20  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8809  006B22  0E01               	movlw	1
  8810  006B24  2790               	addwf	___ftadd@f2& (0+255),f,b
  8811  006B26  0E00               	movlw	0
  8812  006B28  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8813  006B2A  0E00               	movlw	0
  8814  006B2C  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8815                           
  8816                           ; BSR set to: 0
  8817  006B2E  0E01               	movlw	1
  8818  006B30  6F96               	movwf	___ftadd@sign& (0+255),b
  8819  006B32                     l3851:
  8820                           
  8821                           ; BSR set to: 0
  8822                           
  8823                           ; BSR set to: 0
  8824  006B32  C090  F060         	movff	___ftadd@f2,___ftpack@arg
  8825  006B36  C091  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  8826  006B3A  C092  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  8827  006B3E  C098  F063         	movff	___ftadd@exp1,___ftpack@exp
  8828  006B42  C096  F064         	movff	___ftadd@sign,___ftpack@sign
  8829  006B46  EC62  F04B         	call	___ftpack	;wreg free
  8830  006B4A  C060  F08D         	movff	?___ftpack,?___ftadd
  8831  006B4E  C061  F08E         	movff	?___ftpack+1,?___ftadd+1
  8832  006B52  C062  F08F         	movff	?___ftpack+2,?___ftadd+2
  8833  006B56  0012               	return	
  8834  006B58                     __end_of___ftadd:
  8835                           	opt stack 0
  8836                           tblptru	equ	0xFF8
  8837                           tblptrh	equ	0xFF7
  8838                           tblptrl	equ	0xFF6
  8839                           tablat	equ	0xFF5
  8840                           prodh	equ	0xFF4
  8841                           prodl	equ	0xFF3
  8842                           intcon	equ	0xFF2
  8843                           postinc0	equ	0xFEE
  8844                           wreg	equ	0xFE8
  8845                           indf2	equ	0xFDF
  8846                           postinc2	equ	0xFDE
  8847                           postdec2	equ	0xFDD
  8848                           fsr2h	equ	0xFDA
  8849                           fsr2l	equ	0xFD9
  8850                           status	equ	0xFD8
  8851                           
  8852 ;; *************** function ___ftneg *****************
  8853 ;; Defined at:
  8854 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;  f1              3    0[BANK0 ] float 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  3    0[BANK0 ] float 
  8861 ;; Registers used:
  8862 ;;		wreg, status,2, status,0
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8868 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8871 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8872 ;;Total ram usage:        3 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; Hardware stack levels required when called:    7
  8875 ;; This function calls:
  8876 ;;		Nothing
  8877 ;; This function is called by:
  8878 ;;		_printf
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           	psect	text14
  8883  00BD7C                     __ptext14:
  8884                           	opt stack 0
  8885  00BD7C                     ___ftneg:
  8886                           	opt stack 22
  8887                           
  8888                           ;incstack = 0
  8889  00BD7C  0100               	movlb	0	; () banked
  8890  00BD7E  5160               	movf	___ftneg@f1& (0+255),w,b
  8891  00BD80  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8892  00BD82  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8893  00BD84  B4D8               	btfsc	status,2,c
  8894  00BD86  D006               	goto	l3899
  8895                           
  8896                           ; BSR set to: 0
  8897  00BD88  0E00               	movlw	0
  8898  00BD8A  1B60               	xorwf	___ftneg@f1& (0+255),f,b
  8899  00BD8C  0E00               	movlw	0
  8900  00BD8E  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8901  00BD90  0E80               	movlw	128
  8902  00BD92  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8903  00BD94                     l3899:
  8904                           
  8905                           ; BSR set to: 0
  8906  00BD94  C060  F060         	movff	___ftneg@f1,?___ftneg
  8907  00BD98  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
  8908  00BD9C  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
  8909                           
  8910                           ; BSR set to: 0
  8911  00BDA0  0012               	return		;funcret
  8912  00BDA2                     __end_of___ftneg:
  8913                           	opt stack 0
  8914                           tblptru	equ	0xFF8
  8915                           tblptrh	equ	0xFF7
  8916                           tblptrl	equ	0xFF6
  8917                           tablat	equ	0xFF5
  8918                           prodh	equ	0xFF4
  8919                           prodl	equ	0xFF3
  8920                           intcon	equ	0xFF2
  8921                           postinc0	equ	0xFEE
  8922                           wreg	equ	0xFE8
  8923                           indf2	equ	0xFDF
  8924                           postinc2	equ	0xFDE
  8925                           postdec2	equ	0xFDD
  8926                           fsr2h	equ	0xFDA
  8927                           fsr2l	equ	0xFD9
  8928                           status	equ	0xFD8
  8929                           
  8930 ;; *************** function ___ftge *****************
  8931 ;; Defined at:
  8932 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  ff1             3    0[BANK0 ] float 
  8935 ;;  ff2             3    3[BANK0 ] float 
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;		None
  8938 ;; Return value:  Size  Location     Type
  8939 ;;		None               void
  8940 ;; Registers used:
  8941 ;;		wreg, status,2, status,0
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8947 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8950 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8951 ;;Total ram usage:        9 bytes
  8952 ;; Hardware stack levels used:    1
  8953 ;; Hardware stack levels required when called:    7
  8954 ;; This function calls:
  8955 ;;		Nothing
  8956 ;; This function is called by:
  8957 ;;		_printf
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961                           	psect	text15
  8962  009C78                     __ptext15:
  8963                           	opt stack 0
  8964  009C78                     ___ftge:
  8965                           	opt stack 22
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;incstack = 0
  8969  009C78  0100               	movlb	0	; () banked
  8970  009C7A  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8971  009C7C  D016               	goto	l3881
  8972                           
  8973                           ; BSR set to: 0
  8974  009C7E  C060  F066         	movff	___ftge@ff1,??___ftge
  8975  009C82  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
  8976  009C86  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
  8977  009C8A  1F66               	comf	??___ftge& (0+255),f,b
  8978  009C8C  1F67               	comf	(??___ftge+1)& (0+255),f,b
  8979  009C8E  1F68               	comf	(??___ftge+2)& (0+255),f,b
  8980  009C90  2B66               	incf	??___ftge& (0+255),f,b
  8981  009C92  0E00               	movlw	0
  8982  009C94  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  8983  009C96  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  8984  009C98  0E00               	movlw	0
  8985  009C9A  2566               	addwf	??___ftge& (0+255),w,b
  8986  009C9C  6F60               	movwf	___ftge@ff1& (0+255),b
  8987  009C9E  0E00               	movlw	0
  8988  009CA0  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  8989  009CA2  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  8990  009CA4  0E80               	movlw	128
  8991  009CA6  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  8992  009CA8  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  8993  009CAA                     l3881:
  8994                           
  8995                           ; BSR set to: 0
  8996                           
  8997                           ; BSR set to: 0
  8998  009CAA  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8999  009CAC  D016               	goto	l3882
  9000                           
  9001                           ; BSR set to: 0
  9002  009CAE  C063  F066         	movff	___ftge@ff2,??___ftge
  9003  009CB2  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
  9004  009CB6  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
  9005  009CBA  1F66               	comf	??___ftge& (0+255),f,b
  9006  009CBC  1F67               	comf	(??___ftge+1)& (0+255),f,b
  9007  009CBE  1F68               	comf	(??___ftge+2)& (0+255),f,b
  9008  009CC0  2B66               	incf	??___ftge& (0+255),f,b
  9009  009CC2  0E00               	movlw	0
  9010  009CC4  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  9011  009CC6  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  9012  009CC8  0E00               	movlw	0
  9013  009CCA  2566               	addwf	??___ftge& (0+255),w,b
  9014  009CCC  6F63               	movwf	___ftge@ff2& (0+255),b
  9015  009CCE  0E00               	movlw	0
  9016  009CD0  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  9017  009CD2  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  9018  009CD4  0E80               	movlw	128
  9019  009CD6  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  9020  009CD8  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  9021  009CDA                     l3882:
  9022                           
  9023                           ; BSR set to: 0
  9024                           
  9025                           ; BSR set to: 0
  9026  009CDA  0E00               	movlw	0
  9027  009CDC  1B60               	xorwf	___ftge@ff1& (0+255),f,b
  9028  009CDE  0E00               	movlw	0
  9029  009CE0  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9030  009CE2  0E80               	movlw	128
  9031  009CE4  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9032                           
  9033                           ; BSR set to: 0
  9034  009CE6  0E00               	movlw	0
  9035  009CE8  1B63               	xorwf	___ftge@ff2& (0+255),f,b
  9036  009CEA  0E00               	movlw	0
  9037  009CEC  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9038  009CEE  0E80               	movlw	128
  9039  009CF0  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9040  009CF2  5163               	movf	___ftge@ff2& (0+255),w,b
  9041  009CF4  5D60               	subwf	___ftge@ff1& (0+255),w,b
  9042  009CF6  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
  9043  009CF8  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9044  009CFA  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
  9045  009CFC  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9046  009CFE  B0D8               	btfsc	status,0,c
  9047  009D00  D002               	goto	l10899
  9048                           
  9049                           ; BSR set to: 0
  9050  009D02  90D8               	bcf	status,0,c
  9051  009D04  0012               	return	
  9052  009D06                     l10899:
  9053                           
  9054                           ; BSR set to: 0
  9055                           
  9056                           ; BSR set to: 0
  9057  009D06  80D8               	bsf	status,0,c
  9058                           
  9059                           ; BSR set to: 0
  9060  009D08  0012               	return	
  9061  009D0A                     __end_of___ftge:
  9062                           	opt stack 0
  9063                           tblptru	equ	0xFF8
  9064                           tblptrh	equ	0xFF7
  9065                           tblptrl	equ	0xFF6
  9066                           tablat	equ	0xFF5
  9067                           prodh	equ	0xFF4
  9068                           prodl	equ	0xFF3
  9069                           intcon	equ	0xFF2
  9070                           postinc0	equ	0xFEE
  9071                           wreg	equ	0xFE8
  9072                           indf2	equ	0xFDF
  9073                           postinc2	equ	0xFDE
  9074                           postdec2	equ	0xFDD
  9075                           fsr2h	equ	0xFDA
  9076                           fsr2l	equ	0xFD9
  9077                           status	equ	0xFD8
  9078                           
  9079 ;; *************** function ___lwtoft *****************
  9080 ;; Defined at:
  9081 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;  c               2    8[BANK0 ] unsigned int 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  3    8[BANK0 ] float 
  9088 ;; Registers used:
  9089 ;;		wreg, status,2, status,0, cstack
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9095 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9098 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9099 ;;Total ram usage:        3 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:    8
  9102 ;; This function calls:
  9103 ;;		___ftpack
  9104 ;; This function is called by:
  9105 ;;		_main
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           	psect	text16
  9110  00BDA2                     __ptext16:
  9111                           	opt stack 0
  9112  00BDA2                     ___lwtoft:
  9113                           	opt stack 22
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;incstack = 0
  9117  00BDA2  C068  F060         	movff	___lwtoft@c,___ftpack@arg
  9118  00BDA6  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  9119  00BDAA  0100               	movlb	0	; () banked
  9120  00BDAC  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  9121  00BDAE  0E8E               	movlw	142
  9122  00BDB0  6F63               	movwf	___ftpack@exp& (0+255),b
  9123  00BDB2  0E00               	movlw	0
  9124  00BDB4  6F64               	movwf	___ftpack@sign& (0+255),b
  9125  00BDB6  EC62  F04B         	call	___ftpack	;wreg free
  9126  00BDBA  C060  F068         	movff	?___ftpack,?___lwtoft
  9127  00BDBE  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  9128  00BDC2  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  9129  00BDC6  0012               	return	
  9130  00BDC8                     __end_of___lwtoft:
  9131                           	opt stack 0
  9132                           tblptru	equ	0xFF8
  9133                           tblptrh	equ	0xFF7
  9134                           tblptrl	equ	0xFF6
  9135                           tablat	equ	0xFF5
  9136                           prodh	equ	0xFF4
  9137                           prodl	equ	0xFF3
  9138                           intcon	equ	0xFF2
  9139                           postinc0	equ	0xFEE
  9140                           wreg	equ	0xFE8
  9141                           indf2	equ	0xFDF
  9142                           postinc2	equ	0xFDE
  9143                           postdec2	equ	0xFDD
  9144                           fsr2h	equ	0xFDA
  9145                           fsr2l	equ	0xFD9
  9146                           status	equ	0xFD8
  9147                           
  9148 ;; *************** function _Weather_readSensors *****************
  9149 ;; Defined at:
  9150 ;;		line 77 in file "mcc_generated_files/weather.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;		None
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;		None
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  1    wreg      void 
  9157 ;; Registers used:
  9158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9168 ;;Total ram usage:        0 bytes
  9169 ;; Hardware stack levels used:    1
  9170 ;; Hardware stack levels required when called:   19
  9171 ;; This function calls:
  9172 ;;		_BME280_isMeasuring
  9173 ;;		_BME280_readMeasurements
  9174 ;;		_BME280_startForcedSensing
  9175 ;;		_Weather_initializeClick
  9176 ;; This function is called by:
  9177 ;;		_main
  9178 ;;		_Weather_example
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           	psect	text17
  9183  00C0BE                     __ptext17:
  9184                           	opt stack 0
  9185  00C0BE                     _Weather_readSensors:
  9186                           	opt stack 11
  9187                           
  9188                           ;weather.c: 79: if (!weather_initialized)
  9189                           
  9190                           ;incstack = 0
  9191  00C0BE  0101               	movlb	1	; () banked
  9192  00C0C0  512C               	movf	_weather_initialized& (0+255),w,b
  9193  00C0C2  B4D8               	btfsc	status,2,c
  9194                           
  9195                           ; BSR set to: 1
  9196                           ;weather.c: 80: {
  9197                           ;weather.c: 81: Weather_initializeClick();
  9198  00C0C4  EC5C  F059         	call	_Weather_initializeClick	;wreg free
  9199                           
  9200                           ;weather.c: 85: {
  9201                           ;weather.c: 86: BME280_startForcedSensing();
  9202                           
  9203                           ;weather.c: 82: }
  9204                           ;weather.c: 84: if (0x01 == 0x01)
  9205  00C0C8  EC41  F061         	call	_BME280_startForcedSensing	;wreg free
  9206  00C0CC                     
  9207                           ;weather.c: 90: {
  9208                           
  9209                           ;weather.c: 87: }
  9210                           ;weather.c: 89: while(BME280_isMeasuring())
  9211  00C0CC  EC82  F061         	call	_BME280_isMeasuring	;wreg free
  9212  00C0D0  0900               	iorlw	0
  9213  00C0D2  A4D8               	btfss	status,2,c
  9214  00C0D4  D7FB               	goto	l3155
  9215                           
  9216                           ;weather.c: 92: }
  9217                           ;weather.c: 93: BME280_readMeasurements();
  9218  00C0D6  EC94  F03D         	call	_BME280_readMeasurements	;wreg free
  9219  00C0DA  0012               	return		;funcret
  9220  00C0DC                     __end_of_Weather_readSensors:
  9221                           	opt stack 0
  9222                           tblptru	equ	0xFF8
  9223                           tblptrh	equ	0xFF7
  9224                           tblptrl	equ	0xFF6
  9225                           tablat	equ	0xFF5
  9226                           prodh	equ	0xFF4
  9227                           prodl	equ	0xFF3
  9228                           intcon	equ	0xFF2
  9229                           postinc0	equ	0xFEE
  9230                           wreg	equ	0xFE8
  9231                           indf2	equ	0xFDF
  9232                           postinc2	equ	0xFDE
  9233                           postdec2	equ	0xFDD
  9234                           fsr2h	equ	0xFDA
  9235                           fsr2l	equ	0xFD9
  9236                           status	equ	0xFD8
  9237                           
  9238 ;; *************** function _Weather_initializeClick *****************
  9239 ;; Defined at:
  9240 ;;		line 54 in file "mcc_generated_files/weather.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;		None
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;		None
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  1    wreg      void 
  9247 ;; Registers used:
  9248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;Total ram usage:        0 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:   18
  9261 ;; This function calls:
  9262 ;;		_BME280_initializeSensor
  9263 ;;		_BME280_readFactoryCalibrationParams
  9264 ;;		_BME280_reset
  9265 ;;		_BME280_setFilterCoefficient
  9266 ;;		_BME280_setOversamplingHumidity
  9267 ;;		_BME280_setOversamplingPressure
  9268 ;;		_BME280_setOversamplingTemperature
  9269 ;;		_BME280_setSensorMode
  9270 ;;		_BME280_setStandbyTime
  9271 ;;		_DELAY_milliseconds
  9272 ;; This function is called by:
  9273 ;;		_Weather_readSensors
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           	psect	text18
  9278  00B2B8                     __ptext18:
  9279                           	opt stack 0
  9280  00B2B8                     _Weather_initializeClick:
  9281                           	opt stack 11
  9282                           
  9283                           ;weather.c: 56: BME280_reset();
  9284                           
  9285                           ;incstack = 0
  9286  00B2B8  EC5C  F062         	call	_BME280_reset	;wreg free
  9287                           
  9288                           ;weather.c: 58: DELAY_milliseconds(5);
  9289  00B2BC  0E00               	movlw	0
  9290  00B2BE  0100               	movlb	0	; () banked
  9291  00B2C0  6F61               	movwf	(DELAY_milliseconds@milliseconds+1)& (0+255),b
  9292  00B2C2  0E05               	movlw	5
  9293  00B2C4  6F60               	movwf	DELAY_milliseconds@milliseconds& (0+255),b
  9294  00B2C6  EC46  F05E         	call	_DELAY_milliseconds	;wreg free
  9295                           
  9296                           ;weather.c: 60: BME280_readFactoryCalibrationParams();
  9297  00B2CA  EC19  F032         	call	_BME280_readFactoryCalibrationParams	;wreg free
  9298                           
  9299                           ;weather.c: 62: BME280_setStandbyTime(0x00);
  9300  00B2CE  0E00               	movlw	0
  9301  00B2D0  EC6E  F060         	call	_BME280_setStandbyTime
  9302                           
  9303                           ;weather.c: 63: BME280_setFilterCoefficient(0x00);
  9304  00B2D4  0E00               	movlw	0
  9305  00B2D6  EC7D  F060         	call	_BME280_setFilterCoefficient
  9306                           
  9307                           ;weather.c: 64: BME280_setOversamplingTemperature(0x01);
  9308  00B2DA  0E01               	movlw	1
  9309  00B2DC  EC8F  F05F         	call	_BME280_setOversamplingTemperature
  9310                           
  9311                           ;weather.c: 65: BME280_setOversamplingPressure(0x01);
  9312  00B2E0  0E01               	movlw	1
  9313  00B2E2  EC9F  F05F         	call	_BME280_setOversamplingPressure
  9314                           
  9315                           ;weather.c: 66: BME280_setOversamplingHumidity(0x01);
  9316  00B2E6  0E01               	movlw	1
  9317  00B2E8  EC97  F062         	call	_BME280_setOversamplingHumidity
  9318                           
  9319                           ;weather.c: 67: BME280_setSensorMode(0x01);
  9320  00B2EC  0E01               	movlw	1
  9321  00B2EE  EC36  F061         	call	_BME280_setSensorMode
  9322                           
  9323                           ;weather.c: 68: BME280_initializeSensor();
  9324  00B2F2  ECAF  F05F         	call	_BME280_initializeSensor	;wreg free
  9325                           
  9326                           ;weather.c: 70: weather_initialized = 1;
  9327  00B2F6  0E01               	movlw	1
  9328  00B2F8  0101               	movlb	1	; () banked
  9329  00B2FA  6F2C               	movwf	_weather_initialized& (0+255),b
  9330                           
  9331                           ; BSR set to: 1
  9332  00B2FC  0012               	return		;funcret
  9333  00B2FE                     __end_of_Weather_initializeClick:
  9334                           	opt stack 0
  9335                           tblptru	equ	0xFF8
  9336                           tblptrh	equ	0xFF7
  9337                           tblptrl	equ	0xFF6
  9338                           tablat	equ	0xFF5
  9339                           prodh	equ	0xFF4
  9340                           prodl	equ	0xFF3
  9341                           intcon	equ	0xFF2
  9342                           postinc0	equ	0xFEE
  9343                           wreg	equ	0xFE8
  9344                           indf2	equ	0xFDF
  9345                           postinc2	equ	0xFDE
  9346                           postdec2	equ	0xFDD
  9347                           fsr2h	equ	0xFDA
  9348                           fsr2l	equ	0xFD9
  9349                           status	equ	0xFD8
  9350                           
  9351 ;; *************** function _DELAY_milliseconds *****************
  9352 ;; Defined at:
  9353 ;;		line 27 in file "mcc_generated_files/delay.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;  milliseconds    2    0[BANK0 ] unsigned int 
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;		None
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  1    wreg      void 
  9360 ;; Registers used:
  9361 ;;		wreg, status,2, status,0
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9367 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9369 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9370 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9371 ;;Total ram usage:        3 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; Hardware stack levels required when called:    7
  9374 ;; This function calls:
  9375 ;;		Nothing
  9376 ;; This function is called by:
  9377 ;;		_Weather_initializeClick
  9378 ;; This function uses a non-reentrant model
  9379 ;;
  9380                           
  9381                           	psect	text19
  9382  00BC8C                     __ptext19:
  9383                           	opt stack 0
  9384  00BC8C                     _DELAY_milliseconds:
  9385                           	opt stack 21
  9386                           
  9387                           ;delay.c: 28: while(milliseconds--){
  9388                           
  9389                           ; BSR set to: 1
  9390                           ;incstack = 0
  9391  00BC8C  D009               	goto	l3319
  9392  00BC8E                     l15185:
  9393                           
  9394                           ;delay.c: 29: _delay((unsigned long)((1)*(16000000/4000.0)));
  9395  00BC8E  0E06               	movlw	6
  9396  00BC90  0100               	movlb	0	; () banked
  9397  00BC92  6F62               	movwf	??_DELAY_milliseconds& (0+255),b
  9398  00BC94  0E30               	movlw	48
  9399  00BC96                     u29117:
  9400  00BC96  2EE8               	decfsz	wreg,f,c
  9401  00BC98  D7FE               	bra	u29117
  9402  00BC9A  2F62               	decfsz	??_DELAY_milliseconds& (0+255),f,b
  9403  00BC9C  D7FC               	bra	u29117
  9404  00BC9E  F000               	nop	
  9405  00BCA0                     l3319:
  9406  00BCA0  0100               	movlb	0	; () banked
  9407  00BCA2  0760               	decf	DELAY_milliseconds@milliseconds& (0+255),f,b
  9408  00BCA4  A0D8               	btfss	status,0,c
  9409  00BCA6  0761               	decf	(DELAY_milliseconds@milliseconds+1)& (0+255),f,b
  9410  00BCA8  2960               	incf	DELAY_milliseconds@milliseconds& (0+255),w,b
  9411  00BCAA  E1F1               	bnz	l15185
  9412  00BCAC  2961               	incf	(DELAY_milliseconds@milliseconds+1)& (0+255),w,b
  9413  00BCAE  B4D8               	btfsc	status,2,c
  9414  00BCB0  0012               	return	
  9415  00BCB2  D7ED               	goto	l3320
  9416  00BCB4                     __end_of_DELAY_milliseconds:
  9417                           	opt stack 0
  9418                           tblptru	equ	0xFF8
  9419                           tblptrh	equ	0xFF7
  9420                           tblptrl	equ	0xFF6
  9421                           tablat	equ	0xFF5
  9422                           prodh	equ	0xFF4
  9423                           prodl	equ	0xFF3
  9424                           intcon	equ	0xFF2
  9425                           postinc0	equ	0xFEE
  9426                           wreg	equ	0xFE8
  9427                           indf2	equ	0xFDF
  9428                           postinc2	equ	0xFDE
  9429                           postdec2	equ	0xFDD
  9430                           fsr2h	equ	0xFDA
  9431                           fsr2l	equ	0xFD9
  9432                           status	equ	0xFD8
  9433                           
  9434 ;; *************** function _BME280_setStandbyTime *****************
  9435 ;; Defined at:
  9436 ;;		line 228 in file "mcc_generated_files/bme280.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;  sbtime          1    wreg     unsigned char 
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;  sbtime          1    1[BANK0 ] unsigned char 
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  1    wreg      void 
  9443 ;; Registers used:
  9444 ;;		wreg, status,2, status,0
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9454 ;;Total ram usage:        2 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; Hardware stack levels required when called:    7
  9457 ;; This function calls:
  9458 ;;		Nothing
  9459 ;; This function is called by:
  9460 ;;		_Weather_initializeClick
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           	psect	text20
  9465  00C0DC                     __ptext20:
  9466                           	opt stack 0
  9467  00C0DC                     _BME280_setStandbyTime:
  9468                           	opt stack 21
  9469                           
  9470                           ; BSR set to: 0
  9471                           ;incstack = 0
  9472                           ;BME280_setStandbyTime@sbtime stored from wreg
  9473  00C0DC  0100               	movlb	0	; () banked
  9474  00C0DE  6F61               	movwf	BME280_setStandbyTime@sbtime& (0+255),b
  9475                           
  9476                           ;bme280.c: 230: bme280_config.t_sb = sbtime;
  9477  00C0E0  C061  F060         	movff	BME280_setStandbyTime@sbtime,??_BME280_setStandbyTime
  9478  00C0E4  0100               	movlb	0	; () banked
  9479  00C0E6  3B60               	swapf	??_BME280_setStandbyTime& (0+255),f,b
  9480  00C0E8  0101               	movlb	1	; () banked
  9481  00C0EA  5130               	movf	_bme280_config& (0+255),w,b
  9482  00C0EC  0100               	movlb	0	; () banked
  9483  00C0EE  1960               	xorwf	??_BME280_setStandbyTime& (0+255),w,b
  9484  00C0F0  0B8F               	andlw	-113
  9485  00C0F2  1960               	xorwf	??_BME280_setStandbyTime& (0+255),w,b
  9486  00C0F4  0101               	movlb	1	; () banked
  9487  00C0F6  6F30               	movwf	_bme280_config& (0+255),b
  9488                           
  9489                           ; BSR set to: 1
  9490  00C0F8  0012               	return		;funcret
  9491  00C0FA                     __end_of_BME280_setStandbyTime:
  9492                           	opt stack 0
  9493                           tblptru	equ	0xFF8
  9494                           tblptrh	equ	0xFF7
  9495                           tblptrl	equ	0xFF6
  9496                           tablat	equ	0xFF5
  9497                           prodh	equ	0xFF4
  9498                           prodl	equ	0xFF3
  9499                           intcon	equ	0xFF2
  9500                           postinc0	equ	0xFEE
  9501                           wreg	equ	0xFE8
  9502                           indf2	equ	0xFDF
  9503                           postinc2	equ	0xFDE
  9504                           postdec2	equ	0xFDD
  9505                           fsr2h	equ	0xFDA
  9506                           fsr2l	equ	0xFD9
  9507                           status	equ	0xFD8
  9508                           
  9509 ;; *************** function _BME280_setSensorMode *****************
  9510 ;; Defined at:
  9511 ;;		line 253 in file "mcc_generated_files/bme280.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  mode            1    wreg     unsigned char 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;  mode            1    0[BANK0 ] unsigned char 
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  1    wreg      void 
  9518 ;; Registers used:
  9519 ;;		wreg, status,2, status,0
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;Total ram usage:        1 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; Hardware stack levels required when called:    7
  9532 ;; This function calls:
  9533 ;;		Nothing
  9534 ;; This function is called by:
  9535 ;;		_Weather_initializeClick
  9536 ;; This function uses a non-reentrant model
  9537 ;;
  9538                           
  9539                           	psect	text21
  9540  00C26C                     __ptext21:
  9541                           	opt stack 0
  9542  00C26C                     _BME280_setSensorMode:
  9543                           	opt stack 21
  9544                           
  9545                           ; BSR set to: 1
  9546                           ;incstack = 0
  9547                           ;BME280_setSensorMode@mode stored from wreg
  9548  00C26C  0100               	movlb	0	; () banked
  9549  00C26E  6F60               	movwf	BME280_setSensorMode@mode& (0+255),b
  9550                           
  9551                           ;bme280.c: 255: bme280_ctrl_meas.mode = mode;
  9552  00C270  0101               	movlb	1	; () banked
  9553  00C272  512E               	movf	_bme280_ctrl_meas& (0+255),w,b
  9554  00C274  0100               	movlb	0	; () banked
  9555  00C276  1960               	xorwf	BME280_setSensorMode@mode& (0+255),w,b
  9556  00C278  0BFC               	andlw	-4
  9557  00C27A  1960               	xorwf	BME280_setSensorMode@mode& (0+255),w,b
  9558  00C27C  0101               	movlb	1	; () banked
  9559  00C27E  6F2E               	movwf	_bme280_ctrl_meas& (0+255),b
  9560                           
  9561                           ; BSR set to: 1
  9562  00C280  0012               	return		;funcret
  9563  00C282                     __end_of_BME280_setSensorMode:
  9564                           	opt stack 0
  9565                           tblptru	equ	0xFF8
  9566                           tblptrh	equ	0xFF7
  9567                           tblptrl	equ	0xFF6
  9568                           tablat	equ	0xFF5
  9569                           prodh	equ	0xFF4
  9570                           prodl	equ	0xFF3
  9571                           intcon	equ	0xFF2
  9572                           postinc0	equ	0xFEE
  9573                           wreg	equ	0xFE8
  9574                           indf2	equ	0xFDF
  9575                           postinc2	equ	0xFDE
  9576                           postdec2	equ	0xFDD
  9577                           fsr2h	equ	0xFDA
  9578                           fsr2l	equ	0xFD9
  9579                           status	equ	0xFD8
  9580                           
  9581 ;; *************** function _BME280_setOversamplingTemperature *****************
  9582 ;; Defined at:
  9583 ;;		line 238 in file "mcc_generated_files/bme280.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;  osrs_t          1    wreg     unsigned char 
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;  osrs_t          1    1[BANK0 ] unsigned char 
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  1    wreg      void 
  9590 ;; Registers used:
  9591 ;;		wreg, status,2, status,0
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9601 ;;Total ram usage:        2 bytes
  9602 ;; Hardware stack levels used:    1
  9603 ;; Hardware stack levels required when called:    7
  9604 ;; This function calls:
  9605 ;;		Nothing
  9606 ;; This function is called by:
  9607 ;;		_Weather_initializeClick
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           	psect	text22
  9612  00BF1E                     __ptext22:
  9613                           	opt stack 0
  9614  00BF1E                     _BME280_setOversamplingTemperature:
  9615                           	opt stack 21
  9616                           
  9617                           ; BSR set to: 1
  9618                           ;incstack = 0
  9619                           ;BME280_setOversamplingTemperature@osrs_t stored from wreg
  9620  00BF1E  0100               	movlb	0	; () banked
  9621  00BF20  6F61               	movwf	BME280_setOversamplingTemperature@osrs_t& (0+255),b
  9622                           
  9623                           ;bme280.c: 240: bme280_ctrl_meas.osrs_T = osrs_t;
  9624  00BF22  C061  F060         	movff	BME280_setOversamplingTemperature@osrs_t,??_BME280_setOversamplingTemperature
  9625  00BF26  0100               	movlb	0	; () banked
  9626  00BF28  3B60               	swapf	??_BME280_setOversamplingTemperature& (0+255),f,b
  9627  00BF2A  4760               	rlncf	??_BME280_setOversamplingTemperature& (0+255),f,b
  9628  00BF2C  0101               	movlb	1	; () banked
  9629  00BF2E  512E               	movf	_bme280_ctrl_meas& (0+255),w,b
  9630  00BF30  0100               	movlb	0	; () banked
  9631  00BF32  1960               	xorwf	??_BME280_setOversamplingTemperature& (0+255),w,b
  9632  00BF34  0B1F               	andlw	-225
  9633  00BF36  1960               	xorwf	??_BME280_setOversamplingTemperature& (0+255),w,b
  9634  00BF38  0101               	movlb	1	; () banked
  9635  00BF3A  6F2E               	movwf	_bme280_ctrl_meas& (0+255),b
  9636                           
  9637                           ; BSR set to: 1
  9638  00BF3C  0012               	return		;funcret
  9639  00BF3E                     __end_of_BME280_setOversamplingTemperature:
  9640                           	opt stack 0
  9641                           tblptru	equ	0xFF8
  9642                           tblptrh	equ	0xFF7
  9643                           tblptrl	equ	0xFF6
  9644                           tablat	equ	0xFF5
  9645                           prodh	equ	0xFF4
  9646                           prodl	equ	0xFF3
  9647                           intcon	equ	0xFF2
  9648                           postinc0	equ	0xFEE
  9649                           wreg	equ	0xFE8
  9650                           indf2	equ	0xFDF
  9651                           postinc2	equ	0xFDE
  9652                           postdec2	equ	0xFDD
  9653                           fsr2h	equ	0xFDA
  9654                           fsr2l	equ	0xFD9
  9655                           status	equ	0xFD8
  9656                           
  9657 ;; *************** function _BME280_setOversamplingPressure *****************
  9658 ;; Defined at:
  9659 ;;		line 243 in file "mcc_generated_files/bme280.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;  osrs_p          1    wreg     unsigned char 
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;  osrs_p          1    1[BANK0 ] unsigned char 
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  1    wreg      void 
  9666 ;; Registers used:
  9667 ;;		wreg, status,2, status,0
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9674 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9676 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;Total ram usage:        2 bytes
  9678 ;; Hardware stack levels used:    1
  9679 ;; Hardware stack levels required when called:    7
  9680 ;; This function calls:
  9681 ;;		Nothing
  9682 ;; This function is called by:
  9683 ;;		_Weather_initializeClick
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           
  9687                           	psect	text23
  9688  00BF3E                     __ptext23:
  9689                           	opt stack 0
  9690  00BF3E                     _BME280_setOversamplingPressure:
  9691                           	opt stack 21
  9692                           
  9693                           ; BSR set to: 1
  9694                           ;incstack = 0
  9695                           ;BME280_setOversamplingPressure@osrs_p stored from wreg
  9696  00BF3E  0100               	movlb	0	; () banked
  9697  00BF40  6F61               	movwf	BME280_setOversamplingPressure@osrs_p& (0+255),b
  9698                           
  9699                           ;bme280.c: 245: bme280_ctrl_meas.osrs_P = osrs_p;
  9700  00BF42  C061  F060         	movff	BME280_setOversamplingPressure@osrs_p,??_BME280_setOversamplingPressure
  9701  00BF46  0100               	movlb	0	; () banked
  9702  00BF48  4760               	rlncf	??_BME280_setOversamplingPressure& (0+255),f,b
  9703  00BF4A  4760               	rlncf	??_BME280_setOversamplingPressure& (0+255),f,b
  9704  00BF4C  0101               	movlb	1	; () banked
  9705  00BF4E  512E               	movf	_bme280_ctrl_meas& (0+255),w,b
  9706  00BF50  0100               	movlb	0	; () banked
  9707  00BF52  1960               	xorwf	??_BME280_setOversamplingPressure& (0+255),w,b
  9708  00BF54  0BE3               	andlw	-29
  9709  00BF56  1960               	xorwf	??_BME280_setOversamplingPressure& (0+255),w,b
  9710  00BF58  0101               	movlb	1	; () banked
  9711  00BF5A  6F2E               	movwf	_bme280_ctrl_meas& (0+255),b
  9712                           
  9713                           ; BSR set to: 1
  9714  00BF5C  0012               	return		;funcret
  9715  00BF5E                     __end_of_BME280_setOversamplingPressure:
  9716                           	opt stack 0
  9717                           tblptru	equ	0xFF8
  9718                           tblptrh	equ	0xFF7
  9719                           tblptrl	equ	0xFF6
  9720                           tablat	equ	0xFF5
  9721                           prodh	equ	0xFF4
  9722                           prodl	equ	0xFF3
  9723                           intcon	equ	0xFF2
  9724                           postinc0	equ	0xFEE
  9725                           wreg	equ	0xFE8
  9726                           indf2	equ	0xFDF
  9727                           postinc2	equ	0xFDE
  9728                           postdec2	equ	0xFDD
  9729                           fsr2h	equ	0xFDA
  9730                           fsr2l	equ	0xFD9
  9731                           status	equ	0xFD8
  9732                           
  9733 ;; *************** function _BME280_setOversamplingHumidity *****************
  9734 ;; Defined at:
  9735 ;;		line 248 in file "mcc_generated_files/bme280.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;  osrs_h          1    wreg     unsigned char 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;  osrs_h          1    0[BANK0 ] unsigned char 
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  1    wreg      void 
  9742 ;; Registers used:
  9743 ;;		wreg
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9752 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9753 ;;Total ram usage:        1 bytes
  9754 ;; Hardware stack levels used:    1
  9755 ;; Hardware stack levels required when called:    7
  9756 ;; This function calls:
  9757 ;;		Nothing
  9758 ;; This function is called by:
  9759 ;;		_Weather_initializeClick
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763                           	psect	text24
  9764  00C52E                     __ptext24:
  9765                           	opt stack 0
  9766  00C52E                     _BME280_setOversamplingHumidity:
  9767                           	opt stack 21
  9768                           
  9769                           ; BSR set to: 1
  9770                           ;incstack = 0
  9771                           ;BME280_setOversamplingHumidity@osrs_h stored from wreg
  9772  00C52E  0100               	movlb	0	; () banked
  9773  00C530  6F60               	movwf	BME280_setOversamplingHumidity@osrs_h& (0+255),b
  9774                           
  9775                           ;bme280.c: 250: bme280_ctrl_hum = osrs_h;
  9776  00C532  C060  F12F         	movff	BME280_setOversamplingHumidity@osrs_h,_bme280_ctrl_hum
  9777  00C536  0012               	return		;funcret
  9778  00C538                     __end_of_BME280_setOversamplingHumidity:
  9779                           	opt stack 0
  9780                           tblptru	equ	0xFF8
  9781                           tblptrh	equ	0xFF7
  9782                           tblptrl	equ	0xFF6
  9783                           tablat	equ	0xFF5
  9784                           prodh	equ	0xFF4
  9785                           prodl	equ	0xFF3
  9786                           intcon	equ	0xFF2
  9787                           postinc0	equ	0xFEE
  9788                           wreg	equ	0xFE8
  9789                           indf2	equ	0xFDF
  9790                           postinc2	equ	0xFDE
  9791                           postdec2	equ	0xFDD
  9792                           fsr2h	equ	0xFDA
  9793                           fsr2l	equ	0xFD9
  9794                           status	equ	0xFD8
  9795                           
  9796 ;; *************** function _BME280_setFilterCoefficient *****************
  9797 ;; Defined at:
  9798 ;;		line 233 in file "mcc_generated_files/bme280.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  coeff           1    wreg     unsigned char 
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;  coeff           1    1[BANK0 ] unsigned char 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      void 
  9805 ;; Registers used:
  9806 ;;		wreg, status,2, status,0
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9816 ;;Total ram usage:        2 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:    7
  9819 ;; This function calls:
  9820 ;;		Nothing
  9821 ;; This function is called by:
  9822 ;;		_Weather_initializeClick
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           	psect	text25
  9827  00C0FA                     __ptext25:
  9828                           	opt stack 0
  9829  00C0FA                     _BME280_setFilterCoefficient:
  9830                           	opt stack 21
  9831                           
  9832                           ;incstack = 0
  9833                           ;BME280_setFilterCoefficient@coeff stored from wreg
  9834  00C0FA  0100               	movlb	0	; () banked
  9835  00C0FC  6F61               	movwf	BME280_setFilterCoefficient@coeff& (0+255),b
  9836                           
  9837                           ;bme280.c: 235: bme280_config.filter = coeff;
  9838  00C0FE  C061  F060         	movff	BME280_setFilterCoefficient@coeff,??_BME280_setFilterCoefficient
  9839  00C102  0100               	movlb	0	; () banked
  9840  00C104  4760               	rlncf	??_BME280_setFilterCoefficient& (0+255),f,b
  9841  00C106  0101               	movlb	1	; () banked
  9842  00C108  5130               	movf	_bme280_config& (0+255),w,b
  9843  00C10A  0100               	movlb	0	; () banked
  9844  00C10C  1960               	xorwf	??_BME280_setFilterCoefficient& (0+255),w,b
  9845  00C10E  0BF1               	andlw	-15
  9846  00C110  1960               	xorwf	??_BME280_setFilterCoefficient& (0+255),w,b
  9847  00C112  0101               	movlb	1	; () banked
  9848  00C114  6F30               	movwf	_bme280_config& (0+255),b
  9849                           
  9850                           ; BSR set to: 1
  9851  00C116  0012               	return		;funcret
  9852  00C118                     __end_of_BME280_setFilterCoefficient:
  9853                           	opt stack 0
  9854                           tblptru	equ	0xFF8
  9855                           tblptrh	equ	0xFF7
  9856                           tblptrl	equ	0xFF6
  9857                           tablat	equ	0xFF5
  9858                           prodh	equ	0xFF4
  9859                           prodl	equ	0xFF3
  9860                           intcon	equ	0xFF2
  9861                           postinc0	equ	0xFEE
  9862                           wreg	equ	0xFE8
  9863                           indf2	equ	0xFDF
  9864                           postinc2	equ	0xFDE
  9865                           postdec2	equ	0xFDD
  9866                           fsr2h	equ	0xFDA
  9867                           fsr2l	equ	0xFD9
  9868                           status	equ	0xFD8
  9869                           
  9870 ;; *************** function _BME280_reset *****************
  9871 ;; Defined at:
  9872 ;;		line 189 in file "mcc_generated_files/bme280.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;                  1    wreg      void 
  9879 ;; Registers used:
  9880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9890 ;;Total ram usage:        0 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; Hardware stack levels required when called:   17
  9893 ;; This function calls:
  9894 ;;		_BME280_writeByte
  9895 ;; This function is called by:
  9896 ;;		_Weather_initializeClick
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           	psect	text26
  9901  00C4B8                     __ptext26:
  9902                           	opt stack 0
  9903  00C4B8                     _BME280_reset:
  9904                           	opt stack 11
  9905                           
  9906                           ;bme280.c: 191: BME280_writeByte(0xE0, 0xB6);
  9907                           
  9908                           ; BSR set to: 1
  9909                           ;incstack = 0
  9910  00C4B8  0EB6               	movlw	182
  9911  00C4BA  0100               	movlb	0	; () banked
  9912  00C4BC  6F74               	movwf	BME280_writeByte@data& (0+255),b
  9913  00C4BE  0EE0               	movlw	224
  9914  00C4C0  EC78  F061         	call	_BME280_writeByte
  9915  00C4C4  0012               	return		;funcret
  9916  00C4C6                     __end_of_BME280_reset:
  9917                           	opt stack 0
  9918                           tblptru	equ	0xFF8
  9919                           tblptrh	equ	0xFF7
  9920                           tblptrl	equ	0xFF6
  9921                           tablat	equ	0xFF5
  9922                           prodh	equ	0xFF4
  9923                           prodl	equ	0xFF3
  9924                           intcon	equ	0xFF2
  9925                           postinc0	equ	0xFEE
  9926                           wreg	equ	0xFE8
  9927                           indf2	equ	0xFDF
  9928                           postinc2	equ	0xFDE
  9929                           postdec2	equ	0xFDD
  9930                           fsr2h	equ	0xFDA
  9931                           fsr2l	equ	0xFD9
  9932                           status	equ	0xFD8
  9933                           
  9934 ;; *************** function _BME280_readFactoryCalibrationParams *****************
  9935 ;; Defined at:
  9936 ;;		line 200 in file "mcc_generated_files/bme280.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;		None
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;  paramBuff      24   34[BANK0 ] unsigned char [24]
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  1    wreg      void 
  9943 ;; Registers used:
  9944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9951 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9952 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9953 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9954 ;;Total ram usage:       27 bytes
  9955 ;; Hardware stack levels used:    1
  9956 ;; Hardware stack levels required when called:   17
  9957 ;; This function calls:
  9958 ;;		_BME280_readBlock
  9959 ;;		_BME280_readByte
  9960 ;; This function is called by:
  9961 ;;		_Weather_initializeClick
  9962 ;; This function uses a non-reentrant model
  9963 ;;
  9964                           
  9965                           	psect	text27
  9966  006432                     __ptext27:
  9967                           	opt stack 0
  9968  006432                     _BME280_readFactoryCalibrationParams:
  9969                           	opt stack 11
  9970                           
  9971                           ;bme280.c: 202: uint8_t paramBuff[24];
  9972                           ;bme280.c: 204: BME280_readBlock(0x88, paramBuff, 24);
  9973                           
  9974                           ;incstack = 0
  9975  006432  0E82               	movlw	low BME280_readFactoryCalibrationParams@paramBuff
  9976  006434  0100               	movlb	0	; () banked
  9977  006436  6F7B               	movwf	BME280_readBlock@read_buff& (0+255),b
  9978  006438  0E00               	movlw	high BME280_readFactoryCalibrationParams@paramBuff
  9979  00643A  6F7C               	movwf	(BME280_readBlock@read_buff+1)& (0+255),b
  9980  00643C  0E18               	movlw	24
  9981  00643E  6F7D               	movwf	BME280_readBlock@length& (0+255),b
  9982  006440  0E88               	movlw	136
  9983  006442  ECBF  F05F         	call	_BME280_readBlock
  9984                           
  9985                           ;bme280.c: 205: calibParam.dig_T1 = (((uint16_t) paramBuff[1]) << 8) + paramBuff[0];
  9986  006446  0100               	movlb	0	; () banked
  9987  006448  5183               	movf	(BME280_readFactoryCalibrationParams@paramBuff+1)& (0+255),w,b
  9988  00644A  6F7F               	movwf	??_BME280_readFactoryCalibrationParams& (0+255),b
  9989  00644C  5182               	movf	BME280_readFactoryCalibrationParams@paramBuff& (0+255),w,b
  9990  00644E  0101               	movlb	1	; () banked
  9991  006450  6F6B               	movwf	_calibParam& (0+255),b
  9992  006452  C07F  F16C         	movff	??_BME280_readFactoryCalibrationParams,_calibParam+1
  9993                           
  9994                           ; BSR set to: 1
  9995                           ;bme280.c: 206: calibParam.dig_T2 = (((int) paramBuff[3]) << 8) + paramBuff[2];
  9996  006456  0100               	movlb	0	; () banked
  9997  006458  5185               	movf	(BME280_readFactoryCalibrationParams@paramBuff+3)& (0+255),w,b
  9998  00645A  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
  9999  00645C  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10000  00645E  5184               	movf	(BME280_readFactoryCalibrationParams@paramBuff+2)& (0+255),w,b
 10001  006460  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10002  006462  0101               	movlb	1	; () banked
 10003  006464  6F6D               	movwf	(_calibParam+2)& (0+255),b
 10004  006466  0100               	movlb	0	; () banked
 10005  006468  0E00               	movlw	0
 10006  00646A  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10007  00646C  0101               	movlb	1	; () banked
 10008  00646E  6F6E               	movwf	(_calibParam+3)& (0+255),b
 10009                           
 10010                           ; BSR set to: 1
 10011                           ;bme280.c: 207: calibParam.dig_T3 = (((int) paramBuff[5]) << 8) + paramBuff[4];
 10012  006470  0100               	movlb	0	; () banked
 10013  006472  5187               	movf	(BME280_readFactoryCalibrationParams@paramBuff+5)& (0+255),w,b
 10014  006474  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10015  006476  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10016  006478  5186               	movf	(BME280_readFactoryCalibrationParams@paramBuff+4)& (0+255),w,b
 10017  00647A  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10018  00647C  0101               	movlb	1	; () banked
 10019  00647E  6F6F               	movwf	(_calibParam+4)& (0+255),b
 10020  006480  0100               	movlb	0	; () banked
 10021  006482  0E00               	movlw	0
 10022  006484  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10023  006486  0101               	movlb	1	; () banked
 10024  006488  6F70               	movwf	(_calibParam+5)& (0+255),b
 10025                           
 10026                           ; BSR set to: 1
 10027                           ;bme280.c: 208: calibParam.dig_P1 = (((uint16_t) paramBuff[7]) << 8) + paramBuff[6];
 10028  00648A  0100               	movlb	0	; () banked
 10029  00648C  5189               	movf	(BME280_readFactoryCalibrationParams@paramBuff+7)& (0+255),w,b
 10030  00648E  6F7F               	movwf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10031  006490  5188               	movf	(BME280_readFactoryCalibrationParams@paramBuff+6)& (0+255),w,b
 10032  006492  0101               	movlb	1	; () banked
 10033  006494  6F71               	movwf	(_calibParam+6)& (0+255),b
 10034  006496  C07F  F172         	movff	??_BME280_readFactoryCalibrationParams,_calibParam+7
 10035                           
 10036                           ; BSR set to: 1
 10037                           ;bme280.c: 209: calibParam.dig_P2 = (((int) paramBuff[9]) << 8) + paramBuff[8];
 10038  00649A  0100               	movlb	0	; () banked
 10039  00649C  518B               	movf	(BME280_readFactoryCalibrationParams@paramBuff+9)& (0+255),w,b
 10040  00649E  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10041  0064A0  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10042  0064A2  518A               	movf	(BME280_readFactoryCalibrationParams@paramBuff+8)& (0+255),w,b
 10043  0064A4  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10044  0064A6  0101               	movlb	1	; () banked
 10045  0064A8  6F73               	movwf	(_calibParam+8)& (0+255),b
 10046  0064AA  0100               	movlb	0	; () banked
 10047  0064AC  0E00               	movlw	0
 10048  0064AE  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10049  0064B0  0101               	movlb	1	; () banked
 10050  0064B2  6F74               	movwf	(_calibParam+9)& (0+255),b
 10051                           
 10052                           ; BSR set to: 1
 10053                           ;bme280.c: 210: calibParam.dig_P3 = (((int) paramBuff[11]) << 8) + paramBuff[10];
 10054  0064B4  0100               	movlb	0	; () banked
 10055  0064B6  518D               	movf	(BME280_readFactoryCalibrationParams@paramBuff+11)& (0+255),w,b
 10056  0064B8  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10057  0064BA  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10058  0064BC  518C               	movf	(BME280_readFactoryCalibrationParams@paramBuff+10)& (0+255),w,b
 10059  0064BE  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10060  0064C0  0101               	movlb	1	; () banked
 10061  0064C2  6F75               	movwf	(_calibParam+10)& (0+255),b
 10062  0064C4  0100               	movlb	0	; () banked
 10063  0064C6  0E00               	movlw	0
 10064  0064C8  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10065  0064CA  0101               	movlb	1	; () banked
 10066  0064CC  6F76               	movwf	(_calibParam+11)& (0+255),b
 10067                           
 10068                           ; BSR set to: 1
 10069                           ;bme280.c: 211: calibParam.dig_P4 = (((int) paramBuff[13]) << 8) + paramBuff[12];
 10070  0064CE  0100               	movlb	0	; () banked
 10071  0064D0  518F               	movf	(BME280_readFactoryCalibrationParams@paramBuff+13)& (0+255),w,b
 10072  0064D2  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10073  0064D4  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10074  0064D6  518E               	movf	(BME280_readFactoryCalibrationParams@paramBuff+12)& (0+255),w,b
 10075  0064D8  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10076  0064DA  0101               	movlb	1	; () banked
 10077  0064DC  6F77               	movwf	(_calibParam+12)& (0+255),b
 10078  0064DE  0100               	movlb	0	; () banked
 10079  0064E0  0E00               	movlw	0
 10080  0064E2  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10081  0064E4  0101               	movlb	1	; () banked
 10082  0064E6  6F78               	movwf	(_calibParam+13)& (0+255),b
 10083                           
 10084                           ; BSR set to: 1
 10085                           ;bme280.c: 212: calibParam.dig_P5 = (((int) paramBuff[15]) << 8) + paramBuff[14];
 10086  0064E8  0100               	movlb	0	; () banked
 10087  0064EA  5191               	movf	(BME280_readFactoryCalibrationParams@paramBuff+15)& (0+255),w,b
 10088  0064EC  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10089  0064EE  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10090  0064F0  5190               	movf	(BME280_readFactoryCalibrationParams@paramBuff+14)& (0+255),w,b
 10091  0064F2  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10092  0064F4  0101               	movlb	1	; () banked
 10093  0064F6  6F79               	movwf	(_calibParam+14)& (0+255),b
 10094  0064F8  0100               	movlb	0	; () banked
 10095  0064FA  0E00               	movlw	0
 10096  0064FC  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10097  0064FE  0101               	movlb	1	; () banked
 10098  006500  6F7A               	movwf	(_calibParam+15)& (0+255),b
 10099                           
 10100                           ; BSR set to: 1
 10101                           ;bme280.c: 213: calibParam.dig_P6 = (((int) paramBuff[17]) << 8) + paramBuff[16];
 10102  006502  0100               	movlb	0	; () banked
 10103  006504  5193               	movf	(BME280_readFactoryCalibrationParams@paramBuff+17)& (0+255),w,b
 10104  006506  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10105  006508  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10106  00650A  5192               	movf	(BME280_readFactoryCalibrationParams@paramBuff+16)& (0+255),w,b
 10107  00650C  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10108  00650E  0101               	movlb	1	; () banked
 10109  006510  6F7B               	movwf	(_calibParam+16)& (0+255),b
 10110  006512  0100               	movlb	0	; () banked
 10111  006514  0E00               	movlw	0
 10112  006516  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10113  006518  0101               	movlb	1	; () banked
 10114  00651A  6F7C               	movwf	(_calibParam+17)& (0+255),b
 10115                           
 10116                           ; BSR set to: 1
 10117                           ;bme280.c: 214: calibParam.dig_P7 = (((int) paramBuff[19]) << 8) + paramBuff[18];
 10118  00651C  0100               	movlb	0	; () banked
 10119  00651E  5195               	movf	(BME280_readFactoryCalibrationParams@paramBuff+19)& (0+255),w,b
 10120  006520  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10121  006522  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10122  006524  5194               	movf	(BME280_readFactoryCalibrationParams@paramBuff+18)& (0+255),w,b
 10123  006526  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10124  006528  0101               	movlb	1	; () banked
 10125  00652A  6F7D               	movwf	(_calibParam+18)& (0+255),b
 10126  00652C  0100               	movlb	0	; () banked
 10127  00652E  0E00               	movlw	0
 10128  006530  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10129  006532  0101               	movlb	1	; () banked
 10130  006534  6F7E               	movwf	(_calibParam+19)& (0+255),b
 10131                           
 10132                           ; BSR set to: 1
 10133                           ;bme280.c: 215: calibParam.dig_P8 = (((int) paramBuff[21]) << 8) + paramBuff[20];
 10134  006536  0100               	movlb	0	; () banked
 10135  006538  5197               	movf	(BME280_readFactoryCalibrationParams@paramBuff+21)& (0+255),w,b
 10136  00653A  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10137  00653C  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10138  00653E  5196               	movf	(BME280_readFactoryCalibrationParams@paramBuff+20)& (0+255),w,b
 10139  006540  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10140  006542  0101               	movlb	1	; () banked
 10141  006544  6F7F               	movwf	(_calibParam+20)& (0+255),b
 10142  006546  0100               	movlb	0	; () banked
 10143  006548  0E00               	movlw	0
 10144  00654A  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10145  00654C  0101               	movlb	1	; () banked
 10146  00654E  6F80               	movwf	(_calibParam+21)& (0+255),b
 10147                           
 10148                           ; BSR set to: 1
 10149                           ;bme280.c: 216: calibParam.dig_P9 = (((int) paramBuff[23]) << 8) + paramBuff[22];
 10150  006550  0100               	movlb	0	; () banked
 10151  006552  5199               	movf	(BME280_readFactoryCalibrationParams@paramBuff+23)& (0+255),w,b
 10152  006554  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10153  006556  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10154  006558  5198               	movf	(BME280_readFactoryCalibrationParams@paramBuff+22)& (0+255),w,b
 10155  00655A  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10156  00655C  0101               	movlb	1	; () banked
 10157  00655E  6F81               	movwf	(_calibParam+22)& (0+255),b
 10158  006560  0100               	movlb	0	; () banked
 10159  006562  0E00               	movlw	0
 10160  006564  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10161  006566  0101               	movlb	1	; () banked
 10162  006568  6F82               	movwf	(_calibParam+23)& (0+255),b
 10163                           
 10164                           ;bme280.c: 218: calibParam.dig_H1 = (uint8_t) BME280_readByte(0xA1);
 10165  00656A  0EA1               	movlw	161
 10166  00656C  EC05  F062         	call	_BME280_readByte
 10167  006570  0101               	movlb	1	; () banked
 10168  006572  6F83               	movwf	(_calibParam+24)& (0+255),b
 10169                           
 10170                           ;bme280.c: 220: BME280_readBlock(0xE1, paramBuff, 7);
 10171  006574  0E82               	movlw	low BME280_readFactoryCalibrationParams@paramBuff
 10172  006576  0100               	movlb	0	; () banked
 10173  006578  6F7B               	movwf	BME280_readBlock@read_buff& (0+255),b
 10174  00657A  0E00               	movlw	high BME280_readFactoryCalibrationParams@paramBuff
 10175  00657C  6F7C               	movwf	(BME280_readBlock@read_buff+1)& (0+255),b
 10176  00657E  0E07               	movlw	7
 10177  006580  6F7D               	movwf	BME280_readBlock@length& (0+255),b
 10178  006582  0EE1               	movlw	225
 10179  006584  ECBF  F05F         	call	_BME280_readBlock
 10180                           
 10181                           ;bme280.c: 221: calibParam.dig_H2 = (((int) paramBuff[1]) << 8) + paramBuff[0];
 10182  006588  0100               	movlb	0	; () banked
 10183  00658A  5183               	movf	(BME280_readFactoryCalibrationParams@paramBuff+1)& (0+255),w,b
 10184  00658C  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10185  00658E  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10186  006590  5182               	movf	BME280_readFactoryCalibrationParams@paramBuff& (0+255),w,b
 10187  006592  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10188  006594  0101               	movlb	1	; () banked
 10189  006596  6F84               	movwf	(_calibParam+25)& (0+255),b
 10190  006598  0100               	movlb	0	; () banked
 10191  00659A  0E00               	movlw	0
 10192  00659C  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10193  00659E  0101               	movlb	1	; () banked
 10194  0065A0  6F85               	movwf	(_calibParam+26)& (0+255),b
 10195                           
 10196                           ; BSR set to: 1
 10197                           ;bme280.c: 222: calibParam.dig_H3 = (uint8_t) paramBuff[2];
 10198  0065A2  C084  F186         	movff	BME280_readFactoryCalibrationParams@paramBuff+2,_calibParam+27
 10199                           
 10200                           ; BSR set to: 1
 10201                           ;bme280.c: 223: calibParam.dig_H4 = (((int) paramBuff[3]) << 4) | (paramBuff[4] & 0xF);
 10202  0065A6  0100               	movlb	0	; () banked
 10203  0065A8  5185               	movf	(BME280_readFactoryCalibrationParams@paramBuff+3)& (0+255),w,b
 10204  0065AA  6F7F               	movwf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10205  0065AC  6B80               	clrf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10206  0065AE  3B7F               	swapf	??_BME280_readFactoryCalibrationParams& (0+255),f,b
 10207  0065B0  3B80               	swapf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10208  0065B2  0EF0               	movlw	240
 10209  0065B4  1780               	andwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10210  0065B6  517F               	movf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10211  0065B8  0B0F               	andlw	15
 10212  0065BA  1380               	iorwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10213  0065BC  0EF0               	movlw	240
 10214  0065BE  177F               	andwf	??_BME280_readFactoryCalibrationParams& (0+255),f,b
 10215  0065C0  C086  F081         	movff	BME280_readFactoryCalibrationParams@paramBuff+4,??_BME280_readFactoryCalibrationP
      +                          arams+2
 10216  0065C4  0E0F               	movlw	15
 10217  0065C6  1781               	andwf	(??_BME280_readFactoryCalibrationParams+2)& (0+255),f,b
 10218  0065C8  5181               	movf	(??_BME280_readFactoryCalibrationParams+2)& (0+255),w,b
 10219  0065CA  117F               	iorwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10220  0065CC  0101               	movlb	1	; () banked
 10221  0065CE  6F87               	movwf	(_calibParam+28)& (0+255),b
 10222  0065D0  0100               	movlb	0	; () banked
 10223  0065D2  5180               	movf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10224  0065D4  0101               	movlb	1	; () banked
 10225  0065D6  6F88               	movwf	(_calibParam+29)& (0+255),b
 10226                           
 10227                           ; BSR set to: 1
 10228                           ;bme280.c: 224: calibParam.dig_H5 = (((int) paramBuff[5]) << 4) | (paramBuff[4] >> 4);
 10229  0065D8  0100               	movlb	0	; () banked
 10230  0065DA  5187               	movf	(BME280_readFactoryCalibrationParams@paramBuff+5)& (0+255),w,b
 10231  0065DC  6F7F               	movwf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10232  0065DE  6B80               	clrf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10233  0065E0  3B7F               	swapf	??_BME280_readFactoryCalibrationParams& (0+255),f,b
 10234  0065E2  3B80               	swapf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10235  0065E4  0EF0               	movlw	240
 10236  0065E6  1780               	andwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10237  0065E8  517F               	movf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10238  0065EA  0B0F               	andlw	15
 10239  0065EC  1380               	iorwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10240  0065EE  0EF0               	movlw	240
 10241  0065F0  177F               	andwf	??_BME280_readFactoryCalibrationParams& (0+255),f,b
 10242  0065F2  C086  F081         	movff	BME280_readFactoryCalibrationParams@paramBuff+4,??_BME280_readFactoryCalibrationP
      +                          arams+2
 10243  0065F6  3B81               	swapf	(??_BME280_readFactoryCalibrationParams+2)& (0+255),f,b
 10244  0065F8  0E0F               	movlw	15
 10245  0065FA  1781               	andwf	(??_BME280_readFactoryCalibrationParams+2)& (0+255),f,b
 10246  0065FC  5181               	movf	(??_BME280_readFactoryCalibrationParams+2)& (0+255),w,b
 10247  0065FE  117F               	iorwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10248  006600  0101               	movlb	1	; () banked
 10249  006602  6F89               	movwf	(_calibParam+30)& (0+255),b
 10250  006604  0100               	movlb	0	; () banked
 10251  006606  5180               	movf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10252  006608  0101               	movlb	1	; () banked
 10253  00660A  6F8A               	movwf	(_calibParam+31)& (0+255),b
 10254                           
 10255                           ; BSR set to: 1
 10256                           ;bme280.c: 225: calibParam.dig_H6 = (short) paramBuff[6];
 10257  00660C  C088  F18B         	movff	BME280_readFactoryCalibrationParams@paramBuff+6,_calibParam+32
 10258                           
 10259                           ; BSR set to: 1
 10260  006610  0012               	return		;funcret
 10261  006612                     __end_of_BME280_readFactoryCalibrationParams:
 10262                           	opt stack 0
 10263                           tblptru	equ	0xFF8
 10264                           tblptrh	equ	0xFF7
 10265                           tblptrl	equ	0xFF6
 10266                           tablat	equ	0xFF5
 10267                           prodh	equ	0xFF4
 10268                           prodl	equ	0xFF3
 10269                           intcon	equ	0xFF2
 10270                           postinc0	equ	0xFEE
 10271                           wreg	equ	0xFE8
 10272                           indf2	equ	0xFDF
 10273                           postinc2	equ	0xFDE
 10274                           postdec2	equ	0xFDD
 10275                           fsr2h	equ	0xFDA
 10276                           fsr2l	equ	0xFD9
 10277                           status	equ	0xFD8
 10278                           
 10279 ;; *************** function _BME280_initializeSensor *****************
 10280 ;; Defined at:
 10281 ;;		line 258 in file "mcc_generated_files/bme280.c"
 10282 ;; Parameters:    Size  Location     Type
 10283 ;;		None
 10284 ;; Auto vars:     Size  Location     Type
 10285 ;;		None
 10286 ;; Return value:  Size  Location     Type
 10287 ;;                  1    wreg      void 
 10288 ;; Registers used:
 10289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10290 ;; Tracked objects:
 10291 ;;		On entry : 0/0
 10292 ;;		On exit  : 0/0
 10293 ;;		Unchanged: 0/0
 10294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10299 ;;Total ram usage:        0 bytes
 10300 ;; Hardware stack levels used:    1
 10301 ;; Hardware stack levels required when called:   17
 10302 ;; This function calls:
 10303 ;;		_BME280_writeByte
 10304 ;; This function is called by:
 10305 ;;		_Weather_initializeClick
 10306 ;; This function uses a non-reentrant model
 10307 ;;
 10308                           
 10309                           	psect	text28
 10310  00BF5E                     __ptext28:
 10311                           	opt stack 0
 10312  00BF5E                     _BME280_initializeSensor:
 10313                           	opt stack 11
 10314                           
 10315                           ;bme280.c: 260: BME280_writeByte(0xF5, bme280_config.configReg);
 10316                           
 10317                           ; BSR set to: 1
 10318                           ;incstack = 0
 10319  00BF5E  C130  F074         	movff	_bme280_config,BME280_writeByte@data
 10320  00BF62  0EF5               	movlw	245
 10321  00BF64  EC78  F061         	call	_BME280_writeByte
 10322                           
 10323                           ;bme280.c: 261: BME280_writeByte(0xF2, bme280_ctrl_hum);
 10324  00BF68  C12F  F074         	movff	_bme280_ctrl_hum,BME280_writeByte@data
 10325  00BF6C  0EF2               	movlw	242
 10326  00BF6E  EC78  F061         	call	_BME280_writeByte
 10327                           
 10328                           ;bme280.c: 262: BME280_writeByte(0xF4, bme280_ctrl_meas.ctrlMeasReg);
 10329  00BF72  C12E  F074         	movff	_bme280_ctrl_meas,BME280_writeByte@data
 10330  00BF76  0EF4               	movlw	244
 10331  00BF78  EC78  F061         	call	_BME280_writeByte
 10332  00BF7C  0012               	return		;funcret
 10333  00BF7E                     __end_of_BME280_initializeSensor:
 10334                           	opt stack 0
 10335                           tblptru	equ	0xFF8
 10336                           tblptrh	equ	0xFF7
 10337                           tblptrl	equ	0xFF6
 10338                           tablat	equ	0xFF5
 10339                           prodh	equ	0xFF4
 10340                           prodl	equ	0xFF3
 10341                           intcon	equ	0xFF2
 10342                           postinc0	equ	0xFEE
 10343                           wreg	equ	0xFE8
 10344                           indf2	equ	0xFDF
 10345                           postinc2	equ	0xFDE
 10346                           postdec2	equ	0xFDD
 10347                           fsr2h	equ	0xFDA
 10348                           fsr2l	equ	0xFD9
 10349                           status	equ	0xFD8
 10350                           
 10351 ;; *************** function _BME280_startForcedSensing *****************
 10352 ;; Defined at:
 10353 ;;		line 265 in file "mcc_generated_files/bme280.c"
 10354 ;; Parameters:    Size  Location     Type
 10355 ;;		None
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;		None
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  1    wreg      void 
 10360 ;; Registers used:
 10361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;Total ram usage:        0 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:   17
 10374 ;; This function calls:
 10375 ;;		_BME280_writeByte
 10376 ;; This function is called by:
 10377 ;;		_Weather_readSensors
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381                           	psect	text29
 10382  00C282                     __ptext29:
 10383                           	opt stack 0
 10384  00C282                     _BME280_startForcedSensing:
 10385                           	opt stack 12
 10386                           
 10387                           ;bme280.c: 267: bme280_ctrl_meas.mode = 0x01;
 10388                           
 10389                           ;incstack = 0
 10390  00C282  0101               	movlb	1	; () banked
 10391  00C284  512E               	movf	_bme280_ctrl_meas& (0+255),w,b
 10392  00C286  0BFC               	andlw	-4
 10393  00C288  0901               	iorlw	1
 10394  00C28A  6F2E               	movwf	_bme280_ctrl_meas& (0+255),b
 10395                           
 10396                           ; BSR set to: 1
 10397                           ;bme280.c: 268: BME280_writeByte(0xF4, bme280_ctrl_meas.ctrlMeasReg);
 10398  00C28C  C12E  F074         	movff	_bme280_ctrl_meas,BME280_writeByte@data
 10399  00C290  0EF4               	movlw	244
 10400  00C292  EC78  F061         	call	_BME280_writeByte
 10401  00C296  0012               	return		;funcret
 10402  00C298                     __end_of_BME280_startForcedSensing:
 10403                           	opt stack 0
 10404                           tblptru	equ	0xFF8
 10405                           tblptrh	equ	0xFF7
 10406                           tblptrl	equ	0xFF6
 10407                           tablat	equ	0xFF5
 10408                           prodh	equ	0xFF4
 10409                           prodl	equ	0xFF3
 10410                           intcon	equ	0xFF2
 10411                           postinc0	equ	0xFEE
 10412                           wreg	equ	0xFE8
 10413                           indf2	equ	0xFDF
 10414                           postinc2	equ	0xFDE
 10415                           postdec2	equ	0xFDD
 10416                           fsr2h	equ	0xFDA
 10417                           fsr2l	equ	0xFD9
 10418                           status	equ	0xFD8
 10419                           
 10420 ;; *************** function _BME280_writeByte *****************
 10421 ;; Defined at:
 10422 ;;		line 398 in file "mcc_generated_files/bme280.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;  reg_addr        1    wreg     unsigned char 
 10425 ;;  data            1   20[BANK0 ] unsigned char 
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;  reg_addr        1   21[BANK0 ] unsigned char 
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  1    wreg      void 
 10430 ;; Registers used:
 10431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10437 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10440 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;Total ram usage:        2 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; Hardware stack levels required when called:   16
 10444 ;; This function calls:
 10445 ;;		_i2c_write1ByteRegister
 10446 ;; This function is called by:
 10447 ;;		_BME280_reset
 10448 ;;		_BME280_initializeSensor
 10449 ;;		_BME280_startForcedSensing
 10450 ;;		_BME280_sleep
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           	psect	text30
 10455  00C2F0                     __ptext30:
 10456                           	opt stack 0
 10457  00C2F0                     _BME280_writeByte:
 10458                           	opt stack 11
 10459                           
 10460                           ;incstack = 0
 10461                           ;BME280_writeByte@reg_addr stored from wreg
 10462  00C2F0  0100               	movlb	0	; () banked
 10463  00C2F2  6F75               	movwf	BME280_writeByte@reg_addr& (0+255),b
 10464                           
 10465                           ;bme280.c: 400: i2c_write1ByteRegister(0x76, reg_addr, data);
 10466  00C2F4  C075  F071         	movff	BME280_writeByte@reg_addr,i2c_write1ByteRegister@reg
 10467  00C2F8  C074  F072         	movff	BME280_writeByte@data,i2c_write1ByteRegister@data
 10468  00C2FC  0E76               	movlw	118
 10469  00C2FE  ECB6  F054         	call	_i2c_write1ByteRegister
 10470  00C302  0012               	return		;funcret
 10471  00C304                     __end_of_BME280_writeByte:
 10472                           	opt stack 0
 10473                           tblptru	equ	0xFF8
 10474                           tblptrh	equ	0xFF7
 10475                           tblptrl	equ	0xFF6
 10476                           tablat	equ	0xFF5
 10477                           prodh	equ	0xFF4
 10478                           prodl	equ	0xFF3
 10479                           intcon	equ	0xFF2
 10480                           postinc0	equ	0xFEE
 10481                           wreg	equ	0xFE8
 10482                           indf2	equ	0xFDF
 10483                           postinc2	equ	0xFDE
 10484                           postdec2	equ	0xFDD
 10485                           fsr2h	equ	0xFDA
 10486                           fsr2l	equ	0xFD9
 10487                           status	equ	0xFD8
 10488                           
 10489 ;; *************** function _i2c_write1ByteRegister *****************
 10490 ;; Defined at:
 10491 ;;		line 38 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;  address         1    wreg     unsigned char 
 10494 ;;  reg             1   17[BANK0 ] unsigned char 
 10495 ;;  data            1   18[BANK0 ] unsigned char 
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;  address         1   19[BANK0 ] unsigned char 
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      void 
 10500 ;; Registers used:
 10501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10507 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10508 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10510 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10511 ;;Total ram usage:        3 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; Hardware stack levels required when called:   15
 10514 ;; This function calls:
 10515 ;;		_i2c_close
 10516 ;;		_i2c_masterWrite
 10517 ;;		_i2c_open
 10518 ;;		_i2c_setAddressNACKCallback
 10519 ;;		_i2c_setBuffer
 10520 ;;		_i2c_setDataCompleteCallback
 10521 ;; This function is called by:
 10522 ;;		_BME280_writeByte
 10523 ;; This function uses a non-reentrant model
 10524 ;;
 10525                           
 10526                           	psect	text31
 10527  00A96C                     __ptext31:
 10528                           	opt stack 0
 10529  00A96C                     _i2c_write1ByteRegister:
 10530                           	opt stack 11
 10531                           
 10532                           ;incstack = 0
 10533                           ;i2c_write1ByteRegister@address stored from wreg
 10534  00A96C  0100               	movlb	0	; () banked
 10535  00A96E  6F73               	movwf	i2c_write1ByteRegister@address& (0+255),b
 10536  00A970                     
 10537                           ;i2c_simple_master.c: 40: while(!i2c_open(address));
 10538  00A970  0100               	movlb	0	; () banked
 10539  00A972  5173               	movf	i2c_write1ByteRegister@address& (0+255),w,b
 10540  00A974  EC10  F04C         	call	_i2c_open
 10541  00A978  0900               	iorlw	0
 10542  00A97A  B4D8               	btfsc	status,2,c
 10543  00A97C  D7F9               	goto	l23641
 10544                           
 10545                           ;i2c_simple_master.c: 41: i2c_setDataCompleteCallback(wr1RegCompleteHandler,&data);
 10546  00A97E  0E56               	movlw	low _wr1RegCompleteHandler
 10547  00A980  0100               	movlb	0	; () banked
 10548  00A982  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 10549  00A984  0EB9               	movlw	high _wr1RegCompleteHandler
 10550  00A986  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 10551  00A988  0E72               	movlw	low i2c_write1ByteRegister@data
 10552  00A98A  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 10553  00A98C  0E00               	movlw	high i2c_write1ByteRegister@data
 10554  00A98E  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 10555  00A990  EC06  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 10556                           
 10557                           ;i2c_simple_master.c: 42: i2c_setBuffer(&reg,1);
 10558  00A994  0E71               	movlw	low i2c_write1ByteRegister@reg
 10559  00A996  0100               	movlb	0	; () banked
 10560  00A998  6F60               	movwf	i2c_setBuffer@buffer& (0+255),b
 10561  00A99A  0E00               	movlw	high i2c_write1ByteRegister@reg
 10562  00A99C  6F61               	movwf	(i2c_setBuffer@buffer+1)& (0+255),b
 10563  00A99E  0E00               	movlw	0
 10564  00A9A0  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 10565  00A9A2  0E01               	movlw	1
 10566  00A9A4  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 10567  00A9A6  ECD3  F060         	call	_i2c_setBuffer	;wreg free
 10568                           
 10569                           ;i2c_simple_master.c: 43: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 10570  00A9AA  0EBC               	movlw	low _i2c_restartWrite
 10571  00A9AC  0100               	movlb	0	; () banked
 10572  00A9AE  6F65               	movwf	i2c_setAddressNACKCallback@cb& (0+255),b
 10573  00A9B0  0EC6               	movlw	high _i2c_restartWrite
 10574  00A9B2  6F66               	movwf	(i2c_setAddressNACKCallback@cb+1)& (0+255),b
 10575  00A9B4  0E00               	movlw	0
 10576  00A9B6  6F67               	movwf	i2c_setAddressNACKCallback@p& (0+255),b
 10577  00A9B8  0E00               	movlw	0
 10578  00A9BA  6F68               	movwf	(i2c_setAddressNACKCallback@p+1)& (0+255),b
 10579  00A9BC  ECFA  F060         	call	_i2c_setAddressNACKCallback	;wreg free
 10580                           
 10581                           ;i2c_simple_master.c: 44: i2c_masterWrite();
 10582  00A9C0  EC0A  F063         	call	_i2c_masterWrite	;wreg free
 10583  00A9C4  EC1A  F05F         	call	_i2c_close	;wreg free
 10584  00A9C8  06E8               	decf	wreg,f,c
 10585  00A9CA  A4D8               	btfss	status,2,c
 10586  00A9CC  0012               	return	
 10587  00A9CE  D7FA               	goto	l250
 10588  00A9D0                     __end_of_i2c_write1ByteRegister:
 10589                           	opt stack 0
 10590                           tblptru	equ	0xFF8
 10591                           tblptrh	equ	0xFF7
 10592                           tblptrl	equ	0xFF6
 10593                           tablat	equ	0xFF5
 10594                           prodh	equ	0xFF4
 10595                           prodl	equ	0xFF3
 10596                           intcon	equ	0xFF2
 10597                           postinc0	equ	0xFEE
 10598                           wreg	equ	0xFE8
 10599                           indf2	equ	0xFDF
 10600                           postinc2	equ	0xFDE
 10601                           postdec2	equ	0xFDD
 10602                           fsr2h	equ	0xFDA
 10603                           fsr2l	equ	0xFD9
 10604                           status	equ	0xFD8
 10605                           
 10606 ;; *************** function _BME280_readMeasurements *****************
 10607 ;; Defined at:
 10608 ;;		line 277 in file "mcc_generated_files/bme280.c"
 10609 ;; Parameters:    Size  Location     Type
 10610 ;;		None
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;  sensorData      8   44[BANK0 ] unsigned char [8]
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      void 
 10615 ;; Registers used:
 10616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10617 ;; Tracked objects:
 10618 ;;		On entry : 0/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10623 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10624 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10625 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10626 ;;Total ram usage:       21 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:   17
 10629 ;; This function calls:
 10630 ;;		_BME280_readBlock
 10631 ;; This function is called by:
 10632 ;;		_Weather_readSensors
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text32
 10637  007B28                     __ptext32:
 10638                           	opt stack 0
 10639  007B28                     _BME280_readMeasurements:
 10640                           	opt stack 12
 10641                           
 10642                           ;bme280.c: 279: uint8_t sensorData[8];
 10643                           ;bme280.c: 281: BME280_readBlock(0xF7, sensorData, 8);
 10644                           
 10645                           ;incstack = 0
 10646  007B28  0E8C               	movlw	low BME280_readMeasurements@sensorData
 10647  007B2A  0100               	movlb	0	; () banked
 10648  007B2C  6F7B               	movwf	BME280_readBlock@read_buff& (0+255),b
 10649  007B2E  0E00               	movlw	high BME280_readMeasurements@sensorData
 10650  007B30  6F7C               	movwf	(BME280_readBlock@read_buff+1)& (0+255),b
 10651  007B32  0E08               	movlw	8
 10652  007B34  6F7D               	movwf	BME280_readBlock@length& (0+255),b
 10653  007B36  0EF7               	movlw	247
 10654  007B38  ECBF  F05F         	call	_BME280_readBlock
 10655                           
 10656                           ;bme280.c: 283: adc_H = ((uint32_t) sensorData[6] << 8) |
 10657                           ;bme280.c: 284: sensorData[7];
 10658  007B3C  0100               	movlb	0	; () banked
 10659  007B3E  5193               	movf	(BME280_readMeasurements@sensorData+7)& (0+255),w,b
 10660  007B40  C092  F07F         	movff	BME280_readMeasurements@sensorData+6,??_BME280_readMeasurements
 10661  007B44  6B80               	clrf	(??_BME280_readMeasurements+1)& (0+255),b
 10662  007B46  6B81               	clrf	(??_BME280_readMeasurements+2)& (0+255),b
 10663  007B48  6B82               	clrf	(??_BME280_readMeasurements+3)& (0+255),b
 10664  007B4A  C081  F082         	movff	??_BME280_readMeasurements+2,??_BME280_readMeasurements+3
 10665  007B4E  C080  F081         	movff	??_BME280_readMeasurements+1,??_BME280_readMeasurements+2
 10666  007B52  C07F  F080         	movff	??_BME280_readMeasurements,??_BME280_readMeasurements+1
 10667  007B56  6B7F               	clrf	??_BME280_readMeasurements& (0+255),b
 10668  007B58  117F               	iorwf	??_BME280_readMeasurements& (0+255),w,b
 10669  007B5A  0101               	movlb	1	; () banked
 10670  007B5C  6F04               	movwf	_adc_H& (0+255),b
 10671  007B5E  0100               	movlb	0	; () banked
 10672  007B60  5180               	movf	(??_BME280_readMeasurements+1)& (0+255),w,b
 10673  007B62  0101               	movlb	1	; () banked
 10674  007B64  6F05               	movwf	(_adc_H+1)& (0+255),b
 10675  007B66  0100               	movlb	0	; () banked
 10676  007B68  5181               	movf	(??_BME280_readMeasurements+2)& (0+255),w,b
 10677  007B6A  0101               	movlb	1	; () banked
 10678  007B6C  6F06               	movwf	(_adc_H+2)& (0+255),b
 10679  007B6E  0100               	movlb	0	; () banked
 10680  007B70  5182               	movf	(??_BME280_readMeasurements+3)& (0+255),w,b
 10681  007B72  0101               	movlb	1	; () banked
 10682  007B74  6F07               	movwf	(_adc_H+3)& (0+255),b
 10683                           
 10684                           ; BSR set to: 1
 10685                           ;bme280.c: 286: adc_T = ((uint32_t) sensorData[3] << 12) |
 10686                           ;bme280.c: 287: (((uint32_t) sensorData[4] << 4) |
 10687                           ;bme280.c: 288: ((uint32_t) sensorData[5] >> 4));
 10688  007B76  C090  F07F         	movff	BME280_readMeasurements@sensorData+4,??_BME280_readMeasurements
 10689  007B7A  0100               	movlb	0	; () banked
 10690  007B7C  6B80               	clrf	(??_BME280_readMeasurements+1)& (0+255),b
 10691  007B7E  6B81               	clrf	(??_BME280_readMeasurements+2)& (0+255),b
 10692  007B80  6B82               	clrf	(??_BME280_readMeasurements+3)& (0+255),b
 10693  007B82  0E04               	movlw	4
 10694  007B84                     u28785:
 10695  007B84  90D8               	bcf	status,0,c
 10696  007B86  377F               	rlcf	??_BME280_readMeasurements& (0+255),f,b
 10697  007B88  3780               	rlcf	(??_BME280_readMeasurements+1)& (0+255),f,b
 10698  007B8A  3781               	rlcf	(??_BME280_readMeasurements+2)& (0+255),f,b
 10699  007B8C  3782               	rlcf	(??_BME280_readMeasurements+3)& (0+255),f,b
 10700  007B8E  2EE8               	decfsz	wreg,f,c
 10701  007B90  D7F9               	goto	u28785
 10702  007B92  C091  F083         	movff	BME280_readMeasurements@sensorData+5,??_BME280_readMeasurements+4
 10703  007B96  3B83               	swapf	(??_BME280_readMeasurements+4)& (0+255),f,b
 10704  007B98  0E0F               	movlw	15
 10705  007B9A  1783               	andwf	(??_BME280_readMeasurements+4)& (0+255),f,b
 10706  007B9C  5183               	movf	(??_BME280_readMeasurements+4)& (0+255),w,b
 10707  007B9E  117F               	iorwf	??_BME280_readMeasurements& (0+255),w,b
 10708  007BA0  6F84               	movwf	(??_BME280_readMeasurements+5)& (0+255),b
 10709  007BA2  5180               	movf	(??_BME280_readMeasurements+1)& (0+255),w,b
 10710  007BA4  6F85               	movwf	(??_BME280_readMeasurements+6)& (0+255),b
 10711  007BA6  5181               	movf	(??_BME280_readMeasurements+2)& (0+255),w,b
 10712  007BA8  6F86               	movwf	(??_BME280_readMeasurements+7)& (0+255),b
 10713  007BAA  5182               	movf	(??_BME280_readMeasurements+3)& (0+255),w,b
 10714  007BAC  6F87               	movwf	(??_BME280_readMeasurements+8)& (0+255),b
 10715  007BAE  C08F  F088         	movff	BME280_readMeasurements@sensorData+3,??_BME280_readMeasurements+9
 10716  007BB2  6B89               	clrf	(??_BME280_readMeasurements+10)& (0+255),b
 10717  007BB4  6B8A               	clrf	(??_BME280_readMeasurements+11)& (0+255),b
 10718  007BB6  6B8B               	clrf	(??_BME280_readMeasurements+12)& (0+255),b
 10719  007BB8  0E0C               	movlw	12
 10720  007BBA                     u28795:
 10721  007BBA  90D8               	bcf	status,0,c
 10722  007BBC  3788               	rlcf	(??_BME280_readMeasurements+9)& (0+255),f,b
 10723  007BBE  3789               	rlcf	(??_BME280_readMeasurements+10)& (0+255),f,b
 10724  007BC0  378A               	rlcf	(??_BME280_readMeasurements+11)& (0+255),f,b
 10725  007BC2  378B               	rlcf	(??_BME280_readMeasurements+12)& (0+255),f,b
 10726  007BC4  2EE8               	decfsz	wreg,f,c
 10727  007BC6  D7F9               	goto	u28795
 10728  007BC8  5184               	movf	(??_BME280_readMeasurements+5)& (0+255),w,b
 10729  007BCA  1188               	iorwf	(??_BME280_readMeasurements+9)& (0+255),w,b
 10730  007BCC  0101               	movlb	1	; () banked
 10731  007BCE  6F08               	movwf	_adc_T& (0+255),b
 10732  007BD0  0100               	movlb	0	; () banked
 10733  007BD2  5185               	movf	(??_BME280_readMeasurements+6)& (0+255),w,b
 10734  007BD4  1189               	iorwf	(??_BME280_readMeasurements+10)& (0+255),w,b
 10735  007BD6  0101               	movlb	1	; () banked
 10736  007BD8  6F09               	movwf	(_adc_T+1)& (0+255),b
 10737  007BDA  0100               	movlb	0	; () banked
 10738  007BDC  5186               	movf	(??_BME280_readMeasurements+7)& (0+255),w,b
 10739  007BDE  118A               	iorwf	(??_BME280_readMeasurements+11)& (0+255),w,b
 10740  007BE0  0101               	movlb	1	; () banked
 10741  007BE2  6F0A               	movwf	(_adc_T+2)& (0+255),b
 10742  007BE4  0100               	movlb	0	; () banked
 10743  007BE6  5187               	movf	(??_BME280_readMeasurements+8)& (0+255),w,b
 10744  007BE8  118B               	iorwf	(??_BME280_readMeasurements+12)& (0+255),w,b
 10745  007BEA  0101               	movlb	1	; () banked
 10746  007BEC  6F0B               	movwf	(_adc_T+3)& (0+255),b
 10747                           
 10748                           ; BSR set to: 1
 10749                           ;bme280.c: 290: adc_P = ((uint32_t) sensorData[0] << 12) |
 10750                           ;bme280.c: 291: (((uint32_t) sensorData[1] << 4) |
 10751                           ;bme280.c: 292: ((uint32_t) sensorData[2] >> 4));
 10752  007BEE  C08D  F07F         	movff	BME280_readMeasurements@sensorData+1,??_BME280_readMeasurements
 10753  007BF2  0100               	movlb	0	; () banked
 10754  007BF4  6B80               	clrf	(??_BME280_readMeasurements+1)& (0+255),b
 10755  007BF6  6B81               	clrf	(??_BME280_readMeasurements+2)& (0+255),b
 10756  007BF8  6B82               	clrf	(??_BME280_readMeasurements+3)& (0+255),b
 10757  007BFA  0E04               	movlw	4
 10758  007BFC                     u28805:
 10759  007BFC  90D8               	bcf	status,0,c
 10760  007BFE  377F               	rlcf	??_BME280_readMeasurements& (0+255),f,b
 10761  007C00  3780               	rlcf	(??_BME280_readMeasurements+1)& (0+255),f,b
 10762  007C02  3781               	rlcf	(??_BME280_readMeasurements+2)& (0+255),f,b
 10763  007C04  3782               	rlcf	(??_BME280_readMeasurements+3)& (0+255),f,b
 10764  007C06  2EE8               	decfsz	wreg,f,c
 10765  007C08  D7F9               	goto	u28805
 10766  007C0A  C08E  F083         	movff	BME280_readMeasurements@sensorData+2,??_BME280_readMeasurements+4
 10767  007C0E  3B83               	swapf	(??_BME280_readMeasurements+4)& (0+255),f,b
 10768  007C10  0E0F               	movlw	15
 10769  007C12  1783               	andwf	(??_BME280_readMeasurements+4)& (0+255),f,b
 10770  007C14  5183               	movf	(??_BME280_readMeasurements+4)& (0+255),w,b
 10771  007C16  117F               	iorwf	??_BME280_readMeasurements& (0+255),w,b
 10772  007C18  6F84               	movwf	(??_BME280_readMeasurements+5)& (0+255),b
 10773  007C1A  5180               	movf	(??_BME280_readMeasurements+1)& (0+255),w,b
 10774  007C1C  6F85               	movwf	(??_BME280_readMeasurements+6)& (0+255),b
 10775  007C1E  5181               	movf	(??_BME280_readMeasurements+2)& (0+255),w,b
 10776  007C20  6F86               	movwf	(??_BME280_readMeasurements+7)& (0+255),b
 10777  007C22  5182               	movf	(??_BME280_readMeasurements+3)& (0+255),w,b
 10778  007C24  6F87               	movwf	(??_BME280_readMeasurements+8)& (0+255),b
 10779  007C26  C08C  F088         	movff	BME280_readMeasurements@sensorData,??_BME280_readMeasurements+9
 10780  007C2A  6B89               	clrf	(??_BME280_readMeasurements+10)& (0+255),b
 10781  007C2C  6B8A               	clrf	(??_BME280_readMeasurements+11)& (0+255),b
 10782  007C2E  6B8B               	clrf	(??_BME280_readMeasurements+12)& (0+255),b
 10783  007C30  0E0C               	movlw	12
 10784  007C32                     u28815:
 10785  007C32  90D8               	bcf	status,0,c
 10786  007C34  3788               	rlcf	(??_BME280_readMeasurements+9)& (0+255),f,b
 10787  007C36  3789               	rlcf	(??_BME280_readMeasurements+10)& (0+255),f,b
 10788  007C38  378A               	rlcf	(??_BME280_readMeasurements+11)& (0+255),f,b
 10789  007C3A  378B               	rlcf	(??_BME280_readMeasurements+12)& (0+255),f,b
 10790  007C3C  2EE8               	decfsz	wreg,f,c
 10791  007C3E  D7F9               	goto	u28815
 10792  007C40  5184               	movf	(??_BME280_readMeasurements+5)& (0+255),w,b
 10793  007C42  1188               	iorwf	(??_BME280_readMeasurements+9)& (0+255),w,b
 10794  007C44  0102               	movlb	2	; () banked
 10795  007C46  6F00               	movwf	_adc_P& (0+255),b
 10796  007C48  0100               	movlb	0	; () banked
 10797  007C4A  5185               	movf	(??_BME280_readMeasurements+6)& (0+255),w,b
 10798  007C4C  1189               	iorwf	(??_BME280_readMeasurements+10)& (0+255),w,b
 10799  007C4E  0102               	movlb	2	; () banked
 10800  007C50  6F01               	movwf	(_adc_P+1)& (0+255),b
 10801  007C52  0100               	movlb	0	; () banked
 10802  007C54  5186               	movf	(??_BME280_readMeasurements+7)& (0+255),w,b
 10803  007C56  118A               	iorwf	(??_BME280_readMeasurements+11)& (0+255),w,b
 10804  007C58  0102               	movlb	2	; () banked
 10805  007C5A  6F02               	movwf	(_adc_P+2)& (0+255),b
 10806  007C5C  0100               	movlb	0	; () banked
 10807  007C5E  5187               	movf	(??_BME280_readMeasurements+8)& (0+255),w,b
 10808  007C60  118B               	iorwf	(??_BME280_readMeasurements+12)& (0+255),w,b
 10809  007C62  0102               	movlb	2	; () banked
 10810  007C64  6F03               	movwf	(_adc_P+3)& (0+255),b
 10811                           
 10812                           ; BSR set to: 2
 10813  007C66  0012               	return		;funcret
 10814  007C68                     __end_of_BME280_readMeasurements:
 10815                           	opt stack 0
 10816                           tblptru	equ	0xFF8
 10817                           tblptrh	equ	0xFF7
 10818                           tblptrl	equ	0xFF6
 10819                           tablat	equ	0xFF5
 10820                           prodh	equ	0xFF4
 10821                           prodl	equ	0xFF3
 10822                           intcon	equ	0xFF2
 10823                           postinc0	equ	0xFEE
 10824                           wreg	equ	0xFE8
 10825                           indf2	equ	0xFDF
 10826                           postinc2	equ	0xFDE
 10827                           postdec2	equ	0xFDD
 10828                           fsr2h	equ	0xFDA
 10829                           fsr2l	equ	0xFD9
 10830                           status	equ	0xFD8
 10831                           
 10832 ;; *************** function _BME280_readBlock *****************
 10833 ;; Defined at:
 10834 ;;		line 413 in file "mcc_generated_files/bme280.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;  reg_addr        1    wreg     unsigned char 
 10837 ;;  read_buff       2   27[BANK0 ] PTR unsigned char 
 10838 ;;		 -> BME280_readMeasurements@sensorData(8), BME280_readFactoryCalibrationParams@paramBuff(24), 
 10839 ;;  length          1   29[BANK0 ] unsigned char 
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;  reg_addr        1   30[BANK0 ] unsigned char 
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      void 
 10844 ;; Registers used:
 10845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10851 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;Total ram usage:        4 bytes
 10856 ;; Hardware stack levels used:    1
 10857 ;; Hardware stack levels required when called:   16
 10858 ;; This function calls:
 10859 ;;		_i2c_readDataBlock
 10860 ;; This function is called by:
 10861 ;;		_BME280_readFactoryCalibrationParams
 10862 ;;		_BME280_readMeasurements
 10863 ;; This function uses a non-reentrant model
 10864 ;;
 10865                           
 10866                           	psect	text33
 10867  00BF7E                     __ptext33:
 10868                           	opt stack 0
 10869  00BF7E                     _BME280_readBlock:
 10870                           	opt stack 11
 10871                           
 10872                           ; BSR set to: 2
 10873                           ;incstack = 0
 10874                           ;BME280_readBlock@reg_addr stored from wreg
 10875  00BF7E  0100               	movlb	0	; () banked
 10876  00BF80  6F7E               	movwf	BME280_readBlock@reg_addr& (0+255),b
 10877                           
 10878                           ;bme280.c: 415: i2c_readDataBlock(0x76, reg_addr, read_buff, length);
 10879  00BF82  C07E  F071         	movff	BME280_readBlock@reg_addr,i2c_readDataBlock@reg
 10880  00BF86  C07B  F072         	movff	BME280_readBlock@read_buff,i2c_readDataBlock@data
 10881  00BF8A  C07C  F073         	movff	BME280_readBlock@read_buff+1,i2c_readDataBlock@data+1
 10882  00BF8E  C07D  F074         	movff	BME280_readBlock@length,i2c_readDataBlock@len
 10883  00BF92  0100               	movlb	0	; () banked
 10884  00BF94  6B75               	clrf	(i2c_readDataBlock@len+1)& (0+255),b
 10885  00BF96  0E76               	movlw	118
 10886  00BF98  EC2A  F052         	call	_i2c_readDataBlock
 10887  00BF9C  0012               	return		;funcret
 10888  00BF9E                     __end_of_BME280_readBlock:
 10889                           	opt stack 0
 10890                           tblptru	equ	0xFF8
 10891                           tblptrh	equ	0xFF7
 10892                           tblptrl	equ	0xFF6
 10893                           tablat	equ	0xFF5
 10894                           prodh	equ	0xFF4
 10895                           prodl	equ	0xFF3
 10896                           intcon	equ	0xFF2
 10897                           postinc0	equ	0xFEE
 10898                           wreg	equ	0xFE8
 10899                           indf2	equ	0xFDF
 10900                           postinc2	equ	0xFDE
 10901                           postdec2	equ	0xFDD
 10902                           fsr2h	equ	0xFDA
 10903                           fsr2l	equ	0xFD9
 10904                           status	equ	0xFD8
 10905                           
 10906 ;; *************** function _i2c_readDataBlock *****************
 10907 ;; Defined at:
 10908 ;;		line 141 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;  address         1    wreg     unsigned char 
 10911 ;;  reg             1   17[BANK0 ] unsigned char 
 10912 ;;  data            2   18[BANK0 ] PTR void 
 10913 ;;		 -> BME280_readMeasurements@sensorData(8), BME280_readFactoryCalibrationParams@paramBuff(24), 
 10914 ;;  len             2   20[BANK0 ] unsigned int 
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  address         1   22[BANK0 ] unsigned char 
 10917 ;;  d               4   23[BANK0 ] struct .
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  1    wreg      void 
 10920 ;; Registers used:
 10921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10927 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10928 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10930 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10931 ;;Total ram usage:       10 bytes
 10932 ;; Hardware stack levels used:    1
 10933 ;; Hardware stack levels required when called:   15
 10934 ;; This function calls:
 10935 ;;		_i2c_close
 10936 ;;		_i2c_masterWrite
 10937 ;;		_i2c_open
 10938 ;;		_i2c_setAddressNACKCallback
 10939 ;;		_i2c_setBuffer
 10940 ;;		_i2c_setDataCompleteCallback
 10941 ;; This function is called by:
 10942 ;;		_BME280_readBlock
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text34
 10947  00A454                     __ptext34:
 10948                           	opt stack 0
 10949  00A454                     _i2c_readDataBlock:
 10950                           	opt stack 11
 10951                           
 10952                           ;incstack = 0
 10953                           ;i2c_readDataBlock@address stored from wreg
 10954  00A454  0100               	movlb	0	; () banked
 10955  00A456  6F76               	movwf	i2c_readDataBlock@address& (0+255),b
 10956                           
 10957                           ;i2c_simple_master.c: 144: buf_t d;
 10958                           ;i2c_simple_master.c: 145: d.data = data;
 10959  00A458  C072  F079         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 10960  00A45C  C073  F07A         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 10961                           
 10962                           ;i2c_simple_master.c: 146: d.len = len;
 10963  00A460  C074  F077         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 10964  00A464  C075  F078         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 10965  00A468  0100               	movlb	0	; () banked
 10966  00A46A  5176               	movf	i2c_readDataBlock@address& (0+255),w,b
 10967  00A46C  EC10  F04C         	call	_i2c_open
 10968  00A470  0900               	iorlw	0
 10969  00A472  B4D8               	btfsc	status,2,c
 10970  00A474  D7F9               	goto	l307
 10971                           
 10972                           ;i2c_simple_master.c: 149: i2c_setDataCompleteCallback(rdBlkRegCompleteHandler,&d);
 10973  00A476  0E5A               	movlw	low _rdBlkRegCompleteHandler
 10974  00A478  0100               	movlb	0	; () banked
 10975  00A47A  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 10976  00A47C  0EB4               	movlw	high _rdBlkRegCompleteHandler
 10977  00A47E  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 10978  00A480  0E77               	movlw	low i2c_readDataBlock@d
 10979  00A482  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 10980  00A484  0E00               	movlw	high i2c_readDataBlock@d
 10981  00A486  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 10982  00A488  EC06  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 10983                           
 10984                           ;i2c_simple_master.c: 150: i2c_setBuffer(&reg,1);
 10985  00A48C  0E71               	movlw	low i2c_readDataBlock@reg
 10986  00A48E  0100               	movlb	0	; () banked
 10987  00A490  6F60               	movwf	i2c_setBuffer@buffer& (0+255),b
 10988  00A492  0E00               	movlw	high i2c_readDataBlock@reg
 10989  00A494  6F61               	movwf	(i2c_setBuffer@buffer+1)& (0+255),b
 10990  00A496  0E00               	movlw	0
 10991  00A498  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 10992  00A49A  0E01               	movlw	1
 10993  00A49C  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 10994  00A49E  ECD3  F060         	call	_i2c_setBuffer	;wreg free
 10995                           
 10996                           ;i2c_simple_master.c: 151: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 10997  00A4A2  0EBC               	movlw	low _i2c_restartWrite
 10998  00A4A4  0100               	movlb	0	; () banked
 10999  00A4A6  6F65               	movwf	i2c_setAddressNACKCallback@cb& (0+255),b
 11000  00A4A8  0EC6               	movlw	high _i2c_restartWrite
 11001  00A4AA  6F66               	movwf	(i2c_setAddressNACKCallback@cb+1)& (0+255),b
 11002  00A4AC  0E00               	movlw	0
 11003  00A4AE  6F67               	movwf	i2c_setAddressNACKCallback@p& (0+255),b
 11004  00A4B0  0E00               	movlw	0
 11005  00A4B2  6F68               	movwf	(i2c_setAddressNACKCallback@p+1)& (0+255),b
 11006  00A4B4  ECFA  F060         	call	_i2c_setAddressNACKCallback	;wreg free
 11007                           
 11008                           ;i2c_simple_master.c: 152: i2c_masterWrite();
 11009  00A4B8  EC0A  F063         	call	_i2c_masterWrite	;wreg free
 11010  00A4BC  EC1A  F05F         	call	_i2c_close	;wreg free
 11011  00A4C0  06E8               	decf	wreg,f,c
 11012  00A4C2  A4D8               	btfss	status,2,c
 11013  00A4C4  0012               	return	
 11014  00A4C6  D7FA               	goto	l310
 11015  00A4C8                     __end_of_i2c_readDataBlock:
 11016                           	opt stack 0
 11017                           tblptru	equ	0xFF8
 11018                           tblptrh	equ	0xFF7
 11019                           tblptrl	equ	0xFF6
 11020                           tablat	equ	0xFF5
 11021                           prodh	equ	0xFF4
 11022                           prodl	equ	0xFF3
 11023                           intcon	equ	0xFF2
 11024                           postinc0	equ	0xFEE
 11025                           wreg	equ	0xFE8
 11026                           indf2	equ	0xFDF
 11027                           postinc2	equ	0xFDE
 11028                           postdec2	equ	0xFDD
 11029                           fsr2h	equ	0xFDA
 11030                           fsr2l	equ	0xFD9
 11031                           status	equ	0xFD8
 11032                           
 11033 ;; *************** function _BME280_isMeasuring *****************
 11034 ;; Defined at:
 11035 ;;		line 271 in file "mcc_generated_files/bme280.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;		None
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      unsigned char 
 11042 ;; Registers used:
 11043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11053 ;;Total ram usage:        0 bytes
 11054 ;; Hardware stack levels used:    1
 11055 ;; Hardware stack levels required when called:   18
 11056 ;; This function calls:
 11057 ;;		_BME280_getStatus
 11058 ;; This function is called by:
 11059 ;;		_Weather_readSensors
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text35
 11064  00C304                     __ptext35:
 11065                           	opt stack 0
 11066  00C304                     _BME280_isMeasuring:
 11067                           	opt stack 11
 11068                           
 11069                           ;bme280.c: 273: bme280_status.statusReg = BME280_getStatus();
 11070                           
 11071                           ;incstack = 0
 11072  00C304  EC63  F062         	call	_BME280_getStatus	;wreg free
 11073  00C308  0101               	movlb	1	; () banked
 11074  00C30A  6F2D               	movwf	_bme280_status& (0+255),b
 11075                           
 11076                           ; BSR set to: 1
 11077                           ;bme280.c: 274: return (bme280_status.measuring);
 11078  00C30C  A72D               	btfss	_bme280_status& (0+255),3,b
 11079  00C30E  D002               	goto	u28770
 11080  00C310  0E01               	movlw	1
 11081  00C312  0012               	return	
 11082  00C314                     u28770:
 11083  00C314  0E00               	movlw	0
 11084  00C316  0012               	return	
 11085  00C318                     __end_of_BME280_isMeasuring:
 11086                           	opt stack 0
 11087                           tblptru	equ	0xFF8
 11088                           tblptrh	equ	0xFF7
 11089                           tblptrl	equ	0xFF6
 11090                           tablat	equ	0xFF5
 11091                           prodh	equ	0xFF4
 11092                           prodl	equ	0xFF3
 11093                           intcon	equ	0xFF2
 11094                           postinc0	equ	0xFEE
 11095                           wreg	equ	0xFE8
 11096                           indf2	equ	0xFDF
 11097                           postinc2	equ	0xFDE
 11098                           postdec2	equ	0xFDD
 11099                           fsr2h	equ	0xFDA
 11100                           fsr2l	equ	0xFD9
 11101                           status	equ	0xFD8
 11102                           
 11103 ;; *************** function _BME280_getStatus *****************
 11104 ;; Defined at:
 11105 ;;		line 313 in file "mcc_generated_files/bme280.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;		None
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      unsigned char 
 11112 ;; Registers used:
 11113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11123 ;;Total ram usage:        0 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:   17
 11126 ;; This function calls:
 11127 ;;		_BME280_readByte
 11128 ;; This function is called by:
 11129 ;;		_BME280_isMeasuring
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133                           	psect	text36
 11134  00C4C6                     __ptext36:
 11135                           	opt stack 0
 11136  00C4C6                     _BME280_getStatus:
 11137                           	opt stack 11
 11138                           
 11139                           ;bme280.c: 315: bme280_status.statusReg = BME280_readByte(0xF3);
 11140                           
 11141                           ; BSR set to: 1
 11142                           ;incstack = 0
 11143  00C4C6  0EF3               	movlw	243
 11144  00C4C8  EC05  F062         	call	_BME280_readByte
 11145  00C4CC  0101               	movlb	1	; () banked
 11146  00C4CE  6F2D               	movwf	_bme280_status& (0+255),b
 11147                           
 11148                           ; BSR set to: 1
 11149                           ;bme280.c: 316: return bme280_status.statusReg;
 11150  00C4D0  512D               	movf	_bme280_status& (0+255),w,b
 11151  00C4D2  0012               	return	
 11152  00C4D4                     __end_of_BME280_getStatus:
 11153                           	opt stack 0
 11154                           tblptru	equ	0xFF8
 11155                           tblptrh	equ	0xFF7
 11156                           tblptrl	equ	0xFF6
 11157                           tablat	equ	0xFF5
 11158                           prodh	equ	0xFF4
 11159                           prodl	equ	0xFF3
 11160                           intcon	equ	0xFF2
 11161                           postinc0	equ	0xFEE
 11162                           wreg	equ	0xFE8
 11163                           indf2	equ	0xFDF
 11164                           postinc2	equ	0xFDE
 11165                           postdec2	equ	0xFDD
 11166                           fsr2h	equ	0xFDA
 11167                           fsr2l	equ	0xFD9
 11168                           status	equ	0xFD8
 11169                           
 11170 ;; *************** function _BME280_readByte *****************
 11171 ;; Defined at:
 11172 ;;		line 408 in file "mcc_generated_files/bme280.c"
 11173 ;; Parameters:    Size  Location     Type
 11174 ;;  reg_addr        1    wreg     unsigned char 
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;  reg_addr        1   23[BANK0 ] unsigned char 
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      unsigned char 
 11179 ;; Registers used:
 11180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11189 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11190 ;;Total ram usage:        1 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; Hardware stack levels required when called:   16
 11193 ;; This function calls:
 11194 ;;		_i2c_read1ByteRegister
 11195 ;; This function is called by:
 11196 ;;		_BME280_readFactoryCalibrationParams
 11197 ;;		_BME280_getStatus
 11198 ;;		_BME280_getID
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text37
 11203  00C40A                     __ptext37:
 11204                           	opt stack 0
 11205  00C40A                     _BME280_readByte:
 11206                           	opt stack 11
 11207                           
 11208                           ; BSR set to: 1
 11209                           ;incstack = 0
 11210                           ;BME280_readByte@reg_addr stored from wreg
 11211  00C40A  0100               	movlb	0	; () banked
 11212  00C40C  6F77               	movwf	BME280_readByte@reg_addr& (0+255),b
 11213                           
 11214                           ;bme280.c: 410: return i2c_read1ByteRegister(0x76, reg_addr);
 11215  00C40E  C077  F071         	movff	BME280_readByte@reg_addr,i2c_read1ByteRegister@reg
 11216  00C412  0E76               	movlw	118
 11217  00C414  ECF2  F04D         	call	_i2c_read1ByteRegister
 11218  00C418  0012               	return	
 11219  00C41A                     __end_of_BME280_readByte:
 11220                           	opt stack 0
 11221                           tblptru	equ	0xFF8
 11222                           tblptrh	equ	0xFF7
 11223                           tblptrl	equ	0xFF6
 11224                           tablat	equ	0xFF5
 11225                           prodh	equ	0xFF4
 11226                           prodl	equ	0xFF3
 11227                           intcon	equ	0xFF2
 11228                           postinc0	equ	0xFEE
 11229                           wreg	equ	0xFE8
 11230                           indf2	equ	0xFDF
 11231                           postinc2	equ	0xFDE
 11232                           postdec2	equ	0xFDD
 11233                           fsr2h	equ	0xFDA
 11234                           fsr2l	equ	0xFD9
 11235                           status	equ	0xFD8
 11236                           
 11237 ;; *************** function _i2c_read1ByteRegister *****************
 11238 ;; Defined at:
 11239 ;;		line 65 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;  address         1    wreg     unsigned char 
 11242 ;;  reg             1   17[BANK0 ] unsigned char 
 11243 ;; Auto vars:     Size  Location     Type
 11244 ;;  address         1   18[BANK0 ] unsigned char 
 11245 ;;  x               2   20[BANK0 ] int 
 11246 ;;  d2              1   22[BANK0 ] unsigned char 
 11247 ;;  e               1   19[BANK0 ] enum E92
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  1    wreg      unsigned char 
 11250 ;; Registers used:
 11251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11257 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11258 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11260 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11261 ;;Total ram usage:        6 bytes
 11262 ;; Hardware stack levels used:    1
 11263 ;; Hardware stack levels required when called:   15
 11264 ;; This function calls:
 11265 ;;		_i2c_close
 11266 ;;		_i2c_masterWrite
 11267 ;;		_i2c_open
 11268 ;;		_i2c_setAddressNACKCallback
 11269 ;;		_i2c_setBuffer
 11270 ;;		_i2c_setDataCompleteCallback
 11271 ;; This function is called by:
 11272 ;;		_BME280_readByte
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	text38
 11277  009BE4                     __ptext38:
 11278                           	opt stack 0
 11279  009BE4                     _i2c_read1ByteRegister:
 11280                           	opt stack 11
 11281                           
 11282                           ;incstack = 0
 11283                           ;i2c_read1ByteRegister@address stored from wreg
 11284  009BE4  0100               	movlb	0	; () banked
 11285  009BE6  6F72               	movwf	i2c_read1ByteRegister@address& (0+255),b
 11286                           
 11287                           ;i2c_simple_master.c: 67: uint8_t d2=42;
 11288  009BE8  0E2A               	movlw	42
 11289  009BEA  0100               	movlb	0	; () banked
 11290  009BEC  6F76               	movwf	i2c_read1ByteRegister@d2& (0+255),b
 11291                           
 11292                           ;i2c_simple_master.c: 68: i2c_error_t e;
 11293                           ;i2c_simple_master.c: 69: int x;
 11294                           ;i2c_simple_master.c: 71: for(x = 2; x != 0; x--)
 11295  009BEE  0E00               	movlw	0
 11296  009BF0  6F75               	movwf	(i2c_read1ByteRegister@x+1)& (0+255),b
 11297  009BF2  0E02               	movlw	2
 11298  009BF4  6F74               	movwf	i2c_read1ByteRegister@x& (0+255),b
 11299                           
 11300                           ; BSR set to: 0
 11301  009BF6  5174               	movf	i2c_read1ByteRegister@x& (0+255),w,b
 11302  009BF8  1175               	iorwf	(i2c_read1ByteRegister@x+1)& (0+255),w,b
 11303  009BFA  B4D8               	btfsc	status,2,c
 11304  009BFC  D03B               	goto	u28610
 11305  009BFE                     
 11306                           ; BSR set to: 0
 11307                           
 11308                           ; BSR set to: 0
 11309                           
 11310                           ; BSR set to: 0
 11311                           ;i2c_simple_master.c: 72: {
 11312                           ;i2c_simple_master.c: 73: while(!i2c_open(address));
 11313  009BFE  0100               	movlb	0	; () banked
 11314  009C00  5172               	movf	i2c_read1ByteRegister@address& (0+255),w,b
 11315  009C02  EC10  F04C         	call	_i2c_open
 11316  009C06  0900               	iorlw	0
 11317  009C08  B4D8               	btfsc	status,2,c
 11318  009C0A  D7F9               	goto	l267
 11319                           
 11320                           ;i2c_simple_master.c: 74: i2c_setDataCompleteCallback(rd1RegCompleteHandler,&d2);
 11321  009C0C  0E26               	movlw	low _rd1RegCompleteHandler
 11322  009C0E  0100               	movlb	0	; () banked
 11323  009C10  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 11324  009C12  0EB9               	movlw	high _rd1RegCompleteHandler
 11325  009C14  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 11326  009C16  0E76               	movlw	low i2c_read1ByteRegister@d2
 11327  009C18  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 11328  009C1A  0E00               	movlw	high i2c_read1ByteRegister@d2
 11329  009C1C  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 11330  009C1E  EC06  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 11331                           
 11332                           ;i2c_simple_master.c: 75: i2c_setBuffer(&reg,1);
 11333  009C22  0E71               	movlw	low i2c_read1ByteRegister@reg
 11334  009C24  0100               	movlb	0	; () banked
 11335  009C26  6F60               	movwf	i2c_setBuffer@buffer& (0+255),b
 11336  009C28  0E00               	movlw	high i2c_read1ByteRegister@reg
 11337  009C2A  6F61               	movwf	(i2c_setBuffer@buffer+1)& (0+255),b
 11338  009C2C  0E00               	movlw	0
 11339  009C2E  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 11340  009C30  0E01               	movlw	1
 11341  009C32  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 11342  009C34  ECD3  F060         	call	_i2c_setBuffer	;wreg free
 11343                           
 11344                           ;i2c_simple_master.c: 76: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 11345  009C38  0EBC               	movlw	low _i2c_restartWrite
 11346  009C3A  0100               	movlb	0	; () banked
 11347  009C3C  6F65               	movwf	i2c_setAddressNACKCallback@cb& (0+255),b
 11348  009C3E  0EC6               	movlw	high _i2c_restartWrite
 11349  009C40  6F66               	movwf	(i2c_setAddressNACKCallback@cb+1)& (0+255),b
 11350  009C42  0E00               	movlw	0
 11351  009C44  6F67               	movwf	i2c_setAddressNACKCallback@p& (0+255),b
 11352  009C46  0E00               	movlw	0
 11353  009C48  6F68               	movwf	(i2c_setAddressNACKCallback@p+1)& (0+255),b
 11354  009C4A  ECFA  F060         	call	_i2c_setAddressNACKCallback	;wreg free
 11355                           
 11356                           ;i2c_simple_master.c: 77: i2c_masterWrite();
 11357  009C4E  EC0A  F063         	call	_i2c_masterWrite	;wreg free
 11358  009C52  EC1A  F05F         	call	_i2c_close	;wreg free
 11359  009C56  0100               	movlb	0	; () banked
 11360  009C58  6F73               	movwf	i2c_read1ByteRegister@e& (0+255),b
 11361  009C5A  0573               	decf	i2c_read1ByteRegister@e& (0+255),w,b
 11362  009C5C  B4D8               	btfsc	status,2,c
 11363  009C5E  D7F9               	goto	l273
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;i2c_simple_master.c: 79: if(e==I2C_NOERR) break;
 11367                           
 11368                           ; BSR set to: 0
 11369  009C60  5173               	movf	i2c_read1ByteRegister@e& (0+255),w,b
 11370  009C62  B4D8               	btfsc	status,2,c
 11371  009C64  D007               	goto	u28610
 11372                           
 11373                           ; BSR set to: 0
 11374                           
 11375                           ; BSR set to: 0
 11376                           
 11377                           ; BSR set to: 0
 11378  009C66  0774               	decf	i2c_read1ByteRegister@x& (0+255),f,b
 11379  009C68  A0D8               	btfss	status,0,c
 11380  009C6A  0775               	decf	(i2c_read1ByteRegister@x+1)& (0+255),f,b
 11381                           
 11382                           ; BSR set to: 0
 11383  009C6C  5174               	movf	i2c_read1ByteRegister@x& (0+255),w,b
 11384  009C6E  1175               	iorwf	(i2c_read1ByteRegister@x+1)& (0+255),w,b
 11385  009C70  A4D8               	btfss	status,2,c
 11386  009C72  D7C5               	goto	l267
 11387  009C74                     u28610:
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;i2c_simple_master.c: 80: }
 11391                           ;i2c_simple_master.c: 83: return d2;
 11392                           
 11393                           ; BSR set to: 0
 11394  009C74  5176               	movf	i2c_read1ByteRegister@d2& (0+255),w,b
 11395  009C76  0012               	return	
 11396  009C78                     __end_of_i2c_read1ByteRegister:
 11397                           	opt stack 0
 11398                           tblptru	equ	0xFF8
 11399                           tblptrh	equ	0xFF7
 11400                           tblptrl	equ	0xFF6
 11401                           tablat	equ	0xFF5
 11402                           prodh	equ	0xFF4
 11403                           prodl	equ	0xFF3
 11404                           intcon	equ	0xFF2
 11405                           postinc0	equ	0xFEE
 11406                           wreg	equ	0xFE8
 11407                           indf2	equ	0xFDF
 11408                           postinc2	equ	0xFDE
 11409                           postdec2	equ	0xFDD
 11410                           fsr2h	equ	0xFDA
 11411                           fsr2l	equ	0xFD9
 11412                           status	equ	0xFD8
 11413                           
 11414 ;; *************** function _i2c_setAddressNACKCallback *****************
 11415 ;; Defined at:
 11416 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
 11417 ;; Parameters:    Size  Location     Type
 11418 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 11419 ;;		 -> i2c_restartWrite(1), 
 11420 ;;  p               2    7[BANK0 ] PTR void 
 11421 ;;		 -> NULL(0), 
 11422 ;; Auto vars:     Size  Location     Type
 11423 ;;		None
 11424 ;; Return value:  Size  Location     Type
 11425 ;;                  1    wreg      void 
 11426 ;; Registers used:
 11427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11428 ;; Tracked objects:
 11429 ;;		On entry : 0/0
 11430 ;;		On exit  : 0/0
 11431 ;;		Unchanged: 0/0
 11432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11433 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11436 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11437 ;;Total ram usage:        4 bytes
 11438 ;; Hardware stack levels used:    1
 11439 ;; Hardware stack levels required when called:    8
 11440 ;; This function calls:
 11441 ;;		_setCallBack
 11442 ;; This function is called by:
 11443 ;;		_i2c_write1ByteRegister
 11444 ;;		_i2c_read1ByteRegister
 11445 ;;		_i2c_readDataBlock
 11446 ;;		_i2c_writeNBytes
 11447 ;;		_i2c_read2ByteRegister
 11448 ;;		_i2c_write2ByteRegister
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           	psect	text39
 11453  00C1F4                     __ptext39:
 11454                           	opt stack 0
 11455  00C1F4                     _i2c_setAddressNACKCallback:
 11456                           	opt stack 17
 11457                           
 11458                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;incstack = 0
 11462  00C1F4  C065  F060         	movff	i2c_setAddressNACKCallback@cb,setCallBack@cb
 11463  00C1F8  C066  F061         	movff	i2c_setAddressNACKCallback@cb+1,setCallBack@cb+1
 11464  00C1FC  C067  F062         	movff	i2c_setAddressNACKCallback@p,setCallBack@p
 11465  00C200  C068  F063         	movff	i2c_setAddressNACKCallback@p+1,setCallBack@p+1
 11466  00C204  0E02               	movlw	2
 11467  00C206  EC9D  F052         	call	_setCallBack
 11468  00C20A  0012               	return		;funcret
 11469  00C20C                     __end_of_i2c_setAddressNACKCallback:
 11470                           	opt stack 0
 11471                           tblptru	equ	0xFF8
 11472                           tblptrh	equ	0xFF7
 11473                           tblptrl	equ	0xFF6
 11474                           tablat	equ	0xFF5
 11475                           prodh	equ	0xFF4
 11476                           prodl	equ	0xFF3
 11477                           intcon	equ	0xFF2
 11478                           postinc0	equ	0xFEE
 11479                           wreg	equ	0xFE8
 11480                           indf2	equ	0xFDF
 11481                           postinc2	equ	0xFDE
 11482                           postdec2	equ	0xFDD
 11483                           fsr2h	equ	0xFDA
 11484                           fsr2l	equ	0xFD9
 11485                           status	equ	0xFD8
 11486                           
 11487 ;; *************** function _i2c_open *****************
 11488 ;; Defined at:
 11489 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;  address         1    wreg     unsigned char 
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;  address         1    2[BANK0 ] unsigned char 
 11494 ;;  ret             1    3[BANK0 ] enum E7166
 11495 ;; Return value:  Size  Location     Type
 11496 ;;                  1    wreg      enum E7166
 11497 ;; Registers used:
 11498 ;;		wreg, status,2, status,0, cstack
 11499 ;; Tracked objects:
 11500 ;;		On entry : 0/0
 11501 ;;		On exit  : 0/0
 11502 ;;		Unchanged: 0/0
 11503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11505 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11507 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11508 ;;Total ram usage:        2 bytes
 11509 ;; Hardware stack levels used:    1
 11510 ;; Hardware stack levels required when called:    8
 11511 ;; This function calls:
 11512 ;;		_i2c1_driver_open
 11513 ;;		_i2c1_driver_setBusCollisionISR
 11514 ;;		_i2c1_driver_setI2cISR
 11515 ;;		_mssp1_clearIRQ
 11516 ;; This function is called by:
 11517 ;;		_i2c_write1ByteRegister
 11518 ;;		_i2c_read1ByteRegister
 11519 ;;		_i2c_readDataBlock
 11520 ;;		_i2c_writeNBytes
 11521 ;;		_i2c_read2ByteRegister
 11522 ;;		_i2c_write2ByteRegister
 11523 ;;		_i2c_readNBytes
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           	psect	text40
 11528  009820                     __ptext40:
 11529                           	opt stack 0
 11530  009820                     _i2c_open:
 11531                           	opt stack 17
 11532                           
 11533                           ;incstack = 0
 11534                           ;i2c_open@address stored from wreg
 11535  009820  0100               	movlb	0	; () banked
 11536  009822  6F62               	movwf	i2c_open@address& (0+255),b
 11537                           
 11538                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 11539  009824  0E01               	movlw	1
 11540  009826  0100               	movlb	0	; () banked
 11541  009828  6F63               	movwf	i2c_open@ret& (0+255),b
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 11545  00982A  0103               	movlb	3	; () banked
 11546  00982C  B3A0               	btfsc	_i2c_status& (0+255),1,b
 11547  00982E  D049               	goto	l88
 11548                           
 11549                           ; BSR set to: 3
 11550                           ;i2c_master.c: 121: {
 11551                           ;i2c_master.c: 122: i2c_status.address = address;
 11552  009830  C062  F3A1         	movff	i2c_open@address,_i2c_status+1
 11553                           
 11554                           ; BSR set to: 3
 11555                           ;i2c_master.c: 123: i2c_status.busy = 0;
 11556  009834  91A0               	bcf	_i2c_status& (0+255),0,b
 11557                           
 11558                           ; BSR set to: 3
 11559                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 11560  009836  83A0               	bsf	_i2c_status& (0+255),1,b
 11561                           
 11562                           ; BSR set to: 3
 11563                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 11564  009838  97A0               	bcf	_i2c_status& (0+255),3,b
 11565                           
 11566                           ; BSR set to: 3
 11567                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 11568  00983A  0E0E               	movlw	14
 11569  00983C  6FAA               	movwf	(_i2c_status+10)& (0+255),b
 11570                           
 11571                           ; BSR set to: 3
 11572                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 11573  00983E  0E01               	movlw	1
 11574  009840  6FA9               	movwf	(_i2c_status+9)& (0+255),b
 11575  009842  0EF4               	movlw	244
 11576  009844  6FA8               	movwf	(_i2c_status+8)& (0+255),b
 11577                           
 11578                           ; BSR set to: 3
 11579                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 11580  009846  85A0               	bsf	_i2c_status& (0+255),2,b
 11581                           
 11582                           ; BSR set to: 3
 11583                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 11584  009848  0EB8               	movlw	low _returnStop
 11585  00984A  6FAC               	movwf	(_i2c_status+12)& (0+255),b
 11586  00984C  0EC6               	movlw	high _returnStop
 11587  00984E  6FAD               	movwf	(_i2c_status+13)& (0+255),b
 11588                           
 11589                           ; BSR set to: 3
 11590                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 11591  009850  0E00               	movlw	0
 11592  009852  6FB8               	movwf	(_i2c_status+24)& (0+255),b
 11593  009854  0E00               	movlw	0
 11594  009856  6FB9               	movwf	(_i2c_status+25)& (0+255),b
 11595                           
 11596                           ; BSR set to: 3
 11597                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 11598  009858  0EB8               	movlw	low _returnStop
 11599  00985A  6FAE               	movwf	(_i2c_status+14)& (0+255),b
 11600  00985C  0EC6               	movlw	high _returnStop
 11601  00985E  6FAF               	movwf	(_i2c_status+15)& (0+255),b
 11602                           
 11603                           ; BSR set to: 3
 11604                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 11605  009860  0E00               	movlw	0
 11606  009862  6FBA               	movwf	(_i2c_status+26)& (0+255),b
 11607  009864  0E00               	movlw	0
 11608  009866  6FBB               	movwf	(_i2c_status+27)& (0+255),b
 11609                           
 11610                           ; BSR set to: 3
 11611                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 11612  009868  0EB8               	movlw	low _returnStop
 11613  00986A  6FB0               	movwf	(_i2c_status+16)& (0+255),b
 11614  00986C  0EC6               	movlw	high _returnStop
 11615  00986E  6FB1               	movwf	(_i2c_status+17)& (0+255),b
 11616                           
 11617                           ; BSR set to: 3
 11618                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 11619  009870  0E00               	movlw	0
 11620  009872  6FBC               	movwf	(_i2c_status+28)& (0+255),b
 11621  009874  0E00               	movlw	0
 11622  009876  6FBD               	movwf	(_i2c_status+29)& (0+255),b
 11623                           
 11624                           ; BSR set to: 3
 11625                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 11626  009878  0EB8               	movlw	low _returnStop
 11627  00987A  6FB2               	movwf	(_i2c_status+18)& (0+255),b
 11628  00987C  0EC6               	movlw	high _returnStop
 11629  00987E  6FB3               	movwf	(_i2c_status+19)& (0+255),b
 11630                           
 11631                           ; BSR set to: 3
 11632                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 11633  009880  0E00               	movlw	0
 11634  009882  6FBE               	movwf	(_i2c_status+30)& (0+255),b
 11635  009884  0E00               	movlw	0
 11636  009886  6FBF               	movwf	(_i2c_status+31)& (0+255),b
 11637                           
 11638                           ; BSR set to: 3
 11639                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 11640  009888  0EB4               	movlw	low _returnReset
 11641  00988A  6FB4               	movwf	(_i2c_status+20)& (0+255),b
 11642  00988C  0EC6               	movlw	high _returnReset
 11643  00988E  6FB5               	movwf	(_i2c_status+21)& (0+255),b
 11644                           
 11645                           ; BSR set to: 3
 11646                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 11647  009890  0E00               	movlw	0
 11648  009892  6FC0               	movwf	(_i2c_status+32)& (0+255),b
 11649  009894  0E00               	movlw	0
 11650  009896  6FC1               	movwf	(_i2c_status+33)& (0+255),b
 11651                           
 11652                           ; BSR set to: 3
 11653                           ;i2c_master.c: 142: i2c1_driver_open();
 11654  009898  EC4C  F061         	call	_i2c1_driver_open	;wreg free
 11655                           
 11656                           ;i2c_master.c: 143: mssp1_clearIRQ();
 11657  00989C  EC68  F063         	call	_mssp1_clearIRQ	;wreg free
 11658                           
 11659                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 11660  0098A0  0E00               	movlw	0
 11661  0098A2  0100               	movlb	0	; () banked
 11662  0098A4  6F60               	movwf	i2c1_driver_setBusCollisionISR@handler& (0+255),b
 11663  0098A6  0E00               	movlw	0
 11664  0098A8  6F61               	movwf	(i2c1_driver_setBusCollisionISR@handler+1)& (0+255),b
 11665  0098AA  ECA1  F062         	call	_i2c1_driver_setBusCollisionISR	;wreg free
 11666                           
 11667                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 11668  0098AE  0E2C               	movlw	low _i2c_ISR
 11669  0098B0  0100               	movlb	0	; () banked
 11670  0098B2  6F60               	movwf	i2c1_driver_setI2cISR@handler& (0+255),b
 11671  0098B4  0EAD               	movlw	high _i2c_ISR
 11672  0098B6  6F61               	movwf	(i2c1_driver_setI2cISR@handler+1)& (0+255),b
 11673  0098B8  EC9C  F062         	call	_i2c1_driver_setI2cISR	;wreg free
 11674                           
 11675                           ;i2c_master.c: 151: ret = I2C_NOERR;
 11676  0098BC  0E00               	movlw	0
 11677  0098BE  0100               	movlb	0	; () banked
 11678  0098C0  6F63               	movwf	i2c_open@ret& (0+255),b
 11679  0098C2                     l88:
 11680                           
 11681                           ;i2c_master.c: 152: }
 11682                           ;i2c_master.c: 153: return ret;
 11683                           
 11684                           ; BSR set to: 0
 11685  0098C2  0100               	movlb	0	; () banked
 11686  0098C4  5163               	movf	i2c_open@ret& (0+255),w,b
 11687  0098C6  0012               	return	
 11688  0098C8                     __end_of_i2c_open:
 11689                           	opt stack 0
 11690                           tblptru	equ	0xFF8
 11691                           tblptrh	equ	0xFF7
 11692                           tblptrl	equ	0xFF6
 11693                           tablat	equ	0xFF5
 11694                           prodh	equ	0xFF4
 11695                           prodl	equ	0xFF3
 11696                           intcon	equ	0xFF2
 11697                           postinc0	equ	0xFEE
 11698                           wreg	equ	0xFE8
 11699                           indf2	equ	0xFDF
 11700                           postinc2	equ	0xFDE
 11701                           postdec2	equ	0xFDD
 11702                           fsr2h	equ	0xFDA
 11703                           fsr2l	equ	0xFD9
 11704                           status	equ	0xFD8
 11705                           
 11706 ;; *************** function _i2c1_driver_setI2cISR *****************
 11707 ;; Defined at:
 11708 ;;		line 263 in file "mcc_generated_files/i2c1_driver.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;  handler         2    0[BANK0 ] PTR FTN()void 
 11711 ;;		 -> i2c_ISR(1), 
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;		None
 11714 ;; Return value:  Size  Location     Type
 11715 ;;                  1    wreg      void 
 11716 ;; Registers used:
 11717 ;;		wreg, status,2, status,0
 11718 ;; Tracked objects:
 11719 ;;		On entry : 0/0
 11720 ;;		On exit  : 0/0
 11721 ;;		Unchanged: 0/0
 11722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11723 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;Total ram usage:        2 bytes
 11728 ;; Hardware stack levels used:    1
 11729 ;; Hardware stack levels required when called:    7
 11730 ;; This function calls:
 11731 ;;		Nothing
 11732 ;; This function is called by:
 11733 ;;		_i2c_open
 11734 ;; This function uses a non-reentrant model
 11735 ;;
 11736                           
 11737                           	psect	text41
 11738  00C538                     __ptext41:
 11739                           	opt stack 0
 11740  00C538                     _i2c1_driver_setI2cISR:
 11741                           	opt stack 17
 11742                           
 11743                           ;i2c1_driver.c: 264: i2c1_driver_i2cISR = handler;
 11744                           
 11745                           ; BSR set to: 0
 11746                           ;incstack = 0
 11747  00C538  C060  F126         	movff	i2c1_driver_setI2cISR@handler,_i2c1_driver_i2cISR
 11748  00C53C  C061  F127         	movff	i2c1_driver_setI2cISR@handler+1,_i2c1_driver_i2cISR+1
 11749  00C540  0012               	return		;funcret
 11750  00C542                     __end_of_i2c1_driver_setI2cISR:
 11751                           	opt stack 0
 11752                           tblptru	equ	0xFF8
 11753                           tblptrh	equ	0xFF7
 11754                           tblptrl	equ	0xFF6
 11755                           tablat	equ	0xFF5
 11756                           prodh	equ	0xFF4
 11757                           prodl	equ	0xFF3
 11758                           intcon	equ	0xFF2
 11759                           postinc0	equ	0xFEE
 11760                           wreg	equ	0xFE8
 11761                           indf2	equ	0xFDF
 11762                           postinc2	equ	0xFDE
 11763                           postdec2	equ	0xFDD
 11764                           fsr2h	equ	0xFDA
 11765                           fsr2l	equ	0xFD9
 11766                           status	equ	0xFD8
 11767                           
 11768 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 11769 ;; Defined at:
 11770 ;;		line 259 in file "mcc_generated_files/i2c1_driver.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  handler         2    0[BANK0 ] PTR FTN()void 
 11773 ;;		 -> i2c_busCollisionISR(1), 
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;		None
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  1    wreg      void 
 11778 ;; Registers used:
 11779 ;;		wreg, status,2, status,0
 11780 ;; Tracked objects:
 11781 ;;		On entry : 0/0
 11782 ;;		On exit  : 0/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11785 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11788 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;Total ram usage:        2 bytes
 11790 ;; Hardware stack levels used:    1
 11791 ;; Hardware stack levels required when called:    7
 11792 ;; This function calls:
 11793 ;;		Nothing
 11794 ;; This function is called by:
 11795 ;;		_i2c_open
 11796 ;; This function uses a non-reentrant model
 11797 ;;
 11798                           
 11799                           	psect	text42
 11800  00C542                     __ptext42:
 11801                           	opt stack 0
 11802  00C542                     _i2c1_driver_setBusCollisionISR:
 11803                           	opt stack 17
 11804                           
 11805                           ;i2c1_driver.c: 260: i2c1_driver_busCollisionISR = handler;
 11806                           
 11807                           ;incstack = 0
 11808  00C542  C060  F128         	movff	i2c1_driver_setBusCollisionISR@handler,_i2c1_driver_busCollisionISR
 11809  00C546  C061  F129         	movff	i2c1_driver_setBusCollisionISR@handler+1,_i2c1_driver_busCollisionISR+1
 11810  00C54A  0012               	return		;funcret
 11811  00C54C                     __end_of_i2c1_driver_setBusCollisionISR:
 11812                           	opt stack 0
 11813                           tblptru	equ	0xFF8
 11814                           tblptrh	equ	0xFF7
 11815                           tblptrl	equ	0xFF6
 11816                           tablat	equ	0xFF5
 11817                           prodh	equ	0xFF4
 11818                           prodl	equ	0xFF3
 11819                           intcon	equ	0xFF2
 11820                           postinc0	equ	0xFEE
 11821                           wreg	equ	0xFE8
 11822                           indf2	equ	0xFDF
 11823                           postinc2	equ	0xFDE
 11824                           postdec2	equ	0xFDD
 11825                           fsr2h	equ	0xFDA
 11826                           fsr2l	equ	0xFD9
 11827                           status	equ	0xFD8
 11828                           
 11829 ;; *************** function _i2c1_driver_open *****************
 11830 ;; Defined at:
 11831 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 11832 ;; Parameters:    Size  Location     Type
 11833 ;;		None
 11834 ;; Auto vars:     Size  Location     Type
 11835 ;;		None
 11836 ;; Return value:  Size  Location     Type
 11837 ;;		None               void
 11838 ;; Registers used:
 11839 ;;		wreg, status,2
 11840 ;; Tracked objects:
 11841 ;;		On entry : 0/0
 11842 ;;		On exit  : 0/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11849 ;;Total ram usage:        0 bytes
 11850 ;; Hardware stack levels used:    1
 11851 ;; Hardware stack levels required when called:    7
 11852 ;; This function calls:
 11853 ;;		Nothing
 11854 ;; This function is called by:
 11855 ;;		_i2c_open
 11856 ;; This function uses a non-reentrant model
 11857 ;;
 11858                           
 11859                           	psect	text43
 11860  00C298                     __ptext43:
 11861                           	opt stack 0
 11862  00C298                     _i2c1_driver_open:
 11863                           	opt stack 17
 11864                           
 11865                           ;i2c1_driver.c: 86: if(!SSP1CON1bits.SSPEN)
 11866                           
 11867                           ;incstack = 0
 11868  00C298  BAC6               	btfsc	4038,5,c	;volatile
 11869  00C29A  0012               	return	
 11870                           
 11871                           ;i2c1_driver.c: 87: {
 11872                           ;i2c1_driver.c: 88: SSP1STAT = 0x00;
 11873  00C29C  0E00               	movlw	0
 11874  00C29E  6EC7               	movwf	4039,c	;volatile
 11875                           
 11876                           ;i2c1_driver.c: 89: SSP1CON1 = 0x28;
 11877  00C2A0  0E28               	movlw	40
 11878  00C2A2  6EC6               	movwf	4038,c	;volatile
 11879                           
 11880                           ;i2c1_driver.c: 90: SSP1CON2 = 0x00;
 11881  00C2A4  0E00               	movlw	0
 11882  00C2A6  6EC5               	movwf	4037,c	;volatile
 11883                           
 11884                           ;i2c1_driver.c: 91: SSP1ADD = 0x27;
 11885  00C2A8  0E27               	movlw	39
 11886  00C2AA  6EC8               	movwf	4040,c	;volatile
 11887                           
 11888                           ;i2c1_driver.c: 94: else
 11889                           ;i2c1_driver.c: 95: return 0;
 11890                           ;	Return value of _i2c1_driver_open is never used
 11891                           
 11892                           ;i2c1_driver.c: 93: }
 11893                           
 11894                           ;i2c1_driver.c: 92: return 1;
 11895                           ;	Return value of _i2c1_driver_open is never used
 11896  00C2AC  0012               	return	
 11897  00C2AE                     __end_of_i2c1_driver_open:
 11898                           	opt stack 0
 11899                           tblptru	equ	0xFF8
 11900                           tblptrh	equ	0xFF7
 11901                           tblptrl	equ	0xFF6
 11902                           tablat	equ	0xFF5
 11903                           prodh	equ	0xFF4
 11904                           prodl	equ	0xFF3
 11905                           intcon	equ	0xFF2
 11906                           postinc0	equ	0xFEE
 11907                           wreg	equ	0xFE8
 11908                           indf2	equ	0xFDF
 11909                           postinc2	equ	0xFDE
 11910                           postdec2	equ	0xFDD
 11911                           fsr2h	equ	0xFDA
 11912                           fsr2l	equ	0xFD9
 11913                           status	equ	0xFD8
 11914                           
 11915 ;; *************** function _i2c_masterWrite *****************
 11916 ;; Defined at:
 11917 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
 11918 ;; Parameters:    Size  Location     Type
 11919 ;;		None
 11920 ;; Auto vars:     Size  Location     Type
 11921 ;;		None
 11922 ;; Return value:  Size  Location     Type
 11923 ;;                  1    wreg      enum E7166
 11924 ;; Registers used:
 11925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11926 ;; Tracked objects:
 11927 ;;		On entry : 0/0
 11928 ;;		On exit  : 0/0
 11929 ;;		Unchanged: 0/0
 11930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11935 ;;Total ram usage:        0 bytes
 11936 ;; Hardware stack levels used:    1
 11937 ;; Hardware stack levels required when called:   14
 11938 ;; This function calls:
 11939 ;;		_i2c_masterOperation
 11940 ;; This function is called by:
 11941 ;;		_i2c_write1ByteRegister
 11942 ;;		_i2c_read1ByteRegister
 11943 ;;		_i2c_readDataBlock
 11944 ;;		_i2c_writeNBytes
 11945 ;;		_i2c_read2ByteRegister
 11946 ;;		_i2c_write2ByteRegister
 11947 ;; This function uses a non-reentrant model
 11948 ;;
 11949                           
 11950                           	psect	text44
 11951  00C614                     __ptext44:
 11952                           	opt stack 0
 11953  00C614                     _i2c_masterWrite:
 11954                           	opt stack 11
 11955                           
 11956                           ;i2c_master.c: 224: return i2c_masterOperation(0);
 11957                           ;	Return value of _i2c_masterWrite is never used
 11958                           
 11959                           ;incstack = 0
 11960  00C614  0E00               	movlw	0
 11961  00C616  ECBC  F05B         	call	_i2c_masterOperation
 11962  00C61A  0012               	return	
 11963  00C61C                     __end_of_i2c_masterWrite:
 11964                           	opt stack 0
 11965                           tblptru	equ	0xFF8
 11966                           tblptrh	equ	0xFF7
 11967                           tblptrl	equ	0xFF6
 11968                           tablat	equ	0xFF5
 11969                           prodh	equ	0xFF4
 11970                           prodl	equ	0xFF3
 11971                           intcon	equ	0xFF2
 11972                           postinc0	equ	0xFEE
 11973                           wreg	equ	0xFE8
 11974                           indf2	equ	0xFDF
 11975                           postinc2	equ	0xFDE
 11976                           postdec2	equ	0xFDD
 11977                           fsr2h	equ	0xFDA
 11978                           fsr2l	equ	0xFD9
 11979                           status	equ	0xFD8
 11980                           
 11981 ;; *************** function _i2c_masterOperation *****************
 11982 ;; Defined at:
 11983 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 11984 ;; Parameters:    Size  Location     Type
 11985 ;;  read            1    wreg     unsigned char 
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;  read            1   15[BANK0 ] unsigned char 
 11988 ;;  ret             1   16[BANK0 ] enum E7166
 11989 ;; Return value:  Size  Location     Type
 11990 ;;                  1    wreg      enum E7166
 11991 ;; Registers used:
 11992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11993 ;; Tracked objects:
 11994 ;;		On entry : 0/0
 11995 ;;		On exit  : 0/0
 11996 ;;		Unchanged: 0/0
 11997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11999 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12001 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12002 ;;Total ram usage:        2 bytes
 12003 ;; Hardware stack levels used:    1
 12004 ;; Hardware stack levels required when called:   13
 12005 ;; This function calls:
 12006 ;;		_i2c1_driver_start
 12007 ;;		_i2c_poller
 12008 ;;		_mssp1_IRQisEnabled
 12009 ;; This function is called by:
 12010 ;;		_i2c_masterWrite
 12011 ;;		_i2c_masterRead
 12012 ;; This function uses a non-reentrant model
 12013 ;;
 12014                           
 12015                           	psect	text45
 12016  00B778                     __ptext45:
 12017                           	opt stack 0
 12018  00B778                     _i2c_masterOperation:
 12019                           	opt stack 11
 12020                           
 12021                           ;incstack = 0
 12022                           ;i2c_masterOperation@read stored from wreg
 12023  00B778  0100               	movlb	0	; () banked
 12024  00B77A  6F6F               	movwf	i2c_masterOperation@read& (0+255),b
 12025                           
 12026                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 12027  00B77C  0E01               	movlw	1
 12028  00B77E  0100               	movlb	0	; () banked
 12029  00B780  6F70               	movwf	i2c_masterOperation@ret& (0+255),b
 12030                           
 12031                           ; BSR set to: 0
 12032                           ;i2c_master.c: 196: if(!i2c_status.busy)
 12033  00B782  0103               	movlb	3	; () banked
 12034  00B784  B1A0               	btfsc	_i2c_status& (0+255),0,b
 12035  00B786  D013               	goto	l109
 12036                           
 12037                           ; BSR set to: 3
 12038                           ;i2c_master.c: 197: {
 12039                           ;i2c_master.c: 198: i2c_status.busy = 1;
 12040  00B788  81A0               	bsf	_i2c_status& (0+255),0,b
 12041                           
 12042                           ; BSR set to: 3
 12043                           ;i2c_master.c: 199: ret = I2C_NOERR;
 12044  00B78A  0E00               	movlw	0
 12045  00B78C  0100               	movlb	0	; () banked
 12046  00B78E  6F70               	movwf	i2c_masterOperation@ret& (0+255),b
 12047                           
 12048                           ; BSR set to: 0
 12049                           ;i2c_master.c: 201: if(read)
 12050  00B790  516F               	movf	i2c_masterOperation@read& (0+255),w,b
 12051  00B792  B4D8               	btfsc	status,2,c
 12052  00B794  D002               	goto	l107
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;i2c_master.c: 202: {
 12056                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 12057  00B796  0E01               	movlw	1
 12058  00B798  D001               	goto	L2
 12059  00B79A                     l107:
 12060                           
 12061                           ;i2c_master.c: 205: else
 12062                           ;i2c_master.c: 206: {
 12063                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 12064                           
 12065                           ; BSR set to: 3
 12066  00B79A  0E02               	movlw	2
 12067  00B79C                     L2:
 12068  00B79C  0103               	movlb	3	; () banked
 12069  00B79E  6FAA               	movwf	(_i2c_status+10)& (0+255),b
 12070                           
 12071                           ; BSR set to: 3
 12072                           ;i2c_master.c: 208: }
 12073                           ;i2c_master.c: 209: i2c1_driver_start();
 12074                           
 12075                           ; BSR set to: 3
 12076  00B7A0  EC64  F063         	call	_i2c1_driver_start	;wreg free
 12077                           
 12078                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 12079  00B7A4  EC8C  F061         	call	_mssp1_IRQisEnabled	;wreg free
 12080  00B7A8  A0D8               	btfss	status,0,c
 12081                           
 12082                           ;i2c_master.c: 212: i2c_poller();
 12083  00B7AA  EC9B  F060         	call	_i2c_poller	;wreg free
 12084  00B7AE                     l109:
 12085                           
 12086                           ;i2c_master.c: 213: }
 12087                           ;i2c_master.c: 214: return ret;
 12088  00B7AE  0100               	movlb	0	; () banked
 12089  00B7B0  5170               	movf	i2c_masterOperation@ret& (0+255),w,b
 12090  00B7B2  0012               	return	
 12091  00B7B4                     __end_of_i2c_masterOperation:
 12092                           	opt stack 0
 12093                           tblptru	equ	0xFF8
 12094                           tblptrh	equ	0xFF7
 12095                           tblptrl	equ	0xFF6
 12096                           tablat	equ	0xFF5
 12097                           prodh	equ	0xFF4
 12098                           prodl	equ	0xFF3
 12099                           intcon	equ	0xFF2
 12100                           postinc0	equ	0xFEE
 12101                           wreg	equ	0xFE8
 12102                           indf2	equ	0xFDF
 12103                           postinc2	equ	0xFDE
 12104                           postdec2	equ	0xFDD
 12105                           fsr2h	equ	0xFDA
 12106                           fsr2l	equ	0xFD9
 12107                           status	equ	0xFD8
 12108                           
 12109 ;; *************** function _mssp1_IRQisEnabled *****************
 12110 ;; Defined at:
 12111 ;;		line 44 in file "mcc_generated_files/i2c1_driver.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;		None
 12114 ;; Auto vars:     Size  Location     Type
 12115 ;;		None
 12116 ;; Return value:  Size  Location     Type
 12117 ;;		None               void
 12118 ;; Registers used:
 12119 ;;		wreg, status,0
 12120 ;; Tracked objects:
 12121 ;;		On entry : 0/0
 12122 ;;		On exit  : 0/0
 12123 ;;		Unchanged: 0/0
 12124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12127 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12128 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12129 ;;Total ram usage:        1 bytes
 12130 ;; Hardware stack levels used:    1
 12131 ;; Hardware stack levels required when called:    7
 12132 ;; This function calls:
 12133 ;;		Nothing
 12134 ;; This function is called by:
 12135 ;;		_i2c_masterOperation
 12136 ;; This function uses a non-reentrant model
 12137 ;;
 12138                           
 12139                           	psect	text46
 12140  00C318                     __ptext46:
 12141                           	opt stack 0
 12142  00C318                     _mssp1_IRQisEnabled:
 12143                           	opt stack 16
 12144                           
 12145                           ;i2c1_driver.c: 46: return PIE1bits.SSP1IE;
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;incstack = 0
 12149  00C318  A69D               	btfss	3997,3,c	;volatile
 12150  00C31A  D004               	goto	u10380
 12151  00C31C  0100               	movlb	0	; () banked
 12152  00C31E  6B60               	clrf	??_mssp1_IRQisEnabled& (0+255),b
 12153  00C320  2B60               	incf	??_mssp1_IRQisEnabled& (0+255),f,b
 12154  00C322  D002               	goto	u10388
 12155  00C324                     u10380:
 12156  00C324  0100               	movlb	0	; () banked
 12157  00C326  6B60               	clrf	??_mssp1_IRQisEnabled& (0+255),b
 12158  00C328                     u10388:
 12159  00C328  3160               	rrcf	??_mssp1_IRQisEnabled& (0+255),w,b
 12160  00C32A  0012               	return	
 12161  00C32C                     __end_of_mssp1_IRQisEnabled:
 12162                           	opt stack 0
 12163                           tblptru	equ	0xFF8
 12164                           tblptrh	equ	0xFF7
 12165                           tblptrl	equ	0xFF6
 12166                           tablat	equ	0xFF5
 12167                           prodh	equ	0xFF4
 12168                           prodl	equ	0xFF3
 12169                           intcon	equ	0xFF2
 12170                           postinc0	equ	0xFEE
 12171                           wreg	equ	0xFE8
 12172                           indf2	equ	0xFDF
 12173                           postinc2	equ	0xFDE
 12174                           postdec2	equ	0xFDD
 12175                           fsr2h	equ	0xFDA
 12176                           fsr2l	equ	0xFD9
 12177                           status	equ	0xFD8
 12178                           
 12179 ;; *************** function _i2c_poller *****************
 12180 ;; Defined at:
 12181 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;		None
 12184 ;; Auto vars:     Size  Location     Type
 12185 ;;		None
 12186 ;; Return value:  Size  Location     Type
 12187 ;;                  1    wreg      void 
 12188 ;; Registers used:
 12189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12190 ;; Tracked objects:
 12191 ;;		On entry : 0/0
 12192 ;;		On exit  : 0/0
 12193 ;;		Unchanged: 0/0
 12194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12199 ;;Total ram usage:        0 bytes
 12200 ;; Hardware stack levels used:    1
 12201 ;; Hardware stack levels required when called:   12
 12202 ;; This function calls:
 12203 ;;		_i2c_ISR
 12204 ;;		_mssp1_waitForEvent
 12205 ;; This function is called by:
 12206 ;;		_i2c_masterOperation
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text47
 12211  00C136                     __ptext47:
 12212                           	opt stack 0
 12213  00C136                     _i2c_poller:
 12214                           	opt stack 11
 12215                           
 12216                           ;i2c_master.c: 232: while(i2c_status.busy)
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;incstack = 0
 12220  00C136  D009               	goto	l119
 12221  00C138                     
 12222                           ;i2c_master.c: 233: {
 12223                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 12224  00C138  0E00               	movlw	0
 12225  00C13A  0100               	movlb	0	; () banked
 12226  00C13C  6F60               	movwf	mssp1_waitForEvent@timeout& (0+255),b
 12227  00C13E  0E00               	movlw	0
 12228  00C140  6F61               	movwf	(mssp1_waitForEvent@timeout+1)& (0+255),b
 12229  00C142  ECC7  F061         	call	_mssp1_waitForEvent	;wreg free
 12230                           
 12231                           ;i2c_master.c: 235: i2c_ISR();
 12232  00C146  EC96  F056         	call	_i2c_ISR	;wreg free
 12233  00C14A                     l119:
 12234  00C14A  0103               	movlb	3	; () banked
 12235  00C14C  A1A0               	btfss	_i2c_status& (0+255),0,b
 12236  00C14E  0012               	return	
 12237  00C150  D7F3               	goto	l120
 12238  00C152                     __end_of_i2c_poller:
 12239                           	opt stack 0
 12240                           tblptru	equ	0xFF8
 12241                           tblptrh	equ	0xFF7
 12242                           tblptrl	equ	0xFF6
 12243                           tablat	equ	0xFF5
 12244                           prodh	equ	0xFF4
 12245                           prodl	equ	0xFF3
 12246                           intcon	equ	0xFF2
 12247                           postinc0	equ	0xFEE
 12248                           wreg	equ	0xFE8
 12249                           indf2	equ	0xFDF
 12250                           postinc2	equ	0xFDE
 12251                           postdec2	equ	0xFDD
 12252                           fsr2h	equ	0xFDA
 12253                           fsr2l	equ	0xFD9
 12254                           status	equ	0xFD8
 12255                           
 12256 ;; *************** function _mssp1_waitForEvent *****************
 12257 ;; Defined at:
 12258 ;;		line 69 in file "mcc_generated_files/i2c1_driver.c"
 12259 ;; Parameters:    Size  Location     Type
 12260 ;;  timeout         2    0[BANK0 ] PTR unsigned int 
 12261 ;;		 -> NULL(0), 
 12262 ;; Auto vars:     Size  Location     Type
 12263 ;;		None
 12264 ;; Return value:  Size  Location     Type
 12265 ;;                  1    wreg      void 
 12266 ;; Registers used:
 12267 ;;		wreg
 12268 ;; Tracked objects:
 12269 ;;		On entry : 0/0
 12270 ;;		On exit  : 0/0
 12271 ;;		Unchanged: 0/0
 12272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12276 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12277 ;;Total ram usage:        2 bytes
 12278 ;; Hardware stack levels used:    1
 12279 ;; Hardware stack levels required when called:    7
 12280 ;; This function calls:
 12281 ;;		Nothing
 12282 ;; This function is called by:
 12283 ;;		_i2c_poller
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           	psect	text48
 12288  00C38E                     __ptext48:
 12289                           	opt stack 0
 12290  00C38E                     _mssp1_waitForEvent:
 12291                           	opt stack 15
 12292                           
 12293                           ;i2c1_driver.c: 74: if(PIR1bits.SSP1IF == 0)
 12294                           
 12295                           ; BSR set to: 3
 12296                           ;incstack = 0
 12297  00C38E  B69E               	btfsc	3998,3,c	;volatile
 12298  00C390  0012               	return	
 12299  00C392                     u9830:
 12300                           
 12301                           ;i2c1_driver.c: 77: {
 12302                           ;i2c1_driver.c: 78: if(PIR1bits.SSP1IF) break;
 12303                           
 12304                           ;i2c1_driver.c: 75: {
 12305                           ;i2c1_driver.c: 76: while(1)
 12306  00C392  B69E               	btfsc	3998,3,c	;volatile
 12307  00C394  0012               	return	
 12308                           
 12309                           ;i2c1_driver.c: 79: _delay((unsigned long)((100)*(16000000/4000000.0)));
 12310  00C396  0E85               	movlw	133
 12311  00C398                     u29127:
 12312  00C398  2EE8               	decfsz	wreg,f,c
 12313  00C39A  D7FE               	bra	u29127
 12314  00C39C  F000               	nop	
 12315  00C39E  D7F9               	goto	u9830
 12316  00C3A0                     __end_of_mssp1_waitForEvent:
 12317                           	opt stack 0
 12318                           tblptru	equ	0xFF8
 12319                           tblptrh	equ	0xFF7
 12320                           tblptrl	equ	0xFF6
 12321                           tablat	equ	0xFF5
 12322                           prodh	equ	0xFF4
 12323                           prodl	equ	0xFF3
 12324                           intcon	equ	0xFF2
 12325                           postinc0	equ	0xFEE
 12326                           wreg	equ	0xFE8
 12327                           indf2	equ	0xFDF
 12328                           postinc2	equ	0xFDE
 12329                           postdec2	equ	0xFDD
 12330                           fsr2h	equ	0xFDA
 12331                           fsr2l	equ	0xFD9
 12332                           status	equ	0xFD8
 12333                           
 12334 ;; *************** function _i2c_ISR *****************
 12335 ;; Defined at:
 12336 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 12337 ;; Parameters:    Size  Location     Type
 12338 ;;		None
 12339 ;; Auto vars:     Size  Location     Type
 12340 ;;		None
 12341 ;; Return value:  Size  Location     Type
 12342 ;;                  1    wreg      void 
 12343 ;; Registers used:
 12344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12345 ;; Tracked objects:
 12346 ;;		On entry : 0/0
 12347 ;;		On exit  : 0/0
 12348 ;;		Unchanged: 0/0
 12349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12352 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12354 ;;Total ram usage:        2 bytes
 12355 ;; Hardware stack levels used:    1
 12356 ;; Hardware stack levels required when called:   11
 12357 ;; This function calls:
 12358 ;;		_do_I2C_DO_ACK
 12359 ;;		_do_I2C_DO_ADDRESS_NACK
 12360 ;;		_do_I2C_DO_NACK_RESTART
 12361 ;;		_do_I2C_DO_NACK_STOP
 12362 ;;		_do_I2C_IDLE
 12363 ;;		_do_I2C_RCEN
 12364 ;;		_do_I2C_RESET
 12365 ;;		_do_I2C_RX
 12366 ;;		_do_I2C_SEND_ADR_READ
 12367 ;;		_do_I2C_SEND_ADR_WRITE
 12368 ;;		_do_I2C_SEND_RESTART
 12369 ;;		_do_I2C_SEND_RESTART_READ
 12370 ;;		_do_I2C_SEND_RESTART_WRITE
 12371 ;;		_do_I2C_SEND_STOP
 12372 ;;		_do_I2C_TX
 12373 ;;		_do_I2C_TX_EMPTY
 12374 ;;		_i2c1_driver_isNACK
 12375 ;;		_mssp1_clearIRQ
 12376 ;; This function is called by:
 12377 ;;		_i2c_open
 12378 ;;		_i2c_poller
 12379 ;; This function uses a non-reentrant model
 12380 ;;
 12381                           
 12382                           	psect	text49
 12383  00AD2C                     __ptext49:
 12384                           	opt stack 0
 12385  00AD2C                     _i2c_ISR:
 12386                           	opt stack 11
 12387                           
 12388                           ;i2c_master.c: 421: mssp1_clearIRQ();
 12389                           
 12390                           ;incstack = 0
 12391  00AD2C  EC68  F063         	call	_mssp1_clearIRQ	;wreg free
 12392                           
 12393                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 12394  00AD30  0103               	movlb	3	; () banked
 12395  00AD32  A7A0               	btfss	_i2c_status& (0+255),3,b
 12396  00AD34  D007               	goto	l209
 12397                           
 12398                           ; BSR set to: 3
 12399  00AD36  EC96  F061         	call	_i2c1_driver_isNACK	;wreg free
 12400  00AD3A  A0D8               	btfss	status,0,c
 12401  00AD3C  D003               	goto	l209
 12402                           
 12403                           ;i2c_master.c: 428: {
 12404                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 12405  00AD3E  0E0F               	movlw	15
 12406  00AD40  0103               	movlb	3	; () banked
 12407  00AD42  6FAA               	movwf	(_i2c_status+10)& (0+255),b
 12408  00AD44                     l209:
 12409                           
 12410                           ;i2c_master.c: 430: }
 12411                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 12412                           
 12413                           ; BSR set to: 3
 12414  00AD44  0103               	movlb	3	; () banked
 12415  00AD46  51AA               	movf	(_i2c_status+10)& (0+255),w,b
 12416  00AD48  0D02               	mullw	2
 12417  00AD4A  0E6F               	movlw	low _fsmStateTable
 12418  00AD4C  24F3               	addwf	prodl,w,c
 12419  00AD4E  6EF6               	movwf	tblptrl,c
 12420  00AD50  0EFE               	movlw	high _fsmStateTable
 12421  00AD52  20F4               	addwfc	prodh,w,c
 12422  00AD54  6EF7               	movwf	tblptrh,c
 12423  00AD56                     	if	1	;There are 3 active tblptr bytes
 12424  00AD56  6AF8               	clrf	tblptru,c
 12425  00AD58  0E00               	movlw	low (__mediumconst shr (0+16))
 12426  00AD5A  22F8               	addwfc	tblptru,f,c
 12427  00AD5C                     	endif
 12428  00AD5C  0009               	tblrd		*+
 12429  00AD5E  CFF5 F06D          	movff	tablat,??_i2c_ISR
 12430  00AD62  0009               	tblrd		*+
 12431  00AD64  CFF5 F06E          	movff	tablat,??_i2c_ISR+1
 12432  00AD68  D801               	call	u28498
 12433  00AD6A  D00A               	goto	u28499
 12434  00AD6C                     u28498:
 12435  00AD6C  0005               	push	
 12436  00AD6E  6EFA               	movwf	pclath,c
 12437  00AD70  0100               	movlb	0	; () banked
 12438  00AD72  516D               	movf	??_i2c_ISR& (0+255),w,b
 12439  00AD74  6EFD               	movwf	tosl,c
 12440  00AD76  516E               	movf	(??_i2c_ISR+1)& (0+255),w,b
 12441  00AD78  6EFE               	movwf	tosh,c
 12442  00AD7A  6AFF               	clrf	tosu,c
 12443  00AD7C  50FA               	movf	pclath,w,c
 12444  00AD7E  0012               	return		;indir
 12445  00AD80                     u28499:
 12446  00AD80  0103               	movlb	3	; () banked
 12447  00AD82  6FAA               	movwf	(_i2c_status+10)& (0+255),b
 12448                           
 12449                           ; BSR set to: 3
 12450  00AD84  0012               	return		;funcret
 12451  00AD86                     __end_of_i2c_ISR:
 12452                           	opt stack 0
 12453                           tosu	equ	0xFFF
 12454                           tosh	equ	0xFFE
 12455                           tosl	equ	0xFFD
 12456                           pclath	equ	0xFFA
 12457                           tblptru	equ	0xFF8
 12458                           tblptrh	equ	0xFF7
 12459                           tblptrl	equ	0xFF6
 12460                           tablat	equ	0xFF5
 12461                           prodh	equ	0xFF4
 12462                           prodl	equ	0xFF3
 12463                           intcon	equ	0xFF2
 12464                           postinc0	equ	0xFEE
 12465                           wreg	equ	0xFE8
 12466                           indf2	equ	0xFDF
 12467                           postinc2	equ	0xFDE
 12468                           postdec2	equ	0xFDD
 12469                           fsr2h	equ	0xFDA
 12470                           fsr2l	equ	0xFD9
 12471                           status	equ	0xFD8
 12472                           
 12473 ;; *************** function _do_I2C_RX *****************
 12474 ;; Defined at:
 12475 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 12476 ;; Parameters:    Size  Location     Type
 12477 ;;		None
 12478 ;; Auto vars:     Size  Location     Type
 12479 ;;		None
 12480 ;; Return value:  Size  Location     Type
 12481 ;;                  1    wreg      enum E7338
 12482 ;; Registers used:
 12483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12484 ;; Tracked objects:
 12485 ;;		On entry : 0/0
 12486 ;;		On exit  : 0/0
 12487 ;;		Unchanged: 0/0
 12488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12493 ;;Total ram usage:        0 bytes
 12494 ;; Hardware stack levels used:    1
 12495 ;; Hardware stack levels required when called:   10
 12496 ;; This function calls:
 12497 ;;		Absolute function
 12498 ;;		_do_I2C_DO_NACK_RESTART
 12499 ;;		_do_I2C_DO_NACK_STOP
 12500 ;;		_i2c1_driver_getRXData
 12501 ;;		_i2c1_driver_sendACK
 12502 ;;		_i2c_restartWrite
 12503 ;;		_rd1RegCompleteHandler
 12504 ;;		_rd2RegCompleteHandler
 12505 ;;		_rdBlkRegCompleteHandler
 12506 ;;		_returnReset
 12507 ;;		_returnStop
 12508 ;;		_wr1RegCompleteHandler
 12509 ;;		_wr2RegCompleteHandler
 12510 ;; This function is called by:
 12511 ;;		_i2c_ISR
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           	psect	text50
 12516  00A61E                     __ptext50:
 12517                           	opt stack 0
 12518  00A61E                     _do_I2C_RX:
 12519                           	opt stack 11
 12520                           
 12521                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 12522                           
 12523                           ; BSR set to: 3
 12524                           ;incstack = 0
 12525  00A61E  EC56  F063         	call	_i2c1_driver_getRXData	;wreg free
 12526  00A622  C3A2  FFD9         	movff	_i2c_status+2,fsr2l
 12527  00A626  C3A3  FFDA         	movff	_i2c_status+3,fsr2h
 12528  00A62A  6EDF               	movwf	indf2,c
 12529  00A62C  0103               	movlb	3	; () banked
 12530  00A62E  4BA2               	infsnz	(_i2c_status+2)& (0+255),f,b
 12531  00A630  2BA3               	incf	(_i2c_status+3)& (0+255),f,b
 12532                           
 12533                           ; BSR set to: 3
 12534                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 12535  00A632  07A4               	decf	(_i2c_status+4)& (0+255),f,b
 12536  00A634  A0D8               	btfss	status,0,c
 12537  00A636  07A5               	decf	(_i2c_status+5)& (0+255),f,b
 12538  00A638  51A4               	movf	(_i2c_status+4)& (0+255),w,b
 12539  00A63A  11A5               	iorwf	(_i2c_status+5)& (0+255),w,b
 12540  00A63C  B4D8               	btfsc	status,2,c
 12541  00A63E  D004               	goto	l185
 12542                           
 12543                           ; BSR set to: 3
 12544                           ;i2c_master.c: 361: {
 12545                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 12546  00A640  EC39  F063         	call	_i2c1_driver_sendACK	;wreg free
 12547                           
 12548                           ;i2c_master.c: 363: return I2C_RCEN;
 12549  00A644  0E05               	movlw	5
 12550                           
 12551                           ;i2c_master.c: 364: }
 12552  00A646  0012               	return	
 12553  00A648                     l185:
 12554                           
 12555                           ; BSR set to: 3
 12556                           ;i2c_master.c: 365: else
 12557                           ;i2c_master.c: 366: {
 12558                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 12559  00A648  85A0               	bsf	_i2c_status& (0+255),2,b
 12560                           
 12561                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 12562  00A64A  D006               	goto	l188
 12563  00A64C                     
 12564                           ;i2c_master.c: 371: case i2c_restart_read:
 12565                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 12566                           
 12567                           ; BSR set to: 3
 12568                           
 12569                           ; BSR set to: 3
 12570  00A64C  EC0E  F063         	call	_do_I2C_DO_NACK_RESTART	;wreg free
 12571  00A650  0012               	return	
 12572  00A652                     
 12573                           ;i2c_master.c: 375: case i2c_stop:
 12574                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 12575                           
 12576                           ;i2c_master.c: 374: case i2c_continue:
 12577  00A652  EC12  F063         	call	_do_I2C_DO_NACK_STOP	;wreg free
 12578                           
 12579                           ;i2c_master.c: 377: }
 12580  00A656  0012               	return	
 12581  00A658                     l188:
 12582  00A658  C3B8  F069         	movff	_i2c_status+24,rdBlkRegCompleteHandler@p
 12583  00A65C  C3B9  F06A         	movff	_i2c_status+25,rdBlkRegCompleteHandler@p+1
 12584  00A660  D801               	call	u28458
 12585  00A662  D00A               	goto	u28459
 12586  00A664                     u28458:
 12587  00A664  0005               	push	
 12588  00A666  6EFA               	movwf	pclath,c
 12589  00A668  0103               	movlb	3	; () banked
 12590  00A66A  51AC               	movf	(_i2c_status+12)& (0+255),w,b
 12591  00A66C  6EFD               	movwf	tosl,c
 12592  00A66E  51AD               	movf	(_i2c_status+13)& (0+255),w,b
 12593  00A670  6EFE               	movwf	tosh,c
 12594  00A672  6AFF               	clrf	tosu,c
 12595  00A674  50FA               	movf	pclath,w,c
 12596  00A676  0012               	return		;indir
 12597  00A678                     u28459:
 12598                           
 12599                           ; Switch size 1, requested type "space"
 12600                           ; Number of cases is 4, Range of values is 1 to 4
 12601                           ; switch strategies available:
 12602                           ; Name         Instructions Cycles
 12603                           ; simple_byte           13     7 (average)
 12604                           ;	Chosen strategy is simple_byte
 12605  00A678  0A01               	xorlw	1	; case 1
 12606  00A67A  B4D8               	btfsc	status,2,c
 12607  00A67C  D7EA               	goto	l191
 12608  00A67E  0A03               	xorlw	3	; case 2
 12609  00A680  B4D8               	btfsc	status,2,c
 12610  00A682  D7E4               	goto	l189
 12611  00A684  0A01               	xorlw	1	; case 3
 12612  00A686  B4D8               	btfsc	status,2,c
 12613  00A688  D7E1               	goto	l189
 12614  00A68A  0A07               	xorlw	7	; case 4
 12615  00A68C  D7E2               	goto	l191
 12616  00A68E                     __end_of_do_I2C_RX:
 12617                           	opt stack 0
 12618                           tosu	equ	0xFFF
 12619                           tosh	equ	0xFFE
 12620                           tosl	equ	0xFFD
 12621                           pclath	equ	0xFFA
 12622                           tblptru	equ	0xFF8
 12623                           tblptrh	equ	0xFF7
 12624                           tblptrl	equ	0xFF6
 12625                           tablat	equ	0xFF5
 12626                           prodh	equ	0xFF4
 12627                           prodl	equ	0xFF3
 12628                           intcon	equ	0xFF2
 12629                           postinc0	equ	0xFEE
 12630                           wreg	equ	0xFE8
 12631                           indf2	equ	0xFDF
 12632                           postinc2	equ	0xFDE
 12633                           postdec2	equ	0xFDD
 12634                           fsr2h	equ	0xFDA
 12635                           fsr2l	equ	0xFD9
 12636                           status	equ	0xFD8
 12637                           
 12638 ;; *************** function _do_I2C_TX *****************
 12639 ;; Defined at:
 12640 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 12641 ;; Parameters:    Size  Location     Type
 12642 ;;		None
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;		None
 12645 ;; Return value:  Size  Location     Type
 12646 ;;                  1    wreg      enum E7338
 12647 ;; Registers used:
 12648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12649 ;; Tracked objects:
 12650 ;;		On entry : 0/0
 12651 ;;		On exit  : 0/0
 12652 ;;		Unchanged: 0/0
 12653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12655 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12657 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12658 ;;Total ram usage:        2 bytes
 12659 ;; Hardware stack levels used:    1
 12660 ;; Hardware stack levels required when called:   10
 12661 ;; This function calls:
 12662 ;;		Absolute function
 12663 ;;		_do_I2C_SEND_RESTART_READ
 12664 ;;		_do_I2C_SEND_RESTART_WRITE
 12665 ;;		_do_I2C_SEND_STOP
 12666 ;;		_i2c1_driver_TXData
 12667 ;;		_i2c1_driver_isNACK
 12668 ;;		_i2c_restartWrite
 12669 ;;		_rd1RegCompleteHandler
 12670 ;;		_rd2RegCompleteHandler
 12671 ;;		_rdBlkRegCompleteHandler
 12672 ;;		_returnReset
 12673 ;;		_returnStop
 12674 ;;		_wr1RegCompleteHandler
 12675 ;;		_wr2RegCompleteHandler
 12676 ;; This function is called by:
 12677 ;;		_i2c_ISR
 12678 ;; This function uses a non-reentrant model
 12679 ;;
 12680                           
 12681                           	psect	text51
 12682  009D0A                     __ptext51:
 12683                           	opt stack 0
 12684  009D0A                     _do_I2C_TX:
 12685                           	opt stack 11
 12686                           
 12687                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 12688                           
 12689                           ;incstack = 0
 12690  009D0A  EC96  F061         	call	_i2c1_driver_isNACK	;wreg free
 12691  009D0E  B0D8               	btfsc	status,0,c
 12692  009D10  D00A               	goto	l170
 12693  009D12  D024               	goto	l169
 12694  009D14                     
 12695                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 12696  009D14  EC26  F063         	call	_do_I2C_SEND_RESTART_READ	;wreg free
 12697  009D18  0012               	return	
 12698  009D1A                     
 12699                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 12700  009D1A  EC22  F063         	call	_do_I2C_SEND_RESTART_WRITE	;wreg free
 12701  009D1E  0012               	return	
 12702  009D20                     
 12703                           ;i2c_master.c: 345: case i2c_stop:
 12704                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 12705                           
 12706                           ;i2c_master.c: 344: case i2c_continue:
 12707  009D20  EC1A  F063         	call	_do_I2C_SEND_STOP	;wreg free
 12708                           
 12709                           ;i2c_master.c: 347: }
 12710  009D24  0012               	return	
 12711  009D26                     l170:
 12712  009D26  C3BE  F069         	movff	_i2c_status+30,rdBlkRegCompleteHandler@p
 12713  009D2A  C3BF  F06A         	movff	_i2c_status+31,rdBlkRegCompleteHandler@p+1
 12714  009D2E  D801               	call	u28428
 12715  009D30  D00A               	goto	u28429
 12716  009D32                     u28428:
 12717  009D32  0005               	push	
 12718  009D34  6EFA               	movwf	pclath,c
 12719  009D36  0103               	movlb	3	; () banked
 12720  009D38  51B2               	movf	(_i2c_status+18)& (0+255),w,b
 12721  009D3A  6EFD               	movwf	tosl,c
 12722  009D3C  51B3               	movf	(_i2c_status+19)& (0+255),w,b
 12723  009D3E  6EFE               	movwf	tosh,c
 12724  009D40  6AFF               	clrf	tosu,c
 12725  009D42  50FA               	movf	pclath,w,c
 12726  009D44  0012               	return		;indir
 12727  009D46                     u28429:
 12728                           
 12729                           ; Switch size 1, requested type "space"
 12730                           ; Number of cases is 4, Range of values is 1 to 4
 12731                           ; switch strategies available:
 12732                           ; Name         Instructions Cycles
 12733                           ; simple_byte           13     7 (average)
 12734                           ;	Chosen strategy is simple_byte
 12735  009D46  0A01               	xorlw	1	; case 1
 12736  009D48  B4D8               	btfsc	status,2,c
 12737  009D4A  D7EA               	goto	l174
 12738  009D4C  0A03               	xorlw	3	; case 2
 12739  009D4E  B4D8               	btfsc	status,2,c
 12740  009D50  D7E1               	goto	l171
 12741  009D52  0A01               	xorlw	1	; case 3
 12742  009D54  B4D8               	btfsc	status,2,c
 12743  009D56  D7E1               	goto	l173
 12744  009D58  0A07               	xorlw	7	; case 4
 12745  009D5A  D7E2               	goto	l174
 12746  009D5C                     l169:
 12747                           
 12748                           ;i2c_master.c: 349: else
 12749                           ;i2c_master.c: 350: {
 12750                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 12751  009D5C  0103               	movlb	3	; () banked
 12752  009D5E  97A0               	bcf	_i2c_status& (0+255),3,b
 12753                           
 12754                           ; BSR set to: 3
 12755                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 12756  009D60  C3A2  FFD9         	movff	_i2c_status+2,fsr2l
 12757  009D64  C3A3  FFDA         	movff	_i2c_status+3,fsr2h
 12758  009D68  4BA2               	infsnz	(_i2c_status+2)& (0+255),f,b
 12759  009D6A  2BA3               	incf	(_i2c_status+3)& (0+255),f,b
 12760  009D6C  50DF               	movf	indf2,w,c
 12761  009D6E  ECA6  F062         	call	_i2c1_driver_TXData
 12762                           
 12763                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 12764  009D72  0103               	movlb	3	; () banked
 12765  009D74  07A4               	decf	(_i2c_status+4)& (0+255),f,b
 12766  009D76  A0D8               	btfss	status,0,c
 12767  009D78  07A5               	decf	(_i2c_status+5)& (0+255),f,b
 12768  009D7A  51A4               	movf	(_i2c_status+4)& (0+255),w,b
 12769  009D7C  11A5               	iorwf	(_i2c_status+5)& (0+255),w,b
 12770  009D7E  A4D8               	btfss	status,2,c
 12771  009D80  D005               	goto	l180
 12772                           
 12773                           ; BSR set to: 3
 12774  009D82  0E00               	movlw	0
 12775  009D84  0100               	movlb	0	; () banked
 12776  009D86  6F6C               	movwf	(_do_I2C_TX$317+1)& (0+255),b
 12777  009D88  0E06               	movlw	6
 12778  009D8A  D004               	goto	L3
 12779  009D8C                     l180:
 12780                           
 12781                           ; BSR set to: 0
 12782  009D8C  0E00               	movlw	0
 12783  009D8E  0100               	movlb	0	; () banked
 12784  009D90  6F6C               	movwf	(_do_I2C_TX$317+1)& (0+255),b
 12785  009D92  0E03               	movlw	3
 12786  009D94                     L3:
 12787  009D94  6F6B               	movwf	_do_I2C_TX$317& (0+255),b
 12788                           
 12789                           ; BSR set to: 0
 12790  009D96  516B               	movf	_do_I2C_TX$317& (0+255),w,b
 12791                           
 12792                           ; BSR set to: 0
 12793  009D98  0012               	return	
 12794  009D9A                     __end_of_do_I2C_TX:
 12795                           	opt stack 0
 12796                           tosu	equ	0xFFF
 12797                           tosh	equ	0xFFE
 12798                           tosl	equ	0xFFD
 12799                           pclath	equ	0xFFA
 12800                           tblptru	equ	0xFF8
 12801                           tblptrh	equ	0xFF7
 12802                           tblptrl	equ	0xFF6
 12803                           tablat	equ	0xFF5
 12804                           prodh	equ	0xFF4
 12805                           prodl	equ	0xFF3
 12806                           intcon	equ	0xFF2
 12807                           postinc0	equ	0xFEE
 12808                           wreg	equ	0xFE8
 12809                           indf2	equ	0xFDF
 12810                           postinc2	equ	0xFDE
 12811                           postdec2	equ	0xFDD
 12812                           fsr2h	equ	0xFDA
 12813                           fsr2l	equ	0xFD9
 12814                           status	equ	0xFD8
 12815                           
 12816 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 12817 ;; Defined at:
 12818 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 12819 ;; Parameters:    Size  Location     Type
 12820 ;;		None
 12821 ;; Auto vars:     Size  Location     Type
 12822 ;;		None
 12823 ;; Return value:  Size  Location     Type
 12824 ;;                  1    wreg      enum E7338
 12825 ;; Registers used:
 12826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 0/0
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12836 ;;Total ram usage:        0 bytes
 12837 ;; Hardware stack levels used:    1
 12838 ;; Hardware stack levels required when called:   10
 12839 ;; This function calls:
 12840 ;;		Absolute function
 12841 ;;		_do_I2C_SEND_RESTART
 12842 ;;		_do_I2C_SEND_STOP
 12843 ;;		_i2c_restartWrite
 12844 ;;		_rd1RegCompleteHandler
 12845 ;;		_rd2RegCompleteHandler
 12846 ;;		_rdBlkRegCompleteHandler
 12847 ;;		_returnReset
 12848 ;;		_returnStop
 12849 ;;		_wr1RegCompleteHandler
 12850 ;;		_wr2RegCompleteHandler
 12851 ;; This function is called by:
 12852 ;;		_i2c_ISR
 12853 ;; This function uses a non-reentrant model
 12854 ;;
 12855                           
 12856                           	psect	text52
 12857  00B416                     __ptext52:
 12858                           	opt stack 0
 12859  00B416                     _do_I2C_DO_ADDRESS_NACK:
 12860                           	opt stack 11
 12861                           
 12862                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 12863                           
 12864                           ;incstack = 0
 12865  00B416  0103               	movlb	3	; () banked
 12866  00B418  97A0               	bcf	_i2c_status& (0+255),3,b
 12867                           
 12868                           ; BSR set to: 3
 12869                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 12870  00B41A  0E02               	movlw	2
 12871  00B41C  6FAB               	movwf	(_i2c_status+11)& (0+255),b
 12872                           
 12873                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 12874  00B41E  D006               	goto	l161
 12875  00B420                     
 12876                           ;i2c_master.c: 326: case i2c_restart_write:
 12877                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 12878                           
 12879                           ; BSR set to: 3
 12880                           
 12881                           ; BSR set to: 3
 12882  00B420  EC1E  F063         	call	_do_I2C_SEND_RESTART	;wreg free
 12883  00B424  0012               	return	
 12884  00B426                     
 12885                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 12886  00B426  EC1A  F063         	call	_do_I2C_SEND_STOP	;wreg free
 12887                           
 12888                           ;i2c_master.c: 330: }
 12889  00B42A  0012               	return	
 12890  00B42C                     l161:
 12891  00B42C  C3BC  F069         	movff	_i2c_status+28,rdBlkRegCompleteHandler@p
 12892  00B430  C3BD  F06A         	movff	_i2c_status+29,rdBlkRegCompleteHandler@p+1
 12893  00B434  D801               	call	u28408
 12894  00B436  D00A               	goto	u28409
 12895  00B438                     u28408:
 12896  00B438  0005               	push	
 12897  00B43A  6EFA               	movwf	pclath,c
 12898  00B43C  0103               	movlb	3	; () banked
 12899  00B43E  51B0               	movf	(_i2c_status+16)& (0+255),w,b
 12900  00B440  6EFD               	movwf	tosl,c
 12901  00B442  51B1               	movf	(_i2c_status+17)& (0+255),w,b
 12902  00B444  6EFE               	movwf	tosh,c
 12903  00B446  6AFF               	clrf	tosu,c
 12904  00B448  50FA               	movf	pclath,w,c
 12905  00B44A  0012               	return		;indir
 12906  00B44C                     u28409:
 12907                           
 12908                           ; Switch size 1, requested type "space"
 12909                           ; Number of cases is 2, Range of values is 2 to 3
 12910                           ; switch strategies available:
 12911                           ; Name         Instructions Cycles
 12912                           ; simple_byte            7     4 (average)
 12913                           ;	Chosen strategy is simple_byte
 12914  00B44C  0A02               	xorlw	2	; case 2
 12915  00B44E  B4D8               	btfsc	status,2,c
 12916  00B450  D7E7               	goto	l162
 12917  00B452  0A01               	xorlw	1	; case 3
 12918  00B454  B4D8               	btfsc	status,2,c
 12919  00B456  D7E4               	goto	l162
 12920  00B458  D7E6               	goto	l165
 12921  00B45A                     __end_of_do_I2C_DO_ADDRESS_NACK:
 12922                           	opt stack 0
 12923                           tosu	equ	0xFFF
 12924                           tosh	equ	0xFFE
 12925                           tosl	equ	0xFFD
 12926                           pclath	equ	0xFFA
 12927                           tblptru	equ	0xFF8
 12928                           tblptrh	equ	0xFF7
 12929                           tblptrl	equ	0xFF6
 12930                           tablat	equ	0xFF5
 12931                           prodh	equ	0xFF4
 12932                           prodl	equ	0xFF3
 12933                           intcon	equ	0xFF2
 12934                           postinc0	equ	0xFEE
 12935                           wreg	equ	0xFE8
 12936                           indf2	equ	0xFDF
 12937                           postinc2	equ	0xFDE
 12938                           postdec2	equ	0xFDD
 12939                           fsr2h	equ	0xFDA
 12940                           fsr2l	equ	0xFD9
 12941                           status	equ	0xFD8
 12942                           
 12943 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 12944 ;; Defined at:
 12945 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;		None
 12948 ;; Auto vars:     Size  Location     Type
 12949 ;;		None
 12950 ;; Return value:  Size  Location     Type
 12951 ;;                  1    wreg      enum E7338
 12952 ;; Registers used:
 12953 ;;		wreg, cstack
 12954 ;; Tracked objects:
 12955 ;;		On entry : 0/0
 12956 ;;		On exit  : 0/0
 12957 ;;		Unchanged: 0/0
 12958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12963 ;;Total ram usage:        0 bytes
 12964 ;; Hardware stack levels used:    1
 12965 ;; Hardware stack levels required when called:    8
 12966 ;; This function calls:
 12967 ;;		_i2c1_driver_sendNACK
 12968 ;; This function is called by:
 12969 ;;		_do_I2C_RX
 12970 ;;		_i2c_ISR
 12971 ;; This function uses a non-reentrant model
 12972 ;;
 12973                           
 12974                           	psect	text53
 12975  00C61C                     __ptext53:
 12976                           	opt stack 0
 12977  00C61C                     _do_I2C_DO_NACK_RESTART:
 12978                           	opt stack 12
 12979                           
 12980                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 12981                           
 12982                           ;incstack = 0
 12983  00C61C  EC36  F063         	call	_i2c1_driver_sendNACK	;wreg free
 12984                           
 12985                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 12986  00C620  0E09               	movlw	9
 12987  00C622  0012               	return	
 12988  00C624                     __end_of_do_I2C_DO_NACK_RESTART:
 12989                           	opt stack 0
 12990                           tosu	equ	0xFFF
 12991                           tosh	equ	0xFFE
 12992                           tosl	equ	0xFFD
 12993                           pclath	equ	0xFFA
 12994                           tblptru	equ	0xFF8
 12995                           tblptrh	equ	0xFF7
 12996                           tblptrl	equ	0xFF6
 12997                           tablat	equ	0xFF5
 12998                           prodh	equ	0xFF4
 12999                           prodl	equ	0xFF3
 13000                           intcon	equ	0xFF2
 13001                           postinc0	equ	0xFEE
 13002                           wreg	equ	0xFE8
 13003                           indf2	equ	0xFDF
 13004                           postinc2	equ	0xFDE
 13005                           postdec2	equ	0xFDD
 13006                           fsr2h	equ	0xFDA
 13007                           fsr2l	equ	0xFD9
 13008                           status	equ	0xFD8
 13009                           
 13010 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 13011 ;; Defined at:
 13012 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 13013 ;; Parameters:    Size  Location     Type
 13014 ;;		None
 13015 ;; Auto vars:     Size  Location     Type
 13016 ;;		None
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  1    wreg      enum E7338
 13019 ;; Registers used:
 13020 ;;		wreg, cstack
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13030 ;;Total ram usage:        0 bytes
 13031 ;; Hardware stack levels used:    1
 13032 ;; Hardware stack levels required when called:    8
 13033 ;; This function calls:
 13034 ;;		_i2c1_driver_sendNACK
 13035 ;; This function is called by:
 13036 ;;		_do_I2C_RX
 13037 ;;		_i2c_ISR
 13038 ;; This function uses a non-reentrant model
 13039 ;;
 13040                           
 13041                           	psect	text54
 13042  00C624                     __ptext54:
 13043                           	opt stack 0
 13044  00C624                     _do_I2C_DO_NACK_STOP:
 13045                           	opt stack 12
 13046                           
 13047                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 13048                           
 13049                           ;incstack = 0
 13050  00C624  EC36  F063         	call	_i2c1_driver_sendNACK	;wreg free
 13051                           
 13052                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 13053  00C628  0E0A               	movlw	10
 13054  00C62A  0012               	return	
 13055  00C62C                     __end_of_do_I2C_DO_NACK_STOP:
 13056                           	opt stack 0
 13057                           tosu	equ	0xFFF
 13058                           tosh	equ	0xFFE
 13059                           tosl	equ	0xFFD
 13060                           pclath	equ	0xFFA
 13061                           tblptru	equ	0xFF8
 13062                           tblptrh	equ	0xFF7
 13063                           tblptrl	equ	0xFF6
 13064                           tablat	equ	0xFF5
 13065                           prodh	equ	0xFF4
 13066                           prodl	equ	0xFF3
 13067                           intcon	equ	0xFF2
 13068                           postinc0	equ	0xFEE
 13069                           wreg	equ	0xFE8
 13070                           indf2	equ	0xFDF
 13071                           postinc2	equ	0xFDE
 13072                           postdec2	equ	0xFDD
 13073                           fsr2h	equ	0xFDA
 13074                           fsr2l	equ	0xFD9
 13075                           status	equ	0xFD8
 13076                           
 13077 ;; *************** function _do_I2C_DO_ACK *****************
 13078 ;; Defined at:
 13079 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 13080 ;; Parameters:    Size  Location     Type
 13081 ;;		None
 13082 ;; Auto vars:     Size  Location     Type
 13083 ;;		None
 13084 ;; Return value:  Size  Location     Type
 13085 ;;                  1    wreg      enum E7338
 13086 ;; Registers used:
 13087 ;;		wreg, cstack
 13088 ;; Tracked objects:
 13089 ;;		On entry : 0/0
 13090 ;;		On exit  : 0/0
 13091 ;;		Unchanged: 0/0
 13092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13097 ;;Total ram usage:        0 bytes
 13098 ;; Hardware stack levels used:    1
 13099 ;; Hardware stack levels required when called:    8
 13100 ;; This function calls:
 13101 ;;		_i2c1_driver_sendACK
 13102 ;; This function is called by:
 13103 ;;		_i2c_ISR
 13104 ;; This function uses a non-reentrant model
 13105 ;;
 13106                           
 13107                           	psect	text55
 13108  00C62C                     __ptext55:
 13109                           	opt stack 0
 13110  00C62C                     _do_I2C_DO_ACK:
 13111                           	opt stack 13
 13112                           
 13113                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 13114                           
 13115                           ;incstack = 0
 13116  00C62C  EC39  F063         	call	_i2c1_driver_sendACK	;wreg free
 13117                           
 13118                           ;i2c_master.c: 302: return I2C_RCEN;
 13119  00C630  0E05               	movlw	5
 13120  00C632  0012               	return	
 13121  00C634                     __end_of_do_I2C_DO_ACK:
 13122                           	opt stack 0
 13123                           tosu	equ	0xFFF
 13124                           tosh	equ	0xFFE
 13125                           tosl	equ	0xFFD
 13126                           pclath	equ	0xFFA
 13127                           tblptru	equ	0xFF8
 13128                           tblptrh	equ	0xFF7
 13129                           tblptrl	equ	0xFF6
 13130                           tablat	equ	0xFF5
 13131                           prodh	equ	0xFF4
 13132                           prodl	equ	0xFF3
 13133                           intcon	equ	0xFF2
 13134                           postinc0	equ	0xFEE
 13135                           wreg	equ	0xFE8
 13136                           indf2	equ	0xFDF
 13137                           postinc2	equ	0xFDE
 13138                           postdec2	equ	0xFDD
 13139                           fsr2h	equ	0xFDA
 13140                           fsr2l	equ	0xFD9
 13141                           status	equ	0xFD8
 13142                           
 13143 ;; *************** function _do_I2C_RCEN *****************
 13144 ;; Defined at:
 13145 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 13146 ;; Parameters:    Size  Location     Type
 13147 ;;		None
 13148 ;; Auto vars:     Size  Location     Type
 13149 ;;		None
 13150 ;; Return value:  Size  Location     Type
 13151 ;;                  1    wreg      enum E7338
 13152 ;; Registers used:
 13153 ;;		wreg, cstack
 13154 ;; Tracked objects:
 13155 ;;		On entry : 0/0
 13156 ;;		On exit  : 0/0
 13157 ;;		Unchanged: 0/0
 13158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13163 ;;Total ram usage:        0 bytes
 13164 ;; Hardware stack levels used:    1
 13165 ;; Hardware stack levels required when called:    8
 13166 ;; This function calls:
 13167 ;;		_i2c1_driver_startRX
 13168 ;; This function is called by:
 13169 ;;		_i2c_ISR
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text56
 13174  00C4FE                     __ptext56:
 13175                           	opt stack 0
 13176  00C4FE                     _do_I2C_RCEN:
 13177                           	opt stack 13
 13178                           
 13179                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 13180                           
 13181                           ;incstack = 0
 13182  00C4FE  0103               	movlb	3	; () banked
 13183  00C500  97A0               	bcf	_i2c_status& (0+255),3,b
 13184                           
 13185                           ; BSR set to: 3
 13186                           ;i2c_master.c: 295: i2c1_driver_startRX();
 13187  00C502  EC58  F063         	call	_i2c1_driver_startRX	;wreg free
 13188                           
 13189                           ;i2c_master.c: 296: return I2C_RX;
 13190  00C506  0E04               	movlw	4
 13191  00C508  0012               	return	
 13192  00C50A                     __end_of_do_I2C_RCEN:
 13193                           	opt stack 0
 13194                           tosu	equ	0xFFF
 13195                           tosh	equ	0xFFE
 13196                           tosl	equ	0xFFD
 13197                           pclath	equ	0xFFA
 13198                           tblptru	equ	0xFF8
 13199                           tblptrh	equ	0xFF7
 13200                           tblptrl	equ	0xFF6
 13201                           tablat	equ	0xFF5
 13202                           prodh	equ	0xFF4
 13203                           prodl	equ	0xFF3
 13204                           intcon	equ	0xFF2
 13205                           postinc0	equ	0xFEE
 13206                           wreg	equ	0xFE8
 13207                           indf2	equ	0xFDF
 13208                           postinc2	equ	0xFDE
 13209                           postdec2	equ	0xFDD
 13210                           fsr2h	equ	0xFDA
 13211                           fsr2l	equ	0xFD9
 13212                           status	equ	0xFD8
 13213                           
 13214 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 13215 ;; Defined at:
 13216 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;		None
 13219 ;; Auto vars:     Size  Location     Type
 13220 ;;		None
 13221 ;; Return value:  Size  Location     Type
 13222 ;;                  1    wreg      enum E7338
 13223 ;; Registers used:
 13224 ;;		wreg, status,2, status,0, cstack
 13225 ;; Tracked objects:
 13226 ;;		On entry : 0/0
 13227 ;;		On exit  : 0/0
 13228 ;;		Unchanged: 0/0
 13229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13234 ;;Total ram usage:        0 bytes
 13235 ;; Hardware stack levels used:    1
 13236 ;; Hardware stack levels required when called:    8
 13237 ;; This function calls:
 13238 ;;		_i2c1_driver_TXData
 13239 ;; This function is called by:
 13240 ;;		_i2c_ISR
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           	psect	text57
 13245  00C41A                     __ptext57:
 13246                           	opt stack 0
 13247  00C41A                     _do_I2C_SEND_ADR_WRITE:
 13248                           	opt stack 13
 13249                           
 13250                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 13251                           
 13252                           ;incstack = 0
 13253  00C41A  0103               	movlb	3	; () banked
 13254  00C41C  87A0               	bsf	_i2c_status& (0+255),3,b
 13255                           
 13256                           ; BSR set to: 3
 13257                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 13258  00C41E  51A1               	movf	(_i2c_status+1)& (0+255),w,b
 13259  00C420  25A1               	addwf	(_i2c_status+1)& (0+255),w,b
 13260  00C422  ECA6  F062         	call	_i2c1_driver_TXData
 13261                           
 13262                           ;i2c_master.c: 289: return I2C_TX;
 13263  00C426  0E03               	movlw	3
 13264  00C428  0012               	return	
 13265  00C42A                     __end_of_do_I2C_SEND_ADR_WRITE:
 13266                           	opt stack 0
 13267                           tosu	equ	0xFFF
 13268                           tosh	equ	0xFFE
 13269                           tosl	equ	0xFFD
 13270                           pclath	equ	0xFFA
 13271                           tblptru	equ	0xFF8
 13272                           tblptrh	equ	0xFF7
 13273                           tblptrl	equ	0xFF6
 13274                           tablat	equ	0xFF5
 13275                           prodh	equ	0xFF4
 13276                           prodl	equ	0xFF3
 13277                           intcon	equ	0xFF2
 13278                           postinc0	equ	0xFEE
 13279                           wreg	equ	0xFE8
 13280                           indf2	equ	0xFDF
 13281                           postinc2	equ	0xFDE
 13282                           postdec2	equ	0xFDD
 13283                           fsr2h	equ	0xFDA
 13284                           fsr2l	equ	0xFD9
 13285                           status	equ	0xFD8
 13286                           
 13287 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 13288 ;; Defined at:
 13289 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 13290 ;; Parameters:    Size  Location     Type
 13291 ;;		None
 13292 ;; Auto vars:     Size  Location     Type
 13293 ;;		None
 13294 ;; Return value:  Size  Location     Type
 13295 ;;                  1    wreg      enum E7338
 13296 ;; Registers used:
 13297 ;;		wreg, status,0, cstack
 13298 ;; Tracked objects:
 13299 ;;		On entry : 0/0
 13300 ;;		On exit  : 0/0
 13301 ;;		Unchanged: 0/0
 13302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13307 ;;Total ram usage:        0 bytes
 13308 ;; Hardware stack levels used:    1
 13309 ;; Hardware stack levels required when called:    8
 13310 ;; This function calls:
 13311 ;;		_i2c1_driver_TXData
 13312 ;; This function is called by:
 13313 ;;		_i2c_ISR
 13314 ;; This function uses a non-reentrant model
 13315 ;;
 13316                           
 13317                           	psect	text58
 13318  00C42A                     __ptext58:
 13319                           	opt stack 0
 13320  00C42A                     _do_I2C_SEND_ADR_READ:
 13321                           	opt stack 13
 13322                           
 13323                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 13324                           
 13325                           ;incstack = 0
 13326  00C42A  0103               	movlb	3	; () banked
 13327  00C42C  87A0               	bsf	_i2c_status& (0+255),3,b
 13328                           
 13329                           ; BSR set to: 3
 13330                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 13331  00C42E  80D8               	bsf	status,0,c
 13332  00C430  35A1               	rlcf	(_i2c_status+1)& (0+255),w,b
 13333  00C432  ECA6  F062         	call	_i2c1_driver_TXData
 13334                           
 13335                           ;i2c_master.c: 282: return I2C_RCEN;
 13336  00C436  0E05               	movlw	5
 13337  00C438  0012               	return	
 13338  00C43A                     __end_of_do_I2C_SEND_ADR_READ:
 13339                           	opt stack 0
 13340                           tosu	equ	0xFFF
 13341                           tosh	equ	0xFFE
 13342                           tosl	equ	0xFFD
 13343                           pclath	equ	0xFFA
 13344                           tblptru	equ	0xFF8
 13345                           tblptrh	equ	0xFF7
 13346                           tblptrl	equ	0xFF6
 13347                           tablat	equ	0xFF5
 13348                           prodh	equ	0xFF4
 13349                           prodl	equ	0xFF3
 13350                           intcon	equ	0xFF2
 13351                           postinc0	equ	0xFEE
 13352                           wreg	equ	0xFE8
 13353                           indf2	equ	0xFDF
 13354                           postinc2	equ	0xFDE
 13355                           postdec2	equ	0xFDD
 13356                           fsr2h	equ	0xFDA
 13357                           fsr2l	equ	0xFD9
 13358                           status	equ	0xFD8
 13359                           
 13360 ;; *************** function _do_I2C_SEND_STOP *****************
 13361 ;; Defined at:
 13362 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;		None
 13365 ;; Auto vars:     Size  Location     Type
 13366 ;;		None
 13367 ;; Return value:  Size  Location     Type
 13368 ;;                  1    wreg      enum E7338
 13369 ;; Registers used:
 13370 ;;		wreg, cstack
 13371 ;; Tracked objects:
 13372 ;;		On entry : 0/0
 13373 ;;		On exit  : 0/0
 13374 ;;		Unchanged: 0/0
 13375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13380 ;;Total ram usage:        0 bytes
 13381 ;; Hardware stack levels used:    1
 13382 ;; Hardware stack levels required when called:    8
 13383 ;; This function calls:
 13384 ;;		_i2c1_driver_stop
 13385 ;; This function is called by:
 13386 ;;		_do_I2C_DO_ADDRESS_NACK
 13387 ;;		_do_I2C_TX
 13388 ;;		_do_I2C_TX_EMPTY
 13389 ;;		_i2c_ISR
 13390 ;; This function uses a non-reentrant model
 13391 ;;
 13392                           
 13393                           	psect	text59
 13394  00C634                     __ptext59:
 13395                           	opt stack 0
 13396  00C634                     _do_I2C_SEND_STOP:
 13397                           	opt stack 12
 13398                           
 13399                           ;i2c_master.c: 274: i2c1_driver_stop();
 13400                           
 13401                           ;incstack = 0
 13402  00C634  EC60  F063         	call	_i2c1_driver_stop	;wreg free
 13403                           
 13404                           ;i2c_master.c: 275: return I2C_IDLE;
 13405  00C638  0E00               	movlw	0
 13406  00C63A  0012               	return	
 13407  00C63C                     __end_of_do_I2C_SEND_STOP:
 13408                           	opt stack 0
 13409                           tosu	equ	0xFFF
 13410                           tosh	equ	0xFFE
 13411                           tosl	equ	0xFFD
 13412                           pclath	equ	0xFFA
 13413                           tblptru	equ	0xFF8
 13414                           tblptrh	equ	0xFF7
 13415                           tblptrl	equ	0xFF6
 13416                           tablat	equ	0xFF5
 13417                           prodh	equ	0xFF4
 13418                           prodl	equ	0xFF3
 13419                           intcon	equ	0xFF2
 13420                           postinc0	equ	0xFEE
 13421                           wreg	equ	0xFE8
 13422                           indf2	equ	0xFDF
 13423                           postinc2	equ	0xFDE
 13424                           postdec2	equ	0xFDD
 13425                           fsr2h	equ	0xFDA
 13426                           fsr2l	equ	0xFD9
 13427                           status	equ	0xFD8
 13428                           
 13429 ;; *************** function _do_I2C_SEND_RESTART *****************
 13430 ;; Defined at:
 13431 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;		None
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;		None
 13436 ;; Return value:  Size  Location     Type
 13437 ;;                  1    wreg      enum E7338
 13438 ;; Registers used:
 13439 ;;		wreg, cstack
 13440 ;; Tracked objects:
 13441 ;;		On entry : 0/0
 13442 ;;		On exit  : 0/0
 13443 ;;		Unchanged: 0/0
 13444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13449 ;;Total ram usage:        0 bytes
 13450 ;; Hardware stack levels used:    1
 13451 ;; Hardware stack levels required when called:    8
 13452 ;; This function calls:
 13453 ;;		_i2c1_driver_restart
 13454 ;; This function is called by:
 13455 ;;		_do_I2C_DO_ADDRESS_NACK
 13456 ;;		_do_I2C_TX_EMPTY
 13457 ;;		_i2c_ISR
 13458 ;; This function uses a non-reentrant model
 13459 ;;
 13460                           
 13461                           	psect	text60
 13462  00C63C                     __ptext60:
 13463                           	opt stack 0
 13464  00C63C                     _do_I2C_SEND_RESTART:
 13465                           	opt stack 12
 13466                           
 13467                           ;i2c_master.c: 268: i2c1_driver_restart();
 13468                           
 13469                           ;incstack = 0
 13470  00C63C  EC62  F063         	call	_i2c1_driver_restart	;wreg free
 13471                           
 13472                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 13473  00C640  0E01               	movlw	1
 13474  00C642  0012               	return	
 13475  00C644                     __end_of_do_I2C_SEND_RESTART:
 13476                           	opt stack 0
 13477                           tosu	equ	0xFFF
 13478                           tosh	equ	0xFFE
 13479                           tosl	equ	0xFFD
 13480                           pclath	equ	0xFFA
 13481                           tblptru	equ	0xFF8
 13482                           tblptrh	equ	0xFF7
 13483                           tblptrl	equ	0xFF6
 13484                           tablat	equ	0xFF5
 13485                           prodh	equ	0xFF4
 13486                           prodl	equ	0xFF3
 13487                           intcon	equ	0xFF2
 13488                           postinc0	equ	0xFEE
 13489                           wreg	equ	0xFE8
 13490                           indf2	equ	0xFDF
 13491                           postinc2	equ	0xFDE
 13492                           postdec2	equ	0xFDD
 13493                           fsr2h	equ	0xFDA
 13494                           fsr2l	equ	0xFD9
 13495                           status	equ	0xFD8
 13496                           
 13497 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 13498 ;; Defined at:
 13499 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;		None
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;		None
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  1    wreg      enum E7338
 13506 ;; Registers used:
 13507 ;;		wreg, cstack
 13508 ;; Tracked objects:
 13509 ;;		On entry : 0/0
 13510 ;;		On exit  : 0/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13517 ;;Total ram usage:        0 bytes
 13518 ;; Hardware stack levels used:    1
 13519 ;; Hardware stack levels required when called:    8
 13520 ;; This function calls:
 13521 ;;		_i2c1_driver_restart
 13522 ;; This function is called by:
 13523 ;;		_do_I2C_TX
 13524 ;;		_i2c_ISR
 13525 ;; This function uses a non-reentrant model
 13526 ;;
 13527                           
 13528                           	psect	text61
 13529  00C644                     __ptext61:
 13530                           	opt stack 0
 13531  00C644                     _do_I2C_SEND_RESTART_WRITE:
 13532                           	opt stack 12
 13533                           
 13534                           ;i2c_master.c: 262: i2c1_driver_restart();
 13535                           
 13536                           ;incstack = 0
 13537  00C644  EC62  F063         	call	_i2c1_driver_restart	;wreg free
 13538                           
 13539                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 13540  00C648  0E02               	movlw	2
 13541  00C64A  0012               	return	
 13542  00C64C                     __end_of_do_I2C_SEND_RESTART_WRITE:
 13543                           	opt stack 0
 13544                           tosu	equ	0xFFF
 13545                           tosh	equ	0xFFE
 13546                           tosl	equ	0xFFD
 13547                           pclath	equ	0xFFA
 13548                           tblptru	equ	0xFF8
 13549                           tblptrh	equ	0xFF7
 13550                           tblptrl	equ	0xFF6
 13551                           tablat	equ	0xFF5
 13552                           prodh	equ	0xFF4
 13553                           prodl	equ	0xFF3
 13554                           intcon	equ	0xFF2
 13555                           postinc0	equ	0xFEE
 13556                           wreg	equ	0xFE8
 13557                           indf2	equ	0xFDF
 13558                           postinc2	equ	0xFDE
 13559                           postdec2	equ	0xFDD
 13560                           fsr2h	equ	0xFDA
 13561                           fsr2l	equ	0xFD9
 13562                           status	equ	0xFD8
 13563                           
 13564 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 13565 ;; Defined at:
 13566 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 13567 ;; Parameters:    Size  Location     Type
 13568 ;;		None
 13569 ;; Auto vars:     Size  Location     Type
 13570 ;;		None
 13571 ;; Return value:  Size  Location     Type
 13572 ;;                  1    wreg      enum E7338
 13573 ;; Registers used:
 13574 ;;		wreg, cstack
 13575 ;; Tracked objects:
 13576 ;;		On entry : 0/0
 13577 ;;		On exit  : 0/0
 13578 ;;		Unchanged: 0/0
 13579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13584 ;;Total ram usage:        0 bytes
 13585 ;; Hardware stack levels used:    1
 13586 ;; Hardware stack levels required when called:    8
 13587 ;; This function calls:
 13588 ;;		_i2c1_driver_restart
 13589 ;; This function is called by:
 13590 ;;		_do_I2C_TX
 13591 ;;		_i2c_ISR
 13592 ;; This function uses a non-reentrant model
 13593 ;;
 13594                           
 13595                           	psect	text62
 13596  00C64C                     __ptext62:
 13597                           	opt stack 0
 13598  00C64C                     _do_I2C_SEND_RESTART_READ:
 13599                           	opt stack 12
 13600                           
 13601                           ;i2c_master.c: 256: i2c1_driver_restart();
 13602                           
 13603                           ;incstack = 0
 13604  00C64C  EC62  F063         	call	_i2c1_driver_restart	;wreg free
 13605                           
 13606                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 13607  00C650  0E01               	movlw	1
 13608  00C652  0012               	return	
 13609  00C654                     __end_of_do_I2C_SEND_RESTART_READ:
 13610                           	opt stack 0
 13611                           tosu	equ	0xFFF
 13612                           tosh	equ	0xFFE
 13613                           tosl	equ	0xFFD
 13614                           pclath	equ	0xFFA
 13615                           tblptru	equ	0xFF8
 13616                           tblptrh	equ	0xFF7
 13617                           tblptrl	equ	0xFF6
 13618                           tablat	equ	0xFF5
 13619                           prodh	equ	0xFF4
 13620                           prodl	equ	0xFF3
 13621                           intcon	equ	0xFF2
 13622                           postinc0	equ	0xFEE
 13623                           wreg	equ	0xFE8
 13624                           indf2	equ	0xFDF
 13625                           postinc2	equ	0xFDE
 13626                           postdec2	equ	0xFDD
 13627                           fsr2h	equ	0xFDA
 13628                           fsr2l	equ	0xFD9
 13629                           status	equ	0xFD8
 13630                           
 13631 ;; *************** function _do_I2C_IDLE *****************
 13632 ;; Defined at:
 13633 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 13634 ;; Parameters:    Size  Location     Type
 13635 ;;		None
 13636 ;; Auto vars:     Size  Location     Type
 13637 ;;		None
 13638 ;; Return value:  Size  Location     Type
 13639 ;;                  1    wreg      enum E7338
 13640 ;; Registers used:
 13641 ;;		wreg, status,2
 13642 ;; Tracked objects:
 13643 ;;		On entry : 0/0
 13644 ;;		On exit  : 0/0
 13645 ;;		Unchanged: 0/0
 13646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13651 ;;Total ram usage:        0 bytes
 13652 ;; Hardware stack levels used:    1
 13653 ;; Hardware stack levels required when called:    7
 13654 ;; This function calls:
 13655 ;;		Nothing
 13656 ;; This function is called by:
 13657 ;;		_i2c_ISR
 13658 ;; This function uses a non-reentrant model
 13659 ;;
 13660                           
 13661                           	psect	text63
 13662  00C50A                     __ptext63:
 13663                           	opt stack 0
 13664  00C50A                     _do_I2C_IDLE:
 13665                           	opt stack 14
 13666                           
 13667                           ;i2c_master.c: 249: i2c_status.busy = 0;
 13668                           
 13669                           ;incstack = 0
 13670  00C50A  0103               	movlb	3	; () banked
 13671  00C50C  91A0               	bcf	_i2c_status& (0+255),0,b
 13672                           
 13673                           ; BSR set to: 3
 13674                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 13675  00C50E  0E00               	movlw	0
 13676  00C510  6FAB               	movwf	(_i2c_status+11)& (0+255),b
 13677                           
 13678                           ; BSR set to: 3
 13679                           ;i2c_master.c: 251: return I2C_RESET;
 13680  00C512  0E0E               	movlw	14
 13681  00C514  0012               	return	
 13682  00C516                     __end_of_do_I2C_IDLE:
 13683                           	opt stack 0
 13684                           tosu	equ	0xFFF
 13685                           tosh	equ	0xFFE
 13686                           tosl	equ	0xFFD
 13687                           pclath	equ	0xFFA
 13688                           tblptru	equ	0xFF8
 13689                           tblptrh	equ	0xFF7
 13690                           tblptrl	equ	0xFF6
 13691                           tablat	equ	0xFF5
 13692                           prodh	equ	0xFF4
 13693                           prodl	equ	0xFF3
 13694                           intcon	equ	0xFF2
 13695                           postinc0	equ	0xFEE
 13696                           wreg	equ	0xFE8
 13697                           indf2	equ	0xFDF
 13698                           postinc2	equ	0xFDE
 13699                           postdec2	equ	0xFDD
 13700                           fsr2h	equ	0xFDA
 13701                           fsr2l	equ	0xFD9
 13702                           status	equ	0xFD8
 13703                           
 13704 ;; *************** function _do_I2C_RESET *****************
 13705 ;; Defined at:
 13706 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;		None
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;		None
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  1    wreg      enum E7338
 13713 ;; Registers used:
 13714 ;;		wreg, status,2, cstack
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13724 ;;Total ram usage:        0 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; Hardware stack levels required when called:    8
 13727 ;; This function calls:
 13728 ;;		_i2c1_driver_resetBus
 13729 ;; This function is called by:
 13730 ;;		_i2c_ISR
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734                           	psect	text64
 13735  00C43A                     __ptext64:
 13736                           	opt stack 0
 13737  00C43A                     _do_I2C_RESET:
 13738                           	opt stack 13
 13739                           
 13740                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 13741                           
 13742                           ; BSR set to: 3
 13743                           ;incstack = 0
 13744  00C43A  EC74  F063         	call	_i2c1_driver_resetBus	;wreg free
 13745                           
 13746                           ;i2c_master.c: 242: i2c_status.busy = 0;
 13747  00C43E  0103               	movlb	3	; () banked
 13748  00C440  91A0               	bcf	_i2c_status& (0+255),0,b
 13749                           
 13750                           ; BSR set to: 3
 13751                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 13752  00C442  0E00               	movlw	0
 13753  00C444  6FAB               	movwf	(_i2c_status+11)& (0+255),b
 13754                           
 13755                           ; BSR set to: 3
 13756                           ;i2c_master.c: 244: return I2C_RESET;
 13757  00C446  0E0E               	movlw	14
 13758  00C448  0012               	return	
 13759  00C44A                     __end_of_do_I2C_RESET:
 13760                           	opt stack 0
 13761                           tosu	equ	0xFFF
 13762                           tosh	equ	0xFFE
 13763                           tosl	equ	0xFFD
 13764                           pclath	equ	0xFFA
 13765                           tblptru	equ	0xFF8
 13766                           tblptrh	equ	0xFF7
 13767                           tblptrl	equ	0xFF6
 13768                           tablat	equ	0xFF5
 13769                           prodh	equ	0xFF4
 13770                           prodl	equ	0xFF3
 13771                           intcon	equ	0xFF2
 13772                           postinc0	equ	0xFEE
 13773                           wreg	equ	0xFE8
 13774                           indf2	equ	0xFDF
 13775                           postinc2	equ	0xFDE
 13776                           postdec2	equ	0xFDD
 13777                           fsr2h	equ	0xFDA
 13778                           fsr2l	equ	0xFD9
 13779                           status	equ	0xFD8
 13780                           
 13781 ;; *************** function _do_I2C_TX_EMPTY *****************
 13782 ;; Defined at:
 13783 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 13784 ;; Parameters:    Size  Location     Type
 13785 ;;		None
 13786 ;; Auto vars:     Size  Location     Type
 13787 ;;		None
 13788 ;; Return value:  Size  Location     Type
 13789 ;;                  1    wreg      enum E7338
 13790 ;; Registers used:
 13791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13792 ;; Tracked objects:
 13793 ;;		On entry : 0/0
 13794 ;;		On exit  : 0/0
 13795 ;;		Unchanged: 0/0
 13796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13801 ;;Total ram usage:        0 bytes
 13802 ;; Hardware stack levels used:    1
 13803 ;; Hardware stack levels required when called:   10
 13804 ;; This function calls:
 13805 ;;		Absolute function
 13806 ;;		_do_I2C_SEND_RESTART
 13807 ;;		_do_I2C_SEND_STOP
 13808 ;;		_i2c_restartWrite
 13809 ;;		_mssp1_setIRQ
 13810 ;;		_rd1RegCompleteHandler
 13811 ;;		_rd2RegCompleteHandler
 13812 ;;		_rdBlkRegCompleteHandler
 13813 ;;		_returnReset
 13814 ;;		_returnStop
 13815 ;;		_wr1RegCompleteHandler
 13816 ;;		_wr2RegCompleteHandler
 13817 ;; This function is called by:
 13818 ;;		_i2c_ISR
 13819 ;; This function uses a non-reentrant model
 13820 ;;
 13821                           
 13822                           	psect	text65
 13823  00AF3E                     __ptext65:
 13824                           	opt stack 0
 13825  00AF3E                     _do_I2C_TX_EMPTY:
 13826                           	opt stack 11
 13827                           
 13828                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 13829                           
 13830                           ; BSR set to: 3
 13831                           ;incstack = 0
 13832  00AF3E  0103               	movlb	3	; () banked
 13833  00AF40  85A0               	bsf	_i2c_status& (0+255),2,b
 13834                           
 13835                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 13836  00AF42  D00A               	goto	l197
 13837  00AF44                     
 13838                           ;i2c_master.c: 388: case i2c_restart_write:
 13839                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 13840                           
 13841                           ; BSR set to: 3
 13842                           
 13843                           ; BSR set to: 3
 13844  00AF44  EC1E  F063         	call	_do_I2C_SEND_RESTART	;wreg free
 13845  00AF48  0012               	return	
 13846  00AF4A                     
 13847                           ;i2c_master.c: 391: mssp1_setIRQ();
 13848  00AF4A  EC54  F063         	call	_mssp1_setIRQ	;wreg free
 13849                           
 13850                           ;i2c_master.c: 392: return I2C_TX;
 13851  00AF4E  0E03               	movlw	3
 13852  00AF50  0012               	return	
 13853  00AF52                     
 13854                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 13855                           
 13856                           ;i2c_master.c: 394: case i2c_stop:
 13857  00AF52  EC1A  F063         	call	_do_I2C_SEND_STOP	;wreg free
 13858                           
 13859                           ;i2c_master.c: 396: }
 13860  00AF56  0012               	return	
 13861  00AF58                     l197:
 13862  00AF58  C3B8  F069         	movff	_i2c_status+24,rdBlkRegCompleteHandler@p
 13863  00AF5C  C3B9  F06A         	movff	_i2c_status+25,rdBlkRegCompleteHandler@p+1
 13864  00AF60  D801               	call	u28468
 13865  00AF62  D00A               	goto	u28469
 13866  00AF64                     u28468:
 13867  00AF64  0005               	push	
 13868  00AF66  6EFA               	movwf	pclath,c
 13869  00AF68  0103               	movlb	3	; () banked
 13870  00AF6A  51AC               	movf	(_i2c_status+12)& (0+255),w,b
 13871  00AF6C  6EFD               	movwf	tosl,c
 13872  00AF6E  51AD               	movf	(_i2c_status+13)& (0+255),w,b
 13873  00AF70  6EFE               	movwf	tosh,c
 13874  00AF72  6AFF               	clrf	tosu,c
 13875  00AF74  50FA               	movf	pclath,w,c
 13876  00AF76  0012               	return		;indir
 13877  00AF78                     u28469:
 13878                           
 13879                           ; Switch size 1, requested type "space"
 13880                           ; Number of cases is 4, Range of values is 1 to 4
 13881                           ; switch strategies available:
 13882                           ; Name         Instructions Cycles
 13883                           ; simple_byte           13     7 (average)
 13884                           ;	Chosen strategy is simple_byte
 13885  00AF78  0A01               	xorlw	1	; case 1
 13886  00AF7A  B4D8               	btfsc	status,2,c
 13887  00AF7C  D7EA               	goto	l202
 13888  00AF7E  0A03               	xorlw	3	; case 2
 13889  00AF80  B4D8               	btfsc	status,2,c
 13890  00AF82  D7E0               	goto	l198
 13891  00AF84  0A01               	xorlw	1	; case 3
 13892  00AF86  B4D8               	btfsc	status,2,c
 13893  00AF88  D7DD               	goto	l198
 13894  00AF8A  0A07               	xorlw	7	; case 4
 13895  00AF8C  B4D8               	btfsc	status,2,c
 13896  00AF8E  D7DD               	goto	l201
 13897  00AF90  D7E0               	goto	l202
 13898  00AF92                     __end_of_do_I2C_TX_EMPTY:
 13899                           	opt stack 0
 13900                           tosu	equ	0xFFF
 13901                           tosh	equ	0xFFE
 13902                           tosl	equ	0xFFD
 13903                           pclath	equ	0xFFA
 13904                           tblptru	equ	0xFF8
 13905                           tblptrh	equ	0xFF7
 13906                           tblptrl	equ	0xFF6
 13907                           tablat	equ	0xFF5
 13908                           prodh	equ	0xFF4
 13909                           prodl	equ	0xFF3
 13910                           intcon	equ	0xFF2
 13911                           postinc0	equ	0xFEE
 13912                           wreg	equ	0xFE8
 13913                           indf2	equ	0xFDF
 13914                           postinc2	equ	0xFDE
 13915                           postdec2	equ	0xFDD
 13916                           fsr2h	equ	0xFDA
 13917                           fsr2l	equ	0xFD9
 13918                           status	equ	0xFD8
 13919                           
 13920 ;; *************** function _mssp1_setIRQ *****************
 13921 ;; Defined at:
 13922 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;		None
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;		None
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  1    wreg      void 
 13929 ;; Registers used:
 13930 ;;		None
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/0
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13940 ;;Total ram usage:        0 bytes
 13941 ;; Hardware stack levels used:    1
 13942 ;; Hardware stack levels required when called:    7
 13943 ;; This function calls:
 13944 ;;		Nothing
 13945 ;; This function is called by:
 13946 ;;		_do_I2C_TX_EMPTY
 13947 ;; This function uses a non-reentrant model
 13948 ;;
 13949                           
 13950                           	psect	text66
 13951  00C6A8                     __ptext66:
 13952                           	opt stack 0
 13953  00C6A8                     _mssp1_setIRQ:
 13954                           	opt stack 13
 13955                           
 13956                           ;i2c1_driver.c: 61: PIR1bits.SSP1IF = 1;
 13957                           
 13958                           ;incstack = 0
 13959  00C6A8  869E               	bsf	3998,3,c	;volatile
 13960  00C6AA  0012               	return		;funcret
 13961  00C6AC                     __end_of_mssp1_setIRQ:
 13962                           	opt stack 0
 13963                           tosu	equ	0xFFF
 13964                           tosh	equ	0xFFE
 13965                           tosl	equ	0xFFD
 13966                           pclath	equ	0xFFA
 13967                           tblptru	equ	0xFF8
 13968                           tblptrh	equ	0xFF7
 13969                           tblptrl	equ	0xFF6
 13970                           tablat	equ	0xFF5
 13971                           prodh	equ	0xFF4
 13972                           prodl	equ	0xFF3
 13973                           intcon	equ	0xFF2
 13974                           postinc0	equ	0xFEE
 13975                           wreg	equ	0xFE8
 13976                           indf2	equ	0xFDF
 13977                           postinc2	equ	0xFDE
 13978                           postdec2	equ	0xFDD
 13979                           fsr2h	equ	0xFDA
 13980                           fsr2l	equ	0xFD9
 13981                           status	equ	0xFD8
 13982                           
 13983 ;; *************** function _i2c1_driver_isNACK *****************
 13984 ;; Defined at:
 13985 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 13986 ;; Parameters:    Size  Location     Type
 13987 ;;		None
 13988 ;; Auto vars:     Size  Location     Type
 13989 ;;		None
 13990 ;; Return value:  Size  Location     Type
 13991 ;;		None               void
 13992 ;; Registers used:
 13993 ;;		wreg, status,0
 13994 ;; Tracked objects:
 13995 ;;		On entry : 0/0
 13996 ;;		On exit  : 0/0
 13997 ;;		Unchanged: 0/0
 13998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14001 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14003 ;;Total ram usage:        1 bytes
 14004 ;; Hardware stack levels used:    1
 14005 ;; Hardware stack levels required when called:    7
 14006 ;; This function calls:
 14007 ;;		Nothing
 14008 ;; This function is called by:
 14009 ;;		_do_I2C_TX
 14010 ;;		_i2c_ISR
 14011 ;; This function uses a non-reentrant model
 14012 ;;
 14013                           
 14014                           	psect	text67
 14015  00C32C                     __ptext67:
 14016                           	opt stack 0
 14017  00C32C                     _i2c1_driver_isNACK:
 14018                           	opt stack 14
 14019                           
 14020                           ;i2c1_driver.c: 164: return SSP1CON2bits.ACKSTAT;
 14021                           
 14022                           ;incstack = 0
 14023  00C32C  ACC5               	btfss	4037,6,c	;volatile
 14024  00C32E  D004               	goto	u9460
 14025  00C330  0100               	movlb	0	; () banked
 14026  00C332  6B60               	clrf	??_i2c1_driver_isNACK& (0+255),b
 14027  00C334  2B60               	incf	??_i2c1_driver_isNACK& (0+255),f,b
 14028  00C336  D002               	goto	u9468
 14029  00C338                     u9460:
 14030  00C338  0100               	movlb	0	; () banked
 14031  00C33A  6B60               	clrf	??_i2c1_driver_isNACK& (0+255),b
 14032  00C33C                     u9468:
 14033  00C33C  3160               	rrcf	??_i2c1_driver_isNACK& (0+255),w,b
 14034  00C33E  0012               	return	
 14035  00C340                     __end_of_i2c1_driver_isNACK:
 14036                           	opt stack 0
 14037                           tosu	equ	0xFFF
 14038                           tosh	equ	0xFFE
 14039                           tosl	equ	0xFFD
 14040                           pclath	equ	0xFFA
 14041                           tblptru	equ	0xFF8
 14042                           tblptrh	equ	0xFF7
 14043                           tblptrl	equ	0xFF6
 14044                           tablat	equ	0xFF5
 14045                           prodh	equ	0xFF4
 14046                           prodl	equ	0xFF3
 14047                           intcon	equ	0xFF2
 14048                           postinc0	equ	0xFEE
 14049                           wreg	equ	0xFE8
 14050                           indf2	equ	0xFDF
 14051                           postinc2	equ	0xFDE
 14052                           postdec2	equ	0xFDD
 14053                           fsr2h	equ	0xFDA
 14054                           fsr2l	equ	0xFD9
 14055                           status	equ	0xFD8
 14056                           
 14057 ;; *************** function _i2c1_driver_TXData *****************
 14058 ;; Defined at:
 14059 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 14060 ;; Parameters:    Size  Location     Type
 14061 ;;  d               1    wreg     unsigned char 
 14062 ;; Auto vars:     Size  Location     Type
 14063 ;;  d               1    0[BANK0 ] unsigned char 
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  1    wreg      void 
 14066 ;; Registers used:
 14067 ;;		wreg
 14068 ;; Tracked objects:
 14069 ;;		On entry : 0/0
 14070 ;;		On exit  : 0/0
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14074 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14076 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14077 ;;Total ram usage:        1 bytes
 14078 ;; Hardware stack levels used:    1
 14079 ;; Hardware stack levels required when called:    7
 14080 ;; This function calls:
 14081 ;;		Nothing
 14082 ;; This function is called by:
 14083 ;;		_do_I2C_SEND_ADR_READ
 14084 ;;		_do_I2C_SEND_ADR_WRITE
 14085 ;;		_do_I2C_TX
 14086 ;; This function uses a non-reentrant model
 14087 ;;
 14088                           
 14089                           	psect	text68
 14090  00C54C                     __ptext68:
 14091                           	opt stack 0
 14092  00C54C                     _i2c1_driver_TXData:
 14093                           	opt stack 13
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;incstack = 0
 14097                           ;i2c1_driver_TXData@d stored from wreg
 14098  00C54C  0100               	movlb	0	; () banked
 14099  00C54E  6F60               	movwf	i2c1_driver_TXData@d& (0+255),b
 14100                           
 14101                           ;i2c1_driver.c: 189: SSP1BUF = d;
 14102  00C550  C060  FFC9         	movff	i2c1_driver_TXData@d,4041	;volatile
 14103  00C554  0012               	return		;funcret
 14104  00C556                     __end_of_i2c1_driver_TXData:
 14105                           	opt stack 0
 14106                           tosu	equ	0xFFF
 14107                           tosh	equ	0xFFE
 14108                           tosl	equ	0xFFD
 14109                           pclath	equ	0xFFA
 14110                           tblptru	equ	0xFF8
 14111                           tblptrh	equ	0xFF7
 14112                           tblptrl	equ	0xFF6
 14113                           tablat	equ	0xFF5
 14114                           prodh	equ	0xFF4
 14115                           prodl	equ	0xFF3
 14116                           intcon	equ	0xFF2
 14117                           postinc0	equ	0xFEE
 14118                           wreg	equ	0xFE8
 14119                           indf2	equ	0xFDF
 14120                           postinc2	equ	0xFDE
 14121                           postdec2	equ	0xFDD
 14122                           fsr2h	equ	0xFDA
 14123                           fsr2l	equ	0xFD9
 14124                           status	equ	0xFD8
 14125                           
 14126 ;; *************** function _i2c1_driver_getRXData *****************
 14127 ;; Defined at:
 14128 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 14129 ;; Parameters:    Size  Location     Type
 14130 ;;		None
 14131 ;; Auto vars:     Size  Location     Type
 14132 ;;		None
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  1    wreg      unsigned char 
 14135 ;; Registers used:
 14136 ;;		wreg, status,2
 14137 ;; Tracked objects:
 14138 ;;		On entry : 0/0
 14139 ;;		On exit  : 0/0
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14146 ;;Total ram usage:        0 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; Hardware stack levels required when called:    7
 14149 ;; This function calls:
 14150 ;;		Nothing
 14151 ;; This function is called by:
 14152 ;;		_do_I2C_RX
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text69
 14157  00C6AC                     __ptext69:
 14158                           	opt stack 0
 14159  00C6AC                     _i2c1_driver_getRXData:
 14160                           	opt stack 13
 14161                           
 14162                           ;i2c1_driver.c: 174: return SSP1BUF;
 14163                           
 14164                           ;incstack = 0
 14165  00C6AC  50C9               	movf	4041,w,c	;volatile
 14166  00C6AE  0012               	return	
 14167  00C6B0                     __end_of_i2c1_driver_getRXData:
 14168                           	opt stack 0
 14169                           tosu	equ	0xFFF
 14170                           tosh	equ	0xFFE
 14171                           tosl	equ	0xFFD
 14172                           pclath	equ	0xFFA
 14173                           tblptru	equ	0xFF8
 14174                           tblptrh	equ	0xFF7
 14175                           tblptrl	equ	0xFF6
 14176                           tablat	equ	0xFF5
 14177                           prodh	equ	0xFF4
 14178                           prodl	equ	0xFF3
 14179                           intcon	equ	0xFF2
 14180                           postinc0	equ	0xFEE
 14181                           wreg	equ	0xFE8
 14182                           indf2	equ	0xFDF
 14183                           postinc2	equ	0xFDE
 14184                           postdec2	equ	0xFDD
 14185                           fsr2h	equ	0xFDA
 14186                           fsr2l	equ	0xFD9
 14187                           status	equ	0xFD8
 14188                           
 14189 ;; *************** function _i2c1_driver_sendNACK *****************
 14190 ;; Defined at:
 14191 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 14192 ;; Parameters:    Size  Location     Type
 14193 ;;		None
 14194 ;; Auto vars:     Size  Location     Type
 14195 ;;		None
 14196 ;; Return value:  Size  Location     Type
 14197 ;;                  1    wreg      void 
 14198 ;; Registers used:
 14199 ;;		None
 14200 ;; Tracked objects:
 14201 ;;		On entry : 0/0
 14202 ;;		On exit  : 0/0
 14203 ;;		Unchanged: 0/0
 14204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14209 ;;Total ram usage:        0 bytes
 14210 ;; Hardware stack levels used:    1
 14211 ;; Hardware stack levels required when called:    7
 14212 ;; This function calls:
 14213 ;;		Nothing
 14214 ;; This function is called by:
 14215 ;;		_do_I2C_DO_NACK_STOP
 14216 ;;		_do_I2C_DO_NACK_RESTART
 14217 ;; This function uses a non-reentrant model
 14218 ;;
 14219                           
 14220                           	psect	text70
 14221  00C66C                     __ptext70:
 14222                           	opt stack 0
 14223  00C66C                     _i2c1_driver_sendNACK:
 14224                           	opt stack 12
 14225                           
 14226                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKDT = 1;
 14227                           
 14228                           ;incstack = 0
 14229  00C66C  8AC5               	bsf	4037,5,c	;volatile
 14230                           
 14231                           ;i2c1_driver.c: 206: SSP1CON2bits.ACKEN = 1;
 14232  00C66E  88C5               	bsf	4037,4,c	;volatile
 14233  00C670  0012               	return		;funcret
 14234  00C672                     __end_of_i2c1_driver_sendNACK:
 14235                           	opt stack 0
 14236                           tosu	equ	0xFFF
 14237                           tosh	equ	0xFFE
 14238                           tosl	equ	0xFFD
 14239                           pclath	equ	0xFFA
 14240                           tblptru	equ	0xFF8
 14241                           tblptrh	equ	0xFF7
 14242                           tblptrl	equ	0xFF6
 14243                           tablat	equ	0xFF5
 14244                           prodh	equ	0xFF4
 14245                           prodl	equ	0xFF3
 14246                           intcon	equ	0xFF2
 14247                           postinc0	equ	0xFEE
 14248                           wreg	equ	0xFE8
 14249                           indf2	equ	0xFDF
 14250                           postinc2	equ	0xFDE
 14251                           postdec2	equ	0xFDD
 14252                           fsr2h	equ	0xFDA
 14253                           fsr2l	equ	0xFD9
 14254                           status	equ	0xFD8
 14255                           
 14256 ;; *************** function _i2c1_driver_resetBus *****************
 14257 ;; Defined at:
 14258 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 14259 ;; Parameters:    Size  Location     Type
 14260 ;;		None
 14261 ;; Auto vars:     Size  Location     Type
 14262 ;;		None
 14263 ;; Return value:  Size  Location     Type
 14264 ;;                  1    wreg      void 
 14265 ;; Registers used:
 14266 ;;		None
 14267 ;; Tracked objects:
 14268 ;;		On entry : 0/0
 14269 ;;		On exit  : 0/0
 14270 ;;		Unchanged: 0/0
 14271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14276 ;;Total ram usage:        0 bytes
 14277 ;; Hardware stack levels used:    1
 14278 ;; Hardware stack levels required when called:    7
 14279 ;; This function calls:
 14280 ;;		Nothing
 14281 ;; This function is called by:
 14282 ;;		_do_I2C_RESET
 14283 ;; This function uses a non-reentrant model
 14284 ;;
 14285                           
 14286                           	psect	text71
 14287  00C6E8                     __ptext71:
 14288                           	opt stack 0
 14289  00C6E8                     _i2c1_driver_resetBus:
 14290                           	opt stack 13
 14291                           
 14292                           ;incstack = 0
 14293  00C6E8  0012               	return		;funcret
 14294  00C6EA                     __end_of_i2c1_driver_resetBus:
 14295                           	opt stack 0
 14296                           tosu	equ	0xFFF
 14297                           tosh	equ	0xFFE
 14298                           tosl	equ	0xFFD
 14299                           pclath	equ	0xFFA
 14300                           tblptru	equ	0xFF8
 14301                           tblptrh	equ	0xFF7
 14302                           tblptrl	equ	0xFF6
 14303                           tablat	equ	0xFF5
 14304                           prodh	equ	0xFF4
 14305                           prodl	equ	0xFF3
 14306                           intcon	equ	0xFF2
 14307                           postinc0	equ	0xFEE
 14308                           wreg	equ	0xFE8
 14309                           indf2	equ	0xFDF
 14310                           postinc2	equ	0xFDE
 14311                           postdec2	equ	0xFDD
 14312                           fsr2h	equ	0xFDA
 14313                           fsr2l	equ	0xFD9
 14314                           status	equ	0xFD8
 14315                           
 14316 ;; *************** function _i2c1_driver_startRX *****************
 14317 ;; Defined at:
 14318 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 14319 ;; Parameters:    Size  Location     Type
 14320 ;;		None
 14321 ;; Auto vars:     Size  Location     Type
 14322 ;;		None
 14323 ;; Return value:  Size  Location     Type
 14324 ;;                  1    wreg      void 
 14325 ;; Registers used:
 14326 ;;		None
 14327 ;; Tracked objects:
 14328 ;;		On entry : 0/0
 14329 ;;		On exit  : 0/0
 14330 ;;		Unchanged: 0/0
 14331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14336 ;;Total ram usage:        0 bytes
 14337 ;; Hardware stack levels used:    1
 14338 ;; Hardware stack levels required when called:    7
 14339 ;; This function calls:
 14340 ;;		Nothing
 14341 ;; This function is called by:
 14342 ;;		_do_I2C_RCEN
 14343 ;; This function uses a non-reentrant model
 14344 ;;
 14345                           
 14346                           	psect	text72
 14347  00C6B0                     __ptext72:
 14348                           	opt stack 0
 14349  00C6B0                     _i2c1_driver_startRX:
 14350                           	opt stack 13
 14351                           
 14352                           ;i2c1_driver.c: 169: SSP1CON2bits.RCEN = 1;
 14353                           
 14354                           ;incstack = 0
 14355  00C6B0  86C5               	bsf	4037,3,c	;volatile
 14356  00C6B2  0012               	return		;funcret
 14357  00C6B4                     __end_of_i2c1_driver_startRX:
 14358                           	opt stack 0
 14359                           tosu	equ	0xFFF
 14360                           tosh	equ	0xFFE
 14361                           tosl	equ	0xFFD
 14362                           pclath	equ	0xFFA
 14363                           tblptru	equ	0xFF8
 14364                           tblptrh	equ	0xFF7
 14365                           tblptrl	equ	0xFF6
 14366                           tablat	equ	0xFF5
 14367                           prodh	equ	0xFF4
 14368                           prodl	equ	0xFF3
 14369                           intcon	equ	0xFF2
 14370                           postinc0	equ	0xFEE
 14371                           wreg	equ	0xFE8
 14372                           indf2	equ	0xFDF
 14373                           postinc2	equ	0xFDE
 14374                           postdec2	equ	0xFDD
 14375                           fsr2h	equ	0xFDA
 14376                           fsr2l	equ	0xFD9
 14377                           status	equ	0xFD8
 14378                           
 14379 ;; *************** function _rdBlkRegCompleteHandler *****************
 14380 ;; Defined at:
 14381 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14382 ;; Parameters:    Size  Location     Type
 14383 ;;  p               2    9[BANK0 ] PTR void 
 14384 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14385 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14386 ;; Auto vars:     Size  Location     Type
 14387 ;;		None
 14388 ;; Return value:  Size  Location     Type
 14389 ;;                  1    wreg      enum E97
 14390 ;; Registers used:
 14391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14392 ;; Tracked objects:
 14393 ;;		On entry : 0/0
 14394 ;;		On exit  : 0/0
 14395 ;;		Unchanged: 0/0
 14396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14400 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14401 ;;Total ram usage:        2 bytes
 14402 ;; Hardware stack levels used:    1
 14403 ;; Hardware stack levels required when called:    9
 14404 ;; This function calls:
 14405 ;;		_i2c_setBuffer
 14406 ;;		_i2c_setDataCompleteCallback
 14407 ;; This function is called by:
 14408 ;;		_i2c_readDataBlock
 14409 ;;		_do_I2C_DO_ADDRESS_NACK
 14410 ;;		_do_I2C_TX
 14411 ;;		_do_I2C_RX
 14412 ;;		_do_I2C_TX_EMPTY
 14413 ;; This function uses a non-reentrant model
 14414 ;;
 14415                           
 14416                           	psect	text73
 14417  00B45A                     __ptext73:
 14418                           	opt stack 0
 14419  00B45A                     _rdBlkRegCompleteHandler:
 14420                           	opt stack 11
 14421                           
 14422                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 14423                           
 14424                           ;incstack = 0
 14425  00B45A  0100               	movlb	0	; () banked
 14426  00B45C  EE20 F002          	lfsr	2,2
 14427  00B460  5169               	movf	rdBlkRegCompleteHandler@p& (0+255),w,b
 14428  00B462  26D9               	addwf	fsr2l,f,c
 14429  00B464  516A               	movf	(rdBlkRegCompleteHandler@p+1)& (0+255),w,b
 14430  00B466  22DA               	addwfc	fsr2h,f,c
 14431  00B468  CFDE F060          	movff	postinc2,i2c_setBuffer@buffer
 14432  00B46C  CFDD F061          	movff	postdec2,i2c_setBuffer@buffer+1
 14433  00B470  C069  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 14434  00B474  C06A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 14435  00B478  CFDE F062          	movff	postinc2,i2c_setBuffer@bufferSize
 14436  00B47C  CFDD F063          	movff	postdec2,i2c_setBuffer@bufferSize+1
 14437  00B480  ECD3  F060         	call	_i2c_setBuffer	;wreg free
 14438                           
 14439                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 14440  00B484  0E00               	movlw	0
 14441  00B486  0100               	movlb	0	; () banked
 14442  00B488  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 14443  00B48A  0E00               	movlw	0
 14444  00B48C  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 14445  00B48E  0E00               	movlw	0
 14446  00B490  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 14447  00B492  0E00               	movlw	0
 14448  00B494  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 14449  00B496  EC06  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 14450                           
 14451                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 14452  00B49A  0E02               	movlw	2
 14453  00B49C  0012               	return	
 14454  00B49E                     __end_of_rdBlkRegCompleteHandler:
 14455                           	opt stack 0
 14456                           tosu	equ	0xFFF
 14457                           tosh	equ	0xFFE
 14458                           tosl	equ	0xFFD
 14459                           pclath	equ	0xFFA
 14460                           tblptru	equ	0xFF8
 14461                           tblptrh	equ	0xFF7
 14462                           tblptrl	equ	0xFF6
 14463                           tablat	equ	0xFF5
 14464                           prodh	equ	0xFF4
 14465                           prodl	equ	0xFF3
 14466                           intcon	equ	0xFF2
 14467                           postinc0	equ	0xFEE
 14468                           wreg	equ	0xFE8
 14469                           indf2	equ	0xFDF
 14470                           postinc2	equ	0xFDE
 14471                           postdec2	equ	0xFDD
 14472                           fsr2h	equ	0xFDA
 14473                           fsr2l	equ	0xFD9
 14474                           status	equ	0xFD8
 14475                           
 14476 ;; *************** function _rd2RegCompleteHandler *****************
 14477 ;; Defined at:
 14478 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14479 ;; Parameters:    Size  Location     Type
 14480 ;;  p               2    9[BANK0 ] PTR void 
 14481 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14482 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14483 ;; Auto vars:     Size  Location     Type
 14484 ;;		None
 14485 ;; Return value:  Size  Location     Type
 14486 ;;                  1    wreg      enum E97
 14487 ;; Registers used:
 14488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14489 ;; Tracked objects:
 14490 ;;		On entry : 0/0
 14491 ;;		On exit  : 0/0
 14492 ;;		Unchanged: 0/0
 14493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14494 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14497 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14498 ;;Total ram usage:        2 bytes
 14499 ;; Hardware stack levels used:    1
 14500 ;; Hardware stack levels required when called:    9
 14501 ;; This function calls:
 14502 ;;		_i2c_setBuffer
 14503 ;;		_i2c_setDataCompleteCallback
 14504 ;; This function is called by:
 14505 ;;		_i2c_read2ByteRegister
 14506 ;;		_do_I2C_DO_ADDRESS_NACK
 14507 ;;		_do_I2C_TX
 14508 ;;		_do_I2C_RX
 14509 ;;		_do_I2C_TX_EMPTY
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           	psect	text74
 14514  00B8F6                     __ptext74:
 14515                           	opt stack 0
 14516  00B8F6                     _rd2RegCompleteHandler:
 14517                           	opt stack 11
 14518                           
 14519                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 14520                           
 14521                           ;incstack = 0
 14522  00B8F6  C069  F060         	movff	rd2RegCompleteHandler@p,i2c_setBuffer@buffer
 14523  00B8FA  C06A  F061         	movff	rd2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
 14524  00B8FE  0E00               	movlw	0
 14525  00B900  0100               	movlb	0	; () banked
 14526  00B902  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 14527  00B904  0E02               	movlw	2
 14528  00B906  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 14529  00B908  ECD3  F060         	call	_i2c_setBuffer	;wreg free
 14530                           
 14531                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 14532  00B90C  0E00               	movlw	0
 14533  00B90E  0100               	movlb	0	; () banked
 14534  00B910  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 14535  00B912  0E00               	movlw	0
 14536  00B914  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 14537  00B916  0E00               	movlw	0
 14538  00B918  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 14539  00B91A  0E00               	movlw	0
 14540  00B91C  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 14541  00B91E  EC06  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 14542                           
 14543                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 14544  00B922  0E02               	movlw	2
 14545  00B924  0012               	return	
 14546  00B926                     __end_of_rd2RegCompleteHandler:
 14547                           	opt stack 0
 14548                           tosu	equ	0xFFF
 14549                           tosh	equ	0xFFE
 14550                           tosl	equ	0xFFD
 14551                           pclath	equ	0xFFA
 14552                           tblptru	equ	0xFF8
 14553                           tblptrh	equ	0xFF7
 14554                           tblptrl	equ	0xFF6
 14555                           tablat	equ	0xFF5
 14556                           prodh	equ	0xFF4
 14557                           prodl	equ	0xFF3
 14558                           intcon	equ	0xFF2
 14559                           postinc0	equ	0xFEE
 14560                           wreg	equ	0xFE8
 14561                           indf2	equ	0xFDF
 14562                           postinc2	equ	0xFDE
 14563                           postdec2	equ	0xFDD
 14564                           fsr2h	equ	0xFDA
 14565                           fsr2l	equ	0xFD9
 14566                           status	equ	0xFD8
 14567                           
 14568 ;; *************** function _rd1RegCompleteHandler *****************
 14569 ;; Defined at:
 14570 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14571 ;; Parameters:    Size  Location     Type
 14572 ;;  p               2    9[BANK0 ] PTR void 
 14573 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14574 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14575 ;; Auto vars:     Size  Location     Type
 14576 ;;		None
 14577 ;; Return value:  Size  Location     Type
 14578 ;;                  1    wreg      enum E97
 14579 ;; Registers used:
 14580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14581 ;; Tracked objects:
 14582 ;;		On entry : 0/0
 14583 ;;		On exit  : 0/0
 14584 ;;		Unchanged: 0/0
 14585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14589 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14590 ;;Total ram usage:        2 bytes
 14591 ;; Hardware stack levels used:    1
 14592 ;; Hardware stack levels required when called:    9
 14593 ;; This function calls:
 14594 ;;		_i2c_setBuffer
 14595 ;;		_i2c_setDataCompleteCallback
 14596 ;; This function is called by:
 14597 ;;		_i2c_read1ByteRegister
 14598 ;;		_do_I2C_DO_ADDRESS_NACK
 14599 ;;		_do_I2C_TX
 14600 ;;		_do_I2C_RX
 14601 ;;		_do_I2C_TX_EMPTY
 14602 ;; This function uses a non-reentrant model
 14603 ;;
 14604                           
 14605                           	psect	text75
 14606  00B926                     __ptext75:
 14607                           	opt stack 0
 14608  00B926                     _rd1RegCompleteHandler:
 14609                           	opt stack 11
 14610                           
 14611                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 14612                           
 14613                           ;incstack = 0
 14614  00B926  C069  F060         	movff	rd1RegCompleteHandler@p,i2c_setBuffer@buffer
 14615  00B92A  C06A  F061         	movff	rd1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
 14616  00B92E  0E00               	movlw	0
 14617  00B930  0100               	movlb	0	; () banked
 14618  00B932  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 14619  00B934  0E01               	movlw	1
 14620  00B936  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 14621  00B938  ECD3  F060         	call	_i2c_setBuffer	;wreg free
 14622                           
 14623                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 14624  00B93C  0E00               	movlw	0
 14625  00B93E  0100               	movlb	0	; () banked
 14626  00B940  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 14627  00B942  0E00               	movlw	0
 14628  00B944  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 14629  00B946  0E00               	movlw	0
 14630  00B948  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 14631  00B94A  0E00               	movlw	0
 14632  00B94C  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 14633  00B94E  EC06  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 14634                           
 14635                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 14636  00B952  0E02               	movlw	2
 14637  00B954  0012               	return	
 14638  00B956                     __end_of_rd1RegCompleteHandler:
 14639                           	opt stack 0
 14640                           tosu	equ	0xFFF
 14641                           tosh	equ	0xFFE
 14642                           tosl	equ	0xFFD
 14643                           pclath	equ	0xFFA
 14644                           tblptru	equ	0xFF8
 14645                           tblptrh	equ	0xFF7
 14646                           tblptrl	equ	0xFF6
 14647                           tablat	equ	0xFF5
 14648                           prodh	equ	0xFF4
 14649                           prodl	equ	0xFF3
 14650                           intcon	equ	0xFF2
 14651                           postinc0	equ	0xFEE
 14652                           wreg	equ	0xFE8
 14653                           indf2	equ	0xFDF
 14654                           postinc2	equ	0xFDE
 14655                           postdec2	equ	0xFDD
 14656                           fsr2h	equ	0xFDA
 14657                           fsr2l	equ	0xFD9
 14658                           status	equ	0xFD8
 14659                           
 14660 ;; *************** function _wr1RegCompleteHandler *****************
 14661 ;; Defined at:
 14662 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14663 ;; Parameters:    Size  Location     Type
 14664 ;;  p               2    9[BANK0 ] PTR void 
 14665 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14666 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;		None
 14669 ;; Return value:  Size  Location     Type
 14670 ;;                  1    wreg      enum E97
 14671 ;; Registers used:
 14672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14673 ;; Tracked objects:
 14674 ;;		On entry : 0/0
 14675 ;;		On exit  : 0/0
 14676 ;;		Unchanged: 0/0
 14677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14678 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14681 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14682 ;;Total ram usage:        2 bytes
 14683 ;; Hardware stack levels used:    1
 14684 ;; Hardware stack levels required when called:    9
 14685 ;; This function calls:
 14686 ;;		_i2c_setBuffer
 14687 ;;		_i2c_setDataCompleteCallback
 14688 ;; This function is called by:
 14689 ;;		_i2c_write1ByteRegister
 14690 ;;		_do_I2C_DO_ADDRESS_NACK
 14691 ;;		_do_I2C_TX
 14692 ;;		_do_I2C_RX
 14693 ;;		_do_I2C_TX_EMPTY
 14694 ;; This function uses a non-reentrant model
 14695 ;;
 14696                           
 14697                           	psect	text76
 14698  00B956                     __ptext76:
 14699                           	opt stack 0
 14700  00B956                     _wr1RegCompleteHandler:
 14701                           	opt stack 11
 14702                           
 14703                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 14704                           
 14705                           ;incstack = 0
 14706  00B956  C069  F060         	movff	wr1RegCompleteHandler@p,i2c_setBuffer@buffer
 14707  00B95A  C06A  F061         	movff	wr1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
 14708  00B95E  0E00               	movlw	0
 14709  00B960  0100               	movlb	0	; () banked
 14710  00B962  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 14711  00B964  0E01               	movlw	1
 14712  00B966  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 14713  00B968  ECD3  F060         	call	_i2c_setBuffer	;wreg free
 14714                           
 14715                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 14716  00B96C  0E00               	movlw	0
 14717  00B96E  0100               	movlb	0	; () banked
 14718  00B970  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 14719  00B972  0E00               	movlw	0
 14720  00B974  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 14721  00B976  0E00               	movlw	0
 14722  00B978  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 14723  00B97A  0E00               	movlw	0
 14724  00B97C  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 14725  00B97E  EC06  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 14726                           
 14727                           ;i2c_simple_master.c: 35: return i2c_continue;
 14728  00B982  0E04               	movlw	4
 14729  00B984  0012               	return	
 14730  00B986                     __end_of_wr1RegCompleteHandler:
 14731                           	opt stack 0
 14732                           tosu	equ	0xFFF
 14733                           tosh	equ	0xFFE
 14734                           tosl	equ	0xFFD
 14735                           pclath	equ	0xFFA
 14736                           tblptru	equ	0xFF8
 14737                           tblptrh	equ	0xFF7
 14738                           tblptrl	equ	0xFF6
 14739                           tablat	equ	0xFF5
 14740                           prodh	equ	0xFF4
 14741                           prodl	equ	0xFF3
 14742                           intcon	equ	0xFF2
 14743                           postinc0	equ	0xFEE
 14744                           wreg	equ	0xFE8
 14745                           indf2	equ	0xFDF
 14746                           postinc2	equ	0xFDE
 14747                           postdec2	equ	0xFDD
 14748                           fsr2h	equ	0xFDA
 14749                           fsr2l	equ	0xFD9
 14750                           status	equ	0xFD8
 14751                           
 14752 ;; *************** function _returnReset *****************
 14753 ;; Defined at:
 14754 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 14755 ;; Parameters:    Size  Location     Type
 14756 ;;  p               2    9[BANK0 ] PTR void 
 14757 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14758 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14759 ;; Auto vars:     Size  Location     Type
 14760 ;;		None
 14761 ;; Return value:  Size  Location     Type
 14762 ;;                  1    wreg      enum E7171
 14763 ;; Registers used:
 14764 ;;		wreg
 14765 ;; Tracked objects:
 14766 ;;		On entry : 0/0
 14767 ;;		On exit  : 0/0
 14768 ;;		Unchanged: 0/0
 14769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14773 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14774 ;;Total ram usage:        2 bytes
 14775 ;; Hardware stack levels used:    1
 14776 ;; Hardware stack levels required when called:    7
 14777 ;; This function calls:
 14778 ;;		Nothing
 14779 ;; This function is called by:
 14780 ;;		_i2c_open
 14781 ;;		_do_I2C_DO_ADDRESS_NACK
 14782 ;;		_do_I2C_TX
 14783 ;;		_do_I2C_RX
 14784 ;;		_do_I2C_TX_EMPTY
 14785 ;; This function uses a non-reentrant model
 14786 ;;
 14787                           
 14788                           	psect	text77
 14789  00C6B4                     __ptext77:
 14790                           	opt stack 0
 14791  00C6B4                     _returnReset:
 14792                           	opt stack 13
 14793                           
 14794                           ;i2c_master.c: 450: return i2c_reset_link;
 14795                           
 14796                           ;incstack = 0
 14797  00C6B4  0E05               	movlw	5
 14798  00C6B6  0012               	return	
 14799  00C6B8                     __end_of_returnReset:
 14800                           	opt stack 0
 14801                           tosu	equ	0xFFF
 14802                           tosh	equ	0xFFE
 14803                           tosl	equ	0xFFD
 14804                           pclath	equ	0xFFA
 14805                           tblptru	equ	0xFF8
 14806                           tblptrh	equ	0xFF7
 14807                           tblptrl	equ	0xFF6
 14808                           tablat	equ	0xFF5
 14809                           prodh	equ	0xFF4
 14810                           prodl	equ	0xFF3
 14811                           intcon	equ	0xFF2
 14812                           postinc0	equ	0xFEE
 14813                           wreg	equ	0xFE8
 14814                           indf2	equ	0xFDF
 14815                           postinc2	equ	0xFDE
 14816                           postdec2	equ	0xFDD
 14817                           fsr2h	equ	0xFDA
 14818                           fsr2l	equ	0xFD9
 14819                           status	equ	0xFD8
 14820                           
 14821 ;; *************** function _returnStop *****************
 14822 ;; Defined at:
 14823 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 14824 ;; Parameters:    Size  Location     Type
 14825 ;;  p               2    9[BANK0 ] PTR void 
 14826 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14827 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;		None
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  1    wreg      enum E7171
 14832 ;; Registers used:
 14833 ;;		wreg
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/0
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14842 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14843 ;;Total ram usage:        2 bytes
 14844 ;; Hardware stack levels used:    1
 14845 ;; Hardware stack levels required when called:    7
 14846 ;; This function calls:
 14847 ;;		Nothing
 14848 ;; This function is called by:
 14849 ;;		_i2c_open
 14850 ;;		_setCallBack
 14851 ;;		_do_I2C_DO_ADDRESS_NACK
 14852 ;;		_do_I2C_TX
 14853 ;;		_do_I2C_RX
 14854 ;;		_do_I2C_TX_EMPTY
 14855 ;; This function uses a non-reentrant model
 14856 ;;
 14857                           
 14858                           	psect	text78
 14859  00C6B8                     __ptext78:
 14860                           	opt stack 0
 14861  00C6B8                     _returnStop:
 14862                           	opt stack 13
 14863                           
 14864                           ;i2c_master.c: 445: return i2c_stop;
 14865                           
 14866                           ;incstack = 0
 14867  00C6B8  0E01               	movlw	1
 14868  00C6BA  0012               	return	
 14869  00C6BC                     __end_of_returnStop:
 14870                           	opt stack 0
 14871                           tosu	equ	0xFFF
 14872                           tosh	equ	0xFFE
 14873                           tosl	equ	0xFFD
 14874                           pclath	equ	0xFFA
 14875                           tblptru	equ	0xFF8
 14876                           tblptrh	equ	0xFF7
 14877                           tblptrl	equ	0xFF6
 14878                           tablat	equ	0xFF5
 14879                           prodh	equ	0xFF4
 14880                           prodl	equ	0xFF3
 14881                           intcon	equ	0xFF2
 14882                           postinc0	equ	0xFEE
 14883                           wreg	equ	0xFE8
 14884                           indf2	equ	0xFDF
 14885                           postinc2	equ	0xFDE
 14886                           postdec2	equ	0xFDD
 14887                           fsr2h	equ	0xFDA
 14888                           fsr2l	equ	0xFD9
 14889                           status	equ	0xFD8
 14890                           
 14891 ;; *************** function _i2c_restartWrite *****************
 14892 ;; Defined at:
 14893 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 14894 ;; Parameters:    Size  Location     Type
 14895 ;;  p               2    9[BANK0 ] PTR void 
 14896 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14897 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14898 ;; Auto vars:     Size  Location     Type
 14899 ;;		None
 14900 ;; Return value:  Size  Location     Type
 14901 ;;                  1    wreg      enum E96
 14902 ;; Registers used:
 14903 ;;		wreg
 14904 ;; Tracked objects:
 14905 ;;		On entry : 0/0
 14906 ;;		On exit  : 0/0
 14907 ;;		Unchanged: 0/0
 14908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14909 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14912 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14913 ;;Total ram usage:        2 bytes
 14914 ;; Hardware stack levels used:    1
 14915 ;; Hardware stack levels required when called:    7
 14916 ;; This function calls:
 14917 ;;		Nothing
 14918 ;; This function is called by:
 14919 ;;		_i2c_write1ByteRegister
 14920 ;;		_i2c_read1ByteRegister
 14921 ;;		_i2c_readDataBlock
 14922 ;;		_i2c_writeNBytes
 14923 ;;		_i2c_read2ByteRegister
 14924 ;;		_i2c_write2ByteRegister
 14925 ;;		_do_I2C_DO_ADDRESS_NACK
 14926 ;;		_do_I2C_TX
 14927 ;;		_do_I2C_RX
 14928 ;;		_do_I2C_TX_EMPTY
 14929 ;; This function uses a non-reentrant model
 14930 ;;
 14931                           
 14932                           	psect	text79
 14933  00C6BC                     __ptext79:
 14934                           	opt stack 0
 14935  00C6BC                     _i2c_restartWrite:
 14936                           	opt stack 13
 14937                           
 14938                           ;i2c_types.c: 37: return i2c_restart_write;
 14939                           
 14940                           ;incstack = 0
 14941  00C6BC  0E03               	movlw	3
 14942  00C6BE  0012               	return	
 14943  00C6C0                     __end_of_i2c_restartWrite:
 14944                           	opt stack 0
 14945                           tosu	equ	0xFFF
 14946                           tosh	equ	0xFFE
 14947                           tosl	equ	0xFFD
 14948                           pclath	equ	0xFFA
 14949                           tblptru	equ	0xFF8
 14950                           tblptrh	equ	0xFF7
 14951                           tblptrl	equ	0xFF6
 14952                           tablat	equ	0xFF5
 14953                           prodh	equ	0xFF4
 14954                           prodl	equ	0xFF3
 14955                           intcon	equ	0xFF2
 14956                           postinc0	equ	0xFEE
 14957                           wreg	equ	0xFE8
 14958                           indf2	equ	0xFDF
 14959                           postinc2	equ	0xFDE
 14960                           postdec2	equ	0xFDD
 14961                           fsr2h	equ	0xFDA
 14962                           fsr2l	equ	0xFD9
 14963                           status	equ	0xFD8
 14964                           
 14965 ;; *************** function _wr2RegCompleteHandler *****************
 14966 ;; Defined at:
 14967 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14968 ;; Parameters:    Size  Location     Type
 14969 ;;  p               2    9[BANK0 ] PTR void 
 14970 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14971 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14972 ;; Auto vars:     Size  Location     Type
 14973 ;;		None
 14974 ;; Return value:  Size  Location     Type
 14975 ;;                  1    wreg      enum E97
 14976 ;; Registers used:
 14977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14978 ;; Tracked objects:
 14979 ;;		On entry : 0/0
 14980 ;;		On exit  : 0/0
 14981 ;;		Unchanged: 0/0
 14982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14983 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14986 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14987 ;;Total ram usage:        2 bytes
 14988 ;; Hardware stack levels used:    1
 14989 ;; Hardware stack levels required when called:    9
 14990 ;; This function calls:
 14991 ;;		_i2c_setBuffer
 14992 ;;		_i2c_setDataCompleteCallback
 14993 ;; This function is called by:
 14994 ;;		_i2c_write2ByteRegister
 14995 ;;		_do_I2C_DO_ADDRESS_NACK
 14996 ;;		_do_I2C_TX
 14997 ;;		_do_I2C_RX
 14998 ;;		_do_I2C_TX_EMPTY
 14999 ;; This function uses a non-reentrant model
 15000 ;;
 15001                           
 15002                           	psect	text80
 15003  00B986                     __ptext80:
 15004                           	opt stack 0
 15005  00B986                     _wr2RegCompleteHandler:
 15006                           	opt stack 11
 15007                           
 15008                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 15009                           
 15010                           ;incstack = 0
 15011  00B986  C069  F060         	movff	wr2RegCompleteHandler@p,i2c_setBuffer@buffer
 15012  00B98A  C06A  F061         	movff	wr2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
 15013  00B98E  0E00               	movlw	0
 15014  00B990  0100               	movlb	0	; () banked
 15015  00B992  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 15016  00B994  0E02               	movlw	2
 15017  00B996  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 15018  00B998  ECD3  F060         	call	_i2c_setBuffer	;wreg free
 15019                           
 15020                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 15021  00B99C  0E00               	movlw	0
 15022  00B99E  0100               	movlb	0	; () banked
 15023  00B9A0  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 15024  00B9A2  0E00               	movlw	0
 15025  00B9A4  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 15026  00B9A6  0E00               	movlw	0
 15027  00B9A8  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 15028  00B9AA  0E00               	movlw	0
 15029  00B9AC  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 15030  00B9AE  EC06  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 15031                           
 15032                           ;i2c_simple_master.c: 114: return i2c_continue;
 15033  00B9B2  0E04               	movlw	4
 15034  00B9B4  0012               	return	
 15035  00B9B6                     __end_of_wr2RegCompleteHandler:
 15036                           	opt stack 0
 15037                           tosu	equ	0xFFF
 15038                           tosh	equ	0xFFE
 15039                           tosl	equ	0xFFD
 15040                           pclath	equ	0xFFA
 15041                           tblptru	equ	0xFF8
 15042                           tblptrh	equ	0xFF7
 15043                           tblptrl	equ	0xFF6
 15044                           tablat	equ	0xFF5
 15045                           prodh	equ	0xFF4
 15046                           prodl	equ	0xFF3
 15047                           intcon	equ	0xFF2
 15048                           postinc0	equ	0xFEE
 15049                           wreg	equ	0xFE8
 15050                           indf2	equ	0xFDF
 15051                           postinc2	equ	0xFDE
 15052                           postdec2	equ	0xFDD
 15053                           fsr2h	equ	0xFDA
 15054                           fsr2l	equ	0xFD9
 15055                           status	equ	0xFD8
 15056                           
 15057 ;; *************** function _i2c_setDataCompleteCallback *****************
 15058 ;; Defined at:
 15059 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 15060 ;; Parameters:    Size  Location     Type
 15061 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 15062 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15063 ;;		 -> wr1RegCompleteHandler(1), Absolute function(4), 
 15064 ;;  p               2    7[BANK0 ] PTR void 
 15065 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15066 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15067 ;; Auto vars:     Size  Location     Type
 15068 ;;		None
 15069 ;; Return value:  Size  Location     Type
 15070 ;;                  1    wreg      void 
 15071 ;; Registers used:
 15072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15073 ;; Tracked objects:
 15074 ;;		On entry : 0/0
 15075 ;;		On exit  : 0/0
 15076 ;;		Unchanged: 0/0
 15077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15078 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15081 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15082 ;;Total ram usage:        4 bytes
 15083 ;; Hardware stack levels used:    1
 15084 ;; Hardware stack levels required when called:    8
 15085 ;; This function calls:
 15086 ;;		_setCallBack
 15087 ;; This function is called by:
 15088 ;;		_wr1RegCompleteHandler
 15089 ;;		_i2c_write1ByteRegister
 15090 ;;		_rd1RegCompleteHandler
 15091 ;;		_i2c_read1ByteRegister
 15092 ;;		_rd2RegCompleteHandler
 15093 ;;		_wr2RegCompleteHandler
 15094 ;;		_rdBlkRegCompleteHandler
 15095 ;;		_i2c_readDataBlock
 15096 ;;		_i2c_read2ByteRegister
 15097 ;;		_i2c_write2ByteRegister
 15098 ;; This function uses a non-reentrant model
 15099 ;;
 15100                           
 15101                           	psect	text81
 15102  00C20C                     __ptext81:
 15103                           	opt stack 0
 15104  00C20C                     _i2c_setDataCompleteCallback:
 15105                           	opt stack 17
 15106                           
 15107                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 15108                           
 15109                           ;incstack = 0
 15110  00C20C  C065  F060         	movff	i2c_setDataCompleteCallback@cb,setCallBack@cb
 15111  00C210  C066  F061         	movff	i2c_setDataCompleteCallback@cb+1,setCallBack@cb+1
 15112  00C214  C067  F062         	movff	i2c_setDataCompleteCallback@p,setCallBack@p
 15113  00C218  C068  F063         	movff	i2c_setDataCompleteCallback@p+1,setCallBack@p+1
 15114  00C21C  0E00               	movlw	0
 15115  00C21E  EC9D  F052         	call	_setCallBack
 15116  00C222  0012               	return		;funcret
 15117  00C224                     __end_of_i2c_setDataCompleteCallback:
 15118                           	opt stack 0
 15119                           tosu	equ	0xFFF
 15120                           tosh	equ	0xFFE
 15121                           tosl	equ	0xFFD
 15122                           pclath	equ	0xFFA
 15123                           tblptru	equ	0xFF8
 15124                           tblptrh	equ	0xFF7
 15125                           tblptrl	equ	0xFF6
 15126                           tablat	equ	0xFF5
 15127                           prodh	equ	0xFF4
 15128                           prodl	equ	0xFF3
 15129                           intcon	equ	0xFF2
 15130                           postinc0	equ	0xFEE
 15131                           wreg	equ	0xFE8
 15132                           indf2	equ	0xFDF
 15133                           postinc2	equ	0xFDE
 15134                           postdec2	equ	0xFDD
 15135                           fsr2h	equ	0xFDA
 15136                           fsr2l	equ	0xFD9
 15137                           status	equ	0xFD8
 15138                           
 15139 ;; *************** function _setCallBack *****************
 15140 ;; Defined at:
 15141 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 15142 ;; Parameters:    Size  Location     Type
 15143 ;;  idx             1    wreg     enum E7356
 15144 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 15145 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15146 ;;		 -> wr1RegCompleteHandler(1), Absolute function(4), i2c_restartWrite(1), 
 15147 ;;  p               2    2[BANK0 ] PTR void 
 15148 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15149 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15150 ;; Auto vars:     Size  Location     Type
 15151 ;;  idx             1    4[BANK0 ] enum E7356
 15152 ;; Return value:  Size  Location     Type
 15153 ;;                  1    wreg      void 
 15154 ;; Registers used:
 15155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15156 ;; Tracked objects:
 15157 ;;		On entry : 0/0
 15158 ;;		On exit  : 0/0
 15159 ;;		Unchanged: 0/0
 15160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15161 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15162 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15164 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15165 ;;Total ram usage:        5 bytes
 15166 ;; Hardware stack levels used:    1
 15167 ;; Hardware stack levels required when called:    7
 15168 ;; This function calls:
 15169 ;;		Nothing
 15170 ;; This function is called by:
 15171 ;;		_i2c_setDataCompleteCallback
 15172 ;;		_i2c_setAddressNACKCallback
 15173 ;;		_i2c_setWriteCollisionCallback
 15174 ;;		_i2c_setDataNACKCallback
 15175 ;;		_i2c_setTimeOutCallback
 15176 ;; This function uses a non-reentrant model
 15177 ;;
 15178                           
 15179                           	psect	text82
 15180  00A53A                     __ptext82:
 15181                           	opt stack 0
 15182  00A53A                     _setCallBack:
 15183                           	opt stack 17
 15184                           
 15185                           ;incstack = 0
 15186                           ;setCallBack@idx stored from wreg
 15187  00A53A  0100               	movlb	0	; () banked
 15188  00A53C  6F64               	movwf	setCallBack@idx& (0+255),b
 15189                           
 15190                           ;i2c_master.c: 455: if(cb)
 15191  00A53E  0100               	movlb	0	; () banked
 15192  00A540  5160               	movf	setCallBack@cb& (0+255),w,b
 15193  00A542  1161               	iorwf	(setCallBack@cb+1)& (0+255),w,b
 15194  00A544  B4D8               	btfsc	status,2,c
 15195  00A546  D019               	goto	l222
 15196                           
 15197                           ; BSR set to: 0
 15198                           ;i2c_master.c: 456: {
 15199                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 15200  00A548  5164               	movf	setCallBack@idx& (0+255),w,b
 15201  00A54A  0D02               	mullw	2
 15202  00A54C  0EAC               	movlw	low (_i2c_status+12)
 15203  00A54E  24F3               	addwf	prodl,w,c
 15204  00A550  6ED9               	movwf	fsr2l,c
 15205  00A552  0E03               	movlw	high (_i2c_status+12)
 15206  00A554  20F4               	addwfc	prodh,w,c
 15207  00A556  6EDA               	movwf	fsr2h,c
 15208  00A558  C060  FFDE         	movff	setCallBack@cb,postinc2
 15209  00A55C  C061  FFDD         	movff	setCallBack@cb+1,postdec2
 15210                           
 15211                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 15212  00A560  5164               	movf	setCallBack@idx& (0+255),w,b
 15213  00A562  0D02               	mullw	2
 15214  00A564  0EB8               	movlw	low (_i2c_status+24)
 15215  00A566  24F3               	addwf	prodl,w,c
 15216  00A568  6ED9               	movwf	fsr2l,c
 15217  00A56A  0E03               	movlw	high (_i2c_status+24)
 15218  00A56C  20F4               	addwfc	prodh,w,c
 15219  00A56E  6EDA               	movwf	fsr2h,c
 15220  00A570  C062  FFDE         	movff	setCallBack@p,postinc2
 15221  00A574  C063  FFDD         	movff	setCallBack@p+1,postdec2
 15222                           
 15223                           ;i2c_master.c: 459: }
 15224  00A578  0012               	return	
 15225  00A57A                     l222:
 15226                           
 15227                           ; BSR set to: 0
 15228                           ;i2c_master.c: 460: else
 15229                           ;i2c_master.c: 461: {
 15230                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 15231                           
 15232                           ; BSR set to: 0
 15233  00A57A  5164               	movf	setCallBack@idx& (0+255),w,b
 15234  00A57C  0D02               	mullw	2
 15235  00A57E  0EAC               	movlw	low (_i2c_status+12)
 15236  00A580  24F3               	addwf	prodl,w,c
 15237  00A582  6ED9               	movwf	fsr2l,c
 15238  00A584  0E03               	movlw	high (_i2c_status+12)
 15239  00A586  20F4               	addwfc	prodh,w,c
 15240  00A588  6EDA               	movwf	fsr2h,c
 15241  00A58A  0EB8               	movlw	low _returnStop
 15242  00A58C  6EDE               	movwf	postinc2,c
 15243  00A58E  0EC6               	movlw	high _returnStop
 15244  00A590  6EDD               	movwf	postdec2,c
 15245                           
 15246                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 15247  00A592  5164               	movf	setCallBack@idx& (0+255),w,b
 15248  00A594  0D02               	mullw	2
 15249  00A596  0EB8               	movlw	low (_i2c_status+24)
 15250  00A598  24F3               	addwf	prodl,w,c
 15251  00A59A  6ED9               	movwf	fsr2l,c
 15252  00A59C  0E03               	movlw	high (_i2c_status+24)
 15253  00A59E  20F4               	addwfc	prodh,w,c
 15254  00A5A0  6EDA               	movwf	fsr2h,c
 15255  00A5A2  0E00               	movlw	0
 15256  00A5A4  6EDE               	movwf	postinc2,c
 15257  00A5A6  0E00               	movlw	0
 15258  00A5A8  6EDD               	movwf	postdec2,c
 15259  00A5AA  0012               	return	
 15260  00A5AC                     __end_of_setCallBack:
 15261                           	opt stack 0
 15262                           tosu	equ	0xFFF
 15263                           tosh	equ	0xFFE
 15264                           tosl	equ	0xFFD
 15265                           pclath	equ	0xFFA
 15266                           tblptru	equ	0xFF8
 15267                           tblptrh	equ	0xFF7
 15268                           tblptrl	equ	0xFF6
 15269                           tablat	equ	0xFF5
 15270                           prodh	equ	0xFF4
 15271                           prodl	equ	0xFF3
 15272                           intcon	equ	0xFF2
 15273                           postinc0	equ	0xFEE
 15274                           wreg	equ	0xFE8
 15275                           indf2	equ	0xFDF
 15276                           postinc2	equ	0xFDE
 15277                           postdec2	equ	0xFDD
 15278                           fsr2h	equ	0xFDA
 15279                           fsr2l	equ	0xFD9
 15280                           status	equ	0xFD8
 15281                           
 15282 ;; *************** function _i2c_setBuffer *****************
 15283 ;; Defined at:
 15284 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 15285 ;; Parameters:    Size  Location     Type
 15286 ;;  buffer          2    0[BANK0 ] PTR void 
 15287 ;;		 -> BME280_readMeasurements@sensorData(8), BME280_readFactoryCalibrationParams@paramBuff(24), i2c_readDataBlock@reg(
      +1), i2c_readDataBlock@d(4), 
 15288 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 15289 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
 15290 ;;		 -> NULL(0), 
 15291 ;;  bufferSize      2    2[BANK0 ] unsigned int 
 15292 ;; Auto vars:     Size  Location     Type
 15293 ;;		None
 15294 ;; Return value:  Size  Location     Type
 15295 ;;                  1    wreg      void 
 15296 ;; Registers used:
 15297 ;;		wreg, status,2, status,0
 15298 ;; Tracked objects:
 15299 ;;		On entry : 0/0
 15300 ;;		On exit  : 0/0
 15301 ;;		Unchanged: 0/0
 15302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15303 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15306 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15307 ;;Total ram usage:        4 bytes
 15308 ;; Hardware stack levels used:    1
 15309 ;; Hardware stack levels required when called:    7
 15310 ;; This function calls:
 15311 ;;		Nothing
 15312 ;; This function is called by:
 15313 ;;		_wr1RegCompleteHandler
 15314 ;;		_i2c_write1ByteRegister
 15315 ;;		_rd1RegCompleteHandler
 15316 ;;		_i2c_read1ByteRegister
 15317 ;;		_rd2RegCompleteHandler
 15318 ;;		_wr2RegCompleteHandler
 15319 ;;		_rdBlkRegCompleteHandler
 15320 ;;		_i2c_readDataBlock
 15321 ;;		_i2c_writeNBytes
 15322 ;;		_i2c_read2ByteRegister
 15323 ;;		_i2c_write2ByteRegister
 15324 ;;		_i2c_readNBytes
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           	psect	text83
 15329  00C1A6                     __ptext83:
 15330                           	opt stack 0
 15331  00C1A6                     _i2c_setBuffer:
 15332                           	opt stack 18
 15333                           
 15334                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 15335                           
 15336                           ; BSR set to: 0
 15337                           ;incstack = 0
 15338  00C1A6  0103               	movlb	3	; () banked
 15339  00C1A8  A5A0               	btfss	_i2c_status& (0+255),2,b
 15340  00C1AA  0012               	return	
 15341                           
 15342                           ; BSR set to: 3
 15343                           ;i2c_master.c: 187: {
 15344                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 15345  00C1AC  C060  F3A2         	movff	i2c_setBuffer@buffer,_i2c_status+2
 15346  00C1B0  C061  F3A3         	movff	i2c_setBuffer@buffer+1,_i2c_status+3
 15347                           
 15348                           ; BSR set to: 3
 15349                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 15350  00C1B4  C062  F3A4         	movff	i2c_setBuffer@bufferSize,_i2c_status+4
 15351  00C1B8  C063  F3A5         	movff	i2c_setBuffer@bufferSize+1,_i2c_status+5
 15352                           
 15353                           ; BSR set to: 3
 15354                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 15355  00C1BC  95A0               	bcf	_i2c_status& (0+255),2,b
 15356  00C1BE  0012               	return	
 15357  00C1C0                     __end_of_i2c_setBuffer:
 15358                           	opt stack 0
 15359                           tosu	equ	0xFFF
 15360                           tosh	equ	0xFFE
 15361                           tosl	equ	0xFFD
 15362                           pclath	equ	0xFFA
 15363                           tblptru	equ	0xFF8
 15364                           tblptrh	equ	0xFF7
 15365                           tblptrl	equ	0xFF6
 15366                           tablat	equ	0xFF5
 15367                           prodh	equ	0xFF4
 15368                           prodl	equ	0xFF3
 15369                           intcon	equ	0xFF2
 15370                           postinc0	equ	0xFEE
 15371                           wreg	equ	0xFE8
 15372                           indf2	equ	0xFDF
 15373                           postinc2	equ	0xFDE
 15374                           postdec2	equ	0xFDD
 15375                           fsr2h	equ	0xFDA
 15376                           fsr2l	equ	0xFD9
 15377                           status	equ	0xFD8
 15378                           
 15379 ;; *************** function _i2c1_driver_stop *****************
 15380 ;; Defined at:
 15381 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 15382 ;; Parameters:    Size  Location     Type
 15383 ;;		None
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;		None
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  1    wreg      void 
 15388 ;; Registers used:
 15389 ;;		None
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15399 ;;Total ram usage:        0 bytes
 15400 ;; Hardware stack levels used:    1
 15401 ;; Hardware stack levels required when called:    7
 15402 ;; This function calls:
 15403 ;;		Nothing
 15404 ;; This function is called by:
 15405 ;;		_do_I2C_SEND_STOP
 15406 ;; This function uses a non-reentrant model
 15407 ;;
 15408                           
 15409                           	psect	text84
 15410  00C6C0                     __ptext84:
 15411                           	opt stack 0
 15412  00C6C0                     _i2c1_driver_stop:
 15413                           	opt stack 12
 15414                           
 15415                           ;i2c1_driver.c: 159: SSP1CON2bits.PEN = 1;
 15416                           
 15417                           ; BSR set to: 3
 15418                           ;incstack = 0
 15419  00C6C0  84C5               	bsf	4037,2,c	;volatile
 15420  00C6C2  0012               	return		;funcret
 15421  00C6C4                     __end_of_i2c1_driver_stop:
 15422                           	opt stack 0
 15423                           tosu	equ	0xFFF
 15424                           tosh	equ	0xFFE
 15425                           tosl	equ	0xFFD
 15426                           pclath	equ	0xFFA
 15427                           tblptru	equ	0xFF8
 15428                           tblptrh	equ	0xFF7
 15429                           tblptrl	equ	0xFF6
 15430                           tablat	equ	0xFF5
 15431                           prodh	equ	0xFF4
 15432                           prodl	equ	0xFF3
 15433                           intcon	equ	0xFF2
 15434                           postinc0	equ	0xFEE
 15435                           wreg	equ	0xFE8
 15436                           indf2	equ	0xFDF
 15437                           postinc2	equ	0xFDE
 15438                           postdec2	equ	0xFDD
 15439                           fsr2h	equ	0xFDA
 15440                           fsr2l	equ	0xFD9
 15441                           status	equ	0xFD8
 15442                           
 15443 ;; *************** function _i2c1_driver_restart *****************
 15444 ;; Defined at:
 15445 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 15446 ;; Parameters:    Size  Location     Type
 15447 ;;		None
 15448 ;; Auto vars:     Size  Location     Type
 15449 ;;		None
 15450 ;; Return value:  Size  Location     Type
 15451 ;;                  1    wreg      void 
 15452 ;; Registers used:
 15453 ;;		None
 15454 ;; Tracked objects:
 15455 ;;		On entry : 0/0
 15456 ;;		On exit  : 0/0
 15457 ;;		Unchanged: 0/0
 15458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15463 ;;Total ram usage:        0 bytes
 15464 ;; Hardware stack levels used:    1
 15465 ;; Hardware stack levels required when called:    7
 15466 ;; This function calls:
 15467 ;;		Nothing
 15468 ;; This function is called by:
 15469 ;;		_do_I2C_SEND_RESTART_READ
 15470 ;;		_do_I2C_SEND_RESTART_WRITE
 15471 ;;		_do_I2C_SEND_RESTART
 15472 ;; This function uses a non-reentrant model
 15473 ;;
 15474                           
 15475                           	psect	text85
 15476  00C6C4                     __ptext85:
 15477                           	opt stack 0
 15478  00C6C4                     _i2c1_driver_restart:
 15479                           	opt stack 12
 15480                           
 15481                           ;i2c1_driver.c: 154: SSP1CON2bits.RSEN = 1;
 15482                           
 15483                           ;incstack = 0
 15484  00C6C4  82C5               	bsf	4037,1,c	;volatile
 15485  00C6C6  0012               	return		;funcret
 15486  00C6C8                     __end_of_i2c1_driver_restart:
 15487                           	opt stack 0
 15488                           tosu	equ	0xFFF
 15489                           tosh	equ	0xFFE
 15490                           tosl	equ	0xFFD
 15491                           pclath	equ	0xFFA
 15492                           tblptru	equ	0xFF8
 15493                           tblptrh	equ	0xFF7
 15494                           tblptrl	equ	0xFF6
 15495                           tablat	equ	0xFF5
 15496                           prodh	equ	0xFF4
 15497                           prodl	equ	0xFF3
 15498                           intcon	equ	0xFF2
 15499                           postinc0	equ	0xFEE
 15500                           wreg	equ	0xFE8
 15501                           indf2	equ	0xFDF
 15502                           postinc2	equ	0xFDE
 15503                           postdec2	equ	0xFDD
 15504                           fsr2h	equ	0xFDA
 15505                           fsr2l	equ	0xFD9
 15506                           status	equ	0xFD8
 15507                           
 15508 ;; *************** function _i2c1_driver_sendACK *****************
 15509 ;; Defined at:
 15510 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 15511 ;; Parameters:    Size  Location     Type
 15512 ;;		None
 15513 ;; Auto vars:     Size  Location     Type
 15514 ;;		None
 15515 ;; Return value:  Size  Location     Type
 15516 ;;                  1    wreg      void 
 15517 ;; Registers used:
 15518 ;;		None
 15519 ;; Tracked objects:
 15520 ;;		On entry : 0/0
 15521 ;;		On exit  : 0/0
 15522 ;;		Unchanged: 0/0
 15523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15528 ;;Total ram usage:        0 bytes
 15529 ;; Hardware stack levels used:    1
 15530 ;; Hardware stack levels required when called:    7
 15531 ;; This function calls:
 15532 ;;		Nothing
 15533 ;; This function is called by:
 15534 ;;		_do_I2C_DO_ACK
 15535 ;;		_do_I2C_RX
 15536 ;; This function uses a non-reentrant model
 15537 ;;
 15538                           
 15539                           	psect	text86
 15540  00C672                     __ptext86:
 15541                           	opt stack 0
 15542  00C672                     _i2c1_driver_sendACK:
 15543                           	opt stack 13
 15544                           
 15545                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKDT = 0;
 15546                           
 15547                           ;incstack = 0
 15548  00C672  9AC5               	bcf	4037,5,c	;volatile
 15549                           
 15550                           ;i2c1_driver.c: 200: SSP1CON2bits.ACKEN = 1;
 15551  00C674  88C5               	bsf	4037,4,c	;volatile
 15552  00C676  0012               	return		;funcret
 15553  00C678                     __end_of_i2c1_driver_sendACK:
 15554                           	opt stack 0
 15555                           tosu	equ	0xFFF
 15556                           tosh	equ	0xFFE
 15557                           tosl	equ	0xFFD
 15558                           pclath	equ	0xFFA
 15559                           tblptru	equ	0xFF8
 15560                           tblptrh	equ	0xFF7
 15561                           tblptrl	equ	0xFF6
 15562                           tablat	equ	0xFF5
 15563                           prodh	equ	0xFF4
 15564                           prodl	equ	0xFF3
 15565                           intcon	equ	0xFF2
 15566                           postinc0	equ	0xFEE
 15567                           wreg	equ	0xFE8
 15568                           indf2	equ	0xFDF
 15569                           postinc2	equ	0xFDE
 15570                           postdec2	equ	0xFDD
 15571                           fsr2h	equ	0xFDA
 15572                           fsr2l	equ	0xFD9
 15573                           status	equ	0xFD8
 15574                           
 15575 ;; *************** function _i2c1_driver_start *****************
 15576 ;; Defined at:
 15577 ;;		line 147 in file "mcc_generated_files/i2c1_driver.c"
 15578 ;; Parameters:    Size  Location     Type
 15579 ;;		None
 15580 ;; Auto vars:     Size  Location     Type
 15581 ;;		None
 15582 ;; Return value:  Size  Location     Type
 15583 ;;                  1    wreg      void 
 15584 ;; Registers used:
 15585 ;;		None
 15586 ;; Tracked objects:
 15587 ;;		On entry : 0/0
 15588 ;;		On exit  : 0/0
 15589 ;;		Unchanged: 0/0
 15590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15595 ;;Total ram usage:        0 bytes
 15596 ;; Hardware stack levels used:    1
 15597 ;; Hardware stack levels required when called:    7
 15598 ;; This function calls:
 15599 ;;		Nothing
 15600 ;; This function is called by:
 15601 ;;		_i2c_masterOperation
 15602 ;; This function uses a non-reentrant model
 15603 ;;
 15604                           
 15605                           	psect	text87
 15606  00C6C8                     __ptext87:
 15607                           	opt stack 0
 15608  00C6C8                     _i2c1_driver_start:
 15609                           	opt stack 16
 15610                           
 15611                           ;i2c1_driver.c: 149: SSP1CON2bits.SEN = 1;
 15612                           
 15613                           ;incstack = 0
 15614  00C6C8  80C5               	bsf	4037,0,c	;volatile
 15615  00C6CA  0012               	return		;funcret
 15616  00C6CC                     __end_of_i2c1_driver_start:
 15617                           	opt stack 0
 15618                           tosu	equ	0xFFF
 15619                           tosh	equ	0xFFE
 15620                           tosl	equ	0xFFD
 15621                           pclath	equ	0xFFA
 15622                           tblptru	equ	0xFF8
 15623                           tblptrh	equ	0xFF7
 15624                           tblptrl	equ	0xFF6
 15625                           tablat	equ	0xFF5
 15626                           prodh	equ	0xFF4
 15627                           prodl	equ	0xFF3
 15628                           intcon	equ	0xFF2
 15629                           postinc0	equ	0xFEE
 15630                           wreg	equ	0xFE8
 15631                           indf2	equ	0xFDF
 15632                           postinc2	equ	0xFDE
 15633                           postdec2	equ	0xFDD
 15634                           fsr2h	equ	0xFDA
 15635                           fsr2l	equ	0xFD9
 15636                           status	equ	0xFD8
 15637                           
 15638 ;; *************** function _i2c_close *****************
 15639 ;; Defined at:
 15640 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
 15641 ;; Parameters:    Size  Location     Type
 15642 ;;		None
 15643 ;; Auto vars:     Size  Location     Type
 15644 ;;  ret             1    0[BANK0 ] enum E7166
 15645 ;; Return value:  Size  Location     Type
 15646 ;;                  1    wreg      enum E7166
 15647 ;; Registers used:
 15648 ;;		wreg, status,2, cstack
 15649 ;; Tracked objects:
 15650 ;;		On entry : 0/0
 15651 ;;		On exit  : 0/0
 15652 ;;		Unchanged: 0/0
 15653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15655 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15657 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15658 ;;Total ram usage:        1 bytes
 15659 ;; Hardware stack levels used:    1
 15660 ;; Hardware stack levels required when called:    8
 15661 ;; This function calls:
 15662 ;;		_mssp1_clearIRQ
 15663 ;;		_mssp1_disableIRQ
 15664 ;; This function is called by:
 15665 ;;		_i2c_write1ByteRegister
 15666 ;;		_i2c_read1ByteRegister
 15667 ;;		_i2c_readDataBlock
 15668 ;;		_i2c_writeNBytes
 15669 ;;		_i2c_read2ByteRegister
 15670 ;;		_i2c_write2ByteRegister
 15671 ;;		_i2c_readNBytes
 15672 ;; This function uses a non-reentrant model
 15673 ;;
 15674                           
 15675                           	psect	text88
 15676  00BE34                     __ptext88:
 15677                           	opt stack 0
 15678  00BE34                     _i2c_close:
 15679                           	opt stack 17
 15680                           
 15681                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
 15682                           
 15683                           ;incstack = 0
 15684  00BE34  0E01               	movlw	1
 15685  00BE36  0100               	movlb	0	; () banked
 15686  00BE38  6F60               	movwf	i2c_close@ret& (0+255),b
 15687                           
 15688                           ; BSR set to: 0
 15689                           ;i2c_master.c: 165: if(!i2c_status.busy)
 15690  00BE3A  0103               	movlb	3	; () banked
 15691  00BE3C  B1A0               	btfsc	_i2c_status& (0+255),0,b
 15692  00BE3E  D008               	goto	l95
 15693                           
 15694                           ; BSR set to: 3
 15695                           ;i2c_master.c: 166: {
 15696                           ;i2c_master.c: 167: i2c_status.inUse = 0;
 15697  00BE40  93A0               	bcf	_i2c_status& (0+255),1,b
 15698                           
 15699                           ;i2c_master.c: 169: i2c_status.address = 0xff;
 15700  00BE42  69A1               	setf	(_i2c_status+1)& (0+255),b
 15701                           
 15702                           ; BSR set to: 3
 15703                           ;i2c_master.c: 170: mssp1_clearIRQ();
 15704  00BE44  EC68  F063         	call	_mssp1_clearIRQ	;wreg free
 15705                           
 15706                           ;i2c_master.c: 171: mssp1_disableIRQ();
 15707  00BE48  EC66  F063         	call	_mssp1_disableIRQ	;wreg free
 15708                           
 15709                           ;i2c_master.c: 172: ret = i2c_status.error;
 15710  00BE4C  C3AB  F060         	movff	_i2c_status+11,i2c_close@ret
 15711  00BE50                     l95:
 15712                           
 15713                           ;i2c_master.c: 173: }
 15714                           ;i2c_master.c: 174: return ret;
 15715  00BE50  0100               	movlb	0	; () banked
 15716  00BE52  5160               	movf	i2c_close@ret& (0+255),w,b
 15717  00BE54  0012               	return	
 15718  00BE56                     __end_of_i2c_close:
 15719                           	opt stack 0
 15720                           tosu	equ	0xFFF
 15721                           tosh	equ	0xFFE
 15722                           tosl	equ	0xFFD
 15723                           pclath	equ	0xFFA
 15724                           tblptru	equ	0xFF8
 15725                           tblptrh	equ	0xFF7
 15726                           tblptrl	equ	0xFF6
 15727                           tablat	equ	0xFF5
 15728                           prodh	equ	0xFF4
 15729                           prodl	equ	0xFF3
 15730                           intcon	equ	0xFF2
 15731                           postinc0	equ	0xFEE
 15732                           wreg	equ	0xFE8
 15733                           indf2	equ	0xFDF
 15734                           postinc2	equ	0xFDE
 15735                           postdec2	equ	0xFDD
 15736                           fsr2h	equ	0xFDA
 15737                           fsr2l	equ	0xFD9
 15738                           status	equ	0xFD8
 15739                           
 15740 ;; *************** function _mssp1_disableIRQ *****************
 15741 ;; Defined at:
 15742 ;;		line 49 in file "mcc_generated_files/i2c1_driver.c"
 15743 ;; Parameters:    Size  Location     Type
 15744 ;;		None
 15745 ;; Auto vars:     Size  Location     Type
 15746 ;;		None
 15747 ;; Return value:  Size  Location     Type
 15748 ;;                  1    wreg      void 
 15749 ;; Registers used:
 15750 ;;		None
 15751 ;; Tracked objects:
 15752 ;;		On entry : 0/0
 15753 ;;		On exit  : 0/0
 15754 ;;		Unchanged: 0/0
 15755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15760 ;;Total ram usage:        0 bytes
 15761 ;; Hardware stack levels used:    1
 15762 ;; Hardware stack levels required when called:    7
 15763 ;; This function calls:
 15764 ;;		Nothing
 15765 ;; This function is called by:
 15766 ;;		_i2c_close
 15767 ;;		_i2c_setTimeOut
 15768 ;; This function uses a non-reentrant model
 15769 ;;
 15770                           
 15771                           	psect	text89
 15772  00C6CC                     __ptext89:
 15773                           	opt stack 0
 15774  00C6CC                     _mssp1_disableIRQ:
 15775                           	opt stack 17
 15776                           
 15777                           ;i2c1_driver.c: 51: PIE1bits.SSP1IE = 0;
 15778                           
 15779                           ; BSR set to: 0
 15780                           ;incstack = 0
 15781  00C6CC  969D               	bcf	3997,3,c	;volatile
 15782  00C6CE  0012               	return		;funcret
 15783  00C6D0                     __end_of_mssp1_disableIRQ:
 15784                           	opt stack 0
 15785                           tosu	equ	0xFFF
 15786                           tosh	equ	0xFFE
 15787                           tosl	equ	0xFFD
 15788                           pclath	equ	0xFFA
 15789                           tblptru	equ	0xFF8
 15790                           tblptrh	equ	0xFF7
 15791                           tblptrl	equ	0xFF6
 15792                           tablat	equ	0xFF5
 15793                           prodh	equ	0xFF4
 15794                           prodl	equ	0xFF3
 15795                           intcon	equ	0xFF2
 15796                           postinc0	equ	0xFEE
 15797                           wreg	equ	0xFE8
 15798                           indf2	equ	0xFDF
 15799                           postinc2	equ	0xFDE
 15800                           postdec2	equ	0xFDD
 15801                           fsr2h	equ	0xFDA
 15802                           fsr2l	equ	0xFD9
 15803                           status	equ	0xFD8
 15804                           
 15805 ;; *************** function _mssp1_clearIRQ *****************
 15806 ;; Defined at:
 15807 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 15808 ;; Parameters:    Size  Location     Type
 15809 ;;		None
 15810 ;; Auto vars:     Size  Location     Type
 15811 ;;		None
 15812 ;; Return value:  Size  Location     Type
 15813 ;;                  1    wreg      void 
 15814 ;; Registers used:
 15815 ;;		None
 15816 ;; Tracked objects:
 15817 ;;		On entry : 0/0
 15818 ;;		On exit  : 0/0
 15819 ;;		Unchanged: 0/0
 15820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15825 ;;Total ram usage:        0 bytes
 15826 ;; Hardware stack levels used:    1
 15827 ;; Hardware stack levels required when called:    7
 15828 ;; This function calls:
 15829 ;;		Nothing
 15830 ;; This function is called by:
 15831 ;;		_i2c_open
 15832 ;;		_i2c_close
 15833 ;;		_i2c_ISR
 15834 ;; This function uses a non-reentrant model
 15835 ;;
 15836                           
 15837                           	psect	text90
 15838  00C6D0                     __ptext90:
 15839                           	opt stack 0
 15840  00C6D0                     _mssp1_clearIRQ:
 15841                           	opt stack 17
 15842                           
 15843                           ;i2c1_driver.c: 56: PIR1bits.SSP1IF = 0;
 15844                           
 15845                           ;incstack = 0
 15846  00C6D0  969E               	bcf	3998,3,c	;volatile
 15847  00C6D2  0012               	return		;funcret
 15848  00C6D4                     __end_of_mssp1_clearIRQ:
 15849                           	opt stack 0
 15850                           tosu	equ	0xFFF
 15851                           tosh	equ	0xFFE
 15852                           tosl	equ	0xFFD
 15853                           pclath	equ	0xFFA
 15854                           tblptru	equ	0xFF8
 15855                           tblptrh	equ	0xFF7
 15856                           tblptrl	equ	0xFF6
 15857                           tablat	equ	0xFF5
 15858                           prodh	equ	0xFF4
 15859                           prodl	equ	0xFF3
 15860                           intcon	equ	0xFF2
 15861                           postinc0	equ	0xFEE
 15862                           wreg	equ	0xFE8
 15863                           indf2	equ	0xFDF
 15864                           postinc2	equ	0xFDE
 15865                           postdec2	equ	0xFDD
 15866                           fsr2h	equ	0xFDA
 15867                           fsr2l	equ	0xFD9
 15868                           status	equ	0xFD8
 15869                           
 15870 ;; *************** function _Weather_getTemperatureDegC *****************
 15871 ;; Defined at:
 15872 ;;		line 96 in file "mcc_generated_files/weather.c"
 15873 ;; Parameters:    Size  Location     Type
 15874 ;;		None
 15875 ;; Auto vars:     Size  Location     Type
 15876 ;;		None
 15877 ;; Return value:  Size  Location     Type
 15878 ;;                  3    0[BANK1 ] float 
 15879 ;; Registers used:
 15880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15881 ;; Tracked objects:
 15882 ;;		On entry : 0/0
 15883 ;;		On exit  : 0/0
 15884 ;;		Unchanged: 0/0
 15885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15886 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15889 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15890 ;;Total ram usage:        3 bytes
 15891 ;; Hardware stack levels used:    1
 15892 ;; Hardware stack levels required when called:   10
 15893 ;; This function calls:
 15894 ;;		_BME280_getTemperature
 15895 ;; This function is called by:
 15896 ;;		_main
 15897 ;;		_Weather_example
 15898 ;; This function uses a non-reentrant model
 15899 ;;
 15900                           
 15901                           	psect	text91
 15902  00C3A0                     __ptext91:
 15903                           	opt stack 0
 15904  00C3A0                     _Weather_getTemperatureDegC:
 15905                           	opt stack 20
 15906                           
 15907                           ;weather.c: 98: return BME280_getTemperature();
 15908                           
 15909                           ;incstack = 0
 15910  00C3A0  EC98  F058         	call	_BME280_getTemperature	;wreg free
 15911  00C3A4  C0F3  F18C         	movff	?_BME280_getTemperature,?_Weather_getTemperatureDegC
 15912  00C3A8  C0F4  F18D         	movff	?_BME280_getTemperature+1,?_Weather_getTemperatureDegC+1
 15913  00C3AC  C0F5  F18E         	movff	?_BME280_getTemperature+2,?_Weather_getTemperatureDegC+2
 15914  00C3B0  0012               	return	
 15915  00C3B2                     __end_of_Weather_getTemperatureDegC:
 15916                           	opt stack 0
 15917                           tosu	equ	0xFFF
 15918                           tosh	equ	0xFFE
 15919                           tosl	equ	0xFFD
 15920                           pclath	equ	0xFFA
 15921                           tblptru	equ	0xFF8
 15922                           tblptrh	equ	0xFF7
 15923                           tblptrl	equ	0xFF6
 15924                           tablat	equ	0xFF5
 15925                           prodh	equ	0xFF4
 15926                           prodl	equ	0xFF3
 15927                           intcon	equ	0xFF2
 15928                           postinc0	equ	0xFEE
 15929                           wreg	equ	0xFE8
 15930                           indf2	equ	0xFDF
 15931                           postinc2	equ	0xFDE
 15932                           postdec2	equ	0xFDD
 15933                           fsr2h	equ	0xFDA
 15934                           fsr2l	equ	0xFD9
 15935                           status	equ	0xFD8
 15936                           
 15937 ;; *************** function _BME280_getTemperature *****************
 15938 ;; Defined at:
 15939 ;;		line 295 in file "mcc_generated_files/bme280.c"
 15940 ;; Parameters:    Size  Location     Type
 15941 ;;		None
 15942 ;; Auto vars:     Size  Location     Type
 15943 ;;  temperature     3  150[BANK0 ] float 
 15944 ;; Return value:  Size  Location     Type
 15945 ;;                  3  147[BANK0 ] float 
 15946 ;; Registers used:
 15947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15948 ;; Tracked objects:
 15949 ;;		On entry : 0/0
 15950 ;;		On exit  : 0/0
 15951 ;;		Unchanged: 0/0
 15952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15953 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15954 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15956 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15957 ;;Total ram usage:        6 bytes
 15958 ;; Hardware stack levels used:    1
 15959 ;; Hardware stack levels required when called:    9
 15960 ;; This function calls:
 15961 ;;		_BME280_compensateTemperature
 15962 ;;		___altoft
 15963 ;;		___ftdiv
 15964 ;; This function is called by:
 15965 ;;		_Weather_getTemperatureDegC
 15966 ;; This function uses a non-reentrant model
 15967 ;;
 15968                           
 15969                           	psect	text92
 15970  00B130                     __ptext92:
 15971                           	opt stack 0
 15972  00B130                     _BME280_getTemperature:
 15973                           	opt stack 20
 15974                           
 15975                           ;bme280.c: 297: float temperature = (float) BME280_compensateTemperature() / 100;
 15976                           
 15977                           ;incstack = 0
 15978  00B130  ECB7  F028         	call	_BME280_compensateTemperature	;wreg free
 15979  00B134  C0A6  F0CD         	movff	?_BME280_compensateTemperature,___altoft@c
 15980  00B138  C0A7  F0CE         	movff	?_BME280_compensateTemperature+1,___altoft@c+1
 15981  00B13C  C0A8  F0CF         	movff	?_BME280_compensateTemperature+2,___altoft@c+2
 15982  00B140  C0A9  F0D0         	movff	?_BME280_compensateTemperature+3,___altoft@c+3
 15983  00B144  ECB1  F051         	call	___altoft	;wreg free
 15984  00B148  C0CD  F0E4         	movff	?___altoft,___ftdiv@f1
 15985  00B14C  C0CE  F0E5         	movff	?___altoft+1,___ftdiv@f1+1
 15986  00B150  C0CF  F0E6         	movff	?___altoft+2,___ftdiv@f1+2
 15987  00B154  0E00               	movlw	0
 15988  00B156  0100               	movlb	0	; () banked
 15989  00B158  6FE7               	movwf	___ftdiv@f2& (0+255),b
 15990  00B15A  0EC8               	movlw	200
 15991  00B15C  6FE8               	movwf	(___ftdiv@f2+1)& (0+255),b
 15992  00B15E  0E42               	movlw	66
 15993  00B160  6FE9               	movwf	(___ftdiv@f2+2)& (0+255),b
 15994  00B162  EC3B  F047         	call	___ftdiv	;wreg free
 15995  00B166  C0E4  F0F6         	movff	?___ftdiv,BME280_getTemperature@temperature
 15996  00B16A  C0E5  F0F7         	movff	?___ftdiv+1,BME280_getTemperature@temperature+1
 15997  00B16E  C0E6  F0F8         	movff	?___ftdiv+2,BME280_getTemperature@temperature+2
 15998                           
 15999                           ;bme280.c: 298: return temperature;
 16000  00B172  C0F6  F0F3         	movff	BME280_getTemperature@temperature,?_BME280_getTemperature
 16001  00B176  C0F7  F0F4         	movff	BME280_getTemperature@temperature+1,?_BME280_getTemperature+1
 16002  00B17A  C0F8  F0F5         	movff	BME280_getTemperature@temperature+2,?_BME280_getTemperature+2
 16003  00B17E  0012               	return	
 16004  00B180                     __end_of_BME280_getTemperature:
 16005                           	opt stack 0
 16006                           tosu	equ	0xFFF
 16007                           tosh	equ	0xFFE
 16008                           tosl	equ	0xFFD
 16009                           pclath	equ	0xFFA
 16010                           tblptru	equ	0xFF8
 16011                           tblptrh	equ	0xFF7
 16012                           tblptrl	equ	0xFF6
 16013                           tablat	equ	0xFF5
 16014                           prodh	equ	0xFF4
 16015                           prodl	equ	0xFF3
 16016                           intcon	equ	0xFF2
 16017                           postinc0	equ	0xFEE
 16018                           wreg	equ	0xFE8
 16019                           indf2	equ	0xFDF
 16020                           postinc2	equ	0xFDE
 16021                           postdec2	equ	0xFDD
 16022                           fsr2h	equ	0xFDA
 16023                           fsr2l	equ	0xFD9
 16024                           status	equ	0xFD8
 16025                           
 16026 ;; *************** function ___altoft *****************
 16027 ;; Defined at:
 16028 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 16029 ;; Parameters:    Size  Location     Type
 16030 ;;  c               4  109[BANK0 ] long 
 16031 ;; Auto vars:     Size  Location     Type
 16032 ;;  sign            1  118[BANK0 ] unsigned char 
 16033 ;;  exp             1  117[BANK0 ] unsigned char 
 16034 ;; Return value:  Size  Location     Type
 16035 ;;                  3  109[BANK0 ] float 
 16036 ;; Registers used:
 16037 ;;		wreg, status,2, status,0, cstack
 16038 ;; Tracked objects:
 16039 ;;		On entry : 0/0
 16040 ;;		On exit  : 0/0
 16041 ;;		Unchanged: 0/0
 16042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16043 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16044 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16045 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16046 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16047 ;;Total ram usage:       10 bytes
 16048 ;; Hardware stack levels used:    1
 16049 ;; Hardware stack levels required when called:    8
 16050 ;; This function calls:
 16051 ;;		___ftpack
 16052 ;; This function is called by:
 16053 ;;		_BME280_getTemperature
 16054 ;; This function uses a non-reentrant model
 16055 ;;
 16056                           
 16057                           	psect	text93
 16058  00A362                     __ptext93:
 16059                           	opt stack 0
 16060  00A362                     ___altoft:
 16061                           	opt stack 20
 16062                           
 16063                           ;incstack = 0
 16064  00A362  0E00               	movlw	0
 16065  00A364  0100               	movlb	0	; () banked
 16066  00A366  6FD6               	movwf	___altoft@sign& (0+255),b
 16067  00A368  0E8E               	movlw	142
 16068  00A36A  6FD5               	movwf	___altoft@exp& (0+255),b
 16069                           
 16070                           ; BSR set to: 0
 16071  00A36C  AFD0               	btfss	(___altoft@c+3)& (0+255),7,b
 16072  00A36E  D011               	goto	l3645
 16073                           
 16074                           ; BSR set to: 0
 16075  00A370  1FD0               	comf	(___altoft@c+3)& (0+255),f,b
 16076  00A372  1FCF               	comf	(___altoft@c+2)& (0+255),f,b
 16077  00A374  1FCE               	comf	(___altoft@c+1)& (0+255),f,b
 16078  00A376  6DCD               	negf	___altoft@c& (0+255),b
 16079  00A378  0E00               	movlw	0
 16080  00A37A  23CE               	addwfc	(___altoft@c+1)& (0+255),f,b
 16081  00A37C  23CF               	addwfc	(___altoft@c+2)& (0+255),f,b
 16082  00A37E  23D0               	addwfc	(___altoft@c+3)& (0+255),f,b
 16083                           
 16084                           ; BSR set to: 0
 16085  00A380  0E01               	movlw	1
 16086  00A382  6FD6               	movwf	___altoft@sign& (0+255),b
 16087                           
 16088                           ; BSR set to: 0
 16089  00A384  D006               	goto	l3645
 16090  00A386                     
 16091                           ; BSR set to: 0
 16092                           
 16093                           ; BSR set to: 0
 16094  00A386  90D8               	bcf	status,0,c
 16095  00A388  33D0               	rrcf	(___altoft@c+3)& (0+255),f,b
 16096  00A38A  33CF               	rrcf	(___altoft@c+2)& (0+255),f,b
 16097  00A38C  33CE               	rrcf	(___altoft@c+1)& (0+255),f,b
 16098  00A38E  33CD               	rrcf	___altoft@c& (0+255),f,b
 16099  00A390  2BD5               	incf	___altoft@exp& (0+255),f,b
 16100  00A392                     l3645:
 16101                           
 16102                           ; BSR set to: 0
 16103                           
 16104                           ; BSR set to: 0
 16105  00A392  0E00               	movlw	0
 16106  00A394  15CD               	andwf	___altoft@c& (0+255),w,b
 16107  00A396  6FD1               	movwf	??___altoft& (0+255),b
 16108  00A398  0E00               	movlw	0
 16109  00A39A  15CE               	andwf	(___altoft@c+1)& (0+255),w,b
 16110  00A39C  6FD2               	movwf	(??___altoft+1)& (0+255),b
 16111  00A39E  0E00               	movlw	0
 16112  00A3A0  15CF               	andwf	(___altoft@c+2)& (0+255),w,b
 16113  00A3A2  6FD3               	movwf	(??___altoft+2)& (0+255),b
 16114  00A3A4  0EFF               	movlw	255
 16115  00A3A6  15D0               	andwf	(___altoft@c+3)& (0+255),w,b
 16116  00A3A8  6FD4               	movwf	(??___altoft+3)& (0+255),b
 16117  00A3AA  51D1               	movf	??___altoft& (0+255),w,b
 16118  00A3AC  11D2               	iorwf	(??___altoft+1)& (0+255),w,b
 16119  00A3AE  11D3               	iorwf	(??___altoft+2)& (0+255),w,b
 16120  00A3B0  11D4               	iorwf	(??___altoft+3)& (0+255),w,b
 16121  00A3B2  A4D8               	btfss	status,2,c
 16122  00A3B4  D7E8               	goto	l3646
 16123                           
 16124                           ; BSR set to: 0
 16125                           
 16126                           ; BSR set to: 0
 16127  00A3B6  C0CD  F060         	movff	___altoft@c,___ftpack@arg
 16128  00A3BA  C0CE  F061         	movff	___altoft@c+1,___ftpack@arg+1
 16129  00A3BE  C0CF  F062         	movff	___altoft@c+2,___ftpack@arg+2
 16130  00A3C2  C0D5  F063         	movff	___altoft@exp,___ftpack@exp
 16131  00A3C6  C0D6  F064         	movff	___altoft@sign,___ftpack@sign
 16132  00A3CA  EC62  F04B         	call	___ftpack	;wreg free
 16133  00A3CE  C060  F0CD         	movff	?___ftpack,?___altoft
 16134  00A3D2  C061  F0CE         	movff	?___ftpack+1,?___altoft+1
 16135  00A3D6  C062  F0CF         	movff	?___ftpack+2,?___altoft+2
 16136  00A3DA  0012               	return	
 16137  00A3DC                     __end_of___altoft:
 16138                           	opt stack 0
 16139                           tosu	equ	0xFFF
 16140                           tosh	equ	0xFFE
 16141                           tosl	equ	0xFFD
 16142                           pclath	equ	0xFFA
 16143                           tblptru	equ	0xFF8
 16144                           tblptrh	equ	0xFF7
 16145                           tblptrl	equ	0xFF6
 16146                           tablat	equ	0xFF5
 16147                           prodh	equ	0xFF4
 16148                           prodl	equ	0xFF3
 16149                           intcon	equ	0xFF2
 16150                           postinc0	equ	0xFEE
 16151                           wreg	equ	0xFE8
 16152                           indf2	equ	0xFDF
 16153                           postinc2	equ	0xFDE
 16154                           postdec2	equ	0xFDD
 16155                           fsr2h	equ	0xFDA
 16156                           fsr2l	equ	0xFD9
 16157                           status	equ	0xFD8
 16158                           
 16159 ;; *************** function _BME280_compensateTemperature *****************
 16160 ;; Defined at:
 16161 ;;		line 323 in file "mcc_generated_files/bme280.c"
 16162 ;; Parameters:    Size  Location     Type
 16163 ;;		None
 16164 ;; Auto vars:     Size  Location     Type
 16165 ;;  t               4  101[BANK0 ] long 
 16166 ;;  tempV2          4   97[BANK0 ] long 
 16167 ;;  tempV1          4   93[BANK0 ] long 
 16168 ;; Return value:  Size  Location     Type
 16169 ;;                  4   70[BANK0 ] long 
 16170 ;; Registers used:
 16171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16172 ;; Tracked objects:
 16173 ;;		On entry : 0/0
 16174 ;;		On exit  : 0/0
 16175 ;;		Unchanged: 0/0
 16176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16177 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16178 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16179 ;;      Temps:          0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16180 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16181 ;;Total ram usage:       39 bytes
 16182 ;; Hardware stack levels used:    1
 16183 ;; Hardware stack levels required when called:    8
 16184 ;; This function calls:
 16185 ;;		___lmul
 16186 ;; This function is called by:
 16187 ;;		_BME280_getTemperature
 16188 ;; This function uses a non-reentrant model
 16189 ;;
 16190                           
 16191                           	psect	text94
 16192  00516E                     __ptext94:
 16193                           	opt stack 0
 16194  00516E                     _BME280_compensateTemperature:
 16195                           	opt stack 20
 16196                           
 16197                           ;bme280.c: 325: long tempV1, tempV2, t;
 16198                           ;bme280.c: 327: tempV1 = ((((adc_T >> 3) - ((long) calibParam.dig_T1 << 1))) * ((long) c
      +                          alibParam.dig_T2)) >> 11;
 16199                           
 16200                           ;incstack = 0
 16201  00516E  0E0B               	movlw	11
 16202  005170  0100               	movlb	0	; () banked
 16203  005172  6FAA               	movwf	??_BME280_compensateTemperature& (0+255),b
 16204  005174  0101               	movlb	1	; () banked
 16205  005176  516B               	movf	_calibParam& (0+255),w,b
 16206  005178  0100               	movlb	0	; () banked
 16207  00517A  6FAB               	movwf	(??_BME280_compensateTemperature+1)& (0+255),b
 16208  00517C  0101               	movlb	1	; () banked
 16209  00517E  516C               	movf	(_calibParam+1)& (0+255),w,b
 16210  005180  0100               	movlb	0	; () banked
 16211  005182  6FAC               	movwf	(??_BME280_compensateTemperature+2)& (0+255),b
 16212  005184  6BAD               	clrf	(??_BME280_compensateTemperature+3)& (0+255),b
 16213  005186  6BAE               	clrf	(??_BME280_compensateTemperature+4)& (0+255),b
 16214  005188  90D8               	bcf	status,0,c
 16215  00518A  35AB               	rlcf	(??_BME280_compensateTemperature+1)& (0+255),w,b
 16216  00518C  6FAF               	movwf	(??_BME280_compensateTemperature+5)& (0+255),b
 16217  00518E  35AC               	rlcf	(??_BME280_compensateTemperature+2)& (0+255),w,b
 16218  005190  6FB0               	movwf	(??_BME280_compensateTemperature+6)& (0+255),b
 16219  005192  35AD               	rlcf	(??_BME280_compensateTemperature+3)& (0+255),w,b
 16220  005194  6FB1               	movwf	(??_BME280_compensateTemperature+7)& (0+255),b
 16221  005196  35AE               	rlcf	(??_BME280_compensateTemperature+4)& (0+255),w,b
 16222  005198  6FB2               	movwf	(??_BME280_compensateTemperature+8)& (0+255),b
 16223  00519A  1FAF               	comf	(??_BME280_compensateTemperature+5)& (0+255),f,b
 16224  00519C  1FB0               	comf	(??_BME280_compensateTemperature+6)& (0+255),f,b
 16225  00519E  1FB1               	comf	(??_BME280_compensateTemperature+7)& (0+255),f,b
 16226  0051A0  1FB2               	comf	(??_BME280_compensateTemperature+8)& (0+255),f,b
 16227  0051A2  2BAF               	incf	(??_BME280_compensateTemperature+5)& (0+255),f,b
 16228  0051A4  0E00               	movlw	0
 16229  0051A6  23B0               	addwfc	(??_BME280_compensateTemperature+6)& (0+255),f,b
 16230  0051A8  23B1               	addwfc	(??_BME280_compensateTemperature+7)& (0+255),f,b
 16231  0051AA  23B2               	addwfc	(??_BME280_compensateTemperature+8)& (0+255),f,b
 16232  0051AC  0E03               	movlw	3
 16233  0051AE  6FB3               	movwf	(??_BME280_compensateTemperature+9)& (0+255),b
 16234  0051B0  C108  F0B4         	movff	_adc_T,??_BME280_compensateTemperature+10
 16235  0051B4  C109  F0B5         	movff	_adc_T+1,??_BME280_compensateTemperature+11
 16236  0051B8  C10A  F0B6         	movff	_adc_T+2,??_BME280_compensateTemperature+12
 16237  0051BC  C10B  F0B7         	movff	_adc_T+3,??_BME280_compensateTemperature+13
 16238  0051C0                     u24725:
 16239  0051C0  67B3               	tstfsz	(??_BME280_compensateTemperature+9)& (0+255),b
 16240  0051C2  D001               	goto	u24726
 16241  0051C4  D007               	goto	u24727
 16242  0051C6                     u24726:
 16243  0051C6  35B7               	rlcf	(??_BME280_compensateTemperature+13)& (0+255),w,b
 16244  0051C8  33B7               	rrcf	(??_BME280_compensateTemperature+13)& (0+255),f,b
 16245  0051CA  33B6               	rrcf	(??_BME280_compensateTemperature+12)& (0+255),f,b
 16246  0051CC  33B5               	rrcf	(??_BME280_compensateTemperature+11)& (0+255),f,b
 16247  0051CE  33B4               	rrcf	(??_BME280_compensateTemperature+10)& (0+255),f,b
 16248  0051D0  2FB3               	decfsz	(??_BME280_compensateTemperature+9)& (0+255),f,b
 16249  0051D2  D7F6               	goto	u24725
 16250  0051D4                     u24727:
 16251  0051D4  0100               	movlb	0	; () banked
 16252  0051D6  51AF               	movf	(??_BME280_compensateTemperature+5)& (0+255),w,b
 16253  0051D8  25B4               	addwf	(??_BME280_compensateTemperature+10)& (0+255),w,b
 16254  0051DA  6F9A               	movwf	___lmul@multiplier& (0+255),b
 16255  0051DC  51B0               	movf	(??_BME280_compensateTemperature+6)& (0+255),w,b
 16256  0051DE  21B5               	addwfc	(??_BME280_compensateTemperature+11)& (0+255),w,b
 16257  0051E0  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 16258  0051E2  51B1               	movf	(??_BME280_compensateTemperature+7)& (0+255),w,b
 16259  0051E4  21B6               	addwfc	(??_BME280_compensateTemperature+12)& (0+255),w,b
 16260  0051E6  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 16261  0051E8  51B2               	movf	(??_BME280_compensateTemperature+8)& (0+255),w,b
 16262  0051EA  21B7               	addwfc	(??_BME280_compensateTemperature+13)& (0+255),w,b
 16263  0051EC  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 16264  0051EE  EE21  F06D         	lfsr	2,_calibParam+2
 16265  0051F2  CFDE F09E          	movff	postinc2,___lmul@multiplicand
 16266  0051F6  CFDD F09F          	movff	postdec2,___lmul@multiplicand+1
 16267  0051FA  0E00               	movlw	0
 16268  0051FC  BF9F               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 16269  0051FE  0EFF               	movlw	-1
 16270  005200  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16271  005202  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16272  005204  EC1D  F057         	call	___lmul	;wreg free
 16273  005208                     u24735:
 16274  005208  0100               	movlb	0	; () banked
 16275  00520A  67AA               	tstfsz	??_BME280_compensateTemperature& (0+255),b
 16276  00520C  D001               	goto	u24736
 16277  00520E  D007               	goto	u24737
 16278  005210                     u24736:
 16279  005210  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16280  005212  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 16281  005214  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 16282  005216  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 16283  005218  339A               	rrcf	?___lmul& (0+255),f,b
 16284  00521A  2FAA               	decfsz	??_BME280_compensateTemperature& (0+255),f,b
 16285  00521C  D7F5               	goto	u24735
 16286  00521E                     u24737:
 16287  00521E  C09A  F0BD         	movff	?___lmul,BME280_compensateTemperature@tempV1
 16288  005222  C09B  F0BE         	movff	?___lmul+1,BME280_compensateTemperature@tempV1+1
 16289  005226  C09C  F0BF         	movff	?___lmul+2,BME280_compensateTemperature@tempV1+2
 16290  00522A  C09D  F0C0         	movff	?___lmul+3,BME280_compensateTemperature@tempV1+3
 16291                           
 16292                           ;bme280.c: 328: tempV2 = (((((adc_T >> 4) - ((long) calibParam.dig_T1)) * ((adc_T >> 4) 
      +                          - ((long) calibParam.dig_T1))) >> 12)*((long) calibParam.dig_T3)) >> 14;
 16293  00522E  0E0C               	movlw	12
 16294  005230  0100               	movlb	0	; () banked
 16295  005232  6FAA               	movwf	??_BME280_compensateTemperature& (0+255),b
 16296  005234  0101               	movlb	1	; () banked
 16297  005236  516B               	movf	_calibParam& (0+255),w,b
 16298  005238  0100               	movlb	0	; () banked
 16299  00523A  6FAB               	movwf	(??_BME280_compensateTemperature+1)& (0+255),b
 16300  00523C  0101               	movlb	1	; () banked
 16301  00523E  516C               	movf	(_calibParam+1)& (0+255),w,b
 16302  005240  0100               	movlb	0	; () banked
 16303  005242  6FAC               	movwf	(??_BME280_compensateTemperature+2)& (0+255),b
 16304  005244  6BAD               	clrf	(??_BME280_compensateTemperature+3)& (0+255),b
 16305  005246  6BAE               	clrf	(??_BME280_compensateTemperature+4)& (0+255),b
 16306  005248  1FAB               	comf	(??_BME280_compensateTemperature+1)& (0+255),f,b
 16307  00524A  1FAC               	comf	(??_BME280_compensateTemperature+2)& (0+255),f,b
 16308  00524C  1FAD               	comf	(??_BME280_compensateTemperature+3)& (0+255),f,b
 16309  00524E  1FAE               	comf	(??_BME280_compensateTemperature+4)& (0+255),f,b
 16310  005250  2BAB               	incf	(??_BME280_compensateTemperature+1)& (0+255),f,b
 16311  005252  0E00               	movlw	0
 16312  005254  23AC               	addwfc	(??_BME280_compensateTemperature+2)& (0+255),f,b
 16313  005256  23AD               	addwfc	(??_BME280_compensateTemperature+3)& (0+255),f,b
 16314  005258  23AE               	addwfc	(??_BME280_compensateTemperature+4)& (0+255),f,b
 16315  00525A  0E04               	movlw	4
 16316  00525C  6FAF               	movwf	(??_BME280_compensateTemperature+5)& (0+255),b
 16317  00525E  C108  F0B0         	movff	_adc_T,??_BME280_compensateTemperature+6
 16318  005262  C109  F0B1         	movff	_adc_T+1,??_BME280_compensateTemperature+7
 16319  005266  C10A  F0B2         	movff	_adc_T+2,??_BME280_compensateTemperature+8
 16320  00526A  C10B  F0B3         	movff	_adc_T+3,??_BME280_compensateTemperature+9
 16321  00526E                     u24745:
 16322  00526E  67AF               	tstfsz	(??_BME280_compensateTemperature+5)& (0+255),b
 16323  005270  D001               	goto	u24746
 16324  005272  D007               	goto	u24747
 16325  005274                     u24746:
 16326  005274  35B3               	rlcf	(??_BME280_compensateTemperature+9)& (0+255),w,b
 16327  005276  33B3               	rrcf	(??_BME280_compensateTemperature+9)& (0+255),f,b
 16328  005278  33B2               	rrcf	(??_BME280_compensateTemperature+8)& (0+255),f,b
 16329  00527A  33B1               	rrcf	(??_BME280_compensateTemperature+7)& (0+255),f,b
 16330  00527C  33B0               	rrcf	(??_BME280_compensateTemperature+6)& (0+255),f,b
 16331  00527E  2FAF               	decfsz	(??_BME280_compensateTemperature+5)& (0+255),f,b
 16332  005280  D7F6               	goto	u24745
 16333  005282                     u24747:
 16334  005282  0100               	movlb	0	; () banked
 16335  005284  51AB               	movf	(??_BME280_compensateTemperature+1)& (0+255),w,b
 16336  005286  25B0               	addwf	(??_BME280_compensateTemperature+6)& (0+255),w,b
 16337  005288  6F9A               	movwf	___lmul@multiplier& (0+255),b
 16338  00528A  51AC               	movf	(??_BME280_compensateTemperature+2)& (0+255),w,b
 16339  00528C  21B1               	addwfc	(??_BME280_compensateTemperature+7)& (0+255),w,b
 16340  00528E  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 16341  005290  51AD               	movf	(??_BME280_compensateTemperature+3)& (0+255),w,b
 16342  005292  21B2               	addwfc	(??_BME280_compensateTemperature+8)& (0+255),w,b
 16343  005294  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 16344  005296  51AE               	movf	(??_BME280_compensateTemperature+4)& (0+255),w,b
 16345  005298  21B3               	addwfc	(??_BME280_compensateTemperature+9)& (0+255),w,b
 16346  00529A  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 16347  00529C  0101               	movlb	1	; () banked
 16348  00529E  516B               	movf	_calibParam& (0+255),w,b
 16349  0052A0  0100               	movlb	0	; () banked
 16350  0052A2  6FB4               	movwf	(??_BME280_compensateTemperature+10)& (0+255),b
 16351  0052A4  0101               	movlb	1	; () banked
 16352  0052A6  516C               	movf	(_calibParam+1)& (0+255),w,b
 16353  0052A8  0100               	movlb	0	; () banked
 16354  0052AA  6FB5               	movwf	(??_BME280_compensateTemperature+11)& (0+255),b
 16355  0052AC  6BB6               	clrf	(??_BME280_compensateTemperature+12)& (0+255),b
 16356  0052AE  6BB7               	clrf	(??_BME280_compensateTemperature+13)& (0+255),b
 16357  0052B0  1FB4               	comf	(??_BME280_compensateTemperature+10)& (0+255),f,b
 16358  0052B2  1FB5               	comf	(??_BME280_compensateTemperature+11)& (0+255),f,b
 16359  0052B4  1FB6               	comf	(??_BME280_compensateTemperature+12)& (0+255),f,b
 16360  0052B6  1FB7               	comf	(??_BME280_compensateTemperature+13)& (0+255),f,b
 16361  0052B8  2BB4               	incf	(??_BME280_compensateTemperature+10)& (0+255),f,b
 16362  0052BA  0E00               	movlw	0
 16363  0052BC  23B5               	addwfc	(??_BME280_compensateTemperature+11)& (0+255),f,b
 16364  0052BE  23B6               	addwfc	(??_BME280_compensateTemperature+12)& (0+255),f,b
 16365  0052C0  23B7               	addwfc	(??_BME280_compensateTemperature+13)& (0+255),f,b
 16366  0052C2  0E04               	movlw	4
 16367  0052C4  6FB8               	movwf	(??_BME280_compensateTemperature+14)& (0+255),b
 16368  0052C6  C108  F0B9         	movff	_adc_T,??_BME280_compensateTemperature+15
 16369  0052CA  C109  F0BA         	movff	_adc_T+1,??_BME280_compensateTemperature+16
 16370  0052CE  C10A  F0BB         	movff	_adc_T+2,??_BME280_compensateTemperature+17
 16371  0052D2  C10B  F0BC         	movff	_adc_T+3,??_BME280_compensateTemperature+18
 16372  0052D6                     u24755:
 16373  0052D6  67B8               	tstfsz	(??_BME280_compensateTemperature+14)& (0+255),b
 16374  0052D8  D001               	goto	u24756
 16375  0052DA  D007               	goto	u24757
 16376  0052DC                     u24756:
 16377  0052DC  35BC               	rlcf	(??_BME280_compensateTemperature+18)& (0+255),w,b
 16378  0052DE  33BC               	rrcf	(??_BME280_compensateTemperature+18)& (0+255),f,b
 16379  0052E0  33BB               	rrcf	(??_BME280_compensateTemperature+17)& (0+255),f,b
 16380  0052E2  33BA               	rrcf	(??_BME280_compensateTemperature+16)& (0+255),f,b
 16381  0052E4  33B9               	rrcf	(??_BME280_compensateTemperature+15)& (0+255),f,b
 16382  0052E6  2FB8               	decfsz	(??_BME280_compensateTemperature+14)& (0+255),f,b
 16383  0052E8  D7F6               	goto	u24755
 16384  0052EA                     u24757:
 16385  0052EA  0100               	movlb	0	; () banked
 16386  0052EC  51B4               	movf	(??_BME280_compensateTemperature+10)& (0+255),w,b
 16387  0052EE  25B9               	addwf	(??_BME280_compensateTemperature+15)& (0+255),w,b
 16388  0052F0  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 16389  0052F2  51B5               	movf	(??_BME280_compensateTemperature+11)& (0+255),w,b
 16390  0052F4  21BA               	addwfc	(??_BME280_compensateTemperature+16)& (0+255),w,b
 16391  0052F6  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 16392  0052F8  51B6               	movf	(??_BME280_compensateTemperature+12)& (0+255),w,b
 16393  0052FA  21BB               	addwfc	(??_BME280_compensateTemperature+17)& (0+255),w,b
 16394  0052FC  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16395  0052FE  51B7               	movf	(??_BME280_compensateTemperature+13)& (0+255),w,b
 16396  005300  21BC               	addwfc	(??_BME280_compensateTemperature+18)& (0+255),w,b
 16397  005302  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16398  005304  EC1D  F057         	call	___lmul	;wreg free
 16399  005308                     u24765:
 16400  005308  0100               	movlb	0	; () banked
 16401  00530A  67AA               	tstfsz	??_BME280_compensateTemperature& (0+255),b
 16402  00530C  D001               	goto	u24766
 16403  00530E  D007               	goto	u24767
 16404  005310                     u24766:
 16405  005310  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16406  005312  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 16407  005314  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 16408  005316  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 16409  005318  339A               	rrcf	?___lmul& (0+255),f,b
 16410  00531A  2FAA               	decfsz	??_BME280_compensateTemperature& (0+255),f,b
 16411  00531C  D7F5               	goto	u24765
 16412  00531E                     u24767:
 16413  00531E  C09A  F0C9         	movff	?___lmul,_BME280_compensateTemperature$7047
 16414  005322  C09B  F0CA         	movff	?___lmul+1,_BME280_compensateTemperature$7047+1
 16415  005326  C09C  F0CB         	movff	?___lmul+2,_BME280_compensateTemperature$7047+2
 16416  00532A  C09D  F0CC         	movff	?___lmul+3,_BME280_compensateTemperature$7047+3
 16417                           
 16418                           ;bme280.c: 328: tempV2 = (((((adc_T >> 4) - ((long) calibParam.dig_T1)) * ((adc_T >> 4) 
      +                          - ((long) calibParam.dig_T1))) >> 12)*((long) calibParam.dig_T3)) >> 14;
 16419  00532E  0E0E               	movlw	14
 16420  005330  0100               	movlb	0	; () banked
 16421  005332  6FAA               	movwf	??_BME280_compensateTemperature& (0+255),b
 16422  005334  C0C9  F09A         	movff	_BME280_compensateTemperature$7047,___lmul@multiplier
 16423  005338  C0CA  F09B         	movff	_BME280_compensateTemperature$7047+1,___lmul@multiplier+1
 16424  00533C  C0CB  F09C         	movff	_BME280_compensateTemperature$7047+2,___lmul@multiplier+2
 16425  005340  C0CC  F09D         	movff	_BME280_compensateTemperature$7047+3,___lmul@multiplier+3
 16426  005344  EE21  F06F         	lfsr	2,_calibParam+4
 16427  005348  CFDE F09E          	movff	postinc2,___lmul@multiplicand
 16428  00534C  CFDD F09F          	movff	postdec2,___lmul@multiplicand+1
 16429  005350  0E00               	movlw	0
 16430  005352  BF9F               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 16431  005354  0EFF               	movlw	-1
 16432  005356  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16433  005358  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16434  00535A  EC1D  F057         	call	___lmul	;wreg free
 16435  00535E                     u24775:
 16436  00535E  0100               	movlb	0	; () banked
 16437  005360  67AA               	tstfsz	??_BME280_compensateTemperature& (0+255),b
 16438  005362  D001               	goto	u24776
 16439  005364  D007               	goto	u24777
 16440  005366                     u24776:
 16441  005366  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16442  005368  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 16443  00536A  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 16444  00536C  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 16445  00536E  339A               	rrcf	?___lmul& (0+255),f,b
 16446  005370  2FAA               	decfsz	??_BME280_compensateTemperature& (0+255),f,b
 16447  005372  D7F5               	goto	u24775
 16448  005374                     u24777:
 16449  005374  C09A  F0C1         	movff	?___lmul,BME280_compensateTemperature@tempV2
 16450  005378  C09B  F0C2         	movff	?___lmul+1,BME280_compensateTemperature@tempV2+1
 16451  00537C  C09C  F0C3         	movff	?___lmul+2,BME280_compensateTemperature@tempV2+2
 16452  005380  C09D  F0C4         	movff	?___lmul+3,BME280_compensateTemperature@tempV2+3
 16453                           
 16454                           ;bme280.c: 329: t_fine = tempV1 + tempV2;
 16455  005384  0100               	movlb	0	; () banked
 16456  005386  51C1               	movf	BME280_compensateTemperature@tempV2& (0+255),w,b
 16457  005388  25BD               	addwf	BME280_compensateTemperature@tempV1& (0+255),w,b
 16458  00538A  0101               	movlb	1	; () banked
 16459  00538C  6F00               	movwf	_t_fine& (0+255),b
 16460  00538E  0100               	movlb	0	; () banked
 16461  005390  51C2               	movf	(BME280_compensateTemperature@tempV2+1)& (0+255),w,b
 16462  005392  21BE               	addwfc	(BME280_compensateTemperature@tempV1+1)& (0+255),w,b
 16463  005394  0101               	movlb	1	; () banked
 16464  005396  6F01               	movwf	(_t_fine+1)& (0+255),b
 16465  005398  0100               	movlb	0	; () banked
 16466  00539A  51C3               	movf	(BME280_compensateTemperature@tempV2+2)& (0+255),w,b
 16467  00539C  21BF               	addwfc	(BME280_compensateTemperature@tempV1+2)& (0+255),w,b
 16468  00539E  0101               	movlb	1	; () banked
 16469  0053A0  6F02               	movwf	(_t_fine+2)& (0+255),b
 16470  0053A2  0100               	movlb	0	; () banked
 16471  0053A4  51C4               	movf	(BME280_compensateTemperature@tempV2+3)& (0+255),w,b
 16472  0053A6  21C0               	addwfc	(BME280_compensateTemperature@tempV1+3)& (0+255),w,b
 16473  0053A8  0101               	movlb	1	; () banked
 16474  0053AA  6F03               	movwf	(_t_fine+3)& (0+255),b
 16475                           
 16476                           ; BSR set to: 1
 16477                           ;bme280.c: 330: t = (t_fine * 5 + 128) >> 8;
 16478  0053AC  C100  F09A         	movff	_t_fine,___lmul@multiplier
 16479  0053B0  C101  F09B         	movff	_t_fine+1,___lmul@multiplier+1
 16480  0053B4  C102  F09C         	movff	_t_fine+2,___lmul@multiplier+2
 16481  0053B8  C103  F09D         	movff	_t_fine+3,___lmul@multiplier+3
 16482  0053BC  0E05               	movlw	5
 16483  0053BE  0100               	movlb	0	; () banked
 16484  0053C0  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 16485  0053C2  0E00               	movlw	0
 16486  0053C4  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 16487  0053C6  0E00               	movlw	0
 16488  0053C8  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16489  0053CA  0E00               	movlw	0
 16490  0053CC  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16491  0053CE  EC1D  F057         	call	___lmul	;wreg free
 16492  0053D2  0E80               	movlw	128
 16493  0053D4  0100               	movlb	0	; () banked
 16494  0053D6  259A               	addwf	?___lmul& (0+255),w,b
 16495  0053D8  6FAA               	movwf	??_BME280_compensateTemperature& (0+255),b
 16496  0053DA  0E00               	movlw	0
 16497  0053DC  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 16498  0053DE  6FAB               	movwf	(??_BME280_compensateTemperature+1)& (0+255),b
 16499  0053E0  0E00               	movlw	0
 16500  0053E2  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 16501  0053E4  6FAC               	movwf	(??_BME280_compensateTemperature+2)& (0+255),b
 16502  0053E6  0E00               	movlw	0
 16503  0053E8  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 16504  0053EA  6FAD               	movwf	(??_BME280_compensateTemperature+3)& (0+255),b
 16505  0053EC  C0AB  F0AA         	movff	??_BME280_compensateTemperature+1,??_BME280_compensateTemperature
 16506  0053F0  C0AC  F0AB         	movff	??_BME280_compensateTemperature+2,??_BME280_compensateTemperature+1
 16507  0053F4  C0AD  F0AC         	movff	??_BME280_compensateTemperature+3,??_BME280_compensateTemperature+2
 16508  0053F8  6BAD               	clrf	(??_BME280_compensateTemperature+3)& (0+255),b
 16509  0053FA  BFAC               	btfsc	(??_BME280_compensateTemperature+2)& (0+255),7,b
 16510  0053FC  69AD               	setf	(??_BME280_compensateTemperature+3)& (0+255),b
 16511  0053FE  C0AA  F0C5         	movff	??_BME280_compensateTemperature,BME280_compensateTemperature@t
 16512  005402  C0AB  F0C6         	movff	??_BME280_compensateTemperature+1,BME280_compensateTemperature@t+1
 16513  005406  C0AC  F0C7         	movff	??_BME280_compensateTemperature+2,BME280_compensateTemperature@t+2
 16514  00540A  C0AD  F0C8         	movff	??_BME280_compensateTemperature+3,BME280_compensateTemperature@t+3
 16515                           
 16516                           ; BSR set to: 0
 16517                           ;bme280.c: 332: return t;
 16518  00540E  C0C5  F0A6         	movff	BME280_compensateTemperature@t,?_BME280_compensateTemperature
 16519  005412  C0C6  F0A7         	movff	BME280_compensateTemperature@t+1,?_BME280_compensateTemperature+1
 16520  005416  C0C7  F0A8         	movff	BME280_compensateTemperature@t+2,?_BME280_compensateTemperature+2
 16521  00541A  C0C8  F0A9         	movff	BME280_compensateTemperature@t+3,?_BME280_compensateTemperature+3
 16522  00541E  0012               	return	
 16523  005420                     __end_of_BME280_compensateTemperature:
 16524                           	opt stack 0
 16525                           tosu	equ	0xFFF
 16526                           tosh	equ	0xFFE
 16527                           tosl	equ	0xFFD
 16528                           pclath	equ	0xFFA
 16529                           tblptru	equ	0xFF8
 16530                           tblptrh	equ	0xFF7
 16531                           tblptrl	equ	0xFF6
 16532                           tablat	equ	0xFF5
 16533                           prodh	equ	0xFF4
 16534                           prodl	equ	0xFF3
 16535                           intcon	equ	0xFF2
 16536                           postinc0	equ	0xFEE
 16537                           wreg	equ	0xFE8
 16538                           indf2	equ	0xFDF
 16539                           postinc2	equ	0xFDE
 16540                           postdec2	equ	0xFDD
 16541                           fsr2h	equ	0xFDA
 16542                           fsr2l	equ	0xFD9
 16543                           status	equ	0xFD8
 16544                           
 16545 ;; *************** function _Weather_getPressureKPa *****************
 16546 ;; Defined at:
 16547 ;;		line 101 in file "mcc_generated_files/weather.c"
 16548 ;; Parameters:    Size  Location     Type
 16549 ;;		None
 16550 ;; Auto vars:     Size  Location     Type
 16551 ;;		None
 16552 ;; Return value:  Size  Location     Type
 16553 ;;                  3    0[BANK1 ] float 
 16554 ;; Registers used:
 16555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16556 ;; Tracked objects:
 16557 ;;		On entry : 0/0
 16558 ;;		On exit  : 0/0
 16559 ;;		Unchanged: 0/0
 16560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16561 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16564 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16565 ;;Total ram usage:        3 bytes
 16566 ;; Hardware stack levels used:    1
 16567 ;; Hardware stack levels required when called:   10
 16568 ;; This function calls:
 16569 ;;		_BME280_getPressure
 16570 ;; This function is called by:
 16571 ;;		_main
 16572 ;;		_Weather_example
 16573 ;; This function uses a non-reentrant model
 16574 ;;
 16575                           
 16576                           	psect	text95
 16577  00C3B2                     __ptext95:
 16578                           	opt stack 0
 16579  00C3B2                     _Weather_getPressureKPa:
 16580                           	opt stack 20
 16581                           
 16582                           ;weather.c: 103: return BME280_getPressure();
 16583                           
 16584                           ; BSR set to: 0
 16585                           ;incstack = 0
 16586  00C3B2  ECC0  F058         	call	_BME280_getPressure	;wreg free
 16587  00C3B6  C0F3  F18C         	movff	?_BME280_getPressure,?_Weather_getPressureKPa
 16588  00C3BA  C0F4  F18D         	movff	?_BME280_getPressure+1,?_Weather_getPressureKPa+1
 16589  00C3BE  C0F5  F18E         	movff	?_BME280_getPressure+2,?_Weather_getPressureKPa+2
 16590  00C3C2  0012               	return	
 16591  00C3C4                     __end_of_Weather_getPressureKPa:
 16592                           	opt stack 0
 16593                           tosu	equ	0xFFF
 16594                           tosh	equ	0xFFE
 16595                           tosl	equ	0xFFD
 16596                           pclath	equ	0xFFA
 16597                           tblptru	equ	0xFF8
 16598                           tblptrh	equ	0xFF7
 16599                           tblptrl	equ	0xFF6
 16600                           tablat	equ	0xFF5
 16601                           prodh	equ	0xFF4
 16602                           prodl	equ	0xFF3
 16603                           intcon	equ	0xFF2
 16604                           postinc0	equ	0xFEE
 16605                           wreg	equ	0xFE8
 16606                           indf2	equ	0xFDF
 16607                           postinc2	equ	0xFDE
 16608                           postdec2	equ	0xFDD
 16609                           fsr2h	equ	0xFDA
 16610                           fsr2l	equ	0xFD9
 16611                           status	equ	0xFD8
 16612                           
 16613 ;; *************** function _BME280_getPressure *****************
 16614 ;; Defined at:
 16615 ;;		line 301 in file "mcc_generated_files/bme280.c"
 16616 ;; Parameters:    Size  Location     Type
 16617 ;;		None
 16618 ;; Auto vars:     Size  Location     Type
 16619 ;;  pressure        3  150[BANK0 ] float 
 16620 ;; Return value:  Size  Location     Type
 16621 ;;                  3  147[BANK0 ] float 
 16622 ;; Registers used:
 16623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16624 ;; Tracked objects:
 16625 ;;		On entry : 0/0
 16626 ;;		On exit  : 0/0
 16627 ;;		Unchanged: 0/0
 16628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16629 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16630 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16632 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16633 ;;Total ram usage:        6 bytes
 16634 ;; Hardware stack levels used:    1
 16635 ;; Hardware stack levels required when called:    9
 16636 ;; This function calls:
 16637 ;;		_BME280_compensatePressure
 16638 ;;		___ftdiv
 16639 ;;		___lltoft
 16640 ;; This function is called by:
 16641 ;;		_Weather_getPressureKPa
 16642 ;; This function uses a non-reentrant model
 16643 ;;
 16644                           
 16645                           	psect	text96
 16646  00B180                     __ptext96:
 16647                           	opt stack 0
 16648  00B180                     _BME280_getPressure:
 16649                           	opt stack 20
 16650                           
 16651                           ;bme280.c: 303: float pressure = (float) BME280_compensatePressure() / 1000;
 16652                           
 16653                           ;incstack = 0
 16654  00B180  EC34  F00F         	call	_BME280_compensatePressure	;wreg free
 16655  00B184  C0A6  F0DB         	movff	?_BME280_compensatePressure,___lltoft@c
 16656  00B188  C0A7  F0DC         	movff	?_BME280_compensatePressure+1,___lltoft@c+1
 16657  00B18C  C0A8  F0DD         	movff	?_BME280_compensatePressure+2,___lltoft@c+2
 16658  00B190  C0A9  F0DE         	movff	?_BME280_compensatePressure+3,___lltoft@c+3
 16659  00B194  ECDB  F055         	call	___lltoft	;wreg free
 16660  00B198  C0DB  F0E4         	movff	?___lltoft,___ftdiv@f1
 16661  00B19C  C0DC  F0E5         	movff	?___lltoft+1,___ftdiv@f1+1
 16662  00B1A0  C0DD  F0E6         	movff	?___lltoft+2,___ftdiv@f1+2
 16663  00B1A4  0E00               	movlw	0
 16664  00B1A6  0100               	movlb	0	; () banked
 16665  00B1A8  6FE7               	movwf	___ftdiv@f2& (0+255),b
 16666  00B1AA  0E7A               	movlw	122
 16667  00B1AC  6FE8               	movwf	(___ftdiv@f2+1)& (0+255),b
 16668  00B1AE  0E44               	movlw	68
 16669  00B1B0  6FE9               	movwf	(___ftdiv@f2+2)& (0+255),b
 16670  00B1B2  EC3B  F047         	call	___ftdiv	;wreg free
 16671  00B1B6  C0E4  F0F6         	movff	?___ftdiv,BME280_getPressure@pressure
 16672  00B1BA  C0E5  F0F7         	movff	?___ftdiv+1,BME280_getPressure@pressure+1
 16673  00B1BE  C0E6  F0F8         	movff	?___ftdiv+2,BME280_getPressure@pressure+2
 16674                           
 16675                           ;bme280.c: 304: return pressure;
 16676  00B1C2  C0F6  F0F3         	movff	BME280_getPressure@pressure,?_BME280_getPressure
 16677  00B1C6  C0F7  F0F4         	movff	BME280_getPressure@pressure+1,?_BME280_getPressure+1
 16678  00B1CA  C0F8  F0F5         	movff	BME280_getPressure@pressure+2,?_BME280_getPressure+2
 16679  00B1CE  0012               	return	
 16680  00B1D0                     __end_of_BME280_getPressure:
 16681                           	opt stack 0
 16682                           tosu	equ	0xFFF
 16683                           tosh	equ	0xFFE
 16684                           tosl	equ	0xFFD
 16685                           pclath	equ	0xFFA
 16686                           tblptru	equ	0xFF8
 16687                           tblptrh	equ	0xFF7
 16688                           tblptrl	equ	0xFF6
 16689                           tablat	equ	0xFF5
 16690                           prodh	equ	0xFF4
 16691                           prodl	equ	0xFF3
 16692                           intcon	equ	0xFF2
 16693                           postinc0	equ	0xFEE
 16694                           wreg	equ	0xFE8
 16695                           indf2	equ	0xFDF
 16696                           postinc2	equ	0xFDE
 16697                           postdec2	equ	0xFDD
 16698                           fsr2h	equ	0xFDA
 16699                           fsr2l	equ	0xFD9
 16700                           status	equ	0xFD8
 16701                           
 16702 ;; *************** function _BME280_compensatePressure *****************
 16703 ;; Defined at:
 16704 ;;		line 339 in file "mcc_generated_files/bme280.c"
 16705 ;; Parameters:    Size  Location     Type
 16706 ;;		None
 16707 ;; Auto vars:     Size  Location     Type
 16708 ;;  pressV1         4   99[BANK0 ] long 
 16709 ;;  p               4   95[BANK0 ] unsigned long 
 16710 ;;  pressV2         4   91[BANK0 ] long 
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  4   70[BANK0 ] unsigned long 
 16713 ;; Registers used:
 16714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16720 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16721 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16722 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16723 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16724 ;;Total ram usage:       33 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; Hardware stack levels required when called:    8
 16727 ;; This function calls:
 16728 ;;		___lldiv
 16729 ;;		___lmul
 16730 ;; This function is called by:
 16731 ;;		_BME280_getPressure
 16732 ;; This function uses a non-reentrant model
 16733 ;;
 16734                           
 16735                           	psect	text97
 16736  001E68                     __ptext97:
 16737                           	opt stack 0
 16738  001E68                     _BME280_compensatePressure:
 16739                           	opt stack 20
 16740                           
 16741                           ;bme280.c: 341: long pressV1, pressV2;
 16742                           ;bme280.c: 342: uint32_t p;
 16743                           ;bme280.c: 344: pressV1 = (((long) t_fine) >> 1) - (long) 64000;
 16744                           
 16745                           ;incstack = 0
 16746  001E68  C100  F0AA         	movff	_t_fine,??_BME280_compensatePressure
 16747  001E6C  C101  F0AB         	movff	_t_fine+1,??_BME280_compensatePressure+1
 16748  001E70  C102  F0AC         	movff	_t_fine+2,??_BME280_compensatePressure+2
 16749  001E74  C103  F0AD         	movff	_t_fine+3,??_BME280_compensatePressure+3
 16750  001E78  0100               	movlb	0	; () banked
 16751  001E7A  35AD               	rlcf	(??_BME280_compensatePressure+3)& (0+255),w,b
 16752  001E7C  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 16753  001E7E  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 16754  001E80  33AB               	rrcf	(??_BME280_compensatePressure+1)& (0+255),f,b
 16755  001E82  33AA               	rrcf	??_BME280_compensatePressure& (0+255),f,b
 16756  001E84  0E00               	movlw	0
 16757  001E86  25AA               	addwf	??_BME280_compensatePressure& (0+255),w,b
 16758  001E88  6FC3               	movwf	BME280_compensatePressure@pressV1& (0+255),b
 16759  001E8A  0E06               	movlw	6
 16760  001E8C  21AB               	addwfc	(??_BME280_compensatePressure+1)& (0+255),w,b
 16761  001E8E  6FC4               	movwf	(BME280_compensatePressure@pressV1+1)& (0+255),b
 16762  001E90  0EFF               	movlw	255
 16763  001E92  21AC               	addwfc	(??_BME280_compensatePressure+2)& (0+255),w,b
 16764  001E94  6FC5               	movwf	(BME280_compensatePressure@pressV1+2)& (0+255),b
 16765  001E96  0EFF               	movlw	255
 16766  001E98  21AD               	addwfc	(??_BME280_compensatePressure+3)& (0+255),w,b
 16767  001E9A  6FC6               	movwf	(BME280_compensatePressure@pressV1+3)& (0+255),b
 16768                           
 16769                           ; BSR set to: 0
 16770                           ;bme280.c: 345: pressV2 = (((pressV1 >> 2) * (pressV1 >> 2)) >> 11) * ((long) calibParam
      +                          .dig_P6);
 16771  001E9C  0E0B               	movlw	11
 16772  001E9E  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 16773  001EA0  0E02               	movlw	2
 16774  001EA2  6FAB               	movwf	(??_BME280_compensatePressure+1)& (0+255),b
 16775  001EA4  C0C3  F0AC         	movff	BME280_compensatePressure@pressV1,??_BME280_compensatePressure+2
 16776  001EA8  C0C4  F0AD         	movff	BME280_compensatePressure@pressV1+1,??_BME280_compensatePressure+3
 16777  001EAC  C0C5  F0AE         	movff	BME280_compensatePressure@pressV1+2,??_BME280_compensatePressure+4
 16778  001EB0  C0C6  F0AF         	movff	BME280_compensatePressure@pressV1+3,??_BME280_compensatePressure+5
 16779  001EB4                     u24785:
 16780  001EB4  67AB               	tstfsz	(??_BME280_compensatePressure+1)& (0+255),b
 16781  001EB6  D001               	goto	u24786
 16782  001EB8  D007               	goto	u24787
 16783  001EBA                     u24786:
 16784  001EBA  35AF               	rlcf	(??_BME280_compensatePressure+5)& (0+255),w,b
 16785  001EBC  33AF               	rrcf	(??_BME280_compensatePressure+5)& (0+255),f,b
 16786  001EBE  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 16787  001EC0  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 16788  001EC2  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 16789  001EC4  2FAB               	decfsz	(??_BME280_compensatePressure+1)& (0+255),f,b
 16790  001EC6  D7F6               	goto	u24785
 16791  001EC8                     u24787:
 16792  001EC8  C0AC  F09A         	movff	??_BME280_compensatePressure+2,___lmul@multiplier
 16793  001ECC  C0AD  F09B         	movff	??_BME280_compensatePressure+3,___lmul@multiplier+1
 16794  001ED0  C0AE  F09C         	movff	??_BME280_compensatePressure+4,___lmul@multiplier+2
 16795  001ED4  C0AF  F09D         	movff	??_BME280_compensatePressure+5,___lmul@multiplier+3
 16796  001ED8  0E02               	movlw	2
 16797  001EDA  0100               	movlb	0	; () banked
 16798  001EDC  6FB0               	movwf	(??_BME280_compensatePressure+6)& (0+255),b
 16799  001EDE  C0C3  F0B1         	movff	BME280_compensatePressure@pressV1,??_BME280_compensatePressure+7
 16800  001EE2  C0C4  F0B2         	movff	BME280_compensatePressure@pressV1+1,??_BME280_compensatePressure+8
 16801  001EE6  C0C5  F0B3         	movff	BME280_compensatePressure@pressV1+2,??_BME280_compensatePressure+9
 16802  001EEA  C0C6  F0B4         	movff	BME280_compensatePressure@pressV1+3,??_BME280_compensatePressure+10
 16803  001EEE                     u24795:
 16804  001EEE  67B0               	tstfsz	(??_BME280_compensatePressure+6)& (0+255),b
 16805  001EF0  D001               	goto	u24796
 16806  001EF2  D007               	goto	u24797
 16807  001EF4                     u24796:
 16808  001EF4  35B4               	rlcf	(??_BME280_compensatePressure+10)& (0+255),w,b
 16809  001EF6  33B4               	rrcf	(??_BME280_compensatePressure+10)& (0+255),f,b
 16810  001EF8  33B3               	rrcf	(??_BME280_compensatePressure+9)& (0+255),f,b
 16811  001EFA  33B2               	rrcf	(??_BME280_compensatePressure+8)& (0+255),f,b
 16812  001EFC  33B1               	rrcf	(??_BME280_compensatePressure+7)& (0+255),f,b
 16813  001EFE  2FB0               	decfsz	(??_BME280_compensatePressure+6)& (0+255),f,b
 16814  001F00  D7F6               	goto	u24795
 16815  001F02                     u24797:
 16816  001F02  C0B1  F09E         	movff	??_BME280_compensatePressure+7,___lmul@multiplicand
 16817  001F06  C0B2  F09F         	movff	??_BME280_compensatePressure+8,___lmul@multiplicand+1
 16818  001F0A  C0B3  F0A0         	movff	??_BME280_compensatePressure+9,___lmul@multiplicand+2
 16819  001F0E  C0B4  F0A1         	movff	??_BME280_compensatePressure+10,___lmul@multiplicand+3
 16820  001F12  EC1D  F057         	call	___lmul	;wreg free
 16821  001F16                     u24805:
 16822  001F16  0100               	movlb	0	; () banked
 16823  001F18  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 16824  001F1A  D001               	goto	u24806
 16825  001F1C  D007               	goto	u24807
 16826  001F1E                     u24806:
 16827  001F1E  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16828  001F20  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 16829  001F22  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 16830  001F24  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 16831  001F26  339A               	rrcf	?___lmul& (0+255),f,b
 16832  001F28  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 16833  001F2A  D7F5               	goto	u24805
 16834  001F2C                     u24807:
 16835  001F2C  C09A  F0B7         	movff	?___lmul,_BME280_compensatePressure$7048
 16836  001F30  C09B  F0B8         	movff	?___lmul+1,_BME280_compensatePressure$7048+1
 16837  001F34  C09C  F0B9         	movff	?___lmul+2,_BME280_compensatePressure$7048+2
 16838  001F38  C09D  F0BA         	movff	?___lmul+3,_BME280_compensatePressure$7048+3
 16839                           
 16840                           ;bme280.c: 345: pressV2 = (((pressV1 >> 2) * (pressV1 >> 2)) >> 11) * ((long) calibParam
      +                          .dig_P6);
 16841  001F3C  C0B7  F09A         	movff	_BME280_compensatePressure$7048,___lmul@multiplier
 16842  001F40  C0B8  F09B         	movff	_BME280_compensatePressure$7048+1,___lmul@multiplier+1
 16843  001F44  C0B9  F09C         	movff	_BME280_compensatePressure$7048+2,___lmul@multiplier+2
 16844  001F48  C0BA  F09D         	movff	_BME280_compensatePressure$7048+3,___lmul@multiplier+3
 16845  001F4C  EE21  F07B         	lfsr	2,_calibParam+16
 16846  001F50  CFDE F09E          	movff	postinc2,___lmul@multiplicand
 16847  001F54  CFDD F09F          	movff	postdec2,___lmul@multiplicand+1
 16848  001F58  0100               	movlb	0	; () banked
 16849  001F5A  0E00               	movlw	0
 16850  001F5C  BF9F               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 16851  001F5E  0EFF               	movlw	-1
 16852  001F60  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16853  001F62  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16854  001F64  EC1D  F057         	call	___lmul	;wreg free
 16855  001F68  C09A  F0BB         	movff	?___lmul,BME280_compensatePressure@pressV2
 16856  001F6C  C09B  F0BC         	movff	?___lmul+1,BME280_compensatePressure@pressV2+1
 16857  001F70  C09C  F0BD         	movff	?___lmul+2,BME280_compensatePressure@pressV2+2
 16858  001F74  C09D  F0BE         	movff	?___lmul+3,BME280_compensatePressure@pressV2+3
 16859                           
 16860                           ;bme280.c: 346: pressV2 = pressV2 + ((pressV1 * ((long) calibParam.dig_P5)) << 1);
 16861  001F78  EE21  F079         	lfsr	2,_calibParam+14
 16862  001F7C  CFDE F09A          	movff	postinc2,___lmul@multiplier
 16863  001F80  CFDD F09B          	movff	postdec2,___lmul@multiplier+1
 16864  001F84  0100               	movlb	0	; () banked
 16865  001F86  0E00               	movlw	0
 16866  001F88  BF9B               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16867  001F8A  0EFF               	movlw	-1
 16868  001F8C  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 16869  001F8E  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 16870  001F90  C0C3  F09E         	movff	BME280_compensatePressure@pressV1,___lmul@multiplicand
 16871  001F94  C0C4  F09F         	movff	BME280_compensatePressure@pressV1+1,___lmul@multiplicand+1
 16872  001F98  C0C5  F0A0         	movff	BME280_compensatePressure@pressV1+2,___lmul@multiplicand+2
 16873  001F9C  C0C6  F0A1         	movff	BME280_compensatePressure@pressV1+3,___lmul@multiplicand+3
 16874  001FA0  EC1D  F057         	call	___lmul	;wreg free
 16875  001FA4  90D8               	bcf	status,0,c
 16876  001FA6  0100               	movlb	0	; () banked
 16877  001FA8  359A               	rlcf	?___lmul& (0+255),w,b
 16878  001FAA  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 16879  001FAC  359B               	rlcf	(?___lmul+1)& (0+255),w,b
 16880  001FAE  6FAB               	movwf	(??_BME280_compensatePressure+1)& (0+255),b
 16881  001FB0  359C               	rlcf	(?___lmul+2)& (0+255),w,b
 16882  001FB2  6FAC               	movwf	(??_BME280_compensatePressure+2)& (0+255),b
 16883  001FB4  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16884  001FB6  6FAD               	movwf	(??_BME280_compensatePressure+3)& (0+255),b
 16885  001FB8  51BB               	movf	BME280_compensatePressure@pressV2& (0+255),w,b
 16886  001FBA  25AA               	addwf	??_BME280_compensatePressure& (0+255),w,b
 16887  001FBC  6FBB               	movwf	BME280_compensatePressure@pressV2& (0+255),b
 16888  001FBE  51BC               	movf	(BME280_compensatePressure@pressV2+1)& (0+255),w,b
 16889  001FC0  21AB               	addwfc	(??_BME280_compensatePressure+1)& (0+255),w,b
 16890  001FC2  6FBC               	movwf	(BME280_compensatePressure@pressV2+1)& (0+255),b
 16891  001FC4  51BD               	movf	(BME280_compensatePressure@pressV2+2)& (0+255),w,b
 16892  001FC6  21AC               	addwfc	(??_BME280_compensatePressure+2)& (0+255),w,b
 16893  001FC8  6FBD               	movwf	(BME280_compensatePressure@pressV2+2)& (0+255),b
 16894  001FCA  51BE               	movf	(BME280_compensatePressure@pressV2+3)& (0+255),w,b
 16895  001FCC  21AD               	addwfc	(??_BME280_compensatePressure+3)& (0+255),w,b
 16896  001FCE  6FBE               	movwf	(BME280_compensatePressure@pressV2+3)& (0+255),b
 16897                           
 16898                           ; BSR set to: 0
 16899                           ;bme280.c: 347: pressV2 = (pressV2 >> 2)+(((long) calibParam.dig_P4) << 16);
 16900  001FD0  0101               	movlb	1	; () banked
 16901  001FD2  5177               	movf	(_calibParam+12)& (0+255),w,b
 16902  001FD4  0100               	movlb	0	; () banked
 16903  001FD6  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 16904  001FD8  0101               	movlb	1	; () banked
 16905  001FDA  5178               	movf	(_calibParam+13)& (0+255),w,b
 16906  001FDC  0100               	movlb	0	; () banked
 16907  001FDE  6FAB               	movwf	(??_BME280_compensatePressure+1)& (0+255),b
 16908  001FE0  6BAC               	clrf	(??_BME280_compensatePressure+2)& (0+255),b
 16909  001FE2  6BAD               	clrf	(??_BME280_compensatePressure+3)& (0+255),b
 16910  001FE4  C0AB  F0AD         	movff	??_BME280_compensatePressure+1,??_BME280_compensatePressure+3
 16911  001FE8  C0AA  F0AC         	movff	??_BME280_compensatePressure,??_BME280_compensatePressure+2
 16912  001FEC  6BAB               	clrf	(??_BME280_compensatePressure+1)& (0+255),b
 16913  001FEE  6BAA               	clrf	??_BME280_compensatePressure& (0+255),b
 16914  001FF0  0E02               	movlw	2
 16915  001FF2  6FAE               	movwf	(??_BME280_compensatePressure+4)& (0+255),b
 16916  001FF4  C0BB  F0AF         	movff	BME280_compensatePressure@pressV2,??_BME280_compensatePressure+5
 16917  001FF8  C0BC  F0B0         	movff	BME280_compensatePressure@pressV2+1,??_BME280_compensatePressure+6
 16918  001FFC  C0BD  F0B1         	movff	BME280_compensatePressure@pressV2+2,??_BME280_compensatePressure+7
 16919  002000  C0BE  F0B2         	movff	BME280_compensatePressure@pressV2+3,??_BME280_compensatePressure+8
 16920  002004                     u24815:
 16921  002004  67AE               	tstfsz	(??_BME280_compensatePressure+4)& (0+255),b
 16922  002006  D001               	goto	u24816
 16923  002008  D007               	goto	u24817
 16924  00200A                     u24816:
 16925  00200A  35B2               	rlcf	(??_BME280_compensatePressure+8)& (0+255),w,b
 16926  00200C  33B2               	rrcf	(??_BME280_compensatePressure+8)& (0+255),f,b
 16927  00200E  33B1               	rrcf	(??_BME280_compensatePressure+7)& (0+255),f,b
 16928  002010  33B0               	rrcf	(??_BME280_compensatePressure+6)& (0+255),f,b
 16929  002012  33AF               	rrcf	(??_BME280_compensatePressure+5)& (0+255),f,b
 16930  002014  2FAE               	decfsz	(??_BME280_compensatePressure+4)& (0+255),f,b
 16931  002016  D7F6               	goto	u24815
 16932  002018                     u24817:
 16933  002018  0100               	movlb	0	; () banked
 16934  00201A  51AA               	movf	??_BME280_compensatePressure& (0+255),w,b
 16935  00201C  25AF               	addwf	(??_BME280_compensatePressure+5)& (0+255),w,b
 16936  00201E  6FBB               	movwf	BME280_compensatePressure@pressV2& (0+255),b
 16937  002020  51AB               	movf	(??_BME280_compensatePressure+1)& (0+255),w,b
 16938  002022  21B0               	addwfc	(??_BME280_compensatePressure+6)& (0+255),w,b
 16939  002024  6FBC               	movwf	(BME280_compensatePressure@pressV2+1)& (0+255),b
 16940  002026  51AC               	movf	(??_BME280_compensatePressure+2)& (0+255),w,b
 16941  002028  21B1               	addwfc	(??_BME280_compensatePressure+7)& (0+255),w,b
 16942  00202A  6FBD               	movwf	(BME280_compensatePressure@pressV2+2)& (0+255),b
 16943  00202C  51AD               	movf	(??_BME280_compensatePressure+3)& (0+255),w,b
 16944  00202E  21B2               	addwfc	(??_BME280_compensatePressure+8)& (0+255),w,b
 16945  002030  6FBE               	movwf	(BME280_compensatePressure@pressV2+3)& (0+255),b
 16946                           
 16947                           ;bme280.c: 348: pressV1 = (((calibParam.dig_P3 * (((pressV1 >> 2) * (pressV1 >> 2)) >> 1
      +                          3)) >> 3) +
 16948                           ;bme280.c: 349: ((((long) calibParam.dig_P2) * pressV1) >> 1)) >> 18;
 16949  002032  0E0D               	movlw	13
 16950  002034  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 16951  002036  0E02               	movlw	2
 16952  002038  6FAB               	movwf	(??_BME280_compensatePressure+1)& (0+255),b
 16953  00203A  C0C3  F0AC         	movff	BME280_compensatePressure@pressV1,??_BME280_compensatePressure+2
 16954  00203E  C0C4  F0AD         	movff	BME280_compensatePressure@pressV1+1,??_BME280_compensatePressure+3
 16955  002042  C0C5  F0AE         	movff	BME280_compensatePressure@pressV1+2,??_BME280_compensatePressure+4
 16956  002046  C0C6  F0AF         	movff	BME280_compensatePressure@pressV1+3,??_BME280_compensatePressure+5
 16957  00204A                     u24825:
 16958  00204A  67AB               	tstfsz	(??_BME280_compensatePressure+1)& (0+255),b
 16959  00204C  D001               	goto	u24826
 16960  00204E  D007               	goto	u24827
 16961  002050                     u24826:
 16962  002050  35AF               	rlcf	(??_BME280_compensatePressure+5)& (0+255),w,b
 16963  002052  33AF               	rrcf	(??_BME280_compensatePressure+5)& (0+255),f,b
 16964  002054  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 16965  002056  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 16966  002058  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 16967  00205A  2FAB               	decfsz	(??_BME280_compensatePressure+1)& (0+255),f,b
 16968  00205C  D7F6               	goto	u24825
 16969  00205E                     u24827:
 16970  00205E  C0AC  F09A         	movff	??_BME280_compensatePressure+2,___lmul@multiplier
 16971  002062  C0AD  F09B         	movff	??_BME280_compensatePressure+3,___lmul@multiplier+1
 16972  002066  C0AE  F09C         	movff	??_BME280_compensatePressure+4,___lmul@multiplier+2
 16973  00206A  C0AF  F09D         	movff	??_BME280_compensatePressure+5,___lmul@multiplier+3
 16974  00206E  0E02               	movlw	2
 16975  002070  0100               	movlb	0	; () banked
 16976  002072  6FB0               	movwf	(??_BME280_compensatePressure+6)& (0+255),b
 16977  002074  C0C3  F0B1         	movff	BME280_compensatePressure@pressV1,??_BME280_compensatePressure+7
 16978  002078  C0C4  F0B2         	movff	BME280_compensatePressure@pressV1+1,??_BME280_compensatePressure+8
 16979  00207C  C0C5  F0B3         	movff	BME280_compensatePressure@pressV1+2,??_BME280_compensatePressure+9
 16980  002080  C0C6  F0B4         	movff	BME280_compensatePressure@pressV1+3,??_BME280_compensatePressure+10
 16981  002084                     u24835:
 16982  002084  67B0               	tstfsz	(??_BME280_compensatePressure+6)& (0+255),b
 16983  002086  D001               	goto	u24836
 16984  002088  D007               	goto	u24837
 16985  00208A                     u24836:
 16986  00208A  35B4               	rlcf	(??_BME280_compensatePressure+10)& (0+255),w,b
 16987  00208C  33B4               	rrcf	(??_BME280_compensatePressure+10)& (0+255),f,b
 16988  00208E  33B3               	rrcf	(??_BME280_compensatePressure+9)& (0+255),f,b
 16989  002090  33B2               	rrcf	(??_BME280_compensatePressure+8)& (0+255),f,b
 16990  002092  33B1               	rrcf	(??_BME280_compensatePressure+7)& (0+255),f,b
 16991  002094  2FB0               	decfsz	(??_BME280_compensatePressure+6)& (0+255),f,b
 16992  002096  D7F6               	goto	u24835
 16993  002098                     u24837:
 16994  002098  C0B1  F09E         	movff	??_BME280_compensatePressure+7,___lmul@multiplicand
 16995  00209C  C0B2  F09F         	movff	??_BME280_compensatePressure+8,___lmul@multiplicand+1
 16996  0020A0  C0B3  F0A0         	movff	??_BME280_compensatePressure+9,___lmul@multiplicand+2
 16997  0020A4  C0B4  F0A1         	movff	??_BME280_compensatePressure+10,___lmul@multiplicand+3
 16998  0020A8  EC1D  F057         	call	___lmul	;wreg free
 16999  0020AC                     u24845:
 17000  0020AC  0100               	movlb	0	; () banked
 17001  0020AE  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17002  0020B0  D001               	goto	u24846
 17003  0020B2  D007               	goto	u24847
 17004  0020B4                     u24846:
 17005  0020B4  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 17006  0020B6  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 17007  0020B8  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 17008  0020BA  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 17009  0020BC  339A               	rrcf	?___lmul& (0+255),f,b
 17010  0020BE  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17011  0020C0  D7F5               	goto	u24845
 17012  0020C2                     u24847:
 17013  0020C2  C09A  F0B7         	movff	?___lmul,_BME280_compensatePressure$7048
 17014  0020C6  C09B  F0B8         	movff	?___lmul+1,_BME280_compensatePressure$7048+1
 17015  0020CA  C09C  F0B9         	movff	?___lmul+2,_BME280_compensatePressure$7048+2
 17016  0020CE  C09D  F0BA         	movff	?___lmul+3,_BME280_compensatePressure$7048+3
 17017                           
 17018                           ;bme280.c: 348: pressV1 = (((calibParam.dig_P3 * (((pressV1 >> 2) * (pressV1 >> 2)) >> 1
      +                          3)) >> 3) +
 17019                           ;bme280.c: 349: ((((long) calibParam.dig_P2) * pressV1) >> 1)) >> 18;
 17020  0020D2  0E12               	movlw	18
 17021  0020D4  0100               	movlb	0	; () banked
 17022  0020D6  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 17023  0020D8  0E03               	movlw	3
 17024  0020DA  6FAB               	movwf	(??_BME280_compensatePressure+1)& (0+255),b
 17025  0020DC  EE21  F075         	lfsr	2,_calibParam+10
 17026  0020E0  CFDE F09A          	movff	postinc2,___lmul@multiplier
 17027  0020E4  CFDD F09B          	movff	postdec2,___lmul@multiplier+1
 17028  0020E8  0E00               	movlw	0
 17029  0020EA  BF9B               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17030  0020EC  0EFF               	movlw	-1
 17031  0020EE  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 17032  0020F0  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 17033  0020F2  C0B7  F09E         	movff	_BME280_compensatePressure$7048,___lmul@multiplicand
 17034  0020F6  C0B8  F09F         	movff	_BME280_compensatePressure$7048+1,___lmul@multiplicand+1
 17035  0020FA  C0B9  F0A0         	movff	_BME280_compensatePressure$7048+2,___lmul@multiplicand+2
 17036  0020FE  C0BA  F0A1         	movff	_BME280_compensatePressure$7048+3,___lmul@multiplicand+3
 17037  002102  EC1D  F057         	call	___lmul	;wreg free
 17038  002106  C09A  F0AC         	movff	?___lmul,??_BME280_compensatePressure+2
 17039  00210A  C09B  F0AD         	movff	?___lmul+1,??_BME280_compensatePressure+3
 17040  00210E  C09C  F0AE         	movff	?___lmul+2,??_BME280_compensatePressure+4
 17041  002112  C09D  F0AF         	movff	?___lmul+3,??_BME280_compensatePressure+5
 17042  002116                     u24855:
 17043  002116  0100               	movlb	0	; () banked
 17044  002118  67AB               	tstfsz	(??_BME280_compensatePressure+1)& (0+255),b
 17045  00211A  D001               	goto	u24856
 17046  00211C  D007               	goto	u24857
 17047  00211E                     u24856:
 17048  00211E  35AF               	rlcf	(??_BME280_compensatePressure+5)& (0+255),w,b
 17049  002120  33AF               	rrcf	(??_BME280_compensatePressure+5)& (0+255),f,b
 17050  002122  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 17051  002124  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 17052  002126  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 17053  002128  2FAB               	decfsz	(??_BME280_compensatePressure+1)& (0+255),f,b
 17054  00212A  D7F5               	goto	u24855
 17055  00212C                     u24857:
 17056  00212C  EE21  F073         	lfsr	2,_calibParam+8
 17057  002130  CFDE F09A          	movff	postinc2,___lmul@multiplier
 17058  002134  CFDD F09B          	movff	postdec2,___lmul@multiplier+1
 17059  002138  0100               	movlb	0	; () banked
 17060  00213A  0E00               	movlw	0
 17061  00213C  BF9B               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17062  00213E  0EFF               	movlw	-1
 17063  002140  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 17064  002142  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 17065  002144  C0C3  F09E         	movff	BME280_compensatePressure@pressV1,___lmul@multiplicand
 17066  002148  C0C4  F09F         	movff	BME280_compensatePressure@pressV1+1,___lmul@multiplicand+1
 17067  00214C  C0C5  F0A0         	movff	BME280_compensatePressure@pressV1+2,___lmul@multiplicand+2
 17068  002150  C0C6  F0A1         	movff	BME280_compensatePressure@pressV1+3,___lmul@multiplicand+3
 17069  002154  EC1D  F057         	call	___lmul	;wreg free
 17070  002158  0100               	movlb	0	; () banked
 17071  00215A  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 17072  00215C  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 17073  00215E  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 17074  002160  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 17075  002162  339A               	rrcf	?___lmul& (0+255),f,b
 17076  002164  519A               	movf	?___lmul& (0+255),w,b
 17077  002166  25AC               	addwf	(??_BME280_compensatePressure+2)& (0+255),w,b
 17078  002168  6FB0               	movwf	(??_BME280_compensatePressure+6)& (0+255),b
 17079  00216A  519B               	movf	(?___lmul+1)& (0+255),w,b
 17080  00216C  21AD               	addwfc	(??_BME280_compensatePressure+3)& (0+255),w,b
 17081  00216E  6FB1               	movwf	(??_BME280_compensatePressure+7)& (0+255),b
 17082  002170  519C               	movf	(?___lmul+2)& (0+255),w,b
 17083  002172  21AE               	addwfc	(??_BME280_compensatePressure+4)& (0+255),w,b
 17084  002174  6FB2               	movwf	(??_BME280_compensatePressure+8)& (0+255),b
 17085  002176  519D               	movf	(?___lmul+3)& (0+255),w,b
 17086  002178  21AF               	addwfc	(??_BME280_compensatePressure+5)& (0+255),w,b
 17087  00217A  6FB3               	movwf	(??_BME280_compensatePressure+9)& (0+255),b
 17088  00217C                     u24865:
 17089  00217C  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17090  00217E  D001               	goto	u24866
 17091  002180  D007               	goto	u24867
 17092  002182                     u24866:
 17093  002182  35B3               	rlcf	(??_BME280_compensatePressure+9)& (0+255),w,b
 17094  002184  33B3               	rrcf	(??_BME280_compensatePressure+9)& (0+255),f,b
 17095  002186  33B2               	rrcf	(??_BME280_compensatePressure+8)& (0+255),f,b
 17096  002188  33B1               	rrcf	(??_BME280_compensatePressure+7)& (0+255),f,b
 17097  00218A  33B0               	rrcf	(??_BME280_compensatePressure+6)& (0+255),f,b
 17098  00218C  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17099  00218E  D7F6               	goto	u24865
 17100  002190                     u24867:
 17101  002190  C0B0  F0C3         	movff	??_BME280_compensatePressure+6,BME280_compensatePressure@pressV1
 17102  002194  C0B1  F0C4         	movff	??_BME280_compensatePressure+7,BME280_compensatePressure@pressV1+1
 17103  002198  C0B2  F0C5         	movff	??_BME280_compensatePressure+8,BME280_compensatePressure@pressV1+2
 17104  00219C  C0B3  F0C6         	movff	??_BME280_compensatePressure+9,BME280_compensatePressure@pressV1+3
 17105                           
 17106                           ;bme280.c: 350: pressV1 = ((((32768 + pressV1))*((long) calibParam.dig_P1)) >> 15);
 17107  0021A0  0E0F               	movlw	15
 17108  0021A2  0100               	movlb	0	; () banked
 17109  0021A4  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 17110  0021A6  0E00               	movlw	0
 17111  0021A8  25C3               	addwf	BME280_compensatePressure@pressV1& (0+255),w,b
 17112  0021AA  6F9A               	movwf	___lmul@multiplier& (0+255),b
 17113  0021AC  0E80               	movlw	128
 17114  0021AE  21C4               	addwfc	(BME280_compensatePressure@pressV1+1)& (0+255),w,b
 17115  0021B0  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 17116  0021B2  0E00               	movlw	0
 17117  0021B4  21C5               	addwfc	(BME280_compensatePressure@pressV1+2)& (0+255),w,b
 17118  0021B6  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 17119  0021B8  0E00               	movlw	0
 17120  0021BA  21C6               	addwfc	(BME280_compensatePressure@pressV1+3)& (0+255),w,b
 17121  0021BC  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 17122  0021BE  C171  F09E         	movff	_calibParam+6,___lmul@multiplicand
 17123  0021C2  C172  F09F         	movff	_calibParam+7,___lmul@multiplicand+1
 17124  0021C6  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 17125  0021C8  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 17126  0021CA  EC1D  F057         	call	___lmul	;wreg free
 17127  0021CE                     u24875:
 17128  0021CE  0100               	movlb	0	; () banked
 17129  0021D0  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17130  0021D2  D001               	goto	u24876
 17131  0021D4  D007               	goto	u24877
 17132  0021D6                     u24876:
 17133  0021D6  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 17134  0021D8  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 17135  0021DA  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 17136  0021DC  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 17137  0021DE  339A               	rrcf	?___lmul& (0+255),f,b
 17138  0021E0  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17139  0021E2  D7F5               	goto	u24875
 17140  0021E4                     u24877:
 17141  0021E4  C09A  F0C3         	movff	?___lmul,BME280_compensatePressure@pressV1
 17142  0021E8  C09B  F0C4         	movff	?___lmul+1,BME280_compensatePressure@pressV1+1
 17143  0021EC  C09C  F0C5         	movff	?___lmul+2,BME280_compensatePressure@pressV1+2
 17144  0021F0  C09D  F0C6         	movff	?___lmul+3,BME280_compensatePressure@pressV1+3
 17145                           
 17146                           ;bme280.c: 352: if (pressV1 == 0)
 17147  0021F4  0100               	movlb	0	; () banked
 17148  0021F6  51C3               	movf	BME280_compensatePressure@pressV1& (0+255),w,b
 17149  0021F8  11C4               	iorwf	(BME280_compensatePressure@pressV1+1)& (0+255),w,b
 17150  0021FA  11C5               	iorwf	(BME280_compensatePressure@pressV1+2)& (0+255),w,b
 17151  0021FC  11C6               	iorwf	(BME280_compensatePressure@pressV1+3)& (0+255),w,b
 17152  0021FE  A4D8               	btfss	status,2,c
 17153  002200  D009               	goto	l3086
 17154                           
 17155                           ; BSR set to: 0
 17156                           ;bme280.c: 353: {
 17157                           ;bme280.c: 355: return 0;
 17158  002202  0E00               	movlw	0
 17159  002204  6FA6               	movwf	?_BME280_compensatePressure& (0+255),b
 17160  002206  0E00               	movlw	0
 17161  002208  6FA7               	movwf	(?_BME280_compensatePressure+1)& (0+255),b
 17162  00220A  0E00               	movlw	0
 17163  00220C  6FA8               	movwf	(?_BME280_compensatePressure+2)& (0+255),b
 17164  00220E  0E00               	movlw	0
 17165  002210  6FA9               	movwf	(?_BME280_compensatePressure+3)& (0+255),b
 17166                           
 17167                           ; BSR set to: 0
 17168  002212  0012               	return	
 17169  002214                     l3086:
 17170                           
 17171                           ; BSR set to: 0
 17172                           ;bme280.c: 356: }
 17173                           ;bme280.c: 358: p = (((uint32_t) (((long) 1048576) - adc_P)-(pressV2 >> 12)))*3125;
 17174                           
 17175                           ; BSR set to: 0
 17176  002214  0E0C               	movlw	12
 17177  002216  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 17178  002218  C0BB  F0AB         	movff	BME280_compensatePressure@pressV2,??_BME280_compensatePressure+1
 17179  00221C  C0BC  F0AC         	movff	BME280_compensatePressure@pressV2+1,??_BME280_compensatePressure+2
 17180  002220  C0BD  F0AD         	movff	BME280_compensatePressure@pressV2+2,??_BME280_compensatePressure+3
 17181  002224  C0BE  F0AE         	movff	BME280_compensatePressure@pressV2+3,??_BME280_compensatePressure+4
 17182  002228                     u24895:
 17183  002228  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17184  00222A  D001               	goto	u24896
 17185  00222C  D007               	goto	u24897
 17186  00222E                     u24896:
 17187  00222E  35AE               	rlcf	(??_BME280_compensatePressure+4)& (0+255),w,b
 17188  002230  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 17189  002232  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 17190  002234  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 17191  002236  33AB               	rrcf	(??_BME280_compensatePressure+1)& (0+255),f,b
 17192  002238  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17193  00223A  D7F6               	goto	u24895
 17194  00223C                     u24897:
 17195  00223C  0102               	movlb	2	; () banked
 17196  00223E  5100               	movf	_adc_P& (0+255),w,b
 17197  002240  0100               	movlb	0	; () banked
 17198  002242  25AB               	addwf	(??_BME280_compensatePressure+1)& (0+255),w,b
 17199  002244  6FAF               	movwf	(??_BME280_compensatePressure+5)& (0+255),b
 17200  002246  0102               	movlb	2	; () banked
 17201  002248  5101               	movf	(_adc_P+1)& (0+255),w,b
 17202  00224A  0100               	movlb	0	; () banked
 17203  00224C  21AC               	addwfc	(??_BME280_compensatePressure+2)& (0+255),w,b
 17204  00224E  6FB0               	movwf	(??_BME280_compensatePressure+6)& (0+255),b
 17205  002250  0102               	movlb	2	; () banked
 17206  002252  5102               	movf	(_adc_P+2)& (0+255),w,b
 17207  002254  0100               	movlb	0	; () banked
 17208  002256  21AD               	addwfc	(??_BME280_compensatePressure+3)& (0+255),w,b
 17209  002258  6FB1               	movwf	(??_BME280_compensatePressure+7)& (0+255),b
 17210  00225A  0102               	movlb	2	; () banked
 17211  00225C  5103               	movf	(_adc_P+3)& (0+255),w,b
 17212  00225E  0100               	movlb	0	; () banked
 17213  002260  21AE               	addwfc	(??_BME280_compensatePressure+4)& (0+255),w,b
 17214  002262  6FB2               	movwf	(??_BME280_compensatePressure+8)& (0+255),b
 17215  002264  1FAF               	comf	(??_BME280_compensatePressure+5)& (0+255),f,b
 17216  002266  1FB0               	comf	(??_BME280_compensatePressure+6)& (0+255),f,b
 17217  002268  1FB1               	comf	(??_BME280_compensatePressure+7)& (0+255),f,b
 17218  00226A  1FB2               	comf	(??_BME280_compensatePressure+8)& (0+255),f,b
 17219  00226C  2BAF               	incf	(??_BME280_compensatePressure+5)& (0+255),f,b
 17220  00226E  0E00               	movlw	0
 17221  002270  23B0               	addwfc	(??_BME280_compensatePressure+6)& (0+255),f,b
 17222  002272  23B1               	addwfc	(??_BME280_compensatePressure+7)& (0+255),f,b
 17223  002274  23B2               	addwfc	(??_BME280_compensatePressure+8)& (0+255),f,b
 17224  002276  0E00               	movlw	0
 17225  002278  25AF               	addwf	(??_BME280_compensatePressure+5)& (0+255),w,b
 17226  00227A  6F9A               	movwf	___lmul@multiplier& (0+255),b
 17227  00227C  0E00               	movlw	0
 17228  00227E  21B0               	addwfc	(??_BME280_compensatePressure+6)& (0+255),w,b
 17229  002280  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 17230  002282  0E10               	movlw	16
 17231  002284  21B1               	addwfc	(??_BME280_compensatePressure+7)& (0+255),w,b
 17232  002286  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 17233  002288  0E00               	movlw	0
 17234  00228A  21B2               	addwfc	(??_BME280_compensatePressure+8)& (0+255),w,b
 17235  00228C  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 17236  00228E  0E35               	movlw	53
 17237  002290  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 17238  002292  0E0C               	movlw	12
 17239  002294  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 17240  002296  0E00               	movlw	0
 17241  002298  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17242  00229A  0E00               	movlw	0
 17243  00229C  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17244  00229E  EC1D  F057         	call	___lmul	;wreg free
 17245  0022A2  C09A  F0BF         	movff	?___lmul,BME280_compensatePressure@p
 17246  0022A6  C09B  F0C0         	movff	?___lmul+1,BME280_compensatePressure@p+1
 17247  0022AA  C09C  F0C1         	movff	?___lmul+2,BME280_compensatePressure@p+2
 17248  0022AE  C09D  F0C2         	movff	?___lmul+3,BME280_compensatePressure@p+3
 17249                           
 17250                           ;bme280.c: 359: if (p < 0x80000000)
 17251  0022B2  0E80               	movlw	128
 17252  0022B4  0100               	movlb	0	; () banked
 17253  0022B6  5DC2               	subwf	(BME280_compensatePressure@p+3)& (0+255),w,b
 17254  0022B8  B0D8               	btfsc	status,0,c
 17255  0022BA  D01C               	goto	l3088
 17256                           
 17257                           ; BSR set to: 0
 17258                           ;bme280.c: 360: {
 17259                           ;bme280.c: 361: p = (p << 1) / ((uint32_t) pressV1);
 17260  0022BC  90D8               	bcf	status,0,c
 17261  0022BE  35BF               	rlcf	BME280_compensatePressure@p& (0+255),w,b
 17262  0022C0  6F60               	movwf	___lldiv@dividend& (0+255),b
 17263  0022C2  35C0               	rlcf	(BME280_compensatePressure@p+1)& (0+255),w,b
 17264  0022C4  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 17265  0022C6  35C1               	rlcf	(BME280_compensatePressure@p+2)& (0+255),w,b
 17266  0022C8  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 17267  0022CA  35C2               	rlcf	(BME280_compensatePressure@p+3)& (0+255),w,b
 17268  0022CC  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 17269  0022CE  C0C3  F064         	movff	BME280_compensatePressure@pressV1,___lldiv@divisor
 17270  0022D2  C0C4  F065         	movff	BME280_compensatePressure@pressV1+1,___lldiv@divisor+1
 17271  0022D6  C0C5  F066         	movff	BME280_compensatePressure@pressV1+2,___lldiv@divisor+2
 17272  0022DA  C0C6  F067         	movff	BME280_compensatePressure@pressV1+3,___lldiv@divisor+3
 17273  0022DE  ECB0  F050         	call	___lldiv	;wreg free
 17274  0022E2  C060  F0BF         	movff	?___lldiv,BME280_compensatePressure@p
 17275  0022E6  C061  F0C0         	movff	?___lldiv+1,BME280_compensatePressure@p+1
 17276  0022EA  C062  F0C1         	movff	?___lldiv+2,BME280_compensatePressure@p+2
 17277  0022EE  C063  F0C2         	movff	?___lldiv+3,BME280_compensatePressure@p+3
 17278                           
 17279                           ;bme280.c: 362: }
 17280  0022F2  D01C               	goto	l3089
 17281  0022F4                     l3088:
 17282                           
 17283                           ;bme280.c: 363: else
 17284                           ;bme280.c: 364: {
 17285                           ;bme280.c: 365: p = (p / (uint32_t) pressV1) * 2;
 17286  0022F4  C0BF  F060         	movff	BME280_compensatePressure@p,___lldiv@dividend
 17287  0022F8  C0C0  F061         	movff	BME280_compensatePressure@p+1,___lldiv@dividend+1
 17288  0022FC  C0C1  F062         	movff	BME280_compensatePressure@p+2,___lldiv@dividend+2
 17289  002300  C0C2  F063         	movff	BME280_compensatePressure@p+3,___lldiv@dividend+3
 17290  002304  C0C3  F064         	movff	BME280_compensatePressure@pressV1,___lldiv@divisor
 17291  002308  C0C4  F065         	movff	BME280_compensatePressure@pressV1+1,___lldiv@divisor+1
 17292  00230C  C0C5  F066         	movff	BME280_compensatePressure@pressV1+2,___lldiv@divisor+2
 17293  002310  C0C6  F067         	movff	BME280_compensatePressure@pressV1+3,___lldiv@divisor+3
 17294  002314  ECB0  F050         	call	___lldiv	;wreg free
 17295  002318  90D8               	bcf	status,0,c
 17296  00231A  0100               	movlb	0	; () banked
 17297  00231C  3560               	rlcf	?___lldiv& (0+255),w,b
 17298  00231E  6FBF               	movwf	BME280_compensatePressure@p& (0+255),b
 17299  002320  3561               	rlcf	(?___lldiv+1)& (0+255),w,b
 17300  002322  6FC0               	movwf	(BME280_compensatePressure@p+1)& (0+255),b
 17301  002324  3562               	rlcf	(?___lldiv+2)& (0+255),w,b
 17302  002326  6FC1               	movwf	(BME280_compensatePressure@p+2)& (0+255),b
 17303  002328  3563               	rlcf	(?___lldiv+3)& (0+255),w,b
 17304  00232A  6FC2               	movwf	(BME280_compensatePressure@p+3)& (0+255),b
 17305  00232C                     l3089:
 17306                           
 17307                           ;bme280.c: 366: }
 17308                           ;bme280.c: 368: pressV1 = (((long) calibParam.dig_P9) * ((long) (((p >> 3) * (p >> 3)) >
      +                          > 13))) >> 12;
 17309  00232C  C0BF  F0AA         	movff	BME280_compensatePressure@p,??_BME280_compensatePressure
 17310  002330  C0C0  F0AB         	movff	BME280_compensatePressure@p+1,??_BME280_compensatePressure+1
 17311  002334  C0C1  F0AC         	movff	BME280_compensatePressure@p+2,??_BME280_compensatePressure+2
 17312  002338  C0C2  F0AD         	movff	BME280_compensatePressure@p+3,??_BME280_compensatePressure+3
 17313  00233C  0E04               	movlw	4
 17314  00233E  D006               	goto	u24910
 17315  002340                     u24915:
 17316  002340  0100               	movlb	0	; () banked
 17317  002342  90D8               	bcf	status,0,c
 17318  002344  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 17319  002346  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 17320  002348  33AB               	rrcf	(??_BME280_compensatePressure+1)& (0+255),f,b
 17321  00234A  33AA               	rrcf	??_BME280_compensatePressure& (0+255),f,b
 17322  00234C                     u24910:
 17323  00234C  2EE8               	decfsz	wreg,f,c
 17324  00234E  D7F8               	goto	u24915
 17325  002350  C0AA  F09A         	movff	??_BME280_compensatePressure,___lmul@multiplier
 17326  002354  C0AB  F09B         	movff	??_BME280_compensatePressure+1,___lmul@multiplier+1
 17327  002358  C0AC  F09C         	movff	??_BME280_compensatePressure+2,___lmul@multiplier+2
 17328  00235C  C0AD  F09D         	movff	??_BME280_compensatePressure+3,___lmul@multiplier+3
 17329  002360  C0BF  F0AE         	movff	BME280_compensatePressure@p,??_BME280_compensatePressure+4
 17330  002364  C0C0  F0AF         	movff	BME280_compensatePressure@p+1,??_BME280_compensatePressure+5
 17331  002368  C0C1  F0B0         	movff	BME280_compensatePressure@p+2,??_BME280_compensatePressure+6
 17332  00236C  C0C2  F0B1         	movff	BME280_compensatePressure@p+3,??_BME280_compensatePressure+7
 17333  002370  0E04               	movlw	4
 17334  002372  D005               	goto	u24920
 17335  002374                     u24925:
 17336  002374  90D8               	bcf	status,0,c
 17337  002376  33B1               	rrcf	(??_BME280_compensatePressure+7)& (0+255),f,b
 17338  002378  33B0               	rrcf	(??_BME280_compensatePressure+6)& (0+255),f,b
 17339  00237A  33AF               	rrcf	(??_BME280_compensatePressure+5)& (0+255),f,b
 17340  00237C  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 17341  00237E                     u24920:
 17342  00237E  2EE8               	decfsz	wreg,f,c
 17343  002380  D7F9               	goto	u24925
 17344  002382  C0AE  F09E         	movff	??_BME280_compensatePressure+4,___lmul@multiplicand
 17345  002386  C0AF  F09F         	movff	??_BME280_compensatePressure+5,___lmul@multiplicand+1
 17346  00238A  C0B0  F0A0         	movff	??_BME280_compensatePressure+6,___lmul@multiplicand+2
 17347  00238E  C0B1  F0A1         	movff	??_BME280_compensatePressure+7,___lmul@multiplicand+3
 17348  002392  EC1D  F057         	call	___lmul	;wreg free
 17349  002396  0E0E               	movlw	14
 17350  002398  D006               	goto	u24930
 17351  00239A                     u24935:
 17352  00239A  0100               	movlb	0	; () banked
 17353  00239C  90D8               	bcf	status,0,c
 17354  00239E  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 17355  0023A0  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 17356  0023A2  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 17357  0023A4  339A               	rrcf	?___lmul& (0+255),f,b
 17358  0023A6                     u24930:
 17359  0023A6  2EE8               	decfsz	wreg,f,c
 17360  0023A8  D7F8               	goto	u24935
 17361  0023AA  C09A  F0B7         	movff	?___lmul,_BME280_compensatePressure$7048
 17362  0023AE  C09B  F0B8         	movff	?___lmul+1,_BME280_compensatePressure$7048+1
 17363  0023B2  C09C  F0B9         	movff	?___lmul+2,_BME280_compensatePressure$7048+2
 17364  0023B6  C09D  F0BA         	movff	?___lmul+3,_BME280_compensatePressure$7048+3
 17365                           
 17366                           ; BSR set to: 0
 17367                           ;bme280.c: 366: }
 17368                           ;bme280.c: 368: pressV1 = (((long) calibParam.dig_P9) * ((long) (((p >> 3) * (p >> 3)) >
      +                          > 13))) >> 12;
 17369  0023BA  0E0C               	movlw	12
 17370  0023BC  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 17371  0023BE  EE21  F081         	lfsr	2,_calibParam+22
 17372  0023C2  CFDE F09A          	movff	postinc2,___lmul@multiplier
 17373  0023C6  CFDD F09B          	movff	postdec2,___lmul@multiplier+1
 17374  0023CA  0E00               	movlw	0
 17375  0023CC  BF9B               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17376  0023CE  0EFF               	movlw	-1
 17377  0023D0  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 17378  0023D2  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 17379  0023D4  C0B7  F09E         	movff	_BME280_compensatePressure$7048,___lmul@multiplicand
 17380  0023D8  C0B8  F09F         	movff	_BME280_compensatePressure$7048+1,___lmul@multiplicand+1
 17381  0023DC  C0B9  F0A0         	movff	_BME280_compensatePressure$7048+2,___lmul@multiplicand+2
 17382  0023E0  C0BA  F0A1         	movff	_BME280_compensatePressure$7048+3,___lmul@multiplicand+3
 17383  0023E4  EC1D  F057         	call	___lmul	;wreg free
 17384  0023E8                     u24945:
 17385  0023E8  0100               	movlb	0	; () banked
 17386  0023EA  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17387  0023EC  D001               	goto	u24946
 17388  0023EE  D007               	goto	u24947
 17389  0023F0                     u24946:
 17390  0023F0  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 17391  0023F2  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 17392  0023F4  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 17393  0023F6  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 17394  0023F8  339A               	rrcf	?___lmul& (0+255),f,b
 17395  0023FA  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17396  0023FC  D7F5               	goto	u24945
 17397  0023FE                     u24947:
 17398  0023FE  C09A  F0C3         	movff	?___lmul,BME280_compensatePressure@pressV1
 17399  002402  C09B  F0C4         	movff	?___lmul+1,BME280_compensatePressure@pressV1+1
 17400  002406  C09C  F0C5         	movff	?___lmul+2,BME280_compensatePressure@pressV1+2
 17401  00240A  C09D  F0C6         	movff	?___lmul+3,BME280_compensatePressure@pressV1+3
 17402                           
 17403                           ;bme280.c: 369: pressV2 = (((long) (p >> 2)) * ((long) calibParam.dig_P8)) >> 13;
 17404  00240E  0E0D               	movlw	13
 17405  002410  0100               	movlb	0	; () banked
 17406  002412  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 17407  002414  C0BF  F0AB         	movff	BME280_compensatePressure@p,??_BME280_compensatePressure+1
 17408  002418  C0C0  F0AC         	movff	BME280_compensatePressure@p+1,??_BME280_compensatePressure+2
 17409  00241C  C0C1  F0AD         	movff	BME280_compensatePressure@p+2,??_BME280_compensatePressure+3
 17410  002420  C0C2  F0AE         	movff	BME280_compensatePressure@p+3,??_BME280_compensatePressure+4
 17411  002424  0E03               	movlw	3
 17412  002426  D005               	goto	u24950
 17413  002428                     u24955:
 17414  002428  90D8               	bcf	status,0,c
 17415  00242A  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 17416  00242C  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 17417  00242E  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 17418  002430  33AB               	rrcf	(??_BME280_compensatePressure+1)& (0+255),f,b
 17419  002432                     u24950:
 17420  002432  2EE8               	decfsz	wreg,f,c
 17421  002434  D7F9               	goto	u24955
 17422  002436  C0AB  F09A         	movff	??_BME280_compensatePressure+1,___lmul@multiplier
 17423  00243A  C0AC  F09B         	movff	??_BME280_compensatePressure+2,___lmul@multiplier+1
 17424  00243E  C0AD  F09C         	movff	??_BME280_compensatePressure+3,___lmul@multiplier+2
 17425  002442  C0AE  F09D         	movff	??_BME280_compensatePressure+4,___lmul@multiplier+3
 17426  002446  EE21  F07F         	lfsr	2,_calibParam+20
 17427  00244A  CFDE F09E          	movff	postinc2,___lmul@multiplicand
 17428  00244E  CFDD F09F          	movff	postdec2,___lmul@multiplicand+1
 17429  002452  0E00               	movlw	0
 17430  002454  BF9F               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 17431  002456  0EFF               	movlw	-1
 17432  002458  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17433  00245A  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17434  00245C  EC1D  F057         	call	___lmul	;wreg free
 17435  002460                     u24965:
 17436  002460  0100               	movlb	0	; () banked
 17437  002462  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17438  002464  D001               	goto	u24966
 17439  002466  D007               	goto	u24967
 17440  002468                     u24966:
 17441  002468  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 17442  00246A  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 17443  00246C  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 17444  00246E  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 17445  002470  339A               	rrcf	?___lmul& (0+255),f,b
 17446  002472  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17447  002474  D7F5               	goto	u24965
 17448  002476                     u24967:
 17449  002476  C09A  F0BB         	movff	?___lmul,BME280_compensatePressure@pressV2
 17450  00247A  C09B  F0BC         	movff	?___lmul+1,BME280_compensatePressure@pressV2+1
 17451  00247E  C09C  F0BD         	movff	?___lmul+2,BME280_compensatePressure@pressV2+2
 17452  002482  C09D  F0BE         	movff	?___lmul+3,BME280_compensatePressure@pressV2+3
 17453                           
 17454                           ;bme280.c: 370: p = (uint32_t) ((long) p + ((pressV1 + pressV2 + calibParam.dig_P7) >> 4
      +                          ));
 17455  002486  0E04               	movlw	4
 17456  002488  0100               	movlb	0	; () banked
 17457  00248A  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 17458  00248C  C17D  F0AB         	movff	_calibParam+18,??_BME280_compensatePressure+1
 17459  002490  C17E  F0AC         	movff	_calibParam+19,??_BME280_compensatePressure+2
 17460  002494  0E00               	movlw	0
 17461  002496  BFAC               	btfsc	(??_BME280_compensatePressure+2)& (0+255),7,b
 17462  002498  0EFF               	movlw	255
 17463  00249A  6FAD               	movwf	(??_BME280_compensatePressure+3)& (0+255),b
 17464  00249C  6FAE               	movwf	(??_BME280_compensatePressure+4)& (0+255),b
 17465  00249E  51C3               	movf	BME280_compensatePressure@pressV1& (0+255),w,b
 17466  0024A0  25AB               	addwf	(??_BME280_compensatePressure+1)& (0+255),w,b
 17467  0024A2  6FAF               	movwf	(??_BME280_compensatePressure+5)& (0+255),b
 17468  0024A4  51C4               	movf	(BME280_compensatePressure@pressV1+1)& (0+255),w,b
 17469  0024A6  21AC               	addwfc	(??_BME280_compensatePressure+2)& (0+255),w,b
 17470  0024A8  6FB0               	movwf	(??_BME280_compensatePressure+6)& (0+255),b
 17471  0024AA  51C5               	movf	(BME280_compensatePressure@pressV1+2)& (0+255),w,b
 17472  0024AC  21AD               	addwfc	(??_BME280_compensatePressure+3)& (0+255),w,b
 17473  0024AE  6FB1               	movwf	(??_BME280_compensatePressure+7)& (0+255),b
 17474  0024B0  51C6               	movf	(BME280_compensatePressure@pressV1+3)& (0+255),w,b
 17475  0024B2  21AE               	addwfc	(??_BME280_compensatePressure+4)& (0+255),w,b
 17476  0024B4  6FB2               	movwf	(??_BME280_compensatePressure+8)& (0+255),b
 17477  0024B6  51BB               	movf	BME280_compensatePressure@pressV2& (0+255),w,b
 17478  0024B8  25AF               	addwf	(??_BME280_compensatePressure+5)& (0+255),w,b
 17479  0024BA  6FB3               	movwf	(??_BME280_compensatePressure+9)& (0+255),b
 17480  0024BC  51BC               	movf	(BME280_compensatePressure@pressV2+1)& (0+255),w,b
 17481  0024BE  21B0               	addwfc	(??_BME280_compensatePressure+6)& (0+255),w,b
 17482  0024C0  6FB4               	movwf	(??_BME280_compensatePressure+10)& (0+255),b
 17483  0024C2  51BD               	movf	(BME280_compensatePressure@pressV2+2)& (0+255),w,b
 17484  0024C4  21B1               	addwfc	(??_BME280_compensatePressure+7)& (0+255),w,b
 17485  0024C6  6FB5               	movwf	(??_BME280_compensatePressure+11)& (0+255),b
 17486  0024C8  51BE               	movf	(BME280_compensatePressure@pressV2+3)& (0+255),w,b
 17487  0024CA  21B2               	addwfc	(??_BME280_compensatePressure+8)& (0+255),w,b
 17488  0024CC  6FB6               	movwf	(??_BME280_compensatePressure+12)& (0+255),b
 17489  0024CE                     u24975:
 17490  0024CE  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17491  0024D0  D001               	goto	u24976
 17492  0024D2  D007               	goto	u24977
 17493  0024D4                     u24976:
 17494  0024D4  35B6               	rlcf	(??_BME280_compensatePressure+12)& (0+255),w,b
 17495  0024D6  33B6               	rrcf	(??_BME280_compensatePressure+12)& (0+255),f,b
 17496  0024D8  33B5               	rrcf	(??_BME280_compensatePressure+11)& (0+255),f,b
 17497  0024DA  33B4               	rrcf	(??_BME280_compensatePressure+10)& (0+255),f,b
 17498  0024DC  33B3               	rrcf	(??_BME280_compensatePressure+9)& (0+255),f,b
 17499  0024DE  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17500  0024E0  D7F6               	goto	u24975
 17501  0024E2                     u24977:
 17502  0024E2  0100               	movlb	0	; () banked
 17503  0024E4  51BF               	movf	BME280_compensatePressure@p& (0+255),w,b
 17504  0024E6  25B3               	addwf	(??_BME280_compensatePressure+9)& (0+255),w,b
 17505  0024E8  6FBF               	movwf	BME280_compensatePressure@p& (0+255),b
 17506  0024EA  51C0               	movf	(BME280_compensatePressure@p+1)& (0+255),w,b
 17507  0024EC  21B4               	addwfc	(??_BME280_compensatePressure+10)& (0+255),w,b
 17508  0024EE  6FC0               	movwf	(BME280_compensatePressure@p+1)& (0+255),b
 17509  0024F0  51C1               	movf	(BME280_compensatePressure@p+2)& (0+255),w,b
 17510  0024F2  21B5               	addwfc	(??_BME280_compensatePressure+11)& (0+255),w,b
 17511  0024F4  6FC1               	movwf	(BME280_compensatePressure@p+2)& (0+255),b
 17512  0024F6  51C2               	movf	(BME280_compensatePressure@p+3)& (0+255),w,b
 17513  0024F8  21B6               	addwfc	(??_BME280_compensatePressure+12)& (0+255),w,b
 17514  0024FA  6FC2               	movwf	(BME280_compensatePressure@p+3)& (0+255),b
 17515                           
 17516                           ; BSR set to: 0
 17517                           ;bme280.c: 372: return p;
 17518  0024FC  C0BF  F0A6         	movff	BME280_compensatePressure@p,?_BME280_compensatePressure
 17519  002500  C0C0  F0A7         	movff	BME280_compensatePressure@p+1,?_BME280_compensatePressure+1
 17520  002504  C0C1  F0A8         	movff	BME280_compensatePressure@p+2,?_BME280_compensatePressure+2
 17521  002508  C0C2  F0A9         	movff	BME280_compensatePressure@p+3,?_BME280_compensatePressure+3
 17522  00250C  0012               	return	
 17523  00250E                     __end_of_BME280_compensatePressure:
 17524                           	opt stack 0
 17525                           tosu	equ	0xFFF
 17526                           tosh	equ	0xFFE
 17527                           tosl	equ	0xFFD
 17528                           pclath	equ	0xFFA
 17529                           tblptru	equ	0xFF8
 17530                           tblptrh	equ	0xFF7
 17531                           tblptrl	equ	0xFF6
 17532                           tablat	equ	0xFF5
 17533                           prodh	equ	0xFF4
 17534                           prodl	equ	0xFF3
 17535                           intcon	equ	0xFF2
 17536                           postinc0	equ	0xFEE
 17537                           wreg	equ	0xFE8
 17538                           indf2	equ	0xFDF
 17539                           postinc2	equ	0xFDE
 17540                           postdec2	equ	0xFDD
 17541                           fsr2h	equ	0xFDA
 17542                           fsr2l	equ	0xFD9
 17543                           status	equ	0xFD8
 17544                           
 17545 ;; *************** function _Weather_getHumidityRH *****************
 17546 ;; Defined at:
 17547 ;;		line 106 in file "mcc_generated_files/weather.c"
 17548 ;; Parameters:    Size  Location     Type
 17549 ;;		None
 17550 ;; Auto vars:     Size  Location     Type
 17551 ;;		None
 17552 ;; Return value:  Size  Location     Type
 17553 ;;                  3    0[BANK1 ] float 
 17554 ;; Registers used:
 17555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17556 ;; Tracked objects:
 17557 ;;		On entry : 0/0
 17558 ;;		On exit  : 0/0
 17559 ;;		Unchanged: 0/0
 17560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17561 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17564 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17565 ;;Total ram usage:        3 bytes
 17566 ;; Hardware stack levels used:    1
 17567 ;; Hardware stack levels required when called:   10
 17568 ;; This function calls:
 17569 ;;		_BME280_getHumidity
 17570 ;; This function is called by:
 17571 ;;		_main
 17572 ;;		_Weather_example
 17573 ;; This function uses a non-reentrant model
 17574 ;;
 17575                           
 17576                           	psect	text98
 17577  00C3C4                     __ptext98:
 17578                           	opt stack 0
 17579  00C3C4                     _Weather_getHumidityRH:
 17580                           	opt stack 20
 17581                           
 17582                           ;weather.c: 108: return BME280_getHumidity();
 17583                           
 17584                           ; BSR set to: 0
 17585                           ;incstack = 0
 17586  00C3C4  ECE8  F058         	call	_BME280_getHumidity	;wreg free
 17587  00C3C8  C0F3  F18C         	movff	?_BME280_getHumidity,?_Weather_getHumidityRH
 17588  00C3CC  C0F4  F18D         	movff	?_BME280_getHumidity+1,?_Weather_getHumidityRH+1
 17589  00C3D0  C0F5  F18E         	movff	?_BME280_getHumidity+2,?_Weather_getHumidityRH+2
 17590  00C3D4  0012               	return	
 17591  00C3D6                     __end_of_Weather_getHumidityRH:
 17592                           	opt stack 0
 17593                           tosu	equ	0xFFF
 17594                           tosh	equ	0xFFE
 17595                           tosl	equ	0xFFD
 17596                           pclath	equ	0xFFA
 17597                           tblptru	equ	0xFF8
 17598                           tblptrh	equ	0xFF7
 17599                           tblptrl	equ	0xFF6
 17600                           tablat	equ	0xFF5
 17601                           prodh	equ	0xFF4
 17602                           prodl	equ	0xFF3
 17603                           intcon	equ	0xFF2
 17604                           postinc0	equ	0xFEE
 17605                           wreg	equ	0xFE8
 17606                           indf2	equ	0xFDF
 17607                           postinc2	equ	0xFDE
 17608                           postdec2	equ	0xFDD
 17609                           fsr2h	equ	0xFDA
 17610                           fsr2l	equ	0xFD9
 17611                           status	equ	0xFD8
 17612                           
 17613 ;; *************** function _BME280_getHumidity *****************
 17614 ;; Defined at:
 17615 ;;		line 307 in file "mcc_generated_files/bme280.c"
 17616 ;; Parameters:    Size  Location     Type
 17617 ;;		None
 17618 ;; Auto vars:     Size  Location     Type
 17619 ;;  humidity        3  150[BANK0 ] float 
 17620 ;; Return value:  Size  Location     Type
 17621 ;;                  3  147[BANK0 ] float 
 17622 ;; Registers used:
 17623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17624 ;; Tracked objects:
 17625 ;;		On entry : 0/0
 17626 ;;		On exit  : 0/0
 17627 ;;		Unchanged: 0/0
 17628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17629 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17630 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17632 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17633 ;;Total ram usage:        6 bytes
 17634 ;; Hardware stack levels used:    1
 17635 ;; Hardware stack levels required when called:    9
 17636 ;; This function calls:
 17637 ;;		_BME280_compensateHumidity
 17638 ;;		___ftdiv
 17639 ;;		___lltoft
 17640 ;; This function is called by:
 17641 ;;		_Weather_getHumidityRH
 17642 ;; This function uses a non-reentrant model
 17643 ;;
 17644                           
 17645                           	psect	text99
 17646  00B1D0                     __ptext99:
 17647                           	opt stack 0
 17648  00B1D0                     _BME280_getHumidity:
 17649                           	opt stack 20
 17650                           
 17651                           ;bme280.c: 309: float humidity = (float) BME280_compensateHumidity() / 1024;
 17652                           
 17653                           ;incstack = 0
 17654  00B1D0  EC78  F019         	call	_BME280_compensateHumidity	;wreg free
 17655  00B1D4  C0A6  F0DB         	movff	?_BME280_compensateHumidity,___lltoft@c
 17656  00B1D8  C0A7  F0DC         	movff	?_BME280_compensateHumidity+1,___lltoft@c+1
 17657  00B1DC  C0A8  F0DD         	movff	?_BME280_compensateHumidity+2,___lltoft@c+2
 17658  00B1E0  C0A9  F0DE         	movff	?_BME280_compensateHumidity+3,___lltoft@c+3
 17659  00B1E4  ECDB  F055         	call	___lltoft	;wreg free
 17660  00B1E8  C0DB  F0E4         	movff	?___lltoft,___ftdiv@f1
 17661  00B1EC  C0DC  F0E5         	movff	?___lltoft+1,___ftdiv@f1+1
 17662  00B1F0  C0DD  F0E6         	movff	?___lltoft+2,___ftdiv@f1+2
 17663  00B1F4  0E00               	movlw	0
 17664  00B1F6  0100               	movlb	0	; () banked
 17665  00B1F8  6FE7               	movwf	___ftdiv@f2& (0+255),b
 17666  00B1FA  0E80               	movlw	128
 17667  00B1FC  6FE8               	movwf	(___ftdiv@f2+1)& (0+255),b
 17668  00B1FE  0E44               	movlw	68
 17669  00B200  6FE9               	movwf	(___ftdiv@f2+2)& (0+255),b
 17670  00B202  EC3B  F047         	call	___ftdiv	;wreg free
 17671  00B206  C0E4  F0F6         	movff	?___ftdiv,BME280_getHumidity@humidity
 17672  00B20A  C0E5  F0F7         	movff	?___ftdiv+1,BME280_getHumidity@humidity+1
 17673  00B20E  C0E6  F0F8         	movff	?___ftdiv+2,BME280_getHumidity@humidity+2
 17674                           
 17675                           ;bme280.c: 310: return humidity;
 17676  00B212  C0F6  F0F3         	movff	BME280_getHumidity@humidity,?_BME280_getHumidity
 17677  00B216  C0F7  F0F4         	movff	BME280_getHumidity@humidity+1,?_BME280_getHumidity+1
 17678  00B21A  C0F8  F0F5         	movff	BME280_getHumidity@humidity+2,?_BME280_getHumidity+2
 17679  00B21E  0012               	return	
 17680  00B220                     __end_of_BME280_getHumidity:
 17681                           	opt stack 0
 17682                           tosu	equ	0xFFF
 17683                           tosh	equ	0xFFE
 17684                           tosl	equ	0xFFD
 17685                           pclath	equ	0xFFA
 17686                           tblptru	equ	0xFF8
 17687                           tblptrh	equ	0xFF7
 17688                           tblptrl	equ	0xFF6
 17689                           tablat	equ	0xFF5
 17690                           prodh	equ	0xFF4
 17691                           prodl	equ	0xFF3
 17692                           intcon	equ	0xFF2
 17693                           postinc0	equ	0xFEE
 17694                           wreg	equ	0xFE8
 17695                           indf2	equ	0xFDF
 17696                           postinc2	equ	0xFDE
 17697                           postdec2	equ	0xFDD
 17698                           fsr2h	equ	0xFDA
 17699                           fsr2l	equ	0xFD9
 17700                           status	equ	0xFD8
 17701                           
 17702 ;; *************** function ___lltoft *****************
 17703 ;; Defined at:
 17704 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 17705 ;; Parameters:    Size  Location     Type
 17706 ;;  c               4  123[BANK0 ] unsigned long 
 17707 ;; Auto vars:     Size  Location     Type
 17708 ;;  exp             1  131[BANK0 ] unsigned char 
 17709 ;; Return value:  Size  Location     Type
 17710 ;;                  3  123[BANK0 ] float 
 17711 ;; Registers used:
 17712 ;;		wreg, status,2, status,0, cstack
 17713 ;; Tracked objects:
 17714 ;;		On entry : 0/0
 17715 ;;		On exit  : 0/0
 17716 ;;		Unchanged: 0/0
 17717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17718 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17719 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17720 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17721 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17722 ;;Total ram usage:        9 bytes
 17723 ;; Hardware stack levels used:    1
 17724 ;; Hardware stack levels required when called:    8
 17725 ;; This function calls:
 17726 ;;		___ftpack
 17727 ;; This function is called by:
 17728 ;;		_BME280_getPressure
 17729 ;;		_BME280_getHumidity
 17730 ;;		_printf
 17731 ;; This function uses a non-reentrant model
 17732 ;;
 17733                           
 17734                           	psect	text100
 17735  00ABB6                     __ptext100:
 17736                           	opt stack 0
 17737  00ABB6                     ___lltoft:
 17738                           	opt stack 21
 17739                           
 17740                           ;incstack = 0
 17741  00ABB6  0E8E               	movlw	142
 17742  00ABB8  0100               	movlb	0	; () banked
 17743  00ABBA  6FE3               	movwf	___lltoft@exp& (0+255),b
 17744  00ABBC  D006               	goto	l3971
 17745  00ABBE                     
 17746                           ; BSR set to: 0
 17747                           
 17748                           ; BSR set to: 0
 17749  00ABBE  90D8               	bcf	status,0,c
 17750  00ABC0  33DE               	rrcf	(___lltoft@c+3)& (0+255),f,b
 17751  00ABC2  33DD               	rrcf	(___lltoft@c+2)& (0+255),f,b
 17752  00ABC4  33DC               	rrcf	(___lltoft@c+1)& (0+255),f,b
 17753  00ABC6  33DB               	rrcf	___lltoft@c& (0+255),f,b
 17754  00ABC8  2BE3               	incf	___lltoft@exp& (0+255),f,b
 17755  00ABCA                     l3971:
 17756                           
 17757                           ; BSR set to: 0
 17758                           
 17759                           ; BSR set to: 0
 17760  00ABCA  0E00               	movlw	0
 17761  00ABCC  15DB               	andwf	___lltoft@c& (0+255),w,b
 17762  00ABCE  6FDF               	movwf	??___lltoft& (0+255),b
 17763  00ABD0  0E00               	movlw	0
 17764  00ABD2  15DC               	andwf	(___lltoft@c+1)& (0+255),w,b
 17765  00ABD4  6FE0               	movwf	(??___lltoft+1)& (0+255),b
 17766  00ABD6  0E00               	movlw	0
 17767  00ABD8  15DD               	andwf	(___lltoft@c+2)& (0+255),w,b
 17768  00ABDA  6FE1               	movwf	(??___lltoft+2)& (0+255),b
 17769  00ABDC  0EFF               	movlw	255
 17770  00ABDE  15DE               	andwf	(___lltoft@c+3)& (0+255),w,b
 17771  00ABE0  6FE2               	movwf	(??___lltoft+3)& (0+255),b
 17772  00ABE2  51DF               	movf	??___lltoft& (0+255),w,b
 17773  00ABE4  11E0               	iorwf	(??___lltoft+1)& (0+255),w,b
 17774  00ABE6  11E1               	iorwf	(??___lltoft+2)& (0+255),w,b
 17775  00ABE8  11E2               	iorwf	(??___lltoft+3)& (0+255),w,b
 17776  00ABEA  A4D8               	btfss	status,2,c
 17777  00ABEC  D7E8               	goto	l3972
 17778                           
 17779                           ; BSR set to: 0
 17780                           
 17781                           ; BSR set to: 0
 17782  00ABEE  C0DB  F060         	movff	___lltoft@c,___ftpack@arg
 17783  00ABF2  C0DC  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 17784  00ABF6  C0DD  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 17785  00ABFA  C0E3  F063         	movff	___lltoft@exp,___ftpack@exp
 17786  00ABFE  0E00               	movlw	0
 17787  00AC00  6F64               	movwf	___ftpack@sign& (0+255),b
 17788  00AC02  EC62  F04B         	call	___ftpack	;wreg free
 17789  00AC06  C060  F0DB         	movff	?___ftpack,?___lltoft
 17790  00AC0A  C061  F0DC         	movff	?___ftpack+1,?___lltoft+1
 17791  00AC0E  C062  F0DD         	movff	?___ftpack+2,?___lltoft+2
 17792  00AC12  0012               	return	
 17793  00AC14                     __end_of___lltoft:
 17794                           	opt stack 0
 17795                           tosu	equ	0xFFF
 17796                           tosh	equ	0xFFE
 17797                           tosl	equ	0xFFD
 17798                           pclath	equ	0xFFA
 17799                           tblptru	equ	0xFF8
 17800                           tblptrh	equ	0xFF7
 17801                           tblptrl	equ	0xFF6
 17802                           tablat	equ	0xFF5
 17803                           prodh	equ	0xFF4
 17804                           prodl	equ	0xFF3
 17805                           intcon	equ	0xFF2
 17806                           postinc0	equ	0xFEE
 17807                           wreg	equ	0xFE8
 17808                           indf2	equ	0xFDF
 17809                           postinc2	equ	0xFDE
 17810                           postdec2	equ	0xFDD
 17811                           fsr2h	equ	0xFDA
 17812                           fsr2l	equ	0xFD9
 17813                           status	equ	0xFD8
 17814                           
 17815 ;; *************** function ___ftdiv *****************
 17816 ;; Defined at:
 17817 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 17818 ;; Parameters:    Size  Location     Type
 17819 ;;  f1              3  132[BANK0 ] float 
 17820 ;;  f2              3  135[BANK0 ] float 
 17821 ;; Auto vars:     Size  Location     Type
 17822 ;;  f3              3  142[BANK0 ] float 
 17823 ;;  sign            1  146[BANK0 ] unsigned char 
 17824 ;;  exp             1  145[BANK0 ] unsigned char 
 17825 ;;  cntr            1  141[BANK0 ] unsigned char 
 17826 ;; Return value:  Size  Location     Type
 17827 ;;                  3  132[BANK0 ] float 
 17828 ;; Registers used:
 17829 ;;		wreg, status,2, status,0, cstack
 17830 ;; Tracked objects:
 17831 ;;		On entry : 0/0
 17832 ;;		On exit  : 0/0
 17833 ;;		Unchanged: 0/0
 17834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17835 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17836 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17837 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17838 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17839 ;;Total ram usage:       15 bytes
 17840 ;; Hardware stack levels used:    1
 17841 ;; Hardware stack levels required when called:    8
 17842 ;; This function calls:
 17843 ;;		___ftpack
 17844 ;; This function is called by:
 17845 ;;		_BME280_getTemperature
 17846 ;;		_BME280_getPressure
 17847 ;;		_BME280_getHumidity
 17848 ;; This function uses a non-reentrant model
 17849 ;;
 17850                           
 17851                           	psect	text101
 17852  008E76                     __ptext101:
 17853                           	opt stack 0
 17854  008E76                     ___ftdiv:
 17855                           	opt stack 20
 17856                           
 17857                           ;incstack = 0
 17858  008E76  C0E6  F0EA         	movff	___ftdiv@f1+2,??___ftdiv
 17859  008E7A  0100               	movlb	0	; () banked
 17860  008E7C  6BEB               	clrf	(??___ftdiv+1)& (0+255),b
 17861  008E7E  6BEC               	clrf	(??___ftdiv+2)& (0+255),b
 17862  008E80  35E5               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 17863  008E82  37EA               	rlcf	??___ftdiv& (0+255),f,b
 17864  008E84  E301               	bnc	u16321
 17865  008E86  81EB               	bsf	(??___ftdiv+1)& (0+255),0,b
 17866  008E88                     u16321:
 17867  008E88  51EA               	movf	??___ftdiv& (0+255),w,b
 17868  008E8A  6FF1               	movwf	___ftdiv@exp& (0+255),b
 17869  008E8C  51F1               	movf	___ftdiv@exp& (0+255),w,b
 17870  008E8E  A4D8               	btfss	status,2,c
 17871  008E90  D007               	goto	l3856
 17872                           
 17873                           ; BSR set to: 0
 17874  008E92  0E00               	movlw	0
 17875  008E94  6FE4               	movwf	?___ftdiv& (0+255),b
 17876  008E96  0E00               	movlw	0
 17877  008E98  6FE5               	movwf	(?___ftdiv+1)& (0+255),b
 17878  008E9A  0E00               	movlw	0
 17879  008E9C  6FE6               	movwf	(?___ftdiv+2)& (0+255),b
 17880                           
 17881                           ; BSR set to: 0
 17882  008E9E  0012               	return	
 17883  008EA0                     l3856:
 17884                           
 17885                           ; BSR set to: 0
 17886                           
 17887                           ; BSR set to: 0
 17888  008EA0  C0E9  F0EA         	movff	___ftdiv@f2+2,??___ftdiv
 17889  008EA4  6BEB               	clrf	(??___ftdiv+1)& (0+255),b
 17890  008EA6  6BEC               	clrf	(??___ftdiv+2)& (0+255),b
 17891  008EA8  35E8               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 17892  008EAA  37EA               	rlcf	??___ftdiv& (0+255),f,b
 17893  008EAC  E301               	bnc	u16341
 17894  008EAE  81EB               	bsf	(??___ftdiv+1)& (0+255),0,b
 17895  008EB0                     u16341:
 17896  008EB0  51EA               	movf	??___ftdiv& (0+255),w,b
 17897  008EB2  6FF2               	movwf	___ftdiv@sign& (0+255),b
 17898  008EB4  51F2               	movf	___ftdiv@sign& (0+255),w,b
 17899  008EB6  A4D8               	btfss	status,2,c
 17900  008EB8  D007               	goto	l3858
 17901                           
 17902                           ; BSR set to: 0
 17903  008EBA  0E00               	movlw	0
 17904  008EBC  6FE4               	movwf	?___ftdiv& (0+255),b
 17905  008EBE  0E00               	movlw	0
 17906  008EC0  6FE5               	movwf	(?___ftdiv+1)& (0+255),b
 17907  008EC2  0E00               	movlw	0
 17908  008EC4  6FE6               	movwf	(?___ftdiv+2)& (0+255),b
 17909                           
 17910                           ; BSR set to: 0
 17911  008EC6  0012               	return	
 17912  008EC8                     l3858:
 17913                           
 17914                           ; BSR set to: 0
 17915                           
 17916                           ; BSR set to: 0
 17917  008EC8  0E00               	movlw	0
 17918  008ECA  6FEE               	movwf	___ftdiv@f3& (0+255),b
 17919  008ECC  0E00               	movlw	0
 17920  008ECE  6FEF               	movwf	(___ftdiv@f3+1)& (0+255),b
 17921  008ED0  0E00               	movlw	0
 17922  008ED2  6FF0               	movwf	(___ftdiv@f3+2)& (0+255),b
 17923                           
 17924                           ; BSR set to: 0
 17925  008ED4  51F2               	movf	___ftdiv@sign& (0+255),w,b
 17926  008ED6  0F89               	addlw	137
 17927  008ED8  5FF1               	subwf	___ftdiv@exp& (0+255),f,b
 17928                           
 17929                           ; BSR set to: 0
 17930  008EDA  C0E6  F0F2         	movff	___ftdiv@f1+2,___ftdiv@sign
 17931                           
 17932                           ; BSR set to: 0
 17933  008EDE  51E9               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17934  008EE0  1BF2               	xorwf	___ftdiv@sign& (0+255),f,b
 17935                           
 17936                           ; BSR set to: 0
 17937  008EE2  0E80               	movlw	128
 17938  008EE4  17F2               	andwf	___ftdiv@sign& (0+255),f,b
 17939                           
 17940                           ; BSR set to: 0
 17941  008EE6  8FE5               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 17942                           
 17943                           ; BSR set to: 0
 17944  008EE8  0EFF               	movlw	255
 17945  008EEA  17E4               	andwf	___ftdiv@f1& (0+255),f,b
 17946  008EEC  0EFF               	movlw	255
 17947  008EEE  17E5               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 17948  008EF0  0E00               	movlw	0
 17949  008EF2  17E6               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 17950                           
 17951                           ; BSR set to: 0
 17952  008EF4  8FE8               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 17953                           
 17954                           ; BSR set to: 0
 17955  008EF6  0EFF               	movlw	255
 17956  008EF8  17E7               	andwf	___ftdiv@f2& (0+255),f,b
 17957  008EFA  0EFF               	movlw	255
 17958  008EFC  17E8               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 17959  008EFE  0E00               	movlw	0
 17960  008F00  17E9               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 17961                           
 17962                           ; BSR set to: 0
 17963  008F02  0E18               	movlw	24
 17964  008F04  6FED               	movwf	___ftdiv@cntr& (0+255),b
 17965  008F06                     
 17966                           ; BSR set to: 0
 17967                           
 17968                           ; BSR set to: 0
 17969  008F06  90D8               	bcf	status,0,c
 17970  008F08  37EE               	rlcf	___ftdiv@f3& (0+255),f,b
 17971  008F0A  37EF               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 17972  008F0C  37F0               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 17973                           
 17974                           ; BSR set to: 0
 17975  008F0E  51E7               	movf	___ftdiv@f2& (0+255),w,b
 17976  008F10  5DE4               	subwf	___ftdiv@f1& (0+255),w,b
 17977  008F12  51E8               	movf	(___ftdiv@f2+1)& (0+255),w,b
 17978  008F14  59E5               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 17979  008F16  51E9               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17980  008F18  59E6               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 17981  008F1A  A0D8               	btfss	status,0,c
 17982  008F1C  D007               	goto	l3860
 17983                           
 17984                           ; BSR set to: 0
 17985  008F1E  51E7               	movf	___ftdiv@f2& (0+255),w,b
 17986  008F20  5FE4               	subwf	___ftdiv@f1& (0+255),f,b
 17987  008F22  51E8               	movf	(___ftdiv@f2+1)& (0+255),w,b
 17988  008F24  5BE5               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 17989  008F26  51E9               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17990  008F28  5BE6               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 17991                           
 17992                           ; BSR set to: 0
 17993  008F2A  81EE               	bsf	___ftdiv@f3& (0+255),0,b
 17994  008F2C                     l3860:
 17995                           
 17996                           ; BSR set to: 0
 17997  008F2C  90D8               	bcf	status,0,c
 17998  008F2E  37E4               	rlcf	___ftdiv@f1& (0+255),f,b
 17999  008F30  37E5               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 18000  008F32  37E6               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 18001                           
 18002                           ; BSR set to: 0
 18003  008F34  2FED               	decfsz	___ftdiv@cntr& (0+255),f,b
 18004  008F36  D7E7               	goto	l3859
 18005                           
 18006                           ; BSR set to: 0
 18007                           
 18008                           ; BSR set to: 0
 18009  008F38  C0EE  F060         	movff	___ftdiv@f3,___ftpack@arg
 18010  008F3C  C0EF  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 18011  008F40  C0F0  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 18012  008F44  C0F1  F063         	movff	___ftdiv@exp,___ftpack@exp
 18013  008F48  C0F2  F064         	movff	___ftdiv@sign,___ftpack@sign
 18014  008F4C  EC62  F04B         	call	___ftpack	;wreg free
 18015  008F50  C060  F0E4         	movff	?___ftpack,?___ftdiv
 18016  008F54  C061  F0E5         	movff	?___ftpack+1,?___ftdiv+1
 18017  008F58  C062  F0E6         	movff	?___ftpack+2,?___ftdiv+2
 18018  008F5C  0012               	return	
 18019  008F5E                     __end_of___ftdiv:
 18020                           	opt stack 0
 18021                           tosu	equ	0xFFF
 18022                           tosh	equ	0xFFE
 18023                           tosl	equ	0xFFD
 18024                           pclath	equ	0xFFA
 18025                           tblptru	equ	0xFF8
 18026                           tblptrh	equ	0xFF7
 18027                           tblptrl	equ	0xFF6
 18028                           tablat	equ	0xFF5
 18029                           prodh	equ	0xFF4
 18030                           prodl	equ	0xFF3
 18031                           intcon	equ	0xFF2
 18032                           postinc0	equ	0xFEE
 18033                           wreg	equ	0xFE8
 18034                           indf2	equ	0xFDF
 18035                           postinc2	equ	0xFDE
 18036                           postdec2	equ	0xFDD
 18037                           fsr2h	equ	0xFDA
 18038                           fsr2l	equ	0xFD9
 18039                           status	equ	0xFD8
 18040                           
 18041 ;; *************** function ___ftpack *****************
 18042 ;; Defined at:
 18043 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 18044 ;; Parameters:    Size  Location     Type
 18045 ;;  arg             3    0[BANK0 ] unsigned um
 18046 ;;  exp             1    3[BANK0 ] unsigned char 
 18047 ;;  sign            1    4[BANK0 ] unsigned char 
 18048 ;; Auto vars:     Size  Location     Type
 18049 ;;		None
 18050 ;; Return value:  Size  Location     Type
 18051 ;;                  3    0[BANK0 ] float 
 18052 ;; Registers used:
 18053 ;;		wreg, status,2, status,0
 18054 ;; Tracked objects:
 18055 ;;		On entry : 0/0
 18056 ;;		On exit  : 0/0
 18057 ;;		Unchanged: 0/0
 18058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18059 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18061 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18062 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18063 ;;Total ram usage:        8 bytes
 18064 ;; Hardware stack levels used:    1
 18065 ;; Hardware stack levels required when called:    7
 18066 ;; This function calls:
 18067 ;;		Nothing
 18068 ;; This function is called by:
 18069 ;;		___altoft
 18070 ;;		___ftadd
 18071 ;;		___ftdiv
 18072 ;;		___ftmul
 18073 ;;		___lltoft
 18074 ;;		___lwtoft
 18075 ;; This function uses a non-reentrant model
 18076 ;;
 18077                           
 18078                           	psect	text102
 18079  0096C4                     __ptext102:
 18080                           	opt stack 0
 18081  0096C4                     ___ftpack:
 18082                           	opt stack 20
 18083                           
 18084                           ;incstack = 0
 18085  0096C4  0100               	movlb	0	; () banked
 18086  0096C6  5163               	movf	___ftpack@exp& (0+255),w,b
 18087  0096C8  B4D8               	btfsc	status,2,c
 18088  0096CA  D005               	goto	u14700
 18089                           
 18090                           ; BSR set to: 0
 18091  0096CC  5160               	movf	___ftpack@arg& (0+255),w,b
 18092  0096CE  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 18093  0096D0  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 18094  0096D2  A4D8               	btfss	status,2,c
 18095  0096D4  D00C               	goto	l3792
 18096  0096D6                     u14700:
 18097                           
 18098                           ; BSR set to: 0
 18099                           
 18100                           ; BSR set to: 0
 18101  0096D6  0E00               	movlw	0
 18102  0096D8  6F60               	movwf	?___ftpack& (0+255),b
 18103  0096DA  0E00               	movlw	0
 18104  0096DC  6F61               	movwf	(?___ftpack+1)& (0+255),b
 18105  0096DE  0E00               	movlw	0
 18106  0096E0  6F62               	movwf	(?___ftpack+2)& (0+255),b
 18107                           
 18108                           ; BSR set to: 0
 18109  0096E2  0012               	return	
 18110  0096E4                     
 18111                           ; BSR set to: 0
 18112                           
 18113                           ; BSR set to: 0
 18114  0096E4  2B63               	incf	___ftpack@exp& (0+255),f,b
 18115  0096E6  90D8               	bcf	status,0,c
 18116  0096E8  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 18117  0096EA  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 18118  0096EC  3360               	rrcf	___ftpack@arg& (0+255),f,b
 18119  0096EE                     l3792:
 18120                           
 18121                           ; BSR set to: 0
 18122                           
 18123                           ; BSR set to: 0
 18124  0096EE  0E00               	movlw	0
 18125  0096F0  1560               	andwf	___ftpack@arg& (0+255),w,b
 18126  0096F2  6F65               	movwf	??___ftpack& (0+255),b
 18127  0096F4  0E00               	movlw	0
 18128  0096F6  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 18129  0096F8  6F66               	movwf	(??___ftpack+1)& (0+255),b
 18130  0096FA  0EFE               	movlw	254
 18131  0096FC  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 18132  0096FE  6F67               	movwf	(??___ftpack+2)& (0+255),b
 18133  009700  5165               	movf	??___ftpack& (0+255),w,b
 18134  009702  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 18135  009704  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 18136  009706  B4D8               	btfsc	status,2,c
 18137  009708  D00C               	goto	l3795
 18138  00970A  D7EC               	goto	l3793
 18139  00970C                     
 18140                           ; BSR set to: 0
 18141                           
 18142                           ; BSR set to: 0
 18143  00970C  2B63               	incf	___ftpack@exp& (0+255),f,b
 18144                           
 18145                           ; BSR set to: 0
 18146  00970E  0E01               	movlw	1
 18147  009710  2760               	addwf	___ftpack@arg& (0+255),f,b
 18148  009712  0E00               	movlw	0
 18149  009714  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 18150  009716  0E00               	movlw	0
 18151  009718  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 18152  00971A  90D8               	bcf	status,0,c
 18153  00971C  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 18154  00971E  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 18155  009720  3360               	rrcf	___ftpack@arg& (0+255),f,b
 18156  009722                     l3795:
 18157                           
 18158                           ; BSR set to: 0
 18159                           
 18160                           ; BSR set to: 0
 18161  009722  0E00               	movlw	0
 18162  009724  1560               	andwf	___ftpack@arg& (0+255),w,b
 18163  009726  6F65               	movwf	??___ftpack& (0+255),b
 18164  009728  0E00               	movlw	0
 18165  00972A  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 18166  00972C  6F66               	movwf	(??___ftpack+1)& (0+255),b
 18167  00972E  0EFF               	movlw	255
 18168  009730  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 18169  009732  6F67               	movwf	(??___ftpack+2)& (0+255),b
 18170  009734  5165               	movf	??___ftpack& (0+255),w,b
 18171  009736  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 18172  009738  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 18173  00973A  B4D8               	btfsc	status,2,c
 18174  00973C  D006               	goto	l3798
 18175  00973E  D7E6               	goto	l3796
 18176  009740                     
 18177                           ; BSR set to: 0
 18178                           
 18179                           ; BSR set to: 0
 18180  009740  0763               	decf	___ftpack@exp& (0+255),f,b
 18181  009742  90D8               	bcf	status,0,c
 18182  009744  3760               	rlcf	___ftpack@arg& (0+255),f,b
 18183  009746  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 18184  009748  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 18185  00974A                     l3798:
 18186                           
 18187                           ; BSR set to: 0
 18188                           
 18189                           ; BSR set to: 0
 18190  00974A  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 18191  00974C  D003               	goto	u14740
 18192                           
 18193                           ; BSR set to: 0
 18194  00974E  0E02               	movlw	2
 18195  009750  6163               	cpfslt	___ftpack@exp& (0+255),b
 18196  009752  D7F6               	goto	l3799
 18197  009754                     u14740:
 18198                           
 18199                           ; BSR set to: 0
 18200                           
 18201                           ; BSR set to: 0
 18202  009754  A163               	btfss	___ftpack@exp& (0+255),0,b
 18203                           
 18204                           ; BSR set to: 0
 18205  009756  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 18206                           
 18207                           ; BSR set to: 0
 18208                           
 18209                           ; BSR set to: 0
 18210  009758  90D8               	bcf	status,0,c
 18211  00975A  3363               	rrcf	___ftpack@exp& (0+255),f,b
 18212  00975C  5163               	movf	___ftpack@exp& (0+255),w,b
 18213  00975E  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 18214                           
 18215                           ; BSR set to: 0
 18216  009760  5164               	movf	___ftpack@sign& (0+255),w,b
 18217  009762  A4D8               	btfss	status,2,c
 18218                           
 18219                           ; BSR set to: 0
 18220  009764  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 18221                           
 18222                           ; BSR set to: 0
 18223                           
 18224                           ; BSR set to: 0
 18225  009766  C060  F060         	movff	___ftpack@arg,?___ftpack
 18226  00976A  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 18227  00976E  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 18228  009772  0012               	return	
 18229  009774                     __end_of___ftpack:
 18230                           	opt stack 0
 18231                           tosu	equ	0xFFF
 18232                           tosh	equ	0xFFE
 18233                           tosl	equ	0xFFD
 18234                           pclath	equ	0xFFA
 18235                           tblptru	equ	0xFF8
 18236                           tblptrh	equ	0xFF7
 18237                           tblptrl	equ	0xFF6
 18238                           tablat	equ	0xFF5
 18239                           prodh	equ	0xFF4
 18240                           prodl	equ	0xFF3
 18241                           intcon	equ	0xFF2
 18242                           postinc0	equ	0xFEE
 18243                           wreg	equ	0xFE8
 18244                           indf2	equ	0xFDF
 18245                           postinc2	equ	0xFDE
 18246                           postdec2	equ	0xFDD
 18247                           fsr2h	equ	0xFDA
 18248                           fsr2l	equ	0xFD9
 18249                           status	equ	0xFD8
 18250                           
 18251 ;; *************** function _BME280_compensateHumidity *****************
 18252 ;; Defined at:
 18253 ;;		line 380 in file "mcc_generated_files/bme280.c"
 18254 ;; Parameters:    Size  Location     Type
 18255 ;;		None
 18256 ;; Auto vars:     Size  Location     Type
 18257 ;;  humV            4  119[BANK0 ] long 
 18258 ;;  h               4   95[BANK0 ] unsigned long 
 18259 ;; Return value:  Size  Location     Type
 18260 ;;                  4   70[BANK0 ] unsigned long 
 18261 ;; Registers used:
 18262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18263 ;; Tracked objects:
 18264 ;;		On entry : 0/0
 18265 ;;		On exit  : 0/0
 18266 ;;		Unchanged: 0/0
 18267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18268 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18269 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18270 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18271 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18272 ;;Total ram usage:       53 bytes
 18273 ;; Hardware stack levels used:    1
 18274 ;; Hardware stack levels required when called:    8
 18275 ;; This function calls:
 18276 ;;		___lmul
 18277 ;; This function is called by:
 18278 ;;		_BME280_getHumidity
 18279 ;; This function uses a non-reentrant model
 18280 ;;
 18281                           
 18282                           	psect	text103
 18283  0032F0                     __ptext103:
 18284                           	opt stack 0
 18285  0032F0                     _BME280_compensateHumidity:
 18286                           	opt stack 20
 18287                           
 18288                           ;bme280.c: 382: long humV;
 18289                           ;bme280.c: 383: uint32_t h;
 18290                           ;bme280.c: 385: humV = (t_fine - ((long) 76800));
 18291                           
 18292                           ; BSR set to: 0
 18293                           ;incstack = 0
 18294  0032F0  0E00               	movlw	0
 18295  0032F2  0101               	movlb	1	; () banked
 18296  0032F4  2500               	addwf	_t_fine& (0+255),w,b
 18297  0032F6  0100               	movlb	0	; () banked
 18298  0032F8  6FD7               	movwf	BME280_compensateHumidity@humV& (0+255),b
 18299  0032FA  0ED4               	movlw	212
 18300  0032FC  0101               	movlb	1	; () banked
 18301  0032FE  2101               	addwfc	(_t_fine+1)& (0+255),w,b
 18302  003300  0100               	movlb	0	; () banked
 18303  003302  6FD8               	movwf	(BME280_compensateHumidity@humV+1)& (0+255),b
 18304  003304  0EFE               	movlw	254
 18305  003306  0101               	movlb	1	; () banked
 18306  003308  2102               	addwfc	(_t_fine+2)& (0+255),w,b
 18307  00330A  0100               	movlb	0	; () banked
 18308  00330C  6FD9               	movwf	(BME280_compensateHumidity@humV+2)& (0+255),b
 18309  00330E  0EFF               	movlw	255
 18310  003310  0101               	movlb	1	; () banked
 18311  003312  2103               	addwfc	(_t_fine+3)& (0+255),w,b
 18312  003314  0100               	movlb	0	; () banked
 18313  003316  6FDA               	movwf	(BME280_compensateHumidity@humV+3)& (0+255),b
 18314                           
 18315                           ; BSR set to: 0
 18316                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18317                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18318                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18319                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18320  003318  0E0B               	movlw	11
 18321  00331A  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18322  00331C  0101               	movlb	1	; () banked
 18323  00331E  5186               	movf	(_calibParam+27)& (0+255),w,b
 18324  003320  0100               	movlb	0	; () banked
 18325  003322  6F9A               	movwf	___lmul@multiplier& (0+255),b
 18326  003324  6B9B               	clrf	(___lmul@multiplier+1)& (0+255),b
 18327  003326  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 18328  003328  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 18329  00332A  C0D7  F09E         	movff	BME280_compensateHumidity@humV,___lmul@multiplicand
 18330  00332E  C0D8  F09F         	movff	BME280_compensateHumidity@humV+1,___lmul@multiplicand+1
 18331  003332  C0D9  F0A0         	movff	BME280_compensateHumidity@humV+2,___lmul@multiplicand+2
 18332  003336  C0DA  F0A1         	movff	BME280_compensateHumidity@humV+3,___lmul@multiplicand+3
 18333  00333A  EC1D  F057         	call	___lmul	;wreg free
 18334  00333E                     u24985:
 18335  00333E  0100               	movlb	0	; () banked
 18336  003340  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18337  003342  D001               	goto	u24986
 18338  003344  D007               	goto	u24987
 18339  003346                     u24986:
 18340  003346  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 18341  003348  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 18342  00334A  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 18343  00334C  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 18344  00334E  339A               	rrcf	?___lmul& (0+255),f,b
 18345  003350  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18346  003352  D7F5               	goto	u24985
 18347  003354                     u24987:
 18348  003354  0E00               	movlw	0
 18349  003356  0100               	movlb	0	; () banked
 18350  003358  259A               	addwf	?___lmul& (0+255),w,b
 18351  00335A  6FD3               	movwf	_BME280_compensateHumidity$7049& (0+255),b
 18352  00335C  0E80               	movlw	128
 18353  00335E  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 18354  003360  6FD4               	movwf	(_BME280_compensateHumidity$7049+1)& (0+255),b
 18355  003362  0E00               	movlw	0
 18356  003364  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 18357  003366  6FD5               	movwf	(_BME280_compensateHumidity$7049+2)& (0+255),b
 18358  003368  0E00               	movlw	0
 18359  00336A  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 18360  00336C  6FD6               	movwf	(_BME280_compensateHumidity$7049+3)& (0+255),b
 18361                           
 18362                           ; BSR set to: 0
 18363                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18364                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18365                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18366                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18367  00336E  0E0A               	movlw	10
 18368  003370  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18369  003372  0101               	movlb	1	; () banked
 18370  003374  518B               	movf	(_calibParam+32)& (0+255),w,b
 18371  003376  0100               	movlb	0	; () banked
 18372  003378  6F9A               	movwf	___lmul@multiplier& (0+255),b
 18373  00337A  0E00               	movlw	0
 18374  00337C  BF9A               	btfsc	___lmul@multiplier& (0+255),7,b
 18375  00337E  0EFF               	movlw	-1
 18376  003380  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 18377  003382  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 18378  003384  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 18379  003386  C0D7  F09E         	movff	BME280_compensateHumidity@humV,___lmul@multiplicand
 18380  00338A  C0D8  F09F         	movff	BME280_compensateHumidity@humV+1,___lmul@multiplicand+1
 18381  00338E  C0D9  F0A0         	movff	BME280_compensateHumidity@humV+2,___lmul@multiplicand+2
 18382  003392  C0DA  F0A1         	movff	BME280_compensateHumidity@humV+3,___lmul@multiplicand+3
 18383  003396  EC1D  F057         	call	___lmul	;wreg free
 18384  00339A                     u24995:
 18385  00339A  0100               	movlb	0	; () banked
 18386  00339C  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18387  00339E  D001               	goto	u24996
 18388  0033A0  D007               	goto	u24997
 18389  0033A2                     u24996:
 18390  0033A2  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 18391  0033A4  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 18392  0033A6  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 18393  0033A8  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 18394  0033AA  339A               	rrcf	?___lmul& (0+255),f,b
 18395  0033AC  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18396  0033AE  D7F5               	goto	u24995
 18397  0033B0                     u24997:
 18398  0033B0  C09A  F0C3         	movff	?___lmul,_BME280_compensateHumidity$7050
 18399  0033B4  C09B  F0C4         	movff	?___lmul+1,_BME280_compensateHumidity$7050+1
 18400  0033B8  C09C  F0C5         	movff	?___lmul+2,_BME280_compensateHumidity$7050+2
 18401  0033BC  C09D  F0C6         	movff	?___lmul+3,_BME280_compensateHumidity$7050+3
 18402                           
 18403                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18404                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18405                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18406                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18407  0033C0  0E0A               	movlw	10
 18408  0033C2  0100               	movlb	0	; () banked
 18409  0033C4  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18410  0033C6  C0D3  F09A         	movff	_BME280_compensateHumidity$7049,___lmul@multiplier
 18411  0033CA  C0D4  F09B         	movff	_BME280_compensateHumidity$7049+1,___lmul@multiplier+1
 18412  0033CE  C0D5  F09C         	movff	_BME280_compensateHumidity$7049+2,___lmul@multiplier+2
 18413  0033D2  C0D6  F09D         	movff	_BME280_compensateHumidity$7049+3,___lmul@multiplier+3
 18414  0033D6  C0C3  F09E         	movff	_BME280_compensateHumidity$7050,___lmul@multiplicand
 18415  0033DA  C0C4  F09F         	movff	_BME280_compensateHumidity$7050+1,___lmul@multiplicand+1
 18416  0033DE  C0C5  F0A0         	movff	_BME280_compensateHumidity$7050+2,___lmul@multiplicand+2
 18417  0033E2  C0C6  F0A1         	movff	_BME280_compensateHumidity$7050+3,___lmul@multiplicand+3
 18418  0033E6  EC1D  F057         	call	___lmul	;wreg free
 18419  0033EA                     u25005:
 18420  0033EA  0100               	movlb	0	; () banked
 18421  0033EC  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18422  0033EE  D001               	goto	u25006
 18423  0033F0  D007               	goto	u25007
 18424  0033F2                     u25006:
 18425  0033F2  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 18426  0033F4  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 18427  0033F6  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 18428  0033F8  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 18429  0033FA  339A               	rrcf	?___lmul& (0+255),f,b
 18430  0033FC  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18431  0033FE  D7F5               	goto	u25005
 18432  003400                     u25007:
 18433  003400  0E00               	movlw	0
 18434  003402  0100               	movlb	0	; () banked
 18435  003404  259A               	addwf	?___lmul& (0+255),w,b
 18436  003406  6FC7               	movwf	_BME280_compensateHumidity$7051& (0+255),b
 18437  003408  0E00               	movlw	0
 18438  00340A  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 18439  00340C  6FC8               	movwf	(_BME280_compensateHumidity$7051+1)& (0+255),b
 18440  00340E  0E20               	movlw	32
 18441  003410  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 18442  003412  6FC9               	movwf	(_BME280_compensateHumidity$7051+2)& (0+255),b
 18443  003414  0E00               	movlw	0
 18444  003416  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 18445  003418  6FCA               	movwf	(_BME280_compensateHumidity$7051+3)& (0+255),b
 18446                           
 18447                           ; BSR set to: 0
 18448                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18449                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18450                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18451                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18452  00341A  0E0F               	movlw	15
 18453  00341C  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18454  00341E  EE21  F089         	lfsr	2,_calibParam+30
 18455  003422  CFDE F09A          	movff	postinc2,___lmul@multiplier
 18456  003426  CFDD F09B          	movff	postdec2,___lmul@multiplier+1
 18457  00342A  0E00               	movlw	0
 18458  00342C  BF9B               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 18459  00342E  0EFF               	movlw	-1
 18460  003430  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 18461  003432  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 18462  003434  C0D7  F09E         	movff	BME280_compensateHumidity@humV,___lmul@multiplicand
 18463  003438  C0D8  F09F         	movff	BME280_compensateHumidity@humV+1,___lmul@multiplicand+1
 18464  00343C  C0D9  F0A0         	movff	BME280_compensateHumidity@humV+2,___lmul@multiplicand+2
 18465  003440  C0DA  F0A1         	movff	BME280_compensateHumidity@humV+3,___lmul@multiplicand+3
 18466  003444  EC1D  F057         	call	___lmul	;wreg free
 18467  003448  0100               	movlb	0	; () banked
 18468  00344A  1F9A               	comf	?___lmul& (0+255),f,b
 18469  00344C  1F9B               	comf	(?___lmul+1)& (0+255),f,b
 18470  00344E  1F9C               	comf	(?___lmul+2)& (0+255),f,b
 18471  003450  1F9D               	comf	(?___lmul+3)& (0+255),f,b
 18472  003452  2B9A               	incf	?___lmul& (0+255),f,b
 18473  003454  0E00               	movlw	0
 18474  003456  239B               	addwfc	(?___lmul+1)& (0+255),f,b
 18475  003458  239C               	addwfc	(?___lmul+2)& (0+255),f,b
 18476  00345A  239D               	addwfc	(?___lmul+3)& (0+255),f,b
 18477  00345C  0101               	movlb	1	; () banked
 18478  00345E  5187               	movf	(_calibParam+28)& (0+255),w,b
 18479  003460  0100               	movlb	0	; () banked
 18480  003462  6FAB               	movwf	(??_BME280_compensateHumidity+1)& (0+255),b
 18481  003464  0101               	movlb	1	; () banked
 18482  003466  5188               	movf	(_calibParam+29)& (0+255),w,b
 18483  003468  0100               	movlb	0	; () banked
 18484  00346A  6FAC               	movwf	(??_BME280_compensateHumidity+2)& (0+255),b
 18485  00346C  6BAD               	clrf	(??_BME280_compensateHumidity+3)& (0+255),b
 18486  00346E  6BAE               	clrf	(??_BME280_compensateHumidity+4)& (0+255),b
 18487  003470  0E14               	movlw	20
 18488  003472                     u25015:
 18489  003472  90D8               	bcf	status,0,c
 18490  003474  37AB               	rlcf	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18491  003476  37AC               	rlcf	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18492  003478  37AD               	rlcf	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18493  00347A  37AE               	rlcf	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18494  00347C  2EE8               	decfsz	wreg,f,c
 18495  00347E  D7F9               	goto	u25015
 18496  003480  1FAB               	comf	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18497  003482  1FAC               	comf	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18498  003484  1FAD               	comf	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18499  003486  1FAE               	comf	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18500  003488  2BAB               	incf	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18501  00348A  0E00               	movlw	0
 18502  00348C  23AC               	addwfc	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18503  00348E  23AD               	addwfc	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18504  003490  23AE               	addwfc	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18505  003492  C104  F0AF         	movff	_adc_H,??_BME280_compensateHumidity+5
 18506  003496  C105  F0B0         	movff	_adc_H+1,??_BME280_compensateHumidity+6
 18507  00349A  C106  F0B1         	movff	_adc_H+2,??_BME280_compensateHumidity+7
 18508  00349E  C107  F0B2         	movff	_adc_H+3,??_BME280_compensateHumidity+8
 18509  0034A2  0E0E               	movlw	14
 18510  0034A4                     u25025:
 18511  0034A4  90D8               	bcf	status,0,c
 18512  0034A6  37AF               	rlcf	(??_BME280_compensateHumidity+5)& (0+255),f,b
 18513  0034A8  37B0               	rlcf	(??_BME280_compensateHumidity+6)& (0+255),f,b
 18514  0034AA  37B1               	rlcf	(??_BME280_compensateHumidity+7)& (0+255),f,b
 18515  0034AC  37B2               	rlcf	(??_BME280_compensateHumidity+8)& (0+255),f,b
 18516  0034AE  2EE8               	decfsz	wreg,f,c
 18517  0034B0  D7F9               	goto	u25025
 18518  0034B2  51AB               	movf	(??_BME280_compensateHumidity+1)& (0+255),w,b
 18519  0034B4  25AF               	addwf	(??_BME280_compensateHumidity+5)& (0+255),w,b
 18520  0034B6  6FB3               	movwf	(??_BME280_compensateHumidity+9)& (0+255),b
 18521  0034B8  51AC               	movf	(??_BME280_compensateHumidity+2)& (0+255),w,b
 18522  0034BA  21B0               	addwfc	(??_BME280_compensateHumidity+6)& (0+255),w,b
 18523  0034BC  6FB4               	movwf	(??_BME280_compensateHumidity+10)& (0+255),b
 18524  0034BE  51AD               	movf	(??_BME280_compensateHumidity+3)& (0+255),w,b
 18525  0034C0  21B1               	addwfc	(??_BME280_compensateHumidity+7)& (0+255),w,b
 18526  0034C2  6FB5               	movwf	(??_BME280_compensateHumidity+11)& (0+255),b
 18527  0034C4  51AE               	movf	(??_BME280_compensateHumidity+4)& (0+255),w,b
 18528  0034C6  21B2               	addwfc	(??_BME280_compensateHumidity+8)& (0+255),w,b
 18529  0034C8  6FB6               	movwf	(??_BME280_compensateHumidity+12)& (0+255),b
 18530  0034CA  519A               	movf	?___lmul& (0+255),w,b
 18531  0034CC  25B3               	addwf	(??_BME280_compensateHumidity+9)& (0+255),w,b
 18532  0034CE  6FB7               	movwf	(??_BME280_compensateHumidity+13)& (0+255),b
 18533  0034D0  519B               	movf	(?___lmul+1)& (0+255),w,b
 18534  0034D2  21B4               	addwfc	(??_BME280_compensateHumidity+10)& (0+255),w,b
 18535  0034D4  6FB8               	movwf	(??_BME280_compensateHumidity+14)& (0+255),b
 18536  0034D6  519C               	movf	(?___lmul+2)& (0+255),w,b
 18537  0034D8  21B5               	addwfc	(??_BME280_compensateHumidity+11)& (0+255),w,b
 18538  0034DA  6FB9               	movwf	(??_BME280_compensateHumidity+15)& (0+255),b
 18539  0034DC  519D               	movf	(?___lmul+3)& (0+255),w,b
 18540  0034DE  21B6               	addwfc	(??_BME280_compensateHumidity+12)& (0+255),w,b
 18541  0034E0  6FBA               	movwf	(??_BME280_compensateHumidity+16)& (0+255),b
 18542  0034E2  0E00               	movlw	0
 18543  0034E4  25B7               	addwf	(??_BME280_compensateHumidity+13)& (0+255),w,b
 18544  0034E6  6FBB               	movwf	(??_BME280_compensateHumidity+17)& (0+255),b
 18545  0034E8  0E40               	movlw	64
 18546  0034EA  21B8               	addwfc	(??_BME280_compensateHumidity+14)& (0+255),w,b
 18547  0034EC  6FBC               	movwf	(??_BME280_compensateHumidity+18)& (0+255),b
 18548  0034EE  0E00               	movlw	0
 18549  0034F0  21B9               	addwfc	(??_BME280_compensateHumidity+15)& (0+255),w,b
 18550  0034F2  6FBD               	movwf	(??_BME280_compensateHumidity+19)& (0+255),b
 18551  0034F4  0E00               	movlw	0
 18552  0034F6  21BA               	addwfc	(??_BME280_compensateHumidity+16)& (0+255),w,b
 18553  0034F8  6FBE               	movwf	(??_BME280_compensateHumidity+20)& (0+255),b
 18554  0034FA                     u25035:
 18555  0034FA  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18556  0034FC  D001               	goto	u25036
 18557  0034FE  D007               	goto	u25037
 18558  003500                     u25036:
 18559  003500  35BE               	rlcf	(??_BME280_compensateHumidity+20)& (0+255),w,b
 18560  003502  33BE               	rrcf	(??_BME280_compensateHumidity+20)& (0+255),f,b
 18561  003504  33BD               	rrcf	(??_BME280_compensateHumidity+19)& (0+255),f,b
 18562  003506  33BC               	rrcf	(??_BME280_compensateHumidity+18)& (0+255),f,b
 18563  003508  33BB               	rrcf	(??_BME280_compensateHumidity+17)& (0+255),f,b
 18564  00350A  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18565  00350C  D7F6               	goto	u25035
 18566  00350E                     u25037:
 18567  00350E  C0BB  F0CB         	movff	??_BME280_compensateHumidity+17,_BME280_compensateHumidity$7052
 18568  003512  C0BC  F0CC         	movff	??_BME280_compensateHumidity+18,_BME280_compensateHumidity$7052+1
 18569  003516  C0BD  F0CD         	movff	??_BME280_compensateHumidity+19,_BME280_compensateHumidity$7052+2
 18570  00351A  C0BE  F0CE         	movff	??_BME280_compensateHumidity+20,_BME280_compensateHumidity$7052+3
 18571                           
 18572                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18573                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18574                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18575                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18576  00351E  0E0E               	movlw	14
 18577  003520  0100               	movlb	0	; () banked
 18578  003522  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18579  003524  C0C7  F09A         	movff	_BME280_compensateHumidity$7051,___lmul@multiplier
 18580  003528  C0C8  F09B         	movff	_BME280_compensateHumidity$7051+1,___lmul@multiplier+1
 18581  00352C  C0C9  F09C         	movff	_BME280_compensateHumidity$7051+2,___lmul@multiplier+2
 18582  003530  C0CA  F09D         	movff	_BME280_compensateHumidity$7051+3,___lmul@multiplier+3
 18583  003534  EE21  F084         	lfsr	2,_calibParam+25
 18584  003538  CFDE F09E          	movff	postinc2,___lmul@multiplicand
 18585  00353C  CFDD F09F          	movff	postdec2,___lmul@multiplicand+1
 18586  003540  0E00               	movlw	0
 18587  003542  BF9F               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 18588  003544  0EFF               	movlw	-1
 18589  003546  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18590  003548  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18591  00354A  EC1D  F057         	call	___lmul	;wreg free
 18592  00354E  0E00               	movlw	0
 18593  003550  0100               	movlb	0	; () banked
 18594  003552  259A               	addwf	?___lmul& (0+255),w,b
 18595  003554  6FAB               	movwf	(??_BME280_compensateHumidity+1)& (0+255),b
 18596  003556  0E20               	movlw	32
 18597  003558  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 18598  00355A  6FAC               	movwf	(??_BME280_compensateHumidity+2)& (0+255),b
 18599  00355C  0E00               	movlw	0
 18600  00355E  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 18601  003560  6FAD               	movwf	(??_BME280_compensateHumidity+3)& (0+255),b
 18602  003562  0E00               	movlw	0
 18603  003564  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 18604  003566  6FAE               	movwf	(??_BME280_compensateHumidity+4)& (0+255),b
 18605  003568                     u25045:
 18606  003568  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18607  00356A  D001               	goto	u25046
 18608  00356C  D007               	goto	u25047
 18609  00356E                     u25046:
 18610  00356E  35AE               	rlcf	(??_BME280_compensateHumidity+4)& (0+255),w,b
 18611  003570  33AE               	rrcf	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18612  003572  33AD               	rrcf	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18613  003574  33AC               	rrcf	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18614  003576  33AB               	rrcf	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18615  003578  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18616  00357A  D7F6               	goto	u25045
 18617  00357C                     u25047:
 18618  00357C  C0AB  F0CF         	movff	??_BME280_compensateHumidity+1,_BME280_compensateHumidity$7053
 18619  003580  C0AC  F0D0         	movff	??_BME280_compensateHumidity+2,_BME280_compensateHumidity$7053+1
 18620  003584  C0AD  F0D1         	movff	??_BME280_compensateHumidity+3,_BME280_compensateHumidity$7053+2
 18621  003588  C0AE  F0D2         	movff	??_BME280_compensateHumidity+4,_BME280_compensateHumidity$7053+3
 18622                           
 18623                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18624                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18625                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18626                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18627  00358C  C0CB  F09A         	movff	_BME280_compensateHumidity$7052,___lmul@multiplier
 18628  003590  C0CC  F09B         	movff	_BME280_compensateHumidity$7052+1,___lmul@multiplier+1
 18629  003594  C0CD  F09C         	movff	_BME280_compensateHumidity$7052+2,___lmul@multiplier+2
 18630  003598  C0CE  F09D         	movff	_BME280_compensateHumidity$7052+3,___lmul@multiplier+3
 18631  00359C  C0CF  F09E         	movff	_BME280_compensateHumidity$7053,___lmul@multiplicand
 18632  0035A0  C0D0  F09F         	movff	_BME280_compensateHumidity$7053+1,___lmul@multiplicand+1
 18633  0035A4  C0D1  F0A0         	movff	_BME280_compensateHumidity$7053+2,___lmul@multiplicand+2
 18634  0035A8  C0D2  F0A1         	movff	_BME280_compensateHumidity$7053+3,___lmul@multiplicand+3
 18635  0035AC  EC1D  F057         	call	___lmul	;wreg free
 18636  0035B0  C09A  F0D7         	movff	?___lmul,BME280_compensateHumidity@humV
 18637  0035B4  C09B  F0D8         	movff	?___lmul+1,BME280_compensateHumidity@humV+1
 18638  0035B8  C09C  F0D9         	movff	?___lmul+2,BME280_compensateHumidity@humV+2
 18639  0035BC  C09D  F0DA         	movff	?___lmul+3,BME280_compensateHumidity@humV+3
 18640                           
 18641                           ;bme280.c: 390: humV = (humV - (((((humV >> 15) * (humV >> 15)) >> 7) * ((long) calibPar
      +                          am.dig_H1)) >> 4));
 18642  0035C0  0E07               	movlw	7
 18643  0035C2  0100               	movlb	0	; () banked
 18644  0035C4  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18645  0035C6  0E0F               	movlw	15
 18646  0035C8  6FAB               	movwf	(??_BME280_compensateHumidity+1)& (0+255),b
 18647  0035CA  C0D7  F0AC         	movff	BME280_compensateHumidity@humV,??_BME280_compensateHumidity+2
 18648  0035CE  C0D8  F0AD         	movff	BME280_compensateHumidity@humV+1,??_BME280_compensateHumidity+3
 18649  0035D2  C0D9  F0AE         	movff	BME280_compensateHumidity@humV+2,??_BME280_compensateHumidity+4
 18650  0035D6  C0DA  F0AF         	movff	BME280_compensateHumidity@humV+3,??_BME280_compensateHumidity+5
 18651  0035DA                     u25055:
 18652  0035DA  67AB               	tstfsz	(??_BME280_compensateHumidity+1)& (0+255),b
 18653  0035DC  D001               	goto	u25056
 18654  0035DE  D007               	goto	u25057
 18655  0035E0                     u25056:
 18656  0035E0  35AF               	rlcf	(??_BME280_compensateHumidity+5)& (0+255),w,b
 18657  0035E2  33AF               	rrcf	(??_BME280_compensateHumidity+5)& (0+255),f,b
 18658  0035E4  33AE               	rrcf	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18659  0035E6  33AD               	rrcf	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18660  0035E8  33AC               	rrcf	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18661  0035EA  2FAB               	decfsz	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18662  0035EC  D7F6               	goto	u25055
 18663  0035EE                     u25057:
 18664  0035EE  C0AC  F09A         	movff	??_BME280_compensateHumidity+2,___lmul@multiplier
 18665  0035F2  C0AD  F09B         	movff	??_BME280_compensateHumidity+3,___lmul@multiplier+1
 18666  0035F6  C0AE  F09C         	movff	??_BME280_compensateHumidity+4,___lmul@multiplier+2
 18667  0035FA  C0AF  F09D         	movff	??_BME280_compensateHumidity+5,___lmul@multiplier+3
 18668  0035FE  0E0F               	movlw	15
 18669  003600  0100               	movlb	0	; () banked
 18670  003602  6FB0               	movwf	(??_BME280_compensateHumidity+6)& (0+255),b
 18671  003604  C0D7  F0B1         	movff	BME280_compensateHumidity@humV,??_BME280_compensateHumidity+7
 18672  003608  C0D8  F0B2         	movff	BME280_compensateHumidity@humV+1,??_BME280_compensateHumidity+8
 18673  00360C  C0D9  F0B3         	movff	BME280_compensateHumidity@humV+2,??_BME280_compensateHumidity+9
 18674  003610  C0DA  F0B4         	movff	BME280_compensateHumidity@humV+3,??_BME280_compensateHumidity+10
 18675  003614                     u25065:
 18676  003614  67B0               	tstfsz	(??_BME280_compensateHumidity+6)& (0+255),b
 18677  003616  D001               	goto	u25066
 18678  003618  D007               	goto	u25067
 18679  00361A                     u25066:
 18680  00361A  35B4               	rlcf	(??_BME280_compensateHumidity+10)& (0+255),w,b
 18681  00361C  33B4               	rrcf	(??_BME280_compensateHumidity+10)& (0+255),f,b
 18682  00361E  33B3               	rrcf	(??_BME280_compensateHumidity+9)& (0+255),f,b
 18683  003620  33B2               	rrcf	(??_BME280_compensateHumidity+8)& (0+255),f,b
 18684  003622  33B1               	rrcf	(??_BME280_compensateHumidity+7)& (0+255),f,b
 18685  003624  2FB0               	decfsz	(??_BME280_compensateHumidity+6)& (0+255),f,b
 18686  003626  D7F6               	goto	u25065
 18687  003628                     u25067:
 18688  003628  C0B1  F09E         	movff	??_BME280_compensateHumidity+7,___lmul@multiplicand
 18689  00362C  C0B2  F09F         	movff	??_BME280_compensateHumidity+8,___lmul@multiplicand+1
 18690  003630  C0B3  F0A0         	movff	??_BME280_compensateHumidity+9,___lmul@multiplicand+2
 18691  003634  C0B4  F0A1         	movff	??_BME280_compensateHumidity+10,___lmul@multiplicand+3
 18692  003638  EC1D  F057         	call	___lmul	;wreg free
 18693  00363C                     u25075:
 18694  00363C  0100               	movlb	0	; () banked
 18695  00363E  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18696  003640  D001               	goto	u25076
 18697  003642  D007               	goto	u25077
 18698  003644                     u25076:
 18699  003644  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 18700  003646  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 18701  003648  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 18702  00364A  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 18703  00364C  339A               	rrcf	?___lmul& (0+255),f,b
 18704  00364E  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18705  003650  D7F5               	goto	u25075
 18706  003652                     u25077:
 18707  003652  C09A  F0D3         	movff	?___lmul,_BME280_compensateHumidity$7049
 18708  003656  C09B  F0D4         	movff	?___lmul+1,_BME280_compensateHumidity$7049+1
 18709  00365A  C09C  F0D5         	movff	?___lmul+2,_BME280_compensateHumidity$7049+2
 18710  00365E  C09D  F0D6         	movff	?___lmul+3,_BME280_compensateHumidity$7049+3
 18711                           
 18712                           ;bme280.c: 390: humV = (humV - (((((humV >> 15) * (humV >> 15)) >> 7) * ((long) calibPar
      +                          am.dig_H1)) >> 4));
 18713  003662  0E04               	movlw	4
 18714  003664  0100               	movlb	0	; () banked
 18715  003666  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18716  003668  C0D3  F09A         	movff	_BME280_compensateHumidity$7049,___lmul@multiplier
 18717  00366C  C0D4  F09B         	movff	_BME280_compensateHumidity$7049+1,___lmul@multiplier+1
 18718  003670  C0D5  F09C         	movff	_BME280_compensateHumidity$7049+2,___lmul@multiplier+2
 18719  003674  C0D6  F09D         	movff	_BME280_compensateHumidity$7049+3,___lmul@multiplier+3
 18720  003678  0101               	movlb	1	; () banked
 18721  00367A  5183               	movf	(_calibParam+24)& (0+255),w,b
 18722  00367C  0100               	movlb	0	; () banked
 18723  00367E  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 18724  003680  6B9F               	clrf	(___lmul@multiplicand+1)& (0+255),b
 18725  003682  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 18726  003684  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 18727  003686  EC1D  F057         	call	___lmul	;wreg free
 18728  00368A                     u25085:
 18729  00368A  0100               	movlb	0	; () banked
 18730  00368C  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18731  00368E  D001               	goto	u25086
 18732  003690  D007               	goto	u25087
 18733  003692                     u25086:
 18734  003692  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 18735  003694  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 18736  003696  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 18737  003698  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 18738  00369A  339A               	rrcf	?___lmul& (0+255),f,b
 18739  00369C  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18740  00369E  D7F5               	goto	u25085
 18741  0036A0                     u25087:
 18742  0036A0  0100               	movlb	0	; () banked
 18743  0036A2  1F9A               	comf	?___lmul& (0+255),f,b
 18744  0036A4  1F9B               	comf	(?___lmul+1)& (0+255),f,b
 18745  0036A6  1F9C               	comf	(?___lmul+2)& (0+255),f,b
 18746  0036A8  1F9D               	comf	(?___lmul+3)& (0+255),f,b
 18747  0036AA  2B9A               	incf	?___lmul& (0+255),f,b
 18748  0036AC  0E00               	movlw	0
 18749  0036AE  239B               	addwfc	(?___lmul+1)& (0+255),f,b
 18750  0036B0  239C               	addwfc	(?___lmul+2)& (0+255),f,b
 18751  0036B2  239D               	addwfc	(?___lmul+3)& (0+255),f,b
 18752  0036B4  51D7               	movf	BME280_compensateHumidity@humV& (0+255),w,b
 18753  0036B6  259A               	addwf	?___lmul& (0+255),w,b
 18754  0036B8  6FD7               	movwf	BME280_compensateHumidity@humV& (0+255),b
 18755  0036BA  51D8               	movf	(BME280_compensateHumidity@humV+1)& (0+255),w,b
 18756  0036BC  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 18757  0036BE  6FD8               	movwf	(BME280_compensateHumidity@humV+1)& (0+255),b
 18758  0036C0  51D9               	movf	(BME280_compensateHumidity@humV+2)& (0+255),w,b
 18759  0036C2  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 18760  0036C4  6FD9               	movwf	(BME280_compensateHumidity@humV+2)& (0+255),b
 18761  0036C6  51DA               	movf	(BME280_compensateHumidity@humV+3)& (0+255),w,b
 18762  0036C8  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 18763  0036CA  6FDA               	movwf	(BME280_compensateHumidity@humV+3)& (0+255),b
 18764                           
 18765                           ;bme280.c: 391: humV = (humV < 0 ? 0 : humV);
 18766  0036CC  AFDA               	btfss	(BME280_compensateHumidity@humV+3)& (0+255),7,b
 18767  0036CE  D008               	goto	l3095
 18768                           
 18769                           ; BSR set to: 0
 18770                           
 18771                           ; BSR set to: 0
 18772                           
 18773                           ; BSR set to: 0
 18774  0036D0  0E00               	movlw	0
 18775  0036D2  6FD7               	movwf	BME280_compensateHumidity@humV& (0+255),b
 18776  0036D4  0E00               	movlw	0
 18777  0036D6  6FD8               	movwf	(BME280_compensateHumidity@humV+1)& (0+255),b
 18778  0036D8  0E00               	movlw	0
 18779  0036DA  6FD9               	movwf	(BME280_compensateHumidity@humV+2)& (0+255),b
 18780  0036DC  0E00               	movlw	0
 18781  0036DE  6FDA               	movwf	(BME280_compensateHumidity@humV+3)& (0+255),b
 18782  0036E0                     l3095:
 18783                           
 18784                           ; BSR set to: 0
 18785                           ;bme280.c: 392: humV = (humV > 419430400 ? 419430400 : humV);
 18786                           
 18787                           ; BSR set to: 0
 18788  0036E0  BFDA               	btfsc	(BME280_compensateHumidity@humV+3)& (0+255),7,b
 18789  0036E2  D011               	goto	l3099
 18790  0036E4  05D7               	decf	BME280_compensateHumidity@humV& (0+255),w,b
 18791  0036E6  0E00               	movlw	0
 18792  0036E8  59D8               	subwfb	(BME280_compensateHumidity@humV+1)& (0+255),w,b
 18793  0036EA  0E00               	movlw	0
 18794  0036EC  59D9               	subwfb	(BME280_compensateHumidity@humV+2)& (0+255),w,b
 18795  0036EE  0E19               	movlw	25
 18796  0036F0  59DA               	subwfb	(BME280_compensateHumidity@humV+3)& (0+255),w,b
 18797  0036F2  A0D8               	btfss	status,0,c
 18798  0036F4  D008               	goto	l3099
 18799                           
 18800                           ; BSR set to: 0
 18801                           
 18802                           ; BSR set to: 0
 18803                           
 18804                           ; BSR set to: 0
 18805  0036F6  0E00               	movlw	0
 18806  0036F8  6FD7               	movwf	BME280_compensateHumidity@humV& (0+255),b
 18807  0036FA  0E00               	movlw	0
 18808  0036FC  6FD8               	movwf	(BME280_compensateHumidity@humV+1)& (0+255),b
 18809  0036FE  0E00               	movlw	0
 18810  003700  6FD9               	movwf	(BME280_compensateHumidity@humV+2)& (0+255),b
 18811  003702  0E19               	movlw	25
 18812  003704  6FDA               	movwf	(BME280_compensateHumidity@humV+3)& (0+255),b
 18813  003706                     l3099:
 18814                           
 18815                           ; BSR set to: 0
 18816                           ;bme280.c: 394: h = (uint32_t) (humV >> 12);
 18817                           
 18818                           ; BSR set to: 0
 18819  003706  0E0C               	movlw	12
 18820  003708  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18821  00370A  C0D7  F0AB         	movff	BME280_compensateHumidity@humV,??_BME280_compensateHumidity+1
 18822  00370E  C0D8  F0AC         	movff	BME280_compensateHumidity@humV+1,??_BME280_compensateHumidity+2
 18823  003712  C0D9  F0AD         	movff	BME280_compensateHumidity@humV+2,??_BME280_compensateHumidity+3
 18824  003716  C0DA  F0AE         	movff	BME280_compensateHumidity@humV+3,??_BME280_compensateHumidity+4
 18825  00371A                     u25115:
 18826  00371A  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18827  00371C  D001               	goto	u25116
 18828  00371E  D007               	goto	u25117
 18829  003720                     u25116:
 18830  003720  35AE               	rlcf	(??_BME280_compensateHumidity+4)& (0+255),w,b
 18831  003722  33AE               	rrcf	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18832  003724  33AD               	rrcf	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18833  003726  33AC               	rrcf	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18834  003728  33AB               	rrcf	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18835  00372A  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18836  00372C  D7F6               	goto	u25115
 18837  00372E                     u25117:
 18838  00372E  C0AB  F0BF         	movff	??_BME280_compensateHumidity+1,BME280_compensateHumidity@h
 18839  003732  C0AC  F0C0         	movff	??_BME280_compensateHumidity+2,BME280_compensateHumidity@h+1
 18840  003736  C0AD  F0C1         	movff	??_BME280_compensateHumidity+3,BME280_compensateHumidity@h+2
 18841  00373A  C0AE  F0C2         	movff	??_BME280_compensateHumidity+4,BME280_compensateHumidity@h+3
 18842                           
 18843                           ;bme280.c: 395: return h;
 18844  00373E  C0BF  F0A6         	movff	BME280_compensateHumidity@h,?_BME280_compensateHumidity
 18845  003742  C0C0  F0A7         	movff	BME280_compensateHumidity@h+1,?_BME280_compensateHumidity+1
 18846  003746  C0C1  F0A8         	movff	BME280_compensateHumidity@h+2,?_BME280_compensateHumidity+2
 18847  00374A  C0C2  F0A9         	movff	BME280_compensateHumidity@h+3,?_BME280_compensateHumidity+3
 18848  00374E  0012               	return	
 18849  003750                     __end_of_BME280_compensateHumidity:
 18850                           	opt stack 0
 18851                           tosu	equ	0xFFF
 18852                           tosh	equ	0xFFE
 18853                           tosl	equ	0xFFD
 18854                           pclath	equ	0xFFA
 18855                           tblptru	equ	0xFF8
 18856                           tblptrh	equ	0xFF7
 18857                           tblptrl	equ	0xFF6
 18858                           tablat	equ	0xFF5
 18859                           prodh	equ	0xFF4
 18860                           prodl	equ	0xFF3
 18861                           intcon	equ	0xFF2
 18862                           postinc0	equ	0xFEE
 18863                           wreg	equ	0xFE8
 18864                           indf2	equ	0xFDF
 18865                           postinc2	equ	0xFDE
 18866                           postdec2	equ	0xFDD
 18867                           fsr2h	equ	0xFDA
 18868                           fsr2l	equ	0xFD9
 18869                           status	equ	0xFD8
 18870                           
 18871 ;; *************** function _TMR5_HasOverflowOccured *****************
 18872 ;; Defined at:
 18873 ;;		line 151 in file "mcc_generated_files/tmr5.c"
 18874 ;; Parameters:    Size  Location     Type
 18875 ;;		None
 18876 ;; Auto vars:     Size  Location     Type
 18877 ;;		None
 18878 ;; Return value:  Size  Location     Type
 18879 ;;                  1    wreg      unsigned char 
 18880 ;; Registers used:
 18881 ;;		wreg
 18882 ;; Tracked objects:
 18883 ;;		On entry : 0/0
 18884 ;;		On exit  : 0/0
 18885 ;;		Unchanged: 0/0
 18886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18891 ;;Total ram usage:        0 bytes
 18892 ;; Hardware stack levels used:    1
 18893 ;; Hardware stack levels required when called:    7
 18894 ;; This function calls:
 18895 ;;		Nothing
 18896 ;; This function is called by:
 18897 ;;		_main
 18898 ;; This function uses a non-reentrant model
 18899 ;;
 18900                           
 18901                           	psect	text104
 18902  00C516                     __ptext104:
 18903                           	opt stack 0
 18904  00C516                     _TMR5_HasOverflowOccured:
 18905                           	opt stack 23
 18906                           
 18907                           ;tmr5.c: 154: return(PIR5bits.TMR5IF);
 18908                           
 18909                           ;incstack = 0
 18910  00C516  A27E               	btfss	3966,1,c	;volatile
 18911  00C518  D002               	goto	u17550
 18912  00C51A  0E01               	movlw	1
 18913  00C51C  0012               	return	
 18914  00C51E                     u17550:
 18915  00C51E  0E00               	movlw	0
 18916  00C520  0012               	return	
 18917  00C522                     __end_of_TMR5_HasOverflowOccured:
 18918                           	opt stack 0
 18919                           tosu	equ	0xFFF
 18920                           tosh	equ	0xFFE
 18921                           tosl	equ	0xFFD
 18922                           pclath	equ	0xFFA
 18923                           tblptru	equ	0xFF8
 18924                           tblptrh	equ	0xFF7
 18925                           tblptrl	equ	0xFF6
 18926                           tablat	equ	0xFF5
 18927                           prodh	equ	0xFF4
 18928                           prodl	equ	0xFF3
 18929                           intcon	equ	0xFF2
 18930                           postinc0	equ	0xFEE
 18931                           wreg	equ	0xFE8
 18932                           indf2	equ	0xFDF
 18933                           postinc2	equ	0xFDE
 18934                           postdec2	equ	0xFDD
 18935                           fsr2h	equ	0xFDA
 18936                           fsr2l	equ	0xFD9
 18937                           status	equ	0xFD8
 18938                           
 18939 ;; *************** function _SYSTEM_Initialize *****************
 18940 ;; Defined at:
 18941 ;;		line 50 in file "mcc_generated_files/mcc.c"
 18942 ;; Parameters:    Size  Location     Type
 18943 ;;		None
 18944 ;; Auto vars:     Size  Location     Type
 18945 ;;		None
 18946 ;; Return value:  Size  Location     Type
 18947 ;;                  1    wreg      void 
 18948 ;; Registers used:
 18949 ;;		wreg, status,2, status,0, cstack
 18950 ;; Tracked objects:
 18951 ;;		On entry : 0/0
 18952 ;;		On exit  : 0/0
 18953 ;;		Unchanged: 0/0
 18954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18959 ;;Total ram usage:        0 bytes
 18960 ;; Hardware stack levels used:    1
 18961 ;; Hardware stack levels required when called:   10
 18962 ;; This function calls:
 18963 ;;		_ADC_Initialize
 18964 ;;		_CCP5_Initialize
 18965 ;;		_EUSART1_Initialize
 18966 ;;		_EXT_INT_Initialize
 18967 ;;		_INTERRUPT_Initialize
 18968 ;;		_LORAWAN_PlatformInit
 18969 ;;		_OSCILLATOR_Initialize
 18970 ;;		_PIN_MANAGER_Initialize
 18971 ;;		_SPI2_Initialize
 18972 ;;		_TMR1_Initialize
 18973 ;;		_TMR5_Initialize
 18974 ;; This function is called by:
 18975 ;;		_main
 18976 ;; This function uses a non-reentrant model
 18977 ;;
 18978                           
 18979                           	psect	text105
 18980  00BA76                     __ptext105:
 18981                           	opt stack 0
 18982  00BA76                     _SYSTEM_Initialize:
 18983                           	opt stack 20
 18984                           
 18985                           ;mcc.c: 53: INTERRUPT_Initialize();
 18986                           
 18987                           ;incstack = 0
 18988  00BA76  EC6A  F063         	call	_INTERRUPT_Initialize	;wreg free
 18989                           
 18990                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 18991  00BA7A  ECC9  F057         	call	_PIN_MANAGER_Initialize	;wreg free
 18992                           
 18993                           ;mcc.c: 55: OSCILLATOR_Initialize();
 18994  00BA7E  EC71  F062         	call	_OSCILLATOR_Initialize	;wreg free
 18995                           
 18996                           ;mcc.c: 56: SPI2_Initialize();
 18997  00BA82  EC6A  F062         	call	_SPI2_Initialize	;wreg free
 18998                           
 18999                           ;mcc.c: 57: ADC_Initialize();
 19000  00BA86  EC57  F061         	call	_ADC_Initialize	;wreg free
 19001                           
 19002                           ;mcc.c: 58: CCP5_Initialize();
 19003  00BA8A  EC45  F062         	call	_CCP5_Initialize	;wreg free
 19004                           
 19005                           ;mcc.c: 59: TMR5_Initialize();
 19006  00BA8E  EC8C  F060         	call	_TMR5_Initialize	;wreg free
 19007                           
 19008                           ;mcc.c: 60: TMR1_Initialize();
 19009  00BA92  ECDC  F05D         	call	_TMR1_Initialize	;wreg free
 19010                           
 19011                           ;mcc.c: 61: EXT_INT_Initialize();
 19012  00BA96  ECF2  F05D         	call	_EXT_INT_Initialize	;wreg free
 19013                           
 19014                           ;mcc.c: 62: EUSART1_Initialize();
 19015  00BA9A  EC7F  F059         	call	_EUSART1_Initialize	;wreg free
 19016                           
 19017                           ;mcc.c: 63: LORAWAN_PlatformInit();
 19018  00BA9E  EC2B  F05F         	call	_LORAWAN_PlatformInit	;wreg free
 19019  00BAA2  0012               	return		;funcret
 19020  00BAA4                     __end_of_SYSTEM_Initialize:
 19021                           	opt stack 0
 19022                           tosu	equ	0xFFF
 19023                           tosh	equ	0xFFE
 19024                           tosl	equ	0xFFD
 19025                           pclath	equ	0xFFA
 19026                           tblptru	equ	0xFF8
 19027                           tblptrh	equ	0xFF7
 19028                           tblptrl	equ	0xFF6
 19029                           tablat	equ	0xFF5
 19030                           prodh	equ	0xFF4
 19031                           prodl	equ	0xFF3
 19032                           intcon	equ	0xFF2
 19033                           postinc0	equ	0xFEE
 19034                           wreg	equ	0xFE8
 19035                           indf2	equ	0xFDF
 19036                           postinc2	equ	0xFDE
 19037                           postdec2	equ	0xFDD
 19038                           fsr2h	equ	0xFDA
 19039                           fsr2l	equ	0xFD9
 19040                           status	equ	0xFD8
 19041                           
 19042 ;; *************** function _TMR5_Initialize *****************
 19043 ;; Defined at:
 19044 ;;		line 63 in file "mcc_generated_files/tmr5.c"
 19045 ;; Parameters:    Size  Location     Type
 19046 ;;		None
 19047 ;; Auto vars:     Size  Location     Type
 19048 ;;		None
 19049 ;; Return value:  Size  Location     Type
 19050 ;;                  1    wreg      void 
 19051 ;; Registers used:
 19052 ;;		wreg, status,2
 19053 ;; Tracked objects:
 19054 ;;		On entry : 0/0
 19055 ;;		On exit  : 0/0
 19056 ;;		Unchanged: 0/0
 19057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19062 ;;Total ram usage:        0 bytes
 19063 ;; Hardware stack levels used:    1
 19064 ;; Hardware stack levels required when called:    7
 19065 ;; This function calls:
 19066 ;;		Nothing
 19067 ;; This function is called by:
 19068 ;;		_SYSTEM_Initialize
 19069 ;; This function uses a non-reentrant model
 19070 ;;
 19071                           
 19072                           	psect	text106
 19073  00C118                     __ptext106:
 19074                           	opt stack 0
 19075  00C118                     _TMR5_Initialize:
 19076                           	opt stack 22
 19077                           
 19078                           ;tmr5.c: 68: T5GCON = 0x00;
 19079                           
 19080                           ;incstack = 0
 19081  00C118  0E00               	movlw	0
 19082  00C11A  010F               	movlb	15	; () banked
 19083  00C11C  6F4D               	movwf	77,b	;volatile
 19084                           
 19085                           ;tmr5.c: 71: TMR5H = 0x10;
 19086  00C11E  0E10               	movlw	16
 19087  00C120  6F50               	movwf	80,b	;volatile
 19088                           
 19089                           ;tmr5.c: 74: TMR5L = 0x00;
 19090  00C122  0E00               	movlw	0
 19091  00C124  6F4F               	movwf	79,b	;volatile
 19092                           
 19093                           ; BSR set to: 15
 19094                           ;tmr5.c: 77: timer5ReloadVal=TMR5;
 19095  00C126  CF4F F3F0          	movff	3919,_timer5ReloadVal	;volatile
 19096  00C12A  CF50 F3F1          	movff	3920,_timer5ReloadVal+1	;volatile
 19097                           
 19098                           ; BSR set to: 15
 19099                           ;tmr5.c: 80: PIR5bits.TMR5IF = 0;
 19100  00C12E  927E               	bcf	3966,1,c	;volatile
 19101                           
 19102                           ;tmr5.c: 83: T5CON = 0xBD;
 19103  00C130  0EBD               	movlw	189
 19104  00C132  6F4E               	movwf	78,b	;volatile
 19105                           
 19106                           ; BSR set to: 15
 19107  00C134  0012               	return		;funcret
 19108  00C136                     __end_of_TMR5_Initialize:
 19109                           	opt stack 0
 19110                           tosu	equ	0xFFF
 19111                           tosh	equ	0xFFE
 19112                           tosl	equ	0xFFD
 19113                           pclath	equ	0xFFA
 19114                           tblptru	equ	0xFF8
 19115                           tblptrh	equ	0xFF7
 19116                           tblptrl	equ	0xFF6
 19117                           tablat	equ	0xFF5
 19118                           prodh	equ	0xFF4
 19119                           prodl	equ	0xFF3
 19120                           intcon	equ	0xFF2
 19121                           postinc0	equ	0xFEE
 19122                           wreg	equ	0xFE8
 19123                           indf2	equ	0xFDF
 19124                           postinc2	equ	0xFDE
 19125                           postdec2	equ	0xFDD
 19126                           fsr2h	equ	0xFDA
 19127                           fsr2l	equ	0xFD9
 19128                           status	equ	0xFD8
 19129                           
 19130 ;; *************** function _TMR1_Initialize *****************
 19131 ;; Defined at:
 19132 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 19133 ;; Parameters:    Size  Location     Type
 19134 ;;		None
 19135 ;; Auto vars:     Size  Location     Type
 19136 ;;		None
 19137 ;; Return value:  Size  Location     Type
 19138 ;;                  1    wreg      void 
 19139 ;; Registers used:
 19140 ;;		wreg, status,2, status,0, cstack
 19141 ;; Tracked objects:
 19142 ;;		On entry : 0/0
 19143 ;;		On exit  : 0/0
 19144 ;;		Unchanged: 0/0
 19145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19150 ;;Total ram usage:        0 bytes
 19151 ;; Hardware stack levels used:    1
 19152 ;; Hardware stack levels required when called:    8
 19153 ;; This function calls:
 19154 ;;		_TMR1_SetInterruptHandler
 19155 ;; This function is called by:
 19156 ;;		_SYSTEM_Initialize
 19157 ;; This function uses a non-reentrant model
 19158 ;;
 19159                           
 19160                           	psect	text107
 19161  00BBB8                     __ptext107:
 19162                           	opt stack 0
 19163  00BBB8                     _TMR1_Initialize:
 19164                           	opt stack 21
 19165                           
 19166                           ;tmr1.c: 69: T1GCON = 0x00;
 19167                           
 19168                           ; BSR set to: 15
 19169                           ;incstack = 0
 19170  00BBB8  0E00               	movlw	0
 19171  00BBBA  6ECC               	movwf	4044,c	;volatile
 19172                           
 19173                           ;tmr1.c: 72: TMR1H = 0x00;
 19174  00BBBC  0E00               	movlw	0
 19175  00BBBE  6ECF               	movwf	4047,c	;volatile
 19176                           
 19177                           ;tmr1.c: 75: TMR1L = 0x00;
 19178  00BBC0  0E00               	movlw	0
 19179  00BBC2  6ECE               	movwf	4046,c	;volatile
 19180                           
 19181                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
 19182  00BBC4  CFCE F1F5          	movff	4046,_timer1ReloadVal	;volatile
 19183  00BBC8  CFCF F1F6          	movff	4047,_timer1ReloadVal+1	;volatile
 19184                           
 19185                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
 19186  00BBCC  909E               	bcf	3998,0,c	;volatile
 19187                           
 19188                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
 19189  00BBCE  809D               	bsf	3997,0,c	;volatile
 19190                           
 19191                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 19192  00BBD0  0EF4               	movlw	low _TMR1_DefaultInterruptHandler
 19193  00BBD2  0100               	movlb	0	; () banked
 19194  00BBD4  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 19195  00BBD6  0EC6               	movlw	high _TMR1_DefaultInterruptHandler
 19196  00BBD8  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19197  00BBDA  ECAB  F062         	call	_TMR1_SetInterruptHandler	;wreg free
 19198                           
 19199                           ;tmr1.c: 90: T1CON = 0x8D;
 19200  00BBDE  0E8D               	movlw	141
 19201  00BBE0  6ECD               	movwf	4045,c	;volatile
 19202  00BBE2  0012               	return		;funcret
 19203  00BBE4                     __end_of_TMR1_Initialize:
 19204                           	opt stack 0
 19205                           tosu	equ	0xFFF
 19206                           tosh	equ	0xFFE
 19207                           tosl	equ	0xFFD
 19208                           pclath	equ	0xFFA
 19209                           tblptru	equ	0xFF8
 19210                           tblptrh	equ	0xFF7
 19211                           tblptrl	equ	0xFF6
 19212                           tablat	equ	0xFF5
 19213                           prodh	equ	0xFF4
 19214                           prodl	equ	0xFF3
 19215                           intcon	equ	0xFF2
 19216                           postinc0	equ	0xFEE
 19217                           wreg	equ	0xFE8
 19218                           indf2	equ	0xFDF
 19219                           postinc2	equ	0xFDE
 19220                           postdec2	equ	0xFDD
 19221                           fsr2h	equ	0xFDA
 19222                           fsr2l	equ	0xFD9
 19223                           status	equ	0xFD8
 19224                           
 19225 ;; *************** function _SPI2_Initialize *****************
 19226 ;; Defined at:
 19227 ;;		line 65 in file "mcc_generated_files/spi2.c"
 19228 ;; Parameters:    Size  Location     Type
 19229 ;;		None
 19230 ;; Auto vars:     Size  Location     Type
 19231 ;;		None
 19232 ;; Return value:  Size  Location     Type
 19233 ;;                  1    wreg      void 
 19234 ;; Registers used:
 19235 ;;		wreg, status,2
 19236 ;; Tracked objects:
 19237 ;;		On entry : 0/0
 19238 ;;		On exit  : 0/0
 19239 ;;		Unchanged: 0/0
 19240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19245 ;;Total ram usage:        0 bytes
 19246 ;; Hardware stack levels used:    1
 19247 ;; Hardware stack levels required when called:    7
 19248 ;; This function calls:
 19249 ;;		Nothing
 19250 ;; This function is called by:
 19251 ;;		_SYSTEM_Initialize
 19252 ;; This function uses a non-reentrant model
 19253 ;;
 19254                           
 19255                           	psect	text108
 19256  00C4D4                     __ptext108:
 19257                           	opt stack 0
 19258  00C4D4                     _SPI2_Initialize:
 19259                           	opt stack 22
 19260                           
 19261                           ;spi2.c: 70: SSP2STAT = 0x40;
 19262                           
 19263                           ;incstack = 0
 19264  00C4D4  0E40               	movlw	64
 19265  00C4D6  6E6D               	movwf	3949,c	;volatile
 19266                           
 19267                           ;spi2.c: 73: SSP2CON1 = 0x20;
 19268  00C4D8  0E20               	movlw	32
 19269  00C4DA  6E6C               	movwf	3948,c	;volatile
 19270                           
 19271                           ;spi2.c: 76: SSP2ADD = 0x00;
 19272  00C4DC  0E00               	movlw	0
 19273  00C4DE  6E6E               	movwf	3950,c	;volatile
 19274  00C4E0  0012               	return		;funcret
 19275  00C4E2                     __end_of_SPI2_Initialize:
 19276                           	opt stack 0
 19277                           tosu	equ	0xFFF
 19278                           tosh	equ	0xFFE
 19279                           tosl	equ	0xFFD
 19280                           pclath	equ	0xFFA
 19281                           tblptru	equ	0xFF8
 19282                           tblptrh	equ	0xFF7
 19283                           tblptrl	equ	0xFF6
 19284                           tablat	equ	0xFF5
 19285                           prodh	equ	0xFF4
 19286                           prodl	equ	0xFF3
 19287                           intcon	equ	0xFF2
 19288                           postinc0	equ	0xFEE
 19289                           wreg	equ	0xFE8
 19290                           indf2	equ	0xFDF
 19291                           postinc2	equ	0xFDE
 19292                           postdec2	equ	0xFDD
 19293                           fsr2h	equ	0xFDA
 19294                           fsr2l	equ	0xFD9
 19295                           status	equ	0xFD8
 19296                           
 19297 ;; *************** function _PIN_MANAGER_Initialize *****************
 19298 ;; Defined at:
 19299 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 19300 ;; Parameters:    Size  Location     Type
 19301 ;;		None
 19302 ;; Auto vars:     Size  Location     Type
 19303 ;;		None
 19304 ;; Return value:  Size  Location     Type
 19305 ;;                  1    wreg      void 
 19306 ;; Registers used:
 19307 ;;		wreg, status,2, status,0, cstack
 19308 ;; Tracked objects:
 19309 ;;		On entry : 0/0
 19310 ;;		On exit  : 0/0
 19311 ;;		Unchanged: 0/0
 19312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19317 ;;Total ram usage:        0 bytes
 19318 ;; Hardware stack levels used:    1
 19319 ;; Hardware stack levels required when called:    8
 19320 ;; This function calls:
 19321 ;;		_IOCB4_SetInterruptHandler
 19322 ;; This function is called by:
 19323 ;;		_SYSTEM_Initialize
 19324 ;; This function uses a non-reentrant model
 19325 ;;
 19326                           
 19327                           	psect	text109
 19328  00AF92                     __ptext109:
 19329                           	opt stack 0
 19330  00AF92                     _PIN_MANAGER_Initialize:
 19331                           	opt stack 21
 19332                           
 19333                           ;pin_manager.c: 62: LATE = 0x00;
 19334                           
 19335                           ;incstack = 0
 19336  00AF92  0E00               	movlw	0
 19337  00AF94  6E8D               	movwf	3981,c	;volatile
 19338                           
 19339                           ;pin_manager.c: 63: LATD = 0x00;
 19340  00AF96  0E00               	movlw	0
 19341  00AF98  6E8C               	movwf	3980,c	;volatile
 19342                           
 19343                           ;pin_manager.c: 64: LATA = 0x00;
 19344  00AF9A  0E00               	movlw	0
 19345  00AF9C  6E89               	movwf	3977,c	;volatile
 19346                           
 19347                           ;pin_manager.c: 65: LATB = 0x00;
 19348  00AF9E  0E00               	movlw	0
 19349  00AFA0  6E8A               	movwf	3978,c	;volatile
 19350                           
 19351                           ;pin_manager.c: 66: LATC = 0x00;
 19352  00AFA2  0E00               	movlw	0
 19353  00AFA4  6E8B               	movwf	3979,c	;volatile
 19354                           
 19355                           ;pin_manager.c: 71: TRISE = 0x07;
 19356  00AFA6  0E07               	movlw	7
 19357  00AFA8  6E96               	movwf	3990,c	;volatile
 19358                           
 19359                           ;pin_manager.c: 72: TRISA = 0xFF;
 19360  00AFAA  6892               	setf	3986,c	;volatile
 19361                           
 19362                           ;pin_manager.c: 73: TRISB = 0xFF;
 19363  00AFAC  6893               	setf	3987,c	;volatile
 19364                           
 19365                           ;pin_manager.c: 74: TRISC = 0xBE;
 19366  00AFAE  0EBE               	movlw	190
 19367  00AFB0  6E94               	movwf	3988,c	;volatile
 19368                           
 19369                           ;pin_manager.c: 75: TRISD = 0xE6;
 19370  00AFB2  0EE6               	movlw	230
 19371  00AFB4  6E95               	movwf	3989,c	;volatile
 19372                           
 19373                           ;pin_manager.c: 80: ANSELD = 0xE4;
 19374  00AFB6  0EE4               	movlw	228
 19375  00AFB8  010F               	movlb	15	; () banked
 19376  00AFBA  6F3B               	movwf	59,b	;volatile
 19377                           
 19378                           ;pin_manager.c: 81: ANSELC = 0x20;
 19379  00AFBC  0E20               	movlw	32
 19380  00AFBE  6F3A               	movwf	58,b	;volatile
 19381                           
 19382                           ;pin_manager.c: 82: ANSELB = 0x28;
 19383  00AFC0  0E28               	movlw	40
 19384  00AFC2  6F39               	movwf	57,b	;volatile
 19385                           
 19386                           ;pin_manager.c: 83: ANSELE = 0x07;
 19387  00AFC4  0E07               	movlw	7
 19388  00AFC6  6F3C               	movwf	60,b	;volatile
 19389                           
 19390                           ;pin_manager.c: 84: ANSELA = 0x2F;
 19391  00AFC8  0E2F               	movlw	47
 19392  00AFCA  6F38               	movwf	56,b	;volatile
 19393                           
 19394                           ;pin_manager.c: 89: WPUB = 0x00;
 19395  00AFCC  0E00               	movlw	0
 19396  00AFCE  6E61               	movwf	3937,c	;volatile
 19397                           
 19398                           ; BSR set to: 15
 19399                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
 19400  00AFD0  8EF1               	bsf	intcon2,7,c	;volatile
 19401                           
 19402                           ; BSR set to: 15
 19403                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
 19404  00AFD2  8862               	bsf	3938,4,c	;volatile
 19405                           
 19406                           ; BSR set to: 15
 19407                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
 19408  00AFD4  0EF6               	movlw	low _IOCB4_DefaultInterruptHandler
 19409  00AFD6  0100               	movlb	0	; () banked
 19410  00AFD8  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 19411  00AFDA  0EC6               	movlw	high _IOCB4_DefaultInterruptHandler
 19412  00AFDC  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19413  00AFDE  ECB0  F062         	call	_IOCB4_SetInterruptHandler	;wreg free
 19414                           
 19415                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
 19416  00AFE2  86F2               	bsf	intcon,3,c	;volatile
 19417  00AFE4  0012               	return		;funcret
 19418  00AFE6                     __end_of_PIN_MANAGER_Initialize:
 19419                           	opt stack 0
 19420                           tosu	equ	0xFFF
 19421                           tosh	equ	0xFFE
 19422                           tosl	equ	0xFFD
 19423                           pclath	equ	0xFFA
 19424                           tblptru	equ	0xFF8
 19425                           tblptrh	equ	0xFF7
 19426                           tblptrl	equ	0xFF6
 19427                           tablat	equ	0xFF5
 19428                           prodh	equ	0xFF4
 19429                           prodl	equ	0xFF3
 19430                           intcon	equ	0xFF2
 19431                           intcon2	equ	0xFF1
 19432                           postinc0	equ	0xFEE
 19433                           wreg	equ	0xFE8
 19434                           indf2	equ	0xFDF
 19435                           postinc2	equ	0xFDE
 19436                           postdec2	equ	0xFDD
 19437                           fsr2h	equ	0xFDA
 19438                           fsr2l	equ	0xFD9
 19439                           status	equ	0xFD8
 19440                           
 19441 ;; *************** function _OSCILLATOR_Initialize *****************
 19442 ;; Defined at:
 19443 ;;		line 66 in file "mcc_generated_files/mcc.c"
 19444 ;; Parameters:    Size  Location     Type
 19445 ;;		None
 19446 ;; Auto vars:     Size  Location     Type
 19447 ;;		None
 19448 ;; Return value:  Size  Location     Type
 19449 ;;                  1    wreg      void 
 19450 ;; Registers used:
 19451 ;;		wreg, status,2
 19452 ;; Tracked objects:
 19453 ;;		On entry : 0/0
 19454 ;;		On exit  : 0/0
 19455 ;;		Unchanged: 0/0
 19456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19461 ;;Total ram usage:        0 bytes
 19462 ;; Hardware stack levels used:    1
 19463 ;; Hardware stack levels required when called:    7
 19464 ;; This function calls:
 19465 ;;		Nothing
 19466 ;; This function is called by:
 19467 ;;		_SYSTEM_Initialize
 19468 ;; This function uses a non-reentrant model
 19469 ;;
 19470                           
 19471                           	psect	text110
 19472  00C4E2                     __ptext110:
 19473                           	opt stack 0
 19474  00C4E2                     _OSCILLATOR_Initialize:
 19475                           	opt stack 22
 19476                           
 19477                           ;mcc.c: 69: OSCCON = 0x70;
 19478                           
 19479                           ;incstack = 0
 19480  00C4E2  0E70               	movlw	112
 19481  00C4E4  6ED3               	movwf	4051,c	;volatile
 19482                           
 19483                           ;mcc.c: 71: OSCCON2 = 0x14;
 19484  00C4E6  0E14               	movlw	20
 19485  00C4E8  6ED2               	movwf	4050,c	;volatile
 19486                           
 19487                           ;mcc.c: 73: OSCTUNE = 0x80;
 19488  00C4EA  0E80               	movlw	128
 19489  00C4EC  6E9B               	movwf	3995,c	;volatile
 19490  00C4EE  0012               	return		;funcret
 19491  00C4F0                     __end_of_OSCILLATOR_Initialize:
 19492                           	opt stack 0
 19493                           tosu	equ	0xFFF
 19494                           tosh	equ	0xFFE
 19495                           tosl	equ	0xFFD
 19496                           pclath	equ	0xFFA
 19497                           tblptru	equ	0xFF8
 19498                           tblptrh	equ	0xFF7
 19499                           tblptrl	equ	0xFF6
 19500                           tablat	equ	0xFF5
 19501                           prodh	equ	0xFF4
 19502                           prodl	equ	0xFF3
 19503                           intcon	equ	0xFF2
 19504                           intcon2	equ	0xFF1
 19505                           postinc0	equ	0xFEE
 19506                           wreg	equ	0xFE8
 19507                           indf2	equ	0xFDF
 19508                           postinc2	equ	0xFDE
 19509                           postdec2	equ	0xFDD
 19510                           fsr2h	equ	0xFDA
 19511                           fsr2l	equ	0xFD9
 19512                           status	equ	0xFD8
 19513                           
 19514 ;; *************** function _LORAWAN_PlatformInit *****************
 19515 ;; Defined at:
 19516 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 19517 ;; Parameters:    Size  Location     Type
 19518 ;;		None
 19519 ;; Auto vars:     Size  Location     Type
 19520 ;;		None
 19521 ;; Return value:  Size  Location     Type
 19522 ;;                  1    wreg      void 
 19523 ;; Registers used:
 19524 ;;		wreg, status,2, status,0, cstack
 19525 ;; Tracked objects:
 19526 ;;		On entry : 0/0
 19527 ;;		On exit  : 0/0
 19528 ;;		Unchanged: 0/0
 19529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19534 ;;Total ram usage:        0 bytes
 19535 ;; Hardware stack levels used:    1
 19536 ;; Hardware stack levels required when called:    9
 19537 ;; This function calls:
 19538 ;;		_DIO0_ISR_Lora_Init
 19539 ;;		_DIO1_ISR_Lora_Init
 19540 ;;		_DIO2_ISR_Lora_Init
 19541 ;;		_DIO3_ISR_Lora_Init
 19542 ;;		_DIO4_ISR_Lora_Init
 19543 ;;		_DIO5_ISR_Lora_Init
 19544 ;;		_SystemTimerInit
 19545 ;;		_TMR_ISR_Lora_Init
 19546 ;; This function is called by:
 19547 ;;		_SYSTEM_Initialize
 19548 ;; This function uses a non-reentrant model
 19549 ;;
 19550                           
 19551                           	psect	text111
 19552  00BE56                     __ptext111:
 19553                           	opt stack 0
 19554  00BE56                     _LORAWAN_PlatformInit:
 19555                           	opt stack 20
 19556                           
 19557                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
 19558                           
 19559                           ;incstack = 0
 19560  00BE56  EC25  F062         	call	_TMR_ISR_Lora_Init	;wreg free
 19561                           
 19562                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
 19563  00BE5A  EC3D  F062         	call	_DIO0_ISR_Lora_Init	;wreg free
 19564                           
 19565                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
 19566  00BE5E  EC35  F062         	call	_DIO1_ISR_Lora_Init	;wreg free
 19567                           
 19568                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
 19569  00BE62  EC2D  F062         	call	_DIO2_ISR_Lora_Init	;wreg free
 19570                           
 19571                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
 19572  00BE66  EC77  F063         	call	_DIO3_ISR_Lora_Init	;wreg free
 19573                           
 19574                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
 19575  00BE6A  EC76  F063         	call	_DIO4_ISR_Lora_Init	;wreg free
 19576                           
 19577                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
 19578  00BE6E  EC75  F063         	call	_DIO5_ISR_Lora_Init	;wreg free
 19579                           
 19580                           ;lorawan_init.c: 82: SystemTimerInit();
 19581  00BE72  EC2A  F063         	call	_SystemTimerInit	;wreg free
 19582  00BE76  0012               	return		;funcret
 19583  00BE78                     __end_of_LORAWAN_PlatformInit:
 19584                           	opt stack 0
 19585                           tosu	equ	0xFFF
 19586                           tosh	equ	0xFFE
 19587                           tosl	equ	0xFFD
 19588                           pclath	equ	0xFFA
 19589                           tblptru	equ	0xFF8
 19590                           tblptrh	equ	0xFF7
 19591                           tblptrl	equ	0xFF6
 19592                           tablat	equ	0xFF5
 19593                           prodh	equ	0xFF4
 19594                           prodl	equ	0xFF3
 19595                           intcon	equ	0xFF2
 19596                           intcon2	equ	0xFF1
 19597                           postinc0	equ	0xFEE
 19598                           wreg	equ	0xFE8
 19599                           indf2	equ	0xFDF
 19600                           postinc2	equ	0xFDE
 19601                           postdec2	equ	0xFDD
 19602                           fsr2h	equ	0xFDA
 19603                           fsr2l	equ	0xFD9
 19604                           status	equ	0xFD8
 19605                           
 19606 ;; *************** function _TMR_ISR_Lora_Init *****************
 19607 ;; Defined at:
 19608 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 19609 ;; Parameters:    Size  Location     Type
 19610 ;;		None
 19611 ;; Auto vars:     Size  Location     Type
 19612 ;;		None
 19613 ;; Return value:  Size  Location     Type
 19614 ;;                  1    wreg      void 
 19615 ;; Registers used:
 19616 ;;		wreg, status,2, status,0, cstack
 19617 ;; Tracked objects:
 19618 ;;		On entry : 0/0
 19619 ;;		On exit  : 0/0
 19620 ;;		Unchanged: 0/0
 19621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19626 ;;Total ram usage:        0 bytes
 19627 ;; Hardware stack levels used:    1
 19628 ;; Hardware stack levels required when called:    8
 19629 ;; This function calls:
 19630 ;;		_TMR1_SetInterruptHandler
 19631 ;; This function is called by:
 19632 ;;		_LORAWAN_PlatformInit
 19633 ;; This function uses a non-reentrant model
 19634 ;;
 19635                           
 19636                           	psect	text112
 19637  00C44A                     __ptext112:
 19638                           	opt stack 0
 19639  00C44A                     _TMR_ISR_Lora_Init:
 19640                           	opt stack 20
 19641                           
 19642                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
 19643                           
 19644                           ;incstack = 0
 19645  00C44A  0EE8               	movlw	low _TMR_ISR_lora
 19646  00C44C  0100               	movlb	0	; () banked
 19647  00C44E  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 19648  00C450  0EAE               	movlw	high _TMR_ISR_lora
 19649  00C452  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19650  00C454  ECAB  F062         	call	_TMR1_SetInterruptHandler	;wreg free
 19651  00C458  0012               	return		;funcret
 19652  00C45A                     __end_of_TMR_ISR_Lora_Init:
 19653                           	opt stack 0
 19654                           tosu	equ	0xFFF
 19655                           tosh	equ	0xFFE
 19656                           tosl	equ	0xFFD
 19657                           pclath	equ	0xFFA
 19658                           tblptru	equ	0xFF8
 19659                           tblptrh	equ	0xFF7
 19660                           tblptrl	equ	0xFF6
 19661                           tablat	equ	0xFF5
 19662                           prodh	equ	0xFF4
 19663                           prodl	equ	0xFF3
 19664                           intcon	equ	0xFF2
 19665                           intcon2	equ	0xFF1
 19666                           postinc0	equ	0xFEE
 19667                           wreg	equ	0xFE8
 19668                           indf2	equ	0xFDF
 19669                           postinc2	equ	0xFDE
 19670                           postdec2	equ	0xFDD
 19671                           fsr2h	equ	0xFDA
 19672                           fsr2l	equ	0xFD9
 19673                           status	equ	0xFD8
 19674                           
 19675 ;; *************** function _TMR1_SetInterruptHandler *****************
 19676 ;; Defined at:
 19677 ;;		line 179 in file "mcc_generated_files/tmr1.c"
 19678 ;; Parameters:    Size  Location     Type
 19679 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 19680 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
 19681 ;; Auto vars:     Size  Location     Type
 19682 ;;		None
 19683 ;; Return value:  Size  Location     Type
 19684 ;;                  1    wreg      void 
 19685 ;; Registers used:
 19686 ;;		wreg, status,2, status,0
 19687 ;; Tracked objects:
 19688 ;;		On entry : 0/0
 19689 ;;		On exit  : 0/0
 19690 ;;		Unchanged: 0/0
 19691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19695 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19696 ;;Total ram usage:        2 bytes
 19697 ;; Hardware stack levels used:    1
 19698 ;; Hardware stack levels required when called:    7
 19699 ;; This function calls:
 19700 ;;		Nothing
 19701 ;; This function is called by:
 19702 ;;		_TMR_ISR_Lora_Init
 19703 ;;		_TMR1_Initialize
 19704 ;; This function uses a non-reentrant model
 19705 ;;
 19706                           
 19707                           	psect	text113
 19708  00C556                     __ptext113:
 19709                           	opt stack 0
 19710  00C556                     _TMR1_SetInterruptHandler:
 19711                           	opt stack 21
 19712                           
 19713                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
 19714                           
 19715                           ;incstack = 0
 19716  00C556  C060  F3F8         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 19717  00C55A  C061  F3F9         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 19718  00C55E  0012               	return		;funcret
 19719  00C560                     __end_of_TMR1_SetInterruptHandler:
 19720                           	opt stack 0
 19721                           tosu	equ	0xFFF
 19722                           tosh	equ	0xFFE
 19723                           tosl	equ	0xFFD
 19724                           pclath	equ	0xFFA
 19725                           tblptru	equ	0xFF8
 19726                           tblptrh	equ	0xFF7
 19727                           tblptrl	equ	0xFF6
 19728                           tablat	equ	0xFF5
 19729                           prodh	equ	0xFF4
 19730                           prodl	equ	0xFF3
 19731                           intcon	equ	0xFF2
 19732                           intcon2	equ	0xFF1
 19733                           postinc0	equ	0xFEE
 19734                           wreg	equ	0xFE8
 19735                           indf2	equ	0xFDF
 19736                           postinc2	equ	0xFDE
 19737                           postdec2	equ	0xFDD
 19738                           fsr2h	equ	0xFDA
 19739                           fsr2l	equ	0xFD9
 19740                           status	equ	0xFD8
 19741                           
 19742 ;; *************** function _SystemTimerInit *****************
 19743 ;; Defined at:
 19744 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 19745 ;; Parameters:    Size  Location     Type
 19746 ;;		None
 19747 ;; Auto vars:     Size  Location     Type
 19748 ;;		None
 19749 ;; Return value:  Size  Location     Type
 19750 ;;                  1    wreg      void 
 19751 ;; Registers used:
 19752 ;;		wreg, status,2
 19753 ;; Tracked objects:
 19754 ;;		On entry : 0/0
 19755 ;;		On exit  : 0/0
 19756 ;;		Unchanged: 0/0
 19757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19762 ;;Total ram usage:        0 bytes
 19763 ;; Hardware stack levels used:    1
 19764 ;; Hardware stack levels required when called:    7
 19765 ;; This function calls:
 19766 ;;		Nothing
 19767 ;; This function is called by:
 19768 ;;		_LORAWAN_PlatformInit
 19769 ;; This function uses a non-reentrant model
 19770 ;;
 19771                           
 19772                           	psect	text114
 19773  00C654                     __ptext114:
 19774                           	opt stack 0
 19775  00C654                     _SystemTimerInit:
 19776                           	opt stack 21
 19777                           
 19778                           ;sw_timer.c: 137: allocatedTimers = 0;
 19779                           
 19780                           ;incstack = 0
 19781  00C654  0E00               	movlw	0
 19782  00C656  0100               	movlb	0	; () banked
 19783  00C658  6FFF               	movwf	_allocatedTimers& (0+255),b	;volatile
 19784                           
 19785                           ; BSR set to: 0
 19786  00C65A  0012               	return		;funcret
 19787  00C65C                     __end_of_SystemTimerInit:
 19788                           	opt stack 0
 19789                           tosu	equ	0xFFF
 19790                           tosh	equ	0xFFE
 19791                           tosl	equ	0xFFD
 19792                           pclath	equ	0xFFA
 19793                           tblptru	equ	0xFF8
 19794                           tblptrh	equ	0xFF7
 19795                           tblptrl	equ	0xFF6
 19796                           tablat	equ	0xFF5
 19797                           prodh	equ	0xFF4
 19798                           prodl	equ	0xFF3
 19799                           intcon	equ	0xFF2
 19800                           intcon2	equ	0xFF1
 19801                           postinc0	equ	0xFEE
 19802                           wreg	equ	0xFE8
 19803                           indf2	equ	0xFDF
 19804                           postinc2	equ	0xFDE
 19805                           postdec2	equ	0xFDD
 19806                           fsr2h	equ	0xFDA
 19807                           fsr2l	equ	0xFD9
 19808                           status	equ	0xFD8
 19809                           
 19810 ;; *************** function _DIO5_ISR_Lora_Init *****************
 19811 ;; Defined at:
 19812 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 19813 ;; Parameters:    Size  Location     Type
 19814 ;;		None
 19815 ;; Auto vars:     Size  Location     Type
 19816 ;;		None
 19817 ;; Return value:  Size  Location     Type
 19818 ;;                  1    wreg      void 
 19819 ;; Registers used:
 19820 ;;		None
 19821 ;; Tracked objects:
 19822 ;;		On entry : 0/0
 19823 ;;		On exit  : 0/0
 19824 ;;		Unchanged: 0/0
 19825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19830 ;;Total ram usage:        0 bytes
 19831 ;; Hardware stack levels used:    1
 19832 ;; Hardware stack levels required when called:    7
 19833 ;; This function calls:
 19834 ;;		Nothing
 19835 ;; This function is called by:
 19836 ;;		_LORAWAN_PlatformInit
 19837 ;; This function uses a non-reentrant model
 19838 ;;
 19839                           
 19840                           	psect	text115
 19841  00C6EA                     __ptext115:
 19842                           	opt stack 0
 19843  00C6EA                     _DIO5_ISR_Lora_Init:
 19844                           	opt stack 21
 19845                           
 19846                           ; BSR set to: 0
 19847                           ;incstack = 0
 19848  00C6EA  0012               	return		;funcret
 19849  00C6EC                     __end_of_DIO5_ISR_Lora_Init:
 19850                           	opt stack 0
 19851                           tosu	equ	0xFFF
 19852                           tosh	equ	0xFFE
 19853                           tosl	equ	0xFFD
 19854                           pclath	equ	0xFFA
 19855                           tblptru	equ	0xFF8
 19856                           tblptrh	equ	0xFF7
 19857                           tblptrl	equ	0xFF6
 19858                           tablat	equ	0xFF5
 19859                           prodh	equ	0xFF4
 19860                           prodl	equ	0xFF3
 19861                           intcon	equ	0xFF2
 19862                           intcon2	equ	0xFF1
 19863                           postinc0	equ	0xFEE
 19864                           wreg	equ	0xFE8
 19865                           indf2	equ	0xFDF
 19866                           postinc2	equ	0xFDE
 19867                           postdec2	equ	0xFDD
 19868                           fsr2h	equ	0xFDA
 19869                           fsr2l	equ	0xFD9
 19870                           status	equ	0xFD8
 19871                           
 19872 ;; *************** function _DIO4_ISR_Lora_Init *****************
 19873 ;; Defined at:
 19874 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 19875 ;; Parameters:    Size  Location     Type
 19876 ;;		None
 19877 ;; Auto vars:     Size  Location     Type
 19878 ;;		None
 19879 ;; Return value:  Size  Location     Type
 19880 ;;                  1    wreg      void 
 19881 ;; Registers used:
 19882 ;;		None
 19883 ;; Tracked objects:
 19884 ;;		On entry : 0/0
 19885 ;;		On exit  : 0/0
 19886 ;;		Unchanged: 0/0
 19887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19892 ;;Total ram usage:        0 bytes
 19893 ;; Hardware stack levels used:    1
 19894 ;; Hardware stack levels required when called:    7
 19895 ;; This function calls:
 19896 ;;		Nothing
 19897 ;; This function is called by:
 19898 ;;		_LORAWAN_PlatformInit
 19899 ;; This function uses a non-reentrant model
 19900 ;;
 19901                           
 19902                           	psect	text116
 19903  00C6EC                     __ptext116:
 19904                           	opt stack 0
 19905  00C6EC                     _DIO4_ISR_Lora_Init:
 19906                           	opt stack 21
 19907                           
 19908                           ;incstack = 0
 19909  00C6EC  0012               	return		;funcret
 19910  00C6EE                     __end_of_DIO4_ISR_Lora_Init:
 19911                           	opt stack 0
 19912                           tosu	equ	0xFFF
 19913                           tosh	equ	0xFFE
 19914                           tosl	equ	0xFFD
 19915                           pclath	equ	0xFFA
 19916                           tblptru	equ	0xFF8
 19917                           tblptrh	equ	0xFF7
 19918                           tblptrl	equ	0xFF6
 19919                           tablat	equ	0xFF5
 19920                           prodh	equ	0xFF4
 19921                           prodl	equ	0xFF3
 19922                           intcon	equ	0xFF2
 19923                           intcon2	equ	0xFF1
 19924                           postinc0	equ	0xFEE
 19925                           wreg	equ	0xFE8
 19926                           indf2	equ	0xFDF
 19927                           postinc2	equ	0xFDE
 19928                           postdec2	equ	0xFDD
 19929                           fsr2h	equ	0xFDA
 19930                           fsr2l	equ	0xFD9
 19931                           status	equ	0xFD8
 19932                           
 19933 ;; *************** function _DIO3_ISR_Lora_Init *****************
 19934 ;; Defined at:
 19935 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 19936 ;; Parameters:    Size  Location     Type
 19937 ;;		None
 19938 ;; Auto vars:     Size  Location     Type
 19939 ;;		None
 19940 ;; Return value:  Size  Location     Type
 19941 ;;                  1    wreg      void 
 19942 ;; Registers used:
 19943 ;;		None
 19944 ;; Tracked objects:
 19945 ;;		On entry : 0/0
 19946 ;;		On exit  : 0/0
 19947 ;;		Unchanged: 0/0
 19948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19953 ;;Total ram usage:        0 bytes
 19954 ;; Hardware stack levels used:    1
 19955 ;; Hardware stack levels required when called:    7
 19956 ;; This function calls:
 19957 ;;		Nothing
 19958 ;; This function is called by:
 19959 ;;		_LORAWAN_PlatformInit
 19960 ;; This function uses a non-reentrant model
 19961 ;;
 19962                           
 19963                           	psect	text117
 19964  00C6EE                     __ptext117:
 19965                           	opt stack 0
 19966  00C6EE                     _DIO3_ISR_Lora_Init:
 19967                           	opt stack 21
 19968                           
 19969                           ;incstack = 0
 19970  00C6EE  0012               	return		;funcret
 19971  00C6F0                     __end_of_DIO3_ISR_Lora_Init:
 19972                           	opt stack 0
 19973                           tosu	equ	0xFFF
 19974                           tosh	equ	0xFFE
 19975                           tosl	equ	0xFFD
 19976                           pclath	equ	0xFFA
 19977                           tblptru	equ	0xFF8
 19978                           tblptrh	equ	0xFF7
 19979                           tblptrl	equ	0xFF6
 19980                           tablat	equ	0xFF5
 19981                           prodh	equ	0xFF4
 19982                           prodl	equ	0xFF3
 19983                           intcon	equ	0xFF2
 19984                           intcon2	equ	0xFF1
 19985                           postinc0	equ	0xFEE
 19986                           wreg	equ	0xFE8
 19987                           indf2	equ	0xFDF
 19988                           postinc2	equ	0xFDE
 19989                           postdec2	equ	0xFDD
 19990                           fsr2h	equ	0xFDA
 19991                           fsr2l	equ	0xFD9
 19992                           status	equ	0xFD8
 19993                           
 19994 ;; *************** function _DIO2_ISR_Lora_Init *****************
 19995 ;; Defined at:
 19996 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 19997 ;; Parameters:    Size  Location     Type
 19998 ;;		None
 19999 ;; Auto vars:     Size  Location     Type
 20000 ;;		None
 20001 ;; Return value:  Size  Location     Type
 20002 ;;                  1    wreg      void 
 20003 ;; Registers used:
 20004 ;;		wreg, status,2, status,0, cstack
 20005 ;; Tracked objects:
 20006 ;;		On entry : 0/0
 20007 ;;		On exit  : 0/0
 20008 ;;		Unchanged: 0/0
 20009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20014 ;;Total ram usage:        0 bytes
 20015 ;; Hardware stack levels used:    1
 20016 ;; Hardware stack levels required when called:    8
 20017 ;; This function calls:
 20018 ;;		_IOCB4_SetInterruptHandler
 20019 ;; This function is called by:
 20020 ;;		_LORAWAN_PlatformInit
 20021 ;; This function uses a non-reentrant model
 20022 ;;
 20023                           
 20024                           	psect	text118
 20025  00C45A                     __ptext118:
 20026                           	opt stack 0
 20027  00C45A                     _DIO2_ISR_Lora_Init:
 20028                           	opt stack 20
 20029                           
 20030                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
 20031                           
 20032                           ;incstack = 0
 20033  00C45A  0E8A               	movlw	low _DIO2_ISR_Lora
 20034  00C45C  0100               	movlb	0	; () banked
 20035  00C45E  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 20036  00C460  0EC6               	movlw	high _DIO2_ISR_Lora
 20037  00C462  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20038  00C464  ECB0  F062         	call	_IOCB4_SetInterruptHandler	;wreg free
 20039  00C468  0012               	return		;funcret
 20040  00C46A                     __end_of_DIO2_ISR_Lora_Init:
 20041                           	opt stack 0
 20042                           tosu	equ	0xFFF
 20043                           tosh	equ	0xFFE
 20044                           tosl	equ	0xFFD
 20045                           pclath	equ	0xFFA
 20046                           tblptru	equ	0xFF8
 20047                           tblptrh	equ	0xFF7
 20048                           tblptrl	equ	0xFF6
 20049                           tablat	equ	0xFF5
 20050                           prodh	equ	0xFF4
 20051                           prodl	equ	0xFF3
 20052                           intcon	equ	0xFF2
 20053                           intcon2	equ	0xFF1
 20054                           postinc0	equ	0xFEE
 20055                           wreg	equ	0xFE8
 20056                           indf2	equ	0xFDF
 20057                           postinc2	equ	0xFDE
 20058                           postdec2	equ	0xFDD
 20059                           fsr2h	equ	0xFDA
 20060                           fsr2l	equ	0xFD9
 20061                           status	equ	0xFD8
 20062                           
 20063 ;; *************** function _IOCB4_SetInterruptHandler *****************
 20064 ;; Defined at:
 20065 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
 20066 ;; Parameters:    Size  Location     Type
 20067 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 20068 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
 20069 ;; Auto vars:     Size  Location     Type
 20070 ;;		None
 20071 ;; Return value:  Size  Location     Type
 20072 ;;                  1    wreg      void 
 20073 ;; Registers used:
 20074 ;;		wreg, status,2, status,0
 20075 ;; Tracked objects:
 20076 ;;		On entry : 0/0
 20077 ;;		On exit  : 0/0
 20078 ;;		Unchanged: 0/0
 20079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20083 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20084 ;;Total ram usage:        2 bytes
 20085 ;; Hardware stack levels used:    1
 20086 ;; Hardware stack levels required when called:    7
 20087 ;; This function calls:
 20088 ;;		Nothing
 20089 ;; This function is called by:
 20090 ;;		_DIO2_ISR_Lora_Init
 20091 ;;		_PIN_MANAGER_Initialize
 20092 ;; This function uses a non-reentrant model
 20093 ;;
 20094                           
 20095                           	psect	text119
 20096  00C560                     __ptext119:
 20097                           	opt stack 0
 20098  00C560                     _IOCB4_SetInterruptHandler:
 20099                           	opt stack 21
 20100                           
 20101                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
 20102                           
 20103                           ;incstack = 0
 20104  00C560  C060  F3FA         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 20105  00C564  C061  F3FB         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 20106  00C568  0012               	return		;funcret
 20107  00C56A                     __end_of_IOCB4_SetInterruptHandler:
 20108                           	opt stack 0
 20109                           tosu	equ	0xFFF
 20110                           tosh	equ	0xFFE
 20111                           tosl	equ	0xFFD
 20112                           pclath	equ	0xFFA
 20113                           tblptru	equ	0xFF8
 20114                           tblptrh	equ	0xFF7
 20115                           tblptrl	equ	0xFF6
 20116                           tablat	equ	0xFF5
 20117                           prodh	equ	0xFF4
 20118                           prodl	equ	0xFF3
 20119                           intcon	equ	0xFF2
 20120                           intcon2	equ	0xFF1
 20121                           postinc0	equ	0xFEE
 20122                           wreg	equ	0xFE8
 20123                           indf2	equ	0xFDF
 20124                           postinc2	equ	0xFDE
 20125                           postdec2	equ	0xFDD
 20126                           fsr2h	equ	0xFDA
 20127                           fsr2l	equ	0xFD9
 20128                           status	equ	0xFD8
 20129                           
 20130 ;; *************** function _DIO1_ISR_Lora_Init *****************
 20131 ;; Defined at:
 20132 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 20133 ;; Parameters:    Size  Location     Type
 20134 ;;		None
 20135 ;; Auto vars:     Size  Location     Type
 20136 ;;		None
 20137 ;; Return value:  Size  Location     Type
 20138 ;;                  1    wreg      void 
 20139 ;; Registers used:
 20140 ;;		wreg, status,2, status,0, cstack
 20141 ;; Tracked objects:
 20142 ;;		On entry : 0/0
 20143 ;;		On exit  : 0/0
 20144 ;;		Unchanged: 0/0
 20145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20150 ;;Total ram usage:        0 bytes
 20151 ;; Hardware stack levels used:    1
 20152 ;; Hardware stack levels required when called:    8
 20153 ;; This function calls:
 20154 ;;		_INT2_SetInterruptHandler
 20155 ;; This function is called by:
 20156 ;;		_LORAWAN_PlatformInit
 20157 ;; This function uses a non-reentrant model
 20158 ;;
 20159                           
 20160                           	psect	text120
 20161  00C46A                     __ptext120:
 20162                           	opt stack 0
 20163  00C46A                     _DIO1_ISR_Lora_Init:
 20164                           	opt stack 20
 20165                           
 20166                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
 20167                           
 20168                           ;incstack = 0
 20169  00C46A  0E90               	movlw	low _DIO1_ISR_Lora
 20170  00C46C  0100               	movlb	0	; () banked
 20171  00C46E  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 20172  00C470  0EC6               	movlw	high _DIO1_ISR_Lora
 20173  00C472  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20174  00C474  ECB5  F062         	call	_INT2_SetInterruptHandler	;wreg free
 20175  00C478  0012               	return		;funcret
 20176  00C47A                     __end_of_DIO1_ISR_Lora_Init:
 20177                           	opt stack 0
 20178                           tosu	equ	0xFFF
 20179                           tosh	equ	0xFFE
 20180                           tosl	equ	0xFFD
 20181                           pclath	equ	0xFFA
 20182                           tblptru	equ	0xFF8
 20183                           tblptrh	equ	0xFF7
 20184                           tblptrl	equ	0xFF6
 20185                           tablat	equ	0xFF5
 20186                           prodh	equ	0xFF4
 20187                           prodl	equ	0xFF3
 20188                           intcon	equ	0xFF2
 20189                           intcon2	equ	0xFF1
 20190                           postinc0	equ	0xFEE
 20191                           wreg	equ	0xFE8
 20192                           indf2	equ	0xFDF
 20193                           postinc2	equ	0xFDE
 20194                           postdec2	equ	0xFDD
 20195                           fsr2h	equ	0xFDA
 20196                           fsr2l	equ	0xFD9
 20197                           status	equ	0xFD8
 20198                           
 20199 ;; *************** function _DIO0_ISR_Lora_Init *****************
 20200 ;; Defined at:
 20201 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 20202 ;; Parameters:    Size  Location     Type
 20203 ;;		None
 20204 ;; Auto vars:     Size  Location     Type
 20205 ;;		None
 20206 ;; Return value:  Size  Location     Type
 20207 ;;                  1    wreg      void 
 20208 ;; Registers used:
 20209 ;;		wreg, status,2, status,0, cstack
 20210 ;; Tracked objects:
 20211 ;;		On entry : 0/0
 20212 ;;		On exit  : 0/0
 20213 ;;		Unchanged: 0/0
 20214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20219 ;;Total ram usage:        0 bytes
 20220 ;; Hardware stack levels used:    1
 20221 ;; Hardware stack levels required when called:    8
 20222 ;; This function calls:
 20223 ;;		_INT1_SetInterruptHandler
 20224 ;; This function is called by:
 20225 ;;		_LORAWAN_PlatformInit
 20226 ;; This function uses a non-reentrant model
 20227 ;;
 20228                           
 20229                           	psect	text121
 20230  00C47A                     __ptext121:
 20231                           	opt stack 0
 20232  00C47A                     _DIO0_ISR_Lora_Init:
 20233                           	opt stack 20
 20234                           
 20235                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
 20236                           
 20237                           ;incstack = 0
 20238  00C47A  0E96               	movlw	low _DIO0_ISR_Lora
 20239  00C47C  0100               	movlb	0	; () banked
 20240  00C47E  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 20241  00C480  0EC6               	movlw	high _DIO0_ISR_Lora
 20242  00C482  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20243  00C484  ECBA  F062         	call	_INT1_SetInterruptHandler	;wreg free
 20244  00C488  0012               	return		;funcret
 20245  00C48A                     __end_of_DIO0_ISR_Lora_Init:
 20246                           	opt stack 0
 20247                           tosu	equ	0xFFF
 20248                           tosh	equ	0xFFE
 20249                           tosl	equ	0xFFD
 20250                           pclath	equ	0xFFA
 20251                           tblptru	equ	0xFF8
 20252                           tblptrh	equ	0xFF7
 20253                           tblptrl	equ	0xFF6
 20254                           tablat	equ	0xFF5
 20255                           prodh	equ	0xFF4
 20256                           prodl	equ	0xFF3
 20257                           intcon	equ	0xFF2
 20258                           intcon2	equ	0xFF1
 20259                           postinc0	equ	0xFEE
 20260                           wreg	equ	0xFE8
 20261                           indf2	equ	0xFDF
 20262                           postinc2	equ	0xFDE
 20263                           postdec2	equ	0xFDD
 20264                           fsr2h	equ	0xFDA
 20265                           fsr2l	equ	0xFD9
 20266                           status	equ	0xFD8
 20267                           
 20268 ;; *************** function _INTERRUPT_Initialize *****************
 20269 ;; Defined at:
 20270 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 20271 ;; Parameters:    Size  Location     Type
 20272 ;;		None
 20273 ;; Auto vars:     Size  Location     Type
 20274 ;;		None
 20275 ;; Return value:  Size  Location     Type
 20276 ;;                  1    wreg      void 
 20277 ;; Registers used:
 20278 ;;		None
 20279 ;; Tracked objects:
 20280 ;;		On entry : 0/0
 20281 ;;		On exit  : 0/0
 20282 ;;		Unchanged: 0/0
 20283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20288 ;;Total ram usage:        0 bytes
 20289 ;; Hardware stack levels used:    1
 20290 ;; Hardware stack levels required when called:    7
 20291 ;; This function calls:
 20292 ;;		Nothing
 20293 ;; This function is called by:
 20294 ;;		_SYSTEM_Initialize
 20295 ;; This function uses a non-reentrant model
 20296 ;;
 20297                           
 20298                           	psect	text122
 20299  00C6D4                     __ptext122:
 20300                           	opt stack 0
 20301  00C6D4                     _INTERRUPT_Initialize:
 20302                           	opt stack 22
 20303                           
 20304                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
 20305                           
 20306                           ;incstack = 0
 20307  00C6D4  9ED0               	bcf	4048,7,c	;volatile
 20308  00C6D6  0012               	return		;funcret
 20309  00C6D8                     __end_of_INTERRUPT_Initialize:
 20310                           	opt stack 0
 20311                           tosu	equ	0xFFF
 20312                           tosh	equ	0xFFE
 20313                           tosl	equ	0xFFD
 20314                           pclath	equ	0xFFA
 20315                           tblptru	equ	0xFF8
 20316                           tblptrh	equ	0xFF7
 20317                           tblptrl	equ	0xFF6
 20318                           tablat	equ	0xFF5
 20319                           prodh	equ	0xFF4
 20320                           prodl	equ	0xFF3
 20321                           intcon	equ	0xFF2
 20322                           intcon2	equ	0xFF1
 20323                           postinc0	equ	0xFEE
 20324                           wreg	equ	0xFE8
 20325                           indf2	equ	0xFDF
 20326                           postinc2	equ	0xFDE
 20327                           postdec2	equ	0xFDD
 20328                           fsr2h	equ	0xFDA
 20329                           fsr2l	equ	0xFD9
 20330                           status	equ	0xFD8
 20331                           
 20332 ;; *************** function _EXT_INT_Initialize *****************
 20333 ;; Defined at:
 20334 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 20335 ;; Parameters:    Size  Location     Type
 20336 ;;		None
 20337 ;; Auto vars:     Size  Location     Type
 20338 ;;		None
 20339 ;; Return value:  Size  Location     Type
 20340 ;;                  1    wreg      void 
 20341 ;; Registers used:
 20342 ;;		wreg, status,2, status,0, cstack
 20343 ;; Tracked objects:
 20344 ;;		On entry : 0/0
 20345 ;;		On exit  : 0/0
 20346 ;;		Unchanged: 0/0
 20347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20352 ;;Total ram usage:        0 bytes
 20353 ;; Hardware stack levels used:    1
 20354 ;; Hardware stack levels required when called:    8
 20355 ;; This function calls:
 20356 ;;		_INT1_SetInterruptHandler
 20357 ;;		_INT2_SetInterruptHandler
 20358 ;; This function is called by:
 20359 ;;		_SYSTEM_Initialize
 20360 ;; This function uses a non-reentrant model
 20361 ;;
 20362                           
 20363                           	psect	text123
 20364  00BBE4                     __ptext123:
 20365                           	opt stack 0
 20366  00BBE4                     _EXT_INT_Initialize:
 20367                           	opt stack 21
 20368                           
 20369                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
 20370                           
 20371                           ;incstack = 0
 20372  00BBE4  90F0               	bcf	intcon3,0,c	;volatile
 20373                           
 20374                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
 20375  00BBE6  8AF1               	bsf	intcon2,5,c	;volatile
 20376                           
 20377                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 20378  00BBE8  0EFA               	movlw	low _INT1_DefaultInterruptHandler
 20379  00BBEA  0100               	movlb	0	; () banked
 20380  00BBEC  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 20381  00BBEE  0EC6               	movlw	high _INT1_DefaultInterruptHandler
 20382  00BBF0  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20383  00BBF2  ECBA  F062         	call	_INT1_SetInterruptHandler	;wreg free
 20384                           
 20385                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
 20386  00BBF6  86F0               	bsf	intcon3,3,c	;volatile
 20387                           
 20388                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
 20389  00BBF8  92F0               	bcf	intcon3,1,c	;volatile
 20390                           
 20391                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
 20392  00BBFA  88F1               	bsf	intcon2,4,c	;volatile
 20393                           
 20394                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
 20395  00BBFC  0EF8               	movlw	low _INT2_DefaultInterruptHandler
 20396  00BBFE  0100               	movlb	0	; () banked
 20397  00BC00  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 20398  00BC02  0EC6               	movlw	high _INT2_DefaultInterruptHandler
 20399  00BC04  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20400  00BC06  ECB5  F062         	call	_INT2_SetInterruptHandler	;wreg free
 20401                           
 20402                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
 20403  00BC0A  88F0               	bsf	intcon3,4,c	;volatile
 20404  00BC0C  0012               	return		;funcret
 20405  00BC0E                     __end_of_EXT_INT_Initialize:
 20406                           	opt stack 0
 20407                           tosu	equ	0xFFF
 20408                           tosh	equ	0xFFE
 20409                           tosl	equ	0xFFD
 20410                           pclath	equ	0xFFA
 20411                           tblptru	equ	0xFF8
 20412                           tblptrh	equ	0xFF7
 20413                           tblptrl	equ	0xFF6
 20414                           tablat	equ	0xFF5
 20415                           prodh	equ	0xFF4
 20416                           prodl	equ	0xFF3
 20417                           intcon	equ	0xFF2
 20418                           intcon2	equ	0xFF1
 20419                           intcon3	equ	0xFF0
 20420                           postinc0	equ	0xFEE
 20421                           wreg	equ	0xFE8
 20422                           indf2	equ	0xFDF
 20423                           postinc2	equ	0xFDE
 20424                           postdec2	equ	0xFDD
 20425                           fsr2h	equ	0xFDA
 20426                           fsr2l	equ	0xFD9
 20427                           status	equ	0xFD8
 20428                           
 20429 ;; *************** function _INT2_SetInterruptHandler *****************
 20430 ;; Defined at:
 20431 ;;		line 77 in file "mcc_generated_files/ext_int.c"
 20432 ;; Parameters:    Size  Location     Type
 20433 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 20434 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
 20435 ;; Auto vars:     Size  Location     Type
 20436 ;;		None
 20437 ;; Return value:  Size  Location     Type
 20438 ;;                  1    wreg      void 
 20439 ;; Registers used:
 20440 ;;		wreg, status,2, status,0
 20441 ;; Tracked objects:
 20442 ;;		On entry : 0/0
 20443 ;;		On exit  : 0/0
 20444 ;;		Unchanged: 0/0
 20445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20449 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20450 ;;Total ram usage:        2 bytes
 20451 ;; Hardware stack levels used:    1
 20452 ;; Hardware stack levels required when called:    7
 20453 ;; This function calls:
 20454 ;;		Nothing
 20455 ;; This function is called by:
 20456 ;;		_DIO1_ISR_Lora_Init
 20457 ;;		_EXT_INT_Initialize
 20458 ;; This function uses a non-reentrant model
 20459 ;;
 20460                           
 20461                           	psect	text124
 20462  00C56A                     __ptext124:
 20463                           	opt stack 0
 20464  00C56A                     _INT2_SetInterruptHandler:
 20465                           	opt stack 20
 20466                           
 20467                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
 20468                           
 20469                           ;incstack = 0
 20470  00C56A  C060  F2FD         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 20471  00C56E  C061  F2FE         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 20472  00C572  0012               	return		;funcret
 20473  00C574                     __end_of_INT2_SetInterruptHandler:
 20474                           	opt stack 0
 20475                           tosu	equ	0xFFF
 20476                           tosh	equ	0xFFE
 20477                           tosl	equ	0xFFD
 20478                           pclath	equ	0xFFA
 20479                           tblptru	equ	0xFF8
 20480                           tblptrh	equ	0xFF7
 20481                           tblptrl	equ	0xFF6
 20482                           tablat	equ	0xFF5
 20483                           prodh	equ	0xFF4
 20484                           prodl	equ	0xFF3
 20485                           intcon	equ	0xFF2
 20486                           intcon2	equ	0xFF1
 20487                           intcon3	equ	0xFF0
 20488                           postinc0	equ	0xFEE
 20489                           wreg	equ	0xFE8
 20490                           indf2	equ	0xFDF
 20491                           postinc2	equ	0xFDE
 20492                           postdec2	equ	0xFDD
 20493                           fsr2h	equ	0xFDA
 20494                           fsr2l	equ	0xFD9
 20495                           status	equ	0xFD8
 20496                           
 20497 ;; *************** function _INT1_SetInterruptHandler *****************
 20498 ;; Defined at:
 20499 ;;		line 51 in file "mcc_generated_files/ext_int.c"
 20500 ;; Parameters:    Size  Location     Type
 20501 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 20502 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
 20503 ;; Auto vars:     Size  Location     Type
 20504 ;;		None
 20505 ;; Return value:  Size  Location     Type
 20506 ;;                  1    wreg      void 
 20507 ;; Registers used:
 20508 ;;		wreg, status,2, status,0
 20509 ;; Tracked objects:
 20510 ;;		On entry : 0/0
 20511 ;;		On exit  : 0/0
 20512 ;;		Unchanged: 0/0
 20513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20517 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20518 ;;Total ram usage:        2 bytes
 20519 ;; Hardware stack levels used:    1
 20520 ;; Hardware stack levels required when called:    7
 20521 ;; This function calls:
 20522 ;;		Nothing
 20523 ;; This function is called by:
 20524 ;;		_DIO0_ISR_Lora_Init
 20525 ;;		_EXT_INT_Initialize
 20526 ;; This function uses a non-reentrant model
 20527 ;;
 20528                           
 20529                           	psect	text125
 20530  00C574                     __ptext125:
 20531                           	opt stack 0
 20532  00C574                     _INT1_SetInterruptHandler:
 20533                           	opt stack 20
 20534                           
 20535                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
 20536                           
 20537                           ;incstack = 0
 20538  00C574  C060  F1F7         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 20539  00C578  C061  F1F8         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 20540  00C57C  0012               	return		;funcret
 20541  00C57E                     __end_of_INT1_SetInterruptHandler:
 20542                           	opt stack 0
 20543                           tosu	equ	0xFFF
 20544                           tosh	equ	0xFFE
 20545                           tosl	equ	0xFFD
 20546                           pclath	equ	0xFFA
 20547                           tblptru	equ	0xFF8
 20548                           tblptrh	equ	0xFF7
 20549                           tblptrl	equ	0xFF6
 20550                           tablat	equ	0xFF5
 20551                           prodh	equ	0xFF4
 20552                           prodl	equ	0xFF3
 20553                           intcon	equ	0xFF2
 20554                           intcon2	equ	0xFF1
 20555                           intcon3	equ	0xFF0
 20556                           postinc0	equ	0xFEE
 20557                           wreg	equ	0xFE8
 20558                           indf2	equ	0xFDF
 20559                           postinc2	equ	0xFDE
 20560                           postdec2	equ	0xFDD
 20561                           fsr2h	equ	0xFDA
 20562                           fsr2l	equ	0xFD9
 20563                           status	equ	0xFD8
 20564                           
 20565 ;; *************** function _EUSART1_Initialize *****************
 20566 ;; Defined at:
 20567 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 20568 ;; Parameters:    Size  Location     Type
 20569 ;;		None
 20570 ;; Auto vars:     Size  Location     Type
 20571 ;;		None
 20572 ;; Return value:  Size  Location     Type
 20573 ;;                  1    wreg      void 
 20574 ;; Registers used:
 20575 ;;		wreg, status,2, status,0, cstack
 20576 ;; Tracked objects:
 20577 ;;		On entry : 0/0
 20578 ;;		On exit  : 0/0
 20579 ;;		Unchanged: 0/0
 20580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20585 ;;Total ram usage:        0 bytes
 20586 ;; Hardware stack levels used:    1
 20587 ;; Hardware stack levels required when called:    8
 20588 ;; This function calls:
 20589 ;;		_EUSART1_SetErrorHandler
 20590 ;;		_EUSART1_SetFramingErrorHandler
 20591 ;;		_EUSART1_SetOverrunErrorHandler
 20592 ;; This function is called by:
 20593 ;;		_SYSTEM_Initialize
 20594 ;; This function uses a non-reentrant model
 20595 ;;
 20596                           
 20597                           	psect	text126
 20598  00B2FE                     __ptext126:
 20599                           	opt stack 0
 20600  00B2FE                     _EUSART1_Initialize:
 20601                           	opt stack 21
 20602                           
 20603                           ;eusart1.c: 71: BAUDCON1 = 0x08;
 20604                           
 20605                           ;incstack = 0
 20606  00B2FE  0E08               	movlw	8
 20607  00B300  6EB8               	movwf	4024,c	;volatile
 20608                           
 20609                           ;eusart1.c: 74: RCSTA1 = 0x90;
 20610  00B302  0E90               	movlw	144
 20611  00B304  6EAB               	movwf	4011,c	;volatile
 20612                           
 20613                           ;eusart1.c: 77: TXSTA1 = 0x24;
 20614  00B306  0E24               	movlw	36
 20615  00B308  6EAC               	movwf	4012,c	;volatile
 20616                           
 20617                           ;eusart1.c: 80: SPBRG1 = 0xA0;
 20618  00B30A  0EA0               	movlw	160
 20619  00B30C  6EAF               	movwf	4015,c	;volatile
 20620                           
 20621                           ;eusart1.c: 83: SPBRGH1 = 0x01;
 20622  00B30E  0E01               	movlw	1
 20623  00B310  6EB0               	movwf	4016,c	;volatile
 20624                           
 20625                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
 20626  00B312  0E00               	movlw	0
 20627  00B314  0100               	movlb	0	; () banked
 20628  00B316  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 20629  00B318  0E00               	movlw	0
 20630  00B31A  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 20631  00B31C  ECC4  F062         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 20632                           
 20633                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
 20634  00B320  0E00               	movlw	0
 20635  00B322  0100               	movlb	0	; () banked
 20636  00B324  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 20637  00B326  0E00               	movlw	0
 20638  00B328  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 20639  00B32A  ECBF  F062         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 20640                           
 20641                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
 20642  00B32E  0E00               	movlw	0
 20643  00B330  0100               	movlb	0	; () banked
 20644  00B332  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 20645  00B334  0E00               	movlw	0
 20646  00B336  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 20647  00B338  ECC9  F062         	call	_EUSART1_SetErrorHandler	;wreg free
 20648                           
 20649                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
 20650  00B33C  0E00               	movlw	0
 20651  00B33E  0101               	movlb	1	; () banked
 20652  00B340  6F31               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 20653                           
 20654                           ; BSR set to: 1
 20655  00B342  0012               	return		;funcret
 20656  00B344                     __end_of_EUSART1_Initialize:
 20657                           	opt stack 0
 20658                           tosu	equ	0xFFF
 20659                           tosh	equ	0xFFE
 20660                           tosl	equ	0xFFD
 20661                           pclath	equ	0xFFA
 20662                           tblptru	equ	0xFF8
 20663                           tblptrh	equ	0xFF7
 20664                           tblptrl	equ	0xFF6
 20665                           tablat	equ	0xFF5
 20666                           prodh	equ	0xFF4
 20667                           prodl	equ	0xFF3
 20668                           intcon	equ	0xFF2
 20669                           intcon2	equ	0xFF1
 20670                           intcon3	equ	0xFF0
 20671                           postinc0	equ	0xFEE
 20672                           wreg	equ	0xFE8
 20673                           indf2	equ	0xFDF
 20674                           postinc2	equ	0xFDE
 20675                           postdec2	equ	0xFDD
 20676                           fsr2h	equ	0xFDA
 20677                           fsr2l	equ	0xFD9
 20678                           status	equ	0xFD8
 20679                           
 20680 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 20681 ;; Defined at:
 20682 ;;		line 172 in file "mcc_generated_files/eusart1.c"
 20683 ;; Parameters:    Size  Location     Type
 20684 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 20685 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 20686 ;; Auto vars:     Size  Location     Type
 20687 ;;		None
 20688 ;; Return value:  Size  Location     Type
 20689 ;;                  1    wreg      void 
 20690 ;; Registers used:
 20691 ;;		wreg, status,2, status,0
 20692 ;; Tracked objects:
 20693 ;;		On entry : 0/0
 20694 ;;		On exit  : 0/0
 20695 ;;		Unchanged: 0/0
 20696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20697 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20700 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20701 ;;Total ram usage:        2 bytes
 20702 ;; Hardware stack levels used:    1
 20703 ;; Hardware stack levels required when called:    7
 20704 ;; This function calls:
 20705 ;;		Nothing
 20706 ;; This function is called by:
 20707 ;;		_EUSART1_Initialize
 20708 ;; This function uses a non-reentrant model
 20709 ;;
 20710                           
 20711                           	psect	text127
 20712  00C57E                     __ptext127:
 20713                           	opt stack 0
 20714  00C57E                     _EUSART1_SetOverrunErrorHandler:
 20715                           	opt stack 21
 20716                           
 20717                           ;eusart1.c: 173: EUSART1_OverrunErrorHandler = interruptHandler;
 20718                           
 20719                           ; BSR set to: 1
 20720                           ;incstack = 0
 20721  00C57E  C060  F3F4         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 20722  00C582  C061  F3F5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 20723  00C586  0012               	return		;funcret
 20724  00C588                     __end_of_EUSART1_SetOverrunErrorHandler:
 20725                           	opt stack 0
 20726                           tosu	equ	0xFFF
 20727                           tosh	equ	0xFFE
 20728                           tosl	equ	0xFFD
 20729                           pclath	equ	0xFFA
 20730                           tblptru	equ	0xFF8
 20731                           tblptrh	equ	0xFF7
 20732                           tblptrl	equ	0xFF6
 20733                           tablat	equ	0xFF5
 20734                           prodh	equ	0xFF4
 20735                           prodl	equ	0xFF3
 20736                           intcon	equ	0xFF2
 20737                           intcon2	equ	0xFF1
 20738                           intcon3	equ	0xFF0
 20739                           postinc0	equ	0xFEE
 20740                           wreg	equ	0xFE8
 20741                           indf2	equ	0xFDF
 20742                           postinc2	equ	0xFDE
 20743                           postdec2	equ	0xFDD
 20744                           fsr2h	equ	0xFDA
 20745                           fsr2l	equ	0xFD9
 20746                           status	equ	0xFD8
 20747                           
 20748 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 20749 ;; Defined at:
 20750 ;;		line 168 in file "mcc_generated_files/eusart1.c"
 20751 ;; Parameters:    Size  Location     Type
 20752 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 20753 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 20754 ;; Auto vars:     Size  Location     Type
 20755 ;;		None
 20756 ;; Return value:  Size  Location     Type
 20757 ;;                  1    wreg      void 
 20758 ;; Registers used:
 20759 ;;		wreg, status,2, status,0
 20760 ;; Tracked objects:
 20761 ;;		On entry : 0/0
 20762 ;;		On exit  : 0/0
 20763 ;;		Unchanged: 0/0
 20764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20765 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20768 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20769 ;;Total ram usage:        2 bytes
 20770 ;; Hardware stack levels used:    1
 20771 ;; Hardware stack levels required when called:    7
 20772 ;; This function calls:
 20773 ;;		Nothing
 20774 ;; This function is called by:
 20775 ;;		_EUSART1_Initialize
 20776 ;; This function uses a non-reentrant model
 20777 ;;
 20778                           
 20779                           	psect	text128
 20780  00C588                     __ptext128:
 20781                           	opt stack 0
 20782  00C588                     _EUSART1_SetFramingErrorHandler:
 20783                           	opt stack 21
 20784                           
 20785                           ;eusart1.c: 169: EUSART1_FramingErrorHandler = interruptHandler;
 20786                           
 20787                           ;incstack = 0
 20788  00C588  C060  F3F6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 20789  00C58C  C061  F3F7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 20790  00C590  0012               	return		;funcret
 20791  00C592                     __end_of_EUSART1_SetFramingErrorHandler:
 20792                           	opt stack 0
 20793                           tosu	equ	0xFFF
 20794                           tosh	equ	0xFFE
 20795                           tosl	equ	0xFFD
 20796                           pclath	equ	0xFFA
 20797                           tblptru	equ	0xFF8
 20798                           tblptrh	equ	0xFF7
 20799                           tblptrl	equ	0xFF6
 20800                           tablat	equ	0xFF5
 20801                           prodh	equ	0xFF4
 20802                           prodl	equ	0xFF3
 20803                           intcon	equ	0xFF2
 20804                           intcon2	equ	0xFF1
 20805                           intcon3	equ	0xFF0
 20806                           postinc0	equ	0xFEE
 20807                           wreg	equ	0xFE8
 20808                           indf2	equ	0xFDF
 20809                           postinc2	equ	0xFDE
 20810                           postdec2	equ	0xFDD
 20811                           fsr2h	equ	0xFDA
 20812                           fsr2l	equ	0xFD9
 20813                           status	equ	0xFD8
 20814                           
 20815 ;; *************** function _EUSART1_SetErrorHandler *****************
 20816 ;; Defined at:
 20817 ;;		line 176 in file "mcc_generated_files/eusart1.c"
 20818 ;; Parameters:    Size  Location     Type
 20819 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 20820 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 20821 ;; Auto vars:     Size  Location     Type
 20822 ;;		None
 20823 ;; Return value:  Size  Location     Type
 20824 ;;                  1    wreg      void 
 20825 ;; Registers used:
 20826 ;;		wreg, status,2, status,0
 20827 ;; Tracked objects:
 20828 ;;		On entry : 0/0
 20829 ;;		On exit  : 0/0
 20830 ;;		Unchanged: 0/0
 20831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20835 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20836 ;;Total ram usage:        2 bytes
 20837 ;; Hardware stack levels used:    1
 20838 ;; Hardware stack levels required when called:    7
 20839 ;; This function calls:
 20840 ;;		Nothing
 20841 ;; This function is called by:
 20842 ;;		_EUSART1_Initialize
 20843 ;; This function uses a non-reentrant model
 20844 ;;
 20845                           
 20846                           	psect	text129
 20847  00C592                     __ptext129:
 20848                           	opt stack 0
 20849  00C592                     _EUSART1_SetErrorHandler:
 20850                           	opt stack 21
 20851                           
 20852                           ;eusart1.c: 177: EUSART1_ErrorHandler = interruptHandler;
 20853                           
 20854                           ;incstack = 0
 20855  00C592  C060  F3F2         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 20856  00C596  C061  F3F3         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 20857  00C59A  0012               	return		;funcret
 20858  00C59C                     __end_of_EUSART1_SetErrorHandler:
 20859                           	opt stack 0
 20860                           tosu	equ	0xFFF
 20861                           tosh	equ	0xFFE
 20862                           tosl	equ	0xFFD
 20863                           pclath	equ	0xFFA
 20864                           tblptru	equ	0xFF8
 20865                           tblptrh	equ	0xFF7
 20866                           tblptrl	equ	0xFF6
 20867                           tablat	equ	0xFF5
 20868                           prodh	equ	0xFF4
 20869                           prodl	equ	0xFF3
 20870                           intcon	equ	0xFF2
 20871                           intcon2	equ	0xFF1
 20872                           intcon3	equ	0xFF0
 20873                           postinc0	equ	0xFEE
 20874                           wreg	equ	0xFE8
 20875                           indf2	equ	0xFDF
 20876                           postinc2	equ	0xFDE
 20877                           postdec2	equ	0xFDD
 20878                           fsr2h	equ	0xFDA
 20879                           fsr2l	equ	0xFD9
 20880                           status	equ	0xFD8
 20881                           
 20882 ;; *************** function _CCP5_Initialize *****************
 20883 ;; Defined at:
 20884 ;;		line 49 in file "mcc_generated_files/ccp5.c"
 20885 ;; Parameters:    Size  Location     Type
 20886 ;;		None
 20887 ;; Auto vars:     Size  Location     Type
 20888 ;;		None
 20889 ;; Return value:  Size  Location     Type
 20890 ;;                  1    wreg      void 
 20891 ;; Registers used:
 20892 ;;		wreg, status,2
 20893 ;; Tracked objects:
 20894 ;;		On entry : 0/0
 20895 ;;		On exit  : 0/0
 20896 ;;		Unchanged: 0/0
 20897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20902 ;;Total ram usage:        0 bytes
 20903 ;; Hardware stack levels used:    1
 20904 ;; Hardware stack levels required when called:    7
 20905 ;; This function calls:
 20906 ;;		Nothing
 20907 ;; This function is called by:
 20908 ;;		_SYSTEM_Initialize
 20909 ;; This function uses a non-reentrant model
 20910 ;;
 20911                           
 20912                           	psect	text130
 20913  00C48A                     __ptext130:
 20914                           	opt stack 0
 20915  00C48A                     _CCP5_Initialize:
 20916                           	opt stack 22
 20917                           
 20918                           ;ccp5.c: 53: CCP5CON = 0x00;
 20919                           
 20920                           ;incstack = 0
 20921  00C48A  0E00               	movlw	0
 20922  00C48C  010F               	movlb	15	; () banked
 20923  00C48E  6F54               	movwf	84,b	;volatile
 20924                           
 20925                           ;ccp5.c: 56: CCPR5L = 0x00;
 20926  00C490  0E00               	movlw	0
 20927  00C492  6F55               	movwf	85,b	;volatile
 20928                           
 20929                           ;ccp5.c: 59: CCPR5H = 0x00;
 20930  00C494  0E00               	movlw	0
 20931  00C496  6F56               	movwf	86,b	;volatile
 20932                           
 20933                           ; BSR set to: 15
 20934  00C498  0012               	return		;funcret
 20935  00C49A                     __end_of_CCP5_Initialize:
 20936                           	opt stack 0
 20937                           tosu	equ	0xFFF
 20938                           tosh	equ	0xFFE
 20939                           tosl	equ	0xFFD
 20940                           pclath	equ	0xFFA
 20941                           tblptru	equ	0xFF8
 20942                           tblptrh	equ	0xFF7
 20943                           tblptrl	equ	0xFF6
 20944                           tablat	equ	0xFF5
 20945                           prodh	equ	0xFF4
 20946                           prodl	equ	0xFF3
 20947                           intcon	equ	0xFF2
 20948                           intcon2	equ	0xFF1
 20949                           intcon3	equ	0xFF0
 20950                           postinc0	equ	0xFEE
 20951                           wreg	equ	0xFE8
 20952                           indf2	equ	0xFDF
 20953                           postinc2	equ	0xFDE
 20954                           postdec2	equ	0xFDD
 20955                           fsr2h	equ	0xFDA
 20956                           fsr2l	equ	0xFD9
 20957                           status	equ	0xFD8
 20958                           
 20959 ;; *************** function _ADC_Initialize *****************
 20960 ;; Defined at:
 20961 ;;		line 60 in file "mcc_generated_files/adc.c"
 20962 ;; Parameters:    Size  Location     Type
 20963 ;;		None
 20964 ;; Auto vars:     Size  Location     Type
 20965 ;;		None
 20966 ;; Return value:  Size  Location     Type
 20967 ;;                  1    wreg      void 
 20968 ;; Registers used:
 20969 ;;		wreg, status,2
 20970 ;; Tracked objects:
 20971 ;;		On entry : 0/0
 20972 ;;		On exit  : 0/0
 20973 ;;		Unchanged: 0/0
 20974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20979 ;;Total ram usage:        0 bytes
 20980 ;; Hardware stack levels used:    1
 20981 ;; Hardware stack levels required when called:    7
 20982 ;; This function calls:
 20983 ;;		Nothing
 20984 ;; This function is called by:
 20985 ;;		_SYSTEM_Initialize
 20986 ;; This function uses a non-reentrant model
 20987 ;;
 20988                           
 20989                           	psect	text131
 20990  00C2AE                     __ptext131:
 20991                           	opt stack 0
 20992  00C2AE                     _ADC_Initialize:
 20993                           	opt stack 22
 20994                           
 20995                           ;adc.c: 65: ADCON0 = 0x01;
 20996                           
 20997                           ; BSR set to: 15
 20998                           ;incstack = 0
 20999  00C2AE  0E01               	movlw	1
 21000  00C2B0  6EC2               	movwf	4034,c	;volatile
 21001                           
 21002                           ;adc.c: 68: ADCON1 = 0x00;
 21003  00C2B2  0E00               	movlw	0
 21004  00C2B4  6EC1               	movwf	4033,c	;volatile
 21005                           
 21006                           ;adc.c: 71: ADCON2 = 0x85;
 21007  00C2B6  0E85               	movlw	133
 21008  00C2B8  6EC0               	movwf	4032,c	;volatile
 21009                           
 21010                           ;adc.c: 74: ADRESL = 0x00;
 21011  00C2BA  0E00               	movlw	0
 21012  00C2BC  6EC3               	movwf	4035,c	;volatile
 21013                           
 21014                           ;adc.c: 77: ADRESH = 0x00;
 21015  00C2BE  0E00               	movlw	0
 21016  00C2C0  6EC4               	movwf	4036,c	;volatile
 21017  00C2C2  0012               	return		;funcret
 21018  00C2C4                     __end_of_ADC_Initialize:
 21019                           	opt stack 0
 21020                           tosu	equ	0xFFF
 21021                           tosh	equ	0xFFE
 21022                           tosl	equ	0xFFD
 21023                           pclath	equ	0xFFA
 21024                           tblptru	equ	0xFF8
 21025                           tblptrh	equ	0xFF7
 21026                           tblptrl	equ	0xFF6
 21027                           tablat	equ	0xFF5
 21028                           prodh	equ	0xFF4
 21029                           prodl	equ	0xFF3
 21030                           intcon	equ	0xFF2
 21031                           intcon2	equ	0xFF1
 21032                           intcon3	equ	0xFF0
 21033                           postinc0	equ	0xFEE
 21034                           wreg	equ	0xFE8
 21035                           indf2	equ	0xFDF
 21036                           postinc2	equ	0xFDE
 21037                           postdec2	equ	0xFDD
 21038                           fsr2h	equ	0xFDA
 21039                           fsr2l	equ	0xFD9
 21040                           status	equ	0xFD8
 21041                           
 21042 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
 21043 ;; Defined at:
 21044 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21045 ;; Parameters:    Size  Location     Type
 21046 ;;  networkSessi    2   11[BANK0 ] PTR unsigned char 
 21047 ;;		 -> nwkSessionKey(16), 
 21048 ;; Auto vars:     Size  Location     Type
 21049 ;;		None
 21050 ;; Return value:  Size  Location     Type
 21051 ;;                  1    wreg      void 
 21052 ;; Registers used:
 21053 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21054 ;; Tracked objects:
 21055 ;;		On entry : 0/0
 21056 ;;		On exit  : 0/0
 21057 ;;		Unchanged: 0/0
 21058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21059 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21062 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21063 ;;Total ram usage:        2 bytes
 21064 ;; Hardware stack levels used:    1
 21065 ;; Hardware stack levels required when called:    8
 21066 ;; This function calls:
 21067 ;;		_memcpy
 21068 ;; This function is called by:
 21069 ;;		_main
 21070 ;; This function uses a non-reentrant model
 21071 ;;
 21072                           
 21073                           	psect	text132
 21074  00BAA4                     __ptext132:
 21075                           	opt stack 0
 21076  00BAA4                     _LORAWAN_SetNetworkSessionKey:
 21077                           	opt stack 22
 21078                           
 21079                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
 21080                           
 21081                           ;incstack = 0
 21082  00BAA4  0100               	movlb	0	; () banked
 21083  00BAA6  516B               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
 21084  00BAA8  116C               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
 21085  00BAAA  B4D8               	btfsc	status,2,c
 21086  00BAAC  0012               	return	
 21087                           
 21088                           ; BSR set to: 0
 21089                           ;lorawan.c: 382: {
 21090                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
 21091  00BAAE  0E26               	movlw	low (_loRa+34)
 21092  00BAB0  6F60               	movwf	memcpy@d1& (0+255),b
 21093  00BAB2  0E02               	movlw	high (_loRa+34)
 21094  00BAB4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21095  00BAB6  C06B  F062         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
 21096  00BABA  C06C  F063         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
 21097  00BABE  0E00               	movlw	0
 21098  00BAC0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21099  00BAC2  0E10               	movlw	16
 21100  00BAC4  6F64               	movwf	memcpy@n& (0+255),b
 21101  00BAC6  ECAB  F055         	call	_memcpy	;wreg free
 21102                           
 21103                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
 21104  00BACA  0102               	movlb	2	; () banked
 21105  00BACC  89A9               	bsf	(_loRa+165)& (0+255),4,b
 21106                           
 21107                           ; BSR set to: 2
 21108                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
 21109  00BACE  9906               	bcf	(_loRa+2)& (0+255),4,b
 21110  00BAD0  0012               	return	
 21111  00BAD2                     __end_of_LORAWAN_SetNetworkSessionKey:
 21112                           	opt stack 0
 21113                           tosu	equ	0xFFF
 21114                           tosh	equ	0xFFE
 21115                           tosl	equ	0xFFD
 21116                           pclath	equ	0xFFA
 21117                           tblptru	equ	0xFF8
 21118                           tblptrh	equ	0xFF7
 21119                           tblptrl	equ	0xFF6
 21120                           tablat	equ	0xFF5
 21121                           prodh	equ	0xFF4
 21122                           prodl	equ	0xFF3
 21123                           intcon	equ	0xFF2
 21124                           intcon2	equ	0xFF1
 21125                           intcon3	equ	0xFF0
 21126                           postinc0	equ	0xFEE
 21127                           wreg	equ	0xFE8
 21128                           indf2	equ	0xFDF
 21129                           postinc2	equ	0xFDE
 21130                           postdec2	equ	0xFDD
 21131                           fsr2h	equ	0xFDA
 21132                           fsr2l	equ	0xFD9
 21133                           status	equ	0xFD8
 21134                           
 21135 ;; *************** function _LORAWAN_SetDeviceEui *****************
 21136 ;; Defined at:
 21137 ;;		line 337 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21138 ;; Parameters:    Size  Location     Type
 21139 ;;  deviceEuiNew    2   11[BANK0 ] PTR unsigned char 
 21140 ;;		 -> deviceEUI(8), 
 21141 ;; Auto vars:     Size  Location     Type
 21142 ;;		None
 21143 ;; Return value:  Size  Location     Type
 21144 ;;                  1    wreg      void 
 21145 ;; Registers used:
 21146 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21147 ;; Tracked objects:
 21148 ;;		On entry : 0/0
 21149 ;;		On exit  : 0/0
 21150 ;;		Unchanged: 0/0
 21151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21152 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21155 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21156 ;;Total ram usage:        2 bytes
 21157 ;; Hardware stack levels used:    1
 21158 ;; Hardware stack levels required when called:    8
 21159 ;; This function calls:
 21160 ;;		_memcpy
 21161 ;; This function is called by:
 21162 ;;		_main
 21163 ;; This function uses a non-reentrant model
 21164 ;;
 21165                           
 21166                           	psect	text133
 21167  00BAD2                     __ptext133:
 21168                           	opt stack 0
 21169  00BAD2                     _LORAWAN_SetDeviceEui:
 21170                           	opt stack 22
 21171                           
 21172                           ;lorawan.c: 339: if (deviceEuiNew != (0))
 21173                           
 21174                           ;incstack = 0
 21175  00BAD2  0100               	movlb	0	; () banked
 21176  00BAD4  516B               	movf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),w,b
 21177  00BAD6  116C               	iorwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),w,b
 21178  00BAD8  B4D8               	btfsc	status,2,c
 21179  00BADA  0012               	return	
 21180                           
 21181                           ; BSR set to: 0
 21182                           ;lorawan.c: 340: {
 21183                           ;lorawan.c: 341: memcpy(loRa.activationParameters.deviceEui.buffer, deviceEuiNew, sizeof
      +                          (loRa.activationParameters.deviceEui) );
 21184  00BADC  0E5E               	movlw	low (_loRa+90)
 21185  00BADE  6F60               	movwf	memcpy@d1& (0+255),b
 21186  00BAE0  0E02               	movlw	high (_loRa+90)
 21187  00BAE2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21188  00BAE4  C06B  F062         	movff	LORAWAN_SetDeviceEui@deviceEuiNew,memcpy@s1
 21189  00BAE8  C06C  F063         	movff	LORAWAN_SetDeviceEui@deviceEuiNew+1,memcpy@s1+1
 21190  00BAEC  0E00               	movlw	0
 21191  00BAEE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21192  00BAF0  0E08               	movlw	8
 21193  00BAF2  6F64               	movwf	memcpy@n& (0+255),b
 21194  00BAF4  ECAB  F055         	call	_memcpy	;wreg free
 21195                           
 21196                           ;lorawan.c: 342: loRa.macKeys.deviceEui = 1;
 21197  00BAF8  0102               	movlb	2	; () banked
 21198  00BAFA  81A9               	bsf	(_loRa+165)& (0+255),0,b
 21199                           
 21200                           ; BSR set to: 2
 21201                           ;lorawan.c: 343: loRa.macStatus.networkJoined = 0;
 21202  00BAFC  9906               	bcf	(_loRa+2)& (0+255),4,b
 21203  00BAFE  0012               	return	
 21204  00BB00                     __end_of_LORAWAN_SetDeviceEui:
 21205                           	opt stack 0
 21206                           tosu	equ	0xFFF
 21207                           tosh	equ	0xFFE
 21208                           tosl	equ	0xFFD
 21209                           pclath	equ	0xFFA
 21210                           tblptru	equ	0xFF8
 21211                           tblptrh	equ	0xFF7
 21212                           tblptrl	equ	0xFF6
 21213                           tablat	equ	0xFF5
 21214                           prodh	equ	0xFF4
 21215                           prodl	equ	0xFF3
 21216                           intcon	equ	0xFF2
 21217                           intcon2	equ	0xFF1
 21218                           intcon3	equ	0xFF0
 21219                           postinc0	equ	0xFEE
 21220                           wreg	equ	0xFE8
 21221                           indf2	equ	0xFDF
 21222                           postinc2	equ	0xFDE
 21223                           postdec2	equ	0xFDD
 21224                           fsr2h	equ	0xFDA
 21225                           fsr2l	equ	0xFD9
 21226                           status	equ	0xFD8
 21227                           
 21228 ;; *************** function _LORAWAN_SetDeviceAddress *****************
 21229 ;; Defined at:
 21230 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21231 ;; Parameters:    Size  Location     Type
 21232 ;;  deviceAddres    4    0[BANK0 ] unsigned long 
 21233 ;; Auto vars:     Size  Location     Type
 21234 ;;		None
 21235 ;; Return value:  Size  Location     Type
 21236 ;;                  1    wreg      void 
 21237 ;; Registers used:
 21238 ;;		None
 21239 ;; Tracked objects:
 21240 ;;		On entry : 0/0
 21241 ;;		On exit  : 0/0
 21242 ;;		Unchanged: 0/0
 21243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21244 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21247 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21248 ;;Total ram usage:        4 bytes
 21249 ;; Hardware stack levels used:    1
 21250 ;; Hardware stack levels required when called:    7
 21251 ;; This function calls:
 21252 ;;		Nothing
 21253 ;; This function is called by:
 21254 ;;		_main
 21255 ;; This function uses a non-reentrant model
 21256 ;;
 21257                           
 21258                           	psect	text134
 21259  00C224                     __ptext134:
 21260                           	opt stack 0
 21261  00C224                     _LORAWAN_SetDeviceAddress:
 21262                           	opt stack 23
 21263                           
 21264                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
 21265                           
 21266                           ;incstack = 0
 21267  00C224  C060  F222         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
 21268  00C228  C061  F223         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
 21269  00C22C  C062  F224         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
 21270  00C230  C063  F225         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
 21271                           
 21272                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
 21273  00C234  0102               	movlb	2	; () banked
 21274  00C236  85A9               	bsf	(_loRa+165)& (0+255),2,b
 21275                           
 21276                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
 21277  00C238  9906               	bcf	(_loRa+2)& (0+255),4,b
 21278                           
 21279                           ; BSR set to: 2
 21280  00C23A  0012               	return		;funcret
 21281  00C23C                     __end_of_LORAWAN_SetDeviceAddress:
 21282                           	opt stack 0
 21283                           tosu	equ	0xFFF
 21284                           tosh	equ	0xFFE
 21285                           tosl	equ	0xFFD
 21286                           pclath	equ	0xFFA
 21287                           tblptru	equ	0xFF8
 21288                           tblptrh	equ	0xFF7
 21289                           tblptrl	equ	0xFF6
 21290                           tablat	equ	0xFF5
 21291                           prodh	equ	0xFF4
 21292                           prodl	equ	0xFF3
 21293                           intcon	equ	0xFF2
 21294                           intcon2	equ	0xFF1
 21295                           intcon3	equ	0xFF0
 21296                           postinc0	equ	0xFEE
 21297                           wreg	equ	0xFE8
 21298                           indf2	equ	0xFDF
 21299                           postinc2	equ	0xFDE
 21300                           postdec2	equ	0xFDD
 21301                           fsr2h	equ	0xFDA
 21302                           fsr2l	equ	0xFD9
 21303                           status	equ	0xFD8
 21304                           
 21305 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
 21306 ;; Defined at:
 21307 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21308 ;; Parameters:    Size  Location     Type
 21309 ;;  applicationS    2   11[BANK0 ] PTR unsigned char 
 21310 ;;		 -> appSessionKey(16), 
 21311 ;; Auto vars:     Size  Location     Type
 21312 ;;		None
 21313 ;; Return value:  Size  Location     Type
 21314 ;;                  1    wreg      void 
 21315 ;; Registers used:
 21316 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21317 ;; Tracked objects:
 21318 ;;		On entry : 0/0
 21319 ;;		On exit  : 0/0
 21320 ;;		Unchanged: 0/0
 21321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21325 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21326 ;;Total ram usage:        2 bytes
 21327 ;; Hardware stack levels used:    1
 21328 ;; Hardware stack levels required when called:    8
 21329 ;; This function calls:
 21330 ;;		_memcpy
 21331 ;; This function is called by:
 21332 ;;		_main
 21333 ;; This function uses a non-reentrant model
 21334 ;;
 21335                           
 21336                           	psect	text135
 21337  00BB00                     __ptext135:
 21338                           	opt stack 0
 21339  00BB00                     _LORAWAN_SetApplicationSessionKey:
 21340                           	opt stack 22
 21341                           
 21342                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
 21343                           
 21344                           ; BSR set to: 2
 21345                           ;incstack = 0
 21346  00BB00  0100               	movlb	0	; () banked
 21347  00BB02  516B               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
 21348  00BB04  116C               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
 21349  00BB06  B4D8               	btfsc	status,2,c
 21350  00BB08  0012               	return	
 21351                           
 21352                           ; BSR set to: 0
 21353                           ;lorawan.c: 397: {
 21354                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
 21355  00BB0A  0E36               	movlw	low (_loRa+50)
 21356  00BB0C  6F60               	movwf	memcpy@d1& (0+255),b
 21357  00BB0E  0E02               	movlw	high (_loRa+50)
 21358  00BB10  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21359  00BB12  C06B  F062         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
 21360  00BB16  C06C  F063         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
 21361  00BB1A  0E00               	movlw	0
 21362  00BB1C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21363  00BB1E  0E10               	movlw	16
 21364  00BB20  6F64               	movwf	memcpy@n& (0+255),b
 21365  00BB22  ECAB  F055         	call	_memcpy	;wreg free
 21366                           
 21367                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
 21368  00BB26  0102               	movlb	2	; () banked
 21369  00BB28  8BA9               	bsf	(_loRa+165)& (0+255),5,b
 21370                           
 21371                           ; BSR set to: 2
 21372                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
 21373  00BB2A  9906               	bcf	(_loRa+2)& (0+255),4,b
 21374  00BB2C  0012               	return	
 21375  00BB2E                     __end_of_LORAWAN_SetApplicationSessionKey:
 21376                           	opt stack 0
 21377                           tosu	equ	0xFFF
 21378                           tosh	equ	0xFFE
 21379                           tosl	equ	0xFFD
 21380                           pclath	equ	0xFFA
 21381                           tblptru	equ	0xFF8
 21382                           tblptrh	equ	0xFF7
 21383                           tblptrl	equ	0xFF6
 21384                           tablat	equ	0xFF5
 21385                           prodh	equ	0xFF4
 21386                           prodl	equ	0xFF3
 21387                           intcon	equ	0xFF2
 21388                           intcon2	equ	0xFF1
 21389                           intcon3	equ	0xFF0
 21390                           postinc0	equ	0xFEE
 21391                           wreg	equ	0xFE8
 21392                           indf2	equ	0xFDF
 21393                           postinc2	equ	0xFDE
 21394                           postdec2	equ	0xFDD
 21395                           fsr2h	equ	0xFDA
 21396                           fsr2l	equ	0xFD9
 21397                           status	equ	0xFD8
 21398                           
 21399 ;; *************** function _LORAWAN_SetApplicationKey *****************
 21400 ;; Defined at:
 21401 ;;		line 409 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21402 ;; Parameters:    Size  Location     Type
 21403 ;;  applicationK    2   11[BANK0 ] PTR unsigned char 
 21404 ;;		 -> applicationKey(16), 
 21405 ;; Auto vars:     Size  Location     Type
 21406 ;;		None
 21407 ;; Return value:  Size  Location     Type
 21408 ;;                  1    wreg      void 
 21409 ;; Registers used:
 21410 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21411 ;; Tracked objects:
 21412 ;;		On entry : 0/0
 21413 ;;		On exit  : 0/0
 21414 ;;		Unchanged: 0/0
 21415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21416 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21420 ;;Total ram usage:        2 bytes
 21421 ;; Hardware stack levels used:    1
 21422 ;; Hardware stack levels required when called:    8
 21423 ;; This function calls:
 21424 ;;		_memcpy
 21425 ;; This function is called by:
 21426 ;;		_main
 21427 ;; This function uses a non-reentrant model
 21428 ;;
 21429                           
 21430                           	psect	text136
 21431  00BB2E                     __ptext136:
 21432                           	opt stack 0
 21433  00BB2E                     _LORAWAN_SetApplicationKey:
 21434                           	opt stack 22
 21435                           
 21436                           ;lorawan.c: 411: if (applicationKeyNew != (0))
 21437                           
 21438                           ;incstack = 0
 21439  00BB2E  0100               	movlb	0	; () banked
 21440  00BB30  516B               	movf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),w,b
 21441  00BB32  116C               	iorwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),w,b
 21442  00BB34  B4D8               	btfsc	status,2,c
 21443  00BB36  0012               	return	
 21444                           
 21445                           ; BSR set to: 0
 21446                           ;lorawan.c: 412: {
 21447                           ;lorawan.c: 413: memcpy( loRa.activationParameters.applicationKey, applicationKeyNew, 16
      +                          );
 21448  00BB38  0E46               	movlw	low (_loRa+66)
 21449  00BB3A  6F60               	movwf	memcpy@d1& (0+255),b
 21450  00BB3C  0E02               	movlw	high (_loRa+66)
 21451  00BB3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21452  00BB40  C06B  F062         	movff	LORAWAN_SetApplicationKey@applicationKeyNew,memcpy@s1
 21453  00BB44  C06C  F063         	movff	LORAWAN_SetApplicationKey@applicationKeyNew+1,memcpy@s1+1
 21454  00BB48  0E00               	movlw	0
 21455  00BB4A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21456  00BB4C  0E10               	movlw	16
 21457  00BB4E  6F64               	movwf	memcpy@n& (0+255),b
 21458  00BB50  ECAB  F055         	call	_memcpy	;wreg free
 21459                           
 21460                           ;lorawan.c: 414: loRa.macKeys.applicationKey = 1;
 21461  00BB54  0102               	movlb	2	; () banked
 21462  00BB56  87A9               	bsf	(_loRa+165)& (0+255),3,b
 21463                           
 21464                           ; BSR set to: 2
 21465                           ;lorawan.c: 415: loRa.macStatus.networkJoined = 0;
 21466  00BB58  9906               	bcf	(_loRa+2)& (0+255),4,b
 21467  00BB5A  0012               	return	
 21468  00BB5C                     __end_of_LORAWAN_SetApplicationKey:
 21469                           	opt stack 0
 21470                           tosu	equ	0xFFF
 21471                           tosh	equ	0xFFE
 21472                           tosl	equ	0xFFD
 21473                           pclath	equ	0xFFA
 21474                           tblptru	equ	0xFF8
 21475                           tblptrh	equ	0xFF7
 21476                           tblptrl	equ	0xFF6
 21477                           tablat	equ	0xFF5
 21478                           prodh	equ	0xFF4
 21479                           prodl	equ	0xFF3
 21480                           intcon	equ	0xFF2
 21481                           intcon2	equ	0xFF1
 21482                           intcon3	equ	0xFF0
 21483                           postinc0	equ	0xFEE
 21484                           wreg	equ	0xFE8
 21485                           indf2	equ	0xFDF
 21486                           postinc2	equ	0xFDE
 21487                           postdec2	equ	0xFDD
 21488                           fsr2h	equ	0xFDA
 21489                           fsr2l	equ	0xFD9
 21490                           status	equ	0xFD8
 21491                           
 21492 ;; *************** function _LORAWAN_SetApplicationEui *****************
 21493 ;; Defined at:
 21494 ;;		line 352 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21495 ;; Parameters:    Size  Location     Type
 21496 ;;  applicationE    2   11[BANK0 ] PTR unsigned char 
 21497 ;;		 -> applicationEUI(8), 
 21498 ;; Auto vars:     Size  Location     Type
 21499 ;;		None
 21500 ;; Return value:  Size  Location     Type
 21501 ;;                  1    wreg      void 
 21502 ;; Registers used:
 21503 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21504 ;; Tracked objects:
 21505 ;;		On entry : 0/0
 21506 ;;		On exit  : 0/0
 21507 ;;		Unchanged: 0/0
 21508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21512 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21513 ;;Total ram usage:        2 bytes
 21514 ;; Hardware stack levels used:    1
 21515 ;; Hardware stack levels required when called:    8
 21516 ;; This function calls:
 21517 ;;		_memcpy
 21518 ;; This function is called by:
 21519 ;;		_main
 21520 ;; This function uses a non-reentrant model
 21521 ;;
 21522                           
 21523                           	psect	text137
 21524  00BB5C                     __ptext137:
 21525                           	opt stack 0
 21526  00BB5C                     _LORAWAN_SetApplicationEui:
 21527                           	opt stack 22
 21528                           
 21529                           ;lorawan.c: 354: if (applicationEuiNew != (0))
 21530                           
 21531                           ;incstack = 0
 21532  00BB5C  0100               	movlb	0	; () banked
 21533  00BB5E  516B               	movf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),w,b
 21534  00BB60  116C               	iorwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),w,b
 21535  00BB62  B4D8               	btfsc	status,2,c
 21536  00BB64  0012               	return	
 21537                           
 21538                           ; BSR set to: 0
 21539                           ;lorawan.c: 355: {
 21540                           ;lorawan.c: 356: memcpy(loRa.activationParameters.applicationEui.buffer, applicationEuiN
      +                          ew, 8);
 21541  00BB66  0E56               	movlw	low (_loRa+82)
 21542  00BB68  6F60               	movwf	memcpy@d1& (0+255),b
 21543  00BB6A  0E02               	movlw	high (_loRa+82)
 21544  00BB6C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21545  00BB6E  C06B  F062         	movff	LORAWAN_SetApplicationEui@applicationEuiNew,memcpy@s1
 21546  00BB72  C06C  F063         	movff	LORAWAN_SetApplicationEui@applicationEuiNew+1,memcpy@s1+1
 21547  00BB76  0E00               	movlw	0
 21548  00BB78  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21549  00BB7A  0E08               	movlw	8
 21550  00BB7C  6F64               	movwf	memcpy@n& (0+255),b
 21551  00BB7E  ECAB  F055         	call	_memcpy	;wreg free
 21552                           
 21553                           ;lorawan.c: 357: loRa.macKeys.applicationEui = 1;
 21554  00BB82  0102               	movlb	2	; () banked
 21555  00BB84  83A9               	bsf	(_loRa+165)& (0+255),1,b
 21556                           
 21557                           ; BSR set to: 2
 21558                           ;lorawan.c: 358: loRa.macStatus.networkJoined = 0;
 21559  00BB86  9906               	bcf	(_loRa+2)& (0+255),4,b
 21560  00BB88  0012               	return	
 21561  00BB8A                     __end_of_LORAWAN_SetApplicationEui:
 21562                           	opt stack 0
 21563                           tosu	equ	0xFFF
 21564                           tosh	equ	0xFFE
 21565                           tosl	equ	0xFFD
 21566                           pclath	equ	0xFFA
 21567                           tblptru	equ	0xFF8
 21568                           tblptrh	equ	0xFF7
 21569                           tblptrl	equ	0xFF6
 21570                           tablat	equ	0xFF5
 21571                           prodh	equ	0xFF4
 21572                           prodl	equ	0xFF3
 21573                           intcon	equ	0xFF2
 21574                           intcon2	equ	0xFF1
 21575                           intcon3	equ	0xFF0
 21576                           postinc0	equ	0xFEE
 21577                           wreg	equ	0xFE8
 21578                           indf2	equ	0xFDF
 21579                           postinc2	equ	0xFDE
 21580                           postdec2	equ	0xFDD
 21581                           fsr2h	equ	0xFDA
 21582                           fsr2l	equ	0xFD9
 21583                           status	equ	0xFD8
 21584                           
 21585 ;; *************** function _LORAWAN_Mainloop *****************
 21586 ;; Defined at:
 21587 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21588 ;; Parameters:    Size  Location     Type
 21589 ;;		None
 21590 ;; Auto vars:     Size  Location     Type
 21591 ;;		None
 21592 ;; Return value:  Size  Location     Type
 21593 ;;                  1    wreg      void 
 21594 ;; Registers used:
 21595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21596 ;; Tracked objects:
 21597 ;;		On entry : 0/0
 21598 ;;		On exit  : 0/0
 21599 ;;		Unchanged: 0/0
 21600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21605 ;;Total ram usage:        0 bytes
 21606 ;; Hardware stack levels used:    1
 21607 ;; Hardware stack levels required when called:   18
 21608 ;; This function calls:
 21609 ;;		_INTERRUPT_GetDioStatus
 21610 ;;		_RADIO_DIO0
 21611 ;;		_RADIO_DIO1
 21612 ;;		_RADIO_DIO2
 21613 ;;		_RADIO_DIO3
 21614 ;;		_RADIO_DIO4
 21615 ;;		_RADIO_DIO5
 21616 ;;		_SwTimersExecute
 21617 ;; This function is called by:
 21618 ;;		_main
 21619 ;; This function uses a non-reentrant model
 21620 ;;
 21621                           
 21622                           	psect	text138
 21623  00B73A                     __ptext138:
 21624                           	opt stack 0
 21625  00B73A                     _LORAWAN_Mainloop:
 21626                           	opt stack 12
 21627                           
 21628                           ;lorawan.c: 2240: SwTimersExecute();
 21629                           
 21630                           ;incstack = 0
 21631  00B73A  ECAF  F047         	call	_SwTimersExecute	;wreg free
 21632                           
 21633                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
 21634  00B73E  ECAA  F061         	call	_INTERRUPT_GetDioStatus	;wreg free
 21635  00B742  0101               	movlb	1	; () banked
 21636  00B744  6F32               	movwf	_localDioStatus& (0+255),b
 21637                           
 21638                           ; BSR set to: 1
 21639                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
 21640  00B746  B132               	btfsc	_localDioStatus& (0+255),0,b
 21641                           
 21642                           ; BSR set to: 1
 21643                           ;lorawan.c: 2246: {
 21644                           ;lorawan.c: 2247: RADIO_DIO0();
 21645  00B748  ECCD  F04E         	call	_RADIO_DIO0	;wreg free
 21646                           
 21647                           ;lorawan.c: 2248: }
 21648                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
 21649  00B74C  0101               	movlb	1	; () banked
 21650  00B74E  B332               	btfsc	_localDioStatus& (0+255),1,b
 21651                           
 21652                           ; BSR set to: 1
 21653                           ;lorawan.c: 2250: {
 21654                           ;lorawan.c: 2251: RADIO_DIO1();
 21655  00B750  EC10  F059         	call	_RADIO_DIO1	;wreg free
 21656                           
 21657                           ;lorawan.c: 2252: }
 21658                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
 21659  00B754  0101               	movlb	1	; () banked
 21660  00B756  B532               	btfsc	_localDioStatus& (0+255),2,b
 21661                           
 21662                           ; BSR set to: 1
 21663                           ;lorawan.c: 2254: {
 21664                           ;lorawan.c: 2255: RADIO_DIO2();
 21665  00B758  EC49  F057         	call	_RADIO_DIO2	;wreg free
 21666                           
 21667                           ;lorawan.c: 2256: }
 21668                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
 21669  00B75C  0101               	movlb	1	; () banked
 21670  00B75E  B732               	btfsc	_localDioStatus& (0+255),3,b
 21671                           
 21672                           ; BSR set to: 1
 21673                           ;lorawan.c: 2258: {
 21674                           ;lorawan.c: 2259: RADIO_DIO3();
 21675  00B760  EC3C  F05F         	call	_RADIO_DIO3	;wreg free
 21676                           
 21677                           ;lorawan.c: 2260: }
 21678                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
 21679  00B764  0101               	movlb	1	; () banked
 21680  00B766  B932               	btfsc	_localDioStatus& (0+255),4,b
 21681                           
 21682                           ; BSR set to: 1
 21683                           ;lorawan.c: 2262: {
 21684                           ;lorawan.c: 2263: RADIO_DIO4();
 21685  00B768  EC30  F05C         	call	_RADIO_DIO4	;wreg free
 21686                           
 21687                           ;lorawan.c: 2264: }
 21688                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
 21689  00B76C  0101               	movlb	1	; () banked
 21690  00B76E  AB32               	btfss	_localDioStatus& (0+255),5,b
 21691  00B770  0012               	return	
 21692                           
 21693                           ; BSR set to: 1
 21694                           ;lorawan.c: 2266: {
 21695                           ;lorawan.c: 2267: RADIO_DIO5();
 21696  00B772  EC5A  F05E         	call	_RADIO_DIO5	;wreg free
 21697  00B776  0012               	return	
 21698  00B778                     __end_of_LORAWAN_Mainloop:
 21699                           	opt stack 0
 21700                           tosu	equ	0xFFF
 21701                           tosh	equ	0xFFE
 21702                           tosl	equ	0xFFD
 21703                           pclath	equ	0xFFA
 21704                           tblptru	equ	0xFF8
 21705                           tblptrh	equ	0xFF7
 21706                           tblptrl	equ	0xFF6
 21707                           tablat	equ	0xFF5
 21708                           prodh	equ	0xFF4
 21709                           prodl	equ	0xFF3
 21710                           intcon	equ	0xFF2
 21711                           intcon2	equ	0xFF1
 21712                           intcon3	equ	0xFF0
 21713                           postinc0	equ	0xFEE
 21714                           wreg	equ	0xFE8
 21715                           indf2	equ	0xFDF
 21716                           postinc2	equ	0xFDE
 21717                           postdec2	equ	0xFDD
 21718                           fsr2h	equ	0xFDA
 21719                           fsr2l	equ	0xFD9
 21720                           status	equ	0xFD8
 21721                           
 21722 ;; *************** function _SwTimersExecute *****************
 21723 ;; Defined at:
 21724 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 21725 ;; Parameters:    Size  Location     Type
 21726 ;;		None
 21727 ;; Auto vars:     Size  Location     Type
 21728 ;;  i               1  126[BANK0 ] unsigned char 
 21729 ;; Return value:  Size  Location     Type
 21730 ;;                  1    wreg      void 
 21731 ;; Registers used:
 21732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21733 ;; Tracked objects:
 21734 ;;		On entry : 0/0
 21735 ;;		On exit  : 0/0
 21736 ;;		Unchanged: 0/0
 21737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21740 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21741 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21742 ;;Total ram usage:        5 bytes
 21743 ;; Hardware stack levels used:    1
 21744 ;; Hardware stack levels required when called:   17
 21745 ;; This function calls:
 21746 ;;		Absolute function
 21747 ;;		_AckRetransmissionCallback
 21748 ;;		_AutomaticReplyCallback
 21749 ;;		_DutyCycleCallback
 21750 ;;		_LORAWAN_LinkCheckCallback
 21751 ;;		_LORAWAN_ReceiveWindow1Callback
 21752 ;;		_LORAWAN_ReceiveWindow2Callback
 21753 ;;		_RADIO_RxFSKTimeout
 21754 ;;		_RADIO_WatchdogTimeout
 21755 ;;		_UnconfirmedTransmissionCallback
 21756 ;;		_UpdateJoinSuccessState
 21757 ;; This function is called by:
 21758 ;;		_LORAWAN_Mainloop
 21759 ;; This function uses a non-reentrant model
 21760 ;;
 21761                           
 21762                           	psect	text139
 21763  008F5E                     __ptext139:
 21764                           	opt stack 0
 21765  008F5E                     _SwTimersExecute:
 21766                           	opt stack 12
 21767                           
 21768                           ;sw_timer.c: 262: uint8_t i;
 21769                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
 21770                           
 21771                           ;incstack = 0
 21772  008F5E  9EF2               	bcf	intcon,7,c	;volatile
 21773                           
 21774                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
 21775  008F60  0E00               	movlw	0
 21776  008F62  0100               	movlb	0	; () banked
 21777  008F64  6FDE               	movwf	SwTimersExecute@i& (0+255),b
 21778  008F66  D068               	goto	l603
 21779  008F68                     
 21780                           ; BSR set to: 0
 21781                           ;sw_timer.c: 266: {
 21782                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
 21783                           
 21784                           ; BSR set to: 0
 21785  008F68  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21786  008F6A  0D08               	mullw	8
 21787  008F6C  0E04               	movlw	4
 21788  008F6E  26F3               	addwf	prodl,f,c
 21789  008F70  0E00               	movlw	0
 21790  008F72  22F4               	addwfc	prodh,f,c
 21791  008F74  0E00               	movlw	low _swTimers
 21792  008F76  24F3               	addwf	prodl,w,c
 21793  008F78  6ED9               	movwf	fsr2l,c
 21794  008F7A  0E03               	movlw	high _swTimers
 21795  008F7C  20F4               	addwfc	prodh,w,c
 21796  008F7E  6EDA               	movwf	fsr2h,c
 21797  008F80  04DE               	decf	postinc2,w,c
 21798  008F82  A4D8               	btfss	status,2,c
 21799  008F84  D057               	goto	l607
 21800                           
 21801                           ; BSR set to: 0
 21802                           ;sw_timer.c: 270: {
 21803                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
 21804  008F86  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21805  008F88  0D08               	mullw	8
 21806  008F8A  0E00               	movlw	low _swTimers
 21807  008F8C  24F3               	addwf	prodl,w,c
 21808  008F8E  6ED9               	movwf	fsr2l,c
 21809  008F90  0E03               	movlw	high _swTimers
 21810  008F92  20F4               	addwfc	prodh,w,c
 21811  008F94  6EDA               	movwf	fsr2h,c
 21812  008F96  50DE               	movf	postinc2,w,c
 21813  008F98  10DE               	iorwf	postinc2,w,c
 21814  008F9A  10DE               	iorwf	postinc2,w,c
 21815  008F9C  10DE               	iorwf	postinc2,w,c
 21816  008F9E  A4D8               	btfss	status,2,c
 21817  008FA0  D049               	goto	l607
 21818                           
 21819                           ; BSR set to: 0
 21820                           ;sw_timer.c: 272: {
 21821                           ;sw_timer.c: 273: swTimers[i].running = 0;
 21822  008FA2  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21823  008FA4  0D08               	mullw	8
 21824  008FA6  0E04               	movlw	4
 21825  008FA8  26F3               	addwf	prodl,f,c
 21826  008FAA  0E00               	movlw	0
 21827  008FAC  22F4               	addwfc	prodh,f,c
 21828  008FAE  0E00               	movlw	low _swTimers
 21829  008FB0  24F3               	addwf	prodl,w,c
 21830  008FB2  6ED9               	movwf	fsr2l,c
 21831  008FB4  0E03               	movlw	high _swTimers
 21832  008FB6  20F4               	addwfc	prodh,w,c
 21833  008FB8  6EDA               	movwf	fsr2h,c
 21834  008FBA  0E00               	movlw	0
 21835  008FBC  6EDF               	movwf	indf2,c
 21836                           
 21837                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
 21838  008FBE  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21839  008FC0  0D08               	mullw	8
 21840  008FC2  0E06               	movlw	6
 21841  008FC4  26F3               	addwf	prodl,f,c
 21842  008FC6  0E00               	movlw	0
 21843  008FC8  22F4               	addwfc	prodh,f,c
 21844  008FCA  0E00               	movlw	low _swTimers
 21845  008FCC  24F3               	addwf	prodl,w,c
 21846  008FCE  6ED9               	movwf	fsr2l,c
 21847  008FD0  0E03               	movlw	high _swTimers
 21848  008FD2  20F4               	addwfc	prodh,w,c
 21849  008FD4  6EDA               	movwf	fsr2h,c
 21850  008FD6  50DE               	movf	postinc2,w,c
 21851  008FD8  10DE               	iorwf	postinc2,w,c
 21852  008FDA  B4D8               	btfsc	status,2,c
 21853  008FDC  D02B               	goto	l607
 21854                           
 21855                           ; BSR set to: 0
 21856                           ;sw_timer.c: 275: {
 21857                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
 21858  008FDE  8EF2               	bsf	intcon,7,c	;volatile
 21859                           
 21860                           ; BSR set to: 0
 21861                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
 21862  008FE0  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21863  008FE2  0D08               	mullw	8
 21864  008FE4  0E05               	movlw	5
 21865  008FE6  26F3               	addwf	prodl,f,c
 21866  008FE8  0E00               	movlw	0
 21867  008FEA  22F4               	addwfc	prodh,f,c
 21868  008FEC  0E00               	movlw	low _swTimers
 21869  008FEE  24F3               	addwf	prodl,w,c
 21870  008FF0  6ED9               	movwf	fsr2l,c
 21871  008FF2  0E03               	movlw	high _swTimers
 21872  008FF4  20F4               	addwfc	prodh,w,c
 21873  008FF6  6EDA               	movwf	fsr2h,c
 21874  008FF8  50DF               	movf	indf2,w,c
 21875  008FFA  6EE6               	movwf	postinc1,c
 21876  008FFC  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21877  008FFE  0D08               	mullw	8
 21878  009000  0E06               	movlw	6
 21879  009002  26F3               	addwf	prodl,f,c
 21880  009004  0E00               	movlw	0
 21881  009006  22F4               	addwfc	prodh,f,c
 21882  009008  0E00               	movlw	low _swTimers
 21883  00900A  24F3               	addwf	prodl,w,c
 21884  00900C  6ED9               	movwf	fsr2l,c
 21885  00900E  0E03               	movlw	high _swTimers
 21886  009010  20F4               	addwfc	prodh,w,c
 21887  009012  6EDA               	movwf	fsr2h,c
 21888  009014  CFDE F0DA          	movff	postinc2,??_SwTimersExecute
 21889  009018  CFDD F0DB          	movff	postdec2,??_SwTimersExecute+1
 21890  00901C  D801               	call	u28678
 21891  00901E  D009               	goto	u28679
 21892  009020                     u28678:
 21893  009020  0005               	push	
 21894  009022  6EFA               	movwf	pclath,c
 21895  009024  51DA               	movf	??_SwTimersExecute& (0+255),w,b
 21896  009026  6EFD               	movwf	tosl,c
 21897  009028  51DB               	movf	(??_SwTimersExecute+1)& (0+255),w,b
 21898  00902A  6EFE               	movwf	tosh,c
 21899  00902C  6AFF               	clrf	tosu,c
 21900  00902E  50FA               	movf	pclath,w,c
 21901  009030  0012               	return		;indir
 21902  009032                     u28679:
 21903                           
 21904                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
 21905  009032  9EF2               	bcf	intcon,7,c	;volatile
 21906  009034                     l607:
 21907  009034  0100               	movlb	0	; () banked
 21908  009036  2BDE               	incf	SwTimersExecute@i& (0+255),f,b
 21909  009038                     l603:
 21910                           
 21911                           ; BSR set to: 0
 21912                           
 21913                           ; BSR set to: 0
 21914  009038  51FF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 21915  00903A  5DDE               	subwf	SwTimersExecute@i& (0+255),w,b
 21916  00903C  A0D8               	btfss	status,0,c
 21917  00903E  D794               	goto	l604
 21918                           
 21919                           ; BSR set to: 0
 21920                           ;sw_timer.c: 279: }
 21921                           ;sw_timer.c: 280: }
 21922                           ;sw_timer.c: 281: }
 21923                           ;sw_timer.c: 282: }
 21924                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
 21925  009040  8EF2               	bsf	intcon,7,c	;volatile
 21926                           
 21927                           ; BSR set to: 0
 21928  009042  0012               	return		;funcret
 21929  009044                     __end_of_SwTimersExecute:
 21930                           	opt stack 0
 21931                           tosu	equ	0xFFF
 21932                           tosh	equ	0xFFE
 21933                           tosl	equ	0xFFD
 21934                           pclath	equ	0xFFA
 21935                           tblptru	equ	0xFF8
 21936                           tblptrh	equ	0xFF7
 21937                           tblptrl	equ	0xFF6
 21938                           tablat	equ	0xFF5
 21939                           prodh	equ	0xFF4
 21940                           prodl	equ	0xFF3
 21941                           intcon	equ	0xFF2
 21942                           intcon2	equ	0xFF1
 21943                           intcon3	equ	0xFF0
 21944                           postinc0	equ	0xFEE
 21945                           wreg	equ	0xFE8
 21946                           postinc1	equ	0xFE6
 21947                           indf2	equ	0xFDF
 21948                           postinc2	equ	0xFDE
 21949                           postdec2	equ	0xFDD
 21950                           fsr2h	equ	0xFDA
 21951                           fsr2l	equ	0xFD9
 21952                           status	equ	0xFD8
 21953                           
 21954 ;; *************** function _DutyCycleCallback *****************
 21955 ;; Defined at:
 21956 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21957 ;; Parameters:    Size  Location     Type
 21958 ;;  param           1  [STACK] unsigned char 
 21959 ;; Auto vars:     Size  Location     Type
 21960 ;;  minim           4  [STACK] unsigned long 
 21961 ;;  i               1  [STACK] unsigned char 
 21962 ;;  found           1  [STACK] unsigned char 
 21963 ;; Return value:  Size  Location     Type
 21964 ;;                  1  [STACK] void 
 21965 ;; Registers used:
 21966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
 21967 ;; Tracked objects:
 21968 ;;		On entry : 3F/0
 21969 ;;		On exit  : 0/0
 21970 ;;		Unchanged: 0/0
 21971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21976 ;;Total ram usage:        0 bytes
 21977 ;; Hardware stack levels used:    1
 21978 ;; Hardware stack levels required when called:   11
 21979 ;; This function calls:
 21980 ;;		_SwTimerSetTimeout
 21981 ;;		_SwTimerStart
 21982 ;;		___lldiv
 21983 ;; This function is called by:
 21984 ;;		_SetCallbackSoftwareTimers
 21985 ;;		_SwTimersExecute
 21986 ;; This function uses a reentrant model
 21987 ;;
 21988                           
 21989                           	psect	text140
 21990  0048AA                     __ptext140:
 21991                           	opt stack 0
 21992  0048AA                     _DutyCycleCallback:
 21993                           	opt stack 0
 21994                           
 21995                           ; BSR set to: 0
 21996                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
 21997  0048AA  0E0A               	movlw	10
 21998  0048AC  26E1               	addwf	fsr1l,f,c
 21999  0048AE  0E00               	movlw	0
 22000  0048B0  22E2               	addwfc	fsr1h,f,c
 22001                           
 22002                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
 22003                           
 22004                           ;incstack = 0
 22005  0048B2  0EFF               	movlw	255
 22006  0048B4  6E50               	movwf	btemp+8,c
 22007  0048B6  0EFF               	movlw	255
 22008  0048B8  6E51               	movwf	btemp+9,c
 22009  0048BA  0EFF               	movlw	255
 22010  0048BC  6E52               	movwf	btemp+10,c
 22011  0048BE  0EFF               	movlw	255
 22012  0048C0  6E53               	movwf	btemp+11,c
 22013                           
 22014                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22015  0048C2  0EFA               	movlw	-6
 22016  0048C4  C050  FFE3         	movff	btemp+8,plusw1
 22017  0048C8  0EFB               	movlw	-5
 22018  0048CA  C051  FFE3         	movff	btemp+9,plusw1
 22019  0048CE  0EFC               	movlw	-4
 22020  0048D0  C052  FFE3         	movff	btemp+10,plusw1
 22021  0048D4  0EFD               	movlw	-3
 22022  0048D6  C053  FFE3         	movff	btemp+11,plusw1
 22023                           
 22024                           ;lorawan_eu.c: 1224: bool found = 0;
 22025                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
 22026  0048DA  0EFF               	movlw	-1
 22027  0048DC  6AE3               	clrf	plusw1,c
 22028                           
 22029                           ;lorawan_eu.c: 1225: uint8_t i;
 22030                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
 22031                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22032  0048DE  0EFE               	movlw	-2
 22033  0048E0  6AE3               	clrf	plusw1,c
 22034  0048E2                     l20729:
 22035                           
 22036                           ;lorawan_eu.c: 1228: {
 22037                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 22038                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22039  0048E2  0EFE               	movlw	-2
 22040  0048E4  50E3               	movf	plusw1,w,c
 22041  0048E6  0D0E               	mullw	14
 22042  0048E8  0E04               	movlw	low (_Channels+4)
 22043  0048EA  24F3               	addwf	prodl,w,c
 22044  0048EC  6ED9               	movwf	fsr2l,c
 22045  0048EE  0E04               	movlw	high (_Channels+4)
 22046  0048F0  20F4               	addwfc	prodh,w,c
 22047  0048F2  6EDA               	movwf	fsr2h,c
 22048  0048F4  04DE               	decf	postinc2,w,c
 22049  0048F6  A4D8               	btfss	status,2,c
 22050  0048F8  D0AD               	goto	l20747
 22051                           
 22052                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22053  0048FA  0EFE               	movlw	-2
 22054  0048FC  50E3               	movf	plusw1,w,c
 22055  0048FE  0D0E               	mullw	14
 22056  004900  0E08               	movlw	low (_Channels+8)
 22057  004902  24F3               	addwf	prodl,w,c
 22058  004904  6ED9               	movwf	fsr2l,c
 22059  004906  0E04               	movlw	high (_Channels+8)
 22060  004908  20F4               	addwfc	prodh,w,c
 22061  00490A  6EDA               	movwf	fsr2h,c
 22062  00490C  50DE               	movf	postinc2,w,c
 22063  00490E  10DE               	iorwf	postinc2,w,c
 22064  004910  10DE               	iorwf	postinc2,w,c
 22065  004912  10DE               	iorwf	postinc2,w,c
 22066  004914  B4D8               	btfsc	status,2,c
 22067  004916  D09E               	goto	l20747
 22068                           
 22069                           ;lorawan_eu.c: 1231: {
 22070                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
 22071                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22072  004918  0EFE               	movlw	-2
 22073  00491A  50E3               	movf	plusw1,w,c
 22074  00491C  0D0E               	mullw	14
 22075  00491E  0E08               	movlw	low (_Channels+8)
 22076  004920  24F3               	addwf	prodl,w,c
 22077  004922  6ED9               	movwf	fsr2l,c
 22078  004924  0E04               	movlw	high (_Channels+8)
 22079  004926  20F4               	addwfc	prodh,w,c
 22080  004928  6EDA               	movwf	fsr2h,c
 22081  00492A  50DE               	movf	postinc2,w,c
 22082  00492C  0102               	movlb	2	; () banked
 22083  00492E  5DCC               	subwf	(_loRa+200)& (0+255),w,b
 22084  004930  50DE               	movf	postinc2,w,c
 22085  004932  59CD               	subwfb	(_loRa+201)& (0+255),w,b
 22086  004934  50DE               	movf	postinc2,w,c
 22087  004936  59CE               	subwfb	(_loRa+202)& (0+255),w,b
 22088  004938  50DE               	movf	postinc2,w,c
 22089  00493A  59CF               	subwfb	(_loRa+203)& (0+255),w,b
 22090  00493C  B0D8               	btfsc	status,0,c
 22091  00493E  D02F               	goto	l20737
 22092                           
 22093                           ; BSR set to: 2
 22094                           ;lorawan_eu.c: 1233: {
 22095                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
 22096                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22097  004940  0EFE               	movlw	-2
 22098  004942  50E3               	movf	plusw1,w,c
 22099  004944  0D0E               	mullw	14
 22100  004946  0E08               	movlw	low (_Channels+8)
 22101  004948  24F3               	addwf	prodl,w,c
 22102  00494A  6ED9               	movwf	fsr2l,c
 22103  00494C  0E04               	movlw	high (_Channels+8)
 22104  00494E  20F4               	addwfc	prodh,w,c
 22105  004950  6EDA               	movwf	fsr2h,c
 22106  004952  CFDE F050          	movff	postinc2,btemp+8
 22107  004956  CFDE F051          	movff	postinc2,btemp+9
 22108  00495A  CFDE F052          	movff	postinc2,btemp+10
 22109  00495E  CFDE F053          	movff	postinc2,btemp+11
 22110  004962  51CC               	movf	(_loRa+200)& (0+255),w,b
 22111  004964  5C50               	subwf	btemp+8,w,c
 22112  004966  6E4C               	movwf	btemp+4,c
 22113  004968  51CD               	movf	(_loRa+201)& (0+255),w,b
 22114  00496A  5851               	subwfb	btemp+9,w,c
 22115  00496C  6E4D               	movwf	btemp+5,c
 22116  00496E  51CE               	movf	(_loRa+202)& (0+255),w,b
 22117  004970  5852               	subwfb	btemp+10,w,c
 22118  004972  6E4E               	movwf	btemp+6,c
 22119  004974  51CF               	movf	(_loRa+203)& (0+255),w,b
 22120  004976  5853               	subwfb	btemp+11,w,c
 22121  004978  6E4F               	movwf	btemp+7,c
 22122                           
 22123                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22124  00497A  0EFE               	movlw	-2
 22125  00497C  50E3               	movf	plusw1,w,c
 22126  00497E  0D0E               	mullw	14
 22127  004980  0E08               	movlw	low (_Channels+8)
 22128  004982  24F3               	addwf	prodl,w,c
 22129  004984  6ED9               	movwf	fsr2l,c
 22130  004986  0E04               	movlw	high (_Channels+8)
 22131  004988  20F4               	addwfc	prodh,w,c
 22132  00498A  6EDA               	movwf	fsr2h,c
 22133  00498C  C04C  FFDE         	movff	btemp+4,postinc2
 22134  004990  C04D  FFDE         	movff	btemp+5,postinc2
 22135  004994  C04E  FFDE         	movff	btemp+6,postinc2
 22136  004998  C04F  FFDE         	movff	btemp+7,postinc2
 22137                           
 22138                           ;lorawan_eu.c: 1235: }
 22139  00499C  D00D               	goto	l20739
 22140  00499E                     l20737:
 22141                           
 22142                           ; BSR set to: 2
 22143                           ;lorawan_eu.c: 1236: else
 22144                           ;lorawan_eu.c: 1237: {
 22145                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
 22146                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22147  00499E  0EFE               	movlw	-2
 22148  0049A0  50E3               	movf	plusw1,w,c
 22149  0049A2  0D0E               	mullw	14
 22150  0049A4  0E08               	movlw	low (_Channels+8)
 22151  0049A6  24F3               	addwf	prodl,w,c
 22152  0049A8  6ED9               	movwf	fsr2l,c
 22153  0049AA  0E04               	movlw	high (_Channels+8)
 22154  0049AC  20F4               	addwfc	prodh,w,c
 22155  0049AE  6EDA               	movwf	fsr2h,c
 22156  0049B0  6ADE               	clrf	postinc2,c
 22157  0049B2  6ADE               	clrf	postinc2,c
 22158  0049B4  6ADE               	clrf	postinc2,c
 22159  0049B6  6ADD               	clrf	postdec2,c
 22160  0049B8                     l20739:
 22161                           
 22162                           ; BSR set to: 2
 22163                           ;lorawan_eu.c: 1239: }
 22164                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
 22165                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22166  0049B8  0EFE               	movlw	-2
 22167  0049BA  50E3               	movf	plusw1,w,c
 22168  0049BC  0D0E               	mullw	14
 22169  0049BE  0E08               	movlw	low (_Channels+8)
 22170  0049C0  24F3               	addwf	prodl,w,c
 22171  0049C2  6ED9               	movwf	fsr2l,c
 22172  0049C4  0E04               	movlw	high (_Channels+8)
 22173  0049C6  20F4               	addwfc	prodh,w,c
 22174  0049C8  6EDA               	movwf	fsr2h,c
 22175                           
 22176                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22177  0049CA  0EFA               	movlw	-6
 22178  0049CC  CFE3 F048          	movff	plusw1,btemp
 22179  0049D0  50DE               	movf	postinc2,w,c
 22180  0049D2  5C48               	subwf	btemp,w,c
 22181  0049D4  0EFB               	movlw	-5
 22182  0049D6  CFE3 F048          	movff	plusw1,btemp
 22183  0049DA  50DE               	movf	postinc2,w,c
 22184  0049DC  5848               	subwfb	btemp,w,c
 22185  0049DE  0EFC               	movlw	-4
 22186  0049E0  CFE3 F048          	movff	plusw1,btemp
 22187  0049E4  50DE               	movf	postinc2,w,c
 22188  0049E6  5848               	subwfb	btemp,w,c
 22189  0049E8  0EFD               	movlw	-3
 22190  0049EA  CFE3 F048          	movff	plusw1,btemp
 22191  0049EE  50DE               	movf	postinc2,w,c
 22192  0049F0  5848               	subwfb	btemp,w,c
 22193  0049F2  A0D8               	btfss	status,0,c
 22194  0049F4  D02F               	goto	l20747
 22195                           
 22196                           ; BSR set to: 2
 22197                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22198  0049F6  0EFE               	movlw	-2
 22199  0049F8  50E3               	movf	plusw1,w,c
 22200  0049FA  0D0E               	mullw	14
 22201  0049FC  0E08               	movlw	low (_Channels+8)
 22202  0049FE  24F3               	addwf	prodl,w,c
 22203  004A00  6ED9               	movwf	fsr2l,c
 22204  004A02  0E04               	movlw	high (_Channels+8)
 22205  004A04  20F4               	addwfc	prodh,w,c
 22206  004A06  6EDA               	movwf	fsr2h,c
 22207  004A08  50DE               	movf	postinc2,w,c
 22208  004A0A  10DE               	iorwf	postinc2,w,c
 22209  004A0C  10DE               	iorwf	postinc2,w,c
 22210  004A0E  10DE               	iorwf	postinc2,w,c
 22211  004A10  B4D8               	btfsc	status,2,c
 22212  004A12  D020               	goto	l20747
 22213                           
 22214                           ; BSR set to: 2
 22215                           ;lorawan_eu.c: 1241: {
 22216                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
 22217                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22218  004A14  0EFE               	movlw	-2
 22219  004A16  50E3               	movf	plusw1,w,c
 22220  004A18  0D0E               	mullw	14
 22221  004A1A  0E08               	movlw	low (_Channels+8)
 22222  004A1C  24F3               	addwf	prodl,w,c
 22223  004A1E  6ED9               	movwf	fsr2l,c
 22224  004A20  0E04               	movlw	high (_Channels+8)
 22225  004A22  20F4               	addwfc	prodh,w,c
 22226  004A24  6EDA               	movwf	fsr2h,c
 22227  004A26  CFDE F050          	movff	postinc2,btemp+8
 22228  004A2A  CFDE F051          	movff	postinc2,btemp+9
 22229  004A2E  CFDE F052          	movff	postinc2,btemp+10
 22230  004A32  CFDE F053          	movff	postinc2,btemp+11
 22231                           
 22232                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22233  004A36  0EFA               	movlw	-6
 22234  004A38  C050  FFE3         	movff	btemp+8,plusw1
 22235  004A3C  0EFB               	movlw	-5
 22236  004A3E  C051  FFE3         	movff	btemp+9,plusw1
 22237  004A42  0EFC               	movlw	-4
 22238  004A44  C052  FFE3         	movff	btemp+10,plusw1
 22239  004A48  0EFD               	movlw	-3
 22240  004A4A  C053  FFE3         	movff	btemp+11,plusw1
 22241                           
 22242                           ; BSR set to: 2
 22243                           ;lorawan_eu.c: 1243: found = 1;
 22244                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
 22245  004A4E  0EFF               	movlw	-1
 22246  004A50  6AE3               	clrf	plusw1,c
 22247  004A52  2AE3               	incf	plusw1,f,c
 22248  004A54                     l20747:
 22249                           
 22250                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22251  004A54  0EFE               	movlw	-2
 22252  004A56  2AE3               	incf	plusw1,f,c
 22253                           
 22254                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22255  004A58  0EFE               	movlw	-2
 22256  004A5A  CFE3 F048          	movff	plusw1,btemp
 22257  004A5E  0E0F               	movlw	15
 22258  004A60  6448               	cpfsgt	btemp,c
 22259  004A62  D73F               	goto	l20729
 22260                           
 22261                           ;lorawan_eu.c: 1244: }
 22262                           ;lorawan_eu.c: 1245: }
 22263                           ;lorawan_eu.c: 1246: }
 22264                           ;lorawan_eu.c: 1247: if ( found == 1 )
 22265                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
 22266  004A64  0EFF               	movlw	-1
 22267  004A66  04E3               	decf	plusw1,w,c
 22268  004A68  A4D8               	btfss	status,2,c
 22269  004A6A  D09D               	goto	l1635
 22270                           
 22271                           ;lorawan_eu.c: 1248: {
 22272                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
 22273                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22274  004A6C  50E1               	movf	fsr1l,w,c
 22275  004A6E  0FFA               	addlw	-6
 22276  004A70  6ED9               	movwf	fsr2l,c
 22277  004A72  50E2               	movf	fsr1h,w,c
 22278  004A74  6EDA               	movwf	fsr2h,c
 22279  004A76  0EFF               	movlw	255
 22280  004A78  22DA               	addwfc	fsr2h,f,c
 22281  004A7A  CFDE F2CC          	movff	postinc2,_loRa+200
 22282  004A7E  CFDE F2CD          	movff	postinc2,_loRa+201
 22283  004A82  CFDE F2CE          	movff	postinc2,_loRa+202
 22284  004A86  CFDE F2CF          	movff	postinc2,_loRa+203
 22285                           
 22286                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
 22287                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22288  004A8A  0EFD               	movlw	-3
 22289  004A8C  50E3               	movf	plusw1,w,c
 22290  004A8E  E10E               	bnz	u24380
 22291  004A90  0EFA               	movlw	-6
 22292  004A92  28E3               	incf	plusw1,w,c
 22293  004A94  0EFB               	movlw	-5
 22294  004A96  CFE3 F048          	movff	plusw1,btemp
 22295  004A9A  0EFF               	movlw	255
 22296  004A9C  5A48               	subwfb	btemp,f,c
 22297  004A9E  0EFC               	movlw	-4
 22298  004AA0  CFE3 F048          	movff	plusw1,btemp
 22299  004AA4  0E0F               	movlw	15
 22300  004AA6  5A48               	subwfb	btemp,f,c
 22301  004AA8  A0D8               	btfss	status,0,c
 22302  004AAA  D02B               	goto	l20759
 22303  004AAC                     u24380:
 22304                           
 22305                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22306  004AAC  50E1               	movf	fsr1l,w,c
 22307  004AAE  0FFA               	addlw	-6
 22308  004AB0  6ED9               	movwf	fsr2l,c
 22309  004AB2  50E2               	movf	fsr1h,w,c
 22310  004AB4  6EDA               	movwf	fsr2h,c
 22311  004AB6  0EFF               	movlw	255
 22312  004AB8  22DA               	addwfc	fsr2h,f,c
 22313  004ABA  CFDE F060          	movff	postinc2,___lldiv@dividend
 22314  004ABE  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 22315  004AC2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 22316  004AC6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 22317  004ACA  0E7D               	movlw	125
 22318  004ACC  0100               	movlb	0	; () banked
 22319  004ACE  6F64               	movwf	___lldiv@divisor& (0+255),b
 22320  004AD0  0E00               	movlw	0
 22321  004AD2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22322  004AD4  0E00               	movlw	0
 22323  004AD6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22324  004AD8  0E00               	movlw	0
 22325  004ADA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22326  004ADC  ECB0  F050         	call	___lldiv	;wreg free
 22327  004AE0  C060  F050         	movff	?___lldiv,btemp+8
 22328  004AE4  C061  F051         	movff	?___lldiv+1,btemp+9
 22329  004AE8  C062  F052         	movff	?___lldiv+2,btemp+10
 22330  004AEC  C063  F053         	movff	?___lldiv+3,btemp+11
 22331  004AF0  0E0C               	movlw	12
 22332  004AF2                     u24395:
 22333  004AF2  90D8               	bcf	status,0,c
 22334  004AF4  3650               	rlcf	btemp+8,f,c
 22335  004AF6  3651               	rlcf	btemp+9,f,c
 22336  004AF8  3652               	rlcf	btemp+10,f,c
 22337  004AFA  3653               	rlcf	btemp+11,f,c
 22338  004AFC  2EE8               	decfsz	wreg,f,c
 22339  004AFE  D7F9               	goto	u24395
 22340  004B00  D02F               	goto	L4
 22341  004B02                     l20759:
 22342                           
 22343                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22344  004B02  0EFA               	movlw	-6
 22345  004B04  CFE3 F050          	movff	plusw1,btemp+8
 22346  004B08  0EFB               	movlw	-5
 22347  004B0A  CFE3 F051          	movff	plusw1,btemp+9
 22348  004B0E  0EFC               	movlw	-4
 22349  004B10  CFE3 F052          	movff	plusw1,btemp+10
 22350  004B14  0EFD               	movlw	-3
 22351  004B16  CFE3 F053          	movff	plusw1,btemp+11
 22352  004B1A  0E0C               	movlw	12
 22353  004B1C                     u24405:
 22354  004B1C  90D8               	bcf	status,0,c
 22355  004B1E  3650               	rlcf	btemp+8,f,c
 22356  004B20  3651               	rlcf	btemp+9,f,c
 22357  004B22  3652               	rlcf	btemp+10,f,c
 22358  004B24  3653               	rlcf	btemp+11,f,c
 22359  004B26  2EE8               	decfsz	wreg,f,c
 22360  004B28  D7F9               	goto	u24405
 22361  004B2A  C050  F060         	movff	btemp+8,___lldiv@dividend
 22362  004B2E  C051  F061         	movff	btemp+9,___lldiv@dividend+1
 22363  004B32  C052  F062         	movff	btemp+10,___lldiv@dividend+2
 22364  004B36  C053  F063         	movff	btemp+11,___lldiv@dividend+3
 22365  004B3A  0E7D               	movlw	125
 22366  004B3C  0100               	movlb	0	; () banked
 22367  004B3E  6F64               	movwf	___lldiv@divisor& (0+255),b
 22368  004B40  0E00               	movlw	0
 22369  004B42  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22370  004B44  0E00               	movlw	0
 22371  004B46  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22372  004B48  0E00               	movlw	0
 22373  004B4A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22374  004B4C  ECB0  F050         	call	___lldiv	;wreg free
 22375  004B50  C060  F050         	movff	?___lldiv,btemp+8
 22376  004B54  C061  F051         	movff	?___lldiv+1,btemp+9
 22377  004B58  C062  F052         	movff	?___lldiv+2,btemp+10
 22378  004B5C  C063  F053         	movff	?___lldiv+3,btemp+11
 22379  004B60                     L4:
 22380                           
 22381                           ;stkvar	_DutyCycleCallback$2252 @ sp[(-10)+0]
 22382  004B60  0EF6               	movlw	-10
 22383  004B62  C050  FFE3         	movff	btemp+8,plusw1
 22384  004B66  0EF7               	movlw	-9
 22385  004B68  C051  FFE3         	movff	btemp+9,plusw1
 22386  004B6C  0EF8               	movlw	-8
 22387  004B6E  C052  FFE3         	movff	btemp+10,plusw1
 22388  004B72  0EF9               	movlw	-7
 22389  004B74  C053  FFE3         	movff	btemp+11,plusw1
 22390                           
 22391                           ;stkvar	_DutyCycleCallback$2252 @ sp[(-10)+0]
 22392  004B78  50E1               	movf	fsr1l,w,c
 22393  004B7A  0FF6               	addlw	-10
 22394  004B7C  6ED9               	movwf	fsr2l,c
 22395  004B7E  50E2               	movf	fsr1h,w,c
 22396  004B80  6EDA               	movwf	fsr2h,c
 22397  004B82  0EFF               	movlw	255
 22398  004B84  22DA               	addwfc	fsr2h,f,c
 22399  004B86  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
 22400  004B8A  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
 22401  004B8E  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
 22402  004B92  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
 22403  004B96  0102               	movlb	2	; () banked
 22404  004B98  51ED               	movf	(_loRa+233)& (0+255),w,b
 22405  004B9A  ECD7  F05A         	call	_SwTimerSetTimeout
 22406                           
 22407                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
 22408  004B9E  0102               	movlb	2	; () banked
 22409  004BA0  51ED               	movf	(_loRa+233)& (0+255),w,b
 22410  004BA2  EC5C  F04D         	call	_SwTimerStart
 22411  004BA6                     l1635:
 22412                           
 22413                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 22414  004BA6  0EF5               	movlw	245
 22415  004BA8  26E1               	addwf	fsr1l,f,c
 22416  004BAA  0EFF               	movlw	255
 22417  004BAC  22E2               	addwfc	fsr1h,f,c
 22418  004BAE  0012               	return		;funcret
 22419  004BB0                     __end_of_DutyCycleCallback:
 22420                           	opt stack 0
 22421                           tosu	equ	0xFFF
 22422                           tosh	equ	0xFFE
 22423                           tosl	equ	0xFFD
 22424                           pclath	equ	0xFFA
 22425                           tblptru	equ	0xFF8
 22426                           tblptrh	equ	0xFF7
 22427                           tblptrl	equ	0xFF6
 22428                           tablat	equ	0xFF5
 22429                           prodh	equ	0xFF4
 22430                           prodl	equ	0xFF3
 22431                           intcon	equ	0xFF2
 22432                           intcon2	equ	0xFF1
 22433                           intcon3	equ	0xFF0
 22434                           postinc0	equ	0xFEE
 22435                           wreg	equ	0xFE8
 22436                           postinc1	equ	0xFE6
 22437                           plusw1	equ	0xFE3
 22438                           fsr1h	equ	0xFE2
 22439                           fsr1l	equ	0xFE1
 22440                           indf2	equ	0xFDF
 22441                           postinc2	equ	0xFDE
 22442                           postdec2	equ	0xFDD
 22443                           fsr2h	equ	0xFDA
 22444                           fsr2l	equ	0xFD9
 22445                           status	equ	0xFD8
 22446                           
 22447 ;; *************** function _UpdateJoinSuccessState *****************
 22448 ;; Defined at:
 22449 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22450 ;; Parameters:    Size  Location     Type
 22451 ;;  param           1  [STACK] unsigned char 
 22452 ;; Auto vars:     Size  Location     Type
 22453 ;;		None
 22454 ;; Return value:  Size  Location     Type
 22455 ;;                  1  [STACK] void 
 22456 ;; Registers used:
 22457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, pro
      +dh, cstack
 22458 ;; Tracked objects:
 22459 ;;		On entry : 0/0
 22460 ;;		On exit  : 0/0
 22461 ;;		Unchanged: 0/0
 22462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22467 ;;Total ram usage:        0 bytes
 22468 ;; Hardware stack levels used:    1
 22469 ;; Hardware stack levels required when called:   11
 22470 ;; This function calls:
 22471 ;;		_RxJoinResponse
 22472 ;;		_SwTimerSetTimeout
 22473 ;;		_SwTimerStart
 22474 ;;		___lldiv
 22475 ;; This function is called by:
 22476 ;;		_SetCallbackSoftwareTimers
 22477 ;;		_LORAWAN_RxDone
 22478 ;;		_SwTimersExecute
 22479 ;; This function uses a reentrant model
 22480 ;;
 22481                           
 22482                           	psect	text141
 22483  007C68                     __ptext141:
 22484                           	opt stack 0
 22485  007C68                     _UpdateJoinSuccessState:
 22486                           	opt stack 0
 22487                           
 22488                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 22489  007C68  52E6               	movf	postinc1,f,c
 22490  007C6A  52E6               	movf	postinc1,f,c
 22491  007C6C  52E6               	movf	postinc1,f,c
 22492  007C6E  52E6               	movf	postinc1,f,c
 22493                           
 22494                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
 22495                           
 22496                           ;incstack = 0
 22497  007C70  0102               	movlb	2	; () banked
 22498  007C72  9504               	bcf	_loRa& (0+255),2,b
 22499                           
 22500                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
 22501  007C74  8906               	bsf	(_loRa+2)& (0+255),4,b
 22502                           
 22503                           ; BSR set to: 2
 22504                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
 22505  007C76  0EF0               	movlw	-16
 22506  007C78  1706               	andwf	(_loRa+2)& (0+255),f,b
 22507                           
 22508                           ; BSR set to: 2
 22509                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
 22510  007C7A  6BD4               	clrf	(_loRa+208)& (0+255),b
 22511  007C7C  6BD5               	clrf	(_loRa+209)& (0+255),b
 22512                           
 22513                           ; BSR set to: 2
 22514                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
 22515  007C7E  6BF2               	clrf	(_loRa+238)& (0+255),b
 22516                           
 22517                           ; BSR set to: 2
 22518                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
 22519  007C80  A507               	btfss	(_loRa+3)& (0+255),2,b
 22520  007C82  D07B               	goto	l19639
 22521                           
 22522                           ; BSR set to: 2
 22523                           ;lorawan.c: 1052: {
 22524                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 22525  007C84  51D3               	movf	(_loRa+207)& (0+255),w,b
 22526  007C86  E107               	bnz	u22330
 22527  007C88  29D0               	incf	(_loRa+204)& (0+255),w,b
 22528  007C8A  0EFF               	movlw	255
 22529  007C8C  59D1               	subwfb	(_loRa+205)& (0+255),w,b
 22530  007C8E  0E0F               	movlw	15
 22531  007C90  59D2               	subwfb	(_loRa+206)& (0+255),w,b
 22532  007C92  A0D8               	btfss	status,0,c
 22533  007C94  D024               	goto	l19633
 22534  007C96                     u22330:
 22535                           
 22536                           ; BSR set to: 2
 22537  007C96  C2D0  F060         	movff	_loRa+204,___lldiv@dividend
 22538  007C9A  C2D1  F061         	movff	_loRa+205,___lldiv@dividend+1
 22539  007C9E  C2D2  F062         	movff	_loRa+206,___lldiv@dividend+2
 22540  007CA2  C2D3  F063         	movff	_loRa+207,___lldiv@dividend+3
 22541  007CA6  0E7D               	movlw	125
 22542  007CA8  0100               	movlb	0	; () banked
 22543  007CAA  6F64               	movwf	___lldiv@divisor& (0+255),b
 22544  007CAC  0E00               	movlw	0
 22545  007CAE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22546  007CB0  0E00               	movlw	0
 22547  007CB2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22548  007CB4  0E00               	movlw	0
 22549  007CB6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22550  007CB8  ECB0  F050         	call	___lldiv	;wreg free
 22551  007CBC  C060  F050         	movff	?___lldiv,btemp+8
 22552  007CC0  C061  F051         	movff	?___lldiv+1,btemp+9
 22553  007CC4  C062  F052         	movff	?___lldiv+2,btemp+10
 22554  007CC8  C063  F053         	movff	?___lldiv+3,btemp+11
 22555  007CCC  0E0C               	movlw	12
 22556  007CCE                     u22345:
 22557  007CCE  90D8               	bcf	status,0,c
 22558  007CD0  3650               	rlcf	btemp+8,f,c
 22559  007CD2  3651               	rlcf	btemp+9,f,c
 22560  007CD4  3652               	rlcf	btemp+10,f,c
 22561  007CD6  3653               	rlcf	btemp+11,f,c
 22562  007CD8  2EE8               	decfsz	wreg,f,c
 22563  007CDA  D7F9               	goto	u22345
 22564  007CDC  D02B               	goto	L5
 22565  007CDE                     l19633:
 22566                           
 22567                           ; BSR set to: 2
 22568  007CDE  C2D0  F050         	movff	_loRa+204,btemp+8
 22569  007CE2  C2D1  F051         	movff	_loRa+205,btemp+9
 22570  007CE6  C2D2  F052         	movff	_loRa+206,btemp+10
 22571  007CEA  C2D3  F053         	movff	_loRa+207,btemp+11
 22572  007CEE  0E0C               	movlw	12
 22573  007CF0                     u22355:
 22574  007CF0  90D8               	bcf	status,0,c
 22575  007CF2  3650               	rlcf	btemp+8,f,c
 22576  007CF4  3651               	rlcf	btemp+9,f,c
 22577  007CF6  3652               	rlcf	btemp+10,f,c
 22578  007CF8  3653               	rlcf	btemp+11,f,c
 22579  007CFA  2EE8               	decfsz	wreg,f,c
 22580  007CFC  D7F9               	goto	u22355
 22581  007CFE  C050  F060         	movff	btemp+8,___lldiv@dividend
 22582  007D02  C051  F061         	movff	btemp+9,___lldiv@dividend+1
 22583  007D06  C052  F062         	movff	btemp+10,___lldiv@dividend+2
 22584  007D0A  C053  F063         	movff	btemp+11,___lldiv@dividend+3
 22585  007D0E  0E7D               	movlw	125
 22586  007D10  0100               	movlb	0	; () banked
 22587  007D12  6F64               	movwf	___lldiv@divisor& (0+255),b
 22588  007D14  0E00               	movlw	0
 22589  007D16  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22590  007D18  0E00               	movlw	0
 22591  007D1A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22592  007D1C  0E00               	movlw	0
 22593  007D1E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22594  007D20  ECB0  F050         	call	___lldiv	;wreg free
 22595  007D24  C060  F050         	movff	?___lldiv,btemp+8
 22596  007D28  C061  F051         	movff	?___lldiv+1,btemp+9
 22597  007D2C  C062  F052         	movff	?___lldiv+2,btemp+10
 22598  007D30  C063  F053         	movff	?___lldiv+3,btemp+11
 22599  007D34                     L5:
 22600                           
 22601                           ;stkvar	_UpdateJoinSuccessState$2923 @ sp[(-4)+0]
 22602  007D34  0EFC               	movlw	-4
 22603  007D36  C050  FFE3         	movff	btemp+8,plusw1
 22604  007D3A  0EFD               	movlw	-3
 22605  007D3C  C051  FFE3         	movff	btemp+9,plusw1
 22606  007D40  0EFE               	movlw	-2
 22607  007D42  C052  FFE3         	movff	btemp+10,plusw1
 22608  007D46  0EFF               	movlw	-1
 22609  007D48  C053  FFE3         	movff	btemp+11,plusw1
 22610                           
 22611                           ;stkvar	_UpdateJoinSuccessState$2923 @ sp[(-4)+0]
 22612  007D4C  50E1               	movf	fsr1l,w,c
 22613  007D4E  0FFC               	addlw	-4
 22614  007D50  6ED9               	movwf	fsr2l,c
 22615  007D52  50E2               	movf	fsr1h,w,c
 22616  007D54  6EDA               	movwf	fsr2h,c
 22617  007D56  0EFF               	movlw	255
 22618  007D58  22DA               	addwfc	fsr2h,f,c
 22619  007D5A  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
 22620  007D5E  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
 22621  007D62  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
 22622  007D66  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
 22623  007D6A  0102               	movlb	2	; () banked
 22624  007D6C  51EB               	movf	(_loRa+231)& (0+255),w,b
 22625  007D6E  ECD7  F05A         	call	_SwTimerSetTimeout
 22626                           
 22627                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
 22628  007D72  0102               	movlb	2	; () banked
 22629  007D74  51EB               	movf	(_loRa+231)& (0+255),w,b
 22630  007D76  EC5C  F04D         	call	_SwTimerStart
 22631  007D7A                     l19639:
 22632                           
 22633                           ;lorawan.c: 1055: }
 22634                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
 22635  007D7A  0101               	movlb	1	; () banked
 22636  007D7C  510E               	movf	(_rxPayload+2)& (0+255),w,b
 22637  007D7E  110F               	iorwf	(_rxPayload+3)& (0+255),w,b
 22638  007D80  B4D8               	btfsc	status,2,c
 22639  007D82  D00C               	goto	u22379
 22640                           
 22641                           ; BSR set to: 1
 22642                           ;lorawan.c: 1058: {
 22643                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
 22644  007D84  D801               	call	u22378
 22645  007D86  D00A               	goto	u22379
 22646  007D88                     u22378:
 22647  007D88  0005               	push	
 22648  007D8A  6EFA               	movwf	pclath,c
 22649  007D8C  510E               	movf	(_rxPayload+2)& (0+255),w,b
 22650  007D8E  6EFD               	movwf	tosl,c
 22651  007D90  510F               	movf	(_rxPayload+3)& (0+255),w,b
 22652  007D92  6EFE               	movwf	tosh,c
 22653  007D94  6AFF               	clrf	tosu,c
 22654  007D96  50FA               	movf	pclath,w,c
 22655  007D98  0E01               	movlw	1
 22656  007D9A  0012               	return		;indir
 22657  007D9C                     u22379:
 22658                           
 22659                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
 22660  007D9C  0EFB               	movlw	251
 22661  007D9E  26E1               	addwf	fsr1l,f,c
 22662  007DA0  0EFF               	movlw	255
 22663  007DA2  22E2               	addwfc	fsr1h,f,c
 22664  007DA4  0012               	return		;funcret
 22665  007DA6                     __end_of_UpdateJoinSuccessState:
 22666                           	opt stack 0
 22667                           tosu	equ	0xFFF
 22668                           tosh	equ	0xFFE
 22669                           tosl	equ	0xFFD
 22670                           pclath	equ	0xFFA
 22671                           tblptru	equ	0xFF8
 22672                           tblptrh	equ	0xFF7
 22673                           tblptrl	equ	0xFF6
 22674                           tablat	equ	0xFF5
 22675                           prodh	equ	0xFF4
 22676                           prodl	equ	0xFF3
 22677                           intcon	equ	0xFF2
 22678                           intcon2	equ	0xFF1
 22679                           intcon3	equ	0xFF0
 22680                           postinc0	equ	0xFEE
 22681                           wreg	equ	0xFE8
 22682                           postinc1	equ	0xFE6
 22683                           plusw1	equ	0xFE3
 22684                           fsr1h	equ	0xFE2
 22685                           fsr1l	equ	0xFE1
 22686                           indf2	equ	0xFDF
 22687                           postinc2	equ	0xFDE
 22688                           postdec2	equ	0xFDD
 22689                           fsr2h	equ	0xFDA
 22690                           fsr2l	equ	0xFD9
 22691                           status	equ	0xFD8
 22692                           
 22693 ;; *************** function _AutomaticReplyCallback *****************
 22694 ;; Defined at:
 22695 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22696 ;; Parameters:    Size  Location     Type
 22697 ;;  param           1  [STACK] unsigned char 
 22698 ;; Auto vars:     Size  Location     Type
 22699 ;;		None
 22700 ;; Return value:  Size  Location     Type
 22701 ;;                  1  [STACK] void 
 22702 ;; Registers used:
 22703 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22704 ;; Tracked objects:
 22705 ;;		On entry : 3F/0
 22706 ;;		On exit  : 3F/2
 22707 ;;		Unchanged: 0/0
 22708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22713 ;;Total ram usage:        0 bytes
 22714 ;; Hardware stack levels used:    1
 22715 ;; Hardware stack levels required when called:   14
 22716 ;; This function calls:
 22717 ;;		_LORAWAN_Send
 22718 ;; This function is called by:
 22719 ;;		_SetCallbackSoftwareTimers
 22720 ;;		_SwTimersExecute
 22721 ;; This function uses a reentrant model
 22722 ;;
 22723                           
 22724                           	psect	text142
 22725  00BDC8                     __ptext142:
 22726                           	opt stack 0
 22727  00BDC8                     _AutomaticReplyCallback:
 22728                           	opt stack 14
 22729                           
 22730                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
 22731                           
 22732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 22733                           ;incstack = 0
 22734  00BDC8  0EF0               	movlw	-16
 22735  00BDCA  0102               	movlb	2	; () banked
 22736  00BDCC  1706               	andwf	(_loRa+2)& (0+255),f,b
 22737                           
 22738                           ; BSR set to: 2
 22739                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
 22740  00BDCE  0E00               	movlw	0
 22741  00BDD0  0100               	movlb	0	; () banked
 22742  00BDD2  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 22743  00BDD4  0E00               	movlw	0
 22744  00BDD6  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 22745  00BDD8  0E00               	movlw	0
 22746  00BDDA  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 22747  00BDDC  0E00               	movlw	0
 22748  00BDDE  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 22749  00BDE0  0E00               	movlw	0
 22750  00BDE2  ECDE  F049         	call	_LORAWAN_Send
 22751                           
 22752                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
 22753  00BDE6  0102               	movlb	2	; () banked
 22754  00BDE8  9704               	bcf	_loRa& (0+255),3,b
 22755                           
 22756                           ; BSR set to: 2
 22757                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
 22758  00BDEA  52E5               	movf	postdec1,f,c
 22759  00BDEC  0012               	return		;funcret
 22760  00BDEE                     __end_of_AutomaticReplyCallback:
 22761                           	opt stack 0
 22762                           tosu	equ	0xFFF
 22763                           tosh	equ	0xFFE
 22764                           tosl	equ	0xFFD
 22765                           pclath	equ	0xFFA
 22766                           tblptru	equ	0xFF8
 22767                           tblptrh	equ	0xFF7
 22768                           tblptrl	equ	0xFF6
 22769                           tablat	equ	0xFF5
 22770                           prodh	equ	0xFF4
 22771                           prodl	equ	0xFF3
 22772                           intcon	equ	0xFF2
 22773                           intcon2	equ	0xFF1
 22774                           intcon3	equ	0xFF0
 22775                           postinc0	equ	0xFEE
 22776                           wreg	equ	0xFE8
 22777                           postinc1	equ	0xFE6
 22778                           postdec1	equ	0xFE5
 22779                           plusw1	equ	0xFE3
 22780                           fsr1h	equ	0xFE2
 22781                           fsr1l	equ	0xFE1
 22782                           indf2	equ	0xFDF
 22783                           postinc2	equ	0xFDE
 22784                           postdec2	equ	0xFDD
 22785                           fsr2h	equ	0xFDA
 22786                           fsr2l	equ	0xFD9
 22787                           status	equ	0xFD8
 22788                           
 22789 ;; *************** function _AckRetransmissionCallback *****************
 22790 ;; Defined at:
 22791 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22792 ;; Parameters:    Size  Location     Type
 22793 ;;  param           1  [STACK] unsigned char 
 22794 ;; Auto vars:     Size  Location     Type
 22795 ;;  maximumPacke    1  [STACK] unsigned char 
 22796 ;; Return value:  Size  Location     Type
 22797 ;;                  1  [STACK] void 
 22798 ;; Registers used:
 22799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22800 ;; Tracked objects:
 22801 ;;		On entry : 3F/0
 22802 ;;		On exit  : 0/0
 22803 ;;		Unchanged: 0/0
 22804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22809 ;;Total ram usage:        0 bytes
 22810 ;; Hardware stack levels used:    1
 22811 ;; Hardware stack levels required when called:   13
 22812 ;; This function calls:
 22813 ;;		_FindSmallestDataRate
 22814 ;;		_LORAWAN_GetMaxPayloadSize
 22815 ;;		_RADIO_Transmit
 22816 ;;		_ResetParametersForConfirmedTransmission
 22817 ;;		_RxData
 22818 ;;		_SelectChannelForTransmission
 22819 ;;		_UpdateRetransmissionAckTimeoutState
 22820 ;; This function is called by:
 22821 ;;		_SetCallbackSoftwareTimers
 22822 ;;		_SwTimersExecute
 22823 ;; This function uses a reentrant model
 22824 ;;
 22825                           
 22826                           	psect	text143
 22827  008382                     __ptext143:
 22828                           	opt stack 0
 22829  008382                     _AckRetransmissionCallback:
 22830                           	opt stack 0
 22831                           
 22832                           ; BSR set to: 2
 22833                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 22834  008382  52E6               	movf	postinc1,f,c
 22835                           
 22836                           ;lorawan.c: 936: uint8_t maximumPacketSize;
 22837                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
 22838                           
 22839                           ;incstack = 0
 22840  008384  0102               	movlb	2	; () banked
 22841  008386  B107               	btfsc	(_loRa+3)& (0+255),0,b
 22842  008388  D086               	goto	l20865
 22843                           
 22844                           ; BSR set to: 2
 22845                           ;lorawan.c: 939: {
 22846                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
 22847  00838A  51DD               	movf	(_loRa+217)& (0+255),w,b
 22848  00838C  5DDB               	subwf	(_loRa+215)& (0+255),w,b
 22849  00838E  A0D8               	btfss	status,0,c
 22850  008390  D061               	goto	l20855
 22851                           
 22852                           ; BSR set to: 2
 22853                           ;lorawan.c: 941: {
 22854                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
 22855  008392  EC7B  F055         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 22856  008396  6E53               	movwf	btemp+11,c
 22857  008398  0E0D               	movlw	13
 22858  00839A  2653               	addwf	btemp+11,f,c
 22859                           
 22860                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
 22861  00839C  0EFF               	movlw	-1
 22862  00839E  C053  FFE3         	movff	btemp+11,plusw1
 22863                           
 22864                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
 22865                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
 22866  0083A2  0EFF               	movlw	-1
 22867  0083A4  50E3               	movf	plusw1,w,c
 22868  0083A6  6E49               	movwf	btemp+1,c
 22869  0083A8  6A4A               	clrf	btemp+2,c
 22870  0083AA  0102               	movlb	2	; () banked
 22871  0083AC  51D8               	movf	(_loRa+212)& (0+255),w,b
 22872  0083AE  5C49               	subwf	btemp+1,w,c
 22873  0083B0  51D9               	movf	(_loRa+213)& (0+255),w,b
 22874  0083B2  584A               	subwfb	btemp+2,w,c
 22875  0083B4  A0D8               	btfss	status,0,c
 22876  0083B6  D039               	goto	l20849
 22877                           
 22878                           ; BSR set to: 2
 22879                           ;lorawan.c: 946: {
 22880                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
 22881  0083B8  0E01               	movlw	1
 22882  0083BA  EC7D  F053         	call	_SelectChannelForTransmission
 22883  0083BE  0900               	iorlw	0
 22884  0083C0  A4D8               	btfss	status,2,c
 22885  0083C2  D030               	goto	l20845
 22886                           
 22887                           ;lorawan.c: 948: {
 22888                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 22889  0083C4  0E30               	movlw	low (_macBuffer+16)
 22890  0083C6  0100               	movlb	0	; () banked
 22891  0083C8  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 22892  0083CA  0E05               	movlw	high (_macBuffer+16)
 22893  0083CC  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 22894  0083CE  C2D8  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 22895  0083D2  ECE4  F02D         	call	_RADIO_Transmit	;wreg free
 22896  0083D6  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
 22897  0083DA  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
 22898  0083DE  5049               	movf	btemp+1,w,c
 22899  0083E0  104A               	iorwf	btemp+2,w,c
 22900  0083E2  A4D8               	btfss	status,2,c
 22901  0083E4  D01F               	goto	l20845
 22902                           
 22903                           ;lorawan.c: 951: {
 22904                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 22905  0083E6  0102               	movlb	2	; () banked
 22906  0083E8  5106               	movf	(_loRa+2)& (0+255),w,b
 22907  0083EA  0BF0               	andlw	-16
 22908  0083EC  0901               	iorlw	1
 22909  0083EE  6F06               	movwf	(_loRa+2)& (0+255),b
 22910                           
 22911                           ; BSR set to: 2
 22912                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
 22913  0083F0  2BDD               	incf	(_loRa+217)& (0+255),f,b
 22914                           
 22915                           ; BSR set to: 2
 22916                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
 22917  0083F2  B1DD               	btfsc	(_loRa+217)& (0+255),0,b
 22918  0083F4  D052               	goto	l2176
 22919                           
 22920                           ; BSR set to: 2
 22921  0083F6  51E3               	movf	(_loRa+223)& (0+255),w,b
 22922  0083F8  B4D8               	btfsc	status,2,c
 22923  0083FA  D04F               	goto	l2176
 22924                           
 22925                           ; BSR set to: 2
 22926  0083FC  51DD               	movf	(_loRa+217)& (0+255),w,b
 22927  0083FE  6E49               	movwf	btemp+1,c
 22928  008400  6A4A               	clrf	btemp+2,c
 22929  008402  51DB               	movf	(_loRa+215)& (0+255),w,b
 22930  008404  6E52               	movwf	btemp+10,c
 22931  008406  6A53               	clrf	btemp+11,c
 22932  008408  0E01               	movlw	1
 22933  00840A  2652               	addwf	btemp+10,f,c
 22934  00840C  0E00               	movlw	0
 22935  00840E  2253               	addwfc	btemp+11,f,c
 22936  008410  5049               	movf	btemp+1,w,c
 22937  008412  1852               	xorwf	btemp+10,w,c
 22938  008414  E104               	bnz	u24610
 22939  008416  504A               	movf	btemp+2,w,c
 22940  008418  1853               	xorwf	btemp+11,w,c
 22941  00841A  B4D8               	btfsc	status,2,c
 22942  00841C  D03E               	goto	l2176
 22943  00841E                     u24610:
 22944                           
 22945                           ; BSR set to: 2
 22946                           ;lorawan.c: 957: {
 22947                           ;lorawan.c: 958: FindSmallestDataRate();
 22948  00841E  EC94  F048         	call	_FindSmallestDataRate	;wreg free
 22949  008422  D03B               	goto	l2176
 22950  008424                     l20845:
 22951                           
 22952                           ;lorawan.c: 961: else
 22953                           ;lorawan.c: 962: {
 22954                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
 22955  008424  ECD6  F052         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 22956  008428  D038               	goto	l2176
 22957  00842A                     l20849:
 22958                           
 22959                           ; BSR set to: 2
 22960                           ;lorawan.c: 973: else
 22961                           ;lorawan.c: 974: {
 22962                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
 22963  00842A  ECF4  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 22964                           
 22965                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
 22966  00842E  0101               	movlb	1	; () banked
 22967  008430  510C               	movf	_rxPayload& (0+255),w,b
 22968  008432  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 22969  008434  B4D8               	btfsc	status,2,c
 22970  008436  D031               	goto	l2176
 22971                           
 22972                           ; BSR set to: 1
 22973                           ;lorawan.c: 977: {
 22974                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
 22975  008438  0E00               	movlw	0
 22976  00843A  0100               	movlb	0	; () banked
 22977  00843C  6F60               	movwf	RxData@pData& (0+255),b
 22978  00843E  0E00               	movlw	0
 22979  008440  6F61               	movwf	(RxData@pData+1)& (0+255),b
 22980  008442  0E00               	movlw	0
 22981  008444  6F62               	movwf	RxData@dataLength& (0+255),b
 22982  008446  0E04               	movlw	4
 22983  008448  6F63               	movwf	RxData@status& (0+255),b
 22984  00844A  D801               	call	u24638
 22985  00844C  D026               	goto	l2176
 22986  00844E                     u24638:
 22987  00844E  0005               	push	
 22988  008450  6EFA               	movwf	pclath,c
 22989  008452  D019               	goto	L6
 22990  008454                     l20855:
 22991                           
 22992                           ; BSR set to: 2
 22993                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
 22994  008454  51DD               	movf	(_loRa+217)& (0+255),w,b
 22995  008456  5DDB               	subwf	(_loRa+215)& (0+255),w,b
 22996  008458  A0D8               	btfss	status,0,c
 22997                           
 22998                           ; BSR set to: 2
 22999  00845A  B107               	btfsc	(_loRa+3)& (0+255),0,b
 23000  00845C  D01E               	goto	l2176
 23001                           
 23002                           ; BSR set to: 2
 23003                           ;lorawan.c: 983: {
 23004                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
 23005  00845E  ECF4  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 23006                           
 23007                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
 23008  008462  0101               	movlb	1	; () banked
 23009  008464  510C               	movf	_rxPayload& (0+255),w,b
 23010  008466  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 23011  008468  B4D8               	btfsc	status,2,c
 23012  00846A  D017               	goto	l2176
 23013                           
 23014                           ; BSR set to: 1
 23015                           ;lorawan.c: 986: {
 23016                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
 23017  00846C  0E00               	movlw	0
 23018  00846E  0100               	movlb	0	; () banked
 23019  008470  6F60               	movwf	RxData@pData& (0+255),b
 23020  008472  0E00               	movlw	0
 23021  008474  6F61               	movwf	(RxData@pData+1)& (0+255),b
 23022  008476  0E00               	movlw	0
 23023  008478  6F62               	movwf	RxData@dataLength& (0+255),b
 23024  00847A  0E00               	movlw	0
 23025  00847C  6F63               	movwf	RxData@status& (0+255),b
 23026  00847E  D801               	call	u24678
 23027  008480  D00C               	goto	l2176
 23028  008482                     u24678:
 23029  008482  0005               	push	
 23030  008484  6EFA               	movwf	pclath,c
 23031  008486                     L6:
 23032  008486  0101               	movlb	1	; () banked
 23033  008488  510C               	movf	_rxPayload& (0+255),w,b
 23034  00848A  6EFD               	movwf	tosl,c
 23035  00848C  510D               	movf	(_rxPayload+1)& (0+255),w,b
 23036  00848E  6EFE               	movwf	tosh,c
 23037  008490  6AFF               	clrf	tosu,c
 23038  008492  50FA               	movf	pclath,w,c
 23039  008494  0012               	return		;indir
 23040  008496                     l20865:
 23041                           
 23042                           ; BSR set to: 2
 23043                           ;lorawan.c: 991: else
 23044                           ;lorawan.c: 992: {
 23045                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
 23046  008496  ECF4  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 23047  00849A                     l2176:
 23048                           
 23049                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
 23050  00849A  52E5               	movf	postdec1,f,c
 23051  00849C  52E5               	movf	postdec1,f,c
 23052  00849E  0012               	return		;funcret
 23053  0084A0                     __end_of_AckRetransmissionCallback:
 23054                           	opt stack 0
 23055                           tosu	equ	0xFFF
 23056                           tosh	equ	0xFFE
 23057                           tosl	equ	0xFFD
 23058                           pclath	equ	0xFFA
 23059                           tblptru	equ	0xFF8
 23060                           tblptrh	equ	0xFF7
 23061                           tblptrl	equ	0xFF6
 23062                           tablat	equ	0xFF5
 23063                           prodh	equ	0xFF4
 23064                           prodl	equ	0xFF3
 23065                           intcon	equ	0xFF2
 23066                           intcon2	equ	0xFF1
 23067                           intcon3	equ	0xFF0
 23068                           postinc0	equ	0xFEE
 23069                           wreg	equ	0xFE8
 23070                           postinc1	equ	0xFE6
 23071                           postdec1	equ	0xFE5
 23072                           plusw1	equ	0xFE3
 23073                           fsr1h	equ	0xFE2
 23074                           fsr1l	equ	0xFE1
 23075                           indf2	equ	0xFDF
 23076                           postinc2	equ	0xFDE
 23077                           postdec2	equ	0xFDD
 23078                           fsr2h	equ	0xFDA
 23079                           fsr2l	equ	0xFD9
 23080                           status	equ	0xFD8
 23081                           
 23082 ;; *************** function _LORAWAN_LinkCheckCallback *****************
 23083 ;; Defined at:
 23084 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23085 ;; Parameters:    Size  Location     Type
 23086 ;;  param           1  [STACK] unsigned char 
 23087 ;; Auto vars:     Size  Location     Type
 23088 ;;  iCtr            1  [STACK] unsigned char 
 23089 ;; Return value:  Size  Location     Type
 23090 ;;                  1  [STACK] void 
 23091 ;; Registers used:
 23092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
 23093 ;; Tracked objects:
 23094 ;;		On entry : 3F/0
 23095 ;;		On exit  : 0/0
 23096 ;;		Unchanged: 0/0
 23097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23102 ;;Total ram usage:        0 bytes
 23103 ;; Hardware stack levels used:    1
 23104 ;; Hardware stack levels required when called:   11
 23105 ;; This function calls:
 23106 ;;		_SwTimerSetTimeout
 23107 ;;		_SwTimerStart
 23108 ;;		___lldiv
 23109 ;; This function is called by:
 23110 ;;		_SetCallbackSoftwareTimers
 23111 ;;		_SwTimersExecute
 23112 ;; This function uses a reentrant model
 23113 ;;
 23114                           
 23115                           	psect	text144
 23116  00718E                     __ptext144:
 23117                           	opt stack 0
 23118  00718E                     _LORAWAN_LinkCheckCallback:
 23119                           	opt stack 0
 23120                           
 23121                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 23122  00718E  0E05               	movlw	5
 23123  007190  26E1               	addwf	fsr1l,f,c
 23124  007192  0E00               	movlw	0
 23125  007194  22E2               	addwfc	fsr1h,f,c
 23126                           
 23127                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
 23128                           
 23129                           ;incstack = 0
 23130  007196  0102               	movlb	2	; () banked
 23131  007198  A107               	btfss	(_loRa+3)& (0+255),0,b
 23132                           
 23133                           ; BSR set to: 2
 23134  00719A  A507               	btfss	(_loRa+3)& (0+255),2,b
 23135  00719C  D02C               	goto	l20809
 23136                           
 23137                           ; BSR set to: 2
 23138                           ;lorawan.c: 886: {
 23139                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 23140                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
 23141  00719E  0EFF               	movlw	-1
 23142  0071A0  6AE3               	clrf	plusw1,c
 23143  0071A2  D00F               	goto	l20799
 23144  0071A4                     l20793:
 23145                           
 23146                           ; BSR set to: 2
 23147                           ;lorawan.c: 889: {
 23148                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 23149                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
 23150  0071A4  0EFF               	movlw	-1
 23151  0071A6  50E3               	movf	plusw1,w,c
 23152  0071A8  0D02               	mullw	2
 23153  0071AA  0EAC               	movlw	low (_loRa+168)
 23154  0071AC  24F3               	addwf	prodl,w,c
 23155  0071AE  6ED9               	movwf	fsr2l,c
 23156  0071B0  0E02               	movlw	high (_loRa+168)
 23157  0071B2  20F4               	addwfc	prodh,w,c
 23158  0071B4  6EDA               	movwf	fsr2h,c
 23159  0071B6  0E02               	movlw	2
 23160  0071B8  18DE               	xorwf	postinc2,w,c
 23161  0071BA  B4D8               	btfsc	status,2,c
 23162  0071BC  D009               	goto	u24470
 23163                           
 23164                           ; BSR set to: 2
 23165                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
 23166  0071BE  0EFF               	movlw	-1
 23167  0071C0  2AE3               	incf	plusw1,f,c
 23168  0071C2                     l20799:
 23169                           
 23170                           ; BSR set to: 2
 23171                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
 23172  0071C2  0EFF               	movlw	-1
 23173  0071C4  CFE3 F048          	movff	plusw1,btemp
 23174  0071C8  51AB               	movf	(_loRa+167)& (0+255),w,b
 23175  0071CA  5C48               	subwf	btemp,w,c
 23176  0071CC  A0D8               	btfss	status,0,c
 23177  0071CE  D7EA               	goto	l20793
 23178  0071D0                     u24470:
 23179                           
 23180                           ; BSR set to: 2
 23181                           ;lorawan.c: 893: }
 23182                           ;lorawan.c: 894: }
 23183                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
 23184                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
 23185  0071D0  0EFF               	movlw	-1
 23186  0071D2  50E3               	movf	plusw1,w,c
 23187  0071D4  19AB               	xorwf	(_loRa+167)& (0+255),w,b
 23188  0071D6  A4D8               	btfss	status,2,c
 23189  0071D8  D00E               	goto	l20809
 23190                           
 23191                           ; BSR set to: 2
 23192                           ;lorawan.c: 897: {
 23193                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
 23194  0071DA  51AB               	movf	(_loRa+167)& (0+255),w,b
 23195  0071DC  0D02               	mullw	2
 23196  0071DE  0EAC               	movlw	low (_loRa+168)
 23197  0071E0  24F3               	addwf	prodl,w,c
 23198  0071E2  6ED9               	movwf	fsr2l,c
 23199  0071E4  0E02               	movlw	high (_loRa+168)
 23200  0071E6  20F4               	addwfc	prodh,w,c
 23201  0071E8  6EDA               	movwf	fsr2h,c
 23202  0071EA  0E02               	movlw	2
 23203  0071EC  6EDF               	movwf	indf2,c
 23204                           
 23205                           ; BSR set to: 2
 23206                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
 23207  0071EE  0E10               	movlw	16
 23208  0071F0  61AB               	cpfslt	(_loRa+167)& (0+255),b
 23209  0071F2  D001               	goto	l20809
 23210                           
 23211                           ; BSR set to: 2
 23212                           ;lorawan.c: 901: {
 23213                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
 23214  0071F4  2BAB               	incf	(_loRa+167)& (0+255),f,b
 23215  0071F6                     l20809:
 23216                           
 23217                           ; BSR set to: 2
 23218                           ;lorawan.c: 903: }
 23219                           ;lorawan.c: 904: }
 23220                           ;lorawan.c: 905: }
 23221                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
 23222  0071F6  A507               	btfss	(_loRa+3)& (0+255),2,b
 23223  0071F8  D07B               	goto	l2154
 23224                           
 23225                           ; BSR set to: 2
 23226                           ;lorawan.c: 909: {
 23227                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 23228  0071FA  51D3               	movf	(_loRa+207)& (0+255),w,b
 23229  0071FC  E107               	bnz	u24510
 23230  0071FE  29D0               	incf	(_loRa+204)& (0+255),w,b
 23231  007200  0EFF               	movlw	255
 23232  007202  59D1               	subwfb	(_loRa+205)& (0+255),w,b
 23233  007204  0E0F               	movlw	15
 23234  007206  59D2               	subwfb	(_loRa+206)& (0+255),w,b
 23235  007208  A0D8               	btfss	status,0,c
 23236  00720A  D024               	goto	l20815
 23237  00720C                     u24510:
 23238                           
 23239                           ; BSR set to: 2
 23240  00720C  C2D0  F060         	movff	_loRa+204,___lldiv@dividend
 23241  007210  C2D1  F061         	movff	_loRa+205,___lldiv@dividend+1
 23242  007214  C2D2  F062         	movff	_loRa+206,___lldiv@dividend+2
 23243  007218  C2D3  F063         	movff	_loRa+207,___lldiv@dividend+3
 23244  00721C  0E7D               	movlw	125
 23245  00721E  0100               	movlb	0	; () banked
 23246  007220  6F64               	movwf	___lldiv@divisor& (0+255),b
 23247  007222  0E00               	movlw	0
 23248  007224  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23249  007226  0E00               	movlw	0
 23250  007228  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23251  00722A  0E00               	movlw	0
 23252  00722C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23253  00722E  ECB0  F050         	call	___lldiv	;wreg free
 23254  007232  C060  F050         	movff	?___lldiv,btemp+8
 23255  007236  C061  F051         	movff	?___lldiv+1,btemp+9
 23256  00723A  C062  F052         	movff	?___lldiv+2,btemp+10
 23257  00723E  C063  F053         	movff	?___lldiv+3,btemp+11
 23258  007242  0E0C               	movlw	12
 23259  007244                     u24525:
 23260  007244  90D8               	bcf	status,0,c
 23261  007246  3650               	rlcf	btemp+8,f,c
 23262  007248  3651               	rlcf	btemp+9,f,c
 23263  00724A  3652               	rlcf	btemp+10,f,c
 23264  00724C  3653               	rlcf	btemp+11,f,c
 23265  00724E  2EE8               	decfsz	wreg,f,c
 23266  007250  D7F9               	goto	u24525
 23267  007252  D02B               	goto	L7
 23268  007254                     l20815:
 23269                           
 23270                           ; BSR set to: 2
 23271  007254  C2D0  F050         	movff	_loRa+204,btemp+8
 23272  007258  C2D1  F051         	movff	_loRa+205,btemp+9
 23273  00725C  C2D2  F052         	movff	_loRa+206,btemp+10
 23274  007260  C2D3  F053         	movff	_loRa+207,btemp+11
 23275  007264  0E0C               	movlw	12
 23276  007266                     u24535:
 23277  007266  90D8               	bcf	status,0,c
 23278  007268  3650               	rlcf	btemp+8,f,c
 23279  00726A  3651               	rlcf	btemp+9,f,c
 23280  00726C  3652               	rlcf	btemp+10,f,c
 23281  00726E  3653               	rlcf	btemp+11,f,c
 23282  007270  2EE8               	decfsz	wreg,f,c
 23283  007272  D7F9               	goto	u24535
 23284  007274  C050  F060         	movff	btemp+8,___lldiv@dividend
 23285  007278  C051  F061         	movff	btemp+9,___lldiv@dividend+1
 23286  00727C  C052  F062         	movff	btemp+10,___lldiv@dividend+2
 23287  007280  C053  F063         	movff	btemp+11,___lldiv@dividend+3
 23288  007284  0E7D               	movlw	125
 23289  007286  0100               	movlb	0	; () banked
 23290  007288  6F64               	movwf	___lldiv@divisor& (0+255),b
 23291  00728A  0E00               	movlw	0
 23292  00728C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23293  00728E  0E00               	movlw	0
 23294  007290  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23295  007292  0E00               	movlw	0
 23296  007294  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23297  007296  ECB0  F050         	call	___lldiv	;wreg free
 23298  00729A  C060  F050         	movff	?___lldiv,btemp+8
 23299  00729E  C061  F051         	movff	?___lldiv+1,btemp+9
 23300  0072A2  C062  F052         	movff	?___lldiv+2,btemp+10
 23301  0072A6  C063  F053         	movff	?___lldiv+3,btemp+11
 23302  0072AA                     L7:
 23303                           
 23304                           ;stkvar	_LORAWAN_LinkCheckCallback$2906 @ sp[(-5)+0]
 23305  0072AA  0EFB               	movlw	-5
 23306  0072AC  C050  FFE3         	movff	btemp+8,plusw1
 23307  0072B0  0EFC               	movlw	-4
 23308  0072B2  C051  FFE3         	movff	btemp+9,plusw1
 23309  0072B6  0EFD               	movlw	-3
 23310  0072B8  C052  FFE3         	movff	btemp+10,plusw1
 23311  0072BC  0EFE               	movlw	-2
 23312  0072BE  C053  FFE3         	movff	btemp+11,plusw1
 23313                           
 23314                           ;stkvar	_LORAWAN_LinkCheckCallback$2906 @ sp[(-5)+0]
 23315  0072C2  50E1               	movf	fsr1l,w,c
 23316  0072C4  0FFB               	addlw	-5
 23317  0072C6  6ED9               	movwf	fsr2l,c
 23318  0072C8  50E2               	movf	fsr1h,w,c
 23319  0072CA  6EDA               	movwf	fsr2h,c
 23320  0072CC  0EFF               	movlw	255
 23321  0072CE  22DA               	addwfc	fsr2h,f,c
 23322  0072D0  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
 23323  0072D4  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
 23324  0072D8  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
 23325  0072DC  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
 23326  0072E0  0102               	movlb	2	; () banked
 23327  0072E2  51EB               	movf	(_loRa+231)& (0+255),w,b
 23328  0072E4  ECD7  F05A         	call	_SwTimerSetTimeout
 23329                           
 23330                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
 23331  0072E8  0102               	movlb	2	; () banked
 23332  0072EA  51EB               	movf	(_loRa+231)& (0+255),w,b
 23333  0072EC  EC5C  F04D         	call	_SwTimerStart
 23334  0072F0                     l2154:
 23335                           
 23336                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
 23337  0072F0  0EFA               	movlw	250
 23338  0072F2  26E1               	addwf	fsr1l,f,c
 23339  0072F4  0EFF               	movlw	255
 23340  0072F6  22E2               	addwfc	fsr1h,f,c
 23341  0072F8  0012               	return		;funcret
 23342  0072FA                     __end_of_LORAWAN_LinkCheckCallback:
 23343                           	opt stack 0
 23344                           tosu	equ	0xFFF
 23345                           tosh	equ	0xFFE
 23346                           tosl	equ	0xFFD
 23347                           pclath	equ	0xFFA
 23348                           tblptru	equ	0xFF8
 23349                           tblptrh	equ	0xFF7
 23350                           tblptrl	equ	0xFF6
 23351                           tablat	equ	0xFF5
 23352                           prodh	equ	0xFF4
 23353                           prodl	equ	0xFF3
 23354                           intcon	equ	0xFF2
 23355                           intcon2	equ	0xFF1
 23356                           intcon3	equ	0xFF0
 23357                           postinc0	equ	0xFEE
 23358                           wreg	equ	0xFE8
 23359                           postinc1	equ	0xFE6
 23360                           postdec1	equ	0xFE5
 23361                           plusw1	equ	0xFE3
 23362                           fsr1h	equ	0xFE2
 23363                           fsr1l	equ	0xFE1
 23364                           indf2	equ	0xFDF
 23365                           postinc2	equ	0xFDE
 23366                           postdec2	equ	0xFDD
 23367                           fsr2h	equ	0xFDA
 23368                           fsr2l	equ	0xFD9
 23369                           status	equ	0xFD8
 23370                           
 23371 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
 23372 ;; Defined at:
 23373 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23374 ;; Parameters:    Size  Location     Type
 23375 ;;  param           1  [STACK] unsigned char 
 23376 ;; Auto vars:     Size  Location     Type
 23377 ;;  freq            4  [STACK] unsigned long 
 23378 ;; Return value:  Size  Location     Type
 23379 ;;                  1  [STACK] void 
 23380 ;; Registers used:
 23381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
 23382 ;; Tracked objects:
 23383 ;;		On entry : 3F/0
 23384 ;;		On exit  : 0/0
 23385 ;;		Unchanged: 0/0
 23386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23391 ;;Total ram usage:        0 bytes
 23392 ;; Hardware stack levels used:    1
 23393 ;; Hardware stack levels required when called:   13
 23394 ;; This function calls:
 23395 ;;		_ConfigureRadioRx
 23396 ;;		_GetRx1Freq
 23397 ;;		_RADIO_ReceiveStart
 23398 ;;		_RADIO_ReceiveStop
 23399 ;;		_RADIO_ReleaseData
 23400 ;; This function is called by:
 23401 ;;		_SetCallbackSoftwareTimers
 23402 ;;		_SwTimersExecute
 23403 ;; This function uses a reentrant model
 23404 ;;
 23405                           
 23406                           	psect	text145
 23407  009558                     __ptext145:
 23408                           	opt stack 0
 23409  009558                     _LORAWAN_ReceiveWindow1Callback:
 23410                           	opt stack 0
 23411                           
 23412                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 23413  009558  52E6               	movf	postinc1,f,c
 23414  00955A  52E6               	movf	postinc1,f,c
 23415  00955C  52E6               	movf	postinc1,f,c
 23416  00955E  52E6               	movf	postinc1,f,c
 23417                           
 23418                           ;lorawan.c: 798: uint32_t freq;
 23419                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
 23420                           
 23421                           ;incstack = 0
 23422  009560  0102               	movlb	2	; () banked
 23423  009562  B107               	btfsc	(_loRa+3)& (0+255),0,b
 23424  009564  D050               	goto	l2127
 23425                           
 23426                           ; BSR set to: 2
 23427                           ;lorawan.c: 801: {
 23428                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
 23429  009566  0E02               	movlw	2
 23430  009568  1916               	xorwf	(_loRa+18)& (0+255),w,b
 23431  00956A  B4D8               	btfsc	status,2,c
 23432                           
 23433                           ; BSR set to: 2
 23434                           ;lorawan.c: 803: {
 23435                           ;lorawan.c: 804: RADIO_ReceiveStop();
 23436  00956C  ECDF  F05F         	call	_RADIO_ReceiveStop	;wreg free
 23437                           
 23438                           ;lorawan.c: 805: }
 23439                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
 23440  009570  0102               	movlb	2	; () banked
 23441  009572  51F3               	movf	(_loRa+239)& (0+255),w,b
 23442  009574  5D1B               	subwf	(_loRa+23)& (0+255),w,b
 23443  009576  A0D8               	btfss	status,0,c
 23444  009578  D004               	goto	l2125
 23445                           
 23446                           ; BSR set to: 2
 23447                           ;lorawan.c: 807: {
 23448                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
 23449  00957A  51F3               	movf	(_loRa+239)& (0+255),w,b
 23450  00957C  5D1B               	subwf	(_loRa+23)& (0+255),w,b
 23451  00957E  6F1B               	movwf	(_loRa+23)& (0+255),b
 23452                           
 23453                           ;lorawan.c: 809: }
 23454  009580  D001               	goto	l20775
 23455  009582                     l2125:
 23456                           
 23457                           ; BSR set to: 2
 23458                           ;lorawan.c: 810: else
 23459                           ;lorawan.c: 811: {
 23460                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
 23461  009582  6B1B               	clrf	(_loRa+23)& (0+255),b
 23462  009584                     l20775:
 23463                           
 23464                           ; BSR set to: 2
 23465                           ;lorawan.c: 813: }
 23466                           ;lorawan.c: 815: freq = GetRx1Freq();
 23467  009584  ECEB  F061         	call	_GetRx1Freq	;wreg free
 23468  009588  C060  F050         	movff	?_GetRx1Freq,btemp+8
 23469  00958C  C061  F051         	movff	?_GetRx1Freq+1,btemp+9
 23470  009590  C062  F052         	movff	?_GetRx1Freq+2,btemp+10
 23471  009594  C063  F053         	movff	?_GetRx1Freq+3,btemp+11
 23472                           
 23473                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
 23474  009598  0EFC               	movlw	-4
 23475  00959A  C050  FFE3         	movff	btemp+8,plusw1
 23476  00959E  0EFD               	movlw	-3
 23477  0095A0  C051  FFE3         	movff	btemp+9,plusw1
 23478  0095A4  0EFE               	movlw	-2
 23479  0095A6  C052  FFE3         	movff	btemp+10,plusw1
 23480  0095AA  0EFF               	movlw	-1
 23481  0095AC  C053  FFE3         	movff	btemp+11,plusw1
 23482                           
 23483                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
 23484  0095B0  0102               	movlb	2	; () banked
 23485  0095B2  5106               	movf	(_loRa+2)& (0+255),w,b
 23486  0095B4  0BF0               	andlw	-16
 23487  0095B6  0903               	iorlw	3
 23488  0095B8  6F06               	movwf	(_loRa+2)& (0+255),b
 23489                           
 23490                           ; BSR set to: 2
 23491                           ;lorawan.c: 819: RADIO_ReleaseData();
 23492  0095BA  EC42  F063         	call	_RADIO_ReleaseData	;wreg free
 23493                           
 23494                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
 23495                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
 23496  0095BE  50E1               	movf	fsr1l,w,c
 23497  0095C0  0FFC               	addlw	-4
 23498  0095C2  6ED9               	movwf	fsr2l,c
 23499  0095C4  50E2               	movf	fsr1h,w,c
 23500  0095C6  6EDA               	movwf	fsr2h,c
 23501  0095C8  0EFF               	movlw	255
 23502  0095CA  22DA               	addwfc	fsr2h,f,c
 23503  0095CC  CFDE F073          	movff	postinc2,ConfigureRadioRx@freq
 23504  0095D0  CFDE F074          	movff	postinc2,ConfigureRadioRx@freq+1
 23505  0095D4  CFDE F075          	movff	postinc2,ConfigureRadioRx@freq+2
 23506  0095D8  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq+3
 23507  0095DC  0102               	movlb	2	; () banked
 23508  0095DE  511B               	movf	(_loRa+23)& (0+255),w,b
 23509  0095E0  EC31  F05E         	call	_ConfigureRadioRx
 23510                           
 23511                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
 23512  0095E4  0EA7               	movlw	low _rxWindowSize
 23513  0095E6  0102               	movlb	2	; () banked
 23514  0095E8  251B               	addwf	(_loRa+23)& (0+255),w,b
 23515  0095EA  6EF6               	movwf	tblptrl,c
 23516  0095EC  6AF7               	clrf	tblptrh,c
 23517  0095EE  0EFE               	movlw	high _rxWindowSize
 23518  0095F0  22F7               	addwfc	tblptrh,f,c
 23519  0095F2                     	if	1	;There are 3 active tblptr bytes
 23520  0095F2  6AF8               	clrf	tblptru,c
 23521  0095F4  0E00               	movlw	low (__mediumconst shr (0+16))
 23522  0095F6  22F8               	addwfc	tblptru,f,c
 23523  0095F8                     	endif
 23524  0095F8  0008               	tblrd		*
 23525  0095FA  50F5               	movf	tablat,w,c
 23526  0095FC  0100               	movlb	0	; () banked
 23527  0095FE  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 23528  009600  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 23529  009602  EC00  F02F         	call	_RADIO_ReceiveStart	;wreg free
 23530  009606                     l2127:
 23531                           
 23532                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
 23533  009606  0EFB               	movlw	251
 23534  009608  26E1               	addwf	fsr1l,f,c
 23535  00960A  0EFF               	movlw	255
 23536  00960C  22E2               	addwfc	fsr1h,f,c
 23537  00960E  0012               	return		;funcret
 23538  009610                     __end_of_LORAWAN_ReceiveWindow1Callback:
 23539                           	opt stack 0
 23540                           tosu	equ	0xFFF
 23541                           tosh	equ	0xFFE
 23542                           tosl	equ	0xFFD
 23543                           pclath	equ	0xFFA
 23544                           tblptru	equ	0xFF8
 23545                           tblptrh	equ	0xFF7
 23546                           tblptrl	equ	0xFF6
 23547                           tablat	equ	0xFF5
 23548                           prodh	equ	0xFF4
 23549                           prodl	equ	0xFF3
 23550                           intcon	equ	0xFF2
 23551                           intcon2	equ	0xFF1
 23552                           intcon3	equ	0xFF0
 23553                           postinc0	equ	0xFEE
 23554                           wreg	equ	0xFE8
 23555                           postinc1	equ	0xFE6
 23556                           postdec1	equ	0xFE5
 23557                           plusw1	equ	0xFE3
 23558                           fsr1h	equ	0xFE2
 23559                           fsr1l	equ	0xFE1
 23560                           indf2	equ	0xFDF
 23561                           postinc2	equ	0xFDE
 23562                           postdec2	equ	0xFDD
 23563                           fsr2h	equ	0xFDA
 23564                           fsr2l	equ	0xFD9
 23565                           status	equ	0xFD8
 23566                           
 23567 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
 23568 ;; Defined at:
 23569 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23570 ;; Parameters:    Size  Location     Type
 23571 ;;  param           1  [STACK] unsigned char 
 23572 ;; Auto vars:     Size  Location     Type
 23573 ;;		None
 23574 ;; Return value:  Size  Location     Type
 23575 ;;                  1  [STACK] void 
 23576 ;; Registers used:
 23577 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 23578 ;; Tracked objects:
 23579 ;;		On entry : 3D/0
 23580 ;;		On exit  : 0/0
 23581 ;;		Unchanged: 0/0
 23582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23587 ;;Total ram usage:        0 bytes
 23588 ;; Hardware stack levels used:    1
 23589 ;; Hardware stack levels required when called:   14
 23590 ;; This function calls:
 23591 ;;		_ConfigureRadioRx
 23592 ;;		_LORAWAN_EnterContinuousReceive
 23593 ;;		_RADIO_GetStatus
 23594 ;;		_RADIO_ReceiveStart
 23595 ;;		_RADIO_ReceiveStop
 23596 ;;		_RADIO_ReleaseData
 23597 ;;		_ResetParametersForConfirmedTransmission
 23598 ;;		_ResetParametersForUnconfirmedTransmission
 23599 ;;		_RxData
 23600 ;; This function is called by:
 23601 ;;		_LORAWAN_RxTimeout
 23602 ;;		_SetCallbackSoftwareTimers
 23603 ;;		_SwTimersExecute
 23604 ;; This function uses a reentrant model
 23605 ;;
 23606                           
 23607                           	psect	text146
 23608  0092E4                     __ptext146:
 23609                           	opt stack 0
 23610  0092E4                     _LORAWAN_ReceiveWindow2Callback:
 23611                           	opt stack 12
 23612                           
 23613                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
 23614                           
 23615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 23616                           ;incstack = 0
 23617  0092E4  0102               	movlb	2	; () banked
 23618  0092E6  B107               	btfsc	(_loRa+3)& (0+255),0,b
 23619  0092E8  D05F               	goto	l2130
 23620                           
 23621                           ; BSR set to: 2
 23622                           ;lorawan.c: 831: {
 23623                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
 23624  0092EA  EC3F  F063         	call	_RADIO_GetStatus	;wreg free
 23625  0092EE  6E53               	movwf	btemp+11,c
 23626  0092F0  B253               	btfsc	btemp+11,1,c
 23627  0092F2  D056               	goto	l19489
 23628                           
 23629                           ;lorawan.c: 833: {
 23630                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
 23631  0092F4  0102               	movlb	2	; () banked
 23632  0092F6  5106               	movf	(_loRa+2)& (0+255),w,b
 23633  0092F8  0BF0               	andlw	-16
 23634  0092FA  0905               	iorlw	5
 23635  0092FC  6F06               	movwf	(_loRa+2)& (0+255),b
 23636                           
 23637                           ; BSR set to: 2
 23638                           ;lorawan.c: 836: RADIO_ReceiveStop();
 23639  0092FE  ECDF  F05F         	call	_RADIO_ReceiveStop	;wreg free
 23640                           
 23641                           ;lorawan.c: 837: RADIO_ReleaseData();
 23642  009302  EC42  F063         	call	_RADIO_ReleaseData	;wreg free
 23643                           
 23644                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 23645  009306  C21C  F073         	movff	_loRa+24,ConfigureRadioRx@freq
 23646  00930A  C21D  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
 23647  00930E  C21E  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
 23648  009312  C21F  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
 23649  009316  0102               	movlb	2	; () banked
 23650  009318  5120               	movf	(_loRa+28)& (0+255),w,b
 23651  00931A  EC31  F05E         	call	_ConfigureRadioRx
 23652                           
 23653                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
 23654  00931E  0102               	movlb	2	; () banked
 23655  009320  5116               	movf	(_loRa+18)& (0+255),w,b
 23656  009322  A4D8               	btfss	status,2,c
 23657  009324  D036               	goto	l19485
 23658                           
 23659                           ; BSR set to: 2
 23660                           ;lorawan.c: 842: {
 23661                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
 23662  009326  0EA7               	movlw	low _rxWindowSize
 23663  009328  2520               	addwf	(_loRa+28)& (0+255),w,b
 23664  00932A  6EF6               	movwf	tblptrl,c
 23665  00932C  6AF7               	clrf	tblptrh,c
 23666  00932E  0EFE               	movlw	high _rxWindowSize
 23667  009330  22F7               	addwfc	tblptrh,f,c
 23668  009332                     	if	1	;There are 3 active tblptr bytes
 23669  009332  6AF8               	clrf	tblptru,c
 23670  009334  0E00               	movlw	low (__mediumconst shr (0+16))
 23671  009336  22F8               	addwfc	tblptru,f,c
 23672  009338                     	endif
 23673  009338  0008               	tblrd		*
 23674  00933A  50F5               	movf	tablat,w,c
 23675  00933C  0100               	movlb	0	; () banked
 23676  00933E  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 23677  009340  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 23678  009342  EC00  F02F         	call	_RADIO_ReceiveStart	;wreg free
 23679  009346  C0B1  F049         	movff	?_RADIO_ReceiveStart,btemp+1
 23680  00934A  C0B2  F04A         	movff	?_RADIO_ReceiveStart+1,btemp+2
 23681  00934E  5049               	movf	btemp+1,w,c
 23682  009350  104A               	iorwf	btemp+2,w,c
 23683  009352  B4D8               	btfsc	status,2,c
 23684  009354  D031               	goto	l2139
 23685                           
 23686                           ;lorawan.c: 844: {
 23687                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
 23688  009356  ECF4  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 23689                           
 23690                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
 23691  00935A  ECA0  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 23692                           
 23693                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
 23694  00935E  0101               	movlb	1	; () banked
 23695  009360  510C               	movf	_rxPayload& (0+255),w,b
 23696  009362  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 23697  009364  B4D8               	btfsc	status,2,c
 23698  009366  D028               	goto	l2139
 23699                           
 23700                           ; BSR set to: 1
 23701                           ;lorawan.c: 848: {
 23702                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 23703  009368  0E00               	movlw	0
 23704  00936A  0100               	movlb	0	; () banked
 23705  00936C  6F60               	movwf	RxData@pData& (0+255),b
 23706  00936E  0E00               	movlw	0
 23707  009370  6F61               	movwf	(RxData@pData+1)& (0+255),b
 23708  009372  0E00               	movlw	0
 23709  009374  6F62               	movwf	RxData@dataLength& (0+255),b
 23710  009376  0E00               	movlw	0
 23711  009378  6F63               	movwf	RxData@status& (0+255),b
 23712  00937A  D801               	call	u22008
 23713  00937C  D01D               	goto	l2139
 23714  00937E                     u22008:
 23715  00937E  0005               	push	
 23716  009380  6EFA               	movwf	pclath,c
 23717  009382  0101               	movlb	1	; () banked
 23718  009384  510C               	movf	_rxPayload& (0+255),w,b
 23719  009386  6EFD               	movwf	tosl,c
 23720  009388  510D               	movf	(_rxPayload+1)& (0+255),w,b
 23721  00938A  6EFE               	movwf	tosh,c
 23722  00938C  6AFF               	clrf	tosu,c
 23723  00938E  50FA               	movf	pclath,w,c
 23724  009390  0012               	return		;indir
 23725  009392                     l19485:
 23726                           
 23727                           ; BSR set to: 2
 23728                           ;lorawan.c: 853: else
 23729                           ;lorawan.c: 854: {
 23730                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 23731  009392  5106               	movf	(_loRa+2)& (0+255),w,b
 23732  009394  0BF0               	andlw	-16
 23733  009396  0909               	iorlw	9
 23734  009398  6F06               	movwf	(_loRa+2)& (0+255),b
 23735                           
 23736                           ; BSR set to: 2
 23737                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
 23738  00939A  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 23739  00939E  D00C               	goto	l2139
 23740  0093A0                     l19489:
 23741                           
 23742                           ;lorawan.c: 859: else
 23743                           ;lorawan.c: 860: {
 23744                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
 23745  0093A0  0E01               	movlw	1
 23746  0093A2  0102               	movlb	2	; () banked
 23747  0093A4  6FF5               	movwf	(_loRa+241)& (0+255),b
 23748                           
 23749                           ; BSR set to: 1
 23750                           ;lorawan.c: 864: }
 23751                           ;lorawan.c: 865: }
 23752  0093A6  D008               	goto	l2139
 23753  0093A8                     l2130:
 23754                           
 23755                           ; BSR set to: 2
 23756                           ;lorawan.c: 866: else
 23757                           ;lorawan.c: 867: {
 23758                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
 23759  0093A8  A504               	btfss	_loRa& (0+255),2,b
 23760  0093AA  D002               	goto	l19493
 23761                           
 23762                           ; BSR set to: 2
 23763                           ;lorawan.c: 871: {
 23764                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
 23765  0093AC  9504               	bcf	_loRa& (0+255),2,b
 23766                           
 23767                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
 23768  0093AE  9906               	bcf	(_loRa+2)& (0+255),4,b
 23769  0093B0                     l19493:
 23770                           
 23771                           ; BSR set to: 2
 23772                           ;lorawan.c: 874: }
 23773                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
 23774  0093B0  ECA0  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 23775                           
 23776                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
 23777  0093B4  ECF4  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 23778  0093B8                     l2139:
 23779                           
 23780                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
 23781  0093B8  52E5               	movf	postdec1,f,c
 23782  0093BA  0012               	return		;funcret
 23783  0093BC                     __end_of_LORAWAN_ReceiveWindow2Callback:
 23784                           	opt stack 0
 23785                           tosu	equ	0xFFF
 23786                           tosh	equ	0xFFE
 23787                           tosl	equ	0xFFD
 23788                           pclath	equ	0xFFA
 23789                           tblptru	equ	0xFF8
 23790                           tblptrh	equ	0xFF7
 23791                           tblptrl	equ	0xFF6
 23792                           tablat	equ	0xFF5
 23793                           prodh	equ	0xFF4
 23794                           prodl	equ	0xFF3
 23795                           intcon	equ	0xFF2
 23796                           intcon2	equ	0xFF1
 23797                           intcon3	equ	0xFF0
 23798                           postinc0	equ	0xFEE
 23799                           wreg	equ	0xFE8
 23800                           postinc1	equ	0xFE6
 23801                           postdec1	equ	0xFE5
 23802                           plusw1	equ	0xFE3
 23803                           fsr1h	equ	0xFE2
 23804                           fsr1l	equ	0xFE1
 23805                           indf2	equ	0xFDF
 23806                           postinc2	equ	0xFDE
 23807                           postdec2	equ	0xFDD
 23808                           fsr2h	equ	0xFDA
 23809                           fsr2l	equ	0xFD9
 23810                           status	equ	0xFD8
 23811                           
 23812 ;; *************** function _RADIO_WatchdogTimeout *****************
 23813 ;; Defined at:
 23814 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23815 ;; Parameters:    Size  Location     Type
 23816 ;;  param           1  [STACK] unsigned char 
 23817 ;; Auto vars:     Size  Location     Type
 23818 ;;		None
 23819 ;; Return value:  Size  Location     Type
 23820 ;;                  1  [STACK] void 
 23821 ;; Registers used:
 23822 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 23823 ;; Tracked objects:
 23824 ;;		On entry : 3F/0
 23825 ;;		On exit  : 0/0
 23826 ;;		Unchanged: 0/0
 23827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23832 ;;Total ram usage:        0 bytes
 23833 ;; Hardware stack levels used:    1
 23834 ;; Hardware stack levels required when called:   16
 23835 ;; This function calls:
 23836 ;;		_LORAWAN_RxTimeout
 23837 ;;		_LORAWAN_TxDone
 23838 ;;		_RADIO_WriteMode
 23839 ;; This function is called by:
 23840 ;;		_RADIO_Init
 23841 ;;		_SwTimersExecute
 23842 ;; This function uses a reentrant model
 23843 ;;
 23844                           
 23845                           	psect	text147
 23846  00B344                     __ptext147:
 23847                           	opt stack 0
 23848  00B344                     _RADIO_WatchdogTimeout:
 23849                           	opt stack 12
 23850                           
 23851                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
 23852                           
 23853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 23854                           ;incstack = 0
 23855  00B344  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23856  00B348  0E01               	movlw	1
 23857  00B34A  0100               	movlb	0	; () banked
 23858  00B34C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23859  00B34E  0E01               	movlw	1
 23860  00B350  ECDE  F043         	call	_RADIO_WriteMode
 23861                           
 23862                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 23863  00B354  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23864  00B358  0E00               	movlw	0
 23865  00B35A  0100               	movlb	0	; () banked
 23866  00B35C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23867  00B35E  0E00               	movlw	0
 23868  00B360  ECDE  F043         	call	_RADIO_WriteMode
 23869                           
 23870                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
 23871  00B364  0101               	movlb	1	; () banked
 23872  00B366  8958               	bsf	(_RadioConfiguration+35)& (0+255),4,b
 23873                           
 23874                           ; BSR set to: 1
 23875                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
 23876  00B368  A358               	btfss	(_RadioConfiguration+35)& (0+255),1,b
 23877  00B36A  D004               	goto	l1011
 23878                           
 23879                           ; BSR set to: 1
 23880                           ;radio_driver_SX1276.c: 1414: {
 23881                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
 23882  00B36C  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23883                           
 23884                           ; BSR set to: 1
 23885                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
 23886  00B36E  EC55  F01F         	call	_LORAWAN_RxTimeout	;wreg free
 23887                           
 23888                           ;radio_driver_SX1276.c: 1417: }
 23889  00B372  D009               	goto	l1014
 23890  00B374                     l1011:
 23891                           
 23892                           ; BSR set to: 1
 23893                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
 23894  00B374  A158               	btfss	(_RadioConfiguration+35)& (0+255),0,b
 23895  00B376  D007               	goto	l1014
 23896                           
 23897                           ; BSR set to: 1
 23898                           ;radio_driver_SX1276.c: 1419: {
 23899                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
 23900  00B378  9158               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 23901                           
 23902                           ; BSR set to: 1
 23903                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
 23904  00B37A  C15F  F0BB         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
 23905  00B37E  C160  F0BC         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
 23906  00B382  EC5B  F00B         	call	_LORAWAN_TxDone	;wreg free
 23907  00B386                     l1014:
 23908                           
 23909                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23910  00B386  52E5               	movf	postdec1,f,c
 23911  00B388  0012               	return		;funcret
 23912  00B38A                     __end_of_RADIO_WatchdogTimeout:
 23913                           	opt stack 0
 23914                           tosu	equ	0xFFF
 23915                           tosh	equ	0xFFE
 23916                           tosl	equ	0xFFD
 23917                           pclath	equ	0xFFA
 23918                           tblptru	equ	0xFF8
 23919                           tblptrh	equ	0xFF7
 23920                           tblptrl	equ	0xFF6
 23921                           tablat	equ	0xFF5
 23922                           prodh	equ	0xFF4
 23923                           prodl	equ	0xFF3
 23924                           intcon	equ	0xFF2
 23925                           intcon2	equ	0xFF1
 23926                           intcon3	equ	0xFF0
 23927                           postinc0	equ	0xFEE
 23928                           wreg	equ	0xFE8
 23929                           postinc1	equ	0xFE6
 23930                           postdec1	equ	0xFE5
 23931                           plusw1	equ	0xFE3
 23932                           fsr1h	equ	0xFE2
 23933                           fsr1l	equ	0xFE1
 23934                           indf2	equ	0xFDF
 23935                           postinc2	equ	0xFDE
 23936                           postdec2	equ	0xFDD
 23937                           fsr2h	equ	0xFDA
 23938                           fsr2l	equ	0xFD9
 23939                           status	equ	0xFD8
 23940                           
 23941 ;; *************** function _RADIO_RxFSKTimeout *****************
 23942 ;; Defined at:
 23943 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23944 ;; Parameters:    Size  Location     Type
 23945 ;;  param           1  [STACK] unsigned char 
 23946 ;; Auto vars:     Size  Location     Type
 23947 ;;  irqFlags        1  [STACK] unsigned char 
 23948 ;; Return value:  Size  Location     Type
 23949 ;;                  1  [STACK] void 
 23950 ;; Registers used:
 23951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptr
      +l, tblptrh, tblptru, prodl, prodh, cstack
 23952 ;; Tracked objects:
 23953 ;;		On entry : 3F/0
 23954 ;;		On exit  : 0/0
 23955 ;;		Unchanged: 0/0
 23956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23961 ;;Total ram usage:        0 bytes
 23962 ;; Hardware stack levels used:    1
 23963 ;; Hardware stack levels required when called:   16
 23964 ;; This function calls:
 23965 ;;		_LORAWAN_RxTimeout
 23966 ;;		_RADIO_RegisterRead
 23967 ;;		_RADIO_WriteMode
 23968 ;;		_SwTimerStop
 23969 ;; This function is called by:
 23970 ;;		_RADIO_Init
 23971 ;;		_SwTimersExecute
 23972 ;; This function uses a reentrant model
 23973 ;;
 23974                           
 23975                           	psect	text148
 23976  00B7B4                     __ptext148:
 23977                           	opt stack 0
 23978  00B7B4                     _RADIO_RxFSKTimeout:
 23979                           	opt stack 0
 23980                           
 23981                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 23982  00B7B4  52E6               	movf	postinc1,f,c
 23983                           
 23984                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
 23985                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
 23986                           
 23987                           ;incstack = 0
 23988  00B7B6  0E3E               	movlw	62
 23989  00B7B8  EC96  F05E         	call	_RADIO_RegisterRead
 23990  00B7BC  6E53               	movwf	btemp+11,c
 23991                           
 23992                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
 23993  00B7BE  0EFF               	movlw	-1
 23994  00B7C0  C053  FFE3         	movff	btemp+11,plusw1
 23995                           
 23996                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
 23997                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
 23998  00B7C4  0EFF               	movlw	-1
 23999  00B7C6  B0E3               	btfsc	plusw1,0,c
 24000  00B7C8  D010               	goto	l1008
 24001                           
 24002                           ;radio_driver_SX1276.c: 1397: {
 24003                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 24004  00B7CA  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 24005  00B7CE  0E00               	movlw	0
 24006  00B7D0  0100               	movlb	0	; () banked
 24007  00B7D2  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24008  00B7D4  0E00               	movlw	0
 24009  00B7D6  ECDE  F043         	call	_RADIO_WriteMode
 24010                           
 24011                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
 24012  00B7DA  0101               	movlb	1	; () banked
 24013  00B7DC  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 24014  00B7DE  ECAA  F05E         	call	_SwTimerStop
 24015                           
 24016                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
 24017  00B7E2  0101               	movlb	1	; () banked
 24018  00B7E4  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 24019                           
 24020                           ; BSR set to: 1
 24021                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
 24022  00B7E6  EC55  F01F         	call	_LORAWAN_RxTimeout	;wreg free
 24023  00B7EA                     l1008:
 24024                           
 24025                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 24026  00B7EA  52E5               	movf	postdec1,f,c
 24027  00B7EC  52E5               	movf	postdec1,f,c
 24028  00B7EE  0012               	return		;funcret
 24029  00B7F0                     __end_of_RADIO_RxFSKTimeout:
 24030                           	opt stack 0
 24031                           tosu	equ	0xFFF
 24032                           tosh	equ	0xFFE
 24033                           tosl	equ	0xFFD
 24034                           pclath	equ	0xFFA
 24035                           tblptru	equ	0xFF8
 24036                           tblptrh	equ	0xFF7
 24037                           tblptrl	equ	0xFF6
 24038                           tablat	equ	0xFF5
 24039                           prodh	equ	0xFF4
 24040                           prodl	equ	0xFF3
 24041                           intcon	equ	0xFF2
 24042                           intcon2	equ	0xFF1
 24043                           intcon3	equ	0xFF0
 24044                           postinc0	equ	0xFEE
 24045                           wreg	equ	0xFE8
 24046                           postinc1	equ	0xFE6
 24047                           postdec1	equ	0xFE5
 24048                           plusw1	equ	0xFE3
 24049                           fsr1h	equ	0xFE2
 24050                           fsr1l	equ	0xFE1
 24051                           indf2	equ	0xFDF
 24052                           postinc2	equ	0xFDE
 24053                           postdec2	equ	0xFDD
 24054                           fsr2h	equ	0xFDA
 24055                           fsr2l	equ	0xFD9
 24056                           status	equ	0xFD8
 24057                           
 24058 ;; *************** function _UnconfirmedTransmissionCallback *****************
 24059 ;; Defined at:
 24060 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24061 ;; Parameters:    Size  Location     Type
 24062 ;;  param           1  [STACK] unsigned char 
 24063 ;; Auto vars:     Size  Location     Type
 24064 ;;		None
 24065 ;; Return value:  Size  Location     Type
 24066 ;;                  1  [STACK] void 
 24067 ;; Registers used:
 24068 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, pro
      +dl, prodh, cstack
 24069 ;; Tracked objects:
 24070 ;;		On entry : 3F/0
 24071 ;;		On exit  : 0/0
 24072 ;;		Unchanged: 0/0
 24073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24078 ;;Total ram usage:        0 bytes
 24079 ;; Hardware stack levels used:    1
 24080 ;; Hardware stack levels required when called:   13
 24081 ;; This function calls:
 24082 ;;		_RADIO_Transmit
 24083 ;;		_ResetParametersForUnconfirmedTransmission
 24084 ;;		_RxData
 24085 ;;		_SelectChannelForTransmission
 24086 ;; This function is called by:
 24087 ;;		_SetCallbackSoftwareTimers
 24088 ;;		_SwTimersExecute
 24089 ;; This function uses a reentrant model
 24090 ;;
 24091                           
 24092                           	psect	text149
 24093  00A3DC                     __ptext149:
 24094                           	opt stack 0
 24095  00A3DC                     _UnconfirmedTransmissionCallback:
 24096                           	opt stack 15
 24097                           
 24098                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
 24099                           
 24100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 24101                           ;incstack = 0
 24102  00A3DC  0E01               	movlw	1
 24103  00A3DE  EC7D  F053         	call	_SelectChannelForTransmission
 24104  00A3E2  0900               	iorlw	0
 24105  00A3E4  A4D8               	btfss	status,2,c
 24106  00A3E6  D018               	goto	l20875
 24107  00A3E8  0E30               	movlw	low (_macBuffer+16)
 24108  00A3EA  0100               	movlb	0	; () banked
 24109  00A3EC  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 24110  00A3EE  0E05               	movlw	high (_macBuffer+16)
 24111  00A3F0  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 24112  00A3F2  C2D8  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 24113  00A3F6  ECE4  F02D         	call	_RADIO_Transmit	;wreg free
 24114  00A3FA  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
 24115  00A3FE  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
 24116  00A402  5049               	movf	btemp+1,w,c
 24117  00A404  104A               	iorwf	btemp+2,w,c
 24118  00A406  A4D8               	btfss	status,2,c
 24119  00A408  D007               	goto	l20875
 24120                           
 24121                           ;lorawan.c: 1001: {
 24122                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 24123  00A40A  0102               	movlb	2	; () banked
 24124  00A40C  2BDC               	incf	(_loRa+216)& (0+255),f,b
 24125                           
 24126                           ; BSR set to: 2
 24127                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 24128  00A40E  5106               	movf	(_loRa+2)& (0+255),w,b
 24129  00A410  0BF0               	andlw	-16
 24130  00A412  0901               	iorlw	1
 24131  00A414  6F06               	movwf	(_loRa+2)& (0+255),b
 24132                           
 24133                           ;lorawan.c: 1005: }
 24134  00A416  D01C               	goto	u24719
 24135  00A418                     l20875:
 24136                           
 24137                           ;lorawan.c: 1006: else
 24138                           ;lorawan.c: 1008: {
 24139                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
 24140  00A418  ECA0  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 24141                           
 24142                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
 24143  00A41C  0101               	movlb	1	; () banked
 24144  00A41E  510C               	movf	_rxPayload& (0+255),w,b
 24145  00A420  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 24146  00A422  B4D8               	btfsc	status,2,c
 24147  00A424  D015               	goto	u24719
 24148                           
 24149                           ; BSR set to: 1
 24150                           ;lorawan.c: 1011: {
 24151                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
 24152  00A426  0E00               	movlw	0
 24153  00A428  0100               	movlb	0	; () banked
 24154  00A42A  6F60               	movwf	RxData@pData& (0+255),b
 24155  00A42C  0E00               	movlw	0
 24156  00A42E  6F61               	movwf	(RxData@pData+1)& (0+255),b
 24157  00A430  0E00               	movlw	0
 24158  00A432  6F62               	movwf	RxData@dataLength& (0+255),b
 24159  00A434  0E00               	movlw	0
 24160  00A436  6F63               	movwf	RxData@status& (0+255),b
 24161  00A438  D801               	call	u24718
 24162  00A43A  D00A               	goto	u24719
 24163  00A43C                     u24718:
 24164  00A43C  0005               	push	
 24165  00A43E  6EFA               	movwf	pclath,c
 24166  00A440  0101               	movlb	1	; () banked
 24167  00A442  510C               	movf	_rxPayload& (0+255),w,b
 24168  00A444  6EFD               	movwf	tosl,c
 24169  00A446  510D               	movf	(_rxPayload+1)& (0+255),w,b
 24170  00A448  6EFE               	movwf	tosh,c
 24171  00A44A  6AFF               	clrf	tosu,c
 24172  00A44C  50FA               	movf	pclath,w,c
 24173  00A44E  0012               	return		;indir
 24174  00A450                     u24719:
 24175                           
 24176                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
 24177  00A450  52E5               	movf	postdec1,f,c
 24178  00A452  0012               	return		;funcret
 24179  00A454                     __end_of_UnconfirmedTransmissionCallback:
 24180                           	opt stack 0
 24181                           tosu	equ	0xFFF
 24182                           tosh	equ	0xFFE
 24183                           tosl	equ	0xFFD
 24184                           pclath	equ	0xFFA
 24185                           tblptru	equ	0xFF8
 24186                           tblptrh	equ	0xFF7
 24187                           tblptrl	equ	0xFF6
 24188                           tablat	equ	0xFF5
 24189                           prodh	equ	0xFF4
 24190                           prodl	equ	0xFF3
 24191                           intcon	equ	0xFF2
 24192                           intcon2	equ	0xFF1
 24193                           intcon3	equ	0xFF0
 24194                           postinc0	equ	0xFEE
 24195                           wreg	equ	0xFE8
 24196                           postinc1	equ	0xFE6
 24197                           postdec1	equ	0xFE5
 24198                           plusw1	equ	0xFE3
 24199                           fsr1h	equ	0xFE2
 24200                           fsr1l	equ	0xFE1
 24201                           indf2	equ	0xFDF
 24202                           postinc2	equ	0xFDE
 24203                           postdec2	equ	0xFDD
 24204                           fsr2h	equ	0xFDA
 24205                           fsr2l	equ	0xFD9
 24206                           status	equ	0xFD8
 24207                           
 24208 ;; *************** function _GetRx1Freq *****************
 24209 ;; Defined at:
 24210 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24211 ;; Parameters:    Size  Location     Type
 24212 ;;		None
 24213 ;; Auto vars:     Size  Location     Type
 24214 ;;		None
 24215 ;; Return value:  Size  Location     Type
 24216 ;;                  4    0[BANK0 ] unsigned long 
 24217 ;; Registers used:
 24218 ;;		None
 24219 ;; Tracked objects:
 24220 ;;		On entry : 0/0
 24221 ;;		On exit  : 0/0
 24222 ;;		Unchanged: 0/0
 24223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24224 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24227 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24228 ;;Total ram usage:        4 bytes
 24229 ;; Hardware stack levels used:    1
 24230 ;; Hardware stack levels required when called:    7
 24231 ;; This function calls:
 24232 ;;		Nothing
 24233 ;; This function is called by:
 24234 ;;		_LORAWAN_ReceiveWindow1Callback
 24235 ;; This function uses a non-reentrant model
 24236 ;;
 24237                           
 24238                           	psect	text150
 24239  00C3D6                     __ptext150:
 24240                           	opt stack 0
 24241  00C3D6                     _GetRx1Freq:
 24242                           	opt stack 20
 24243                           
 24244                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
 24245                           
 24246                           ;incstack = 0
 24247  00C3D6  C217  F060         	movff	_loRa+19,?_GetRx1Freq
 24248  00C3DA  C218  F061         	movff	_loRa+20,?_GetRx1Freq+1
 24249  00C3DE  C219  F062         	movff	_loRa+21,?_GetRx1Freq+2
 24250  00C3E2  C21A  F063         	movff	_loRa+22,?_GetRx1Freq+3
 24251  00C3E6  0012               	return		;funcret
 24252  00C3E8                     __end_of_GetRx1Freq:
 24253                           	opt stack 0
 24254                           tosu	equ	0xFFF
 24255                           tosh	equ	0xFFE
 24256                           tosl	equ	0xFFD
 24257                           pclath	equ	0xFFA
 24258                           tblptru	equ	0xFF8
 24259                           tblptrh	equ	0xFF7
 24260                           tblptrl	equ	0xFF6
 24261                           tablat	equ	0xFF5
 24262                           prodh	equ	0xFF4
 24263                           prodl	equ	0xFF3
 24264                           intcon	equ	0xFF2
 24265                           intcon2	equ	0xFF1
 24266                           intcon3	equ	0xFF0
 24267                           postinc0	equ	0xFEE
 24268                           wreg	equ	0xFE8
 24269                           postinc1	equ	0xFE6
 24270                           postdec1	equ	0xFE5
 24271                           plusw1	equ	0xFE3
 24272                           fsr1h	equ	0xFE2
 24273                           fsr1l	equ	0xFE1
 24274                           indf2	equ	0xFDF
 24275                           postinc2	equ	0xFDE
 24276                           postdec2	equ	0xFDD
 24277                           fsr2h	equ	0xFDA
 24278                           fsr2l	equ	0xFD9
 24279                           status	equ	0xFD8
 24280                           
 24281 ;; *************** function _RADIO_DIO5 *****************
 24282 ;; Defined at:
 24283 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24284 ;; Parameters:    Size  Location     Type
 24285 ;;		None
 24286 ;; Auto vars:     Size  Location     Type
 24287 ;;  dioMapping      1    6[BANK0 ] unsigned char 
 24288 ;; Return value:  Size  Location     Type
 24289 ;;                  1    wreg      void 
 24290 ;; Registers used:
 24291 ;;		wreg, status,2, status,0, cstack
 24292 ;; Tracked objects:
 24293 ;;		On entry : 0/0
 24294 ;;		On exit  : 0/0
 24295 ;;		Unchanged: 0/0
 24296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24300 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24301 ;;Total ram usage:        2 bytes
 24302 ;; Hardware stack levels used:    1
 24303 ;; Hardware stack levels required when called:   11
 24304 ;; This function calls:
 24305 ;;		_RADIO_RegisterRead
 24306 ;;		_RADIO_UnhandledInterrupt
 24307 ;; This function is called by:
 24308 ;;		_LORAWAN_Mainloop
 24309 ;; This function uses a non-reentrant model
 24310 ;;
 24311                           
 24312                           	psect	text151
 24313  00BCB4                     __ptext151:
 24314                           	opt stack 0
 24315  00BCB4                     _RADIO_DIO5:
 24316                           	opt stack 18
 24317                           
 24318                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
 24319                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
 24320                           
 24321                           ;incstack = 0
 24322  00BCB4  0E41               	movlw	65
 24323  00BCB6  EC96  F05E         	call	_RADIO_RegisterRead
 24324  00BCBA  0100               	movlb	0	; () banked
 24325  00BCBC  6F65               	movwf	??_RADIO_DIO5& (0+255),b
 24326  00BCBE  3965               	swapf	??_RADIO_DIO5& (0+255),w,b
 24327  00BCC0  0B0F               	andlw	15
 24328  00BCC2  0B03               	andlw	3
 24329  00BCC4  6F66               	movwf	RADIO_DIO5@dioMapping& (0+255),b
 24330                           
 24331                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 24332  00BCC6  0E01               	movlw	1
 24333  00BCC8  EC96  F05E         	call	_RADIO_RegisterRead
 24334  00BCCC  0100               	movlb	0	; () banked
 24335  00BCCE  6F65               	movwf	??_RADIO_DIO5& (0+255),b
 24336  00BCD0  AF65               	btfss	??_RADIO_DIO5& (0+255),7,b
 24337  00BCD2  0012               	return	
 24338                           
 24339                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
 24340                           
 24341                           ; BSR set to: 0
 24342                           
 24343                           ;radio_driver_SX1276.c: 1354: {
 24344                           ;radio_driver_SX1276.c: 1355: default:
 24345                           
 24346                           ; BSR set to: 0
 24347                           ;radio_driver_SX1276.c: 1351: {
 24348                           ;radio_driver_SX1276.c: 1353: switch (dioMapping)
 24349  00BCD4  0E01               	movlw	1
 24350  00BCD6  EC49  F05C         	call	_RADIO_UnhandledInterrupt
 24351                           
 24352                           ;radio_driver_SX1276.c: 1358: }
 24353                           
 24354                           ;radio_driver_SX1276.c: 1357: break;
 24355  00BCDA  0012               	return	
 24356  00BCDC                     __end_of_RADIO_DIO5:
 24357                           	opt stack 0
 24358                           tosu	equ	0xFFF
 24359                           tosh	equ	0xFFE
 24360                           tosl	equ	0xFFD
 24361                           pclath	equ	0xFFA
 24362                           tblptru	equ	0xFF8
 24363                           tblptrh	equ	0xFF7
 24364                           tblptrl	equ	0xFF6
 24365                           tablat	equ	0xFF5
 24366                           prodh	equ	0xFF4
 24367                           prodl	equ	0xFF3
 24368                           intcon	equ	0xFF2
 24369                           intcon2	equ	0xFF1
 24370                           intcon3	equ	0xFF0
 24371                           postinc0	equ	0xFEE
 24372                           wreg	equ	0xFE8
 24373                           postinc1	equ	0xFE6
 24374                           postdec1	equ	0xFE5
 24375                           plusw1	equ	0xFE3
 24376                           fsr1h	equ	0xFE2
 24377                           fsr1l	equ	0xFE1
 24378                           indf2	equ	0xFDF
 24379                           postinc2	equ	0xFDE
 24380                           postdec2	equ	0xFDD
 24381                           fsr2h	equ	0xFDA
 24382                           fsr2l	equ	0xFD9
 24383                           status	equ	0xFD8
 24384                           
 24385 ;; *************** function _RADIO_DIO4 *****************
 24386 ;; Defined at:
 24387 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24388 ;; Parameters:    Size  Location     Type
 24389 ;;		None
 24390 ;; Auto vars:     Size  Location     Type
 24391 ;;  dioMapping      1    7[BANK0 ] unsigned char 
 24392 ;; Return value:  Size  Location     Type
 24393 ;;                  1    wreg      void 
 24394 ;; Registers used:
 24395 ;;		wreg, status,2, status,0, cstack
 24396 ;; Tracked objects:
 24397 ;;		On entry : 0/0
 24398 ;;		On exit  : 0/0
 24399 ;;		Unchanged: 0/0
 24400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24403 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24404 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24405 ;;Total ram usage:        3 bytes
 24406 ;; Hardware stack levels used:    1
 24407 ;; Hardware stack levels required when called:   11
 24408 ;; This function calls:
 24409 ;;		_RADIO_RegisterRead
 24410 ;;		_RADIO_UnhandledInterrupt
 24411 ;; This function is called by:
 24412 ;;		_LORAWAN_Mainloop
 24413 ;; This function uses a non-reentrant model
 24414 ;;
 24415                           
 24416                           	psect	text152
 24417  00B860                     __ptext152:
 24418                           	opt stack 0
 24419  00B860                     _RADIO_DIO4:
 24420                           	opt stack 18
 24421                           
 24422                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
 24423                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
 24424                           
 24425                           ;incstack = 0
 24426  00B860  0E41               	movlw	65
 24427  00B862  EC96  F05E         	call	_RADIO_RegisterRead
 24428  00B866  0100               	movlb	0	; () banked
 24429  00B868  6F65               	movwf	??_RADIO_DIO4& (0+255),b
 24430  00B86A  0E06               	movlw	6
 24431  00B86C  6F66               	movwf	(??_RADIO_DIO4+1)& (0+255),b
 24432  00B86E                     u25245:
 24433  00B86E  90D8               	bcf	status,0,c
 24434  00B870  3365               	rrcf	??_RADIO_DIO4& (0+255),f,b
 24435  00B872  2F66               	decfsz	(??_RADIO_DIO4+1)& (0+255),f,b
 24436  00B874  D7FC               	goto	u25245
 24437  00B876  5165               	movf	??_RADIO_DIO4& (0+255),w,b
 24438  00B878  0B03               	andlw	3
 24439  00B87A  6F67               	movwf	RADIO_DIO4@dioMapping& (0+255),b
 24440                           
 24441                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 24442  00B87C  0E01               	movlw	1
 24443  00B87E  EC96  F05E         	call	_RADIO_RegisterRead
 24444  00B882  0100               	movlb	0	; () banked
 24445  00B884  6F65               	movwf	??_RADIO_DIO4& (0+255),b
 24446  00B886  AF65               	btfss	??_RADIO_DIO4& (0+255),7,b
 24447  00B888  0012               	return	
 24448                           
 24449                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
 24450                           
 24451                           ; BSR set to: 0
 24452                           
 24453                           ;radio_driver_SX1276.c: 1331: {
 24454                           ;radio_driver_SX1276.c: 1332: default:
 24455                           
 24456                           ; BSR set to: 0
 24457                           ;radio_driver_SX1276.c: 1328: {
 24458                           ;radio_driver_SX1276.c: 1330: switch (dioMapping)
 24459  00B88A  0E01               	movlw	1
 24460  00B88C  EC49  F05C         	call	_RADIO_UnhandledInterrupt
 24461                           
 24462                           ;radio_driver_SX1276.c: 1335: }
 24463                           
 24464                           ;radio_driver_SX1276.c: 1334: break;
 24465  00B890  0012               	return	
 24466  00B892                     __end_of_RADIO_DIO4:
 24467                           	opt stack 0
 24468                           tosu	equ	0xFFF
 24469                           tosh	equ	0xFFE
 24470                           tosl	equ	0xFFD
 24471                           pclath	equ	0xFFA
 24472                           tblptru	equ	0xFF8
 24473                           tblptrh	equ	0xFF7
 24474                           tblptrl	equ	0xFF6
 24475                           tablat	equ	0xFF5
 24476                           prodh	equ	0xFF4
 24477                           prodl	equ	0xFF3
 24478                           intcon	equ	0xFF2
 24479                           intcon2	equ	0xFF1
 24480                           intcon3	equ	0xFF0
 24481                           postinc0	equ	0xFEE
 24482                           wreg	equ	0xFE8
 24483                           postinc1	equ	0xFE6
 24484                           postdec1	equ	0xFE5
 24485                           plusw1	equ	0xFE3
 24486                           fsr1h	equ	0xFE2
 24487                           fsr1l	equ	0xFE1
 24488                           indf2	equ	0xFDF
 24489                           postinc2	equ	0xFDE
 24490                           postdec2	equ	0xFDD
 24491                           fsr2h	equ	0xFDA
 24492                           fsr2l	equ	0xFD9
 24493                           status	equ	0xFD8
 24494                           
 24495 ;; *************** function _RADIO_DIO3 *****************
 24496 ;; Defined at:
 24497 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24498 ;; Parameters:    Size  Location     Type
 24499 ;;		None
 24500 ;; Auto vars:     Size  Location     Type
 24501 ;;  dioMapping      1    6[BANK0 ] unsigned char 
 24502 ;; Return value:  Size  Location     Type
 24503 ;;                  1    wreg      void 
 24504 ;; Registers used:
 24505 ;;		wreg, status,2, status,0, cstack
 24506 ;; Tracked objects:
 24507 ;;		On entry : 0/0
 24508 ;;		On exit  : 0/0
 24509 ;;		Unchanged: 0/0
 24510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24512 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24513 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24514 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24515 ;;Total ram usage:        2 bytes
 24516 ;; Hardware stack levels used:    1
 24517 ;; Hardware stack levels required when called:   11
 24518 ;; This function calls:
 24519 ;;		_RADIO_RegisterRead
 24520 ;;		_RADIO_UnhandledInterrupt
 24521 ;; This function is called by:
 24522 ;;		_LORAWAN_Mainloop
 24523 ;; This function uses a non-reentrant model
 24524 ;;
 24525                           
 24526                           	psect	text153
 24527  00BE78                     __ptext153:
 24528                           	opt stack 0
 24529  00BE78                     _RADIO_DIO3:
 24530                           	opt stack 18
 24531                           
 24532                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
 24533                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
 24534                           
 24535                           ;incstack = 0
 24536  00BE78  0E40               	movlw	64
 24537  00BE7A  EC96  F05E         	call	_RADIO_RegisterRead
 24538  00BE7E  0B03               	andlw	3
 24539  00BE80  0100               	movlb	0	; () banked
 24540  00BE82  6F66               	movwf	RADIO_DIO3@dioMapping& (0+255),b
 24541                           
 24542                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 24543  00BE84  0E01               	movlw	1
 24544  00BE86  EC96  F05E         	call	_RADIO_RegisterRead
 24545  00BE8A  0100               	movlb	0	; () banked
 24546  00BE8C  6F65               	movwf	??_RADIO_DIO3& (0+255),b
 24547  00BE8E  AF65               	btfss	??_RADIO_DIO3& (0+255),7,b
 24548  00BE90  0012               	return	
 24549                           
 24550                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
 24551                           
 24552                           ; BSR set to: 0
 24553                           
 24554                           ;radio_driver_SX1276.c: 1308: {
 24555                           ;radio_driver_SX1276.c: 1309: default:
 24556                           
 24557                           ; BSR set to: 0
 24558                           ;radio_driver_SX1276.c: 1305: {
 24559                           ;radio_driver_SX1276.c: 1307: switch (dioMapping)
 24560  00BE92  0E01               	movlw	1
 24561  00BE94  EC49  F05C         	call	_RADIO_UnhandledInterrupt
 24562                           
 24563                           ;radio_driver_SX1276.c: 1312: }
 24564                           
 24565                           ;radio_driver_SX1276.c: 1311: break;
 24566  00BE98  0012               	return	
 24567  00BE9A                     __end_of_RADIO_DIO3:
 24568                           	opt stack 0
 24569                           tosu	equ	0xFFF
 24570                           tosh	equ	0xFFE
 24571                           tosl	equ	0xFFD
 24572                           pclath	equ	0xFFA
 24573                           tblptru	equ	0xFF8
 24574                           tblptrh	equ	0xFF7
 24575                           tblptrl	equ	0xFF6
 24576                           tablat	equ	0xFF5
 24577                           prodh	equ	0xFF4
 24578                           prodl	equ	0xFF3
 24579                           intcon	equ	0xFF2
 24580                           intcon2	equ	0xFF1
 24581                           intcon3	equ	0xFF0
 24582                           postinc0	equ	0xFEE
 24583                           wreg	equ	0xFE8
 24584                           postinc1	equ	0xFE6
 24585                           postdec1	equ	0xFE5
 24586                           plusw1	equ	0xFE3
 24587                           fsr1h	equ	0xFE2
 24588                           fsr1l	equ	0xFE1
 24589                           indf2	equ	0xFDF
 24590                           postinc2	equ	0xFDE
 24591                           postdec2	equ	0xFDD
 24592                           fsr2h	equ	0xFDA
 24593                           fsr2l	equ	0xFD9
 24594                           status	equ	0xFD8
 24595                           
 24596 ;; *************** function _RADIO_DIO2 *****************
 24597 ;; Defined at:
 24598 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24599 ;; Parameters:    Size  Location     Type
 24600 ;;		None
 24601 ;; Auto vars:     Size  Location     Type
 24602 ;;  dioMapping      1   28[BANK0 ] unsigned char 
 24603 ;;  opMode          1   27[BANK0 ] unsigned char 
 24604 ;; Return value:  Size  Location     Type
 24605 ;;                  1    wreg      void 
 24606 ;; Registers used:
 24607 ;;		wreg, status,2, status,0, cstack
 24608 ;; Tracked objects:
 24609 ;;		On entry : 0/0
 24610 ;;		On exit  : 0/0
 24611 ;;		Unchanged: 0/0
 24612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24616 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24617 ;;Total ram usage:        3 bytes
 24618 ;; Hardware stack levels used:    1
 24619 ;; Hardware stack levels required when called:   12
 24620 ;; This function calls:
 24621 ;;		_RADIO_FHSSChangeChannel
 24622 ;;		_RADIO_RegisterRead
 24623 ;;		_RADIO_UnhandledInterrupt
 24624 ;; This function is called by:
 24625 ;;		_LORAWAN_Mainloop
 24626 ;; This function uses a non-reentrant model
 24627 ;;
 24628                           
 24629                           	psect	text154
 24630  00AE92                     __ptext154:
 24631                           	opt stack 0
 24632  00AE92                     _RADIO_DIO2:
 24633                           	opt stack 17
 24634                           
 24635                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
 24636                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
 24637                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
 24638                           
 24639                           ;incstack = 0
 24640  00AE92  0E40               	movlw	64
 24641  00AE94  EC96  F05E         	call	_RADIO_RegisterRead
 24642  00AE98  0100               	movlb	0	; () banked
 24643  00AE9A  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
 24644  00AE9C  90D8               	bcf	status,0,c
 24645  00AE9E  337A               	rrcf	??_RADIO_DIO2& (0+255),f,b
 24646  00AEA0  90D8               	bcf	status,0,c
 24647  00AEA2  317A               	rrcf	??_RADIO_DIO2& (0+255),w,b
 24648  00AEA4  0B03               	andlw	3
 24649  00AEA6  6F7C               	movwf	RADIO_DIO2@dioMapping& (0+255),b
 24650                           
 24651                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
 24652  00AEA8  0E01               	movlw	1
 24653  00AEAA  EC96  F05E         	call	_RADIO_RegisterRead
 24654  00AEAE  0100               	movlb	0	; () banked
 24655  00AEB0  6F7B               	movwf	RADIO_DIO2@opMode& (0+255),b
 24656                           
 24657                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 24658  00AEB2  0E01               	movlw	1
 24659  00AEB4  EC96  F05E         	call	_RADIO_RegisterRead
 24660  00AEB8  0100               	movlb	0	; () banked
 24661  00AEBA  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
 24662  00AEBC  AF7A               	btfss	??_RADIO_DIO2& (0+255),7,b
 24663  00AEBE  0012               	return	
 24664  00AEC0  D007               	goto	l968
 24665  00AEC2                     
 24666                           ; BSR set to: 0
 24667                           ;radio_driver_SX1276.c: 1283: case 0x01:
 24668                           ;radio_driver_SX1276.c: 1284: case 0x02:
 24669                           ;radio_driver_SX1276.c: 1285: RADIO_FHSSChangeChannel();
 24670                           
 24671                           ; BSR set to: 0
 24672                           
 24673                           ; BSR set to: 0
 24674                           
 24675                           ; BSR set to: 0
 24676  00AEC2  EC5D  F05B         	call	_RADIO_FHSSChangeChannel	;wreg free
 24677                           
 24678                           ;radio_driver_SX1276.c: 1286: break;
 24679  00AEC6  0012               	return	
 24680  00AEC8                     
 24681                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
 24682  00AEC8  0E01               	movlw	1
 24683  00AECA  EC49  F05C         	call	_RADIO_UnhandledInterrupt
 24684                           
 24685                           ;radio_driver_SX1276.c: 1290: }
 24686                           
 24687                           ;radio_driver_SX1276.c: 1289: break;
 24688  00AECE  0012               	return	
 24689  00AED0                     l968:
 24690  00AED0  0100               	movlb	0	; () banked
 24691  00AED2  517C               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
 24692                           
 24693                           ; Switch size 1, requested type "space"
 24694                           ; Number of cases is 3, Range of values is 0 to 2
 24695                           ; switch strategies available:
 24696                           ; Name         Instructions Cycles
 24697                           ; simple_byte           10     6 (average)
 24698                           ;	Chosen strategy is simple_byte
 24699  00AED4  0A00               	xorlw	0	; case 0
 24700  00AED6  B4D8               	btfsc	status,2,c
 24701  00AED8  D7F4               	goto	l969
 24702  00AEDA  0A01               	xorlw	1	; case 1
 24703  00AEDC  B4D8               	btfsc	status,2,c
 24704  00AEDE  D7F1               	goto	l969
 24705  00AEE0  0A03               	xorlw	3	; case 2
 24706  00AEE2  B4D8               	btfsc	status,2,c
 24707  00AEE4  D7EE               	goto	l969
 24708  00AEE6  D7F0               	goto	l973
 24709  00AEE8                     __end_of_RADIO_DIO2:
 24710                           	opt stack 0
 24711                           tosu	equ	0xFFF
 24712                           tosh	equ	0xFFE
 24713                           tosl	equ	0xFFD
 24714                           pclath	equ	0xFFA
 24715                           tblptru	equ	0xFF8
 24716                           tblptrh	equ	0xFF7
 24717                           tblptrl	equ	0xFF6
 24718                           tablat	equ	0xFF5
 24719                           prodh	equ	0xFF4
 24720                           prodl	equ	0xFF3
 24721                           intcon	equ	0xFF2
 24722                           intcon2	equ	0xFF1
 24723                           intcon3	equ	0xFF0
 24724                           postinc0	equ	0xFEE
 24725                           wreg	equ	0xFE8
 24726                           postinc1	equ	0xFE6
 24727                           postdec1	equ	0xFE5
 24728                           plusw1	equ	0xFE3
 24729                           fsr1h	equ	0xFE2
 24730                           fsr1l	equ	0xFE1
 24731                           indf2	equ	0xFDF
 24732                           postinc2	equ	0xFDE
 24733                           postdec2	equ	0xFDD
 24734                           fsr2h	equ	0xFDA
 24735                           fsr2l	equ	0xFD9
 24736                           status	equ	0xFD8
 24737                           
 24738 ;; *************** function _RADIO_DIO1 *****************
 24739 ;; Defined at:
 24740 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24741 ;; Parameters:    Size  Location     Type
 24742 ;;		None
 24743 ;; Auto vars:     Size  Location     Type
 24744 ;;  dioMapping      1  108[BANK0 ] unsigned char 
 24745 ;; Return value:  Size  Location     Type
 24746 ;;                  1    wreg      void 
 24747 ;; Registers used:
 24748 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 24749 ;; Tracked objects:
 24750 ;;		On entry : 0/0
 24751 ;;		On exit  : 0/0
 24752 ;;		Unchanged: 0/0
 24753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24756 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24757 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24758 ;;Total ram usage:        2 bytes
 24759 ;; Hardware stack levels used:    1
 24760 ;; Hardware stack levels required when called:   17
 24761 ;; This function calls:
 24762 ;;		_RADIO_FHSSChangeChannel
 24763 ;;		_RADIO_RegisterRead
 24764 ;;		_RADIO_RxTimeout
 24765 ;;		_RADIO_UnhandledInterrupt
 24766 ;; This function is called by:
 24767 ;;		_LORAWAN_Mainloop
 24768 ;; This function uses a non-reentrant model
 24769 ;;
 24770                           
 24771                           	psect	text155
 24772  00B220                     __ptext155:
 24773                           	opt stack 0
 24774  00B220                     _RADIO_DIO1:
 24775                           	opt stack 12
 24776                           
 24777                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
 24778                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
 24779                           
 24780                           ;incstack = 0
 24781  00B220  0E40               	movlw	64
 24782  00B222  EC96  F05E         	call	_RADIO_RegisterRead
 24783  00B226  0100               	movlb	0	; () banked
 24784  00B228  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
 24785  00B22A  39CB               	swapf	??_RADIO_DIO1& (0+255),w,b
 24786  00B22C  0B0F               	andlw	15
 24787  00B22E  0B03               	andlw	3
 24788  00B230  6FCC               	movwf	RADIO_DIO1@dioMapping& (0+255),b
 24789                           
 24790                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 24791  00B232  0E01               	movlw	1
 24792  00B234  EC96  F05E         	call	_RADIO_RegisterRead
 24793  00B238  0100               	movlb	0	; () banked
 24794  00B23A  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
 24795  00B23C  BFCB               	btfsc	??_RADIO_DIO1& (0+255),7,b
 24796  00B23E  D00B               	goto	l954
 24797  00B240  D013               	goto	l960
 24798  00B242                     
 24799                           ; BSR set to: 0
 24800                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
 24801                           
 24802                           ; BSR set to: 0
 24803  00B242  ECC5  F05D         	call	_RADIO_RxTimeout	;wreg free
 24804                           
 24805                           ;radio_driver_SX1276.c: 1244: break;
 24806  00B246  0012               	return	
 24807  00B248                     
 24808                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
 24809  00B248  EC5D  F05B         	call	_RADIO_FHSSChangeChannel	;wreg free
 24810                           
 24811                           ;radio_driver_SX1276.c: 1247: break;
 24812  00B24C  0012               	return	
 24813  00B24E                     
 24814                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
 24815  00B24E  0E01               	movlw	1
 24816  00B250  EC49  F05C         	call	_RADIO_UnhandledInterrupt
 24817                           
 24818                           ;radio_driver_SX1276.c: 1251: }
 24819                           
 24820                           ;radio_driver_SX1276.c: 1250: break;
 24821  00B254  0012               	return	
 24822  00B256                     l954:
 24823  00B256  0100               	movlb	0	; () banked
 24824  00B258  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 24825                           
 24826                           ; Switch size 1, requested type "space"
 24827                           ; Number of cases is 2, Range of values is 0 to 1
 24828                           ; switch strategies available:
 24829                           ; Name         Instructions Cycles
 24830                           ; simple_byte            7     4 (average)
 24831                           ;	Chosen strategy is simple_byte
 24832  00B25A  0A00               	xorlw	0	; case 0
 24833  00B25C  B4D8               	btfsc	status,2,c
 24834  00B25E  D7F1               	goto	l955
 24835  00B260  0A01               	xorlw	1	; case 1
 24836  00B262  B4D8               	btfsc	status,2,c
 24837  00B264  D7F1               	goto	l957
 24838  00B266  D7F3               	goto	l958
 24839  00B268                     l960:
 24840                           
 24841                           ; BSR set to: 0
 24842                           
 24843                           ; BSR set to: 0
 24844  00B268  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 24845                           
 24846                           ; Switch size 1, requested type "space"
 24847                           ; Number of cases is 1, Range of values is 0 to 0
 24848                           ; switch strategies available:
 24849                           ; Name         Instructions Cycles
 24850                           ; simple_byte            4     3 (average)
 24851                           ;	Chosen strategy is simple_byte
 24852  00B26A  0A00               	xorlw	0	; case 0
 24853                           
 24854                           ; BSR set to: 0
 24855  00B26C  0012               	return	
 24856  00B26E                     __end_of_RADIO_DIO1:
 24857                           	opt stack 0
 24858                           tosu	equ	0xFFF
 24859                           tosh	equ	0xFFE
 24860                           tosl	equ	0xFFD
 24861                           pclath	equ	0xFFA
 24862                           tblptru	equ	0xFF8
 24863                           tblptrh	equ	0xFF7
 24864                           tblptrl	equ	0xFF6
 24865                           tablat	equ	0xFF5
 24866                           prodh	equ	0xFF4
 24867                           prodl	equ	0xFF3
 24868                           intcon	equ	0xFF2
 24869                           intcon2	equ	0xFF1
 24870                           intcon3	equ	0xFF0
 24871                           postinc0	equ	0xFEE
 24872                           wreg	equ	0xFE8
 24873                           postinc1	equ	0xFE6
 24874                           postdec1	equ	0xFE5
 24875                           plusw1	equ	0xFE3
 24876                           fsr1h	equ	0xFE2
 24877                           fsr1l	equ	0xFE1
 24878                           indf2	equ	0xFDF
 24879                           postinc2	equ	0xFDE
 24880                           postdec2	equ	0xFDD
 24881                           fsr2h	equ	0xFDA
 24882                           fsr2l	equ	0xFD9
 24883                           status	equ	0xFD8
 24884                           
 24885 ;; *************** function _RADIO_RxTimeout *****************
 24886 ;; Defined at:
 24887 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24888 ;; Parameters:    Size  Location     Type
 24889 ;;		None
 24890 ;; Auto vars:     Size  Location     Type
 24891 ;;		None
 24892 ;; Return value:  Size  Location     Type
 24893 ;;                  1    wreg      void 
 24894 ;; Registers used:
 24895 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 24896 ;; Tracked objects:
 24897 ;;		On entry : 0/0
 24898 ;;		On exit  : 0/0
 24899 ;;		Unchanged: 0/0
 24900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24905 ;;Total ram usage:        0 bytes
 24906 ;; Hardware stack levels used:    1
 24907 ;; Hardware stack levels required when called:   16
 24908 ;; This function calls:
 24909 ;;		_LORAWAN_RxTimeout
 24910 ;;		_RADIO_RegisterWrite
 24911 ;;		_RADIO_WriteMode
 24912 ;;		_SwTimerStop
 24913 ;; This function is called by:
 24914 ;;		_RADIO_DIO1
 24915 ;; This function uses a non-reentrant model
 24916 ;;
 24917                           
 24918                           	psect	text156
 24919  00BB8A                     __ptext156:
 24920                           	opt stack 0
 24921  00BB8A                     _RADIO_RxTimeout:
 24922                           	opt stack 12
 24923                           
 24924                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
 24925                           
 24926                           ;incstack = 0
 24927  00BB8A  0101               	movlb	1	; () banked
 24928  00BB8C  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 24929  00BB8E  ECAA  F05E         	call	_SwTimerStop
 24930                           
 24931                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
 24932  00BB92  0E80               	movlw	128
 24933  00BB94  0100               	movlb	0	; () banked
 24934  00BB96  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 24935  00BB98  0E12               	movlw	18
 24936  00BB9A  ECEF  F05F         	call	_RADIO_RegisterWrite
 24937                           
 24938                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 24939  00BB9E  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 24940  00BBA2  0E00               	movlw	0
 24941  00BBA4  0100               	movlb	0	; () banked
 24942  00BBA6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24943  00BBA8  0E00               	movlw	0
 24944  00BBAA  ECDE  F043         	call	_RADIO_WriteMode
 24945                           
 24946                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
 24947  00BBAE  0101               	movlb	1	; () banked
 24948  00BBB0  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 24949                           
 24950                           ; BSR set to: 1
 24951                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
 24952  00BBB2  EC55  F01F         	call	_LORAWAN_RxTimeout	;wreg free
 24953  00BBB6  0012               	return		;funcret
 24954  00BBB8                     __end_of_RADIO_RxTimeout:
 24955                           	opt stack 0
 24956                           tosu	equ	0xFFF
 24957                           tosh	equ	0xFFE
 24958                           tosl	equ	0xFFD
 24959                           pclath	equ	0xFFA
 24960                           tblptru	equ	0xFF8
 24961                           tblptrh	equ	0xFF7
 24962                           tblptrl	equ	0xFF6
 24963                           tablat	equ	0xFF5
 24964                           prodh	equ	0xFF4
 24965                           prodl	equ	0xFF3
 24966                           intcon	equ	0xFF2
 24967                           intcon2	equ	0xFF1
 24968                           intcon3	equ	0xFF0
 24969                           postinc0	equ	0xFEE
 24970                           wreg	equ	0xFE8
 24971                           postinc1	equ	0xFE6
 24972                           postdec1	equ	0xFE5
 24973                           plusw1	equ	0xFE3
 24974                           fsr1h	equ	0xFE2
 24975                           fsr1l	equ	0xFE1
 24976                           indf2	equ	0xFDF
 24977                           postinc2	equ	0xFDE
 24978                           postdec2	equ	0xFDD
 24979                           fsr2h	equ	0xFDA
 24980                           fsr2l	equ	0xFD9
 24981                           status	equ	0xFD8
 24982                           
 24983 ;; *************** function _RADIO_FHSSChangeChannel *****************
 24984 ;; Defined at:
 24985 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24986 ;; Parameters:    Size  Location     Type
 24987 ;;		None
 24988 ;; Auto vars:     Size  Location     Type
 24989 ;;  irqFlags        1   25[BANK0 ] unsigned char 
 24990 ;; Return value:  Size  Location     Type
 24991 ;;                  1    wreg      void 
 24992 ;; Registers used:
 24993 ;;		wreg, status,2, status,0, cstack
 24994 ;; Tracked objects:
 24995 ;;		On entry : 0/0
 24996 ;;		On exit  : 0/0
 24997 ;;		Unchanged: 0/0
 24998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25003 ;;Total ram usage:        1 bytes
 25004 ;; Hardware stack levels used:    1
 25005 ;; Hardware stack levels required when called:   11
 25006 ;; This function calls:
 25007 ;;		_RADIO_RegisterRead
 25008 ;;		_RADIO_RegisterWrite
 25009 ;;		_RADIO_WriteFrequency
 25010 ;; This function is called by:
 25011 ;;		_RADIO_DIO1
 25012 ;;		_RADIO_DIO2
 25013 ;; This function uses a non-reentrant model
 25014 ;;
 25015                           
 25016                           	psect	text157
 25017  00B6BA                     __ptext157:
 25018                           	opt stack 0
 25019  00B6BA                     _RADIO_FHSSChangeChannel:
 25020                           	opt stack 17
 25021                           
 25022                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
 25023                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
 25024                           
 25025                           ;incstack = 0
 25026  00B6BA  0E12               	movlw	18
 25027  00B6BC  EC96  F05E         	call	_RADIO_RegisterRead
 25028  00B6C0  0100               	movlb	0	; () banked
 25029  00B6C2  6F79               	movwf	RADIO_FHSSChangeChannel@irqFlags& (0+255),b
 25030                           
 25031                           ; BSR set to: 0
 25032                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
 25033  00B6C4  0101               	movlb	1	; () banked
 25034  00B6C6  5153               	movf	(_RadioConfiguration+30)& (0+255),w,b
 25035  00B6C8  1154               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 25036  00B6CA  B4D8               	btfsc	status,2,c
 25037  00B6CC  D00F               	goto	l931
 25038                           
 25039                           ; BSR set to: 1
 25040                           ;radio_driver_SX1276.c: 1164: {
 25041                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
 25042  00B6CE  5164               	movf	(_RadioConfiguration+47)& (0+255),w,b
 25043  00B6D0  1165               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
 25044  00B6D2  B4D8               	btfsc	status,2,c
 25045  00B6D4  D00B               	goto	l931
 25046                           
 25047                           ; BSR set to: 1
 25048                           ;radio_driver_SX1276.c: 1166: {
 25049                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
 25050  00B6D6  0E00               	movlw	0
 25051  00B6D8  0100               	movlb	0	; () banked
 25052  00B6DA  6F6D               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
 25053  00B6DC  0E00               	movlw	0
 25054  00B6DE  6F6E               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
 25055  00B6E0  0E00               	movlw	0
 25056  00B6E2  6F6F               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
 25057  00B6E4  0E00               	movlw	0
 25058  00B6E6  6F70               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
 25059  00B6E8  ECC3  F046         	call	_RADIO_WriteFrequency	;wreg free
 25060  00B6EC                     l931:
 25061                           
 25062                           ;radio_driver_SX1276.c: 1168: }
 25063                           ;radio_driver_SX1276.c: 1169: }
 25064                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
 25065  00B6EC  0E02               	movlw	2
 25066  00B6EE  0100               	movlb	0	; () banked
 25067  00B6F0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25068  00B6F2  0E12               	movlw	18
 25069  00B6F4  ECEF  F05F         	call	_RADIO_RegisterWrite
 25070  00B6F8  0012               	return		;funcret
 25071  00B6FA                     __end_of_RADIO_FHSSChangeChannel:
 25072                           	opt stack 0
 25073                           tosu	equ	0xFFF
 25074                           tosh	equ	0xFFE
 25075                           tosl	equ	0xFFD
 25076                           pclath	equ	0xFFA
 25077                           tblptru	equ	0xFF8
 25078                           tblptrh	equ	0xFF7
 25079                           tblptrl	equ	0xFF6
 25080                           tablat	equ	0xFF5
 25081                           prodh	equ	0xFF4
 25082                           prodl	equ	0xFF3
 25083                           intcon	equ	0xFF2
 25084                           intcon2	equ	0xFF1
 25085                           intcon3	equ	0xFF0
 25086                           postinc0	equ	0xFEE
 25087                           wreg	equ	0xFE8
 25088                           postinc1	equ	0xFE6
 25089                           postdec1	equ	0xFE5
 25090                           plusw1	equ	0xFE3
 25091                           fsr1h	equ	0xFE2
 25092                           fsr1l	equ	0xFE1
 25093                           indf2	equ	0xFDF
 25094                           postinc2	equ	0xFDE
 25095                           postdec2	equ	0xFDD
 25096                           fsr2h	equ	0xFDA
 25097                           fsr2l	equ	0xFD9
 25098                           status	equ	0xFD8
 25099                           
 25100 ;; *************** function _RADIO_DIO0 *****************
 25101 ;; Defined at:
 25102 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25103 ;; Parameters:    Size  Location     Type
 25104 ;;		None
 25105 ;; Auto vars:     Size  Location     Type
 25106 ;;  opMode          1  152[BANK0 ] unsigned char 
 25107 ;;  dioMapping      1  151[BANK0 ] unsigned char 
 25108 ;; Return value:  Size  Location     Type
 25109 ;;                  1    wreg      void 
 25110 ;; Registers used:
 25111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25112 ;; Tracked objects:
 25113 ;;		On entry : 0/0
 25114 ;;		On exit  : 0/0
 25115 ;;		Unchanged: 0/0
 25116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25118 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25119 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25120 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25121 ;;Total ram usage:        4 bytes
 25122 ;; Hardware stack levels used:    1
 25123 ;; Hardware stack levels required when called:   17
 25124 ;; This function calls:
 25125 ;;		_RADIO_FSKPacketSent
 25126 ;;		_RADIO_FSKPayloadReady
 25127 ;;		_RADIO_RegisterRead
 25128 ;;		_RADIO_RxDone
 25129 ;;		_RADIO_TxDone
 25130 ;;		_RADIO_UnhandledInterrupt
 25131 ;; This function is called by:
 25132 ;;		_LORAWAN_Mainloop
 25133 ;; This function uses a non-reentrant model
 25134 ;;
 25135                           
 25136                           	psect	text158
 25137  009D9A                     __ptext158:
 25138                           	opt stack 0
 25139  009D9A                     _RADIO_DIO0:
 25140                           	opt stack 12
 25141                           
 25142                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
 25143                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
 25144                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
 25145                           
 25146                           ;incstack = 0
 25147  009D9A  0E40               	movlw	64
 25148  009D9C  EC96  F05E         	call	_RADIO_RegisterRead
 25149  009DA0  0100               	movlb	0	; () banked
 25150  009DA2  6FF5               	movwf	??_RADIO_DIO0& (0+255),b
 25151  009DA4  0E06               	movlw	6
 25152  009DA6  6FF6               	movwf	(??_RADIO_DIO0+1)& (0+255),b
 25153  009DA8                     u25175:
 25154  009DA8  90D8               	bcf	status,0,c
 25155  009DAA  33F5               	rrcf	??_RADIO_DIO0& (0+255),f,b
 25156  009DAC  2FF6               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
 25157  009DAE  D7FC               	goto	u25175
 25158  009DB0  51F5               	movf	??_RADIO_DIO0& (0+255),w,b
 25159  009DB2  0B03               	andlw	3
 25160  009DB4  6FF7               	movwf	RADIO_DIO0@dioMapping& (0+255),b
 25161                           
 25162                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
 25163  009DB6  0E01               	movlw	1
 25164  009DB8  EC96  F05E         	call	_RADIO_RegisterRead
 25165  009DBC  0100               	movlb	0	; () banked
 25166  009DBE  6FF8               	movwf	RADIO_DIO0@opMode& (0+255),b
 25167                           
 25168                           ; BSR set to: 0
 25169                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
 25170  009DC0  BFF8               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
 25171  009DC2  D00B               	goto	l936
 25172  009DC4  D02C               	goto	l942
 25173  009DC6                     
 25174                           ; BSR set to: 0
 25175                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
 25176                           
 25177                           ; BSR set to: 0
 25178  009DC6  EC22  F048         	call	_RADIO_RxDone	;wreg free
 25179                           
 25180                           ;radio_driver_SX1276.c: 1191: break;
 25181  009DCA  0012               	return	
 25182  009DCC                     
 25183                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
 25184  009DCC  EC2E  F041         	call	_RADIO_TxDone	;wreg free
 25185                           
 25186                           ;radio_driver_SX1276.c: 1194: break;
 25187  009DD0  0012               	return	
 25188  009DD2                     
 25189                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
 25190  009DD2  0E01               	movlw	1
 25191  009DD4  EC49  F05C         	call	_RADIO_UnhandledInterrupt
 25192                           
 25193                           ;radio_driver_SX1276.c: 1198: }
 25194                           
 25195                           ;radio_driver_SX1276.c: 1197: break;
 25196  009DD8  0012               	return	
 25197  009DDA                     l936:
 25198  009DDA  0100               	movlb	0	; () banked
 25199  009DDC  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 25200                           
 25201                           ; Switch size 1, requested type "space"
 25202                           ; Number of cases is 2, Range of values is 0 to 1
 25203                           ; switch strategies available:
 25204                           ; Name         Instructions Cycles
 25205                           ; simple_byte            7     4 (average)
 25206                           ;	Chosen strategy is simple_byte
 25207  009DDE  0A00               	xorlw	0	; case 0
 25208  009DE0  B4D8               	btfsc	status,2,c
 25209  009DE2  D7F1               	goto	l937
 25210  009DE4  0A01               	xorlw	1	; case 1
 25211  009DE6  B4D8               	btfsc	status,2,c
 25212  009DE8  D7F1               	goto	l939
 25213  009DEA  D7F3               	goto	l940
 25214  009DEC                     
 25215                           ; BSR set to: 0
 25216                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
 25217                           
 25218                           ; BSR set to: 0
 25219  009DEC  0E07               	movlw	7
 25220  009DEE  17F8               	andwf	RADIO_DIO0@opMode& (0+255),f,b
 25221                           
 25222                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
 25223  009DF0  0E03               	movlw	3
 25224  009DF2  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 25225  009DF4  A4D8               	btfss	status,2,c
 25226  009DF6  D003               	goto	l944
 25227                           
 25228                           ; BSR set to: 0
 25229                           ;radio_driver_SX1276.c: 1209: {
 25230                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
 25231  009DF8  EC6D  F03F         	call	_RADIO_FSKPacketSent	;wreg free
 25232                           
 25233                           ;radio_driver_SX1276.c: 1212: }
 25234  009DFC  0012               	return	
 25235  009DFE                     l944:
 25236                           
 25237                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
 25238  009DFE  0E05               	movlw	5
 25239  009E00  0100               	movlb	0	; () banked
 25240  009E02  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 25241  009E04  A4D8               	btfss	status,2,c
 25242  009E06  D003               	goto	l946
 25243                           
 25244                           ; BSR set to: 0
 25245                           ;radio_driver_SX1276.c: 1214: {
 25246                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
 25247  009E08  EC08  F04B         	call	_RADIO_FSKPayloadReady	;wreg free
 25248                           
 25249                           ;radio_driver_SX1276.c: 1217: }
 25250  009E0C  0012               	return	
 25251  009E0E                     l946:
 25252                           
 25253                           ;radio_driver_SX1276.c: 1218: else
 25254                           ;radio_driver_SX1276.c: 1219: {
 25255                           ;radio_driver_SX1276.c: 1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
 25256  009E0E  0E00               	movlw	0
 25257  009E10  EC49  F05C         	call	_RADIO_UnhandledInterrupt
 25258                           
 25259                           ;radio_driver_SX1276.c: 1221: }
 25260                           ;radio_driver_SX1276.c: 1222: break;
 25261  009E14  0012               	return	
 25262  009E16                     
 25263                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
 25264  009E16  0E00               	movlw	0
 25265  009E18  EC49  F05C         	call	_RADIO_UnhandledInterrupt
 25266                           
 25267                           ;radio_driver_SX1276.c: 1226: }
 25268                           
 25269                           ;radio_driver_SX1276.c: 1225: break;
 25270  009E1C  0012               	return	
 25271  009E1E                     l942:
 25272  009E1E  0100               	movlb	0	; () banked
 25273  009E20  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 25274                           
 25275                           ; Switch size 1, requested type "space"
 25276                           ; Number of cases is 1, Range of values is 0 to 0
 25277                           ; switch strategies available:
 25278                           ; Name         Instructions Cycles
 25279                           ; simple_byte            4     3 (average)
 25280                           ;	Chosen strategy is simple_byte
 25281  009E22  0A00               	xorlw	0	; case 0
 25282  009E24  B4D8               	btfsc	status,2,c
 25283  009E26  D7E2               	goto	l943
 25284  009E28  D7F6               	goto	l949
 25285  009E2A                     __end_of_RADIO_DIO0:
 25286                           	opt stack 0
 25287                           tosu	equ	0xFFF
 25288                           tosh	equ	0xFFE
 25289                           tosl	equ	0xFFD
 25290                           pclath	equ	0xFFA
 25291                           tblptru	equ	0xFF8
 25292                           tblptrh	equ	0xFF7
 25293                           tblptrl	equ	0xFF6
 25294                           tablat	equ	0xFF5
 25295                           prodh	equ	0xFF4
 25296                           prodl	equ	0xFF3
 25297                           intcon	equ	0xFF2
 25298                           intcon2	equ	0xFF1
 25299                           intcon3	equ	0xFF0
 25300                           postinc0	equ	0xFEE
 25301                           wreg	equ	0xFE8
 25302                           postinc1	equ	0xFE6
 25303                           postdec1	equ	0xFE5
 25304                           plusw1	equ	0xFE3
 25305                           fsr1h	equ	0xFE2
 25306                           fsr1l	equ	0xFE1
 25307                           indf2	equ	0xFDF
 25308                           postinc2	equ	0xFDE
 25309                           postdec2	equ	0xFDD
 25310                           fsr2h	equ	0xFDA
 25311                           fsr2l	equ	0xFD9
 25312                           status	equ	0xFD8
 25313                           
 25314 ;; *************** function _RADIO_UnhandledInterrupt *****************
 25315 ;; Defined at:
 25316 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25317 ;; Parameters:    Size  Location     Type
 25318 ;;  modulation      1    wreg     enum E6984
 25319 ;; Auto vars:     Size  Location     Type
 25320 ;;  modulation      1    4[BANK0 ] enum E6984
 25321 ;; Return value:  Size  Location     Type
 25322 ;;                  1    wreg      void 
 25323 ;; Registers used:
 25324 ;;		wreg, status,2, status,0, cstack
 25325 ;; Tracked objects:
 25326 ;;		On entry : 0/0
 25327 ;;		On exit  : 0/0
 25328 ;;		Unchanged: 0/0
 25329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25333 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25334 ;;Total ram usage:        1 bytes
 25335 ;; Hardware stack levels used:    1
 25336 ;; Hardware stack levels required when called:   10
 25337 ;; This function calls:
 25338 ;;		_RADIO_RegisterWrite
 25339 ;; This function is called by:
 25340 ;;		_RADIO_DIO0
 25341 ;;		_RADIO_DIO1
 25342 ;;		_RADIO_DIO2
 25343 ;;		_RADIO_DIO3
 25344 ;;		_RADIO_DIO4
 25345 ;;		_RADIO_DIO5
 25346 ;; This function uses a non-reentrant model
 25347 ;;
 25348                           
 25349                           	psect	text159
 25350  00B892                     __ptext159:
 25351                           	opt stack 0
 25352  00B892                     _RADIO_UnhandledInterrupt:
 25353                           	opt stack 18
 25354                           
 25355                           ;incstack = 0
 25356                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
 25357  00B892  0100               	movlb	0	; () banked
 25358  00B894  6F64               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
 25359                           
 25360                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
 25361  00B896  0100               	movlb	0	; () banked
 25362  00B898  0564               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
 25363  00B89A  A4D8               	btfss	status,2,c
 25364  00B89C  D006               	goto	l925
 25365                           
 25366                           ; BSR set to: 0
 25367                           ;radio_driver_SX1276.c: 1145: {
 25368                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
 25369  00B89E  0EFF               	movlw	255
 25370  00B8A0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25371  00B8A2  0E12               	movlw	18
 25372  00B8A4  ECEF  F05F         	call	_RADIO_RegisterWrite
 25373                           
 25374                           ;radio_driver_SX1276.c: 1147: }
 25375  00B8A8  0012               	return	
 25376  00B8AA                     l925:
 25377                           
 25378                           ;radio_driver_SX1276.c: 1148: else
 25379                           ;radio_driver_SX1276.c: 1149: {
 25380                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
 25381  00B8AA  0EFF               	movlw	255
 25382  00B8AC  0100               	movlb	0	; () banked
 25383  00B8AE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25384  00B8B0  0E3E               	movlw	62
 25385  00B8B2  ECEF  F05F         	call	_RADIO_RegisterWrite
 25386                           
 25387                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
 25388  00B8B6  0EFF               	movlw	255
 25389  00B8B8  0100               	movlb	0	; () banked
 25390  00B8BA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25391  00B8BC  0E3F               	movlw	63
 25392  00B8BE  ECEF  F05F         	call	_RADIO_RegisterWrite
 25393  00B8C2  0012               	return	
 25394  00B8C4                     __end_of_RADIO_UnhandledInterrupt:
 25395                           	opt stack 0
 25396                           tosu	equ	0xFFF
 25397                           tosh	equ	0xFFE
 25398                           tosl	equ	0xFFD
 25399                           pclath	equ	0xFFA
 25400                           tblptru	equ	0xFF8
 25401                           tblptrh	equ	0xFF7
 25402                           tblptrl	equ	0xFF6
 25403                           tablat	equ	0xFF5
 25404                           prodh	equ	0xFF4
 25405                           prodl	equ	0xFF3
 25406                           intcon	equ	0xFF2
 25407                           intcon2	equ	0xFF1
 25408                           intcon3	equ	0xFF0
 25409                           postinc0	equ	0xFEE
 25410                           wreg	equ	0xFE8
 25411                           postinc1	equ	0xFE6
 25412                           postdec1	equ	0xFE5
 25413                           plusw1	equ	0xFE3
 25414                           fsr1h	equ	0xFE2
 25415                           fsr1l	equ	0xFE1
 25416                           indf2	equ	0xFDF
 25417                           postinc2	equ	0xFDE
 25418                           postdec2	equ	0xFDD
 25419                           fsr2h	equ	0xFDA
 25420                           fsr2l	equ	0xFD9
 25421                           status	equ	0xFD8
 25422                           
 25423 ;; *************** function _RADIO_TxDone *****************
 25424 ;; Defined at:
 25425 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25426 ;; Parameters:    Size  Location     Type
 25427 ;;		None
 25428 ;; Auto vars:     Size  Location     Type
 25429 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
 25430 ;; Return value:  Size  Location     Type
 25431 ;;                  1    wreg      void 
 25432 ;; Registers used:
 25433 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25434 ;; Tracked objects:
 25435 ;;		On entry : 0/0
 25436 ;;		On exit  : 0/0
 25437 ;;		Unchanged: 0/0
 25438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25440 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25442 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25443 ;;Total ram usage:       12 bytes
 25444 ;; Hardware stack levels used:    1
 25445 ;; Hardware stack levels required when called:   15
 25446 ;; This function calls:
 25447 ;;		_LORAWAN_TxDone
 25448 ;;		_RADIO_RegisterWrite
 25449 ;;		_RADIO_WriteMode
 25450 ;;		_SwTimerReadValue
 25451 ;;		_SwTimerStop
 25452 ;;		___lmul
 25453 ;; This function is called by:
 25454 ;;		_RADIO_DIO0
 25455 ;; This function uses a non-reentrant model
 25456 ;;
 25457                           
 25458                           	psect	text160
 25459  00825C                     __ptext160:
 25460                           	opt stack 0
 25461  00825C                     _RADIO_TxDone:
 25462                           	opt stack 13
 25463                           
 25464                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
 25465                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
 25466                           
 25467                           ;incstack = 0
 25468  00825C  0101               	movlb	1	; () banked
 25469  00825E  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25470  008260  ECAA  F05E         	call	_SwTimerStop
 25471                           
 25472                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
 25473  008264  0E08               	movlw	8
 25474  008266  0100               	movlb	0	; () banked
 25475  008268  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25476  00826A  0E12               	movlw	18
 25477  00826C  ECEF  F05F         	call	_RADIO_RegisterWrite
 25478                           
 25479                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 25480  008270  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25481  008274  0E00               	movlw	0
 25482  008276  0100               	movlb	0	; () banked
 25483  008278  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25484  00827A  0E00               	movlw	0
 25485  00827C  ECDE  F043         	call	_RADIO_WriteMode
 25486                           
 25487                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
 25488  008280  0101               	movlb	1	; () banked
 25489  008282  9158               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 25490                           
 25491                           ; BSR set to: 1
 25492                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 25493  008284  B958               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 25494  008286  0012               	return	
 25495                           
 25496                           ; BSR set to: 1
 25497                           ;radio_driver_SX1276.c: 1087: {
 25498                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 25499  008288  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25500  00828A  EC7D  F05B         	call	_SwTimerReadValue
 25501  00828E  0100               	movlb	0	; () banked
 25502  008290  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 25503  008292  E108               	bnz	u24060
 25504  008294  0E1F               	movlw	31
 25505  008296  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
 25506  008298  0EAC               	movlw	172
 25507  00829A  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 25508  00829C  0EDF               	movlw	223
 25509  00829E  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 25510  0082A0  A0D8               	btfss	status,0,c
 25511  0082A2  D021               	goto	l900
 25512  0082A4                     u24060:
 25513                           
 25514                           ; BSR set to: 0
 25515  0082A4  0101               	movlb	1	; () banked
 25516  0082A6  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25517  0082A8  EC7D  F05B         	call	_SwTimerReadValue
 25518  0082AC  0E0D               	movlw	13
 25519  0082AE  D006               	goto	u24070
 25520  0082B0                     u24075:
 25521  0082B0  0100               	movlb	0	; () banked
 25522  0082B2  90D8               	bcf	status,0,c
 25523  0082B4  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 25524  0082B6  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 25525  0082B8  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 25526  0082BA  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
 25527  0082BC                     u24070:
 25528  0082BC  2EE8               	decfsz	wreg,f,c
 25529  0082BE  D7F8               	goto	u24075
 25530  0082C0  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 25531  0082C4  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 25532  0082C8  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 25533  0082CC  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 25534  0082D0  0E7D               	movlw	125
 25535  0082D2  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 25536  0082D4  0E00               	movlw	0
 25537  0082D6  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25538  0082D8  0E00               	movlw	0
 25539  0082DA  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25540  0082DC  0E00               	movlw	0
 25541  0082DE  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25542  0082E0  EC1D  F057         	call	___lmul	;wreg free
 25543  0082E4  D021               	goto	L8
 25544  0082E6                     l900:
 25545  0082E6  0101               	movlb	1	; () banked
 25546  0082E8  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25547  0082EA  EC7D  F05B         	call	_SwTimerReadValue
 25548  0082EE  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 25549  0082F2  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 25550  0082F6  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 25551  0082FA  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 25552  0082FE  0E7D               	movlw	125
 25553  008300  0100               	movlb	0	; () banked
 25554  008302  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 25555  008304  0E00               	movlw	0
 25556  008306  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25557  008308  0E00               	movlw	0
 25558  00830A  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25559  00830C  0E00               	movlw	0
 25560  00830E  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25561  008310  EC1D  F057         	call	___lmul	;wreg free
 25562  008314  0E0D               	movlw	13
 25563  008316  D006               	goto	u24080
 25564  008318                     u24085:
 25565  008318  0100               	movlb	0	; () banked
 25566  00831A  90D8               	bcf	status,0,c
 25567  00831C  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 25568  00831E  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 25569  008320  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 25570  008322  339A               	rrcf	?___lmul& (0+255),f,b
 25571  008324                     u24080:
 25572  008324  2EE8               	decfsz	wreg,f,c
 25573  008326  D7F8               	goto	u24085
 25574  008328                     L8:
 25575  008328  C09A  F0EB         	movff	?___lmul,_RADIO_TxDone$1189
 25576  00832C  C09B  F0EC         	movff	?___lmul+1,_RADIO_TxDone$1189+1
 25577  008330  C09C  F0ED         	movff	?___lmul+2,_RADIO_TxDone$1189+2
 25578  008334  C09D  F0EE         	movff	?___lmul+3,_RADIO_TxDone$1189+3
 25579                           
 25580                           ; BSR set to: 0
 25581  008338  C0EB  F0E3         	movff	_RADIO_TxDone$1189,??_RADIO_TxDone
 25582  00833C  C0EC  F0E4         	movff	_RADIO_TxDone$1189+1,??_RADIO_TxDone+1
 25583  008340  C0ED  F0E5         	movff	_RADIO_TxDone$1189+2,??_RADIO_TxDone+2
 25584  008344  C0EE  F0E6         	movff	_RADIO_TxDone$1189+3,??_RADIO_TxDone+3
 25585  008348  0100               	movlb	0	; () banked
 25586  00834A  1FE3               	comf	??_RADIO_TxDone& (0+255),f,b
 25587  00834C  1FE4               	comf	(??_RADIO_TxDone+1)& (0+255),f,b
 25588  00834E  1FE5               	comf	(??_RADIO_TxDone+2)& (0+255),f,b
 25589  008350  1FE6               	comf	(??_RADIO_TxDone+3)& (0+255),f,b
 25590  008352  2BE3               	incf	??_RADIO_TxDone& (0+255),f,b
 25591  008354  0E00               	movlw	0
 25592  008356  23E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),f,b
 25593  008358  23E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
 25594  00835A  23E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
 25595  00835C  0E20               	movlw	32
 25596  00835E  25E3               	addwf	??_RADIO_TxDone& (0+255),w,b
 25597  008360  6FE7               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
 25598  008362  0E4E               	movlw	78
 25599  008364  21E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),w,b
 25600  008366  6FE8               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
 25601  008368  0E00               	movlw	0
 25602  00836A  21E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),w,b
 25603  00836C  6FE9               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
 25604  00836E  0E00               	movlw	0
 25605  008370  21E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),w,b
 25606  008372  6FEA               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
 25607                           
 25608                           ; BSR set to: 0
 25609                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
 25610  008374  C0E7  F0BB         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
 25611  008378  C0E8  F0BC         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 25612  00837C  EC5B  F00B         	call	_LORAWAN_TxDone	;wreg free
 25613  008380  0012               	return	
 25614  008382                     __end_of_RADIO_TxDone:
 25615                           	opt stack 0
 25616                           tosu	equ	0xFFF
 25617                           tosh	equ	0xFFE
 25618                           tosl	equ	0xFFD
 25619                           pclath	equ	0xFFA
 25620                           tblptru	equ	0xFF8
 25621                           tblptrh	equ	0xFF7
 25622                           tblptrl	equ	0xFF6
 25623                           tablat	equ	0xFF5
 25624                           prodh	equ	0xFF4
 25625                           prodl	equ	0xFF3
 25626                           intcon	equ	0xFF2
 25627                           intcon2	equ	0xFF1
 25628                           intcon3	equ	0xFF0
 25629                           postinc0	equ	0xFEE
 25630                           wreg	equ	0xFE8
 25631                           postinc1	equ	0xFE6
 25632                           postdec1	equ	0xFE5
 25633                           plusw1	equ	0xFE3
 25634                           fsr1h	equ	0xFE2
 25635                           fsr1l	equ	0xFE1
 25636                           indf2	equ	0xFDF
 25637                           postinc2	equ	0xFDE
 25638                           postdec2	equ	0xFDD
 25639                           fsr2h	equ	0xFDA
 25640                           fsr2l	equ	0xFD9
 25641                           status	equ	0xFD8
 25642                           
 25643 ;; *************** function _RADIO_RxDone *****************
 25644 ;; Defined at:
 25645 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25646 ;; Parameters:    Size  Location     Type
 25647 ;;		None
 25648 ;; Auto vars:     Size  Location     Type
 25649 ;;  i               1  148[BANK0 ] unsigned char 
 25650 ;;  irqFlags        1  147[BANK0 ] unsigned char 
 25651 ;; Return value:  Size  Location     Type
 25652 ;;                  1    wreg      void 
 25653 ;; Registers used:
 25654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25655 ;; Tracked objects:
 25656 ;;		On entry : 0/0
 25657 ;;		On exit  : 0/0
 25658 ;;		Unchanged: 0/0
 25659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25661 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25663 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25664 ;;Total ram usage:        2 bytes
 25665 ;; Hardware stack levels used:    1
 25666 ;; Hardware stack levels required when called:   16
 25667 ;; This function calls:
 25668 ;;		_HALSPICSAssert
 25669 ;;		_HALSPICSDeassert
 25670 ;;		_HALSPISend
 25671 ;;		_LORAWAN_RxDone
 25672 ;;		_RADIO_RegisterRead
 25673 ;;		_RADIO_RegisterWrite
 25674 ;;		_RADIO_WriteMode
 25675 ;;		_SwTimerStop
 25676 ;;		___abdiv
 25677 ;; This function is called by:
 25678 ;;		_RADIO_DIO0
 25679 ;; This function uses a non-reentrant model
 25680 ;;
 25681                           
 25682                           	psect	text161
 25683  009044                     __ptext161:
 25684                           	opt stack 0
 25685  009044                     _RADIO_RxDone:
 25686                           	opt stack 12
 25687                           
 25688                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
 25689                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
 25690                           
 25691                           ;incstack = 0
 25692  009044  0E12               	movlw	18
 25693  009046  EC96  F05E         	call	_RADIO_RegisterRead
 25694  00904A  0100               	movlb	0	; () banked
 25695  00904C  6FF3               	movwf	RADIO_RxDone@irqFlags& (0+255),b
 25696                           
 25697                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
 25698  00904E  0E70               	movlw	112
 25699  009050  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25700  009052  0E12               	movlw	18
 25701  009054  ECEF  F05F         	call	_RADIO_RegisterWrite
 25702                           
 25703                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
 25704  009058  0100               	movlb	0	; () banked
 25705  00905A  51F3               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
 25706  00905C  0B50               	andlw	80
 25707  00905E  0A50               	xorlw	80
 25708  009060  A4D8               	btfss	status,2,c
 25709  009062  0012               	return	
 25710                           
 25711                           ; BSR set to: 0
 25712                           ;radio_driver_SX1276.c: 969: {
 25713                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
 25714  009064  0101               	movlb	1	; () banked
 25715  009066  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25716  009068  ECAA  F05E         	call	_SwTimerStop
 25717                           
 25718                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
 25719  00906C  0E1C               	movlw	28
 25720  00906E  EC96  F05E         	call	_RADIO_RegisterRead
 25721  009072  0100               	movlb	0	; () banked
 25722  009074  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
 25723                           
 25724                           ; BSR set to: 0
 25725                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
 25726  009076  0101               	movlb	1	; () banked
 25727  009078  5151               	movf	(_RadioConfiguration+28)& (0+255),w,b
 25728  00907A  B4D8               	btfsc	status,2,c
 25729  00907C  D004               	goto	u23980
 25730                           
 25731                           ; BSR set to: 1
 25732  00907E  0100               	movlb	0	; () banked
 25733  009080  ABF3               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
 25734                           
 25735                           ; BSR set to: 0
 25736  009082  ADF4               	btfss	RADIO_RxDone@i& (0+255),6,b
 25737  009084  D03C               	goto	l872
 25738  009086                     u23980:
 25739                           
 25740                           ;radio_driver_SX1276.c: 976: {
 25741                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
 25742                           
 25743                           ; BSR set to: 0
 25744  009086  0E13               	movlw	19
 25745  009088  EC96  F05E         	call	_RADIO_RegisterRead
 25746  00908C  0101               	movlb	1	; () banked
 25747  00908E  6F59               	movwf	(_RadioConfiguration+36)& (0+255),b
 25748                           
 25749                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
 25750  009090  0E00               	movlw	0
 25751  009092  0100               	movlb	0	; () banked
 25752  009094  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25753  009096  0E0D               	movlw	13
 25754  009098  ECEF  F05F         	call	_RADIO_RegisterWrite
 25755                           
 25756                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
 25757  00909C  EC6E  F063         	call	_HALSPICSAssert	;wreg free
 25758                           
 25759                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
 25760  0090A0  0E00               	movlw	0
 25761  0090A2  EC78  F062         	call	_HALSPISend
 25762                           
 25763                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 25764  0090A6  0E00               	movlw	0
 25765  0090A8  0100               	movlb	0	; () banked
 25766  0090AA  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
 25767  0090AC  D00F               	goto	l875
 25768  0090AE                     
 25769                           ; BSR set to: 0
 25770                           ;radio_driver_SX1276.c: 990: {
 25771                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
 25772                           
 25773                           ; BSR set to: 0
 25774  0090AE  51F4               	movf	RADIO_RxDone@i& (0+255),w,b
 25775  0090B0  0D01               	mullw	1
 25776  0090B2  50F3               	movf	prodl,w,c
 25777  0090B4  0101               	movlb	1	; () banked
 25778  0090B6  255A               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 25779  0090B8  6ED9               	movwf	fsr2l,c
 25780  0090BA  50F4               	movf	prodh,w,c
 25781  0090BC  215B               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 25782  0090BE  6EDA               	movwf	fsr2h,c
 25783  0090C0  0EFF               	movlw	255
 25784  0090C2  EC78  F062         	call	_HALSPISend
 25785  0090C6  6EDF               	movwf	indf2,c
 25786  0090C8  0100               	movlb	0	; () banked
 25787  0090CA  2BF4               	incf	RADIO_RxDone@i& (0+255),f,b
 25788  0090CC                     l875:
 25789                           
 25790                           ; BSR set to: 0
 25791                           
 25792                           ; BSR set to: 0
 25793  0090CC  0101               	movlb	1	; () banked
 25794  0090CE  5159               	movf	(_RadioConfiguration+36)& (0+255),w,b
 25795  0090D0  0100               	movlb	0	; () banked
 25796  0090D2  5DF4               	subwf	RADIO_RxDone@i& (0+255),w,b
 25797  0090D4  A0D8               	btfss	status,0,c
 25798  0090D6  D7EB               	goto	l876
 25799                           
 25800                           ; BSR set to: 0
 25801                           ;radio_driver_SX1276.c: 992: }
 25802                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
 25803                           
 25804                           ; BSR set to: 0
 25805  0090D8  EC6C  F063         	call	_HALSPICSDeassert	;wreg free
 25806                           
 25807                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
 25808  0090DC  0101               	movlb	1	; () banked
 25809  0090DE  8558               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 25810                           
 25811                           ; BSR set to: 1
 25812                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
 25813  0090E0  0E19               	movlw	25
 25814  0090E2  EC96  F05E         	call	_RADIO_RegisterRead
 25815  0090E6  0101               	movlb	1	; () banked
 25816  0090E8  6F67               	movwf	(_RadioConfiguration+50)& (0+255),b
 25817                           
 25818                           ; BSR set to: 1
 25819                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
 25820  0090EA  0E04               	movlw	4
 25821  0090EC  0100               	movlb	0	; () banked
 25822  0090EE  6F60               	movwf	___abdiv@divisor& (0+255),b
 25823  0090F0  0101               	movlb	1	; () banked
 25824  0090F2  5167               	movf	(_RadioConfiguration+50)& (0+255),w,b
 25825  0090F4  EC50  F054         	call	___abdiv
 25826  0090F8  0101               	movlb	1	; () banked
 25827  0090FA  6F67               	movwf	(_RadioConfiguration+50)& (0+255),b
 25828                           
 25829                           ;radio_driver_SX1276.c: 998: }
 25830  0090FC  D002               	goto	l878
 25831  0090FE                     l872:
 25832                           
 25833                           ;radio_driver_SX1276.c: 999: else
 25834                           ;radio_driver_SX1276.c: 1000: {
 25835                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
 25836                           
 25837                           ; BSR set to: 1
 25838  0090FE  0101               	movlb	1	; () banked
 25839  009100  8758               	bsf	(_RadioConfiguration+35)& (0+255),3,b
 25840  009102                     l878:
 25841                           
 25842                           ; BSR set to: 1
 25843                           ;radio_driver_SX1276.c: 1003: }
 25844                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 25845                           
 25846                           ; BSR set to: 1
 25847  009102  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25848  009106  0E00               	movlw	0
 25849  009108  0100               	movlb	0	; () banked
 25850  00910A  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25851  00910C  0E00               	movlw	0
 25852  00910E  ECDE  F043         	call	_RADIO_WriteMode
 25853                           
 25854                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
 25855  009112  0101               	movlb	1	; () banked
 25856  009114  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 25857                           
 25858                           ; BSR set to: 1
 25859                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 25860  009116  C15A  F1F2         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 25861  00911A  C15B  F1F3         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 25862  00911E  C159  F1F4         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 25863  009122  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
 25864  009126  0012               	return	
 25865  009128                     __end_of_RADIO_RxDone:
 25866                           	opt stack 0
 25867                           tosu	equ	0xFFF
 25868                           tosh	equ	0xFFE
 25869                           tosl	equ	0xFFD
 25870                           pclath	equ	0xFFA
 25871                           tblptru	equ	0xFF8
 25872                           tblptrh	equ	0xFF7
 25873                           tblptrl	equ	0xFF6
 25874                           tablat	equ	0xFF5
 25875                           prodh	equ	0xFF4
 25876                           prodl	equ	0xFF3
 25877                           intcon	equ	0xFF2
 25878                           intcon2	equ	0xFF1
 25879                           intcon3	equ	0xFF0
 25880                           postinc0	equ	0xFEE
 25881                           wreg	equ	0xFE8
 25882                           postinc1	equ	0xFE6
 25883                           postdec1	equ	0xFE5
 25884                           plusw1	equ	0xFE3
 25885                           fsr1h	equ	0xFE2
 25886                           fsr1l	equ	0xFE1
 25887                           indf2	equ	0xFDF
 25888                           postinc2	equ	0xFDE
 25889                           postdec2	equ	0xFDD
 25890                           fsr2h	equ	0xFDA
 25891                           fsr2l	equ	0xFD9
 25892                           status	equ	0xFD8
 25893                           
 25894 ;; *************** function ___abdiv *****************
 25895 ;; Defined at:
 25896 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abdiv.c"
 25897 ;; Parameters:    Size  Location     Type
 25898 ;;  dividend        1    wreg     char 
 25899 ;;  divisor         1    0[BANK0 ] char 
 25900 ;; Auto vars:     Size  Location     Type
 25901 ;;  dividend        1    6[BANK0 ] char 
 25902 ;;  quotient        1    5[BANK0 ] char 
 25903 ;;  sign            1    4[BANK0 ] unsigned char 
 25904 ;;  counter         1    3[BANK0 ] unsigned char 
 25905 ;; Return value:  Size  Location     Type
 25906 ;;                  1    wreg      char 
 25907 ;; Registers used:
 25908 ;;		wreg, status,2, status,0
 25909 ;; Tracked objects:
 25910 ;;		On entry : 0/0
 25911 ;;		On exit  : 0/0
 25912 ;;		Unchanged: 0/0
 25913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25914 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25915 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25916 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25917 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25918 ;;Total ram usage:        7 bytes
 25919 ;; Hardware stack levels used:    1
 25920 ;; Hardware stack levels required when called:    7
 25921 ;; This function calls:
 25922 ;;		Nothing
 25923 ;; This function is called by:
 25924 ;;		_RADIO_RxDone
 25925 ;; This function uses a non-reentrant model
 25926 ;;
 25927                           
 25928                           	psect	text162
 25929  00A8A0                     __ptext162:
 25930                           	opt stack 0
 25931  00A8A0                     ___abdiv:
 25932                           	opt stack 20
 25933                           
 25934                           ;incstack = 0
 25935                           ;___abdiv@dividend stored from wreg
 25936  00A8A0  0100               	movlb	0	; () banked
 25937  00A8A2  6F66               	movwf	___abdiv@dividend& (0+255),b
 25938  00A8A4  0E00               	movlw	0
 25939  00A8A6  0100               	movlb	0	; () banked
 25940  00A8A8  6F64               	movwf	___abdiv@sign& (0+255),b
 25941                           
 25942                           ; BSR set to: 0
 25943  00A8AA  AF60               	btfss	___abdiv@divisor& (0+255),7,b
 25944  00A8AC  D003               	goto	l3584
 25945                           
 25946                           ; BSR set to: 0
 25947  00A8AE  6D60               	negf	___abdiv@divisor& (0+255),b
 25948                           
 25949                           ; BSR set to: 0
 25950  00A8B0  0E01               	movlw	1
 25951  00A8B2  6F64               	movwf	___abdiv@sign& (0+255),b
 25952  00A8B4                     l3584:
 25953                           
 25954                           ; BSR set to: 0
 25955                           
 25956                           ; BSR set to: 0
 25957  00A8B4  AF66               	btfss	___abdiv@dividend& (0+255),7,b
 25958  00A8B6  D003               	goto	l3585
 25959                           
 25960                           ; BSR set to: 0
 25961  00A8B8  6D66               	negf	___abdiv@dividend& (0+255),b
 25962                           
 25963                           ; BSR set to: 0
 25964  00A8BA  0E01               	movlw	1
 25965  00A8BC  1B64               	xorwf	___abdiv@sign& (0+255),f,b
 25966  00A8BE                     l3585:
 25967                           
 25968                           ; BSR set to: 0
 25969                           
 25970                           ; BSR set to: 0
 25971  00A8BE  0E00               	movlw	0
 25972  00A8C0  6F65               	movwf	___abdiv@quotient& (0+255),b
 25973                           
 25974                           ; BSR set to: 0
 25975  00A8C2  5160               	movf	___abdiv@divisor& (0+255),w,b
 25976  00A8C4  B4D8               	btfsc	status,2,c
 25977  00A8C6  D01A               	goto	l3592
 25978                           
 25979                           ; BSR set to: 0
 25980  00A8C8  0E01               	movlw	1
 25981  00A8CA  6F63               	movwf	___abdiv@counter& (0+255),b
 25982  00A8CC  D003               	goto	l3587
 25983  00A8CE                     
 25984                           ; BSR set to: 0
 25985                           
 25986                           ; BSR set to: 0
 25987  00A8CE  90D8               	bcf	status,0,c
 25988  00A8D0  3760               	rlcf	___abdiv@divisor& (0+255),f,b
 25989                           
 25990                           ; BSR set to: 0
 25991  00A8D2  2B63               	incf	___abdiv@counter& (0+255),f,b
 25992  00A8D4                     l3587:
 25993                           
 25994                           ; BSR set to: 0
 25995                           
 25996                           ; BSR set to: 0
 25997  00A8D4  C060  F061         	movff	___abdiv@divisor,??___abdiv
 25998  00A8D8  6B62               	clrf	(??___abdiv+1)& (0+255),b
 25999  00A8DA  BF61               	btfsc	??___abdiv& (0+255),7,b
 26000  00A8DC  0762               	decf	(??___abdiv+1)& (0+255),f,b
 26001  00A8DE  AF61               	btfss	??___abdiv& (0+255),7,b
 26002  00A8E0  D7F6               	goto	l3588
 26003  00A8E2                     u23900:
 26004                           
 26005                           ; BSR set to: 0
 26006                           
 26007                           ; BSR set to: 0
 26008                           
 26009                           ; BSR set to: 0
 26010  00A8E2  90D8               	bcf	status,0,c
 26011  00A8E4  3765               	rlcf	___abdiv@quotient& (0+255),f,b
 26012  00A8E6  5160               	movf	___abdiv@divisor& (0+255),w,b
 26013  00A8E8  5D66               	subwf	___abdiv@dividend& (0+255),w,b
 26014  00A8EA  A0D8               	btfss	status,0,c
 26015  00A8EC  D003               	goto	l3591
 26016                           
 26017                           ; BSR set to: 0
 26018  00A8EE  5160               	movf	___abdiv@divisor& (0+255),w,b
 26019  00A8F0  5F66               	subwf	___abdiv@dividend& (0+255),f,b
 26020                           
 26021                           ; BSR set to: 0
 26022  00A8F2  8165               	bsf	___abdiv@quotient& (0+255),0,b
 26023  00A8F4                     l3591:
 26024                           
 26025                           ; BSR set to: 0
 26026                           
 26027                           ; BSR set to: 0
 26028  00A8F4  90D8               	bcf	status,0,c
 26029  00A8F6  3360               	rrcf	___abdiv@divisor& (0+255),f,b
 26030                           
 26031                           ; BSR set to: 0
 26032  00A8F8  2F63               	decfsz	___abdiv@counter& (0+255),f,b
 26033  00A8FA  D7F3               	goto	u23900
 26034  00A8FC                     l3592:
 26035                           
 26036                           ; BSR set to: 0
 26037                           
 26038                           ; BSR set to: 0
 26039                           
 26040                           ; BSR set to: 0
 26041  00A8FC  5164               	movf	___abdiv@sign& (0+255),w,b
 26042  00A8FE  A4D8               	btfss	status,2,c
 26043                           
 26044                           ; BSR set to: 0
 26045  00A900  6D65               	negf	___abdiv@quotient& (0+255),b
 26046                           
 26047                           ; BSR set to: 0
 26048                           
 26049                           ; BSR set to: 0
 26050  00A902  5165               	movf	___abdiv@quotient& (0+255),w,b
 26051  00A904  0012               	return	
 26052  00A906                     __end_of___abdiv:
 26053                           	opt stack 0
 26054                           tosu	equ	0xFFF
 26055                           tosh	equ	0xFFE
 26056                           tosl	equ	0xFFD
 26057                           pclath	equ	0xFFA
 26058                           tblptru	equ	0xFF8
 26059                           tblptrh	equ	0xFF7
 26060                           tblptrl	equ	0xFF6
 26061                           tablat	equ	0xFF5
 26062                           prodh	equ	0xFF4
 26063                           prodl	equ	0xFF3
 26064                           intcon	equ	0xFF2
 26065                           intcon2	equ	0xFF1
 26066                           intcon3	equ	0xFF0
 26067                           postinc0	equ	0xFEE
 26068                           wreg	equ	0xFE8
 26069                           postinc1	equ	0xFE6
 26070                           postdec1	equ	0xFE5
 26071                           plusw1	equ	0xFE3
 26072                           fsr1h	equ	0xFE2
 26073                           fsr1l	equ	0xFE1
 26074                           indf2	equ	0xFDF
 26075                           postinc2	equ	0xFDE
 26076                           postdec2	equ	0xFDD
 26077                           fsr2h	equ	0xFDA
 26078                           fsr2l	equ	0xFD9
 26079                           status	equ	0xFD8
 26080                           
 26081 ;; *************** function _RADIO_FSKPayloadReady *****************
 26082 ;; Defined at:
 26083 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26084 ;; Parameters:    Size  Location     Type
 26085 ;;		None
 26086 ;; Auto vars:     Size  Location     Type
 26087 ;;  i               1  148[BANK0 ] unsigned char 
 26088 ;;  irqFlags        1  147[BANK0 ] unsigned char 
 26089 ;; Return value:  Size  Location     Type
 26090 ;;                  1    wreg      void 
 26091 ;; Registers used:
 26092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26093 ;; Tracked objects:
 26094 ;;		On entry : 0/0
 26095 ;;		On exit  : 0/0
 26096 ;;		Unchanged: 0/0
 26097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26099 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26101 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26102 ;;Total ram usage:        2 bytes
 26103 ;; Hardware stack levels used:    1
 26104 ;; Hardware stack levels required when called:   16
 26105 ;; This function calls:
 26106 ;;		_HALSPICSAssert
 26107 ;;		_HALSPICSDeassert
 26108 ;;		_HALSPISend
 26109 ;;		_LORAWAN_RxDone
 26110 ;;		_LORAWAN_RxTimeout
 26111 ;;		_RADIO_RegisterRead
 26112 ;;		_RADIO_WriteMode
 26113 ;;		_SwTimerStop
 26114 ;; This function is called by:
 26115 ;;		_RADIO_DIO0
 26116 ;; This function uses a non-reentrant model
 26117 ;;
 26118                           
 26119                           	psect	text163
 26120  009610                     __ptext163:
 26121                           	opt stack 0
 26122  009610                     _RADIO_FSKPayloadReady:
 26123                           	opt stack 12
 26124                           
 26125                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
 26126                           ;radio_driver_SX1276.c: 1013: uint8_t i;
 26127                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
 26128                           
 26129                           ; BSR set to: 0
 26130                           ;incstack = 0
 26131  009610  0E3F               	movlw	63
 26132  009612  EC96  F05E         	call	_RADIO_RegisterRead
 26133  009616  0100               	movlb	0	; () banked
 26134  009618  6FF3               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
 26135                           
 26136                           ; BSR set to: 0
 26137                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
 26138  00961A  A5F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
 26139  00961C  0012               	return	
 26140                           
 26141                           ; BSR set to: 0
 26142                           ;radio_driver_SX1276.c: 1017: {
 26143                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
 26144  00961E  0101               	movlb	1	; () banked
 26145  009620  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26146  009622  ECAA  F05E         	call	_SwTimerStop
 26147                           
 26148                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 26149  009626  0101               	movlb	1	; () banked
 26150  009628  515D               	movf	(_RadioConfiguration+40)& (0+255),w,b
 26151  00962A  ECAA  F05E         	call	_SwTimerStop
 26152                           
 26153                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
 26154  00962E  EC6E  F063         	call	_HALSPICSAssert	;wreg free
 26155                           
 26156                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
 26157  009632  0E00               	movlw	0
 26158  009634  EC78  F062         	call	_HALSPISend
 26159                           
 26160                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
 26161  009638  0EFF               	movlw	255
 26162  00963A  EC78  F062         	call	_HALSPISend
 26163  00963E  0101               	movlb	1	; () banked
 26164  009640  6F59               	movwf	(_RadioConfiguration+36)& (0+255),b
 26165                           
 26166                           ; BSR set to: 1
 26167                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 26168  009642  0E00               	movlw	0
 26169  009644  0100               	movlb	0	; () banked
 26170  009646  6FF4               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
 26171  009648  D00F               	goto	l883
 26172  00964A                     
 26173                           ; BSR set to: 0
 26174                           ;radio_driver_SX1276.c: 1029: {
 26175                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
 26176                           
 26177                           ; BSR set to: 0
 26178  00964A  51F4               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
 26179  00964C  0D01               	mullw	1
 26180  00964E  50F3               	movf	prodl,w,c
 26181  009650  0101               	movlb	1	; () banked
 26182  009652  255A               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 26183  009654  6ED9               	movwf	fsr2l,c
 26184  009656  50F4               	movf	prodh,w,c
 26185  009658  215B               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 26186  00965A  6EDA               	movwf	fsr2h,c
 26187  00965C  0EFF               	movlw	255
 26188  00965E  EC78  F062         	call	_HALSPISend
 26189  009662  6EDF               	movwf	indf2,c
 26190  009664  0100               	movlb	0	; () banked
 26191  009666  2BF4               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
 26192  009668                     l883:
 26193                           
 26194                           ; BSR set to: 0
 26195                           
 26196                           ; BSR set to: 0
 26197  009668  0101               	movlb	1	; () banked
 26198  00966A  5159               	movf	(_RadioConfiguration+36)& (0+255),w,b
 26199  00966C  0100               	movlb	0	; () banked
 26200  00966E  5DF4               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
 26201  009670  A0D8               	btfss	status,0,c
 26202  009672  D7EB               	goto	l884
 26203                           
 26204                           ; BSR set to: 0
 26205                           ;radio_driver_SX1276.c: 1031: }
 26206                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
 26207                           
 26208                           ; BSR set to: 0
 26209  009674  EC6C  F063         	call	_HALSPICSDeassert	;wreg free
 26210                           
 26211                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 26212  009678  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26213  00967C  0E00               	movlw	0
 26214  00967E  0100               	movlb	0	; () banked
 26215  009680  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26216  009682  0E00               	movlw	0
 26217  009684  ECDE  F043         	call	_RADIO_WriteMode
 26218                           
 26219                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
 26220  009688  0101               	movlb	1	; () banked
 26221  00968A  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 26222                           
 26223                           ; BSR set to: 1
 26224                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
 26225  00968C  0E80               	movlw	128
 26226  00968E  6F67               	movwf	(_RadioConfiguration+50)& (0+255),b
 26227                           
 26228                           ; BSR set to: 1
 26229                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
 26230  009690  0551               	decf	(_RadioConfiguration+28)& (0+255),w,b
 26231  009692  A4D8               	btfss	status,2,c
 26232  009694  D008               	goto	l886
 26233                           
 26234                           ; BSR set to: 1
 26235                           ;radio_driver_SX1276.c: 1040: {
 26236                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
 26237  009696  0100               	movlb	0	; () banked
 26238  009698  A3F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
 26239  00969A  D002               	goto	l887
 26240                           
 26241                           ; BSR set to: 0
 26242                           ;radio_driver_SX1276.c: 1042: {
 26243                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
 26244  00969C  0101               	movlb	1	; () banked
 26245  00969E  D003               	goto	l886
 26246  0096A0                     l887:
 26247                           
 26248                           ;radio_driver_SX1276.c: 1045: else
 26249                           ;radio_driver_SX1276.c: 1046: {
 26250                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
 26251                           
 26252                           ; BSR set to: 1
 26253  0096A0  0101               	movlb	1	; () banked
 26254  0096A2  9558               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 26255                           
 26256                           ; BSR set to: 1
 26257                           ;radio_driver_SX1276.c: 1048: }
 26258                           ;radio_driver_SX1276.c: 1049: }
 26259  0096A4  D001               	goto	l889
 26260  0096A6                     l886:
 26261                           
 26262                           ; BSR set to: 1
 26263                           ;radio_driver_SX1276.c: 1050: else
 26264                           ;radio_driver_SX1276.c: 1051: {
 26265                           ;radio_driver_SX1276.c: 1052: RadioConfiguration.flags |= (1 << (2));
 26266                           
 26267                           ; BSR set to: 1
 26268  0096A6  8558               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 26269  0096A8                     l889:
 26270                           
 26271                           ; BSR set to: 1
 26272                           ;radio_driver_SX1276.c: 1053: }
 26273                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 26274                           
 26275                           ; BSR set to: 1
 26276  0096A8  A558               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 26277  0096AA  D009               	goto	l890
 26278                           
 26279                           ; BSR set to: 1
 26280                           ;radio_driver_SX1276.c: 1056: {
 26281                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 26282  0096AC  C15A  F1F2         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 26283  0096B0  C15B  F1F3         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 26284  0096B4  C159  F1F4         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 26285  0096B8  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
 26286                           
 26287                           ;radio_driver_SX1276.c: 1058: }
 26288  0096BC  0012               	return	
 26289  0096BE                     l890:
 26290                           
 26291                           ;radio_driver_SX1276.c: 1059: else
 26292                           ;radio_driver_SX1276.c: 1060: {
 26293                           ;radio_driver_SX1276.c: 1061: LORAWAN_RxTimeout();
 26294  0096BE  EC55  F01F         	call	_LORAWAN_RxTimeout	;wreg free
 26295  0096C2  0012               	return	
 26296  0096C4                     __end_of_RADIO_FSKPayloadReady:
 26297                           	opt stack 0
 26298                           tosu	equ	0xFFF
 26299                           tosh	equ	0xFFE
 26300                           tosl	equ	0xFFD
 26301                           pclath	equ	0xFFA
 26302                           tblptru	equ	0xFF8
 26303                           tblptrh	equ	0xFF7
 26304                           tblptrl	equ	0xFF6
 26305                           tablat	equ	0xFF5
 26306                           prodh	equ	0xFF4
 26307                           prodl	equ	0xFF3
 26308                           intcon	equ	0xFF2
 26309                           intcon2	equ	0xFF1
 26310                           intcon3	equ	0xFF0
 26311                           postinc0	equ	0xFEE
 26312                           wreg	equ	0xFE8
 26313                           postinc1	equ	0xFE6
 26314                           postdec1	equ	0xFE5
 26315                           plusw1	equ	0xFE3
 26316                           fsr1h	equ	0xFE2
 26317                           fsr1l	equ	0xFE1
 26318                           indf2	equ	0xFDF
 26319                           postinc2	equ	0xFDE
 26320                           postdec2	equ	0xFDD
 26321                           fsr2h	equ	0xFDA
 26322                           fsr2l	equ	0xFD9
 26323                           status	equ	0xFD8
 26324                           
 26325 ;; *************** function _LORAWAN_RxTimeout *****************
 26326 ;; Defined at:
 26327 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26328 ;; Parameters:    Size  Location     Type
 26329 ;;		None
 26330 ;; Auto vars:     Size  Location     Type
 26331 ;;  minim           4  102[BANK0 ] unsigned long 
 26332 ;;  i               1  106[BANK0 ] unsigned char 
 26333 ;; Return value:  Size  Location     Type
 26334 ;;                  1    wreg      void 
 26335 ;; Registers used:
 26336 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 26337 ;; Tracked objects:
 26338 ;;		On entry : 0/0
 26339 ;;		On exit  : 0/0
 26340 ;;		Unchanged: 0/0
 26341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26343 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26344 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26345 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26346 ;;Total ram usage:        9 bytes
 26347 ;; Hardware stack levels used:    1
 26348 ;; Hardware stack levels required when called:   15
 26349 ;; This function calls:
 26350 ;;		_LORAWAN_ReceiveWindow2Callback
 26351 ;;		_RADIO_Transmit
 26352 ;;		_ResetParametersForConfirmedTransmission
 26353 ;;		_ResetParametersForUnconfirmedTransmission
 26354 ;;		_RxData
 26355 ;;		_SelectChannelForTransmission
 26356 ;;		_SetJoinFailState
 26357 ;;		_SwTimerSetTimeout
 26358 ;;		_SwTimerStart
 26359 ;;		___lldiv
 26360 ;; This function is called by:
 26361 ;;		_RADIO_FSKPayloadReady
 26362 ;;		_RADIO_RxTimeout
 26363 ;;		_RADIO_RxFSKTimeout
 26364 ;;		_RADIO_WatchdogTimeout
 26365 ;; This function uses a non-reentrant model
 26366 ;;
 26367                           
 26368                           	psect	text164
 26369  003EAA                     __ptext164:
 26370                           	opt stack 0
 26371  003EAA                     _LORAWAN_RxTimeout:
 26372                           	opt stack 12
 26373                           
 26374                           ;lorawan_eu.c: 466: uint8_t i;
 26375                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
 26376                           
 26377                           ;incstack = 0
 26378  003EAA  0100               	movlb	0	; () banked
 26379  003EAC  69C6               	setf	LORAWAN_RxTimeout@minim& (0+255),b
 26380  003EAE  69C7               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
 26381  003EB0  69C8               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
 26382  003EB2  69C9               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
 26383                           
 26384                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
 26385  003EB4  0102               	movlb	2	; () banked
 26386  003EB6  B107               	btfsc	(_loRa+3)& (0+255),0,b
 26387  003EB8  D190               	goto	l1386
 26388                           
 26389                           ; BSR set to: 2
 26390                           ;lorawan_eu.c: 470: {
 26391                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
 26392  003EBA  5106               	movf	(_loRa+2)& (0+255),w,b
 26393  003EBC  0B0F               	andlw	15
 26394  003EBE  0A03               	xorlw	3
 26395  003EC0  A4D8               	btfss	status,2,c
 26396  003EC2  D011               	goto	l1387
 26397                           
 26398                           ; BSR set to: 2
 26399                           ;lorawan_eu.c: 473: {
 26400                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
 26401  003EC4  5116               	movf	(_loRa+18)& (0+255),w,b
 26402  003EC6  A4D8               	btfss	status,2,c
 26403  003EC8  D005               	goto	l1388
 26404                           
 26405                           ; BSR set to: 2
 26406                           ;lorawan_eu.c: 475: {
 26407                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
 26408  003ECA  5106               	movf	(_loRa+2)& (0+255),w,b
 26409  003ECC  0BF0               	andlw	-16
 26410  003ECE  0904               	iorlw	4
 26411  003ED0  6F06               	movwf	(_loRa+2)& (0+255),b
 26412                           
 26413                           ;lorawan_eu.c: 477: }
 26414  003ED2  0012               	return	
 26415  003ED4                     l1388:
 26416                           
 26417                           ; BSR set to: 2
 26418                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
 26419                           
 26420                           ; BSR set to: 2
 26421  003ED4  0E02               	movlw	2
 26422  003ED6  1916               	xorwf	(_loRa+18)& (0+255),w,b
 26423  003ED8  A4D8               	btfss	status,2,c
 26424  003EDA  0012               	return	
 26425                           
 26426                           ; BSR set to: 2
 26427                           ;lorawan_eu.c: 479: {
 26428                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
 26429  003EDC  0E00               	movlw	0
 26430  003EDE  6EE6               	movwf	postinc1,c
 26431  003EE0  EC72  F049         	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
 26432                           
 26433                           ;lorawan_eu.c: 481: }
 26434                           ;lorawan_eu.c: 482: }
 26435  003EE4  0012               	return	
 26436  003EE6                     l1387:
 26437                           
 26438                           ; BSR set to: 2
 26439                           ;lorawan_eu.c: 483: else
 26440                           ;lorawan_eu.c: 484: {
 26441                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
 26442  003EE6  A504               	btfss	_loRa& (0+255),2,b
 26443  003EE8  D003               	goto	l1392
 26444                           
 26445                           ; BSR set to: 2
 26446                           ;lorawan_eu.c: 487: {
 26447                           ;lorawan_eu.c: 488: SetJoinFailState();
 26448  003EEA  ECDB  F05C         	call	_SetJoinFailState	;wreg free
 26449                           
 26450                           ;lorawan_eu.c: 489: }
 26451  003EEE  0012               	return	
 26452  003EF0                     l1392:
 26453                           
 26454                           ; BSR set to: 2
 26455                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
 26456  003EF0  A906               	btfss	(_loRa+2)& (0+255),4,b
 26457  003EF2  0012               	return	
 26458                           
 26459                           ; BSR set to: 2
 26460                           ;lorawan_eu.c: 492: {
 26461                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
 26462  003EF4  A104               	btfss	_loRa& (0+255),0,b
 26463  003EF6  D058               	goto	l1395
 26464                           
 26465                           ; BSR set to: 2
 26466                           ;lorawan_eu.c: 494: {
 26467                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
 26468  003EF8  51DD               	movf	(_loRa+217)& (0+255),w,b
 26469  003EFA  5DDB               	subwf	(_loRa+215)& (0+255),w,b
 26470  003EFC  A0D8               	btfss	status,0,c
 26471  003EFE  D038               	goto	l1396
 26472                           
 26473                           ; BSR set to: 2
 26474                           ;lorawan_eu.c: 496: {
 26475                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 26476  003F00  5106               	movf	(_loRa+2)& (0+255),w,b
 26477  003F02  0BF0               	andlw	-16
 26478  003F04  0906               	iorlw	6
 26479  003F06  6F06               	movwf	(_loRa+2)& (0+255),b
 26480                           
 26481                           ; BSR set to: 2
 26482                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
 26483  003F08  51A4               	movf	(_loRa+160)& (0+255),w,b
 26484  003F0A  0100               	movlb	0	; () banked
 26485  003F0C  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 26486  003F0E  0102               	movlb	2	; () banked
 26487  003F10  51A5               	movf	(_loRa+161)& (0+255),w,b
 26488  003F12  0100               	movlb	0	; () banked
 26489  003F14  6FC3               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
 26490  003F16  6BC4               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
 26491  003F18  6BC5               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
 26492  003F1A  0E0C               	movlw	12
 26493  003F1C                     u23405:
 26494  003F1C  90D8               	bcf	status,0,c
 26495  003F1E  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 26496  003F20  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 26497  003F22  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 26498  003F24  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 26499  003F26  2EE8               	decfsz	wreg,f,c
 26500  003F28  D7F9               	goto	u23405
 26501  003F2A  C0C2  F060         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
 26502  003F2E  C0C3  F061         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
 26503  003F32  C0C4  F062         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
 26504  003F36  C0C5  F063         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
 26505  003F3A  0E7D               	movlw	125
 26506  003F3C  6F64               	movwf	___lldiv@divisor& (0+255),b
 26507  003F3E  0E00               	movlw	0
 26508  003F40  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 26509  003F42  0E00               	movlw	0
 26510  003F44  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 26511  003F46  0E00               	movlw	0
 26512  003F48  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 26513  003F4A  ECB0  F050         	call	___lldiv	;wreg free
 26514  003F4E  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 26515  003F52  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 26516  003F56  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 26517  003F5A  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 26518  003F5E  0102               	movlb	2	; () banked
 26519  003F60  51EC               	movf	(_loRa+232)& (0+255),w,b
 26520  003F62  ECD7  F05A         	call	_SwTimerSetTimeout
 26521                           
 26522                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
 26523  003F66  0102               	movlb	2	; () banked
 26524  003F68  51EC               	movf	(_loRa+232)& (0+255),w,b
 26525  003F6A  EC5C  F04D         	call	_SwTimerStart
 26526                           
 26527                           ;lorawan_eu.c: 500: }
 26528  003F6E  0012               	return	
 26529  003F70                     l1396:
 26530                           
 26531                           ;lorawan_eu.c: 501: else
 26532                           ;lorawan_eu.c: 502: {
 26533                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
 26534  003F70  ECF4  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 26535                           
 26536                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
 26537  003F74  0101               	movlb	1	; () banked
 26538  003F76  510C               	movf	_rxPayload& (0+255),w,b
 26539  003F78  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 26540  003F7A  B4D8               	btfsc	status,2,c
 26541  003F7C  0012               	return	
 26542                           
 26543                           ; BSR set to: 1
 26544                           ;lorawan_eu.c: 505: {
 26545                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 26546  003F7E  0E00               	movlw	0
 26547  003F80  0100               	movlb	0	; () banked
 26548  003F82  6F60               	movwf	RxData@pData& (0+255),b
 26549  003F84  0E00               	movlw	0
 26550  003F86  6F61               	movwf	(RxData@pData+1)& (0+255),b
 26551  003F88  0E00               	movlw	0
 26552  003F8A  6F62               	movwf	RxData@dataLength& (0+255),b
 26553  003F8C  0E00               	movlw	0
 26554  003F8E  6F63               	movwf	RxData@status& (0+255),b
 26555  003F90  D801               	call	u23428
 26556  003F92  0012               	return	
 26557  003F94                     u23428:
 26558  003F94  0005               	push	
 26559  003F96  6EFA               	movwf	pclath,c
 26560  003F98  0101               	movlb	1	; () banked
 26561  003F9A  510C               	movf	_rxPayload& (0+255),w,b
 26562  003F9C  6EFD               	movwf	tosl,c
 26563  003F9E  510D               	movf	(_rxPayload+1)& (0+255),w,b
 26564  003FA0  6EFE               	movwf	tosh,c
 26565  003FA2  6AFF               	clrf	tosu,c
 26566  003FA4  50FA               	movf	pclath,w,c
 26567  003FA6  0012               	return		;indir
 26568  003FA8                     l1395:
 26569                           
 26570                           ;lorawan_eu.c: 511: else
 26571                           ;lorawan_eu.c: 512: {
 26572                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 26573  003FA8  0102               	movlb	2	; () banked
 26574  003FAA  51DC               	movf	(_loRa+216)& (0+255),w,b
 26575  003FAC  5DDA               	subwf	(_loRa+214)& (0+255),w,b
 26576  003FAE  A0D8               	btfss	status,0,c
 26577  003FB0  D0F8               	goto	l1400
 26578                           
 26579                           ; BSR set to: 2
 26580                           ;lorawan_eu.c: 514: {
 26581                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 26582  003FB2  5106               	movf	(_loRa+2)& (0+255),w,b
 26583  003FB4  0BF0               	andlw	-16
 26584  003FB6  0906               	iorlw	6
 26585  003FB8  6F06               	movwf	(_loRa+2)& (0+255),b
 26586                           
 26587                           ; BSR set to: 2
 26588                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 26589  003FBA  0E01               	movlw	1
 26590  003FBC  EC7D  F053         	call	_SelectChannelForTransmission
 26591  003FC0  0900               	iorlw	0
 26592  003FC2  A4D8               	btfss	status,2,c
 26593  003FC4  D031               	goto	l1401
 26594                           
 26595                           ;lorawan_eu.c: 517: {
 26596                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 26597  003FC6  0E30               	movlw	low (_macBuffer+16)
 26598  003FC8  0100               	movlb	0	; () banked
 26599  003FCA  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 26600  003FCC  0E05               	movlw	high (_macBuffer+16)
 26601  003FCE  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 26602  003FD0  C2D8  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 26603  003FD4  ECE4  F02D         	call	_RADIO_Transmit	;wreg free
 26604  003FD8  0100               	movlb	0	; () banked
 26605  003FDA  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 26606  003FDC  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 26607  003FDE  A4D8               	btfss	status,2,c
 26608  003FE0  D007               	goto	l1402
 26609                           
 26610                           ; BSR set to: 0
 26611                           ;lorawan_eu.c: 520: {
 26612                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 26613  003FE2  0102               	movlb	2	; () banked
 26614  003FE4  2BDC               	incf	(_loRa+216)& (0+255),f,b
 26615                           
 26616                           ; BSR set to: 2
 26617                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 26618  003FE6  5106               	movf	(_loRa+2)& (0+255),w,b
 26619  003FE8  0BF0               	andlw	-16
 26620  003FEA  0901               	iorlw	1
 26621  003FEC  6F06               	movwf	(_loRa+2)& (0+255),b
 26622                           
 26623                           ;lorawan_eu.c: 523: }
 26624  003FEE  0012               	return	
 26625  003FF0                     l1402:
 26626                           
 26627                           ;lorawan_eu.c: 524: else
 26628                           ;lorawan_eu.c: 526: {
 26629                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 26630                           
 26631                           ; BSR set to: 2
 26632  003FF0  ECA0  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 26633                           
 26634                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 26635  003FF4  0101               	movlb	1	; () banked
 26636  003FF6  510C               	movf	_rxPayload& (0+255),w,b
 26637  003FF8  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 26638  003FFA  B4D8               	btfsc	status,2,c
 26639  003FFC  0012               	return	
 26640                           
 26641                           ; BSR set to: 1
 26642                           ;lorawan_eu.c: 529: {
 26643                           ;lorawan_eu.c: 530: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
 26644  003FFE  0E00               	movlw	0
 26645  004000  0100               	movlb	0	; () banked
 26646  004002  6F60               	movwf	RxData@pData& (0+255),b
 26647  004004  0E00               	movlw	0
 26648  004006  6F61               	movwf	(RxData@pData+1)& (0+255),b
 26649  004008  0E00               	movlw	0
 26650  00400A  6F62               	movwf	RxData@dataLength& (0+255),b
 26651  00400C  0E00               	movlw	0
 26652  00400E  6F63               	movwf	RxData@status& (0+255),b
 26653  004010  D801               	call	u23478
 26654  004012  0012               	return	
 26655  004014                     u23478:
 26656  004014  0005               	push	
 26657  004016  6EFA               	movwf	pclath,c
 26658  004018  0101               	movlb	1	; () banked
 26659  00401A  510C               	movf	_rxPayload& (0+255),w,b
 26660  00401C  6EFD               	movwf	tosl,c
 26661  00401E  510D               	movf	(_rxPayload+1)& (0+255),w,b
 26662  004020  6EFE               	movwf	tosh,c
 26663  004022  6AFF               	clrf	tosu,c
 26664  004024  50FA               	movf	pclath,w,c
 26665  004026  0012               	return		;indir
 26666  004028                     l1401:
 26667                           
 26668                           ;lorawan_eu.c: 534: else
 26669                           ;lorawan_eu.c: 535: {
 26670                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 26671  004028  0E00               	movlw	0
 26672  00402A  0100               	movlb	0	; () banked
 26673  00402C  6FCA               	movwf	LORAWAN_RxTimeout@i& (0+255),b
 26674  00402E  D07C               	goto	l1406
 26675  004030                     
 26676                           ;lorawan_eu.c: 538: {
 26677                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 26678                           
 26679                           ; BSR set to: 0
 26680  004030  0100               	movlb	0	; () banked
 26681  004032  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26682  004034  0D0E               	mullw	14
 26683  004036  0E04               	movlw	4
 26684  004038  26F3               	addwf	prodl,f,c
 26685  00403A  0E00               	movlw	0
 26686  00403C  22F4               	addwfc	prodh,f,c
 26687  00403E  0E00               	movlw	low _Channels
 26688  004040  24F3               	addwf	prodl,w,c
 26689  004042  6ED9               	movwf	fsr2l,c
 26690  004044  0E04               	movlw	high _Channels
 26691  004046  20F4               	addwfc	prodh,w,c
 26692  004048  6EDA               	movwf	fsr2h,c
 26693  00404A  04DE               	decf	postinc2,w,c
 26694  00404C  A4D8               	btfss	status,2,c
 26695  00404E  D06A               	goto	l1408
 26696                           
 26697                           ; BSR set to: 0
 26698  004050  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26699  004052  0D0E               	mullw	14
 26700  004054  0E08               	movlw	8
 26701  004056  26F3               	addwf	prodl,f,c
 26702  004058  0E00               	movlw	0
 26703  00405A  22F4               	addwfc	prodh,f,c
 26704  00405C  0E00               	movlw	low _Channels
 26705  00405E  24F3               	addwf	prodl,w,c
 26706  004060  6ED9               	movwf	fsr2l,c
 26707  004062  0E04               	movlw	high _Channels
 26708  004064  20F4               	addwfc	prodh,w,c
 26709  004066  6EDA               	movwf	fsr2h,c
 26710  004068  50DE               	movf	postinc2,w,c
 26711  00406A  10DE               	iorwf	postinc2,w,c
 26712  00406C  10DE               	iorwf	postinc2,w,c
 26713  00406E  10DE               	iorwf	postinc2,w,c
 26714  004070  B4D8               	btfsc	status,2,c
 26715  004072  D058               	goto	l1408
 26716                           
 26717                           ; BSR set to: 0
 26718  004074  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26719  004076  0D0E               	mullw	14
 26720  004078  0E08               	movlw	8
 26721  00407A  26F3               	addwf	prodl,f,c
 26722  00407C  0E00               	movlw	0
 26723  00407E  22F4               	addwfc	prodh,f,c
 26724  004080  0E00               	movlw	low _Channels
 26725  004082  24F3               	addwf	prodl,w,c
 26726  004084  6ED9               	movwf	fsr2l,c
 26727  004086  0E04               	movlw	high _Channels
 26728  004088  20F4               	addwfc	prodh,w,c
 26729  00408A  6EDA               	movwf	fsr2h,c
 26730  00408C  50DE               	movf	postinc2,w,c
 26731  00408E  5DC6               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 26732  004090  50DE               	movf	postinc2,w,c
 26733  004092  59C7               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 26734  004094  50DE               	movf	postinc2,w,c
 26735  004096  59C8               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 26736  004098  50DE               	movf	postinc2,w,c
 26737  00409A  59C9               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 26738  00409C  A0D8               	btfss	status,0,c
 26739  00409E  D042               	goto	l1408
 26740                           
 26741                           ; BSR set to: 0
 26742  0040A0  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26743  0040A2  0D0E               	mullw	14
 26744  0040A4  0E05               	movlw	5
 26745  0040A6  26F3               	addwf	prodl,f,c
 26746  0040A8  0E00               	movlw	0
 26747  0040AA  22F4               	addwfc	prodh,f,c
 26748  0040AC  0E00               	movlw	low _Channels
 26749  0040AE  24F3               	addwf	prodl,w,c
 26750  0040B0  6ED9               	movwf	fsr2l,c
 26751  0040B2  0E04               	movlw	high _Channels
 26752  0040B4  20F4               	addwfc	prodh,w,c
 26753  0040B6  6EDA               	movwf	fsr2h,c
 26754  0040B8  0104               	movlb	4	; () banked
 26755  0040BA  50DF               	movf	223,w,c
 26756  0040BC  0B0F               	andlw	15
 26757  0040BE  0100               	movlb	0	; () banked
 26758  0040C0  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 26759  0040C2  51C2               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 26760  0040C4  0102               	movlb	2	; () banked
 26761  0040C6  5DE3               	subwf	(_loRa+223)& (0+255),w,b
 26762  0040C8  A0D8               	btfss	status,0,c
 26763  0040CA  D02C               	goto	l1408
 26764                           
 26765                           ; BSR set to: 2
 26766  0040CC  0100               	movlb	0	; () banked
 26767  0040CE  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26768  0040D0  0D0E               	mullw	14
 26769  0040D2  0E05               	movlw	5
 26770  0040D4  26F3               	addwf	prodl,f,c
 26771  0040D6  0E00               	movlw	0
 26772  0040D8  22F4               	addwfc	prodh,f,c
 26773  0040DA  0E00               	movlw	low _Channels
 26774  0040DC  24F3               	addwf	prodl,w,c
 26775  0040DE  6ED9               	movwf	fsr2l,c
 26776  0040E0  0E04               	movlw	high _Channels
 26777  0040E2  20F4               	addwfc	prodh,w,c
 26778  0040E4  6EDA               	movwf	fsr2h,c
 26779  0040E6  0104               	movlb	4	; () banked
 26780  0040E8  38DF               	swapf	223,w,c
 26781  0040EA  0B0F               	andlw	15
 26782  0040EC  0100               	movlb	0	; () banked
 26783  0040EE  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 26784  0040F0  0102               	movlb	2	; () banked
 26785  0040F2  51E3               	movf	(_loRa+223)& (0+255),w,b
 26786  0040F4  0100               	movlb	0	; () banked
 26787  0040F6  5DC2               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 26788  0040F8  A0D8               	btfss	status,0,c
 26789  0040FA  D014               	goto	l1408
 26790                           
 26791                           ; BSR set to: 0
 26792                           ;lorawan_eu.c: 540: {
 26793                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 26794  0040FC  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26795  0040FE  0D0E               	mullw	14
 26796  004100  0E08               	movlw	8
 26797  004102  26F3               	addwf	prodl,f,c
 26798  004104  0E00               	movlw	0
 26799  004106  22F4               	addwfc	prodh,f,c
 26800  004108  0E00               	movlw	low _Channels
 26801  00410A  24F3               	addwf	prodl,w,c
 26802  00410C  6ED9               	movwf	fsr2l,c
 26803  00410E  0E04               	movlw	high _Channels
 26804  004110  20F4               	addwfc	prodh,w,c
 26805  004112  6EDA               	movwf	fsr2h,c
 26806  004114  CFDE F0C6          	movff	postinc2,LORAWAN_RxTimeout@minim
 26807  004118  CFDE F0C7          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 26808  00411C  CFDE F0C8          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 26809  004120  CFDE F0C9          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 26810  004124                     l1408:
 26811                           
 26812                           ; BSR set to: 0
 26813  004124  0100               	movlb	0	; () banked
 26814  004126  2BCA               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 26815  004128                     l1406:
 26816                           
 26817                           ; BSR set to: 0
 26818                           
 26819                           ; BSR set to: 0
 26820  004128  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26821  00412A  0102               	movlb	2	; () banked
 26822  00412C  5DF1               	subwf	(_loRa+237)& (0+255),w,b
 26823  00412E  B0D8               	btfsc	status,0,c
 26824  004130  D77F               	goto	l1407
 26825                           
 26826                           ; BSR set to: 2
 26827                           ;lorawan_eu.c: 542: }
 26828                           ;lorawan_eu.c: 543: }
 26829                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 26830                           
 26831                           ; BSR set to: 2
 26832  004132  C0C6  F0C2         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 26833  004136  C0C7  F0C3         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 26834  00413A  C0C8  F0C4         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 26835  00413E  C0C9  F0C5         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 26836  004142  0E0C               	movlw	12
 26837  004144                     u23545:
 26838  004144  90D8               	bcf	status,0,c
 26839  004146  0100               	movlb	0	; () banked
 26840  004148  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 26841  00414A  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 26842  00414C  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 26843  00414E  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 26844  004150  2EE8               	decfsz	wreg,f,c
 26845  004152  D7F8               	goto	u23545
 26846  004154  0E00               	movlw	0
 26847  004156  25C2               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 26848  004158  6F60               	movwf	___lldiv@dividend& (0+255),b
 26849  00415A  0E20               	movlw	32
 26850  00415C  21C3               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 26851  00415E  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 26852  004160  0E03               	movlw	3
 26853  004162  21C4               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 26854  004164  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 26855  004166  0E00               	movlw	0
 26856  004168  21C5               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 26857  00416A  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 26858  00416C  0E7D               	movlw	125
 26859  00416E  6F64               	movwf	___lldiv@divisor& (0+255),b
 26860  004170  0E00               	movlw	0
 26861  004172  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 26862  004174  0E00               	movlw	0
 26863  004176  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 26864  004178  0E00               	movlw	0
 26865  00417A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 26866  00417C  ECB0  F050         	call	___lldiv	;wreg free
 26867  004180  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 26868  004184  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 26869  004188  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 26870  00418C  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 26871  004190  0102               	movlb	2	; () banked
 26872  004192  51EE               	movf	(_loRa+234)& (0+255),w,b
 26873  004194  ECD7  F05A         	call	_SwTimerSetTimeout
 26874                           
 26875                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 26876  004198  0102               	movlb	2	; () banked
 26877  00419A  51EE               	movf	(_loRa+234)& (0+255),w,b
 26878  00419C  EC5C  F04D         	call	_SwTimerStart
 26879                           
 26880                           ;lorawan_eu.c: 546: }
 26881                           ;lorawan_eu.c: 547: }
 26882  0041A0  0012               	return	
 26883  0041A2                     l1400:
 26884                           
 26885                           ;lorawan_eu.c: 548: else
 26886                           ;lorawan_eu.c: 549: {
 26887                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 26888  0041A2  ECA0  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 26889                           
 26890                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 26891  0041A6  0101               	movlb	1	; () banked
 26892  0041A8  510C               	movf	_rxPayload& (0+255),w,b
 26893  0041AA  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 26894  0041AC  B4D8               	btfsc	status,2,c
 26895  0041AE  0012               	return	
 26896                           
 26897                           ; BSR set to: 1
 26898                           ;lorawan_eu.c: 552: {
 26899                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 26900  0041B0  0E00               	movlw	0
 26901  0041B2  0100               	movlb	0	; () banked
 26902  0041B4  6F60               	movwf	RxData@pData& (0+255),b
 26903  0041B6  0E00               	movlw	0
 26904  0041B8  6F61               	movwf	(RxData@pData+1)& (0+255),b
 26905  0041BA  0E00               	movlw	0
 26906  0041BC  6F62               	movwf	RxData@dataLength& (0+255),b
 26907  0041BE  0E01               	movlw	1
 26908  0041C0  6F63               	movwf	RxData@status& (0+255),b
 26909  0041C2  D801               	call	u23568
 26910  0041C4  0012               	return	
 26911  0041C6                     u23568:
 26912  0041C6  0005               	push	
 26913  0041C8  6EFA               	movwf	pclath,c
 26914  0041CA  0101               	movlb	1	; () banked
 26915  0041CC  510C               	movf	_rxPayload& (0+255),w,b
 26916  0041CE  6EFD               	movwf	tosl,c
 26917  0041D0  510D               	movf	(_rxPayload+1)& (0+255),w,b
 26918  0041D2  6EFE               	movwf	tosh,c
 26919  0041D4  6AFF               	clrf	tosu,c
 26920  0041D6  50FA               	movf	pclath,w,c
 26921  0041D8  0012               	return		;indir
 26922  0041DA                     l1386:
 26923                           
 26924                           ;lorawan_eu.c: 560: else
 26925                           ;lorawan_eu.c: 561: {
 26926                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 26927  0041DA  0101               	movlb	1	; () banked
 26928  0041DC  510C               	movf	_rxPayload& (0+255),w,b
 26929  0041DE  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 26930  0041E0  B4D8               	btfsc	status,2,c
 26931  0041E2  0012               	return	
 26932                           
 26933                           ; BSR set to: 1
 26934                           ;lorawan_eu.c: 564: {
 26935                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 26936  0041E4  0E00               	movlw	0
 26937  0041E6  0100               	movlb	0	; () banked
 26938  0041E8  6F60               	movwf	RxData@pData& (0+255),b
 26939  0041EA  0E00               	movlw	0
 26940  0041EC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 26941  0041EE  0E00               	movlw	0
 26942  0041F0  6F62               	movwf	RxData@dataLength& (0+255),b
 26943  0041F2  0E02               	movlw	2
 26944  0041F4  6F63               	movwf	RxData@status& (0+255),b
 26945  0041F6  D801               	call	u23588
 26946  0041F8  0012               	return	
 26947  0041FA                     u23588:
 26948  0041FA  0005               	push	
 26949  0041FC  6EFA               	movwf	pclath,c
 26950  0041FE  0101               	movlb	1	; () banked
 26951  004200  510C               	movf	_rxPayload& (0+255),w,b
 26952  004202  6EFD               	movwf	tosl,c
 26953  004204  510D               	movf	(_rxPayload+1)& (0+255),w,b
 26954  004206  6EFE               	movwf	tosh,c
 26955  004208  6AFF               	clrf	tosu,c
 26956  00420A  50FA               	movf	pclath,w,c
 26957  00420C  0012               	return		;indir
 26958  00420E                     __end_of_LORAWAN_RxTimeout:
 26959                           	opt stack 0
 26960                           tosu	equ	0xFFF
 26961                           tosh	equ	0xFFE
 26962                           tosl	equ	0xFFD
 26963                           pclath	equ	0xFFA
 26964                           tblptru	equ	0xFF8
 26965                           tblptrh	equ	0xFF7
 26966                           tblptrl	equ	0xFF6
 26967                           tablat	equ	0xFF5
 26968                           prodh	equ	0xFF4
 26969                           prodl	equ	0xFF3
 26970                           intcon	equ	0xFF2
 26971                           intcon2	equ	0xFF1
 26972                           intcon3	equ	0xFF0
 26973                           postinc0	equ	0xFEE
 26974                           wreg	equ	0xFE8
 26975                           postinc1	equ	0xFE6
 26976                           postdec1	equ	0xFE5
 26977                           plusw1	equ	0xFE3
 26978                           fsr1h	equ	0xFE2
 26979                           fsr1l	equ	0xFE1
 26980                           indf2	equ	0xFDF
 26981                           postinc2	equ	0xFDE
 26982                           postdec2	equ	0xFDD
 26983                           fsr2h	equ	0xFDA
 26984                           fsr2l	equ	0xFD9
 26985                           status	equ	0xFD8
 26986                           
 26987 ;; *************** function _LORAWAN_RxDone *****************
 26988 ;; Defined at:
 26989 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26990 ;; Parameters:    Size  Location     Type
 26991 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 26992 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 26993 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 26994 ;; Auto vars:     Size  Location     Type
 26995 ;;  hdr             2  145[BANK0 ] PTR struct .
 26996 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 26997 ;;  joinAccept      2  142[BANK0 ] PTR struct .
 26998 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 26999 ;;  computedMic     4  138[BANK0 ] unsigned long 
 27000 ;;  extractedMic    4  130[BANK0 ] unsigned long 
 27001 ;;  packet          2  136[BANK0 ] PTR unsigned char 
 27002 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 27003 ;;  frmPayloadLe    1  144[BANK0 ] unsigned char 
 27004 ;;  temp            1  135[BANK0 ] unsigned char 
 27005 ;;  bufferIndex     1  134[BANK0 ] unsigned char 
 27006 ;;  mhdr            1  129[BANK0 ] struct .
 27007 ;;  channelIndex    1  128[BANK0 ] unsigned char 
 27008 ;;  fPort           1  127[BANK0 ] unsigned char 
 27009 ;; Return value:  Size  Location     Type
 27010 ;;                  1    wreg      enum E7426
 27011 ;; Registers used:
 27012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27013 ;; Tracked objects:
 27014 ;;		On entry : 0/0
 27015 ;;		On exit  : 0/0
 27016 ;;		Unchanged: 0/0
 27017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27018 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27019 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27020 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27021 ;;      Totals:         0      25       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27022 ;;Total ram usage:       28 bytes
 27023 ;; Hardware stack levels used:    1
 27024 ;; Hardware stack levels required when called:   15
 27025 ;; This function calls:
 27026 ;;		_AESCmac
 27027 ;;		_AESEncodeLoRa
 27028 ;;		_AssembleEncryptionBlock
 27029 ;;		_CheckFlags
 27030 ;;		_CheckMcastFlags
 27031 ;;		_ComputeMic
 27032 ;;		_ComputeSessionKeys
 27033 ;;		_EncryptFRMPayload
 27034 ;;		_ExtractMic
 27035 ;;		_LORAWAN_EnterContinuousReceive
 27036 ;;		_LORAWAN_Send
 27037 ;;		_MacExecuteCommands
 27038 ;;		_RADIO_GetStatus
 27039 ;;		_RADIO_ReleaseData
 27040 ;;		_RxData
 27041 ;;		_SearchAvailableChannel
 27042 ;;		_SetJoinFailState
 27043 ;;		_SetReceptionNotOkState
 27044 ;;		_StartReTxTimer
 27045 ;;		_SwTimerStop
 27046 ;;		_UpdateCfList
 27047 ;;		_UpdateDLSettings
 27048 ;;		_UpdateJoinSuccessState
 27049 ;;		_UpdateReceiveDelays
 27050 ;;		_UpdateRetransmissionAckTimeoutState
 27051 ;;		_memcpy
 27052 ;; This function is called by:
 27053 ;;		_RADIO_RxDone
 27054 ;;		_RADIO_FSKPayloadReady
 27055 ;; This function uses a non-reentrant model
 27056 ;;
 27057                           
 27058                           	psect	text165
 27059  000086                     __ptext165:
 27060                           	opt stack 0
 27061  000086                     _LORAWAN_RxDone:
 27062                           	opt stack 12
 27063                           
 27064                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 27065                           ;lorawan.c: 1124: Mhdr_t mhdr;
 27066                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 27067                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 27068                           ;lorawan.c: 1127: uint8_t *packet;
 27069                           ;lorawan.c: 1128: uint8_t temp;
 27070                           ;lorawan.c: 1130: RADIO_ReleaseData();
 27071                           
 27072                           ;incstack = 0
 27073  000086  EC42  F063         	call	_RADIO_ReleaseData	;wreg free
 27074                           
 27075                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 27076  00008A  0102               	movlb	2	; () banked
 27077  00008C  B107               	btfsc	(_loRa+3)& (0+255),0,b
 27078  00008E  EF62  F006         	goto	l2230
 27079                           
 27080                           ; BSR set to: 2
 27081                           ;lorawan.c: 1133: {
 27082                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 27083  000092  C1F2  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 27084  000096  C1F3  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 27085  00009A  50DF               	movf	indf2,w,c
 27086  00009C  0100               	movlb	0	; () banked
 27087  00009E  6FE1               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 27088                           
 27089                           ; BSR set to: 0
 27090                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 27091  0000A0  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 27092  0000A2  32E8               	rrcf	wreg,f,c
 27093  0000A4  0B07               	andlw	7
 27094  0000A6  06E8               	decf	wreg,f,c
 27095  0000A8  A4D8               	btfss	status,2,c
 27096  0000AA  D0D8               	goto	l2231
 27097                           
 27098                           ; BSR set to: 0
 27099  0000AC  0102               	movlb	2	; () banked
 27100  0000AE  5121               	movf	(_loRa+29)& (0+255),w,b
 27101  0000B0  A4D8               	btfss	status,2,c
 27102  0000B2  D0D4               	goto	l2231
 27103                           
 27104                           ; BSR set to: 2
 27105                           ;lorawan.c: 1136: {
 27106                           ;lorawan.c: 1137: temp = bufferLength - 1;
 27107  0000B4  0101               	movlb	1	; () banked
 27108  0000B6  05F4               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27109  0000B8  0100               	movlb	0	; () banked
 27110  0000BA  D028               	goto	L9
 27111  0000BC                     
 27112                           ; BSR set to: 0
 27113                           ;lorawan.c: 1139: {
 27114                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 27115                           
 27116                           ; BSR set to: 0
 27117  0000BC  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 27118  0000BE  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 27119  0000C0  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 27120  0000C2  1FDA               	comf	??_LORAWAN_RxDone& (0+255),f,b
 27121  0000C4  1FDB               	comf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 27122  0000C6  4BDA               	infsnz	??_LORAWAN_RxDone& (0+255),f,b
 27123  0000C8  2BDB               	incf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 27124  0000CA  0101               	movlb	1	; () banked
 27125  0000CC  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27126  0000CE  0100               	movlb	0	; () banked
 27127  0000D0  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 27128  0000D2  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 27129  0000D4  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 27130  0000D6  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 27131  0000D8  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 27132  0000DA  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 27133  0000DC  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 27134  0000DE  0101               	movlb	1	; () banked
 27135  0000E0  25F2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 27136  0000E2  0100               	movlb	0	; () banked
 27137  0000E4  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 27138  0000E6  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 27139  0000E8  0101               	movlb	1	; () banked
 27140  0000EA  21F3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 27141  0000EC  0100               	movlb	0	; () banked
 27142  0000EE  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 27143  0000F0  0E46               	movlw	low (_loRa+66)
 27144  0000F2  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 27145  0000F4  0E02               	movlw	high (_loRa+66)
 27146  0000F6  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 27147  0000F8  EC15  F05C         	call	_AESEncodeLoRa	;wreg free
 27148                           
 27149                           ;lorawan.c: 1142: if (temp > 16)
 27150  0000FC  0E10               	movlw	16
 27151  0000FE  0100               	movlb	0	; () banked
 27152  000100  65E7               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 27153  000102  D003               	goto	l2234
 27154                           
 27155                           ; BSR set to: 0
 27156                           ;lorawan.c: 1143: {
 27157                           ;lorawan.c: 1144: temp -= 16;
 27158  000104  0E10               	movlw	16
 27159  000106  5FE7               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 27160                           
 27161                           ;lorawan.c: 1145: }
 27162  000108  D002               	goto	l2235
 27163  00010A                     l2234:
 27164                           
 27165                           ; BSR set to: 0
 27166                           ;lorawan.c: 1146: else
 27167                           ;lorawan.c: 1147: {
 27168                           ;lorawan.c: 1148: temp = 0;
 27169                           
 27170                           ; BSR set to: 0
 27171  00010A  0E00               	movlw	0
 27172  00010C                     L9:
 27173  00010C  6FE7               	movwf	LORAWAN_RxDone@temp& (0+255),b
 27174  00010E                     l2235:
 27175                           
 27176                           ; BSR set to: 0
 27177                           
 27178                           ; BSR set to: 0
 27179  00010E  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 27180  000110  A4D8               	btfss	status,2,c
 27181  000112  D7D4               	goto	l2233
 27182                           
 27183                           ; BSR set to: 0
 27184                           ;lorawan.c: 1149: }
 27185                           ;lorawan.c: 1150: }
 27186                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 27187                           
 27188                           ; BSR set to: 0
 27189  000114  0E46               	movlw	low (_loRa+66)
 27190  000116  6FC7               	movwf	ComputeMic@key& (0+255),b
 27191  000118  0E02               	movlw	high (_loRa+66)
 27192  00011A  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 27193  00011C  C1F2  F0C9         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 27194  000120  C1F3  F0CA         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 27195  000124  0101               	movlb	1	; () banked
 27196  000126  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27197  000128  0FFC               	addlw	252
 27198  00012A  0100               	movlb	0	; () banked
 27199  00012C  6FCB               	movwf	ComputeMic@bufferLength& (0+255),b
 27200  00012E  ECE8  F054         	call	_ComputeMic	;wreg free
 27201  000132  C0C7  F0EA         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 27202  000136  C0C8  F0EB         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 27203  00013A  C0C9  F0EC         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 27204  00013E  C0CA  F0ED         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 27205                           
 27206                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 27207  000142  C1F2  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 27208  000146  C1F3  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 27209  00014A  C1F4  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 27210  00014E  ECF0  F056         	call	_ExtractMic	;wreg free
 27211  000152  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 27212  000156  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 27213  00015A  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 27214  00015E  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 27215                           
 27216                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 27217  000162  0100               	movlb	0	; () banked
 27218  000164  51EA               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 27219  000166  19E2               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 27220  000168  E10A               	bnz	u22640
 27221  00016A  51EB               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 27222  00016C  19E3               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 27223  00016E  E107               	bnz	u22640
 27224  000170  51EC               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 27225  000172  19E4               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 27226  000174  E104               	bnz	u22640
 27227  000176  51ED               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 27228  000178  19E5               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 27229  00017A  B4D8               	btfsc	status,2,c
 27230  00017C  D011               	goto	l2237
 27231  00017E                     u22640:
 27232                           
 27233                           ; BSR set to: 0
 27234                           ;lorawan.c: 1156: {
 27235                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 27236  00017E  0102               	movlb	2	; () banked
 27237  000180  5106               	movf	(_loRa+2)& (0+255),w,b
 27238  000182  0B0F               	andlw	15
 27239  000184  0A05               	xorlw	5
 27240  000186  B4D8               	btfsc	status,2,c
 27241  000188  D008               	goto	u22670
 27242                           
 27243                           ; BSR set to: 2
 27244  00018A  5106               	movf	(_loRa+2)& (0+255),w,b
 27245  00018C  0B0F               	andlw	15
 27246  00018E  0A03               	xorlw	3
 27247  000190  A4D8               	btfss	status,2,c
 27248  000192  0012               	return	
 27249                           
 27250                           ; BSR set to: 2
 27251  000194  51F5               	movf	(_loRa+241)& (0+255),w,b
 27252  000196  B4D8               	btfsc	status,2,c
 27253  000198  0012               	return	
 27254  00019A                     u22670:
 27255                           
 27256                           ; BSR set to: 2
 27257                           ;lorawan.c: 1158: {
 27258                           ;lorawan.c: 1159: SetJoinFailState();
 27259                           
 27260                           ; BSR set to: 2
 27261  00019A  ECDB  F05C         	call	_SetJoinFailState	;wreg free
 27262                           
 27263                           ;lorawan.c: 1160: }
 27264                           ;lorawan.c: 1162: return INVALID_PARAMETER;
 27265                           ;	Return value of _LORAWAN_RxDone is never used
 27266  00019E  0012               	return	
 27267  0001A0                     l2237:
 27268                           
 27269                           ;lorawan.c: 1163: }
 27270                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 27271  0001A0  0102               	movlb	2	; () banked
 27272  0001A2  5106               	movf	(_loRa+2)& (0+255),w,b
 27273  0001A4  0B0F               	andlw	15
 27274  0001A6  0A03               	xorlw	3
 27275  0001A8  A4D8               	btfss	status,2,c
 27276  0001AA  D003               	goto	l2242
 27277                           
 27278                           ; BSR set to: 2
 27279                           ;lorawan.c: 1167: {
 27280                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 27281  0001AC  51E7               	movf	(_loRa+227)& (0+255),w,b
 27282  0001AE  ECAA  F05E         	call	_SwTimerStop
 27283  0001B2                     l2242:
 27284                           
 27285                           ;lorawan.c: 1169: }
 27286                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 27287                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 27288  0001B2  C1F2  F0EE         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 27289  0001B6  C1F3  F0EF         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 27290                           
 27291                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 27292  0001BA  0100               	movlb	0	; () banked
 27293  0001BC  EE20 F007          	lfsr	2,7
 27294  0001C0  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 27295  0001C2  26D9               	addwf	fsr2l,f,c
 27296  0001C4  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 27297  0001C6  22DA               	addwfc	fsr2h,f,c
 27298  0001C8  CFDE F222          	movff	postinc2,_loRa+30
 27299  0001CC  CFDE F223          	movff	postinc2,_loRa+31
 27300  0001D0  CFDE F224          	movff	postinc2,_loRa+32
 27301  0001D4  CFDE F225          	movff	postinc2,_loRa+33
 27302                           
 27303                           ; BSR set to: 0
 27304                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 27305  0001D8  EE20 F00C          	lfsr	2,12
 27306  0001DC  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 27307  0001DE  26D9               	addwf	fsr2l,f,c
 27308  0001E0  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 27309  0001E2  22DA               	addwfc	fsr2h,f,c
 27310  0001E4  50DF               	movf	indf2,w,c
 27311  0001E6  0B0F               	andlw	15
 27312  0001E8  EC3C  F05B         	call	_UpdateReceiveDelays
 27313                           
 27314                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 27315  0001EC  0100               	movlb	0	; () banked
 27316  0001EE  EE20 F00B          	lfsr	2,11
 27317  0001F2  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 27318  0001F4  26D9               	addwf	fsr2l,f,c
 27319  0001F6  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 27320  0001F8  22DA               	addwfc	fsr2h,f,c
 27321  0001FA  38DF               	swapf	223,w,c
 27322  0001FC  0B07               	andlw	7
 27323  0001FE  6F60               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 27324  000200  EE20 F00B          	lfsr	2,11
 27325  000204  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 27326  000206  26D9               	addwf	fsr2l,f,c
 27327  000208  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 27328  00020A  22DA               	addwfc	fsr2h,f,c
 27329  00020C  50DF               	movf	223,w,c
 27330  00020E  0B0F               	andlw	15
 27331  000210  ECA9  F060         	call	_UpdateDLSettings
 27332                           
 27333                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 27334  000214  C0EE  F0A6         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 27335  000218  C0EF  F0A7         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 27336  00021C  0101               	movlb	1	; () banked
 27337  00021E  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27338  000220  EC22  F031         	call	_UpdateCfList
 27339                           
 27340                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 27341  000224  C0EE  F091         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 27342  000228  C0EF  F092         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 27343  00022C  EC6D  F050         	call	_ComputeSessionKeys	;wreg free
 27344                           
 27345                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 27346  000230  0E00               	movlw	0
 27347  000232  6EE6               	movwf	postinc1,c
 27348  000234  EC34  F03E         	call	_UpdateJoinSuccessState	;wreg free
 27349                           
 27350                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 27351  000238  0E00               	movlw	0
 27352  00023A  0102               	movlb	2	; () banked
 27353  00023C  6F0A               	movwf	(_loRa+6)& (0+255),b
 27354  00023E  0E00               	movlw	0
 27355  000240  6F0B               	movwf	(_loRa+7)& (0+255),b
 27356  000242  0E00               	movlw	0
 27357  000244  6F0C               	movwf	(_loRa+8)& (0+255),b
 27358  000246  0E00               	movlw	0
 27359  000248  6F0D               	movwf	(_loRa+9)& (0+255),b
 27360                           
 27361                           ; BSR set to: 2
 27362                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 27363  00024A  0E00               	movlw	0
 27364  00024C  6F0E               	movwf	(_loRa+10)& (0+255),b
 27365  00024E  0E00               	movlw	0
 27366  000250  6F0F               	movwf	(_loRa+11)& (0+255),b
 27367  000252  0E00               	movlw	0
 27368  000254  6F10               	movwf	(_loRa+12)& (0+255),b
 27369  000256  0E00               	movlw	0
 27370  000258  6F11               	movwf	(_loRa+13)& (0+255),b
 27371                           
 27372                           ; BSR set to: 2
 27373                           ;lorawan.c: 1190: }
 27374                           
 27375                           ; BSR set to: 2
 27376                           ;lorawan.c: 1189: return OK;
 27377                           ;	Return value of _LORAWAN_RxDone is never used
 27378  00025A  0012               	return	
 27379  00025C                     l2231:
 27380                           
 27381                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 27382                           
 27383                           ; BSR set to: 2
 27384  00025C  0100               	movlb	0	; () banked
 27385  00025E  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 27386  000260  32E8               	rrcf	wreg,f,c
 27387  000262  0B07               	andlw	7
 27388  000264  0A03               	xorlw	3
 27389  000266  B4D8               	btfsc	status,2,c
 27390  000268  D007               	goto	u22700
 27391                           
 27392                           ; BSR set to: 0
 27393  00026A  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 27394  00026C  32E8               	rrcf	wreg,f,c
 27395  00026E  0B07               	andlw	7
 27396  000270  0A05               	xorlw	5
 27397  000272  A4D8               	btfss	status,2,c
 27398  000274  EF5F  F006         	goto	l2244
 27399  000278                     u22700:
 27400                           
 27401                           ; BSR set to: 0
 27402                           ;lorawan.c: 1192: {
 27403                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 27404                           
 27405                           ; BSR set to: 0
 27406  000278  0E00               	movlw	0
 27407  00027A  0102               	movlb	2	; () banked
 27408  00027C  6FAB               	movwf	(_loRa+167)& (0+255),b
 27409                           
 27410                           ; BSR set to: 2
 27411                           ;lorawan.c: 1195: Hdr_t *hdr;
 27412                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 27413  00027E  C1F2  F0F1         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 27414  000282  C1F3  F0F2         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 27415                           
 27416                           ; BSR set to: 2
 27417                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 27418  000286  0E02               	movlw	2
 27419  000288  1916               	xorwf	(_loRa+18)& (0+255),w,b
 27420  00028A  A4D8               	btfss	status,2,c
 27421  00028C  D210               	goto	l2247
 27422                           
 27423                           ; BSR set to: 2
 27424  00028E  0100               	movlb	0	; () banked
 27425  000290  EE20 F001          	lfsr	2,1
 27426  000294  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27427  000296  26D9               	addwf	fsr2l,f,c
 27428  000298  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27429  00029A  22DA               	addwfc	fsr2h,f,c
 27430  00029C  0102               	movlb	2	; () banked
 27431  00029E  5166               	movf	(_loRa+98)& (0+255),w,b
 27432  0002A0  18DE               	xorwf	postinc2,w,c
 27433  0002A2  E109               	bnz	u22721
 27434  0002A4  5167               	movf	(_loRa+99)& (0+255),w,b
 27435  0002A6  18DE               	xorwf	postinc2,w,c
 27436  0002A8  E106               	bnz	u22721
 27437  0002AA  5168               	movf	(_loRa+100)& (0+255),w,b
 27438  0002AC  18DE               	xorwf	postinc2,w,c
 27439  0002AE  E103               	bnz	u22721
 27440  0002B0  5169               	movf	(_loRa+101)& (0+255),w,b
 27441  0002B2  18DE               	xorwf	postinc2,w,c
 27442  0002B4  A4D8               	btfss	status,2,c
 27443  0002B6                     u22721:
 27444  0002B6  D1FB               	goto	l2247
 27445                           
 27446                           ; BSR set to: 2
 27447  0002B8  A508               	btfss	(_loRa+4)& (0+255),2,b
 27448  0002BA  D1F9               	goto	l2247
 27449                           
 27450                           ; BSR set to: 2
 27451                           ;lorawan.c: 1200: {
 27452                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 27453  0002BC  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 27454  0002C0  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 27455  0002C4  ECF2  F050         	call	_CheckMcastFlags	;wreg free
 27456  0002C8  0900               	iorlw	0
 27457  0002CA  A4D8               	btfss	status,2,c
 27458  0002CC  D008               	goto	l2248
 27459                           
 27460                           ;lorawan.c: 1203: {
 27461                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 27462  0002CE  0102               	movlb	2	; () banked
 27463  0002D0  5106               	movf	(_loRa+2)& (0+255),w,b
 27464  0002D2  0BF0               	andlw	-16
 27465  0002D4  0909               	iorlw	9
 27466  0002D6  6F06               	movwf	(_loRa+2)& (0+255),b
 27467                           
 27468                           ; BSR set to: 2
 27469                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 27470  0002D8  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 27471                           
 27472                           ;lorawan.c: 1206: return MCAST_MSG_ERROR;
 27473                           ;	Return value of _LORAWAN_RxDone is never used
 27474  0002DC  0012               	return	
 27475  0002DE                     l2248:
 27476                           
 27477                           ;lorawan.c: 1207: }
 27478                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 27479  0002DE  0100               	movlb	0	; () banked
 27480  0002E0  EE20 F006          	lfsr	2,6
 27481  0002E4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27482  0002E6  26D9               	addwf	fsr2l,f,c
 27483  0002E8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27484  0002EA  22DA               	addwfc	fsr2h,f,c
 27485  0002EC  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 27486  0002F0  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 27487  0002F4  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 27488  0002F8  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 27489  0002FC  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 27490  0002FE  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 27491  000300  0101               	movlb	1	; () banked
 27492  000302  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27493  000304  0FFC               	addlw	252
 27494  000306  0100               	movlb	0	; () banked
 27495  000308  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 27496  00030A  0E49               	movlw	73
 27497  00030C  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 27498  00030E  0E01               	movlw	1
 27499  000310  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 27500  000312  0E01               	movlw	1
 27501  000314  ECD1  F045         	call	_AssembleEncryptionBlock
 27502                           
 27503                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 27504  000318  0E2F               	movlw	low _radioBuffer
 27505  00031A  0100               	movlb	0	; () banked
 27506  00031C  6F60               	movwf	memcpy@d1& (0+255),b
 27507  00031E  0E06               	movlw	high _radioBuffer
 27508  000320  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27509  000322  0EC8               	movlw	low _aesBuffer
 27510  000324  6F62               	movwf	memcpy@s1& (0+255),b
 27511  000326  0E03               	movlw	high _aesBuffer
 27512  000328  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27513  00032A  0E00               	movlw	0
 27514  00032C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27515  00032E  0E10               	movlw	16
 27516  000330  6F64               	movwf	memcpy@n& (0+255),b
 27517  000332  ECAB  F055         	call	_memcpy	;wreg free
 27518                           
 27519                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 27520  000336  0E3F               	movlw	low (_radioBuffer+16)
 27521  000338  0100               	movlb	0	; () banked
 27522  00033A  6F60               	movwf	memcpy@d1& (0+255),b
 27523  00033C  0E06               	movlw	high (_radioBuffer+16)
 27524  00033E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27525  000340  C1F2  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 27526  000344  C1F3  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 27527  000348  0EFC               	movlw	252
 27528  00034A  0101               	movlb	1	; () banked
 27529  00034C  25F4               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27530  00034E  0100               	movlb	0	; () banked
 27531  000350  6F64               	movwf	memcpy@n& (0+255),b
 27532  000352  6B65               	clrf	(memcpy@n+1)& (0+255),b
 27533  000354  0EFF               	movlw	255
 27534  000356  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 27535  000358  ECAB  F055         	call	_memcpy	;wreg free
 27536                           
 27537                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 27538  00035C  0E6A               	movlw	low (_loRa+102)
 27539  00035E  0100               	movlb	0	; () banked
 27540  000360  6FB9               	movwf	AESCmac@key& (0+255),b
 27541  000362  0E02               	movlw	high (_loRa+102)
 27542  000364  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 27543  000366  0EC8               	movlw	low _aesBuffer
 27544  000368  6FBB               	movwf	AESCmac@output& (0+255),b
 27545  00036A  0E03               	movlw	high _aesBuffer
 27546  00036C  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 27547  00036E  0E2F               	movlw	low _radioBuffer
 27548  000370  6FBD               	movwf	AESCmac@input& (0+255),b
 27549  000372  0E06               	movlw	high _radioBuffer
 27550  000374  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 27551  000376  0101               	movlb	1	; () banked
 27552  000378  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27553  00037A  0F0C               	addlw	12
 27554  00037C  0100               	movlb	0	; () banked
 27555  00037E  6FBF               	movwf	AESCmac@size& (0+255),b
 27556  000380  EC80  F01D         	call	_AESCmac	;wreg free
 27557                           
 27558                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 27559  000384  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 27560  000386  0100               	movlb	0	; () banked
 27561  000388  6F60               	movwf	memcpy@d1& (0+255),b
 27562  00038A  0E00               	movlw	high LORAWAN_RxDone@computedMic
 27563  00038C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27564  00038E  0EC8               	movlw	low _aesBuffer
 27565  000390  6F62               	movwf	memcpy@s1& (0+255),b
 27566  000392  0E03               	movlw	high _aesBuffer
 27567  000394  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27568  000396  0E00               	movlw	0
 27569  000398  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27570  00039A  0E04               	movlw	4
 27571  00039C  6F64               	movwf	memcpy@n& (0+255),b
 27572  00039E  ECAB  F055         	call	_memcpy	;wreg free
 27573                           
 27574                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 27575  0003A2  C1F2  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 27576  0003A6  C1F3  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 27577  0003AA  C1F4  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 27578  0003AE  ECF0  F056         	call	_ExtractMic	;wreg free
 27579  0003B2  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 27580  0003B6  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 27581  0003BA  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 27582  0003BE  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 27583                           
 27584                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 27585  0003C2  0100               	movlb	0	; () banked
 27586  0003C4  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 27587  0003C6  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 27588  0003C8  E10A               	bnz	u22750
 27589  0003CA  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 27590  0003CC  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 27591  0003CE  E107               	bnz	u22750
 27592  0003D0  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 27593  0003D2  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 27594  0003D4  E104               	bnz	u22750
 27595  0003D6  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 27596  0003D8  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 27597  0003DA  B4D8               	btfsc	status,2,c
 27598  0003DC  D008               	goto	l2249
 27599  0003DE                     u22750:
 27600                           
 27601                           ; BSR set to: 0
 27602                           ;lorawan.c: 1218: {
 27603                           ;lorawan.c: 1219: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 27604  0003DE  0102               	movlb	2	; () banked
 27605  0003E0  5106               	movf	(_loRa+2)& (0+255),w,b
 27606  0003E2  0BF0               	andlw	-16
 27607  0003E4  0909               	iorlw	9
 27608  0003E6  6F06               	movwf	(_loRa+2)& (0+255),b
 27609                           
 27610                           ; BSR set to: 2
 27611                           ;lorawan.c: 1220: LORAWAN_EnterContinuousReceive();
 27612  0003E8  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 27613                           
 27614                           ;lorawan.c: 1221: return MCAST_MSG_ERROR;
 27615                           ;	Return value of _LORAWAN_RxDone is never used
 27616  0003EC  0012               	return	
 27617  0003EE                     l2249:
 27618                           
 27619                           ;lorawan.c: 1222: }
 27620                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 27621  0003EE  0100               	movlb	0	; () banked
 27622  0003F0  EE20 F006          	lfsr	2,6
 27623  0003F4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27624  0003F6  26D9               	addwf	fsr2l,f,c
 27625  0003F8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27626  0003FA  22DA               	addwfc	fsr2h,f,c
 27627  0003FC  0102               	movlb	2	; () banked
 27628  0003FE  5112               	movf	(_loRa+14)& (0+255),w,b
 27629  000400  5CDE               	subwf	postinc2,w,c
 27630  000402  5113               	movf	(_loRa+15)& (0+255),w,b
 27631  000404  58DE               	subwfb	postinc2,w,c
 27632  000406  A0D8               	btfss	status,0,c
 27633  000408  D050               	goto	l2250
 27634                           
 27635                           ; BSR set to: 2
 27636                           ;lorawan.c: 1225: {
 27637                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 27638  00040A  0100               	movlb	0	; () banked
 27639  00040C  EE20 F006          	lfsr	2,6
 27640  000410  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27641  000412  26D9               	addwf	fsr2l,f,c
 27642  000414  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27643  000416  22DA               	addwfc	fsr2h,f,c
 27644  000418  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 27645  00041C  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 27646  000420  EE22  F012         	lfsr	2,_loRa+14
 27647  000424  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 27648  000428  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 27649  00042C  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 27650  00042E  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 27651  000430  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 27652  000432  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 27653  000434  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 27654  000436  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 27655  000438  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 27656  00043A  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 27657  00043C  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 27658  00043E  0102               	movlb	2	; () banked
 27659  000440  5DA2               	subwf	(_loRa+158)& (0+255),w,b
 27660  000442  0100               	movlb	0	; () banked
 27661  000444  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 27662  000446  0102               	movlb	2	; () banked
 27663  000448  59A3               	subwfb	(_loRa+159)& (0+255),w,b
 27664  00044A  B0D8               	btfsc	status,0,c
 27665  00044C  D022               	goto	l2251
 27666                           
 27667                           ; BSR set to: 2
 27668                           ;lorawan.c: 1227: {
 27669                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 27670  00044E  0101               	movlb	1	; () banked
 27671  000450  510C               	movf	_rxPayload& (0+255),w,b
 27672  000452  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 27673  000454  B4D8               	btfsc	status,2,c
 27674  000456  D015               	goto	u22799
 27675                           
 27676                           ; BSR set to: 1
 27677                           ;lorawan.c: 1229: {
 27678                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 27679  000458  0E00               	movlw	0
 27680  00045A  0100               	movlb	0	; () banked
 27681  00045C  6F60               	movwf	RxData@pData& (0+255),b
 27682  00045E  0E00               	movlw	0
 27683  000460  6F61               	movwf	(RxData@pData+1)& (0+255),b
 27684  000462  0E00               	movlw	0
 27685  000464  6F62               	movwf	RxData@dataLength& (0+255),b
 27686  000466  0E05               	movlw	5
 27687  000468  6F63               	movwf	RxData@status& (0+255),b
 27688  00046A  D801               	call	u22798
 27689  00046C  D00A               	goto	u22799
 27690  00046E                     u22798:
 27691  00046E  0005               	push	
 27692  000470  6EFA               	movwf	pclath,c
 27693  000472  0101               	movlb	1	; () banked
 27694  000474  510C               	movf	_rxPayload& (0+255),w,b
 27695  000476  6EFD               	movwf	tosl,c
 27696  000478  510D               	movf	(_rxPayload+1)& (0+255),w,b
 27697  00047A  6EFE               	movwf	tosh,c
 27698  00047C  6AFF               	clrf	tosu,c
 27699  00047E  50FA               	movf	pclath,w,c
 27700  000480  0012               	return		;indir
 27701  000482                     u22799:
 27702                           
 27703                           ;lorawan.c: 1231: }
 27704                           ;lorawan.c: 1233: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 27705  000482  0102               	movlb	2	; () banked
 27706  000484  5106               	movf	(_loRa+2)& (0+255),w,b
 27707  000486  0BF0               	andlw	-16
 27708  000488  0909               	iorlw	9
 27709  00048A  6F06               	movwf	(_loRa+2)& (0+255),b
 27710                           
 27711                           ; BSR set to: 2
 27712                           ;lorawan.c: 1234: LORAWAN_EnterContinuousReceive();
 27713  00048C  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 27714                           
 27715                           ;lorawan.c: 1235: return MCAST_MSG_ERROR;
 27716                           ;	Return value of _LORAWAN_RxDone is never used
 27717  000490  0012               	return	
 27718  000492                     l2251:
 27719                           
 27720                           ;lorawan.c: 1237: else
 27721                           ;lorawan.c: 1238: {
 27722                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 27723  000492  0100               	movlb	0	; () banked
 27724  000494  EE20 F006          	lfsr	2,6
 27725  000498  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27726  00049A  26D9               	addwf	fsr2l,f,c
 27727  00049C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27728  00049E  22DA               	addwfc	fsr2h,f,c
 27729  0004A0  CFDE F212          	movff	postinc2,_loRa+14
 27730  0004A4  CFDD F213          	movff	postdec2,_loRa+15
 27731                           
 27732                           ; BSR set to: 0
 27733                           ;lorawan.c: 1240: }
 27734                           ;lorawan.c: 1241: }
 27735  0004A8  D03A               	goto	l2256
 27736  0004AA                     l2250:
 27737                           
 27738                           ;lorawan.c: 1242: else
 27739                           ;lorawan.c: 1243: {
 27740                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 27741                           
 27742                           ; BSR set to: 0
 27743  0004AA  0100               	movlb	0	; () banked
 27744  0004AC  EE20 F006          	lfsr	2,6
 27745  0004B0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27746  0004B2  26D9               	addwf	fsr2l,f,c
 27747  0004B4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27748  0004B6  22DA               	addwfc	fsr2h,f,c
 27749  0004B8  50DE               	movf	postinc2,w,c
 27750  0004BA  10DE               	iorwf	postinc2,w,c
 27751  0004BC  A4D8               	btfss	status,2,c
 27752  0004BE  D00D               	goto	l2255
 27753                           
 27754                           ; BSR set to: 0
 27755  0004C0  0102               	movlb	2	; () banked
 27756  0004C2  2912               	incf	(_loRa+14)& (0+255),w,b
 27757  0004C4  E10A               	bnz	l19927
 27758  0004C6  2913               	incf	(_loRa+15)& (0+255),w,b
 27759  0004C8  A4D8               	btfss	status,2,c
 27760  0004CA  D007               	goto	l2255
 27761                           
 27762                           ; BSR set to: 2
 27763                           ;lorawan.c: 1245: {
 27764                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 27765  0004CC  0E00               	movlw	0
 27766  0004CE  6F13               	movwf	(_loRa+15)& (0+255),b
 27767  0004D0  0E00               	movlw	0
 27768  0004D2  6F12               	movwf	(_loRa+14)& (0+255),b
 27769                           
 27770                           ; BSR set to: 2
 27771                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 27772  0004D4  4B14               	infsnz	(_loRa+16)& (0+255),f,b
 27773  0004D6  2B15               	incf	(_loRa+17)& (0+255),f,b
 27774                           
 27775                           ;lorawan.c: 1248: }
 27776  0004D8  D022               	goto	l2256
 27777  0004DA                     l2255:
 27778  0004DA                     l19927:
 27779                           
 27780                           ;lorawan.c: 1249: else
 27781                           ;lorawan.c: 1250: {
 27782                           ;lorawan.c: 1251: if (rxPayload.RxAppData != (0))
 27783  0004DA  0101               	movlb	1	; () banked
 27784  0004DC  510C               	movf	_rxPayload& (0+255),w,b
 27785  0004DE  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 27786  0004E0  B4D8               	btfsc	status,2,c
 27787  0004E2  D015               	goto	u22839
 27788                           
 27789                           ; BSR set to: 1
 27790                           ;lorawan.c: 1252: {
 27791                           ;lorawan.c: 1253: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 27792  0004E4  0E00               	movlw	0
 27793  0004E6  0100               	movlb	0	; () banked
 27794  0004E8  6F60               	movwf	RxData@pData& (0+255),b
 27795  0004EA  0E00               	movlw	0
 27796  0004EC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 27797  0004EE  0E00               	movlw	0
 27798  0004F0  6F62               	movwf	RxData@dataLength& (0+255),b
 27799  0004F2  0E05               	movlw	5
 27800  0004F4  6F63               	movwf	RxData@status& (0+255),b
 27801  0004F6  D801               	call	u22838
 27802  0004F8  D00A               	goto	u22839
 27803  0004FA                     u22838:
 27804  0004FA  0005               	push	
 27805  0004FC  6EFA               	movwf	pclath,c
 27806  0004FE  0101               	movlb	1	; () banked
 27807  000500  510C               	movf	_rxPayload& (0+255),w,b
 27808  000502  6EFD               	movwf	tosl,c
 27809  000504  510D               	movf	(_rxPayload+1)& (0+255),w,b
 27810  000506  6EFE               	movwf	tosh,c
 27811  000508  6AFF               	clrf	tosu,c
 27812  00050A  50FA               	movf	pclath,w,c
 27813  00050C  0012               	return		;indir
 27814  00050E                     u22839:
 27815                           
 27816                           ;lorawan.c: 1254: }
 27817                           ;lorawan.c: 1256: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 27818  00050E  0102               	movlb	2	; () banked
 27819  000510  5106               	movf	(_loRa+2)& (0+255),w,b
 27820  000512  0BF0               	andlw	-16
 27821  000514  0909               	iorlw	9
 27822  000516  6F06               	movwf	(_loRa+2)& (0+255),b
 27823                           
 27824                           ; BSR set to: 2
 27825                           ;lorawan.c: 1257: LORAWAN_EnterContinuousReceive();
 27826  000518  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 27827                           
 27828                           ;lorawan.c: 1258: return MCAST_MSG_ERROR;
 27829                           ;	Return value of _LORAWAN_RxDone is never used
 27830  00051C  0012               	return	
 27831  00051E                     l2256:
 27832                           
 27833                           ;lorawan.c: 1259: }
 27834                           ;lorawan.c: 1260: }
 27835                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 27836  00051E  0102               	movlb	2	; () banked
 27837  000520  2912               	incf	(_loRa+14)& (0+255),w,b
 27838  000522  E129               	bnz	l19949
 27839  000524  2913               	incf	(_loRa+15)& (0+255),w,b
 27840  000526  E127               	bnz	l19949
 27841  000528  2914               	incf	(_loRa+16)& (0+255),w,b
 27842  00052A  E125               	bnz	l19949
 27843  00052C  2915               	incf	(_loRa+17)& (0+255),w,b
 27844  00052E  A4D8               	btfss	status,2,c
 27845  000530  D022               	goto	l2258
 27846                           
 27847                           ; BSR set to: 2
 27848                           ;lorawan.c: 1263: {
 27849                           ;lorawan.c: 1264: if (rxPayload.RxAppData != (0))
 27850  000532  0101               	movlb	1	; () banked
 27851  000534  510C               	movf	_rxPayload& (0+255),w,b
 27852  000536  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 27853  000538  B4D8               	btfsc	status,2,c
 27854  00053A  D015               	goto	u22869
 27855                           
 27856                           ; BSR set to: 1
 27857                           ;lorawan.c: 1265: {
 27858                           ;lorawan.c: 1266: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 27859  00053C  0E00               	movlw	0
 27860  00053E  0100               	movlb	0	; () banked
 27861  000540  6F60               	movwf	RxData@pData& (0+255),b
 27862  000542  0E00               	movlw	0
 27863  000544  6F61               	movwf	(RxData@pData+1)& (0+255),b
 27864  000546  0E00               	movlw	0
 27865  000548  6F62               	movwf	RxData@dataLength& (0+255),b
 27866  00054A  0E05               	movlw	5
 27867  00054C  6F63               	movwf	RxData@status& (0+255),b
 27868  00054E  D801               	call	u22868
 27869  000550  D00A               	goto	u22869
 27870  000552                     u22868:
 27871  000552  0005               	push	
 27872  000554  6EFA               	movwf	pclath,c
 27873  000556  0101               	movlb	1	; () banked
 27874  000558  510C               	movf	_rxPayload& (0+255),w,b
 27875  00055A  6EFD               	movwf	tosl,c
 27876  00055C  510D               	movf	(_rxPayload+1)& (0+255),w,b
 27877  00055E  6EFE               	movwf	tosh,c
 27878  000560  6AFF               	clrf	tosu,c
 27879  000562  50FA               	movf	pclath,w,c
 27880  000564  0012               	return		;indir
 27881  000566                     u22869:
 27882                           
 27883                           ;lorawan.c: 1267: }
 27884                           ;lorawan.c: 1269: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 27885  000566  0102               	movlb	2	; () banked
 27886  000568  5106               	movf	(_loRa+2)& (0+255),w,b
 27887  00056A  0BF0               	andlw	-16
 27888  00056C  0909               	iorlw	9
 27889  00056E  6F06               	movwf	(_loRa+2)& (0+255),b
 27890                           
 27891                           ; BSR set to: 2
 27892                           ;lorawan.c: 1270: LORAWAN_EnterContinuousReceive();
 27893  000570  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 27894                           
 27895                           ;lorawan.c: 1271: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 27896                           ;	Return value of _LORAWAN_RxDone is never used
 27897  000574  0012               	return	
 27898  000576                     l2258:
 27899  000576                     l19949:
 27900                           
 27901                           ;lorawan.c: 1272: }
 27902                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 27903  000576  0102               	movlb	2	; () banked
 27904  000578  5106               	movf	(_loRa+2)& (0+255),w,b
 27905  00057A  0B0F               	andlw	15
 27906  00057C  0A08               	xorlw	8
 27907  00057E  A4D8               	btfss	status,2,c
 27908  000580  D008               	goto	l2260
 27909                           
 27910                           ; BSR set to: 2
 27911                           ;lorawan.c: 1275: {
 27912                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 27913  000582  51E8               	movf	(_loRa+228)& (0+255),w,b
 27914  000584  ECAA  F05E         	call	_SwTimerStop
 27915                           
 27916                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 27917  000588  0102               	movlb	2	; () banked
 27918  00058A  51E9               	movf	(_loRa+229)& (0+255),w,b
 27919  00058C  ECAA  F05E         	call	_SwTimerStop
 27920                           
 27921                           ;lorawan.c: 1278: }
 27922  000590  D009               	goto	l2262
 27923  000592                     l2260:
 27924                           
 27925                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 27926  000592  0102               	movlb	2	; () banked
 27927  000594  5106               	movf	(_loRa+2)& (0+255),w,b
 27928  000596  0B0F               	andlw	15
 27929  000598  0A03               	xorlw	3
 27930  00059A  A4D8               	btfss	status,2,c
 27931  00059C  D003               	goto	l2262
 27932                           
 27933                           ; BSR set to: 2
 27934                           ;lorawan.c: 1280: {
 27935                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 27936  00059E  51E9               	movf	(_loRa+229)& (0+255),w,b
 27937  0005A0  ECAA  F05E         	call	_SwTimerStop
 27938  0005A4                     l2262:
 27939                           
 27940                           ;lorawan.c: 1282: }
 27941                           ;lorawan.c: 1284: buffer = buffer + 8;
 27942  0005A4  0E08               	movlw	8
 27943  0005A6  0101               	movlb	1	; () banked
 27944  0005A8  25F2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 27945  0005AA  6FF2               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 27946  0005AC  0E00               	movlw	0
 27947  0005AE  21F3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 27948  0005B0  6FF3               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 27949                           
 27950                           ; BSR set to: 1
 27951                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 27952  0005B2  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27953  0005B4  0100               	movlb	0	; () banked
 27954  0005B6  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 27955  0005B8  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 27956  0005BA  EE20 F005          	lfsr	2,5
 27957  0005BE  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27958  0005C0  26D9               	addwf	fsr2l,f,c
 27959  0005C2  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27960  0005C4  22DA               	addwfc	fsr2h,f,c
 27961  0005C6  50DF               	movf	223,w,c
 27962  0005C8  0B0F               	andlw	15
 27963  0005CA  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 27964  0005CC  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 27965  0005CE  0E0C               	movlw	12
 27966  0005D0  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 27967  0005D2  0E00               	movlw	0
 27968  0005D4  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 27969  0005D6  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 27970  0005D8  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 27971  0005DA  E104               	bnz	u22890
 27972  0005DC  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 27973  0005DE  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 27974  0005E0  B4D8               	btfsc	status,2,c
 27975  0005E2  D037               	goto	l2263
 27976  0005E4                     u22890:
 27977                           
 27978                           ; BSR set to: 0
 27979                           ;lorawan.c: 1287: {
 27980                           ;lorawan.c: 1288: fPort = *(buffer++);
 27981  0005E4  C1F2  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 27982  0005E8  C1F3  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 27983  0005EC  50DF               	movf	indf2,w,c
 27984  0005EE  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 27985                           
 27986                           ; BSR set to: 0
 27987  0005F0  0101               	movlb	1	; () banked
 27988  0005F2  4BF2               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 27989  0005F4  2BF3               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 27990                           
 27991                           ; BSR set to: 1
 27992                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 27993  0005F6  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27994  0005F8  0FF4               	addlw	244
 27995  0005FA  0100               	movlb	0	; () banked
 27996  0005FC  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 27997                           
 27998                           ; BSR set to: 0
 27999                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 28000  0005FE  0E19               	movlw	25
 28001  000600  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 28002                           
 28003                           ; BSR set to: 0
 28004                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 28005  000602  C1F2  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 28006  000606  C1F3  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 28007  00060A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 28008  00060C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 28009  00060E  0E01               	movlw	1
 28010  000610  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 28011  000612  C212  F095         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 28012  000616  C213  F096         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 28013  00061A  C214  F097         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 28014  00061E  C215  F098         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 28015  000622  0E7A               	movlw	low (_loRa+118)
 28016  000624  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 28017  000626  0E02               	movlw	high (_loRa+118)
 28018  000628  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 28019  00062A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 28020  00062E  0E2F               	movlw	low _radioBuffer
 28021  000630  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 28022  000632  0E06               	movlw	high _radioBuffer
 28023  000634  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 28024  000636  0E01               	movlw	1
 28025  000638  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 28026  00063A  EC40  F037         	call	_EncryptFRMPayload	;wreg free
 28027                           
 28028                           ;lorawan.c: 1294: packet = buffer - 1;
 28029  00063E  0EFF               	movlw	255
 28030  000640  0101               	movlb	1	; () banked
 28031  000642  25F2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 28032  000644  0100               	movlb	0	; () banked
 28033  000646  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 28034  000648  0EFF               	movlw	255
 28035  00064A  0101               	movlb	1	; () banked
 28036  00064C  21F3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 28037  00064E  0100               	movlb	0	; () banked
 28038  000650  D005               	goto	L10
 28039  000652                     l2263:
 28040                           
 28041                           ; BSR set to: 0
 28042                           ;lorawan.c: 1296: else
 28043                           ;lorawan.c: 1297: {
 28044                           ;lorawan.c: 1298: frmPayloadLength = 0;
 28045                           
 28046                           ; BSR set to: 0
 28047  000652  0E00               	movlw	0
 28048  000654  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 28049                           
 28050                           ; BSR set to: 0
 28051                           ;lorawan.c: 1299: packet = (0);
 28052  000656  0E00               	movlw	0
 28053  000658  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 28054  00065A  0E00               	movlw	0
 28055  00065C                     L10:
 28056  00065C  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 28057                           
 28058                           ; BSR set to: 0
 28059                           ;lorawan.c: 1300: }
 28060                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 28061                           
 28062                           ; BSR set to: 0
 28063  00065E  0102               	movlb	2	; () banked
 28064  000660  8307               	bsf	(_loRa+3)& (0+255),1,b
 28065                           
 28066                           ; BSR set to: 2
 28067                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 28068  000662  9106               	bcf	(_loRa+2)& (0+255),0,b
 28069  000664  9306               	bcf	(_loRa+2)& (0+255),1,b
 28070  000666  9506               	bcf	(_loRa+2)& (0+255),2,b
 28071  000668  9706               	bcf	(_loRa+2)& (0+255),3,b
 28072                           
 28073                           ; BSR set to: 2
 28074                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 28075  00066A  0101               	movlb	1	; () banked
 28076  00066C  510C               	movf	_rxPayload& (0+255),w,b
 28077  00066E  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 28078  000670  B4D8               	btfsc	status,2,c
 28079  000672  D015               	goto	u22919
 28080                           
 28081                           ; BSR set to: 1
 28082                           ;lorawan.c: 1306: {
 28083                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 28084  000674  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 28085  000678  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 28086  00067C  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 28087  000680  0E01               	movlw	1
 28088  000682  0100               	movlb	0	; () banked
 28089  000684  6F63               	movwf	RxData@status& (0+255),b
 28090  000686  D801               	call	u22918
 28091  000688  D00A               	goto	u22919
 28092  00068A                     u22918:
 28093  00068A  0005               	push	
 28094  00068C  6EFA               	movwf	pclath,c
 28095  00068E  0101               	movlb	1	; () banked
 28096  000690  510C               	movf	_rxPayload& (0+255),w,b
 28097  000692  6EFD               	movwf	tosl,c
 28098  000694  510D               	movf	(_rxPayload+1)& (0+255),w,b
 28099  000696  6EFE               	movwf	tosh,c
 28100  000698  6AFF               	clrf	tosu,c
 28101  00069A  50FA               	movf	pclath,w,c
 28102  00069C  0012               	return		;indir
 28103  00069E                     u22919:
 28104                           
 28105                           ;lorawan.c: 1308: }
 28106                           ;lorawan.c: 1310: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28107  00069E  0102               	movlb	2	; () banked
 28108  0006A0  5106               	movf	(_loRa+2)& (0+255),w,b
 28109  0006A2  0BF0               	andlw	-16
 28110  0006A4  0909               	iorlw	9
 28111  0006A6  6F06               	movwf	(_loRa+2)& (0+255),b
 28112                           
 28113                           ; BSR set to: 2
 28114                           ;lorawan.c: 1311: LORAWAN_EnterContinuousReceive();
 28115  0006A8  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28116                           
 28117                           ;lorawan.c: 1312: return MAC_OK;
 28118                           ;	Return value of _LORAWAN_RxDone is never used
 28119  0006AC  0012               	return	
 28120  0006AE                     l2247:
 28121                           
 28122                           ;lorawan.c: 1313: }
 28123                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 28124  0006AE  0100               	movlb	0	; () banked
 28125  0006B0  EE20 F001          	lfsr	2,1
 28126  0006B4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28127  0006B6  26D9               	addwf	fsr2l,f,c
 28128  0006B8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28129  0006BA  22DA               	addwfc	fsr2h,f,c
 28130  0006BC  0102               	movlb	2	; () banked
 28131  0006BE  5122               	movf	(_loRa+30)& (0+255),w,b
 28132  0006C0  18DE               	xorwf	postinc2,w,c
 28133  0006C2  E10A               	bnz	u22920
 28134  0006C4  5123               	movf	(_loRa+31)& (0+255),w,b
 28135  0006C6  18DE               	xorwf	postinc2,w,c
 28136  0006C8  E107               	bnz	u22920
 28137  0006CA  5124               	movf	(_loRa+32)& (0+255),w,b
 28138  0006CC  18DE               	xorwf	postinc2,w,c
 28139  0006CE  E104               	bnz	u22920
 28140  0006D0  5125               	movf	(_loRa+33)& (0+255),w,b
 28141  0006D2  18DE               	xorwf	postinc2,w,c
 28142  0006D4  B4D8               	btfsc	status,2,c
 28143  0006D6  D00E               	goto	l2266
 28144  0006D8                     u22920:
 28145                           
 28146                           ; BSR set to: 2
 28147                           ;lorawan.c: 1317: {
 28148                           ;lorawan.c: 1318: SetReceptionNotOkState();
 28149  0006D8  EC33  F051         	call	_SetReceptionNotOkState	;wreg free
 28150                           
 28151                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 28152  0006DC  0E02               	movlw	2
 28153  0006DE  0102               	movlb	2	; () banked
 28154  0006E0  1916               	xorwf	(_loRa+18)& (0+255),w,b
 28155  0006E2  A4D8               	btfss	status,2,c
 28156  0006E4  0012               	return	
 28157                           
 28158                           ; BSR set to: 2
 28159                           ;lorawan.c: 1320: {
 28160                           ;lorawan.c: 1321: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28161  0006E6  5106               	movf	(_loRa+2)& (0+255),w,b
 28162  0006E8  0BF0               	andlw	-16
 28163  0006EA  0909               	iorlw	9
 28164  0006EC  6F06               	movwf	(_loRa+2)& (0+255),b
 28165                           
 28166                           ; BSR set to: 2
 28167                           ;lorawan.c: 1322: LORAWAN_EnterContinuousReceive();
 28168  0006EE  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28169                           
 28170                           ;lorawan.c: 1323: }
 28171                           ;lorawan.c: 1324: return INVALID_PARAMETER;
 28172                           ;	Return value of _LORAWAN_RxDone is never used
 28173  0006F2  0012               	return	
 28174  0006F4                     l2266:
 28175                           
 28176                           ;lorawan.c: 1325: }
 28177                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 28178  0006F4  0100               	movlb	0	; () banked
 28179  0006F6  EE20 F006          	lfsr	2,6
 28180  0006FA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28181  0006FC  26D9               	addwf	fsr2l,f,c
 28182  0006FE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28183  000700  22DA               	addwfc	fsr2h,f,c
 28184  000702  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 28185  000706  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 28186  00070A  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 28187  00070E  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 28188  000712  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 28189  000714  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 28190  000716  0101               	movlb	1	; () banked
 28191  000718  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28192  00071A  0FFC               	addlw	252
 28193  00071C  0100               	movlb	0	; () banked
 28194  00071E  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 28195  000720  0E49               	movlw	73
 28196  000722  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 28197  000724  0E00               	movlw	0
 28198  000726  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 28199  000728  0E01               	movlw	1
 28200  00072A  ECD1  F045         	call	_AssembleEncryptionBlock
 28201                           
 28202                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 28203  00072E  0E2F               	movlw	low _radioBuffer
 28204  000730  0100               	movlb	0	; () banked
 28205  000732  6F60               	movwf	memcpy@d1& (0+255),b
 28206  000734  0E06               	movlw	high _radioBuffer
 28207  000736  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28208  000738  0EC8               	movlw	low _aesBuffer
 28209  00073A  6F62               	movwf	memcpy@s1& (0+255),b
 28210  00073C  0E03               	movlw	high _aesBuffer
 28211  00073E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 28212  000740  0E00               	movlw	0
 28213  000742  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28214  000744  0E10               	movlw	16
 28215  000746  6F64               	movwf	memcpy@n& (0+255),b
 28216  000748  ECAB  F055         	call	_memcpy	;wreg free
 28217                           
 28218                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 28219  00074C  0E3F               	movlw	low (_radioBuffer+16)
 28220  00074E  0100               	movlb	0	; () banked
 28221  000750  6F60               	movwf	memcpy@d1& (0+255),b
 28222  000752  0E06               	movlw	high (_radioBuffer+16)
 28223  000754  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28224  000756  C1F2  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 28225  00075A  C1F3  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 28226  00075E  0EFC               	movlw	252
 28227  000760  0101               	movlb	1	; () banked
 28228  000762  25F4               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28229  000764  0100               	movlb	0	; () banked
 28230  000766  6F64               	movwf	memcpy@n& (0+255),b
 28231  000768  6B65               	clrf	(memcpy@n+1)& (0+255),b
 28232  00076A  0EFF               	movlw	255
 28233  00076C  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 28234  00076E  ECAB  F055         	call	_memcpy	;wreg free
 28235                           
 28236                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 28237  000772  0E26               	movlw	low (_loRa+34)
 28238  000774  0100               	movlb	0	; () banked
 28239  000776  6FB9               	movwf	AESCmac@key& (0+255),b
 28240  000778  0E02               	movlw	high (_loRa+34)
 28241  00077A  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 28242  00077C  0EC8               	movlw	low _aesBuffer
 28243  00077E  6FBB               	movwf	AESCmac@output& (0+255),b
 28244  000780  0E03               	movlw	high _aesBuffer
 28245  000782  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 28246  000784  0E2F               	movlw	low _radioBuffer
 28247  000786  6FBD               	movwf	AESCmac@input& (0+255),b
 28248  000788  0E06               	movlw	high _radioBuffer
 28249  00078A  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 28250  00078C  0101               	movlb	1	; () banked
 28251  00078E  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28252  000790  0F0C               	addlw	12
 28253  000792  0100               	movlb	0	; () banked
 28254  000794  6FBF               	movwf	AESCmac@size& (0+255),b
 28255  000796  EC80  F01D         	call	_AESCmac	;wreg free
 28256                           
 28257                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 28258  00079A  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 28259  00079C  0100               	movlb	0	; () banked
 28260  00079E  6F60               	movwf	memcpy@d1& (0+255),b
 28261  0007A0  0E00               	movlw	high LORAWAN_RxDone@computedMic
 28262  0007A2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28263  0007A4  0EC8               	movlw	low _aesBuffer
 28264  0007A6  6F62               	movwf	memcpy@s1& (0+255),b
 28265  0007A8  0E03               	movlw	high _aesBuffer
 28266  0007AA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 28267  0007AC  0E00               	movlw	0
 28268  0007AE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28269  0007B0  0E04               	movlw	4
 28270  0007B2  6F64               	movwf	memcpy@n& (0+255),b
 28271  0007B4  ECAB  F055         	call	_memcpy	;wreg free
 28272                           
 28273                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 28274  0007B8  C1F2  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 28275  0007BC  C1F3  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 28276  0007C0  C1F4  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 28277  0007C4  ECF0  F056         	call	_ExtractMic	;wreg free
 28278  0007C8  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 28279  0007CC  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 28280  0007D0  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 28281  0007D4  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 28282                           
 28283                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 28284  0007D8  0100               	movlb	0	; () banked
 28285  0007DA  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 28286  0007DC  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 28287  0007DE  E10A               	bnz	u22940
 28288  0007E0  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 28289  0007E2  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 28290  0007E4  E107               	bnz	u22940
 28291  0007E6  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 28292  0007E8  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 28293  0007EA  E104               	bnz	u22940
 28294  0007EC  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 28295  0007EE  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 28296  0007F0  B4D8               	btfsc	status,2,c
 28297  0007F2  D00E               	goto	l2268
 28298  0007F4                     u22940:
 28299                           
 28300                           ; BSR set to: 0
 28301                           ;lorawan.c: 1337: {
 28302                           ;lorawan.c: 1338: SetReceptionNotOkState();
 28303  0007F4  EC33  F051         	call	_SetReceptionNotOkState	;wreg free
 28304                           
 28305                           ;lorawan.c: 1339: if (CLASS_C == loRa.deviceClass)
 28306  0007F8  0E02               	movlw	2
 28307  0007FA  0102               	movlb	2	; () banked
 28308  0007FC  1916               	xorwf	(_loRa+18)& (0+255),w,b
 28309  0007FE  A4D8               	btfss	status,2,c
 28310  000800  0012               	return	
 28311                           
 28312                           ; BSR set to: 2
 28313                           ;lorawan.c: 1340: {
 28314                           ;lorawan.c: 1341: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28315  000802  5106               	movf	(_loRa+2)& (0+255),w,b
 28316  000804  0BF0               	andlw	-16
 28317  000806  0909               	iorlw	9
 28318  000808  6F06               	movwf	(_loRa+2)& (0+255),b
 28319                           
 28320                           ; BSR set to: 2
 28321                           ;lorawan.c: 1342: LORAWAN_EnterContinuousReceive();
 28322  00080A  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28323                           
 28324                           ;lorawan.c: 1343: }
 28325                           ;lorawan.c: 1344: return INVALID_PARAMETER;
 28326                           ;	Return value of _LORAWAN_RxDone is never used
 28327  00080E  0012               	return	
 28328  000810                     l2268:
 28329                           
 28330                           ;lorawan.c: 1345: }
 28331                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 28332  000810  0100               	movlb	0	; () banked
 28333  000812  EE20 F006          	lfsr	2,6
 28334  000816  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28335  000818  26D9               	addwf	fsr2l,f,c
 28336  00081A  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28337  00081C  22DA               	addwfc	fsr2h,f,c
 28338  00081E  0102               	movlb	2	; () banked
 28339  000820  510E               	movf	(_loRa+10)& (0+255),w,b
 28340  000822  5CDE               	subwf	postinc2,w,c
 28341  000824  510F               	movf	(_loRa+11)& (0+255),w,b
 28342  000826  58DE               	subwfb	postinc2,w,c
 28343  000828  A0D8               	btfss	status,0,c
 28344  00082A  D05D               	goto	l2270
 28345                           
 28346                           ; BSR set to: 2
 28347                           ;lorawan.c: 1349: {
 28348                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 28349  00082C  0100               	movlb	0	; () banked
 28350  00082E  EE20 F006          	lfsr	2,6
 28351  000832  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28352  000834  26D9               	addwf	fsr2l,f,c
 28353  000836  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28354  000838  22DA               	addwfc	fsr2h,f,c
 28355  00083A  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 28356  00083E  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 28357  000842  EE22  F00E         	lfsr	2,_loRa+10
 28358  000846  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 28359  00084A  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 28360  00084E  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 28361  000850  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 28362  000852  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 28363  000854  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 28364  000856  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 28365  000858  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 28366  00085A  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 28367  00085C  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 28368  00085E  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 28369  000860  0102               	movlb	2	; () banked
 28370  000862  5DA0               	subwf	(_loRa+156)& (0+255),w,b
 28371  000864  0100               	movlb	0	; () banked
 28372  000866  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 28373  000868  0102               	movlb	2	; () banked
 28374  00086A  59A1               	subwfb	(_loRa+157)& (0+255),w,b
 28375  00086C  B0D8               	btfsc	status,0,c
 28376  00086E  D02F               	goto	l2271
 28377                           
 28378                           ; BSR set to: 2
 28379                           ;lorawan.c: 1351: {
 28380                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 28381  000870  9104               	bcf	_loRa& (0+255),0,b
 28382                           
 28383                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 28384  000872  9106               	bcf	(_loRa+2)& (0+255),0,b
 28385  000874  9306               	bcf	(_loRa+2)& (0+255),1,b
 28386  000876  9506               	bcf	(_loRa+2)& (0+255),2,b
 28387  000878  9706               	bcf	(_loRa+2)& (0+255),3,b
 28388                           
 28389                           ; BSR set to: 2
 28390                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 28391  00087A  0101               	movlb	1	; () banked
 28392  00087C  510C               	movf	_rxPayload& (0+255),w,b
 28393  00087E  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 28394  000880  B4D8               	btfsc	status,2,c
 28395  000882  D017               	goto	u22999
 28396                           
 28397                           ; BSR set to: 1
 28398                           ;lorawan.c: 1355: {
 28399                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 28400  000884  0102               	movlb	2	; () banked
 28401  000886  9B04               	bcf	_loRa& (0+255),5,b
 28402                           
 28403                           ; BSR set to: 2
 28404                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 28405  000888  0E00               	movlw	0
 28406  00088A  0100               	movlb	0	; () banked
 28407  00088C  6F60               	movwf	RxData@pData& (0+255),b
 28408  00088E  0E00               	movlw	0
 28409  000890  6F61               	movwf	(RxData@pData+1)& (0+255),b
 28410  000892  0E00               	movlw	0
 28411  000894  6F62               	movwf	RxData@dataLength& (0+255),b
 28412  000896  0E00               	movlw	0
 28413  000898  6F63               	movwf	RxData@status& (0+255),b
 28414  00089A  D801               	call	u22998
 28415  00089C  D00A               	goto	u22999
 28416  00089E                     u22998:
 28417  00089E  0005               	push	
 28418  0008A0  6EFA               	movwf	pclath,c
 28419  0008A2  0101               	movlb	1	; () banked
 28420  0008A4  510C               	movf	_rxPayload& (0+255),w,b
 28421  0008A6  6EFD               	movwf	tosl,c
 28422  0008A8  510D               	movf	(_rxPayload+1)& (0+255),w,b
 28423  0008AA  6EFE               	movwf	tosh,c
 28424  0008AC  6AFF               	clrf	tosu,c
 28425  0008AE  50FA               	movf	pclath,w,c
 28426  0008B0  0012               	return		;indir
 28427  0008B2                     u22999:
 28428                           
 28429                           ;lorawan.c: 1358: }
 28430                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 28431  0008B2  0102               	movlb	2	; () banked
 28432  0008B4  9307               	bcf	(_loRa+3)& (0+255),1,b
 28433                           
 28434                           ; BSR set to: 2
 28435                           ;lorawan.c: 1362: loRa.macStatus.rejoinNeeded = 1;
 28436  0008B6  8308               	bsf	(_loRa+4)& (0+255),1,b
 28437                           
 28438                           ; BSR set to: 2
 28439                           ;lorawan.c: 1363: if (CLASS_C == loRa.deviceClass)
 28440  0008B8  0E02               	movlw	2
 28441  0008BA  1916               	xorwf	(_loRa+18)& (0+255),w,b
 28442  0008BC  A4D8               	btfss	status,2,c
 28443  0008BE  0012               	return	
 28444                           
 28445                           ; BSR set to: 2
 28446                           ;lorawan.c: 1364: {
 28447                           ;lorawan.c: 1365: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28448  0008C0  5106               	movf	(_loRa+2)& (0+255),w,b
 28449  0008C2  0BF0               	andlw	-16
 28450  0008C4  0909               	iorlw	9
 28451  0008C6  6F06               	movwf	(_loRa+2)& (0+255),b
 28452                           
 28453                           ; BSR set to: 2
 28454                           ;lorawan.c: 1366: LORAWAN_EnterContinuousReceive();
 28455  0008C8  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28456                           
 28457                           ;lorawan.c: 1367: }
 28458                           ;lorawan.c: 1368: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 28459                           ;	Return value of _LORAWAN_RxDone is never used
 28460  0008CC  0012               	return	
 28461  0008CE                     l2271:
 28462                           
 28463                           ;lorawan.c: 1370: else
 28464                           ;lorawan.c: 1371: {
 28465                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 28466  0008CE  0100               	movlb	0	; () banked
 28467  0008D0  EE20 F006          	lfsr	2,6
 28468  0008D4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28469  0008D6  26D9               	addwf	fsr2l,f,c
 28470  0008D8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28471  0008DA  22DA               	addwfc	fsr2h,f,c
 28472  0008DC  CFDE F20E          	movff	postinc2,_loRa+10
 28473  0008E0  CFDD F20F          	movff	postdec2,_loRa+11
 28474                           
 28475                           ; BSR set to: 0
 28476                           ;lorawan.c: 1373: }
 28477                           ;lorawan.c: 1374: }
 28478  0008E4  D02E               	goto	l2277
 28479  0008E6                     l2270:
 28480                           
 28481                           ;lorawan.c: 1375: else
 28482                           ;lorawan.c: 1376: {
 28483                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 28484                           
 28485                           ; BSR set to: 0
 28486  0008E6  0100               	movlb	0	; () banked
 28487  0008E8  EE20 F006          	lfsr	2,6
 28488  0008EC  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28489  0008EE  26D9               	addwf	fsr2l,f,c
 28490  0008F0  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28491  0008F2  22DA               	addwfc	fsr2h,f,c
 28492  0008F4  50DE               	movf	postinc2,w,c
 28493  0008F6  10DE               	iorwf	postinc2,w,c
 28494  0008F8  A4D8               	btfss	status,2,c
 28495  0008FA  D015               	goto	l2276
 28496                           
 28497                           ; BSR set to: 0
 28498  0008FC  0102               	movlb	2	; () banked
 28499  0008FE  290E               	incf	(_loRa+10)& (0+255),w,b
 28500  000900  E112               	bnz	l20061
 28501  000902  290F               	incf	(_loRa+11)& (0+255),w,b
 28502  000904  A4D8               	btfss	status,2,c
 28503  000906  D00F               	goto	l2276
 28504                           
 28505                           ; BSR set to: 2
 28506                           ;lorawan.c: 1378: {
 28507                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 28508  000908  0100               	movlb	0	; () banked
 28509  00090A  EE20 F006          	lfsr	2,6
 28510  00090E  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28511  000910  26D9               	addwf	fsr2l,f,c
 28512  000912  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28513  000914  22DA               	addwfc	fsr2h,f,c
 28514  000916  CFDE F20E          	movff	postinc2,_loRa+10
 28515  00091A  CFDD F20F          	movff	postdec2,_loRa+11
 28516                           
 28517                           ; BSR set to: 0
 28518                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 28519  00091E  0102               	movlb	2	; () banked
 28520  000920  4B10               	infsnz	(_loRa+12)& (0+255),f,b
 28521  000922  2B11               	incf	(_loRa+13)& (0+255),f,b
 28522                           
 28523                           ;lorawan.c: 1382: }
 28524  000924  D00E               	goto	l2277
 28525  000926                     l2276:
 28526  000926                     l20061:
 28527                           
 28528                           ;lorawan.c: 1383: else
 28529                           ;lorawan.c: 1384: {
 28530                           ;lorawan.c: 1385: SetReceptionNotOkState();
 28531  000926  EC33  F051         	call	_SetReceptionNotOkState	;wreg free
 28532                           
 28533                           ;lorawan.c: 1386: if (CLASS_C == loRa.deviceClass)
 28534  00092A  0E02               	movlw	2
 28535  00092C  0102               	movlb	2	; () banked
 28536  00092E  1916               	xorwf	(_loRa+18)& (0+255),w,b
 28537  000930  A4D8               	btfss	status,2,c
 28538  000932  0012               	return	
 28539                           
 28540                           ; BSR set to: 2
 28541                           ;lorawan.c: 1387: {
 28542                           ;lorawan.c: 1388: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28543  000934  5106               	movf	(_loRa+2)& (0+255),w,b
 28544  000936  0BF0               	andlw	-16
 28545  000938  0909               	iorlw	9
 28546  00093A  6F06               	movwf	(_loRa+2)& (0+255),b
 28547                           
 28548                           ; BSR set to: 2
 28549                           ;lorawan.c: 1389: LORAWAN_EnterContinuousReceive();
 28550  00093C  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28551                           
 28552                           ;lorawan.c: 1390: }
 28553                           ;lorawan.c: 1392: return INVALID_PARAMETER;
 28554                           ;	Return value of _LORAWAN_RxDone is never used
 28555  000940  0012               	return	
 28556  000942                     l2277:
 28557                           
 28558                           ;lorawan.c: 1393: }
 28559                           ;lorawan.c: 1394: }
 28560                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 28561  000942  0102               	movlb	2	; () banked
 28562  000944  290E               	incf	(_loRa+10)& (0+255),w,b
 28563  000946  E113               	bnz	l20083
 28564  000948  290F               	incf	(_loRa+11)& (0+255),w,b
 28565  00094A  E111               	bnz	l20083
 28566  00094C  2910               	incf	(_loRa+12)& (0+255),w,b
 28567  00094E  E10F               	bnz	l20083
 28568  000950  2911               	incf	(_loRa+13)& (0+255),w,b
 28569  000952  A4D8               	btfss	status,2,c
 28570  000954  D00C               	goto	l2279
 28571                           
 28572                           ; BSR set to: 2
 28573                           ;lorawan.c: 1397: {
 28574                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 28575  000956  8308               	bsf	(_loRa+4)& (0+255),1,b
 28576                           
 28577                           ; BSR set to: 2
 28578                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 28579  000958  0E02               	movlw	2
 28580  00095A  1916               	xorwf	(_loRa+18)& (0+255),w,b
 28581  00095C  A4D8               	btfss	status,2,c
 28582  00095E  0012               	return	
 28583                           
 28584                           ; BSR set to: 2
 28585                           ;lorawan.c: 1402: {
 28586                           ;lorawan.c: 1403: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28587  000960  5106               	movf	(_loRa+2)& (0+255),w,b
 28588  000962  0BF0               	andlw	-16
 28589  000964  0909               	iorlw	9
 28590  000966  6F06               	movwf	(_loRa+2)& (0+255),b
 28591                           
 28592                           ; BSR set to: 2
 28593                           ;lorawan.c: 1404: LORAWAN_EnterContinuousReceive();
 28594  000968  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28595                           
 28596                           ;lorawan.c: 1405: }
 28597                           ;lorawan.c: 1406: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 28598                           ;	Return value of _LORAWAN_RxDone is never used
 28599  00096C  0012               	return	
 28600  00096E                     l2279:
 28601  00096E                     l20083:
 28602                           
 28603                           ;lorawan.c: 1407: }
 28604                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 28605  00096E  0102               	movlb	2	; () banked
 28606  000970  5106               	movf	(_loRa+2)& (0+255),w,b
 28607  000972  0B0F               	andlw	15
 28608  000974  0A03               	xorlw	3
 28609  000976  A4D8               	btfss	status,2,c
 28610  000978  D003               	goto	l2281
 28611                           
 28612                           ; BSR set to: 2
 28613                           ;lorawan.c: 1411: {
 28614                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 28615  00097A  51E9               	movf	(_loRa+229)& (0+255),w,b
 28616  00097C  ECAA  F05E         	call	_SwTimerStop
 28617  000980                     l2281:
 28618                           
 28619                           ;lorawan.c: 1413: }
 28620                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 28621  000980  0E01               	movlw	1
 28622  000982  0102               	movlb	2	; () banked
 28623  000984  6FDC               	movwf	(_loRa+216)& (0+255),b
 28624                           
 28625                           ; BSR set to: 2
 28626                           ;lorawan.c: 1417: CheckFlags (hdr);
 28627  000986  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 28628  00098A  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 28629  00098E  EC39  F056         	call	_CheckFlags	;wreg free
 28630                           
 28631                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 28632  000992  0100               	movlb	0	; () banked
 28633  000994  EE20 F005          	lfsr	2,5
 28634  000998  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28635  00099A  26D9               	addwf	fsr2l,f,c
 28636  00099C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28637  00099E  22DA               	addwfc	fsr2h,f,c
 28638  0009A0  50DF               	movf	223,w,c
 28639  0009A2  0B0F               	andlw	15
 28640  0009A4  0900               	iorlw	0
 28641  0009A6  B4D8               	btfsc	status,2,c
 28642  0009A8  D016               	goto	l2282
 28643                           
 28644                           ; BSR set to: 0
 28645                           ;lorawan.c: 1420: {
 28646                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 28647  0009AA  0E08               	movlw	8
 28648  0009AC  25F1               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 28649  0009AE  6FB0               	movwf	MacExecuteCommands@buffer& (0+255),b
 28650  0009B0  0E00               	movlw	0
 28651  0009B2  21F2               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28652  0009B4  6FB1               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 28653  0009B6  EE20 F005          	lfsr	2,5
 28654  0009BA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28655  0009BC  26D9               	addwf	fsr2l,f,c
 28656  0009BE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28657  0009C0  22DA               	addwfc	fsr2h,f,c
 28658  0009C2  50DF               	movf	223,w,c
 28659  0009C4  0B0F               	andlw	15
 28660  0009C6  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 28661  0009C8  ECD8  F025         	call	_MacExecuteCommands	;wreg free
 28662  0009CC  C0B0  F1F2         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 28663  0009D0  C0B1  F1F3         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 28664                           
 28665                           ;lorawan.c: 1422: }
 28666  0009D4  D007               	goto	l2283
 28667  0009D6                     l2282:
 28668                           
 28669                           ;lorawan.c: 1423: else
 28670                           ;lorawan.c: 1424: {
 28671                           ;lorawan.c: 1425: buffer = buffer + 8;
 28672  0009D6  0E08               	movlw	8
 28673  0009D8  0101               	movlb	1	; () banked
 28674  0009DA  25F2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 28675  0009DC  6FF2               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 28676  0009DE  0E00               	movlw	0
 28677  0009E0  21F3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 28678  0009E2  6FF3               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 28679  0009E4                     l2283:
 28680                           
 28681                           ;lorawan.c: 1426: }
 28682                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 28683                           
 28684                           ; BSR set to: 1
 28685  0009E4  0101               	movlb	1	; () banked
 28686  0009E6  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28687  0009E8  0100               	movlb	0	; () banked
 28688  0009EA  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 28689  0009EC  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 28690  0009EE  EE20 F005          	lfsr	2,5
 28691  0009F2  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28692  0009F4  26D9               	addwf	fsr2l,f,c
 28693  0009F6  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28694  0009F8  22DA               	addwfc	fsr2h,f,c
 28695  0009FA  50DF               	movf	223,w,c
 28696  0009FC  0B0F               	andlw	15
 28697  0009FE  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 28698  000A00  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 28699  000A02  0E0C               	movlw	12
 28700  000A04  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 28701  000A06  0E00               	movlw	0
 28702  000A08  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 28703  000A0A  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 28704  000A0C  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 28705  000A0E  E104               	bnz	u23080
 28706  000A10  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 28707  000A12  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 28708  000A14  B4D8               	btfsc	status,2,c
 28709  000A16  D098               	goto	l2284
 28710  000A18                     u23080:
 28711                           
 28712                           ; BSR set to: 0
 28713                           ;lorawan.c: 1428: {
 28714                           ;lorawan.c: 1429: fPort = *(buffer++);
 28715  000A18  C1F2  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 28716  000A1C  C1F3  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 28717  000A20  50DF               	movf	indf2,w,c
 28718  000A22  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 28719                           
 28720                           ; BSR set to: 0
 28721  000A24  0101               	movlb	1	; () banked
 28722  000A26  4BF2               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 28723  000A28  2BF3               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 28724                           
 28725                           ; BSR set to: 1
 28726                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 28727  000A2A  0100               	movlb	0	; () banked
 28728  000A2C  EE20 F005          	lfsr	2,5
 28729  000A30  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28730  000A32  26D9               	addwf	fsr2l,f,c
 28731  000A34  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28732  000A36  22DA               	addwfc	fsr2h,f,c
 28733  000A38  50DF               	movf	223,w,c
 28734  000A3A  0B0F               	andlw	15
 28735  000A3C  0800               	sublw	0
 28736  000A3E  0101               	movlb	1	; () banked
 28737  000A40  25F4               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28738  000A42  0FF4               	addlw	244
 28739  000A44  0100               	movlb	0	; () banked
 28740  000A46  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 28741                           
 28742                           ; BSR set to: 0
 28743                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 28744  000A48  EE20 F005          	lfsr	2,5
 28745  000A4C  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28746  000A4E  26D9               	addwf	fsr2l,f,c
 28747  000A50  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28748  000A52  22DA               	addwfc	fsr2h,f,c
 28749  000A54  50DF               	movf	223,w,c
 28750  000A56  0B0F               	andlw	15
 28751  000A58  0F19               	addlw	25
 28752  000A5A  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 28753                           
 28754                           ; BSR set to: 0
 28755                           ;lorawan.c: 1434: if (fPort != 0)
 28756  000A5C  51DF               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 28757  000A5E  B4D8               	btfsc	status,2,c
 28758  000A60  D028               	goto	l2285
 28759                           
 28760                           ; BSR set to: 0
 28761                           ;lorawan.c: 1435: {
 28762                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 28763  000A62  C1F2  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 28764  000A66  C1F3  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 28765  000A6A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 28766  000A6C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 28767  000A6E  0E01               	movlw	1
 28768  000A70  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 28769  000A72  C20E  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 28770  000A76  C20F  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 28771  000A7A  C210  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 28772  000A7E  C211  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 28773  000A82  0E36               	movlw	low (_loRa+50)
 28774  000A84  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 28775  000A86  0E02               	movlw	high (_loRa+50)
 28776  000A88  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 28777  000A8A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 28778  000A8E  0E2F               	movlw	low _radioBuffer
 28779  000A90  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 28780  000A92  0E06               	movlw	high _radioBuffer
 28781  000A94  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 28782  000A96  0E00               	movlw	0
 28783  000A98  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 28784  000A9A  EC40  F037         	call	_EncryptFRMPayload	;wreg free
 28785                           
 28786                           ;lorawan.c: 1437: packet = buffer - 1;
 28787  000A9E  0EFF               	movlw	255
 28788  000AA0  0101               	movlb	1	; () banked
 28789  000AA2  25F2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 28790  000AA4  0100               	movlb	0	; () banked
 28791  000AA6  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 28792  000AA8  0EFF               	movlw	255
 28793  000AAA  0101               	movlb	1	; () banked
 28794  000AAC  21F3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 28795  000AAE  0100               	movlb	0	; () banked
 28796  000AB0  D050               	goto	L32
 28797  000AB2                     l2285:
 28798                           
 28799                           ; BSR set to: 0
 28800                           ;lorawan.c: 1439: else
 28801                           ;lorawan.c: 1440: {
 28802                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 28803                           
 28804                           ; BSR set to: 0
 28805  000AB2  0101               	movlb	1	; () banked
 28806  000AB4  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28807  000AB6  0100               	movlb	0	; () banked
 28808  000AB8  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 28809  000ABA  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 28810  000ABC  EE20 F005          	lfsr	2,5
 28811  000AC0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28812  000AC2  26D9               	addwf	fsr2l,f,c
 28813  000AC4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28814  000AC6  22DA               	addwfc	fsr2h,f,c
 28815  000AC8  50DF               	movf	223,w,c
 28816  000ACA  0B0F               	andlw	15
 28817  000ACC  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 28818  000ACE  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 28819  000AD0  0E0D               	movlw	13
 28820  000AD2  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 28821  000AD4  0E00               	movlw	0
 28822  000AD6  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 28823  000AD8  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 28824  000ADA  5DDC               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 28825  000ADC  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 28826  000ADE  0A80               	xorlw	128
 28827  000AE0  6FDE               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 28828  000AE2  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 28829  000AE4  0A80               	xorlw	128
 28830  000AE6  59DE               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 28831  000AE8  B0D8               	btfsc	status,0,c
 28832  000AEA  D02B               	goto	l2287
 28833                           
 28834                           ; BSR set to: 0
 28835                           ;lorawan.c: 1443: {
 28836                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 28837  000AEC  C1F2  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 28838  000AF0  C1F3  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 28839  000AF4  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 28840  000AF6  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 28841  000AF8  0E01               	movlw	1
 28842  000AFA  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 28843  000AFC  C20E  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 28844  000B00  C20F  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 28845  000B04  C210  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 28846  000B08  C211  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 28847  000B0C  0E26               	movlw	low (_loRa+34)
 28848  000B0E  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 28849  000B10  0E02               	movlw	high (_loRa+34)
 28850  000B12  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 28851  000B14  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 28852  000B18  0E2F               	movlw	low _radioBuffer
 28853  000B1A  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 28854  000B1C  0E06               	movlw	high _radioBuffer
 28855  000B1E  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 28856  000B20  0E00               	movlw	0
 28857  000B22  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 28858  000B24  EC40  F037         	call	_EncryptFRMPayload	;wreg free
 28859                           
 28860                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 28861  000B28  C1F2  F0B0         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 28862  000B2C  C1F3  F0B1         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 28863  000B30  0100               	movlb	0	; () banked
 28864  000B32  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 28865  000B34  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 28866  000B36  ECD8  F025         	call	_MacExecuteCommands	;wreg free
 28867  000B3A  C0B0  F1F2         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 28868  000B3E  C0B1  F1F3         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 28869  000B42                     l2287:
 28870                           
 28871                           ;lorawan.c: 1447: }
 28872                           ;lorawan.c: 1449: frmPayloadLength = 0;
 28873  000B42  0E00               	movlw	0
 28874  000B44  0100               	movlb	0	; () banked
 28875  000B46  D001               	goto	L12
 28876  000B48                     l2284:
 28877                           
 28878                           ; BSR set to: 0
 28879                           ;lorawan.c: 1453: else
 28880                           ;lorawan.c: 1454: {
 28881                           ;lorawan.c: 1455: frmPayloadLength = 0;
 28882                           
 28883                           ; BSR set to: 0
 28884  000B48  0E00               	movlw	0
 28885  000B4A                     L12:
 28886  000B4A  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 28887                           
 28888                           ; BSR set to: 0
 28889                           ;lorawan.c: 1456: packet = (0);
 28890  000B4C  0E00               	movlw	0
 28891  000B4E  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 28892  000B50  0E00               	movlw	0
 28893  000B52                     L32:
 28894  000B52  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 28895                           
 28896                           ; BSR set to: 0
 28897                           ;lorawan.c: 1457: }
 28898                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 28899                           
 28900                           ; BSR set to: 0
 28901  000B54  0E01               	movlw	1
 28902  000B56  0102               	movlb	2	; () banked
 28903  000B58  6FDC               	movwf	(_loRa+216)& (0+255),b
 28904                           
 28905                           ; BSR set to: 2
 28906                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 28907  000B5A  0E00               	movlw	0
 28908  000B5C  6FD5               	movwf	(_loRa+209)& (0+255),b
 28909  000B5E  0E00               	movlw	0
 28910  000B60  6FD4               	movwf	(_loRa+208)& (0+255),b
 28911                           
 28912                           ; BSR set to: 2
 28913                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 28914  000B62  0E00               	movlw	0
 28915  000B64  6FF2               	movwf	(_loRa+238)& (0+255),b
 28916                           
 28917                           ; BSR set to: 2
 28918                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 28919  000B66  9904               	bcf	_loRa& (0+255),4,b
 28920                           
 28921                           ; BSR set to: 2
 28922                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 28923  000B68  8307               	bsf	(_loRa+3)& (0+255),1,b
 28924                           
 28925                           ; BSR set to: 2
 28926                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 28927  000B6A  A104               	btfss	_loRa& (0+255),0,b
 28928  000B6C  D055               	goto	l2289
 28929                           
 28930                           ; BSR set to: 2
 28931                           ;lorawan.c: 1468: {
 28932                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 28933  000B6E  0100               	movlb	0	; () banked
 28934  000B70  EE20 F005          	lfsr	2,5
 28935  000B74  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28936  000B76  26D9               	addwf	fsr2l,f,c
 28937  000B78  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28938  000B7A  22DA               	addwfc	fsr2h,f,c
 28939  000B7C  AADF               	btfss	indf2,5,c
 28940  000B7E  D049               	goto	l2290
 28941                           
 28942                           ; BSR set to: 0
 28943                           ;lorawan.c: 1470: {
 28944                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 28945  000B80  0102               	movlb	2	; () banked
 28946  000B82  9104               	bcf	_loRa& (0+255),0,b
 28947                           
 28948                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 28949  000B84  9106               	bcf	(_loRa+2)& (0+255),0,b
 28950  000B86  9306               	bcf	(_loRa+2)& (0+255),1,b
 28951  000B88  9506               	bcf	(_loRa+2)& (0+255),2,b
 28952  000B8A  9706               	bcf	(_loRa+2)& (0+255),3,b
 28953                           
 28954                           ; BSR set to: 2
 28955                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 28956  000B8C  0101               	movlb	1	; () banked
 28957  000B8E  510C               	movf	_rxPayload& (0+255),w,b
 28958  000B90  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 28959  000B92  B4D8               	btfsc	status,2,c
 28960  000B94  D017               	goto	u23149
 28961                           
 28962                           ; BSR set to: 1
 28963                           ;lorawan.c: 1474: {
 28964                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 28965  000B96  0102               	movlb	2	; () banked
 28966  000B98  9B04               	bcf	_loRa& (0+255),5,b
 28967                           
 28968                           ; BSR set to: 2
 28969                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 28970  000B9A  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 28971  000B9E  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 28972  000BA2  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 28973  000BA6  0E01               	movlw	1
 28974  000BA8  0100               	movlb	0	; () banked
 28975  000BAA  6F63               	movwf	RxData@status& (0+255),b
 28976  000BAC  D801               	call	u23148
 28977  000BAE  D00A               	goto	u23149
 28978  000BB0                     u23148:
 28979  000BB0  0005               	push	
 28980  000BB2  6EFA               	movwf	pclath,c
 28981  000BB4  0101               	movlb	1	; () banked
 28982  000BB6  510C               	movf	_rxPayload& (0+255),w,b
 28983  000BB8  6EFD               	movwf	tosl,c
 28984  000BBA  510D               	movf	(_rxPayload+1)& (0+255),w,b
 28985  000BBC  6EFE               	movwf	tosh,c
 28986  000BBE  6AFF               	clrf	tosu,c
 28987  000BC0  50FA               	movf	pclath,w,c
 28988  000BC2  0012               	return		;indir
 28989  000BC4                     u23149:
 28990                           
 28991                           ;lorawan.c: 1477: }
 28992                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 28993  000BC4  0102               	movlb	2	; () banked
 28994  000BC6  9307               	bcf	(_loRa+3)& (0+255),1,b
 28995                           
 28996                           ; BSR set to: 2
 28997                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 28998  000BC8  BB06               	btfsc	(_loRa+2)& (0+255),5,b
 28999                           
 29000                           ; BSR set to: 2
 29001  000BCA  BB04               	btfsc	_loRa& (0+255),5,b
 29002  000BCC  D06C               	goto	l2304
 29003                           
 29004                           ; BSR set to: 2
 29005  000BCE  B304               	btfsc	_loRa& (0+255),1,b
 29006  000BD0  D002               	goto	u23180
 29007                           
 29008                           ; BSR set to: 2
 29009  000BD2  A704               	btfss	_loRa& (0+255),3,b
 29010  000BD4  D068               	goto	l2304
 29011  000BD6                     u23180:
 29012                           
 29013                           ; BSR set to: 2
 29014                           ;lorawan.c: 1480: {
 29015                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 29016                           
 29017                           ; BSR set to: 2
 29018  000BD6  0E01               	movlw	1
 29019  000BD8  0100               	movlb	0	; () banked
 29020  000BDA  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 29021  000BDC  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 29022  000BDE  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 29023  000BE0  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 29024  000BE2  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 29025  000BE4  0102               	movlb	2	; () banked
 29026  000BE6  51F1               	movf	(_loRa+237)& (0+255),w,b
 29027  000BE8  EC99  F040         	call	_SearchAvailableChannel
 29028  000BEC  0900               	iorlw	0
 29029  000BEE  A4D8               	btfss	status,2,c
 29030  000BF0  D00D               	goto	l2295
 29031                           
 29032                           ;lorawan.c: 1482: {
 29033                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 29034  000BF2  0E00               	movlw	0
 29035  000BF4  0100               	movlb	0	; () banked
 29036  000BF6  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 29037  000BF8  0E00               	movlw	0
 29038  000BFA  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 29039  000BFC  0E00               	movlw	0
 29040  000BFE  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 29041  000C00  0E00               	movlw	0
 29042  000C02  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 29043  000C04  0E00               	movlw	0
 29044  000C06  ECDE  F049         	call	_LORAWAN_Send
 29045  000C0A  D048               	goto	l20187
 29046  000C0C                     l2295:
 29047                           
 29048                           ;lorawan.c: 1486: else
 29049                           ;lorawan.c: 1487: {
 29050                           ;lorawan.c: 1489: StartReTxTimer();
 29051                           
 29052                           ; BSR set to: 2
 29053  000C0C  EC06  F038         	call	_StartReTxTimer	;wreg free
 29054                           
 29055                           ;lorawan.c: 1490: }
 29056                           ;lorawan.c: 1491: }
 29057                           ;lorawan.c: 1492: }
 29058  000C10  D04A               	goto	l2304
 29059  000C12                     l2290:
 29060                           
 29061                           ;lorawan.c: 1494: else
 29062                           ;lorawan.c: 1495: {
 29063                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 29064  000C12  ECD6  F052         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 29065                           
 29066                           ;lorawan.c: 1497: }
 29067                           ;lorawan.c: 1498: }
 29068  000C16  D047               	goto	l2304
 29069  000C18                     l2289:
 29070                           
 29071                           ; BSR set to: 2
 29072                           ;lorawan.c: 1499: else
 29073                           ;lorawan.c: 1500: {
 29074                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 29075  000C18  9106               	bcf	(_loRa+2)& (0+255),0,b
 29076  000C1A  9306               	bcf	(_loRa+2)& (0+255),1,b
 29077  000C1C  9506               	bcf	(_loRa+2)& (0+255),2,b
 29078  000C1E  9706               	bcf	(_loRa+2)& (0+255),3,b
 29079                           
 29080                           ; BSR set to: 2
 29081                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 29082  000C20  0101               	movlb	1	; () banked
 29083  000C22  510C               	movf	_rxPayload& (0+255),w,b
 29084  000C24  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 29085  000C26  B4D8               	btfsc	status,2,c
 29086  000C28  D017               	goto	u23219
 29087                           
 29088                           ; BSR set to: 1
 29089                           ;lorawan.c: 1504: {
 29090                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 29091  000C2A  0102               	movlb	2	; () banked
 29092  000C2C  9B04               	bcf	_loRa& (0+255),5,b
 29093                           
 29094                           ; BSR set to: 2
 29095                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 29096  000C2E  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 29097  000C32  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 29098  000C36  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 29099  000C3A  0E01               	movlw	1
 29100  000C3C  0100               	movlb	0	; () banked
 29101  000C3E  6F63               	movwf	RxData@status& (0+255),b
 29102  000C40  D801               	call	u23218
 29103  000C42  D00A               	goto	u23219
 29104  000C44                     u23218:
 29105  000C44  0005               	push	
 29106  000C46  6EFA               	movwf	pclath,c
 29107  000C48  0101               	movlb	1	; () banked
 29108  000C4A  510C               	movf	_rxPayload& (0+255),w,b
 29109  000C4C  6EFD               	movwf	tosl,c
 29110  000C4E  510D               	movf	(_rxPayload+1)& (0+255),w,b
 29111  000C50  6EFE               	movwf	tosh,c
 29112  000C52  6AFF               	clrf	tosu,c
 29113  000C54  50FA               	movf	pclath,w,c
 29114  000C56  0012               	return		;indir
 29115  000C58                     u23219:
 29116                           
 29117                           ;lorawan.c: 1507: }
 29118                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 29119  000C58  0102               	movlb	2	; () banked
 29120  000C5A  BB06               	btfsc	(_loRa+2)& (0+255),5,b
 29121                           
 29122                           ; BSR set to: 2
 29123  000C5C  BB04               	btfsc	_loRa& (0+255),5,b
 29124  000C5E  D023               	goto	l2304
 29125                           
 29126                           ; BSR set to: 2
 29127  000C60  B304               	btfsc	_loRa& (0+255),1,b
 29128  000C62  D002               	goto	u23250
 29129                           
 29130                           ; BSR set to: 2
 29131  000C64  A704               	btfss	_loRa& (0+255),3,b
 29132  000C66  D01F               	goto	l2304
 29133  000C68                     u23250:
 29134                           
 29135                           ; BSR set to: 2
 29136                           ;lorawan.c: 1510: {
 29137                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 29138                           
 29139                           ; BSR set to: 2
 29140  000C68  0E01               	movlw	1
 29141  000C6A  0100               	movlb	0	; () banked
 29142  000C6C  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 29143  000C6E  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 29144  000C70  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 29145  000C72  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 29146  000C74  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 29147  000C76  0102               	movlb	2	; () banked
 29148  000C78  51F1               	movf	(_loRa+237)& (0+255),w,b
 29149  000C7A  EC99  F040         	call	_SearchAvailableChannel
 29150  000C7E  0900               	iorlw	0
 29151  000C80  A4D8               	btfss	status,2,c
 29152  000C82  D00F               	goto	l2303
 29153                           
 29154                           ;lorawan.c: 1512: {
 29155                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 29156  000C84  0E00               	movlw	0
 29157  000C86  0100               	movlb	0	; () banked
 29158  000C88  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 29159  000C8A  0E00               	movlw	0
 29160  000C8C  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 29161  000C8E  0E00               	movlw	0
 29162  000C90  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 29163  000C92  0E00               	movlw	0
 29164  000C94  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 29165  000C96  0E00               	movlw	0
 29166  000C98  ECDE  F049         	call	_LORAWAN_Send
 29167  000C9C                     l20187:
 29168                           
 29169                           ;lorawan.c: 1514: loRa.lorawanMacStatus.fPending = 0;
 29170  000C9C  0102               	movlb	2	; () banked
 29171  000C9E  9704               	bcf	_loRa& (0+255),3,b
 29172                           
 29173                           ;lorawan.c: 1515: }
 29174  000CA0  D002               	goto	l2304
 29175  000CA2                     l2303:
 29176                           
 29177                           ;lorawan.c: 1516: else
 29178                           ;lorawan.c: 1517: {
 29179                           ;lorawan.c: 1519: StartReTxTimer();
 29180                           
 29181                           ; BSR set to: 2
 29182  000CA2  EC06  F038         	call	_StartReTxTimer	;wreg free
 29183  000CA6                     l2304:
 29184                           
 29185                           ;lorawan.c: 1520: }
 29186                           ;lorawan.c: 1521: }
 29187                           ;lorawan.c: 1522: }
 29188                           ;lorawan.c: 1524: if (CLASS_C == loRa.deviceClass)
 29189  000CA6  0E02               	movlw	2
 29190  000CA8  0102               	movlb	2	; () banked
 29191  000CAA  1916               	xorwf	(_loRa+18)& (0+255),w,b
 29192  000CAC  A4D8               	btfss	status,2,c
 29193  000CAE  0012               	return	
 29194                           
 29195                           ; BSR set to: 2
 29196                           ;lorawan.c: 1525: {
 29197                           ;lorawan.c: 1526: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 29198  000CB0  5106               	movf	(_loRa+2)& (0+255),w,b
 29199  000CB2  0BF0               	andlw	-16
 29200  000CB4  0909               	iorlw	9
 29201  000CB6  6F06               	movwf	(_loRa+2)& (0+255),b
 29202                           
 29203                           ; BSR set to: 2
 29204                           ;lorawan.c: 1527: LORAWAN_EnterContinuousReceive();
 29205  000CB8  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 29206                           
 29207                           ;lorawan.c: 1528: }
 29208                           ;lorawan.c: 1529: }
 29209  000CBC  0012               	return	
 29210  000CBE                     l2244:
 29211                           
 29212                           ;lorawan.c: 1530: else
 29213                           ;lorawan.c: 1531: {
 29214                           ;lorawan.c: 1533: SetReceptionNotOkState ();
 29215  000CBE  EC33  F051         	call	_SetReceptionNotOkState	;wreg free
 29216                           
 29217                           ;lorawan.c: 1535: }
 29218                           ;lorawan.c: 1536: }
 29219                           
 29220                           ;lorawan.c: 1534: return INVALID_PARAMETER;
 29221                           ;	Return value of _LORAWAN_RxDone is never used
 29222  000CC2  0012               	return	
 29223  000CC4                     l2230:
 29224                           
 29225                           ;lorawan.c: 1537: else
 29226                           ;lorawan.c: 1538: {
 29227                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 29228  000CC4  0101               	movlb	1	; () banked
 29229  000CC6  510C               	movf	_rxPayload& (0+255),w,b
 29230  000CC8  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 29231  000CCA  B4D8               	btfsc	status,2,c
 29232  000CCC  0012               	return	
 29233                           
 29234                           ; BSR set to: 1
 29235                           ;lorawan.c: 1541: {
 29236                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 29237  000CCE  EC3F  F063         	call	_RADIO_GetStatus	;wreg free
 29238  000CD2  0100               	movlb	0	; () banked
 29239  000CD4  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 29240  000CD6  B7DA               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 29241  000CD8  D014               	goto	l2309
 29242                           
 29243                           ; BSR set to: 0
 29244                           ;lorawan.c: 1543: {
 29245                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 29246  000CDA  C1F2  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 29247  000CDE  C1F3  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 29248  000CE2  C1F4  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 29249  000CE6  0E03               	movlw	3
 29250  000CE8  6F63               	movwf	RxData@status& (0+255),b
 29251  000CEA  D801               	call	u23308
 29252  000CEC  0012               	return	
 29253  000CEE                     u23308:
 29254  000CEE  0005               	push	
 29255  000CF0  6EFA               	movwf	pclath,c
 29256  000CF2  0101               	movlb	1	; () banked
 29257  000CF4  510C               	movf	_rxPayload& (0+255),w,b
 29258  000CF6  6EFD               	movwf	tosl,c
 29259  000CF8  510D               	movf	(_rxPayload+1)& (0+255),w,b
 29260  000CFA  6EFE               	movwf	tosh,c
 29261  000CFC  6AFF               	clrf	tosu,c
 29262  000CFE  50FA               	movf	pclath,w,c
 29263  000D00  0012               	return		;indir
 29264  000D02                     l2309:
 29265                           
 29266                           ;lorawan.c: 1546: else
 29267                           ;lorawan.c: 1547: {
 29268                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 29269  000D02  C1F2  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 29270  000D06  C1F3  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 29271  000D0A  C1F4  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 29272  000D0E  0E02               	movlw	2
 29273  000D10  0100               	movlb	0	; () banked
 29274  000D12  6F63               	movwf	RxData@status& (0+255),b
 29275  000D14  D801               	call	u23318
 29276  000D16  0012               	return	
 29277  000D18                     u23318:
 29278  000D18  0005               	push	
 29279  000D1A  6EFA               	movwf	pclath,c
 29280  000D1C  0101               	movlb	1	; () banked
 29281  000D1E  510C               	movf	_rxPayload& (0+255),w,b
 29282  000D20  6EFD               	movwf	tosl,c
 29283  000D22  510D               	movf	(_rxPayload+1)& (0+255),w,b
 29284  000D24  6EFE               	movwf	tosh,c
 29285  000D26  6AFF               	clrf	tosu,c
 29286  000D28  50FA               	movf	pclath,w,c
 29287  000D2A  0012               	return		;indir
 29288  000D2C                     __end_of_LORAWAN_RxDone:
 29289                           	opt stack 0
 29290                           tosu	equ	0xFFF
 29291                           tosh	equ	0xFFE
 29292                           tosl	equ	0xFFD
 29293                           pclath	equ	0xFFA
 29294                           tblptru	equ	0xFF8
 29295                           tblptrh	equ	0xFF7
 29296                           tblptrl	equ	0xFF6
 29297                           tablat	equ	0xFF5
 29298                           prodh	equ	0xFF4
 29299                           prodl	equ	0xFF3
 29300                           intcon	equ	0xFF2
 29301                           intcon2	equ	0xFF1
 29302                           intcon3	equ	0xFF0
 29303                           postinc0	equ	0xFEE
 29304                           wreg	equ	0xFE8
 29305                           postinc1	equ	0xFE6
 29306                           postdec1	equ	0xFE5
 29307                           plusw1	equ	0xFE3
 29308                           fsr1h	equ	0xFE2
 29309                           fsr1l	equ	0xFE1
 29310                           indf2	equ	0xFDF
 29311                           postinc2	equ	0xFDE
 29312                           postdec2	equ	0xFDD
 29313                           fsr2h	equ	0xFDA
 29314                           fsr2l	equ	0xFD9
 29315                           status	equ	0xFD8
 29316                           
 29317 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 29318 ;; Defined at:
 29319 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 29320 ;; Parameters:    Size  Location     Type
 29321 ;;		None
 29322 ;; Auto vars:     Size  Location     Type
 29323 ;;		None
 29324 ;; Return value:  Size  Location     Type
 29325 ;;                  1    wreg      void 
 29326 ;; Registers used:
 29327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29328 ;; Tracked objects:
 29329 ;;		On entry : 0/0
 29330 ;;		On exit  : 0/0
 29331 ;;		Unchanged: 0/0
 29332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29335 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29336 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29337 ;;Total ram usage:        4 bytes
 29338 ;; Hardware stack levels used:    1
 29339 ;; Hardware stack levels required when called:   11
 29340 ;; This function calls:
 29341 ;;		_SwTimerSetTimeout
 29342 ;;		_SwTimerStart
 29343 ;;		___lldiv
 29344 ;; This function is called by:
 29345 ;;		_AckRetransmissionCallback
 29346 ;;		_LORAWAN_RxDone
 29347 ;; This function uses a non-reentrant model
 29348 ;;
 29349                           
 29350                           	psect	text166
 29351  00A5AC                     __ptext166:
 29352                           	opt stack 0
 29353  00A5AC                     _UpdateRetransmissionAckTimeoutState:
 29354                           	opt stack 16
 29355                           
 29356                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 29357                           
 29358                           ;incstack = 0
 29359  00A5AC  0102               	movlb	2	; () banked
 29360  00A5AE  5106               	movf	(_loRa+2)& (0+255),w,b
 29361  00A5B0  0BF0               	andlw	-16
 29362  00A5B2  0906               	iorlw	6
 29363  00A5B4  6F06               	movwf	(_loRa+2)& (0+255),b
 29364                           
 29365                           ; BSR set to: 2
 29366                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 29367  00A5B6  51A4               	movf	(_loRa+160)& (0+255),w,b
 29368  00A5B8  0100               	movlb	0	; () banked
 29369  00A5BA  6F9A               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 29370  00A5BC  0102               	movlb	2	; () banked
 29371  00A5BE  51A5               	movf	(_loRa+161)& (0+255),w,b
 29372  00A5C0  0100               	movlb	0	; () banked
 29373  00A5C2  6F9B               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 29374  00A5C4  6B9C               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 29375  00A5C6  6B9D               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 29376  00A5C8  0E0C               	movlw	12
 29377  00A5CA                     u22315:
 29378  00A5CA  90D8               	bcf	status,0,c
 29379  00A5CC  379A               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 29380  00A5CE  379B               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 29381  00A5D0  379C               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 29382  00A5D2  379D               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 29383  00A5D4  2EE8               	decfsz	wreg,f,c
 29384  00A5D6  D7F9               	goto	u22315
 29385  00A5D8  C09A  F060         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 29386  00A5DC  C09B  F061         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 29387  00A5E0  C09C  F062         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 29388  00A5E4  C09D  F063         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 29389  00A5E8  0E7D               	movlw	125
 29390  00A5EA  6F64               	movwf	___lldiv@divisor& (0+255),b
 29391  00A5EC  0E00               	movlw	0
 29392  00A5EE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 29393  00A5F0  0E00               	movlw	0
 29394  00A5F2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 29395  00A5F4  0E00               	movlw	0
 29396  00A5F6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 29397  00A5F8  ECB0  F050         	call	___lldiv	;wreg free
 29398  00A5FC  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 29399  00A600  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 29400  00A604  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 29401  00A608  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 29402  00A60C  0102               	movlb	2	; () banked
 29403  00A60E  51EC               	movf	(_loRa+232)& (0+255),w,b
 29404  00A610  ECD7  F05A         	call	_SwTimerSetTimeout
 29405                           
 29406                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 29407  00A614  0102               	movlb	2	; () banked
 29408  00A616  51EC               	movf	(_loRa+232)& (0+255),w,b
 29409  00A618  EC5C  F04D         	call	_SwTimerStart
 29410  00A61C  0012               	return		;funcret
 29411  00A61E                     __end_of_UpdateRetransmissionAckTimeoutState:
 29412                           	opt stack 0
 29413                           tosu	equ	0xFFF
 29414                           tosh	equ	0xFFE
 29415                           tosl	equ	0xFFD
 29416                           pclath	equ	0xFFA
 29417                           tblptru	equ	0xFF8
 29418                           tblptrh	equ	0xFF7
 29419                           tblptrl	equ	0xFF6
 29420                           tablat	equ	0xFF5
 29421                           prodh	equ	0xFF4
 29422                           prodl	equ	0xFF3
 29423                           intcon	equ	0xFF2
 29424                           intcon2	equ	0xFF1
 29425                           intcon3	equ	0xFF0
 29426                           postinc0	equ	0xFEE
 29427                           wreg	equ	0xFE8
 29428                           postinc1	equ	0xFE6
 29429                           postdec1	equ	0xFE5
 29430                           plusw1	equ	0xFE3
 29431                           fsr1h	equ	0xFE2
 29432                           fsr1l	equ	0xFE1
 29433                           indf2	equ	0xFDF
 29434                           postinc2	equ	0xFDE
 29435                           postdec2	equ	0xFDD
 29436                           fsr2h	equ	0xFDA
 29437                           fsr2l	equ	0xFD9
 29438                           status	equ	0xFD8
 29439                           
 29440 ;; *************** function _UpdateDLSettings *****************
 29441 ;; Defined at:
 29442 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29443 ;; Parameters:    Size  Location     Type
 29444 ;;  dlRx2Dr         1    wreg     unsigned char 
 29445 ;;  dlRx1DrOffse    1    0[BANK0 ] unsigned char 
 29446 ;; Auto vars:     Size  Location     Type
 29447 ;;  dlRx2Dr         1    1[BANK0 ] unsigned char 
 29448 ;; Return value:  Size  Location     Type
 29449 ;;                  1    wreg      void 
 29450 ;; Registers used:
 29451 ;;		wreg, status,2, status,0
 29452 ;; Tracked objects:
 29453 ;;		On entry : 0/0
 29454 ;;		On exit  : 0/0
 29455 ;;		Unchanged: 0/0
 29456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29457 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29460 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29461 ;;Total ram usage:        2 bytes
 29462 ;; Hardware stack levels used:    1
 29463 ;; Hardware stack levels required when called:    7
 29464 ;; This function calls:
 29465 ;;		Nothing
 29466 ;; This function is called by:
 29467 ;;		_LORAWAN_RxDone
 29468 ;; This function uses a non-reentrant model
 29469 ;;
 29470                           
 29471                           	psect	text167
 29472  00C152                     __ptext167:
 29473                           	opt stack 0
 29474  00C152                     _UpdateDLSettings:
 29475                           	opt stack 19
 29476                           
 29477                           ;incstack = 0
 29478                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 29479  00C152  0100               	movlb	0	; () banked
 29480  00C154  6F61               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 29481                           
 29482                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 29483  00C156  0E08               	movlw	8
 29484  00C158  0100               	movlb	0	; () banked
 29485  00C15A  6161               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 29486  00C15C  D002               	goto	l1505
 29487                           
 29488                           ; BSR set to: 0
 29489                           ;lorawan_eu.c: 891: {
 29490                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 29491  00C15E  C061  F220         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 29492  00C162                     l1505:
 29493                           
 29494                           ; BSR set to: 0
 29495                           ;lorawan_eu.c: 893: }
 29496                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 29497                           
 29498                           ; BSR set to: 0
 29499  00C162  0E06               	movlw	6
 29500  00C164  6160               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 29501  00C166  0012               	return	
 29502                           
 29503                           ; BSR set to: 0
 29504                           ;lorawan_eu.c: 896: {
 29505                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 29506  00C168  C060  F2F3         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 29507  00C16C  0012               	return	
 29508  00C16E                     __end_of_UpdateDLSettings:
 29509                           	opt stack 0
 29510                           tosu	equ	0xFFF
 29511                           tosh	equ	0xFFE
 29512                           tosl	equ	0xFFD
 29513                           pclath	equ	0xFFA
 29514                           tblptru	equ	0xFF8
 29515                           tblptrh	equ	0xFF7
 29516                           tblptrl	equ	0xFF6
 29517                           tablat	equ	0xFF5
 29518                           prodh	equ	0xFF4
 29519                           prodl	equ	0xFF3
 29520                           intcon	equ	0xFF2
 29521                           intcon2	equ	0xFF1
 29522                           intcon3	equ	0xFF0
 29523                           postinc0	equ	0xFEE
 29524                           wreg	equ	0xFE8
 29525                           postinc1	equ	0xFE6
 29526                           postdec1	equ	0xFE5
 29527                           plusw1	equ	0xFE3
 29528                           fsr1h	equ	0xFE2
 29529                           fsr1l	equ	0xFE1
 29530                           indf2	equ	0xFDF
 29531                           postinc2	equ	0xFDE
 29532                           postdec2	equ	0xFDD
 29533                           fsr2h	equ	0xFDA
 29534                           fsr2l	equ	0xFD9
 29535                           status	equ	0xFD8
 29536                           
 29537 ;; *************** function _UpdateCfList *****************
 29538 ;; Defined at:
 29539 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29540 ;; Parameters:    Size  Location     Type
 29541 ;;  bufferLength    1    wreg     unsigned char 
 29542 ;;  joinAccept      2   70[BANK0 ] PTR struct .
 29543 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 29544 ;; Auto vars:     Size  Location     Type
 29545 ;;  bufferLength    1   72[BANK0 ] unsigned char 
 29546 ;;  frequency       4   73[BANK0 ] unsigned long 
 29547 ;;  i               1   78[BANK0 ] unsigned char 
 29548 ;;  channelIndex    1   77[BANK0 ] unsigned char 
 29549 ;; Return value:  Size  Location     Type
 29550 ;;                  1    wreg      void 
 29551 ;; Registers used:
 29552 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29553 ;; Tracked objects:
 29554 ;;		On entry : 0/0
 29555 ;;		On exit  : 0/0
 29556 ;;		Unchanged: 0/0
 29557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29559 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29561 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29562 ;;Total ram usage:        9 bytes
 29563 ;; Hardware stack levels used:    1
 29564 ;; Hardware stack levels required when called:    9
 29565 ;; This function calls:
 29566 ;;		_LORAWAN_SetChannelIdStatus
 29567 ;;		_ValidateFrequency
 29568 ;;		___lmul
 29569 ;;		___wmul
 29570 ;;		_memcpy
 29571 ;; This function is called by:
 29572 ;;		_LORAWAN_RxDone
 29573 ;; This function uses a non-reentrant model
 29574 ;;
 29575                           
 29576                           	psect	text168
 29577  006244                     __ptext168:
 29578                           	opt stack 0
 29579  006244                     _UpdateCfList:
 29580                           	opt stack 17
 29581                           
 29582                           ; BSR set to: 0
 29583                           ;incstack = 0
 29584                           ;UpdateCfList@bufferLength stored from wreg
 29585  006244  0100               	movlb	0	; () banked
 29586  006246  6FA8               	movwf	UpdateCfList@bufferLength& (0+255),b
 29587                           
 29588                           ;lorawan_eu.c: 826: uint8_t i;
 29589                           ;lorawan_eu.c: 827: uint32_t frequency;
 29590                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 29591                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 29592  006248  0E21               	movlw	33
 29593  00624A  0100               	movlb	0	; () banked
 29594  00624C  19A8               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 29595  00624E  A4D8               	btfss	status,2,c
 29596  006250  0012               	return	
 29597                           
 29598                           ; BSR set to: 0
 29599                           ;lorawan_eu.c: 831: {
 29600                           ;lorawan_eu.c: 833: channelIndex = 3;
 29601  006252  0E03               	movlw	3
 29602  006254  6FAD               	movwf	UpdateCfList@channelIndex& (0+255),b
 29603                           
 29604                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 29605  006256  0E00               	movlw	0
 29606  006258  6FAE               	movwf	UpdateCfList@i& (0+255),b
 29607  00625A                     l19505:
 29608                           
 29609                           ; BSR set to: 0
 29610  00625A  0E04               	movlw	4
 29611  00625C  65AE               	cpfsgt	UpdateCfList@i& (0+255),b
 29612  00625E  D001               	goto	l1489
 29613  006260  D0E5               	goto	u22080
 29614  006262                     l1489:
 29615                           
 29616                           ; BSR set to: 0
 29617                           ;lorawan_eu.c: 836: {
 29618                           ;lorawan_eu.c: 837: frequency = 0;
 29619                           
 29620                           ; BSR set to: 0
 29621  006262  0E00               	movlw	0
 29622  006264  6FA9               	movwf	UpdateCfList@frequency& (0+255),b
 29623  006266  0E00               	movlw	0
 29624  006268  6FAA               	movwf	(UpdateCfList@frequency+1)& (0+255),b
 29625  00626A  0E00               	movlw	0
 29626  00626C  6FAB               	movwf	(UpdateCfList@frequency+2)& (0+255),b
 29627  00626E  0E00               	movlw	0
 29628  006270  6FAC               	movwf	(UpdateCfList@frequency+3)& (0+255),b
 29629                           
 29630                           ; BSR set to: 0
 29631                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 29632  006272  0EA9               	movlw	low UpdateCfList@frequency
 29633  006274  6F60               	movwf	memcpy@d1& (0+255),b
 29634  006276  0E00               	movlw	high UpdateCfList@frequency
 29635  006278  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29636  00627A  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29637  00627C  0D03               	mullw	3
 29638  00627E  0E0D               	movlw	13
 29639  006280  26F3               	addwf	prodl,f,c
 29640  006282  0E00               	movlw	0
 29641  006284  22F4               	addwfc	prodh,f,c
 29642  006286  50F3               	movf	prodl,w,c
 29643  006288  25A6               	addwf	UpdateCfList@joinAccept& (0+255),w,b
 29644  00628A  6F62               	movwf	memcpy@s1& (0+255),b
 29645  00628C  50F4               	movf	prodh,w,c
 29646  00628E  21A7               	addwfc	(UpdateCfList@joinAccept+1)& (0+255),w,b
 29647  006290  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 29648  006292  0E00               	movlw	0
 29649  006294  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29650  006296  0E03               	movlw	3
 29651  006298  6F64               	movwf	memcpy@n& (0+255),b
 29652  00629A  ECAB  F055         	call	_memcpy	;wreg free
 29653                           
 29654                           ;lorawan_eu.c: 839: frequency *= 100;
 29655  00629E  C0A9  F09A         	movff	UpdateCfList@frequency,___lmul@multiplier
 29656  0062A2  C0AA  F09B         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 29657  0062A6  C0AB  F09C         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 29658  0062AA  C0AC  F09D         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 29659  0062AE  0E64               	movlw	100
 29660  0062B0  0100               	movlb	0	; () banked
 29661  0062B2  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 29662  0062B4  0E00               	movlw	0
 29663  0062B6  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 29664  0062B8  0E00               	movlw	0
 29665  0062BA  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29666  0062BC  0E00               	movlw	0
 29667  0062BE  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29668  0062C0  EC1D  F057         	call	___lmul	;wreg free
 29669  0062C4  C09A  F0A9         	movff	?___lmul,UpdateCfList@frequency
 29670  0062C8  C09B  F0AA         	movff	?___lmul+1,UpdateCfList@frequency+1
 29671  0062CC  C09C  F0AB         	movff	?___lmul+2,UpdateCfList@frequency+2
 29672  0062D0  C09D  F0AC         	movff	?___lmul+3,UpdateCfList@frequency+3
 29673                           
 29674                           ;lorawan_eu.c: 840: if (frequency != 0)
 29675  0062D4  0100               	movlb	0	; () banked
 29676  0062D6  51A9               	movf	UpdateCfList@frequency& (0+255),w,b
 29677  0062D8  11AA               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 29678  0062DA  11AB               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 29679  0062DC  11AC               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 29680  0062DE  B4D8               	btfsc	status,2,c
 29681  0062E0  D09B               	goto	l1491
 29682                           
 29683                           ; BSR set to: 0
 29684                           ;lorawan_eu.c: 841: {
 29685                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 29686  0062E2  C0A9  F060         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 29687  0062E6  C0AA  F061         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 29688  0062EA  C0AB  F062         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 29689  0062EE  C0AC  F063         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 29690  0062F2  EC83  F054         	call	_ValidateFrequency	;wreg free
 29691  0062F6  0900               	iorlw	0
 29692  0062F8  A4D8               	btfss	status,2,c
 29693  0062FA  D095               	goto	l1493
 29694                           
 29695                           ;lorawan_eu.c: 843: {
 29696                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 29697  0062FC  0100               	movlb	0	; () banked
 29698  0062FE  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29699  006300  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29700  006302  6F6E               	movwf	___wmul@multiplier& (0+255),b
 29701  006304  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 29702  006306  376F               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 29703  006308  0E00               	movlw	0
 29704  00630A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29705  00630C  0E0E               	movlw	14
 29706  00630E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 29707  006310  EC82  F05E         	call	___wmul	;wreg free
 29708  006314  0E00               	movlw	low _Channels
 29709  006316  0100               	movlb	0	; () banked
 29710  006318  256E               	addwf	?___wmul& (0+255),w,b
 29711  00631A  6ED9               	movwf	fsr2l,c
 29712  00631C  0E04               	movlw	high _Channels
 29713  00631E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 29714  006320  6EDA               	movwf	fsr2h,c
 29715  006322  C0A9  FFDE         	movff	UpdateCfList@frequency,postinc2
 29716  006326  C0AA  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 29717  00632A  C0AB  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 29718  00632E  C0AC  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 29719                           
 29720                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 29721  006332  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29722  006334  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29723  006336  6F6E               	movwf	___wmul@multiplier& (0+255),b
 29724  006338  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 29725  00633A  376F               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 29726  00633C  0E00               	movlw	0
 29727  00633E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29728  006340  0E0E               	movlw	14
 29729  006342  6F70               	movwf	___wmul@multiplicand& (0+255),b
 29730  006344  EC82  F05E         	call	___wmul	;wreg free
 29731  006348  0E05               	movlw	5
 29732  00634A  0100               	movlb	0	; () banked
 29733  00634C  276E               	addwf	?___wmul& (0+255),f,b
 29734  00634E  0E00               	movlw	0
 29735  006350  236F               	addwfc	(?___wmul+1)& (0+255),f,b
 29736  006352  0E00               	movlw	low _Channels
 29737  006354  256E               	addwf	?___wmul& (0+255),w,b
 29738  006356  6ED9               	movwf	fsr2l,c
 29739  006358  0E04               	movlw	high _Channels
 29740  00635A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 29741  00635C  6EDA               	movwf	fsr2h,c
 29742  00635E  0104               	movlb	4	; () banked
 29743  006360  50DF               	movf	223,w,c
 29744  006362  0B0F               	andlw	-241
 29745  006364  0950               	iorlw	80
 29746  006366  6EDF               	movwf	223,c
 29747                           
 29748                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 29749  006368  0100               	movlb	0	; () banked
 29750  00636A  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29751  00636C  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29752  00636E  6F6E               	movwf	___wmul@multiplier& (0+255),b
 29753  006370  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 29754  006372  376F               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 29755  006374  0E00               	movlw	0
 29756  006376  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29757  006378  0E0E               	movlw	14
 29758  00637A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 29759  00637C  EC82  F05E         	call	___wmul	;wreg free
 29760  006380  0E05               	movlw	5
 29761  006382  0100               	movlb	0	; () banked
 29762  006384  276E               	addwf	?___wmul& (0+255),f,b
 29763  006386  0E00               	movlw	0
 29764  006388  236F               	addwfc	(?___wmul+1)& (0+255),f,b
 29765  00638A  0E00               	movlw	low _Channels
 29766  00638C  256E               	addwf	?___wmul& (0+255),w,b
 29767  00638E  6ED9               	movwf	fsr2l,c
 29768  006390  0E04               	movlw	high _Channels
 29769  006392  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 29770  006394  6EDA               	movwf	fsr2h,c
 29771  006396  0104               	movlb	4	; () banked
 29772  006398  90DF               	bcf	223,0,c
 29773  00639A  92DF               	bcf	223,1,c
 29774  00639C  94DF               	bcf	223,2,c
 29775  00639E  96DF               	bcf	223,3,c
 29776                           
 29777                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 29778  0063A0  0100               	movlb	0	; () banked
 29779  0063A2  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29780  0063A4  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29781  0063A6  6F6E               	movwf	___wmul@multiplier& (0+255),b
 29782  0063A8  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 29783  0063AA  376F               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 29784  0063AC  0E00               	movlw	0
 29785  0063AE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29786  0063B0  0E0E               	movlw	14
 29787  0063B2  6F70               	movwf	___wmul@multiplicand& (0+255),b
 29788  0063B4  EC82  F05E         	call	___wmul	;wreg free
 29789  0063B8  0E06               	movlw	6
 29790  0063BA  0100               	movlb	0	; () banked
 29791  0063BC  276E               	addwf	?___wmul& (0+255),f,b
 29792  0063BE  0E00               	movlw	0
 29793  0063C0  236F               	addwfc	(?___wmul+1)& (0+255),f,b
 29794  0063C2  0E00               	movlw	low _Channels
 29795  0063C4  256E               	addwf	?___wmul& (0+255),w,b
 29796  0063C6  6ED9               	movwf	fsr2l,c
 29797  0063C8  0E04               	movlw	high _Channels
 29798  0063CA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 29799  0063CC  6EDA               	movwf	fsr2h,c
 29800  0063CE  0EE7               	movlw	231
 29801  0063D0  6EDE               	movwf	postinc2,c
 29802  0063D2  0E03               	movlw	3
 29803  0063D4  6EDD               	movwf	postdec2,c
 29804                           
 29805                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 29806  0063D6  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29807  0063D8  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29808  0063DA  6F6E               	movwf	___wmul@multiplier& (0+255),b
 29809  0063DC  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 29810  0063DE  376F               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 29811  0063E0  0E00               	movlw	0
 29812  0063E2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29813  0063E4  0E0E               	movlw	14
 29814  0063E6  6F70               	movwf	___wmul@multiplicand& (0+255),b
 29815  0063E8  EC82  F05E         	call	___wmul	;wreg free
 29816  0063EC  0E0D               	movlw	13
 29817  0063EE  0100               	movlb	0	; () banked
 29818  0063F0  276E               	addwf	?___wmul& (0+255),f,b
 29819  0063F2  0E00               	movlw	0
 29820  0063F4  236F               	addwfc	(?___wmul+1)& (0+255),f,b
 29821  0063F6  0E00               	movlw	low _Channels
 29822  0063F8  256E               	addwf	?___wmul& (0+255),w,b
 29823  0063FA  6ED9               	movwf	fsr2l,c
 29824  0063FC  0E04               	movlw	high _Channels
 29825  0063FE  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 29826  006400  6EDA               	movwf	fsr2h,c
 29827  006402  0EFF               	movlw	255
 29828  006404  6EDF               	movwf	indf2,c
 29829                           
 29830                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 29831  006406  0E01               	movlw	1
 29832  006408  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 29833  00640A  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29834  00640C  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29835  00640E  ECC3  F056         	call	_LORAWAN_SetChannelIdStatus
 29836                           
 29837                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 29838  006412  0102               	movlb	2	; () banked
 29839  006414  8707               	bsf	(_loRa+3)& (0+255),3,b
 29840                           
 29841                           ; BSR set to: 2
 29842                           ;lorawan_eu.c: 851: }
 29843                           ;lorawan_eu.c: 852: }
 29844  006416  D007               	goto	l1493
 29845  006418                     l1491:
 29846                           
 29847                           ;lorawan_eu.c: 853: else
 29848                           ;lorawan_eu.c: 854: {
 29849                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 29850                           
 29851                           ; BSR set to: 2
 29852  006418  0E00               	movlw	0
 29853  00641A  0100               	movlb	0	; () banked
 29854  00641C  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 29855  00641E  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29856  006420  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29857  006422  ECC3  F056         	call	_LORAWAN_SetChannelIdStatus
 29858  006426                     l1493:
 29859  006426  0100               	movlb	0	; () banked
 29860  006428  2BAE               	incf	UpdateCfList@i& (0+255),f,b
 29861  00642A  D717               	goto	l19505
 29862  00642C                     u22080:
 29863                           
 29864                           ; BSR set to: 0
 29865                           ;lorawan_eu.c: 856: }
 29866                           ;lorawan_eu.c: 857: }
 29867                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 29868  00642C  0102               	movlb	2	; () banked
 29869  00642E  8707               	bsf	(_loRa+3)& (0+255),3,b
 29870  006430  0012               	return	
 29871  006432                     __end_of_UpdateCfList:
 29872                           	opt stack 0
 29873                           tosu	equ	0xFFF
 29874                           tosh	equ	0xFFE
 29875                           tosl	equ	0xFFD
 29876                           pclath	equ	0xFFA
 29877                           tblptru	equ	0xFF8
 29878                           tblptrh	equ	0xFF7
 29879                           tblptrl	equ	0xFF6
 29880                           tablat	equ	0xFF5
 29881                           prodh	equ	0xFF4
 29882                           prodl	equ	0xFF3
 29883                           intcon	equ	0xFF2
 29884                           intcon2	equ	0xFF1
 29885                           intcon3	equ	0xFF0
 29886                           postinc0	equ	0xFEE
 29887                           wreg	equ	0xFE8
 29888                           postinc1	equ	0xFE6
 29889                           postdec1	equ	0xFE5
 29890                           plusw1	equ	0xFE3
 29891                           fsr1h	equ	0xFE2
 29892                           fsr1l	equ	0xFE1
 29893                           indf2	equ	0xFDF
 29894                           postinc2	equ	0xFDE
 29895                           postdec2	equ	0xFDD
 29896                           fsr2h	equ	0xFDA
 29897                           fsr2l	equ	0xFD9
 29898                           status	equ	0xFD8
 29899                           
 29900 ;; *************** function _StartReTxTimer *****************
 29901 ;; Defined at:
 29902 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29903 ;; Parameters:    Size  Location     Type
 29904 ;;		None
 29905 ;; Auto vars:     Size  Location     Type
 29906 ;;  minim           4   62[BANK0 ] unsigned long 
 29907 ;;  i               1   66[BANK0 ] unsigned char 
 29908 ;; Return value:  Size  Location     Type
 29909 ;;                  1    wreg      void 
 29910 ;; Registers used:
 29911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29912 ;; Tracked objects:
 29913 ;;		On entry : 0/0
 29914 ;;		On exit  : 0/0
 29915 ;;		Unchanged: 0/0
 29916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29918 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29919 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29920 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29921 ;;Total ram usage:        9 bytes
 29922 ;; Hardware stack levels used:    1
 29923 ;; Hardware stack levels required when called:   11
 29924 ;; This function calls:
 29925 ;;		_SwTimerSetTimeout
 29926 ;;		_SwTimerStart
 29927 ;;		___lldiv
 29928 ;; This function is called by:
 29929 ;;		_LORAWAN_RxDone
 29930 ;; This function uses a non-reentrant model
 29931 ;;
 29932                           
 29933                           	psect	text169
 29934  00700C                     __ptext169:
 29935                           	opt stack 0
 29936  00700C                     _StartReTxTimer:
 29937                           	opt stack 15
 29938                           
 29939                           ;lorawan_eu.c: 904: uint8_t i;
 29940                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 29941                           
 29942                           ;incstack = 0
 29943  00700C  0100               	movlb	0	; () banked
 29944  00700E  699E               	setf	StartReTxTimer@minim& (0+255),b
 29945  007010  699F               	setf	(StartReTxTimer@minim+1)& (0+255),b
 29946  007012  69A0               	setf	(StartReTxTimer@minim+2)& (0+255),b
 29947  007014  69A1               	setf	(StartReTxTimer@minim+3)& (0+255),b
 29948                           
 29949                           ; BSR set to: 0
 29950                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 29951  007016  0E00               	movlw	0
 29952  007018  6FA2               	movwf	StartReTxTimer@i& (0+255),b
 29953  00701A  D07C               	goto	l1510
 29954  00701C                     
 29955                           ;lorawan_eu.c: 908: {
 29956                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 29957                           
 29958                           ; BSR set to: 0
 29959  00701C  0100               	movlb	0	; () banked
 29960  00701E  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 29961  007020  0D0E               	mullw	14
 29962  007022  0E04               	movlw	4
 29963  007024  26F3               	addwf	prodl,f,c
 29964  007026  0E00               	movlw	0
 29965  007028  22F4               	addwfc	prodh,f,c
 29966  00702A  0E00               	movlw	low _Channels
 29967  00702C  24F3               	addwf	prodl,w,c
 29968  00702E  6ED9               	movwf	fsr2l,c
 29969  007030  0E04               	movlw	high _Channels
 29970  007032  20F4               	addwfc	prodh,w,c
 29971  007034  6EDA               	movwf	fsr2h,c
 29972  007036  04DE               	decf	postinc2,w,c
 29973  007038  A4D8               	btfss	status,2,c
 29974  00703A  D06A               	goto	l1512
 29975                           
 29976                           ; BSR set to: 0
 29977  00703C  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 29978  00703E  0D0E               	mullw	14
 29979  007040  0E08               	movlw	8
 29980  007042  26F3               	addwf	prodl,f,c
 29981  007044  0E00               	movlw	0
 29982  007046  22F4               	addwfc	prodh,f,c
 29983  007048  0E00               	movlw	low _Channels
 29984  00704A  24F3               	addwf	prodl,w,c
 29985  00704C  6ED9               	movwf	fsr2l,c
 29986  00704E  0E04               	movlw	high _Channels
 29987  007050  20F4               	addwfc	prodh,w,c
 29988  007052  6EDA               	movwf	fsr2h,c
 29989  007054  50DE               	movf	postinc2,w,c
 29990  007056  10DE               	iorwf	postinc2,w,c
 29991  007058  10DE               	iorwf	postinc2,w,c
 29992  00705A  10DE               	iorwf	postinc2,w,c
 29993  00705C  B4D8               	btfsc	status,2,c
 29994  00705E  D058               	goto	l1512
 29995                           
 29996                           ; BSR set to: 0
 29997  007060  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 29998  007062  0D0E               	mullw	14
 29999  007064  0E08               	movlw	8
 30000  007066  26F3               	addwf	prodl,f,c
 30001  007068  0E00               	movlw	0
 30002  00706A  22F4               	addwfc	prodh,f,c
 30003  00706C  0E00               	movlw	low _Channels
 30004  00706E  24F3               	addwf	prodl,w,c
 30005  007070  6ED9               	movwf	fsr2l,c
 30006  007072  0E04               	movlw	high _Channels
 30007  007074  20F4               	addwfc	prodh,w,c
 30008  007076  6EDA               	movwf	fsr2h,c
 30009  007078  50DE               	movf	postinc2,w,c
 30010  00707A  5D9E               	subwf	StartReTxTimer@minim& (0+255),w,b
 30011  00707C  50DE               	movf	postinc2,w,c
 30012  00707E  599F               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 30013  007080  50DE               	movf	postinc2,w,c
 30014  007082  59A0               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 30015  007084  50DE               	movf	postinc2,w,c
 30016  007086  59A1               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 30017  007088  A0D8               	btfss	status,0,c
 30018  00708A  D042               	goto	l1512
 30019                           
 30020                           ; BSR set to: 0
 30021  00708C  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 30022  00708E  0D0E               	mullw	14
 30023  007090  0E05               	movlw	5
 30024  007092  26F3               	addwf	prodl,f,c
 30025  007094  0E00               	movlw	0
 30026  007096  22F4               	addwfc	prodh,f,c
 30027  007098  0E00               	movlw	low _Channels
 30028  00709A  24F3               	addwf	prodl,w,c
 30029  00709C  6ED9               	movwf	fsr2l,c
 30030  00709E  0E04               	movlw	high _Channels
 30031  0070A0  20F4               	addwfc	prodh,w,c
 30032  0070A2  6EDA               	movwf	fsr2h,c
 30033  0070A4  0104               	movlb	4	; () banked
 30034  0070A6  50DF               	movf	223,w,c
 30035  0070A8  0B0F               	andlw	15
 30036  0070AA  0100               	movlb	0	; () banked
 30037  0070AC  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 30038  0070AE  519A               	movf	??_StartReTxTimer& (0+255),w,b
 30039  0070B0  0102               	movlb	2	; () banked
 30040  0070B2  5DE3               	subwf	(_loRa+223)& (0+255),w,b
 30041  0070B4  A0D8               	btfss	status,0,c
 30042  0070B6  D02C               	goto	l1512
 30043                           
 30044                           ; BSR set to: 2
 30045  0070B8  0100               	movlb	0	; () banked
 30046  0070BA  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 30047  0070BC  0D0E               	mullw	14
 30048  0070BE  0E05               	movlw	5
 30049  0070C0  26F3               	addwf	prodl,f,c
 30050  0070C2  0E00               	movlw	0
 30051  0070C4  22F4               	addwfc	prodh,f,c
 30052  0070C6  0E00               	movlw	low _Channels
 30053  0070C8  24F3               	addwf	prodl,w,c
 30054  0070CA  6ED9               	movwf	fsr2l,c
 30055  0070CC  0E04               	movlw	high _Channels
 30056  0070CE  20F4               	addwfc	prodh,w,c
 30057  0070D0  6EDA               	movwf	fsr2h,c
 30058  0070D2  0104               	movlb	4	; () banked
 30059  0070D4  38DF               	swapf	223,w,c
 30060  0070D6  0B0F               	andlw	15
 30061  0070D8  0100               	movlb	0	; () banked
 30062  0070DA  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 30063  0070DC  0102               	movlb	2	; () banked
 30064  0070DE  51E3               	movf	(_loRa+223)& (0+255),w,b
 30065  0070E0  0100               	movlb	0	; () banked
 30066  0070E2  5D9A               	subwf	??_StartReTxTimer& (0+255),w,b
 30067  0070E4  A0D8               	btfss	status,0,c
 30068  0070E6  D014               	goto	l1512
 30069                           
 30070                           ; BSR set to: 0
 30071                           ;lorawan_eu.c: 910: {
 30072                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 30073  0070E8  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 30074  0070EA  0D0E               	mullw	14
 30075  0070EC  0E08               	movlw	8
 30076  0070EE  26F3               	addwf	prodl,f,c
 30077  0070F0  0E00               	movlw	0
 30078  0070F2  22F4               	addwfc	prodh,f,c
 30079  0070F4  0E00               	movlw	low _Channels
 30080  0070F6  24F3               	addwf	prodl,w,c
 30081  0070F8  6ED9               	movwf	fsr2l,c
 30082  0070FA  0E04               	movlw	high _Channels
 30083  0070FC  20F4               	addwfc	prodh,w,c
 30084  0070FE  6EDA               	movwf	fsr2h,c
 30085  007100  CFDE F09E          	movff	postinc2,StartReTxTimer@minim
 30086  007104  CFDE F09F          	movff	postinc2,StartReTxTimer@minim+1
 30087  007108  CFDE F0A0          	movff	postinc2,StartReTxTimer@minim+2
 30088  00710C  CFDE F0A1          	movff	postinc2,StartReTxTimer@minim+3
 30089  007110                     l1512:
 30090                           
 30091                           ; BSR set to: 0
 30092  007110  0100               	movlb	0	; () banked
 30093  007112  2BA2               	incf	StartReTxTimer@i& (0+255),f,b
 30094  007114                     l1510:
 30095                           
 30096                           ; BSR set to: 0
 30097                           
 30098                           ; BSR set to: 0
 30099  007114  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 30100  007116  0102               	movlb	2	; () banked
 30101  007118  5DF1               	subwf	(_loRa+237)& (0+255),w,b
 30102  00711A  B0D8               	btfsc	status,0,c
 30103  00711C  D77F               	goto	l1511
 30104                           
 30105                           ; BSR set to: 2
 30106                           ;lorawan_eu.c: 912: }
 30107                           ;lorawan_eu.c: 913: }
 30108                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 30109                           
 30110                           ; BSR set to: 2
 30111  00711E  5106               	movf	(_loRa+2)& (0+255),w,b
 30112  007120  0BF0               	andlw	-16
 30113  007122  0906               	iorlw	6
 30114  007124  6F06               	movwf	(_loRa+2)& (0+255),b
 30115                           
 30116                           ; BSR set to: 2
 30117                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 30118  007126  C09E  F09A         	movff	StartReTxTimer@minim,??_StartReTxTimer
 30119  00712A  C09F  F09B         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 30120  00712E  C0A0  F09C         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 30121  007132  C0A1  F09D         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 30122  007136  0E0C               	movlw	12
 30123  007138                     u22175:
 30124  007138  90D8               	bcf	status,0,c
 30125  00713A  0100               	movlb	0	; () banked
 30126  00713C  379A               	rlcf	??_StartReTxTimer& (0+255),f,b
 30127  00713E  379B               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 30128  007140  379C               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 30129  007142  379D               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 30130  007144  2EE8               	decfsz	wreg,f,c
 30131  007146  D7F8               	goto	u22175
 30132  007148  C09A  F060         	movff	??_StartReTxTimer,___lldiv@dividend
 30133  00714C  C09B  F061         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 30134  007150  C09C  F062         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 30135  007154  C09D  F063         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 30136  007158  0E7D               	movlw	125
 30137  00715A  6F64               	movwf	___lldiv@divisor& (0+255),b
 30138  00715C  0E00               	movlw	0
 30139  00715E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 30140  007160  0E00               	movlw	0
 30141  007162  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 30142  007164  0E00               	movlw	0
 30143  007166  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 30144  007168  ECB0  F050         	call	___lldiv	;wreg free
 30145  00716C  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 30146  007170  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 30147  007174  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 30148  007178  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 30149  00717C  0102               	movlb	2	; () banked
 30150  00717E  51EA               	movf	(_loRa+230)& (0+255),w,b
 30151  007180  ECD7  F05A         	call	_SwTimerSetTimeout
 30152                           
 30153                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 30154  007184  0102               	movlb	2	; () banked
 30155  007186  51EA               	movf	(_loRa+230)& (0+255),w,b
 30156  007188  EC5C  F04D         	call	_SwTimerStart
 30157  00718C  0012               	return		;funcret
 30158  00718E                     __end_of_StartReTxTimer:
 30159                           	opt stack 0
 30160                           tosu	equ	0xFFF
 30161                           tosh	equ	0xFFE
 30162                           tosl	equ	0xFFD
 30163                           pclath	equ	0xFFA
 30164                           tblptru	equ	0xFF8
 30165                           tblptrh	equ	0xFF7
 30166                           tblptrl	equ	0xFF6
 30167                           tablat	equ	0xFF5
 30168                           prodh	equ	0xFF4
 30169                           prodl	equ	0xFF3
 30170                           intcon	equ	0xFF2
 30171                           intcon2	equ	0xFF1
 30172                           intcon3	equ	0xFF0
 30173                           postinc0	equ	0xFEE
 30174                           wreg	equ	0xFE8
 30175                           postinc1	equ	0xFE6
 30176                           postdec1	equ	0xFE5
 30177                           plusw1	equ	0xFE3
 30178                           fsr1h	equ	0xFE2
 30179                           fsr1l	equ	0xFE1
 30180                           indf2	equ	0xFDF
 30181                           postinc2	equ	0xFDE
 30182                           postdec2	equ	0xFDD
 30183                           fsr2h	equ	0xFDA
 30184                           fsr2l	equ	0xFD9
 30185                           status	equ	0xFD8
 30186                           
 30187 ;; *************** function _SetReceptionNotOkState *****************
 30188 ;; Defined at:
 30189 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30190 ;; Parameters:    Size  Location     Type
 30191 ;;		None
 30192 ;; Auto vars:     Size  Location     Type
 30193 ;;		None
 30194 ;; Return value:  Size  Location     Type
 30195 ;;                  1    wreg      void 
 30196 ;; Registers used:
 30197 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30198 ;; Tracked objects:
 30199 ;;		On entry : 0/0
 30200 ;;		On exit  : 0/0
 30201 ;;		Unchanged: 0/0
 30202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30207 ;;Total ram usage:        0 bytes
 30208 ;; Hardware stack levels used:    1
 30209 ;; Hardware stack levels required when called:   14
 30210 ;; This function calls:
 30211 ;;		_LORAWAN_EnterContinuousReceive
 30212 ;;		_RxData
 30213 ;; This function is called by:
 30214 ;;		_LORAWAN_RxDone
 30215 ;; This function uses a non-reentrant model
 30216 ;;
 30217                           
 30218                           	psect	text170
 30219  00A266                     __ptext170:
 30220                           	opt stack 0
 30221  00A266                     _SetReceptionNotOkState:
 30222                           	opt stack 12
 30223                           
 30224                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 30225                           
 30226                           ;incstack = 0
 30227  00A266  0102               	movlb	2	; () banked
 30228  00A268  5106               	movf	(_loRa+2)& (0+255),w,b
 30229  00A26A  0B0F               	andlw	15
 30230  00A26C  0A05               	xorlw	5
 30231  00A26E  B4D8               	btfsc	status,2,c
 30232  00A270  D008               	goto	u22460
 30233                           
 30234                           ; BSR set to: 2
 30235  00A272  5106               	movf	(_loRa+2)& (0+255),w,b
 30236  00A274  0B0F               	andlw	15
 30237  00A276  0A03               	xorlw	3
 30238  00A278  A4D8               	btfss	status,2,c
 30239  00A27A  D029               	goto	l2418
 30240                           
 30241                           ; BSR set to: 2
 30242  00A27C  51F5               	movf	(_loRa+241)& (0+255),w,b
 30243  00A27E  B4D8               	btfsc	status,2,c
 30244  00A280  D026               	goto	l2418
 30245  00A282                     u22460:
 30246                           
 30247                           ; BSR set to: 2
 30248                           ;lorawan.c: 2000: {
 30249                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 30250  00A282  9104               	bcf	_loRa& (0+255),0,b
 30251                           
 30252                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 30253  00A284  9106               	bcf	(_loRa+2)& (0+255),0,b
 30254  00A286  9306               	bcf	(_loRa+2)& (0+255),1,b
 30255  00A288  9506               	bcf	(_loRa+2)& (0+255),2,b
 30256  00A28A  9706               	bcf	(_loRa+2)& (0+255),3,b
 30257                           
 30258                           ; BSR set to: 2
 30259                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 30260  00A28C  5116               	movf	(_loRa+18)& (0+255),w,b
 30261  00A28E  A4D8               	btfss	status,2,c
 30262  00A290  D01C               	goto	u22499
 30263                           
 30264                           ; BSR set to: 2
 30265  00A292  0101               	movlb	1	; () banked
 30266  00A294  510C               	movf	_rxPayload& (0+255),w,b
 30267  00A296  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 30268  00A298  B4D8               	btfsc	status,2,c
 30269  00A29A  D017               	goto	u22499
 30270                           
 30271                           ; BSR set to: 1
 30272                           ;lorawan.c: 2005: {
 30273                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 30274  00A29C  0102               	movlb	2	; () banked
 30275  00A29E  9B04               	bcf	_loRa& (0+255),5,b
 30276                           
 30277                           ; BSR set to: 2
 30278                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 30279  00A2A0  0E00               	movlw	0
 30280  00A2A2  0100               	movlb	0	; () banked
 30281  00A2A4  6F60               	movwf	RxData@pData& (0+255),b
 30282  00A2A6  0E00               	movlw	0
 30283  00A2A8  6F61               	movwf	(RxData@pData+1)& (0+255),b
 30284  00A2AA  0E00               	movlw	0
 30285  00A2AC  6F62               	movwf	RxData@dataLength& (0+255),b
 30286  00A2AE  0E00               	movlw	0
 30287  00A2B0  6F63               	movwf	RxData@status& (0+255),b
 30288  00A2B2  D801               	call	u22498
 30289  00A2B4  D00A               	goto	u22499
 30290  00A2B6                     u22498:
 30291  00A2B6  0005               	push	
 30292  00A2B8  6EFA               	movwf	pclath,c
 30293  00A2BA  0101               	movlb	1	; () banked
 30294  00A2BC  510C               	movf	_rxPayload& (0+255),w,b
 30295  00A2BE  6EFD               	movwf	tosl,c
 30296  00A2C0  510D               	movf	(_rxPayload+1)& (0+255),w,b
 30297  00A2C2  6EFE               	movwf	tosh,c
 30298  00A2C4  6AFF               	clrf	tosu,c
 30299  00A2C6  50FA               	movf	pclath,w,c
 30300  00A2C8  0012               	return		;indir
 30301  00A2CA                     u22499:
 30302                           
 30303                           ;lorawan.c: 2008: }
 30304                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 30305  00A2CA  0102               	movlb	2	; () banked
 30306  00A2CC  9307               	bcf	(_loRa+3)& (0+255),1,b
 30307  00A2CE                     l2418:
 30308                           
 30309                           ; BSR set to: 2
 30310                           ;lorawan.c: 2010: }
 30311                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 30312                           
 30313                           ; BSR set to: 2
 30314  00A2CE  0E02               	movlw	2
 30315  00A2D0  1916               	xorwf	(_loRa+18)& (0+255),w,b
 30316  00A2D2  A4D8               	btfss	status,2,c
 30317  00A2D4  0012               	return	
 30318                           
 30319                           ; BSR set to: 2
 30320                           ;lorawan.c: 2013: {
 30321                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 30322  00A2D6  5106               	movf	(_loRa+2)& (0+255),w,b
 30323  00A2D8  0BF0               	andlw	-16
 30324  00A2DA  0909               	iorlw	9
 30325  00A2DC  6F06               	movwf	(_loRa+2)& (0+255),b
 30326                           
 30327                           ; BSR set to: 2
 30328                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 30329  00A2DE  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 30330  00A2E2  0012               	return	
 30331  00A2E4                     __end_of_SetReceptionNotOkState:
 30332                           	opt stack 0
 30333                           tosu	equ	0xFFF
 30334                           tosh	equ	0xFFE
 30335                           tosl	equ	0xFFD
 30336                           pclath	equ	0xFFA
 30337                           tblptru	equ	0xFF8
 30338                           tblptrh	equ	0xFF7
 30339                           tblptrl	equ	0xFF6
 30340                           tablat	equ	0xFF5
 30341                           prodh	equ	0xFF4
 30342                           prodl	equ	0xFF3
 30343                           intcon	equ	0xFF2
 30344                           intcon2	equ	0xFF1
 30345                           intcon3	equ	0xFF0
 30346                           postinc0	equ	0xFEE
 30347                           wreg	equ	0xFE8
 30348                           postinc1	equ	0xFE6
 30349                           postdec1	equ	0xFE5
 30350                           plusw1	equ	0xFE3
 30351                           fsr1h	equ	0xFE2
 30352                           fsr1l	equ	0xFE1
 30353                           indf2	equ	0xFDF
 30354                           postinc2	equ	0xFDE
 30355                           postdec2	equ	0xFDD
 30356                           fsr2h	equ	0xFDA
 30357                           fsr2l	equ	0xFD9
 30358                           status	equ	0xFD8
 30359                           
 30360 ;; *************** function _SetJoinFailState *****************
 30361 ;; Defined at:
 30362 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30363 ;; Parameters:    Size  Location     Type
 30364 ;;		None
 30365 ;; Auto vars:     Size  Location     Type
 30366 ;;		None
 30367 ;; Return value:  Size  Location     Type
 30368 ;;                  1    wreg      void 
 30369 ;; Registers used:
 30370 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 30371 ;; Tracked objects:
 30372 ;;		On entry : 0/0
 30373 ;;		On exit  : 0/0
 30374 ;;		Unchanged: 0/0
 30375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30380 ;;Total ram usage:        0 bytes
 30381 ;; Hardware stack levels used:    1
 30382 ;; Hardware stack levels required when called:    8
 30383 ;; This function calls:
 30384 ;;		_RxJoinResponse
 30385 ;; This function is called by:
 30386 ;;		_LORAWAN_RxTimeout
 30387 ;;		_LORAWAN_RxDone
 30388 ;; This function uses a non-reentrant model
 30389 ;;
 30390                           
 30391                           	psect	text171
 30392  00B9B6                     __ptext171:
 30393                           	opt stack 0
 30394  00B9B6                     _SetJoinFailState:
 30395                           	opt stack 18
 30396                           
 30397                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 30398                           
 30399                           ;incstack = 0
 30400  00B9B6  0102               	movlb	2	; () banked
 30401  00B9B8  9906               	bcf	(_loRa+2)& (0+255),4,b
 30402                           
 30403                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 30404  00B9BA  9504               	bcf	_loRa& (0+255),2,b
 30405                           
 30406                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 30407  00B9BC  9106               	bcf	(_loRa+2)& (0+255),0,b
 30408  00B9BE  9306               	bcf	(_loRa+2)& (0+255),1,b
 30409  00B9C0  9506               	bcf	(_loRa+2)& (0+255),2,b
 30410  00B9C2  9706               	bcf	(_loRa+2)& (0+255),3,b
 30411                           
 30412                           ; BSR set to: 2
 30413                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 30414  00B9C4  0101               	movlb	1	; () banked
 30415  00B9C6  510E               	movf	(_rxPayload+2)& (0+255),w,b
 30416  00B9C8  110F               	iorwf	(_rxPayload+3)& (0+255),w,b
 30417  00B9CA  B4D8               	btfsc	status,2,c
 30418  00B9CC  0012               	return	
 30419                           
 30420                           ; BSR set to: 1
 30421                           ;lorawan.c: 1110: {
 30422                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 30423  00B9CE  D801               	call	u22038
 30424  00B9D0  0012               	return	
 30425  00B9D2                     u22038:
 30426  00B9D2  0005               	push	
 30427  00B9D4  6EFA               	movwf	pclath,c
 30428  00B9D6  510E               	movf	(_rxPayload+2)& (0+255),w,b
 30429  00B9D8  6EFD               	movwf	tosl,c
 30430  00B9DA  510F               	movf	(_rxPayload+3)& (0+255),w,b
 30431  00B9DC  6EFE               	movwf	tosh,c
 30432  00B9DE  6AFF               	clrf	tosu,c
 30433  00B9E0  50FA               	movf	pclath,w,c
 30434  00B9E2  0E00               	movlw	0
 30435  00B9E4  0012               	return		;indir
 30436  00B9E6                     __end_of_SetJoinFailState:
 30437                           	opt stack 0
 30438                           tosu	equ	0xFFF
 30439                           tosh	equ	0xFFE
 30440                           tosl	equ	0xFFD
 30441                           pclath	equ	0xFFA
 30442                           tblptru	equ	0xFF8
 30443                           tblptrh	equ	0xFF7
 30444                           tblptrl	equ	0xFF6
 30445                           tablat	equ	0xFF5
 30446                           prodh	equ	0xFF4
 30447                           prodl	equ	0xFF3
 30448                           intcon	equ	0xFF2
 30449                           intcon2	equ	0xFF1
 30450                           intcon3	equ	0xFF0
 30451                           postinc0	equ	0xFEE
 30452                           wreg	equ	0xFE8
 30453                           postinc1	equ	0xFE6
 30454                           postdec1	equ	0xFE5
 30455                           plusw1	equ	0xFE3
 30456                           fsr1h	equ	0xFE2
 30457                           fsr1l	equ	0xFE1
 30458                           indf2	equ	0xFDF
 30459                           postinc2	equ	0xFDE
 30460                           postdec2	equ	0xFDD
 30461                           fsr2h	equ	0xFDA
 30462                           fsr2l	equ	0xFD9
 30463                           status	equ	0xFD8
 30464                           
 30465 ;; *************** function _RxJoinResponse *****************
 30466 ;; Defined at:
 30467 ;;		line 83 in file "main.c"
 30468 ;; Parameters:    Size  Location     Type
 30469 ;;  status          1    wreg     unsigned char 
 30470 ;; Auto vars:     Size  Location     Type
 30471 ;;  status          1    0[COMRAM] unsigned char 
 30472 ;; Return value:  Size  Location     Type
 30473 ;;                  1    wreg      void 
 30474 ;; Registers used:
 30475 ;;		wreg
 30476 ;; Tracked objects:
 30477 ;;		On entry : 0/0
 30478 ;;		On exit  : 0/0
 30479 ;;		Unchanged: 0/0
 30480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30485 ;;Total ram usage:        0 bytes
 30486 ;; Hardware stack levels used:    1
 30487 ;; Hardware stack levels required when called:    7
 30488 ;; This function calls:
 30489 ;;		Nothing
 30490 ;; This function is called by:
 30491 ;;		_main
 30492 ;;		_SetJoinFailState
 30493 ;;		_UpdateJoinSuccessState
 30494 ;; This function uses a non-reentrant model
 30495 ;;
 30496                           
 30497                           	psect	text172
 30498  00C6F0                     __ptext172:
 30499                           	opt stack 0
 30500  00C6F0                     _RxJoinResponse:
 30501                           	opt stack 20
 30502                           
 30503                           ;incstack = 0
 30504  00C6F0  0012               	return		;funcret
 30505  00C6F2                     __end_of_RxJoinResponse:
 30506                           	opt stack 0
 30507                           tosu	equ	0xFFF
 30508                           tosh	equ	0xFFE
 30509                           tosl	equ	0xFFD
 30510                           pclath	equ	0xFFA
 30511                           tblptru	equ	0xFF8
 30512                           tblptrh	equ	0xFF7
 30513                           tblptrl	equ	0xFF6
 30514                           tablat	equ	0xFF5
 30515                           prodh	equ	0xFF4
 30516                           prodl	equ	0xFF3
 30517                           intcon	equ	0xFF2
 30518                           intcon2	equ	0xFF1
 30519                           intcon3	equ	0xFF0
 30520                           postinc0	equ	0xFEE
 30521                           wreg	equ	0xFE8
 30522                           postinc1	equ	0xFE6
 30523                           postdec1	equ	0xFE5
 30524                           plusw1	equ	0xFE3
 30525                           fsr1h	equ	0xFE2
 30526                           fsr1l	equ	0xFE1
 30527                           indf2	equ	0xFDF
 30528                           postinc2	equ	0xFDE
 30529                           postdec2	equ	0xFDD
 30530                           fsr2h	equ	0xFDA
 30531                           fsr2l	equ	0xFD9
 30532                           status	equ	0xFD8
 30533                           
 30534 ;; *************** function _MacExecuteCommands *****************
 30535 ;; Defined at:
 30536 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30537 ;; Parameters:    Size  Location     Type
 30538 ;;  buffer          2   80[BANK0 ] PTR unsigned char 
 30539 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 30540 ;;  fOptsLen        1   82[BANK0 ] unsigned char 
 30541 ;; Auto vars:     Size  Location     Type
 30542 ;;  ptr             2   86[BANK0 ] PTR unsigned char 
 30543 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 30544 ;;  done            1   85[BANK0 ] unsigned char 
 30545 ;; Return value:  Size  Location     Type
 30546 ;;                  2   80[BANK0 ] PTR unsigned char 
 30547 ;; Registers used:
 30548 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30549 ;; Tracked objects:
 30550 ;;		On entry : 0/0
 30551 ;;		On exit  : 0/0
 30552 ;;		Unchanged: 0/0
 30553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30554 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30555 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30556 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30557 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30558 ;;Total ram usage:        8 bytes
 30559 ;; Hardware stack levels used:    1
 30560 ;; Hardware stack levels required when called:   11
 30561 ;; This function calls:
 30562 ;;		_ExecuteDevStatus
 30563 ;;		_ExecuteDutyCycle
 30564 ;;		_ExecuteLinkAdr
 30565 ;;		_ExecuteLinkCheck
 30566 ;;		_ExecuteNewChannel
 30567 ;;		_ExecuteRxParamSetupReq
 30568 ;;		_ExecuteRxTimingSetup
 30569 ;; This function is called by:
 30570 ;;		_LORAWAN_RxDone
 30571 ;; This function uses a non-reentrant model
 30572 ;;
 30573                           
 30574                           	psect	text173
 30575  004BB0                     __ptext173:
 30576                           	opt stack 0
 30577  004BB0                     _MacExecuteCommands:
 30578                           	opt stack 15
 30579                           
 30580                           ;lorawan.c: 1577: bool done = 0;
 30581                           
 30582                           ;incstack = 0
 30583  004BB0  0E00               	movlw	0
 30584  004BB2  0100               	movlb	0	; () banked
 30585  004BB4  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 30586                           
 30587                           ; BSR set to: 0
 30588                           ;lorawan.c: 1578: uint8_t *ptr;
 30589                           ;lorawan.c: 1579: ptr = buffer;
 30590  004BB6  C0B0  F0B6         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 30591  004BBA  C0B1  F0B7         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 30592                           
 30593                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 30594  004BBE  D15A               	goto	l2330
 30595  004BC0                     
 30596                           ; BSR set to: 0
 30597                           ;lorawan.c: 1581: {
 30598                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 30599                           
 30600                           ; BSR set to: 0
 30601  004BC0  0102               	movlb	2	; () banked
 30602  004BC2  51AB               	movf	(_loRa+167)& (0+255),w,b
 30603  004BC4  0D02               	mullw	2
 30604  004BC6  0E04               	movlw	low _loRa
 30605  004BC8  0100               	movlb	0	; () banked
 30606  004BCA  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30607  004BCC  0E02               	movlw	high _loRa
 30608  004BCE  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30609  004BD0  0EA8               	movlw	168
 30610  004BD2  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30611  004BD4  0E00               	movlw	0
 30612  004BD6  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30613  004BD8  50F3               	movf	prodl,w,c
 30614  004BDA  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30615  004BDC  50F4               	movf	prodh,w,c
 30616  004BDE  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30617  004BE0  0E01               	movlw	1
 30618  004BE2  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30619  004BE4  6ED9               	movwf	fsr2l,c
 30620  004BE6  0E00               	movlw	0
 30621  004BE8  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30622  004BEA  6EDA               	movwf	fsr2h,c
 30623  004BEC  0102               	movlb	2	; () banked
 30624  004BEE  90DF               	bcf	indf2,0,c
 30625                           
 30626                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 30627  004BF0  51AB               	movf	(_loRa+167)& (0+255),w,b
 30628  004BF2  0D02               	mullw	2
 30629  004BF4  0E04               	movlw	low _loRa
 30630  004BF6  0100               	movlb	0	; () banked
 30631  004BF8  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30632  004BFA  0E02               	movlw	high _loRa
 30633  004BFC  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30634  004BFE  0EA8               	movlw	168
 30635  004C00  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30636  004C02  0E00               	movlw	0
 30637  004C04  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30638  004C06  50F3               	movf	prodl,w,c
 30639  004C08  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30640  004C0A  50F4               	movf	prodh,w,c
 30641  004C0C  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30642  004C0E  0E01               	movlw	1
 30643  004C10  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30644  004C12  6ED9               	movwf	fsr2l,c
 30645  004C14  0E00               	movlw	0
 30646  004C16  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30647  004C18  6EDA               	movwf	fsr2h,c
 30648  004C1A  0102               	movlb	2	; () banked
 30649  004C1C  92DF               	bcf	indf2,1,c
 30650                           
 30651                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 30652  004C1E  51AB               	movf	(_loRa+167)& (0+255),w,b
 30653  004C20  0D02               	mullw	2
 30654  004C22  0E04               	movlw	low _loRa
 30655  004C24  0100               	movlb	0	; () banked
 30656  004C26  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30657  004C28  0E02               	movlw	high _loRa
 30658  004C2A  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30659  004C2C  0EA8               	movlw	168
 30660  004C2E  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30661  004C30  0E00               	movlw	0
 30662  004C32  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30663  004C34  50F3               	movf	prodl,w,c
 30664  004C36  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30665  004C38  50F4               	movf	prodh,w,c
 30666  004C3A  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30667  004C3C  0E01               	movlw	1
 30668  004C3E  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30669  004C40  6ED9               	movwf	fsr2l,c
 30670  004C42  0E00               	movlw	0
 30671  004C44  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30672  004C46  6EDA               	movwf	fsr2h,c
 30673  004C48  0102               	movlb	2	; () banked
 30674  004C4A  94DF               	bcf	indf2,2,c
 30675                           
 30676                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 30677  004C4C  51AB               	movf	(_loRa+167)& (0+255),w,b
 30678  004C4E  0D02               	mullw	2
 30679  004C50  0E04               	movlw	low _loRa
 30680  004C52  0100               	movlb	0	; () banked
 30681  004C54  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30682  004C56  0E02               	movlw	high _loRa
 30683  004C58  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30684  004C5A  0EA8               	movlw	168
 30685  004C5C  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30686  004C5E  0E00               	movlw	0
 30687  004C60  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30688  004C62  50F3               	movf	prodl,w,c
 30689  004C64  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30690  004C66  50F4               	movf	prodh,w,c
 30691  004C68  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30692  004C6A  0E01               	movlw	1
 30693  004C6C  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30694  004C6E  6ED9               	movwf	fsr2l,c
 30695  004C70  0E00               	movlw	0
 30696  004C72  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30697  004C74  6EDA               	movwf	fsr2h,c
 30698  004C76  0102               	movlb	2	; () banked
 30699  004C78  96DF               	bcf	indf2,3,c
 30700                           
 30701                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 30702  004C7A  51AB               	movf	(_loRa+167)& (0+255),w,b
 30703  004C7C  0D02               	mullw	2
 30704  004C7E  0E04               	movlw	low _loRa
 30705  004C80  0100               	movlb	0	; () banked
 30706  004C82  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30707  004C84  0E02               	movlw	high _loRa
 30708  004C86  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30709  004C88  0EA8               	movlw	168
 30710  004C8A  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30711  004C8C  0E00               	movlw	0
 30712  004C8E  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30713  004C90  50F3               	movf	prodl,w,c
 30714  004C92  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30715  004C94  50F4               	movf	prodh,w,c
 30716  004C96  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30717  004C98  0E01               	movlw	1
 30718  004C9A  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30719  004C9C  6ED9               	movwf	fsr2l,c
 30720  004C9E  0E00               	movlw	0
 30721  004CA0  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30722  004CA2  6EDA               	movwf	fsr2h,c
 30723  004CA4  0102               	movlb	2	; () banked
 30724  004CA6  98DF               	bcf	indf2,4,c
 30725                           
 30726                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 30727  004CA8  51AB               	movf	(_loRa+167)& (0+255),w,b
 30728  004CAA  0D02               	mullw	2
 30729  004CAC  0E04               	movlw	low _loRa
 30730  004CAE  0100               	movlb	0	; () banked
 30731  004CB0  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30732  004CB2  0E02               	movlw	high _loRa
 30733  004CB4  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30734  004CB6  0EA8               	movlw	168
 30735  004CB8  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30736  004CBA  0E00               	movlw	0
 30737  004CBC  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30738  004CBE  50F3               	movf	prodl,w,c
 30739  004CC0  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30740  004CC2  50F4               	movf	prodh,w,c
 30741  004CC4  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30742  004CC6  0E01               	movlw	1
 30743  004CC8  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30744  004CCA  6ED9               	movwf	fsr2l,c
 30745  004CCC  0E00               	movlw	0
 30746  004CCE  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30747  004CD0  6EDA               	movwf	fsr2h,c
 30748  004CD2  0102               	movlb	2	; () banked
 30749  004CD4  9ADF               	bcf	indf2,5,c
 30750                           
 30751                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 30752  004CD6  51AB               	movf	(_loRa+167)& (0+255),w,b
 30753  004CD8  0D02               	mullw	2
 30754  004CDA  0E04               	movlw	low _loRa
 30755  004CDC  0100               	movlb	0	; () banked
 30756  004CDE  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30757  004CE0  0E02               	movlw	high _loRa
 30758  004CE2  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30759  004CE4  0EA8               	movlw	168
 30760  004CE6  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30761  004CE8  0E00               	movlw	0
 30762  004CEA  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30763  004CEC  50F3               	movf	prodl,w,c
 30764  004CEE  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30765  004CF0  50F4               	movf	prodh,w,c
 30766  004CF2  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30767  004CF4  0E01               	movlw	1
 30768  004CF6  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30769  004CF8  6ED9               	movwf	fsr2l,c
 30770  004CFA  0E00               	movlw	0
 30771  004CFC  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30772  004CFE  6EDA               	movwf	fsr2h,c
 30773  004D00  0102               	movlb	2	; () banked
 30774  004D02  9CDF               	bcf	indf2,6,c
 30775                           
 30776                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 30777  004D04  51AB               	movf	(_loRa+167)& (0+255),w,b
 30778  004D06  0D02               	mullw	2
 30779  004D08  0E04               	movlw	low _loRa
 30780  004D0A  0100               	movlb	0	; () banked
 30781  004D0C  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30782  004D0E  0E02               	movlw	high _loRa
 30783  004D10  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30784  004D12  0EA8               	movlw	168
 30785  004D14  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30786  004D16  0E00               	movlw	0
 30787  004D18  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30788  004D1A  50F3               	movf	prodl,w,c
 30789  004D1C  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30790  004D1E  50F4               	movf	prodh,w,c
 30791  004D20  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30792  004D22  0E01               	movlw	1
 30793  004D24  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30794  004D26  6ED9               	movwf	fsr2l,c
 30795  004D28  0E00               	movlw	0
 30796  004D2A  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30797  004D2C  6EDA               	movwf	fsr2h,c
 30798  004D2E  0102               	movlb	2	; () banked
 30799  004D30  9EDF               	bcf	indf2,7,c
 30800                           
 30801                           ; BSR set to: 2
 30802                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 30803  004D32  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 30804  004D36  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 30805  004D3A  51AB               	movf	(_loRa+167)& (0+255),w,b
 30806  004D3C  0D02               	mullw	2
 30807  004D3E  0EAC               	movlw	low (_loRa+168)
 30808  004D40  24F3               	addwf	prodl,w,c
 30809  004D42  6EE9               	movwf	fsr0l,c
 30810  004D44  0E02               	movlw	high (_loRa+168)
 30811  004D46  20F4               	addwfc	prodh,w,c
 30812  004D48  6EEA               	movwf	fsr0h,c
 30813  004D4A  CFDF FFEF          	movff	indf2,indf0
 30814                           
 30815                           ;lorawan.c: 1595: switch (*ptr ++)
 30816  004D4E  D064               	goto	l2320
 30817  004D50                     
 30818                           ;lorawan.c: 1598: {
 30819                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 30820                           
 30821                           ; BSR set to: 2
 30822  004D50  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 30823  004D54  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 30824  004D58  EC62  F05C         	call	_ExecuteLinkCheck
 30825  004D5C  C060  F0B6         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 30826  004D60  C061  F0B7         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 30827  004D64  D04D               	goto	l19769
 30828  004D66                     
 30829                           ;lorawan.c: 1605: {
 30830                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 30831                           
 30832                           ; BSR set to: 2
 30833  004D66  C0B6  F06F         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 30834  004D6A  C0B7  F070         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 30835  004D6E  EC53  F027         	call	_ExecuteLinkAdr	;wreg free
 30836  004D72  C06F  F0B6         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 30837  004D76  C070  F0B7         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 30838                           
 30839                           ;lorawan.c: 1607: } break;
 30840  004D7A  D06C               	goto	l2322
 30841  004D7C                     
 30842                           ;lorawan.c: 1610: {
 30843                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 30844  004D7C  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 30845  004D80  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 30846  004D84  ECF3  F057         	call	_ExecuteDutyCycle	;wreg free
 30847  004D88  C060  F0B6         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 30848  004D8C  C061  F0B7         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 30849                           
 30850                           ;lorawan.c: 1612: } break;
 30851  004D90  D061               	goto	l2322
 30852  004D92                     
 30853                           ;lorawan.c: 1615: {
 30854                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 30855  004D92  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 30856  004D96  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 30857  004D9A  EC18  F030         	call	_ExecuteRxParamSetupReq	;wreg free
 30858  004D9E  C0A6  F0B6         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 30859  004DA2  C0A7  F0B7         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 30860                           
 30861                           ;lorawan.c: 1617: } break;
 30862  004DA6  D056               	goto	l2322
 30863  004DA8                     
 30864                           ;lorawan.c: 1620: {
 30865                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 30866  004DA8  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 30867  004DAC  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 30868  004DB0  ECD8  F062         	call	_ExecuteDevStatus	;wreg free
 30869  004DB4  C060  F0B6         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 30870  004DB8  C061  F0B7         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 30871                           
 30872                           ;lorawan.c: 1622: } break;
 30873  004DBC  D04B               	goto	l2322
 30874  004DBE                     
 30875                           ;lorawan.c: 1625: {
 30876                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 30877  004DBE  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 30878  004DC2  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 30879  004DC6  ECAC  F02C         	call	_ExecuteNewChannel	;wreg free
 30880  004DCA  C0A6  F0B6         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 30881  004DCE  C0A7  F0B7         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 30882                           
 30883                           ;lorawan.c: 1628: } break;
 30884  004DD2  D040               	goto	l2322
 30885  004DD4                     
 30886                           ;lorawan.c: 1631: {
 30887                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 30888  004DD4  C0B6  F075         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 30889  004DD8  C0B7  F076         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 30890  004DDC  EC6E  F05E         	call	_ExecuteRxTimingSetup	;wreg free
 30891  004DE0  C075  F0B6         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 30892  004DE4  C076  F0B7         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 30893                           
 30894                           ;lorawan.c: 1633: } break;
 30895  004DE8  D035               	goto	l2322
 30896  004DEA                     
 30897                           ;lorawan.c: 1636: {
 30898                           ;lorawan.c: 1637: done = 1;
 30899  004DEA  0E01               	movlw	1
 30900  004DEC  0100               	movlb	0	; () banked
 30901  004DEE  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 30902                           
 30903                           ; BSR set to: 0
 30904                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 30905  004DF0  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 30906  004DF2  0D01               	mullw	1
 30907  004DF4  50F3               	movf	prodl,w,c
 30908  004DF6  25B0               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 30909  004DF8  6FB6               	movwf	MacExecuteCommands@ptr& (0+255),b
 30910  004DFA  50F4               	movf	prodh,w,c
 30911  004DFC  21B1               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 30912  004DFE  6FB7               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 30913  004E00                     l19769:
 30914                           
 30915                           ; BSR set to: 0
 30916                           ;lorawan.c: 1639: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 30917  004E00  0102               	movlb	2	; () banked
 30918  004E02  51AB               	movf	(_loRa+167)& (0+255),w,b
 30919  004E04  0D02               	mullw	2
 30920  004E06  0EAC               	movlw	low (_loRa+168)
 30921  004E08  24F3               	addwf	prodl,w,c
 30922  004E0A  6ED9               	movwf	fsr2l,c
 30923  004E0C  0E02               	movlw	high (_loRa+168)
 30924  004E0E  20F4               	addwfc	prodh,w,c
 30925  004E10  6EDA               	movwf	fsr2h,c
 30926  004E12  0EFF               	movlw	255
 30927  004E14  6EDF               	movwf	indf2,c
 30928                           
 30929                           ; BSR set to: 2
 30930                           ;lorawan.c: 1641: }
 30931                           
 30932                           ;lorawan.c: 1640: } break;
 30933  004E16  D01E               	goto	l2322
 30934  004E18                     l2320:
 30935                           
 30936                           ; BSR set to: 2
 30937                           
 30938                           ; BSR set to: 2
 30939  004E18  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 30940  004E1C  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 30941  004E20  0100               	movlb	0	; () banked
 30942  004E22  4BB6               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 30943  004E24  2BB7               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 30944  004E26  50DF               	movf	indf2,w,c
 30945                           
 30946                           ; Switch size 1, requested type "space"
 30947                           ; Number of cases is 7, Range of values is 2 to 8
 30948                           ; switch strategies available:
 30949                           ; Name         Instructions Cycles
 30950                           ; simple_byte           22    12 (average)
 30951                           ;	Chosen strategy is simple_byte
 30952  004E28  0A02               	xorlw	2	; case 2
 30953  004E2A  B4D8               	btfsc	status,2,c
 30954  004E2C  D791               	goto	l2321
 30955  004E2E  0A01               	xorlw	1	; case 3
 30956  004E30  B4D8               	btfsc	status,2,c
 30957  004E32  D799               	goto	l2323
 30958  004E34  0A07               	xorlw	7	; case 4
 30959  004E36  B4D8               	btfsc	status,2,c
 30960  004E38  D7A1               	goto	l2324
 30961  004E3A  0A01               	xorlw	1	; case 5
 30962  004E3C  B4D8               	btfsc	status,2,c
 30963  004E3E  D7A9               	goto	l2325
 30964  004E40  0A03               	xorlw	3	; case 6
 30965  004E42  B4D8               	btfsc	status,2,c
 30966  004E44  D7B1               	goto	l2326
 30967  004E46  0A01               	xorlw	1	; case 7
 30968  004E48  B4D8               	btfsc	status,2,c
 30969  004E4A  D7B9               	goto	l2327
 30970  004E4C  0A0F               	xorlw	15	; case 8
 30971  004E4E  B4D8               	btfsc	status,2,c
 30972  004E50  D7C1               	goto	l2328
 30973  004E52  D7CB               	goto	l2329
 30974  004E54                     l2322:
 30975                           
 30976                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 30977                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 30978                           
 30979                           ; BSR set to: 0
 30980  004E54  0102               	movlb	2	; () banked
 30981  004E56  51AB               	movf	(_loRa+167)& (0+255),w,b
 30982  004E58  0D02               	mullw	2
 30983  004E5A  0EAC               	movlw	low (_loRa+168)
 30984  004E5C  24F3               	addwf	prodl,w,c
 30985  004E5E  6ED9               	movwf	fsr2l,c
 30986  004E60  0E02               	movlw	high (_loRa+168)
 30987  004E62  20F4               	addwfc	prodh,w,c
 30988  004E64  6EDA               	movwf	fsr2h,c
 30989  004E66  28DE               	incf	postinc2,w,c
 30990  004E68  B4D8               	btfsc	status,2,c
 30991  004E6A  D004               	goto	l2330
 30992                           
 30993                           ; BSR set to: 2
 30994  004E6C  0E10               	movlw	16
 30995  004E6E  61AB               	cpfslt	(_loRa+167)& (0+255),b
 30996  004E70  D001               	goto	l2330
 30997                           
 30998                           ; BSR set to: 2
 30999                           ;lorawan.c: 1645: {
 31000                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 31001  004E72  2BAB               	incf	(_loRa+167)& (0+255),f,b
 31002  004E74                     l2330:
 31003                           
 31004                           ; BSR set to: 2
 31005                           
 31006                           ; BSR set to: 2
 31007  004E74  0100               	movlb	0	; () banked
 31008  004E76  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 31009  004E78  0D01               	mullw	1
 31010  004E7A  C0B0  F0B3         	movff	MacExecuteCommands@buffer,??_MacExecuteCommands
 31011  004E7E  C0B1  F0B4         	movff	MacExecuteCommands@buffer+1,??_MacExecuteCommands+1
 31012  004E82  50F3               	movf	prodl,w,c
 31013  004E84  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 31014  004E86  50F4               	movf	prodh,w,c
 31015  004E88  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 31016  004E8A  51B3               	movf	??_MacExecuteCommands& (0+255),w,b
 31017  004E8C  5DB6               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 31018  004E8E  51B4               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 31019  004E90  59B7               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 31020  004E92  B0D8               	btfsc	status,0,c
 31021  004E94  D003               	goto	u22580
 31022                           
 31023                           ; BSR set to: 0
 31024  004E96  51B5               	movf	MacExecuteCommands@done& (0+255),w,b
 31025  004E98  B4D8               	btfsc	status,2,c
 31026  004E9A  D692               	goto	l2319
 31027  004E9C                     u22580:
 31028                           
 31029                           ; BSR set to: 0
 31030                           ;lorawan.c: 1647: }
 31031                           ;lorawan.c: 1648: }
 31032                           ;lorawan.c: 1649: return ptr;
 31033                           
 31034                           ; BSR set to: 0
 31035                           
 31036                           ; BSR set to: 0
 31037  004E9C  C0B6  F0B0         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 31038  004EA0  C0B7  F0B1         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 31039  004EA4  0012               	return	
 31040  004EA6                     __end_of_MacExecuteCommands:
 31041                           	opt stack 0
 31042                           tosu	equ	0xFFF
 31043                           tosh	equ	0xFFE
 31044                           tosl	equ	0xFFD
 31045                           pclath	equ	0xFFA
 31046                           tblptru	equ	0xFF8
 31047                           tblptrh	equ	0xFF7
 31048                           tblptrl	equ	0xFF6
 31049                           tablat	equ	0xFF5
 31050                           prodh	equ	0xFF4
 31051                           prodl	equ	0xFF3
 31052                           intcon	equ	0xFF2
 31053                           intcon2	equ	0xFF1
 31054                           intcon3	equ	0xFF0
 31055                           indf0	equ	0xFEF
 31056                           postinc0	equ	0xFEE
 31057                           fsr0h	equ	0xFEA
 31058                           fsr0l	equ	0xFE9
 31059                           wreg	equ	0xFE8
 31060                           postinc1	equ	0xFE6
 31061                           postdec1	equ	0xFE5
 31062                           plusw1	equ	0xFE3
 31063                           fsr1h	equ	0xFE2
 31064                           fsr1l	equ	0xFE1
 31065                           indf2	equ	0xFDF
 31066                           postinc2	equ	0xFDE
 31067                           postdec2	equ	0xFDD
 31068                           fsr2h	equ	0xFDA
 31069                           fsr2l	equ	0xFD9
 31070                           status	equ	0xFD8
 31071                           
 31072 ;; *************** function _ExecuteRxTimingSetup *****************
 31073 ;; Defined at:
 31074 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31075 ;; Parameters:    Size  Location     Type
 31076 ;;  ptr             2   21[BANK0 ] PTR unsigned char 
 31077 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 31078 ;; Auto vars:     Size  Location     Type
 31079 ;;  delay           1   23[BANK0 ] unsigned char 
 31080 ;; Return value:  Size  Location     Type
 31081 ;;                  2   21[BANK0 ] PTR unsigned char 
 31082 ;; Registers used:
 31083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31084 ;; Tracked objects:
 31085 ;;		On entry : 0/0
 31086 ;;		On exit  : 0/0
 31087 ;;		Unchanged: 0/0
 31088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31089 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31092 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31093 ;;Total ram usage:        3 bytes
 31094 ;; Hardware stack levels used:    1
 31095 ;; Hardware stack levels required when called:    9
 31096 ;; This function calls:
 31097 ;;		_UpdateReceiveDelays
 31098 ;; This function is called by:
 31099 ;;		_MacExecuteCommands
 31100 ;; This function uses a non-reentrant model
 31101 ;;
 31102                           
 31103                           	psect	text174
 31104  00BCDC                     __ptext174:
 31105                           	opt stack 0
 31106  00BCDC                     _ExecuteRxTimingSetup:
 31107                           	opt stack 16
 31108                           
 31109                           ;lorawan.c: 1661: uint8_t delay;
 31110                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 31111                           
 31112                           ; BSR set to: 0
 31113                           ;incstack = 0
 31114  00BCDC  C075  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 31115  00BCE0  C076  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 31116  00BCE4  50DF               	movf	indf2,w,c
 31117  00BCE6  0B0F               	andlw	15
 31118  00BCE8  0100               	movlb	0	; () banked
 31119  00BCEA  6F77               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 31120                           
 31121                           ; BSR set to: 0
 31122                           ;lorawan.c: 1664: ptr++;
 31123  00BCEC  4B75               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 31124  00BCEE  2B76               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 31125                           
 31126                           ; BSR set to: 0
 31127                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 31128  00BCF0  5177               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 31129  00BCF2  EC3C  F05B         	call	_UpdateReceiveDelays
 31130                           
 31131                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 31132  00BCF6  0102               	movlb	2	; () banked
 31133  00BCF8  8108               	bsf	(_loRa+4)& (0+255),0,b
 31134                           
 31135                           ; BSR set to: 2
 31136                           ;lorawan.c: 1669: return ptr;
 31137  00BCFA  C075  F075         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 31138  00BCFE  C076  F076         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 31139  00BD02  0012               	return	
 31140  00BD04                     __end_of_ExecuteRxTimingSetup:
 31141                           	opt stack 0
 31142                           tosu	equ	0xFFF
 31143                           tosh	equ	0xFFE
 31144                           tosl	equ	0xFFD
 31145                           pclath	equ	0xFFA
 31146                           tblptru	equ	0xFF8
 31147                           tblptrh	equ	0xFF7
 31148                           tblptrl	equ	0xFF6
 31149                           tablat	equ	0xFF5
 31150                           prodh	equ	0xFF4
 31151                           prodl	equ	0xFF3
 31152                           intcon	equ	0xFF2
 31153                           intcon2	equ	0xFF1
 31154                           intcon3	equ	0xFF0
 31155                           indf0	equ	0xFEF
 31156                           postinc0	equ	0xFEE
 31157                           fsr0h	equ	0xFEA
 31158                           fsr0l	equ	0xFE9
 31159                           wreg	equ	0xFE8
 31160                           postinc1	equ	0xFE6
 31161                           postdec1	equ	0xFE5
 31162                           plusw1	equ	0xFE3
 31163                           fsr1h	equ	0xFE2
 31164                           fsr1l	equ	0xFE1
 31165                           indf2	equ	0xFDF
 31166                           postinc2	equ	0xFDE
 31167                           postdec2	equ	0xFDD
 31168                           fsr2h	equ	0xFDA
 31169                           fsr2l	equ	0xFD9
 31170                           status	equ	0xFD8
 31171                           
 31172 ;; *************** function _UpdateReceiveDelays *****************
 31173 ;; Defined at:
 31174 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31175 ;; Parameters:    Size  Location     Type
 31176 ;;  delay           1    wreg     unsigned char 
 31177 ;; Auto vars:     Size  Location     Type
 31178 ;;  delay           1   20[BANK0 ] unsigned char 
 31179 ;; Return value:  Size  Location     Type
 31180 ;;                  1    wreg      void 
 31181 ;; Registers used:
 31182 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31183 ;; Tracked objects:
 31184 ;;		On entry : 0/0
 31185 ;;		On exit  : 0/0
 31186 ;;		Unchanged: 0/0
 31187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31189 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31191 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31192 ;;Total ram usage:        1 bytes
 31193 ;; Hardware stack levels used:    1
 31194 ;; Hardware stack levels required when called:    8
 31195 ;; This function calls:
 31196 ;;		___wmul
 31197 ;; This function is called by:
 31198 ;;		_LORAWAN_RxDone
 31199 ;;		_ExecuteRxTimingSetup
 31200 ;; This function uses a non-reentrant model
 31201 ;;
 31202                           
 31203                           	psect	text175
 31204  00B678                     __ptext175:
 31205                           	opt stack 0
 31206  00B678                     _UpdateReceiveDelays:
 31207                           	opt stack 18
 31208                           
 31209                           ; BSR set to: 2
 31210                           ;incstack = 0
 31211                           ;UpdateReceiveDelays@delay stored from wreg
 31212  00B678  0100               	movlb	0	; () banked
 31213  00B67A  6F74               	movwf	UpdateReceiveDelays@delay& (0+255),b
 31214                           
 31215                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 31216  00B67C  C074  F06E         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 31217  00B680  0100               	movlb	0	; () banked
 31218  00B682  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 31219  00B684  0E03               	movlw	3
 31220  00B686  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 31221  00B688  0EE8               	movlw	232
 31222  00B68A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 31223  00B68C  EC82  F05E         	call	___wmul	;wreg free
 31224  00B690  C06E  F298         	movff	?___wmul,_loRa+148
 31225  00B694  C06F  F299         	movff	?___wmul+1,_loRa+149
 31226                           
 31227                           ;lorawan.c: 2029: if (delay == 0)
 31228  00B698  0100               	movlb	0	; () banked
 31229  00B69A  5174               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 31230  00B69C  A4D8               	btfss	status,2,c
 31231  00B69E  D005               	goto	l2429
 31232                           
 31233                           ; BSR set to: 0
 31234                           ;lorawan.c: 2030: {
 31235                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 31236  00B6A0  0E03               	movlw	3
 31237  00B6A2  0102               	movlb	2	; () banked
 31238  00B6A4  6F99               	movwf	(_loRa+149)& (0+255),b
 31239  00B6A6  0EE8               	movlw	232
 31240  00B6A8  6F98               	movwf	(_loRa+148)& (0+255),b
 31241  00B6AA                     l2429:
 31242                           
 31243                           ;lorawan.c: 2032: }
 31244                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 31245                           
 31246                           ; BSR set to: 2
 31247  00B6AA  0EE8               	movlw	232
 31248  00B6AC  0102               	movlb	2	; () banked
 31249  00B6AE  2598               	addwf	(_loRa+148)& (0+255),w,b
 31250  00B6B0  6F9A               	movwf	(_loRa+150)& (0+255),b
 31251  00B6B2  0E03               	movlw	3
 31252  00B6B4  2199               	addwfc	(_loRa+149)& (0+255),w,b
 31253  00B6B6  6F9B               	movwf	(_loRa+151)& (0+255),b
 31254                           
 31255                           ; BSR set to: 2
 31256  00B6B8  0012               	return		;funcret
 31257  00B6BA                     __end_of_UpdateReceiveDelays:
 31258                           	opt stack 0
 31259                           tosu	equ	0xFFF
 31260                           tosh	equ	0xFFE
 31261                           tosl	equ	0xFFD
 31262                           pclath	equ	0xFFA
 31263                           tblptru	equ	0xFF8
 31264                           tblptrh	equ	0xFF7
 31265                           tblptrl	equ	0xFF6
 31266                           tablat	equ	0xFF5
 31267                           prodh	equ	0xFF4
 31268                           prodl	equ	0xFF3
 31269                           intcon	equ	0xFF2
 31270                           intcon2	equ	0xFF1
 31271                           intcon3	equ	0xFF0
 31272                           indf0	equ	0xFEF
 31273                           postinc0	equ	0xFEE
 31274                           fsr0h	equ	0xFEA
 31275                           fsr0l	equ	0xFE9
 31276                           wreg	equ	0xFE8
 31277                           postinc1	equ	0xFE6
 31278                           postdec1	equ	0xFE5
 31279                           plusw1	equ	0xFE3
 31280                           fsr1h	equ	0xFE2
 31281                           fsr1l	equ	0xFE1
 31282                           indf2	equ	0xFDF
 31283                           postinc2	equ	0xFDE
 31284                           postdec2	equ	0xFDD
 31285                           fsr2h	equ	0xFDA
 31286                           fsr2l	equ	0xFD9
 31287                           status	equ	0xFD8
 31288                           
 31289 ;; *************** function ___wmul *****************
 31290 ;; Defined at:
 31291 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 31292 ;; Parameters:    Size  Location     Type
 31293 ;;  multiplier      2   14[BANK0 ] unsigned int 
 31294 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 31295 ;; Auto vars:     Size  Location     Type
 31296 ;;  product         2   18[BANK0 ] unsigned int 
 31297 ;; Return value:  Size  Location     Type
 31298 ;;                  2   14[BANK0 ] unsigned int 
 31299 ;; Registers used:
 31300 ;;		wreg, status,2, status,0, prodl, prodh
 31301 ;; Tracked objects:
 31302 ;;		On entry : 0/0
 31303 ;;		On exit  : 0/0
 31304 ;;		Unchanged: 0/0
 31305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31306 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31309 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31310 ;;Total ram usage:        6 bytes
 31311 ;; Hardware stack levels used:    1
 31312 ;; Hardware stack levels required when called:    7
 31313 ;; This function calls:
 31314 ;;		Nothing
 31315 ;; This function is called by:
 31316 ;;		_UpdateCfList
 31317 ;;		_UpdateReceiveDelays
 31318 ;;		_fround
 31319 ;;		_scale
 31320 ;;		_printf
 31321 ;; This function uses a non-reentrant model
 31322 ;;
 31323                           
 31324                           	psect	text176
 31325  00BD04                     __ptext176:
 31326                           	opt stack 0
 31327  00BD04                     ___wmul:
 31328                           	opt stack 21
 31329                           
 31330                           ; BSR set to: 2
 31331                           ;incstack = 0
 31332  00BD04  0100               	movlb	0	; () banked
 31333  00BD06  516E               	movf	___wmul@multiplier& (0+255),w,b
 31334  00BD08  0370               	mulwf	___wmul@multiplicand& (0+255),b
 31335  00BD0A  CFF3 F072          	movff	prodl,___wmul@product
 31336  00BD0E  CFF4 F073          	movff	prodh,___wmul@product+1
 31337  00BD12  516E               	movf	___wmul@multiplier& (0+255),w,b
 31338  00BD14  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 31339  00BD16  50F3               	movf	prodl,w,c
 31340  00BD18  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 31341  00BD1A  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 31342  00BD1C  0370               	mulwf	___wmul@multiplicand& (0+255),b
 31343  00BD1E  50F3               	movf	prodl,w,c
 31344  00BD20  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 31345                           
 31346                           ; BSR set to: 0
 31347  00BD22  C072  F06E         	movff	___wmul@product,?___wmul
 31348  00BD26  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 31349  00BD2A  0012               	return	
 31350  00BD2C                     __end_of___wmul:
 31351                           	opt stack 0
 31352                           tosu	equ	0xFFF
 31353                           tosh	equ	0xFFE
 31354                           tosl	equ	0xFFD
 31355                           pclath	equ	0xFFA
 31356                           tblptru	equ	0xFF8
 31357                           tblptrh	equ	0xFF7
 31358                           tblptrl	equ	0xFF6
 31359                           tablat	equ	0xFF5
 31360                           prodh	equ	0xFF4
 31361                           prodl	equ	0xFF3
 31362                           intcon	equ	0xFF2
 31363                           intcon2	equ	0xFF1
 31364                           intcon3	equ	0xFF0
 31365                           indf0	equ	0xFEF
 31366                           postinc0	equ	0xFEE
 31367                           fsr0h	equ	0xFEA
 31368                           fsr0l	equ	0xFE9
 31369                           wreg	equ	0xFE8
 31370                           postinc1	equ	0xFE6
 31371                           postdec1	equ	0xFE5
 31372                           plusw1	equ	0xFE3
 31373                           fsr1h	equ	0xFE2
 31374                           fsr1l	equ	0xFE1
 31375                           indf2	equ	0xFDF
 31376                           postinc2	equ	0xFDE
 31377                           postdec2	equ	0xFDD
 31378                           fsr2h	equ	0xFDA
 31379                           fsr2l	equ	0xFD9
 31380                           status	equ	0xFD8
 31381                           
 31382 ;; *************** function _ExecuteRxParamSetupReq *****************
 31383 ;; Defined at:
 31384 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31385 ;; Parameters:    Size  Location     Type
 31386 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 31387 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 31388 ;; Auto vars:     Size  Location     Type
 31389 ;;  frequency       4   74[BANK0 ] unsigned long 
 31390 ;;  dlSettings      1   78[BANK0 ] struct .
 31391 ;; Return value:  Size  Location     Type
 31392 ;;                  2   70[BANK0 ] PTR unsigned char 
 31393 ;; Registers used:
 31394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31395 ;; Tracked objects:
 31396 ;;		On entry : 0/0
 31397 ;;		On exit  : 0/0
 31398 ;;		Unchanged: 0/0
 31399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31400 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31401 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31402 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31403 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31404 ;;Total ram usage:        9 bytes
 31405 ;; Hardware stack levels used:    1
 31406 ;; Hardware stack levels required when called:    8
 31407 ;; This function calls:
 31408 ;;		_UpdateReceiveWindow2Parameters
 31409 ;;		_ValidateDataRate
 31410 ;;		_ValidateFrequency
 31411 ;;		_ValidateRxOffset
 31412 ;;		___lmul
 31413 ;; This function is called by:
 31414 ;;		_MacExecuteCommands
 31415 ;; This function uses a non-reentrant model
 31416 ;;
 31417                           
 31418                           	psect	text177
 31419  006030                     __ptext177:
 31420                           	opt stack 0
 31421  006030                     _ExecuteRxParamSetupReq:
 31422                           	opt stack 17
 31423                           
 31424                           ;lorawan_eu.c: 742: DlSettings_t dlSettings;
 31425                           ;lorawan_eu.c: 743: uint32_t frequency = 0;
 31426                           
 31427                           ; BSR set to: 0
 31428                           ;incstack = 0
 31429  006030  0E00               	movlw	0
 31430  006032  0100               	movlb	0	; () banked
 31431  006034  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 31432  006036  0E00               	movlw	0
 31433  006038  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 31434  00603A  0E00               	movlw	0
 31435  00603C  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 31436  00603E  0E00               	movlw	0
 31437  006040  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 31438                           
 31439                           ; BSR set to: 0
 31440                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 31441  006042  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 31442  006046  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 31443  00604A  50DF               	movf	indf2,w,c
 31444  00604C  6FAE               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 31445                           
 31446                           ; BSR set to: 0
 31447  00604E  4BA6               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 31448  006050  2BA7               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 31449                           
 31450                           ; BSR set to: 0
 31451                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 31452  006052  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 31453  006056  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 31454  00605A  0EFF               	movlw	255
 31455  00605C  14DE               	andwf	postinc2,w,c
 31456  00605E  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 31457  006060  0EFF               	movlw	255
 31458  006062  14DE               	andwf	postinc2,w,c
 31459  006064  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 31460  006066  0EFF               	movlw	255
 31461  006068  14DE               	andwf	postinc2,w,c
 31462  00606A  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 31463  00606C  0E00               	movlw	0
 31464  00606E  14DE               	andwf	postinc2,w,c
 31465  006070  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 31466                           
 31467                           ; BSR set to: 0
 31468                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 31469  006072  C0AA  F09A         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 31470  006076  C0AB  F09B         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 31471  00607A  C0AC  F09C         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 31472  00607E  C0AD  F09D         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 31473  006082  0E64               	movlw	100
 31474  006084  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 31475  006086  0E00               	movlw	0
 31476  006088  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 31477  00608A  0E00               	movlw	0
 31478  00608C  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 31479  00608E  0E00               	movlw	0
 31480  006090  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 31481  006092  EC1D  F057         	call	___lmul	;wreg free
 31482  006096  C09A  F0AA         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 31483  00609A  C09B  F0AB         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 31484  00609E  C09C  F0AC         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 31485  0060A2  C09D  F0AD         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 31486                           
 31487                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 31488  0060A6  0E03               	movlw	3
 31489  0060A8  0100               	movlb	0	; () banked
 31490  0060AA  25A6               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 31491  0060AC  6FA6               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 31492  0060AE  0E00               	movlw	0
 31493  0060B0  21A7               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 31494  0060B2  6FA7               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 31495                           
 31496                           ; BSR set to: 0
 31497                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 31498  0060B4  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 31499  0060B8  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 31500  0060BC  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 31501  0060C0  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 31502  0060C4  EC83  F054         	call	_ValidateFrequency	;wreg free
 31503  0060C8  0900               	iorlw	0
 31504  0060CA  A4D8               	btfss	status,2,c
 31505  0060CC  D018               	goto	l1463
 31506                           
 31507                           ;lorawan_eu.c: 754: {
 31508                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 31509  0060CE  0102               	movlb	2	; () banked
 31510  0060D0  51AB               	movf	(_loRa+167)& (0+255),w,b
 31511  0060D2  0D02               	mullw	2
 31512  0060D4  0E04               	movlw	low _loRa
 31513  0060D6  0100               	movlb	0	; () banked
 31514  0060D8  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31515  0060DA  0E02               	movlw	high _loRa
 31516  0060DC  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31517  0060DE  0EA8               	movlw	168
 31518  0060E0  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31519  0060E2  0E00               	movlw	0
 31520  0060E4  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31521  0060E6  50F3               	movf	prodl,w,c
 31522  0060E8  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31523  0060EA  50F4               	movf	prodh,w,c
 31524  0060EC  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31525  0060EE  0E01               	movlw	1
 31526  0060F0  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31527  0060F2  6ED9               	movwf	fsr2l,c
 31528  0060F4  0E00               	movlw	0
 31529  0060F6  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31530  0060F8  6EDA               	movwf	fsr2h,c
 31531  0060FA  0102               	movlb	2	; () banked
 31532  0060FC  86DF               	bsf	indf2,3,c
 31533  0060FE                     l1463:
 31534                           
 31535                           ;lorawan_eu.c: 756: }
 31536                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 31537                           
 31538                           ; BSR set to: 2
 31539  0060FE  0100               	movlb	0	; () banked
 31540  006100  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 31541  006102  0B0F               	andlw	15
 31542  006104  EC2A  F061         	call	_ValidateDataRate
 31543  006108  0900               	iorlw	0
 31544  00610A  A4D8               	btfss	status,2,c
 31545  00610C  D018               	goto	l1464
 31546                           
 31547                           ;lorawan_eu.c: 759: {
 31548                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 31549  00610E  0102               	movlb	2	; () banked
 31550  006110  51AB               	movf	(_loRa+167)& (0+255),w,b
 31551  006112  0D02               	mullw	2
 31552  006114  0E04               	movlw	low _loRa
 31553  006116  0100               	movlb	0	; () banked
 31554  006118  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31555  00611A  0E02               	movlw	high _loRa
 31556  00611C  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31557  00611E  0EA8               	movlw	168
 31558  006120  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31559  006122  0E00               	movlw	0
 31560  006124  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31561  006126  50F3               	movf	prodl,w,c
 31562  006128  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31563  00612A  50F4               	movf	prodh,w,c
 31564  00612C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31565  00612E  0E01               	movlw	1
 31566  006130  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31567  006132  6ED9               	movwf	fsr2l,c
 31568  006134  0E00               	movlw	0
 31569  006136  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31570  006138  6EDA               	movwf	fsr2h,c
 31571  00613A  0102               	movlb	2	; () banked
 31572  00613C  88DF               	bsf	indf2,4,c
 31573  00613E                     l1464:
 31574                           
 31575                           ;lorawan_eu.c: 761: }
 31576                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 31577                           
 31578                           ; BSR set to: 2
 31579  00613E  0100               	movlb	0	; () banked
 31580  006140  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 31581  006142  0B07               	andlw	7
 31582  006144  EC1E  F061         	call	_ValidateRxOffset
 31583  006148  0900               	iorlw	0
 31584  00614A  A4D8               	btfss	status,2,c
 31585  00614C  D018               	goto	l1465
 31586                           
 31587                           ;lorawan_eu.c: 764: {
 31588                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 31589  00614E  0102               	movlb	2	; () banked
 31590  006150  51AB               	movf	(_loRa+167)& (0+255),w,b
 31591  006152  0D02               	mullw	2
 31592  006154  0E04               	movlw	low _loRa
 31593  006156  0100               	movlb	0	; () banked
 31594  006158  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31595  00615A  0E02               	movlw	high _loRa
 31596  00615C  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31597  00615E  0EA8               	movlw	168
 31598  006160  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31599  006162  0E00               	movlw	0
 31600  006164  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31601  006166  50F3               	movf	prodl,w,c
 31602  006168  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31603  00616A  50F4               	movf	prodh,w,c
 31604  00616C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31605  00616E  0E01               	movlw	1
 31606  006170  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31607  006172  6ED9               	movwf	fsr2l,c
 31608  006174  0E00               	movlw	0
 31609  006176  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31610  006178  6EDA               	movwf	fsr2h,c
 31611  00617A  0102               	movlb	2	; () banked
 31612  00617C  8ADF               	bsf	indf2,5,c
 31613  00617E                     l1465:
 31614                           
 31615                           ;lorawan_eu.c: 766: }
 31616                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 31617  00617E  0102               	movlb	2	; () banked
 31618  006180  51AB               	movf	(_loRa+167)& (0+255),w,b
 31619  006182  0D02               	mullw	2
 31620  006184  0E04               	movlw	low _loRa
 31621  006186  0100               	movlb	0	; () banked
 31622  006188  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31623  00618A  0E02               	movlw	high _loRa
 31624  00618C  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31625  00618E  0EA8               	movlw	168
 31626  006190  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31627  006192  0E00               	movlw	0
 31628  006194  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31629  006196  50F3               	movf	prodl,w,c
 31630  006198  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31631  00619A  50F4               	movf	prodh,w,c
 31632  00619C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31633  00619E  0E01               	movlw	1
 31634  0061A0  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31635  0061A2  6ED9               	movwf	fsr2l,c
 31636  0061A4  0E00               	movlw	0
 31637  0061A6  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31638  0061A8  6EDA               	movwf	fsr2h,c
 31639  0061AA  0102               	movlb	2	; () banked
 31640  0061AC  A8DF               	btfss	indf2,4,c
 31641  0061AE  D045               	goto	l1466
 31642                           
 31643                           ; BSR set to: 2
 31644  0061B0  51AB               	movf	(_loRa+167)& (0+255),w,b
 31645  0061B2  0D02               	mullw	2
 31646  0061B4  0E04               	movlw	low _loRa
 31647  0061B6  0100               	movlb	0	; () banked
 31648  0061B8  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31649  0061BA  0E02               	movlw	high _loRa
 31650  0061BC  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31651  0061BE  0EA8               	movlw	168
 31652  0061C0  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31653  0061C2  0E00               	movlw	0
 31654  0061C4  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31655  0061C6  50F3               	movf	prodl,w,c
 31656  0061C8  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31657  0061CA  50F4               	movf	prodh,w,c
 31658  0061CC  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31659  0061CE  0E01               	movlw	1
 31660  0061D0  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31661  0061D2  6ED9               	movwf	fsr2l,c
 31662  0061D4  0E00               	movlw	0
 31663  0061D6  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31664  0061D8  6EDA               	movwf	fsr2h,c
 31665  0061DA  0102               	movlb	2	; () banked
 31666  0061DC  A6DF               	btfss	indf2,3,c
 31667  0061DE  D02D               	goto	l1466
 31668                           
 31669                           ; BSR set to: 2
 31670  0061E0  51AB               	movf	(_loRa+167)& (0+255),w,b
 31671  0061E2  0D02               	mullw	2
 31672  0061E4  0E04               	movlw	low _loRa
 31673  0061E6  0100               	movlb	0	; () banked
 31674  0061E8  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31675  0061EA  0E02               	movlw	high _loRa
 31676  0061EC  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31677  0061EE  0EA8               	movlw	168
 31678  0061F0  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31679  0061F2  0E00               	movlw	0
 31680  0061F4  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31681  0061F6  50F3               	movf	prodl,w,c
 31682  0061F8  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31683  0061FA  50F4               	movf	prodh,w,c
 31684  0061FC  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31685  0061FE  0E01               	movlw	1
 31686  006200  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31687  006202  6ED9               	movwf	fsr2l,c
 31688  006204  0E00               	movlw	0
 31689  006206  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31690  006208  6EDA               	movwf	fsr2h,c
 31691  00620A  0102               	movlb	2	; () banked
 31692  00620C  AADF               	btfss	indf2,5,c
 31693  00620E  D015               	goto	l1466
 31694                           
 31695                           ; BSR set to: 2
 31696                           ;lorawan_eu.c: 769: {
 31697                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 31698  006210  0100               	movlb	0	; () banked
 31699  006212  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 31700  006214  0B07               	andlw	7
 31701  006216  0102               	movlb	2	; () banked
 31702  006218  6FF3               	movwf	(_loRa+239)& (0+255),b
 31703                           
 31704                           ; BSR set to: 2
 31705                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 31706  00621A  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 31707  00621E  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 31708  006222  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 31709  006226  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 31710  00622A  0100               	movlb	0	; () banked
 31711  00622C  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 31712  00622E  0B0F               	andlw	15
 31713  006230  6F64               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 31714  006232  EC62  F061         	call	_UpdateReceiveWindow2Parameters	;wreg free
 31715                           
 31716                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 31717  006236  0102               	movlb	2	; () banked
 31718  006238  8F07               	bsf	(_loRa+3)& (0+255),7,b
 31719  00623A                     l1466:
 31720                           
 31721                           ; BSR set to: 2
 31722                           ;lorawan_eu.c: 773: }
 31723                           ;lorawan_eu.c: 775: return ptr;
 31724                           
 31725                           ; BSR set to: 2
 31726  00623A  C0A6  F0A6         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 31727  00623E  C0A7  F0A7         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 31728  006242  0012               	return	
 31729  006244                     __end_of_ExecuteRxParamSetupReq:
 31730                           	opt stack 0
 31731                           tosu	equ	0xFFF
 31732                           tosh	equ	0xFFE
 31733                           tosl	equ	0xFFD
 31734                           pclath	equ	0xFFA
 31735                           tblptru	equ	0xFF8
 31736                           tblptrh	equ	0xFF7
 31737                           tblptrl	equ	0xFF6
 31738                           tablat	equ	0xFF5
 31739                           prodh	equ	0xFF4
 31740                           prodl	equ	0xFF3
 31741                           intcon	equ	0xFF2
 31742                           intcon2	equ	0xFF1
 31743                           intcon3	equ	0xFF0
 31744                           indf0	equ	0xFEF
 31745                           postinc0	equ	0xFEE
 31746                           fsr0h	equ	0xFEA
 31747                           fsr0l	equ	0xFE9
 31748                           wreg	equ	0xFE8
 31749                           postinc1	equ	0xFE6
 31750                           postdec1	equ	0xFE5
 31751                           plusw1	equ	0xFE3
 31752                           fsr1h	equ	0xFE2
 31753                           fsr1l	equ	0xFE1
 31754                           indf2	equ	0xFDF
 31755                           postinc2	equ	0xFDE
 31756                           postdec2	equ	0xFDD
 31757                           fsr2h	equ	0xFDA
 31758                           fsr2l	equ	0xFD9
 31759                           status	equ	0xFD8
 31760                           
 31761 ;; *************** function _ValidateRxOffset *****************
 31762 ;; Defined at:
 31763 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31764 ;; Parameters:    Size  Location     Type
 31765 ;;  rxOffset        1    wreg     unsigned char 
 31766 ;; Auto vars:     Size  Location     Type
 31767 ;;  rxOffset        1    0[BANK0 ] unsigned char 
 31768 ;;  result          1    1[BANK0 ] enum E7249
 31769 ;; Return value:  Size  Location     Type
 31770 ;;                  1    wreg      enum E7249
 31771 ;; Registers used:
 31772 ;;		wreg, status,2, status,0
 31773 ;; Tracked objects:
 31774 ;;		On entry : 0/0
 31775 ;;		On exit  : 0/0
 31776 ;;		Unchanged: 0/0
 31777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31779 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31781 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31782 ;;Total ram usage:        2 bytes
 31783 ;; Hardware stack levels used:    1
 31784 ;; Hardware stack levels required when called:    7
 31785 ;; This function calls:
 31786 ;;		Nothing
 31787 ;; This function is called by:
 31788 ;;		_ExecuteRxParamSetupReq
 31789 ;; This function uses a non-reentrant model
 31790 ;;
 31791                           
 31792                           	psect	text178
 31793  00C23C                     __ptext178:
 31794                           	opt stack 0
 31795  00C23C                     _ValidateRxOffset:
 31796                           	opt stack 17
 31797                           
 31798                           ; BSR set to: 2
 31799                           ;incstack = 0
 31800                           ;ValidateRxOffset@rxOffset stored from wreg
 31801  00C23C  0100               	movlb	0	; () banked
 31802  00C23E  6F60               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 31803                           
 31804                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 31805  00C240  0E00               	movlw	0
 31806  00C242  0100               	movlb	0	; () banked
 31807  00C244  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 31808                           
 31809                           ; BSR set to: 0
 31810                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 31811  00C246  0E05               	movlw	5
 31812  00C248  6560               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 31813  00C24A  D002               	goto	l1561
 31814                           
 31815                           ; BSR set to: 0
 31816                           ;lorawan_eu.c: 1081: {
 31817                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 31818  00C24C  0E03               	movlw	3
 31819  00C24E  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 31820  00C250                     l1561:
 31821                           
 31822                           ; BSR set to: 0
 31823                           ;lorawan_eu.c: 1083: }
 31824                           ;lorawan_eu.c: 1085: return result;
 31825  00C250  5161               	movf	ValidateRxOffset@result& (0+255),w,b
 31826  00C252  0012               	return	
 31827  00C254                     __end_of_ValidateRxOffset:
 31828                           	opt stack 0
 31829                           tosu	equ	0xFFF
 31830                           tosh	equ	0xFFE
 31831                           tosl	equ	0xFFD
 31832                           pclath	equ	0xFFA
 31833                           tblptru	equ	0xFF8
 31834                           tblptrh	equ	0xFF7
 31835                           tblptrl	equ	0xFF6
 31836                           tablat	equ	0xFF5
 31837                           prodh	equ	0xFF4
 31838                           prodl	equ	0xFF3
 31839                           intcon	equ	0xFF2
 31840                           intcon2	equ	0xFF1
 31841                           intcon3	equ	0xFF0
 31842                           indf0	equ	0xFEF
 31843                           postinc0	equ	0xFEE
 31844                           fsr0h	equ	0xFEA
 31845                           fsr0l	equ	0xFE9
 31846                           wreg	equ	0xFE8
 31847                           postinc1	equ	0xFE6
 31848                           postdec1	equ	0xFE5
 31849                           plusw1	equ	0xFE3
 31850                           fsr1h	equ	0xFE2
 31851                           fsr1l	equ	0xFE1
 31852                           indf2	equ	0xFDF
 31853                           postinc2	equ	0xFDE
 31854                           postdec2	equ	0xFDD
 31855                           fsr2h	equ	0xFDA
 31856                           fsr2l	equ	0xFD9
 31857                           status	equ	0xFD8
 31858                           
 31859 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 31860 ;; Defined at:
 31861 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31862 ;; Parameters:    Size  Location     Type
 31863 ;;  frequency       4    0[BANK0 ] unsigned long 
 31864 ;;  dataRate        1    4[BANK0 ] unsigned char 
 31865 ;; Auto vars:     Size  Location     Type
 31866 ;;		None
 31867 ;; Return value:  Size  Location     Type
 31868 ;;                  1    wreg      void 
 31869 ;; Registers used:
 31870 ;;		None
 31871 ;; Tracked objects:
 31872 ;;		On entry : 0/0
 31873 ;;		On exit  : 0/0
 31874 ;;		Unchanged: 0/0
 31875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31876 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31879 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31880 ;;Total ram usage:        5 bytes
 31881 ;; Hardware stack levels used:    1
 31882 ;; Hardware stack levels required when called:    7
 31883 ;; This function calls:
 31884 ;;		Nothing
 31885 ;; This function is called by:
 31886 ;;		_ExecuteRxParamSetupReq
 31887 ;;		_LORAWAN_SetReceiveWindow2Parameters
 31888 ;; This function uses a non-reentrant model
 31889 ;;
 31890                           
 31891                           	psect	text179
 31892  00C2C4                     __ptext179:
 31893                           	opt stack 0
 31894  00C2C4                     _UpdateReceiveWindow2Parameters:
 31895                           	opt stack 17
 31896                           
 31897                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 31898                           
 31899                           ; BSR set to: 0
 31900                           ;incstack = 0
 31901  00C2C4  C064  F220         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 31902                           
 31903                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 31904  00C2C8  C060  F21C         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 31905  00C2CC  C061  F21D         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 31906  00C2D0  C062  F21E         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 31907  00C2D4  C063  F21F         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 31908  00C2D8  0012               	return		;funcret
 31909  00C2DA                     __end_of_UpdateReceiveWindow2Parameters:
 31910                           	opt stack 0
 31911                           tosu	equ	0xFFF
 31912                           tosh	equ	0xFFE
 31913                           tosl	equ	0xFFD
 31914                           pclath	equ	0xFFA
 31915                           tblptru	equ	0xFF8
 31916                           tblptrh	equ	0xFF7
 31917                           tblptrl	equ	0xFF6
 31918                           tablat	equ	0xFF5
 31919                           prodh	equ	0xFF4
 31920                           prodl	equ	0xFF3
 31921                           intcon	equ	0xFF2
 31922                           intcon2	equ	0xFF1
 31923                           intcon3	equ	0xFF0
 31924                           indf0	equ	0xFEF
 31925                           postinc0	equ	0xFEE
 31926                           fsr0h	equ	0xFEA
 31927                           fsr0l	equ	0xFE9
 31928                           wreg	equ	0xFE8
 31929                           postinc1	equ	0xFE6
 31930                           postdec1	equ	0xFE5
 31931                           plusw1	equ	0xFE3
 31932                           fsr1h	equ	0xFE2
 31933                           fsr1l	equ	0xFE1
 31934                           indf2	equ	0xFDF
 31935                           postinc2	equ	0xFDE
 31936                           postdec2	equ	0xFDD
 31937                           fsr2h	equ	0xFDA
 31938                           fsr2l	equ	0xFD9
 31939                           status	equ	0xFD8
 31940                           
 31941 ;; *************** function _ExecuteNewChannel *****************
 31942 ;; Defined at:
 31943 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31944 ;; Parameters:    Size  Location     Type
 31945 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 31946 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 31947 ;; Auto vars:     Size  Location     Type
 31948 ;;  frequency       4   75[BANK0 ] unsigned long 
 31949 ;;  channelIndex    1   79[BANK0 ] unsigned char 
 31950 ;;  drRange         1   74[BANK0 ] struct .
 31951 ;; Return value:  Size  Location     Type
 31952 ;;                  2   70[BANK0 ] PTR unsigned char 
 31953 ;; Registers used:
 31954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31955 ;; Tracked objects:
 31956 ;;		On entry : 0/0
 31957 ;;		On exit  : 0/0
 31958 ;;		Unchanged: 0/0
 31959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31960 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31961 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31962 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31963 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31964 ;;Total ram usage:       10 bytes
 31965 ;; Hardware stack levels used:    1
 31966 ;; Hardware stack levels required when called:    9
 31967 ;; This function calls:
 31968 ;;		_LORAWAN_SetChannelIdStatus
 31969 ;;		_UpdateChannelIdStatus
 31970 ;;		_UpdateDataRange
 31971 ;;		_UpdateDutyCycle
 31972 ;;		_UpdateFrequency
 31973 ;;		_ValidateChannelId
 31974 ;;		_ValidateDataRange
 31975 ;;		_ValidateFrequency
 31976 ;;		___lmul
 31977 ;; This function is called by:
 31978 ;;		_MacExecuteCommands
 31979 ;; This function uses a non-reentrant model
 31980 ;;
 31981                           
 31982                           	psect	text180
 31983  005958                     __ptext180:
 31984                           	opt stack 0
 31985  005958                     _ExecuteNewChannel:
 31986                           	opt stack 16
 31987                           
 31988                           ;lorawan_eu.c: 679: uint8_t channelIndex;
 31989                           ;lorawan_eu.c: 680: DataRange_t drRange;
 31990                           ;lorawan_eu.c: 681: uint32_t frequency = 0;
 31991                           
 31992                           ;incstack = 0
 31993  005958  0E00               	movlw	0
 31994  00595A  0100               	movlb	0	; () banked
 31995  00595C  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 31996  00595E  0E00               	movlw	0
 31997  005960  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 31998  005962  0E00               	movlw	0
 31999  005964  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 32000  005966  0E00               	movlw	0
 32001  005968  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 32002                           
 32003                           ; BSR set to: 0
 32004                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 32005  00596A  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 32006  00596E  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 32007  005972  50DF               	movf	indf2,w,c
 32008  005974  6FAF               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 32009                           
 32010                           ; BSR set to: 0
 32011  005976  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 32012  005978  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 32013                           
 32014                           ; BSR set to: 0
 32015                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 32016  00597A  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 32017  00597E  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 32018  005982  0EFF               	movlw	255
 32019  005984  14DE               	andwf	postinc2,w,c
 32020  005986  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 32021  005988  0EFF               	movlw	255
 32022  00598A  14DE               	andwf	postinc2,w,c
 32023  00598C  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 32024  00598E  0EFF               	movlw	255
 32025  005990  14DE               	andwf	postinc2,w,c
 32026  005992  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 32027  005994  0E00               	movlw	0
 32028  005996  14DE               	andwf	postinc2,w,c
 32029  005998  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 32030                           
 32031                           ; BSR set to: 0
 32032                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 32033  00599A  C0AB  F09A         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 32034  00599E  C0AC  F09B         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 32035  0059A2  C0AD  F09C         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 32036  0059A6  C0AE  F09D         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 32037  0059AA  0E64               	movlw	100
 32038  0059AC  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 32039  0059AE  0E00               	movlw	0
 32040  0059B0  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 32041  0059B2  0E00               	movlw	0
 32042  0059B4  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 32043  0059B6  0E00               	movlw	0
 32044  0059B8  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 32045  0059BA  EC1D  F057         	call	___lmul	;wreg free
 32046  0059BE  C09A  F0AB         	movff	?___lmul,ExecuteNewChannel@frequency
 32047  0059C2  C09B  F0AC         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 32048  0059C6  C09C  F0AD         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 32049  0059CA  C09D  F0AE         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 32050                           
 32051                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 32052  0059CE  0E03               	movlw	3
 32053  0059D0  0100               	movlb	0	; () banked
 32054  0059D2  25A6               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 32055  0059D4  6FA6               	movwf	ExecuteNewChannel@ptr& (0+255),b
 32056  0059D6  0E00               	movlw	0
 32057  0059D8  21A7               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 32058  0059DA  6FA7               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 32059                           
 32060                           ; BSR set to: 0
 32061                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 32062  0059DC  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 32063  0059E0  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 32064  0059E4  50DF               	movf	indf2,w,c
 32065  0059E6  6FAA               	movwf	ExecuteNewChannel@drRange& (0+255),b
 32066                           
 32067                           ; BSR set to: 0
 32068  0059E8  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 32069  0059EA  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 32070                           
 32071                           ; BSR set to: 0
 32072                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 32073  0059EC  0E00               	movlw	0
 32074  0059EE  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 32075  0059F0  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32076  0059F2  ECF7  F05E         	call	_ValidateChannelId
 32077  0059F6  0900               	iorlw	0
 32078  0059F8  A4D8               	btfss	status,2,c
 32079  0059FA  D04B               	goto	l1452
 32080                           
 32081                           ;lorawan_eu.c: 692: {
 32082                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 32083  0059FC  C0AB  F060         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 32084  005A00  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 32085  005A04  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 32086  005A08  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 32087  005A0C  EC83  F054         	call	_ValidateFrequency	;wreg free
 32088  005A10  0900               	iorlw	0
 32089  005A12  B4D8               	btfsc	status,2,c
 32090  005A14  D007               	goto	u21580
 32091  005A16  0100               	movlb	0	; () banked
 32092  005A18  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 32093  005A1A  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 32094  005A1C  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 32095  005A1E  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 32096  005A20  A4D8               	btfss	status,2,c
 32097  005A22  D018               	goto	l1449
 32098  005A24                     u21580:
 32099                           
 32100                           ;lorawan_eu.c: 694: {
 32101                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 32102                           
 32103                           ; BSR set to: 0
 32104  005A24  0102               	movlb	2	; () banked
 32105  005A26  51AB               	movf	(_loRa+167)& (0+255),w,b
 32106  005A28  0D02               	mullw	2
 32107  005A2A  0E04               	movlw	low _loRa
 32108  005A2C  0100               	movlb	0	; () banked
 32109  005A2E  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 32110  005A30  0E02               	movlw	high _loRa
 32111  005A32  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 32112  005A34  0EA8               	movlw	168
 32113  005A36  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32114  005A38  0E00               	movlw	0
 32115  005A3A  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32116  005A3C  50F3               	movf	prodl,w,c
 32117  005A3E  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32118  005A40  50F4               	movf	prodh,w,c
 32119  005A42  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32120  005A44  0E01               	movlw	1
 32121  005A46  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 32122  005A48  6ED9               	movwf	fsr2l,c
 32123  005A4A  0E00               	movlw	0
 32124  005A4C  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 32125  005A4E  6EDA               	movwf	fsr2h,c
 32126  005A50  0102               	movlb	2	; () banked
 32127  005A52  8EDF               	bsf	indf2,7,c
 32128  005A54                     l1449:
 32129                           
 32130                           ;lorawan_eu.c: 696: }
 32131                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 32132                           
 32133                           ; BSR set to: 2
 32134  005A54  0100               	movlb	0	; () banked
 32135  005A56  51AA               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 32136  005A58  ECC5  F059         	call	_ValidateDataRange
 32137  005A5C  0900               	iorlw	0
 32138  005A5E  A4D8               	btfss	status,2,c
 32139  005A60  D018               	goto	l1452
 32140                           
 32141                           ;lorawan_eu.c: 699: {
 32142                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 32143  005A62  0102               	movlb	2	; () banked
 32144  005A64  51AB               	movf	(_loRa+167)& (0+255),w,b
 32145  005A66  0D02               	mullw	2
 32146  005A68  0E04               	movlw	low _loRa
 32147  005A6A  0100               	movlb	0	; () banked
 32148  005A6C  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 32149  005A6E  0E02               	movlw	high _loRa
 32150  005A70  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 32151  005A72  0EA8               	movlw	168
 32152  005A74  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32153  005A76  0E00               	movlw	0
 32154  005A78  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32155  005A7A  50F3               	movf	prodl,w,c
 32156  005A7C  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32157  005A7E  50F4               	movf	prodh,w,c
 32158  005A80  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32159  005A82  0E01               	movlw	1
 32160  005A84  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 32161  005A86  6ED9               	movwf	fsr2l,c
 32162  005A88  0E00               	movlw	0
 32163  005A8A  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 32164  005A8C  6EDA               	movwf	fsr2h,c
 32165  005A8E  0102               	movlb	2	; () banked
 32166  005A90  8CDF               	bsf	indf2,6,c
 32167  005A92                     l1452:
 32168                           
 32169                           ;lorawan_eu.c: 701: }
 32170                           ;lorawan_eu.c: 702: }
 32171                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 32172                           
 32173                           ; BSR set to: 2
 32174  005A92  0102               	movlb	2	; () banked
 32175  005A94  51AB               	movf	(_loRa+167)& (0+255),w,b
 32176  005A96  0D02               	mullw	2
 32177  005A98  0E04               	movlw	low _loRa
 32178  005A9A  0100               	movlb	0	; () banked
 32179  005A9C  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 32180  005A9E  0E02               	movlw	high _loRa
 32181  005AA0  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 32182  005AA2  0EA8               	movlw	168
 32183  005AA4  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32184  005AA6  0E00               	movlw	0
 32185  005AA8  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32186  005AAA  50F3               	movf	prodl,w,c
 32187  005AAC  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32188  005AAE  50F4               	movf	prodh,w,c
 32189  005AB0  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32190  005AB2  0E01               	movlw	1
 32191  005AB4  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 32192  005AB6  6ED9               	movwf	fsr2l,c
 32193  005AB8  0E00               	movlw	0
 32194  005ABA  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 32195  005ABC  6EDA               	movwf	fsr2h,c
 32196  005ABE  0102               	movlb	2	; () banked
 32197  005AC0  AEDF               	btfss	indf2,7,c
 32198  005AC2  D07D               	goto	l1453
 32199                           
 32200                           ; BSR set to: 2
 32201  005AC4  51AB               	movf	(_loRa+167)& (0+255),w,b
 32202  005AC6  0D02               	mullw	2
 32203  005AC8  0E04               	movlw	low _loRa
 32204  005ACA  0100               	movlb	0	; () banked
 32205  005ACC  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 32206  005ACE  0E02               	movlw	high _loRa
 32207  005AD0  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 32208  005AD2  0EA8               	movlw	168
 32209  005AD4  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32210  005AD6  0E00               	movlw	0
 32211  005AD8  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32212  005ADA  50F3               	movf	prodl,w,c
 32213  005ADC  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32214  005ADE  50F4               	movf	prodh,w,c
 32215  005AE0  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32216  005AE2  0E01               	movlw	1
 32217  005AE4  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 32218  005AE6  6ED9               	movwf	fsr2l,c
 32219  005AE8  0E00               	movlw	0
 32220  005AEA  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 32221  005AEC  6EDA               	movwf	fsr2h,c
 32222  005AEE  0102               	movlb	2	; () banked
 32223  005AF0  ACDF               	btfss	indf2,6,c
 32224  005AF2  D065               	goto	l1453
 32225                           
 32226                           ; BSR set to: 2
 32227                           ;lorawan_eu.c: 705: {
 32228                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 32229  005AF4  0E10               	movlw	16
 32230  005AF6  61DE               	cpfslt	(_loRa+218)& (0+255),b
 32231  005AF8  D02E               	goto	l1454
 32232                           
 32233                           ; BSR set to: 2
 32234                           ;lorawan_eu.c: 707: {
 32235                           ;lorawan_eu.c: 708: if (frequency != 0)
 32236  005AFA  0100               	movlb	0	; () banked
 32237  005AFC  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 32238  005AFE  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 32239  005B00  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 32240  005B02  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 32241  005B04  B4D8               	btfsc	status,2,c
 32242  005B06  D020               	goto	l1455
 32243                           
 32244                           ; BSR set to: 0
 32245                           ;lorawan_eu.c: 709: {
 32246                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 32247  005B08  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 32248  005B0C  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 32249  005B10  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 32250  005B14  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 32251  005B18  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32252  005B1A  EC4F  F05A         	call	_UpdateFrequency
 32253                           
 32254                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 32255  005B1E  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 32256  005B22  0100               	movlb	0	; () banked
 32257  005B24  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32258  005B26  EC47  F03C         	call	_UpdateDataRange
 32259                           
 32260                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 32261  005B2A  0E01               	movlw	1
 32262  005B2C  0100               	movlb	0	; () banked
 32263  005B2E  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 32264  005B30  0E2E               	movlw	46
 32265  005B32  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 32266  005B34  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32267  005B36  EC71  F05A         	call	_UpdateDutyCycle
 32268                           
 32269                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 32270  005B3A  0E01               	movlw	1
 32271  005B3C  0100               	movlb	0	; () banked
 32272  005B3E  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 32273  005B40  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32274  005B42  EC33  F03A         	call	_UpdateChannelIdStatus
 32275                           
 32276                           ;lorawan_eu.c: 714: }
 32277  005B46  D039               	goto	l1459
 32278  005B48                     l1455:
 32279                           
 32280                           ;lorawan_eu.c: 715: else
 32281                           ;lorawan_eu.c: 716: {
 32282                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 32283  005B48  0E00               	movlw	0
 32284  005B4A  0100               	movlb	0	; () banked
 32285  005B4C  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 32286  005B4E  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32287  005B50  ECC3  F056         	call	_LORAWAN_SetChannelIdStatus
 32288                           
 32289                           ;lorawan_eu.c: 718: }
 32290                           ;lorawan_eu.c: 719: }
 32291  005B54  D032               	goto	l1459
 32292  005B56                     l1454:
 32293                           
 32294                           ;lorawan_eu.c: 720: else
 32295                           ;lorawan_eu.c: 721: {
 32296                           ;lorawan_eu.c: 722: if (frequency != 0)
 32297  005B56  0100               	movlb	0	; () banked
 32298  005B58  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 32299  005B5A  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 32300  005B5C  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 32301  005B5E  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 32302  005B60  B4D8               	btfsc	status,2,c
 32303  005B62  D024               	goto	l1458
 32304                           
 32305                           ; BSR set to: 0
 32306                           ;lorawan_eu.c: 723: {
 32307                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 32308  005B64  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 32309  005B68  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 32310  005B6C  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 32311  005B70  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 32312  005B74  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32313  005B76  0F10               	addlw	16
 32314  005B78  EC4F  F05A         	call	_UpdateFrequency
 32315                           
 32316                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 32317  005B7C  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 32318  005B80  0100               	movlb	0	; () banked
 32319  005B82  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32320  005B84  0F10               	addlw	16
 32321  005B86  EC47  F03C         	call	_UpdateDataRange
 32322                           
 32323                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 32324  005B8A  0E01               	movlw	1
 32325  005B8C  0100               	movlb	0	; () banked
 32326  005B8E  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 32327  005B90  0E2E               	movlw	46
 32328  005B92  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 32329  005B94  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32330  005B96  0F10               	addlw	16
 32331  005B98  EC71  F05A         	call	_UpdateDutyCycle
 32332                           
 32333                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 32334  005B9C  0E01               	movlw	1
 32335  005B9E  0100               	movlb	0	; () banked
 32336  005BA0  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 32337  005BA2  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32338  005BA4  0F10               	addlw	16
 32339  005BA6  EC33  F03A         	call	_UpdateChannelIdStatus
 32340                           
 32341                           ;lorawan_eu.c: 728: }
 32342  005BAA  D007               	goto	l1459
 32343  005BAC                     l1458:
 32344                           
 32345                           ;lorawan_eu.c: 729: else
 32346                           ;lorawan_eu.c: 730: {
 32347                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 32348  005BAC  0E00               	movlw	0
 32349  005BAE  0100               	movlb	0	; () banked
 32350  005BB0  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 32351  005BB2  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32352  005BB4  0F10               	addlw	16
 32353  005BB6  ECC3  F056         	call	_LORAWAN_SetChannelIdStatus
 32354  005BBA                     l1459:
 32355                           
 32356                           ;lorawan_eu.c: 732: }
 32357                           ;lorawan_eu.c: 733: }
 32358                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 32359  005BBA  0102               	movlb	2	; () banked
 32360  005BBC  8707               	bsf	(_loRa+3)& (0+255),3,b
 32361  005BBE                     l1453:
 32362                           
 32363                           ; BSR set to: 2
 32364                           ;lorawan_eu.c: 736: }
 32365                           ;lorawan_eu.c: 737: return ptr;
 32366                           
 32367                           ; BSR set to: 2
 32368  005BBE  C0A6  F0A6         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 32369  005BC2  C0A7  F0A7         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 32370  005BC6  0012               	return	
 32371  005BC8                     __end_of_ExecuteNewChannel:
 32372                           	opt stack 0
 32373                           tosu	equ	0xFFF
 32374                           tosh	equ	0xFFE
 32375                           tosl	equ	0xFFD
 32376                           pclath	equ	0xFFA
 32377                           tblptru	equ	0xFF8
 32378                           tblptrh	equ	0xFF7
 32379                           tblptrl	equ	0xFF6
 32380                           tablat	equ	0xFF5
 32381                           prodh	equ	0xFF4
 32382                           prodl	equ	0xFF3
 32383                           intcon	equ	0xFF2
 32384                           intcon2	equ	0xFF1
 32385                           intcon3	equ	0xFF0
 32386                           indf0	equ	0xFEF
 32387                           postinc0	equ	0xFEE
 32388                           fsr0h	equ	0xFEA
 32389                           fsr0l	equ	0xFE9
 32390                           wreg	equ	0xFE8
 32391                           postinc1	equ	0xFE6
 32392                           postdec1	equ	0xFE5
 32393                           plusw1	equ	0xFE3
 32394                           fsr1h	equ	0xFE2
 32395                           fsr1l	equ	0xFE1
 32396                           indf2	equ	0xFDF
 32397                           postinc2	equ	0xFDE
 32398                           postdec2	equ	0xFDD
 32399                           fsr2h	equ	0xFDA
 32400                           fsr2l	equ	0xFD9
 32401                           status	equ	0xFD8
 32402                           
 32403 ;; *************** function _ValidateFrequency *****************
 32404 ;; Defined at:
 32405 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32406 ;; Parameters:    Size  Location     Type
 32407 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 32408 ;; Auto vars:     Size  Location     Type
 32409 ;;  result          1    4[BANK0 ] enum E7249
 32410 ;; Return value:  Size  Location     Type
 32411 ;;                  1    wreg      enum E7249
 32412 ;; Registers used:
 32413 ;;		wreg, status,2, status,0
 32414 ;; Tracked objects:
 32415 ;;		On entry : 0/0
 32416 ;;		On exit  : 0/0
 32417 ;;		Unchanged: 0/0
 32418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32422 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32423 ;;Total ram usage:        5 bytes
 32424 ;; Hardware stack levels used:    1
 32425 ;; Hardware stack levels required when called:    7
 32426 ;; This function calls:
 32427 ;;		Nothing
 32428 ;; This function is called by:
 32429 ;;		_ExecuteNewChannel
 32430 ;;		_ExecuteRxParamSetupReq
 32431 ;;		_UpdateCfList
 32432 ;;		_LORAWAN_SetReceiveWindow2Parameters
 32433 ;;		_LORAWAN_SetFrequency
 32434 ;; This function uses a non-reentrant model
 32435 ;;
 32436                           
 32437                           	psect	text181
 32438  00A906                     __ptext181:
 32439                           	opt stack 0
 32440  00A906                     _ValidateFrequency:
 32441                           	opt stack 18
 32442                           
 32443                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 32444                           
 32445                           ; BSR set to: 2
 32446                           ;incstack = 0
 32447  00A906  0E00               	movlw	0
 32448  00A908  0100               	movlb	0	; () banked
 32449  00A90A  6F64               	movwf	ValidateFrequency@result& (0+255),b
 32450                           
 32451                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 32452  00A90C  0102               	movlb	2	; () banked
 32453  00A90E  51A8               	movf	(_loRa+164)& (0+255),w,b
 32454  00A910  A4D8               	btfss	status,2,c
 32455  00A912  D013               	goto	l1565
 32456                           
 32457                           ; BSR set to: 2
 32458                           ;lorawan_eu.c: 1093: {
 32459                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 32460  00A914  0E81               	movlw	129
 32461  00A916  0100               	movlb	0	; () banked
 32462  00A918  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 32463  00A91A  0E25               	movlw	37
 32464  00A91C  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 32465  00A91E  0EDB               	movlw	219
 32466  00A920  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 32467  00A922  0E33               	movlw	51
 32468  00A924  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 32469  00A926  B0D8               	btfsc	status,0,c
 32470  00A928  D01D               	goto	u20570
 32471                           
 32472                           ; BSR set to: 0
 32473  00A92A  0EC0               	movlw	192
 32474  00A92C  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 32475  00A92E  0E55               	movlw	85
 32476  00A930  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 32477  00A932  0E70               	movlw	112
 32478  00A934  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 32479  00A936  0E33               	movlw	51
 32480  00A938  D012               	goto	L33
 32481  00A93A                     l1565:
 32482                           
 32483                           ;lorawan_eu.c: 1099: else
 32484                           ;lorawan_eu.c: 1100: {
 32485                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 32486                           
 32487                           ; BSR set to: 0
 32488  00A93A  0E71               	movlw	113
 32489  00A93C  0100               	movlb	0	; () banked
 32490  00A93E  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 32491  00A940  0E5E               	movlw	94
 32492  00A942  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 32493  00A944  0EEA               	movlw	234
 32494  00A946  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 32495  00A948  0E19               	movlw	25
 32496  00A94A  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 32497  00A94C  B0D8               	btfsc	status,0,c
 32498  00A94E  D00A               	goto	u20570
 32499                           
 32500                           ; BSR set to: 0
 32501  00A950  0E90               	movlw	144
 32502  00A952  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 32503  00A954  0ED1               	movlw	209
 32504  00A956  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 32505  00A958  0ECF               	movlw	207
 32506  00A95A  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 32507  00A95C  0E19               	movlw	25
 32508  00A95E                     L33:
 32509  00A95E  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 32510  00A960  B0D8               	btfsc	status,0,c
 32511  00A962  D002               	goto	l1570
 32512  00A964                     u20570:
 32513                           
 32514                           ; BSR set to: 0
 32515                           ;lorawan_eu.c: 1102: {
 32516                           ;lorawan_eu.c: 1103: result = INVALID_PARAMETER ;
 32517                           
 32518                           ; BSR set to: 0
 32519  00A964  0E03               	movlw	3
 32520  00A966  6F64               	movwf	ValidateFrequency@result& (0+255),b
 32521  00A968                     l1570:
 32522                           
 32523                           ; BSR set to: 0
 32524                           ;lorawan_eu.c: 1104: }
 32525                           ;lorawan_eu.c: 1105: }
 32526                           ;lorawan_eu.c: 1107: return result;
 32527                           
 32528                           ; BSR set to: 0
 32529  00A968  5164               	movf	ValidateFrequency@result& (0+255),w,b
 32530  00A96A  0012               	return	
 32531  00A96C                     __end_of_ValidateFrequency:
 32532                           	opt stack 0
 32533                           tosu	equ	0xFFF
 32534                           tosh	equ	0xFFE
 32535                           tosl	equ	0xFFD
 32536                           pclath	equ	0xFFA
 32537                           tblptru	equ	0xFF8
 32538                           tblptrh	equ	0xFF7
 32539                           tblptrl	equ	0xFF6
 32540                           tablat	equ	0xFF5
 32541                           prodh	equ	0xFF4
 32542                           prodl	equ	0xFF3
 32543                           intcon	equ	0xFF2
 32544                           intcon2	equ	0xFF1
 32545                           intcon3	equ	0xFF0
 32546                           indf0	equ	0xFEF
 32547                           postinc0	equ	0xFEE
 32548                           fsr0h	equ	0xFEA
 32549                           fsr0l	equ	0xFE9
 32550                           wreg	equ	0xFE8
 32551                           postinc1	equ	0xFE6
 32552                           postdec1	equ	0xFE5
 32553                           plusw1	equ	0xFE3
 32554                           fsr1h	equ	0xFE2
 32555                           fsr1l	equ	0xFE1
 32556                           indf2	equ	0xFDF
 32557                           postinc2	equ	0xFDE
 32558                           postdec2	equ	0xFDD
 32559                           fsr2h	equ	0xFDA
 32560                           fsr2l	equ	0xFD9
 32561                           status	equ	0xFD8
 32562                           
 32563 ;; *************** function _ValidateDataRange *****************
 32564 ;; Defined at:
 32565 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32566 ;; Parameters:    Size  Location     Type
 32567 ;;  dataRangeNew    1    wreg     unsigned char 
 32568 ;; Auto vars:     Size  Location     Type
 32569 ;;  dataRangeNew    1    3[BANK0 ] unsigned char 
 32570 ;;  dataRateMin     1    5[BANK0 ] unsigned char 
 32571 ;;  dataRateMax     1    4[BANK0 ] unsigned char 
 32572 ;;  result          1    2[BANK0 ] enum E7249
 32573 ;; Return value:  Size  Location     Type
 32574 ;;                  1    wreg      enum E7249
 32575 ;; Registers used:
 32576 ;;		wreg, status,2, status,0, cstack
 32577 ;; Tracked objects:
 32578 ;;		On entry : 0/0
 32579 ;;		On exit  : 0/0
 32580 ;;		Unchanged: 0/0
 32581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32583 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32585 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32586 ;;Total ram usage:        4 bytes
 32587 ;; Hardware stack levels used:    1
 32588 ;; Hardware stack levels required when called:    8
 32589 ;; This function calls:
 32590 ;;		_ValidateDataRate
 32591 ;; This function is called by:
 32592 ;;		_ExecuteNewChannel
 32593 ;;		_LORAWAN_SetDataRange
 32594 ;; This function uses a non-reentrant model
 32595 ;;
 32596                           
 32597                           	psect	text182
 32598  00B38A                     __ptext182:
 32599                           	opt stack 0
 32600  00B38A                     _ValidateDataRange:
 32601                           	opt stack 16
 32602                           
 32603                           ; BSR set to: 0
 32604                           ;incstack = 0
 32605                           ;ValidateDataRange@dataRangeNew stored from wreg
 32606  00B38A  0100               	movlb	0	; () banked
 32607  00B38C  6F63               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 32608                           
 32609                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 32610  00B38E  0E00               	movlw	0
 32611  00B390  0100               	movlb	0	; () banked
 32612  00B392  6F62               	movwf	ValidateDataRange@result& (0+255),b
 32613                           
 32614                           ; BSR set to: 0
 32615                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 32616                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 32617  00B394  5163               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 32618  00B396  0B0F               	andlw	15
 32619  00B398  6F65               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 32620                           
 32621                           ; BSR set to: 0
 32622                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 32623  00B39A  3963               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 32624  00B39C  0B0F               	andlw	15
 32625  00B39E  0B0F               	andlw	15
 32626  00B3A0  6F64               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 32627                           
 32628                           ; BSR set to: 0
 32629                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 32630  00B3A2  5164               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 32631  00B3A4  EC2A  F061         	call	_ValidateDataRate
 32632  00B3A8  0900               	iorlw	0
 32633  00B3AA  A4D8               	btfss	status,2,c
 32634  00B3AC  D00C               	goto	u20600
 32635  00B3AE  0100               	movlb	0	; () banked
 32636  00B3B0  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 32637  00B3B2  EC2A  F061         	call	_ValidateDataRate
 32638  00B3B6  0900               	iorlw	0
 32639  00B3B8  A4D8               	btfss	status,2,c
 32640  00B3BA  D005               	goto	u20600
 32641  00B3BC  0100               	movlb	0	; () banked
 32642  00B3BE  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 32643  00B3C0  5D64               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 32644  00B3C2  B0D8               	btfsc	status,0,c
 32645  00B3C4  D003               	goto	l1576
 32646  00B3C6                     u20600:
 32647                           
 32648                           ;lorawan_eu.c: 1119: {
 32649                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 32650                           
 32651                           ; BSR set to: 0
 32652  00B3C6  0E03               	movlw	3
 32653  00B3C8  0100               	movlb	0	; () banked
 32654  00B3CA  6F62               	movwf	ValidateDataRange@result& (0+255),b
 32655  00B3CC                     l1576:
 32656                           
 32657                           ; BSR set to: 0
 32658                           ;lorawan_eu.c: 1121: }
 32659                           ;lorawan_eu.c: 1122: return result;
 32660  00B3CC  5162               	movf	ValidateDataRange@result& (0+255),w,b
 32661  00B3CE  0012               	return	
 32662  00B3D0                     __end_of_ValidateDataRange:
 32663                           	opt stack 0
 32664                           tosu	equ	0xFFF
 32665                           tosh	equ	0xFFE
 32666                           tosl	equ	0xFFD
 32667                           pclath	equ	0xFFA
 32668                           tblptru	equ	0xFF8
 32669                           tblptrh	equ	0xFF7
 32670                           tblptrl	equ	0xFF6
 32671                           tablat	equ	0xFF5
 32672                           prodh	equ	0xFF4
 32673                           prodl	equ	0xFF3
 32674                           intcon	equ	0xFF2
 32675                           intcon2	equ	0xFF1
 32676                           intcon3	equ	0xFF0
 32677                           indf0	equ	0xFEF
 32678                           postinc0	equ	0xFEE
 32679                           fsr0h	equ	0xFEA
 32680                           fsr0l	equ	0xFE9
 32681                           wreg	equ	0xFE8
 32682                           postinc1	equ	0xFE6
 32683                           postdec1	equ	0xFE5
 32684                           plusw1	equ	0xFE3
 32685                           fsr1h	equ	0xFE2
 32686                           fsr1l	equ	0xFE1
 32687                           indf2	equ	0xFDF
 32688                           postinc2	equ	0xFDE
 32689                           postdec2	equ	0xFDD
 32690                           fsr2h	equ	0xFDA
 32691                           fsr2l	equ	0xFD9
 32692                           status	equ	0xFD8
 32693                           
 32694 ;; *************** function _UpdateFrequency *****************
 32695 ;; Defined at:
 32696 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32697 ;; Parameters:    Size  Location     Type
 32698 ;;  channelId       1    wreg     unsigned char 
 32699 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 32700 ;; Auto vars:     Size  Location     Type
 32701 ;;  channelId       1    4[BANK0 ] unsigned char 
 32702 ;; Return value:  Size  Location     Type
 32703 ;;                  1    wreg      void 
 32704 ;; Registers used:
 32705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32706 ;; Tracked objects:
 32707 ;;		On entry : 0/0
 32708 ;;		On exit  : 0/0
 32709 ;;		Unchanged: 0/0
 32710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32711 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32714 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32715 ;;Total ram usage:        5 bytes
 32716 ;; Hardware stack levels used:    1
 32717 ;; Hardware stack levels required when called:    7
 32718 ;; This function calls:
 32719 ;;		Nothing
 32720 ;; This function is called by:
 32721 ;;		_ExecuteNewChannel
 32722 ;;		_LORAWAN_SetFrequency
 32723 ;; This function uses a non-reentrant model
 32724 ;;
 32725                           
 32726                           	psect	text183
 32727  00B49E                     __ptext183:
 32728                           	opt stack 0
 32729  00B49E                     _UpdateFrequency:
 32730                           	opt stack 17
 32731                           
 32732                           ; BSR set to: 0
 32733                           ;incstack = 0
 32734                           ;UpdateFrequency@channelId stored from wreg
 32735  00B49E  0100               	movlb	0	; () banked
 32736  00B4A0  6F64               	movwf	UpdateFrequency@channelId& (0+255),b
 32737                           
 32738                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 32739  00B4A2  0100               	movlb	0	; () banked
 32740  00B4A4  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 32741  00B4A6  0D0E               	mullw	14
 32742  00B4A8  0E00               	movlw	low _Channels
 32743  00B4AA  24F3               	addwf	prodl,w,c
 32744  00B4AC  6ED9               	movwf	fsr2l,c
 32745  00B4AE  0E04               	movlw	high _Channels
 32746  00B4B0  20F4               	addwfc	prodh,w,c
 32747  00B4B2  6EDA               	movwf	fsr2h,c
 32748  00B4B4  C060  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 32749  00B4B8  C061  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 32750  00B4BC  C062  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 32751  00B4C0  C063  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 32752                           
 32753                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 32754  00B4C4  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 32755  00B4C6  0D0E               	mullw	14
 32756  00B4C8  0E0D               	movlw	13
 32757  00B4CA  26F3               	addwf	prodl,f,c
 32758  00B4CC  0E00               	movlw	0
 32759  00B4CE  22F4               	addwfc	prodh,f,c
 32760  00B4D0  0E00               	movlw	low _Channels
 32761  00B4D2  24F3               	addwf	prodl,w,c
 32762  00B4D4  6ED9               	movwf	fsr2l,c
 32763  00B4D6  0E04               	movlw	high _Channels
 32764  00B4D8  20F4               	addwfc	prodh,w,c
 32765  00B4DA  6EDA               	movwf	fsr2h,c
 32766  00B4DC  0E00               	movlw	0
 32767  00B4DE  80DB               	bsf	plusw2,0,c
 32768                           
 32769                           ; BSR set to: 0
 32770  00B4E0  0012               	return		;funcret
 32771  00B4E2                     __end_of_UpdateFrequency:
 32772                           	opt stack 0
 32773                           tosu	equ	0xFFF
 32774                           tosh	equ	0xFFE
 32775                           tosl	equ	0xFFD
 32776                           pclath	equ	0xFFA
 32777                           tblptru	equ	0xFF8
 32778                           tblptrh	equ	0xFF7
 32779                           tblptrl	equ	0xFF6
 32780                           tablat	equ	0xFF5
 32781                           prodh	equ	0xFF4
 32782                           prodl	equ	0xFF3
 32783                           intcon	equ	0xFF2
 32784                           intcon2	equ	0xFF1
 32785                           intcon3	equ	0xFF0
 32786                           indf0	equ	0xFEF
 32787                           postinc0	equ	0xFEE
 32788                           fsr0h	equ	0xFEA
 32789                           fsr0l	equ	0xFE9
 32790                           wreg	equ	0xFE8
 32791                           postinc1	equ	0xFE6
 32792                           postdec1	equ	0xFE5
 32793                           plusw1	equ	0xFE3
 32794                           fsr1h	equ	0xFE2
 32795                           fsr1l	equ	0xFE1
 32796                           indf2	equ	0xFDF
 32797                           postinc2	equ	0xFDE
 32798                           postdec2	equ	0xFDD
 32799                           plusw2	equ	0xFDB
 32800                           fsr2h	equ	0xFDA
 32801                           fsr2l	equ	0xFD9
 32802                           status	equ	0xFD8
 32803                           
 32804 ;; *************** function _UpdateDutyCycle *****************
 32805 ;; Defined at:
 32806 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32807 ;; Parameters:    Size  Location     Type
 32808 ;;  channelId       1    wreg     unsigned char 
 32809 ;;  dutyCycleNew    2    0[BANK0 ] unsigned int 
 32810 ;; Auto vars:     Size  Location     Type
 32811 ;;  channelId       1    2[BANK0 ] unsigned char 
 32812 ;; Return value:  Size  Location     Type
 32813 ;;                  1    wreg      void 
 32814 ;; Registers used:
 32815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32816 ;; Tracked objects:
 32817 ;;		On entry : 0/0
 32818 ;;		On exit  : 0/0
 32819 ;;		Unchanged: 0/0
 32820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32821 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32822 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32824 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32825 ;;Total ram usage:        3 bytes
 32826 ;; Hardware stack levels used:    1
 32827 ;; Hardware stack levels required when called:    7
 32828 ;; This function calls:
 32829 ;;		Nothing
 32830 ;; This function is called by:
 32831 ;;		_ExecuteNewChannel
 32832 ;;		_LORAWAN_SetDutyCycle
 32833 ;; This function uses a non-reentrant model
 32834 ;;
 32835                           
 32836                           	psect	text184
 32837  00B4E2                     __ptext184:
 32838                           	opt stack 0
 32839  00B4E2                     _UpdateDutyCycle:
 32840                           	opt stack 17
 32841                           
 32842                           ; BSR set to: 0
 32843                           ;incstack = 0
 32844                           ;UpdateDutyCycle@channelId stored from wreg
 32845  00B4E2  0100               	movlb	0	; () banked
 32846  00B4E4  6F62               	movwf	UpdateDutyCycle@channelId& (0+255),b
 32847                           
 32848                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 32849  00B4E6  0100               	movlb	0	; () banked
 32850  00B4E8  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 32851  00B4EA  0D0E               	mullw	14
 32852  00B4EC  0E06               	movlw	6
 32853  00B4EE  26F3               	addwf	prodl,f,c
 32854  00B4F0  0E00               	movlw	0
 32855  00B4F2  22F4               	addwfc	prodh,f,c
 32856  00B4F4  0E00               	movlw	low _Channels
 32857  00B4F6  24F3               	addwf	prodl,w,c
 32858  00B4F8  6ED9               	movwf	fsr2l,c
 32859  00B4FA  0E04               	movlw	high _Channels
 32860  00B4FC  20F4               	addwfc	prodh,w,c
 32861  00B4FE  6EDA               	movwf	fsr2h,c
 32862  00B500  C060  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 32863  00B504  C061  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 32864                           
 32865                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 32866  00B508  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 32867  00B50A  0D0E               	mullw	14
 32868  00B50C  0E0D               	movlw	13
 32869  00B50E  26F3               	addwf	prodl,f,c
 32870  00B510  0E00               	movlw	0
 32871  00B512  22F4               	addwfc	prodh,f,c
 32872  00B514  0E00               	movlw	low _Channels
 32873  00B516  24F3               	addwf	prodl,w,c
 32874  00B518  6ED9               	movwf	fsr2l,c
 32875  00B51A  0E04               	movlw	high _Channels
 32876  00B51C  20F4               	addwfc	prodh,w,c
 32877  00B51E  6EDA               	movwf	fsr2h,c
 32878  00B520  0E00               	movlw	0
 32879  00B522  84DB               	bsf	plusw2,2,c
 32880                           
 32881                           ; BSR set to: 0
 32882  00B524  0012               	return		;funcret
 32883  00B526                     __end_of_UpdateDutyCycle:
 32884                           	opt stack 0
 32885                           tosu	equ	0xFFF
 32886                           tosh	equ	0xFFE
 32887                           tosl	equ	0xFFD
 32888                           pclath	equ	0xFFA
 32889                           tblptru	equ	0xFF8
 32890                           tblptrh	equ	0xFF7
 32891                           tblptrl	equ	0xFF6
 32892                           tablat	equ	0xFF5
 32893                           prodh	equ	0xFF4
 32894                           prodl	equ	0xFF3
 32895                           intcon	equ	0xFF2
 32896                           intcon2	equ	0xFF1
 32897                           intcon3	equ	0xFF0
 32898                           indf0	equ	0xFEF
 32899                           postinc0	equ	0xFEE
 32900                           fsr0h	equ	0xFEA
 32901                           fsr0l	equ	0xFE9
 32902                           wreg	equ	0xFE8
 32903                           postinc1	equ	0xFE6
 32904                           postdec1	equ	0xFE5
 32905                           plusw1	equ	0xFE3
 32906                           fsr1h	equ	0xFE2
 32907                           fsr1l	equ	0xFE1
 32908                           indf2	equ	0xFDF
 32909                           postinc2	equ	0xFDE
 32910                           postdec2	equ	0xFDD
 32911                           plusw2	equ	0xFDB
 32912                           fsr2h	equ	0xFDA
 32913                           fsr2l	equ	0xFD9
 32914                           status	equ	0xFD8
 32915                           
 32916 ;; *************** function _UpdateDataRange *****************
 32917 ;; Defined at:
 32918 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32919 ;; Parameters:    Size  Location     Type
 32920 ;;  channelId       1    wreg     unsigned char 
 32921 ;;  dataRangeNew    1    0[BANK0 ] unsigned char 
 32922 ;; Auto vars:     Size  Location     Type
 32923 ;;  channelId       1    2[BANK0 ] unsigned char 
 32924 ;;  i               1    3[BANK0 ] unsigned char 
 32925 ;; Return value:  Size  Location     Type
 32926 ;;                  1    wreg      void 
 32927 ;; Registers used:
 32928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32929 ;; Tracked objects:
 32930 ;;		On entry : 0/0
 32931 ;;		On exit  : 0/0
 32932 ;;		Unchanged: 0/0
 32933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32934 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32935 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32937 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32938 ;;Total ram usage:        4 bytes
 32939 ;; Hardware stack levels used:    1
 32940 ;; Hardware stack levels required when called:    7
 32941 ;; This function calls:
 32942 ;;		Nothing
 32943 ;; This function is called by:
 32944 ;;		_ExecuteNewChannel
 32945 ;;		_LORAWAN_SetDataRange
 32946 ;; This function uses a non-reentrant model
 32947 ;;
 32948                           
 32949                           	psect	text185
 32950  00788E                     __ptext185:
 32951                           	opt stack 0
 32952  00788E                     _UpdateDataRange:
 32953                           	opt stack 17
 32954                           
 32955                           ; BSR set to: 0
 32956                           ;incstack = 0
 32957                           ;UpdateDataRange@channelId stored from wreg
 32958  00788E  0100               	movlb	0	; () banked
 32959  007890  6F62               	movwf	UpdateDataRange@channelId& (0+255),b
 32960                           
 32961                           ;lorawan_eu.c: 1011: uint8_t i;
 32962                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 32963  007892  0E07               	movlw	7
 32964  007894  0102               	movlb	2	; () banked
 32965  007896  6FEF               	movwf	(_loRa+235)& (0+255),b
 32966                           
 32967                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 32968  007898  0E00               	movlw	0
 32969  00789A  6FF0               	movwf	(_loRa+236)& (0+255),b
 32970                           
 32971                           ; BSR set to: 2
 32972                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 32973  00789C  0100               	movlb	0	; () banked
 32974  00789E  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 32975  0078A0  0D0E               	mullw	14
 32976  0078A2  0E05               	movlw	5
 32977  0078A4  26F3               	addwf	prodl,f,c
 32978  0078A6  0E00               	movlw	0
 32979  0078A8  22F4               	addwfc	prodh,f,c
 32980  0078AA  0E00               	movlw	low _Channels
 32981  0078AC  24F3               	addwf	prodl,w,c
 32982  0078AE  6ED9               	movwf	fsr2l,c
 32983  0078B0  0E04               	movlw	high _Channels
 32984  0078B2  20F4               	addwfc	prodh,w,c
 32985  0078B4  6EDA               	movwf	fsr2h,c
 32986  0078B6  C060  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 32987                           
 32988                           ; BSR set to: 0
 32989                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 32990  0078BA  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 32991  0078BC  0D0E               	mullw	14
 32992  0078BE  0E0D               	movlw	13
 32993  0078C0  26F3               	addwf	prodl,f,c
 32994  0078C2  0E00               	movlw	0
 32995  0078C4  22F4               	addwfc	prodh,f,c
 32996  0078C6  0E00               	movlw	low _Channels
 32997  0078C8  24F3               	addwf	prodl,w,c
 32998  0078CA  6ED9               	movwf	fsr2l,c
 32999  0078CC  0E04               	movlw	high _Channels
 33000  0078CE  20F4               	addwfc	prodh,w,c
 33001  0078D0  6EDA               	movwf	fsr2h,c
 33002  0078D2  0E00               	movlw	0
 33003  0078D4  82DB               	bsf	plusw2,1,c
 33004                           
 33005                           ; BSR set to: 0
 33006                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 33007  0078D6  0E00               	movlw	0
 33008  0078D8  6F63               	movwf	UpdateDataRange@i& (0+255),b
 33009  0078DA  D06D               	goto	l1540
 33010  0078DC                     
 33011                           ; BSR set to: 0
 33012                           ;lorawan_eu.c: 1020: {
 33013                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 33014                           
 33015                           ; BSR set to: 0
 33016  0078DC  5163               	movf	UpdateDataRange@i& (0+255),w,b
 33017  0078DE  0D0E               	mullw	14
 33018  0078E0  0E05               	movlw	5
 33019  0078E2  26F3               	addwf	prodl,f,c
 33020  0078E4  0E00               	movlw	0
 33021  0078E6  22F4               	addwfc	prodh,f,c
 33022  0078E8  0E00               	movlw	low _Channels
 33023  0078EA  24F3               	addwf	prodl,w,c
 33024  0078EC  6ED9               	movwf	fsr2l,c
 33025  0078EE  0E04               	movlw	high _Channels
 33026  0078F0  20F4               	addwfc	prodh,w,c
 33027  0078F2  6EDA               	movwf	fsr2h,c
 33028  0078F4  0104               	movlb	4	; () banked
 33029  0078F6  50DF               	movf	223,w,c
 33030  0078F8  0B0F               	andlw	15
 33031  0078FA  0100               	movlb	0	; () banked
 33032  0078FC  6F61               	movwf	??_UpdateDataRange& (0+255),b
 33033  0078FE  0102               	movlb	2	; () banked
 33034  007900  51EF               	movf	(_loRa+235)& (0+255),w,b
 33035  007902  0100               	movlb	0	; () banked
 33036  007904  5D61               	subwf	??_UpdateDataRange& (0+255),w,b
 33037  007906  B0D8               	btfsc	status,0,c
 33038  007908  D020               	goto	l1542
 33039                           
 33040                           ; BSR set to: 0
 33041  00790A  5163               	movf	UpdateDataRange@i& (0+255),w,b
 33042  00790C  0D0E               	mullw	14
 33043  00790E  0E04               	movlw	4
 33044  007910  26F3               	addwf	prodl,f,c
 33045  007912  0E00               	movlw	0
 33046  007914  22F4               	addwfc	prodh,f,c
 33047  007916  0E00               	movlw	low _Channels
 33048  007918  24F3               	addwf	prodl,w,c
 33049  00791A  6ED9               	movwf	fsr2l,c
 33050  00791C  0E04               	movlw	high _Channels
 33051  00791E  20F4               	addwfc	prodh,w,c
 33052  007920  6EDA               	movwf	fsr2h,c
 33053  007922  04DE               	decf	postinc2,w,c
 33054  007924  A4D8               	btfss	status,2,c
 33055  007926  D011               	goto	l1542
 33056                           
 33057                           ; BSR set to: 0
 33058                           ;lorawan_eu.c: 1022: {
 33059                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 33060  007928  5163               	movf	UpdateDataRange@i& (0+255),w,b
 33061  00792A  0D0E               	mullw	14
 33062  00792C  0E05               	movlw	5
 33063  00792E  26F3               	addwf	prodl,f,c
 33064  007930  0E00               	movlw	0
 33065  007932  22F4               	addwfc	prodh,f,c
 33066  007934  0E00               	movlw	low _Channels
 33067  007936  24F3               	addwf	prodl,w,c
 33068  007938  6ED9               	movwf	fsr2l,c
 33069  00793A  0E04               	movlw	high _Channels
 33070  00793C  20F4               	addwfc	prodh,w,c
 33071  00793E  6EDA               	movwf	fsr2h,c
 33072  007940  0104               	movlb	4	; () banked
 33073  007942  50DF               	movf	223,w,c
 33074  007944  0B0F               	andlw	15
 33075  007946  0102               	movlb	2	; () banked
 33076  007948  6FEF               	movwf	(_loRa+235)& (0+255),b
 33077  00794A                     l1542:
 33078                           
 33079                           ;lorawan_eu.c: 1024: }
 33080                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 33081  00794A  0100               	movlb	0	; () banked
 33082  00794C  5163               	movf	UpdateDataRange@i& (0+255),w,b
 33083  00794E  0D0E               	mullw	14
 33084  007950  0E05               	movlw	5
 33085  007952  26F3               	addwf	prodl,f,c
 33086  007954  0E00               	movlw	0
 33087  007956  22F4               	addwfc	prodh,f,c
 33088  007958  0E00               	movlw	low _Channels
 33089  00795A  24F3               	addwf	prodl,w,c
 33090  00795C  6ED9               	movwf	fsr2l,c
 33091  00795E  0E04               	movlw	high _Channels
 33092  007960  20F4               	addwfc	prodh,w,c
 33093  007962  6EDA               	movwf	fsr2h,c
 33094  007964  0104               	movlb	4	; () banked
 33095  007966  38DF               	swapf	223,w,c
 33096  007968  0B0F               	andlw	15
 33097  00796A  0102               	movlb	2	; () banked
 33098  00796C  61F0               	cpfslt	(_loRa+236)& (0+255),b
 33099  00796E  D021               	goto	l1543
 33100                           
 33101                           ; BSR set to: 2
 33102  007970  0100               	movlb	0	; () banked
 33103  007972  5163               	movf	UpdateDataRange@i& (0+255),w,b
 33104  007974  0D0E               	mullw	14
 33105  007976  0E04               	movlw	4
 33106  007978  26F3               	addwf	prodl,f,c
 33107  00797A  0E00               	movlw	0
 33108  00797C  22F4               	addwfc	prodh,f,c
 33109  00797E  0E00               	movlw	low _Channels
 33110  007980  24F3               	addwf	prodl,w,c
 33111  007982  6ED9               	movwf	fsr2l,c
 33112  007984  0E04               	movlw	high _Channels
 33113  007986  20F4               	addwfc	prodh,w,c
 33114  007988  6EDA               	movwf	fsr2h,c
 33115  00798A  04DE               	decf	postinc2,w,c
 33116  00798C  A4D8               	btfss	status,2,c
 33117  00798E  D011               	goto	l1543
 33118                           
 33119                           ; BSR set to: 0
 33120                           ;lorawan_eu.c: 1026: {
 33121                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 33122  007990  5163               	movf	UpdateDataRange@i& (0+255),w,b
 33123  007992  0D0E               	mullw	14
 33124  007994  0E05               	movlw	5
 33125  007996  26F3               	addwf	prodl,f,c
 33126  007998  0E00               	movlw	0
 33127  00799A  22F4               	addwfc	prodh,f,c
 33128  00799C  0E00               	movlw	low _Channels
 33129  00799E  24F3               	addwf	prodl,w,c
 33130  0079A0  6ED9               	movwf	fsr2l,c
 33131  0079A2  0E04               	movlw	high _Channels
 33132  0079A4  20F4               	addwfc	prodh,w,c
 33133  0079A6  6EDA               	movwf	fsr2h,c
 33134  0079A8  0104               	movlb	4	; () banked
 33135  0079AA  38DF               	swapf	223,w,c
 33136  0079AC  0B0F               	andlw	15
 33137  0079AE  0102               	movlb	2	; () banked
 33138  0079B0  6FF0               	movwf	(_loRa+236)& (0+255),b
 33139  0079B2                     l1543:
 33140                           
 33141                           ; BSR set to: 2
 33142  0079B2  0100               	movlb	0	; () banked
 33143  0079B4  2B63               	incf	UpdateDataRange@i& (0+255),f,b
 33144  0079B6                     l1540:
 33145                           
 33146                           ; BSR set to: 0
 33147                           
 33148                           ; BSR set to: 0
 33149  0079B6  0102               	movlb	2	; () banked
 33150  0079B8  51F1               	movf	(_loRa+237)& (0+255),w,b
 33151  0079BA  0100               	movlb	0	; () banked
 33152  0079BC  5D63               	subwf	UpdateDataRange@i& (0+255),w,b
 33153  0079BE  A0D8               	btfss	status,0,c
 33154  0079C0  D78D               	goto	l1541
 33155                           
 33156                           ; BSR set to: 0
 33157                           ;lorawan_eu.c: 1028: }
 33158                           ;lorawan_eu.c: 1029: }
 33159                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 33160                           
 33161                           ; BSR set to: 0
 33162  0079C2  0102               	movlb	2	; () banked
 33163  0079C4  51E3               	movf	(_loRa+223)& (0+255),w,b
 33164  0079C6  5DF0               	subwf	(_loRa+236)& (0+255),w,b
 33165  0079C8  A0D8               	btfss	status,0,c
 33166                           
 33167                           ; BSR set to: 2
 33168                           ;lorawan_eu.c: 1032: {
 33169                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 33170  0079CA  C2F0  F2E3         	movff	_loRa+236,_loRa+223
 33171                           
 33172                           ; BSR set to: 2
 33173                           ;lorawan_eu.c: 1034: }
 33174                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 33175                           
 33176                           ; BSR set to: 2
 33177  0079CE  51EF               	movf	(_loRa+235)& (0+255),w,b
 33178  0079D0  5DE3               	subwf	(_loRa+223)& (0+255),w,b
 33179  0079D2  B0D8               	btfsc	status,0,c
 33180  0079D4  0012               	return	
 33181                           
 33182                           ; BSR set to: 2
 33183                           ;lorawan_eu.c: 1037: {
 33184                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 33185  0079D6  C2EF  F2E3         	movff	_loRa+235,_loRa+223
 33186  0079DA  0012               	return	
 33187  0079DC                     __end_of_UpdateDataRange:
 33188                           	opt stack 0
 33189                           tosu	equ	0xFFF
 33190                           tosh	equ	0xFFE
 33191                           tosl	equ	0xFFD
 33192                           pclath	equ	0xFFA
 33193                           tblptru	equ	0xFF8
 33194                           tblptrh	equ	0xFF7
 33195                           tblptrl	equ	0xFF6
 33196                           tablat	equ	0xFF5
 33197                           prodh	equ	0xFF4
 33198                           prodl	equ	0xFF3
 33199                           intcon	equ	0xFF2
 33200                           intcon2	equ	0xFF1
 33201                           intcon3	equ	0xFF0
 33202                           indf0	equ	0xFEF
 33203                           postinc0	equ	0xFEE
 33204                           fsr0h	equ	0xFEA
 33205                           fsr0l	equ	0xFE9
 33206                           wreg	equ	0xFE8
 33207                           postinc1	equ	0xFE6
 33208                           postdec1	equ	0xFE5
 33209                           plusw1	equ	0xFE3
 33210                           fsr1h	equ	0xFE2
 33211                           fsr1l	equ	0xFE1
 33212                           indf2	equ	0xFDF
 33213                           postinc2	equ	0xFDE
 33214                           postdec2	equ	0xFDD
 33215                           plusw2	equ	0xFDB
 33216                           fsr2h	equ	0xFDA
 33217                           fsr2l	equ	0xFD9
 33218                           status	equ	0xFD8
 33219                           
 33220 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 33221 ;; Defined at:
 33222 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33223 ;; Parameters:    Size  Location     Type
 33224 ;;  channelId       1    wreg     unsigned char 
 33225 ;;  statusNew       1    4[BANK0 ] unsigned char 
 33226 ;; Auto vars:     Size  Location     Type
 33227 ;;  channelId       1    6[BANK0 ] unsigned char 
 33228 ;;  result          1    5[BANK0 ] enum E7249
 33229 ;; Return value:  Size  Location     Type
 33230 ;;                  1    wreg      enum E7249
 33231 ;; Registers used:
 33232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33233 ;; Tracked objects:
 33234 ;;		On entry : 0/0
 33235 ;;		On exit  : 0/0
 33236 ;;		Unchanged: 0/0
 33237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33238 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33239 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33241 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33242 ;;Total ram usage:        3 bytes
 33243 ;; Hardware stack levels used:    1
 33244 ;; Hardware stack levels required when called:    8
 33245 ;; This function calls:
 33246 ;;		_UpdateChannelIdStatus
 33247 ;;		_ValidateChannelId
 33248 ;; This function is called by:
 33249 ;;		_ExecuteNewChannel
 33250 ;;		_UpdateCfList
 33251 ;; This function uses a non-reentrant model
 33252 ;;
 33253                           
 33254                           	psect	text186
 33255  00AD86                     __ptext186:
 33256                           	opt stack 0
 33257  00AD86                     _LORAWAN_SetChannelIdStatus:
 33258                           	opt stack 17
 33259                           
 33260                           ; BSR set to: 2
 33261                           ;incstack = 0
 33262                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 33263  00AD86  0100               	movlb	0	; () banked
 33264  00AD88  6F66               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 33265                           
 33266                           ;lorawan_eu.c: 284: LorawanError_t result = OK;
 33267  00AD8A  0E00               	movlw	0
 33268  00AD8C  0100               	movlb	0	; () banked
 33269  00AD8E  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 33270                           
 33271                           ; BSR set to: 0
 33272                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 33273  00AD90  0E01               	movlw	1
 33274  00AD92  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 33275  00AD94  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 33276  00AD96  ECF7  F05E         	call	_ValidateChannelId
 33277  00AD9A  0900               	iorlw	0
 33278  00AD9C  B4D8               	btfsc	status,2,c
 33279  00AD9E  D004               	goto	l1328
 33280                           
 33281                           ;lorawan_eu.c: 288: {
 33282                           ;lorawan_eu.c: 289: result = INVALID_PARAMETER;
 33283  00ADA0  0E03               	movlw	3
 33284  00ADA2  0100               	movlb	0	; () banked
 33285  00ADA4  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 33286                           
 33287                           ;lorawan_eu.c: 290: }
 33288  00ADA6  0012               	return	
 33289  00ADA8                     l1328:
 33290                           
 33291                           ;lorawan_eu.c: 292: else
 33292                           ;lorawan_eu.c: 293: {
 33293                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 33294                           
 33295                           ; BSR set to: 0
 33296  00ADA8  0100               	movlb	0	; () banked
 33297  00ADAA  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 33298  00ADAC  0D0E               	mullw	14
 33299  00ADAE  0E0D               	movlw	13
 33300  00ADB0  26F3               	addwf	prodl,f,c
 33301  00ADB2  0E00               	movlw	0
 33302  00ADB4  22F4               	addwfc	prodh,f,c
 33303  00ADB6  0E00               	movlw	low _Channels
 33304  00ADB8  24F3               	addwf	prodl,w,c
 33305  00ADBA  6ED9               	movwf	fsr2l,c
 33306  00ADBC  0E04               	movlw	high _Channels
 33307  00ADBE  20F4               	addwfc	prodh,w,c
 33308  00ADC0  6EDA               	movwf	fsr2h,c
 33309  00ADC2  50DF               	movf	indf2,w,c
 33310  00ADC4  0B07               	andlw	7
 33311  00ADC6  0A07               	xorlw	7
 33312  00ADC8  A4D8               	btfss	status,2,c
 33313  00ADCA  D006               	goto	l1330
 33314                           
 33315                           ; BSR set to: 0
 33316                           ;lorawan_eu.c: 295: {
 33317                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 33318  00ADCC  C064  F060         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 33319  00ADD0  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 33320  00ADD2  EC33  F03A         	call	_UpdateChannelIdStatus
 33321                           
 33322                           ;lorawan_eu.c: 297: }
 33323  00ADD6  0012               	return	
 33324  00ADD8                     l1330:
 33325                           
 33326                           ;lorawan_eu.c: 298: else
 33327                           ;lorawan_eu.c: 299: {
 33328                           ;lorawan_eu.c: 300: result = INVALID_PARAMETER;
 33329  00ADD8  0E03               	movlw	3
 33330  00ADDA  0100               	movlb	0	; () banked
 33331  00ADDC  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 33332                           
 33333                           ; BSR set to: 0
 33334                           
 33335                           ; BSR set to: 0
 33336  00ADDE  0012               	return	
 33337  00ADE0                     __end_of_LORAWAN_SetChannelIdStatus:
 33338                           	opt stack 0
 33339                           tosu	equ	0xFFF
 33340                           tosh	equ	0xFFE
 33341                           tosl	equ	0xFFD
 33342                           pclath	equ	0xFFA
 33343                           tblptru	equ	0xFF8
 33344                           tblptrh	equ	0xFF7
 33345                           tblptrl	equ	0xFF6
 33346                           tablat	equ	0xFF5
 33347                           prodh	equ	0xFF4
 33348                           prodl	equ	0xFF3
 33349                           intcon	equ	0xFF2
 33350                           intcon2	equ	0xFF1
 33351                           intcon3	equ	0xFF0
 33352                           indf0	equ	0xFEF
 33353                           postinc0	equ	0xFEE
 33354                           fsr0h	equ	0xFEA
 33355                           fsr0l	equ	0xFE9
 33356                           wreg	equ	0xFE8
 33357                           postinc1	equ	0xFE6
 33358                           postdec1	equ	0xFE5
 33359                           plusw1	equ	0xFE3
 33360                           fsr1h	equ	0xFE2
 33361                           fsr1l	equ	0xFE1
 33362                           indf2	equ	0xFDF
 33363                           postinc2	equ	0xFDE
 33364                           postdec2	equ	0xFDD
 33365                           plusw2	equ	0xFDB
 33366                           fsr2h	equ	0xFDA
 33367                           fsr2l	equ	0xFD9
 33368                           status	equ	0xFD8
 33369                           
 33370 ;; *************** function _ValidateChannelId *****************
 33371 ;; Defined at:
 33372 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33373 ;; Parameters:    Size  Location     Type
 33374 ;;  channelId       1    wreg     unsigned char 
 33375 ;;  allowedForDe    1    0[BANK0 ] unsigned char 
 33376 ;; Auto vars:     Size  Location     Type
 33377 ;;  channelId       1    2[BANK0 ] unsigned char 
 33378 ;;  result          1    1[BANK0 ] enum E7249
 33379 ;; Return value:  Size  Location     Type
 33380 ;;                  1    wreg      enum E7249
 33381 ;; Registers used:
 33382 ;;		wreg, status,2, status,0
 33383 ;; Tracked objects:
 33384 ;;		On entry : 0/0
 33385 ;;		On exit  : 0/0
 33386 ;;		Unchanged: 0/0
 33387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33388 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33389 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33391 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33392 ;;Total ram usage:        3 bytes
 33393 ;; Hardware stack levels used:    1
 33394 ;; Hardware stack levels required when called:    7
 33395 ;; This function calls:
 33396 ;;		Nothing
 33397 ;; This function is called by:
 33398 ;;		_LORAWAN_SetChannelIdStatus
 33399 ;;		_ExecuteNewChannel
 33400 ;;		_LORAWAN_SetDataRange
 33401 ;;		_LORAWAN_GetDataRange
 33402 ;;		_LORAWAN_GetChannelIdStatus
 33403 ;;		_LORAWAN_SetFrequency
 33404 ;;		_LORAWAN_SetDutyCycle
 33405 ;;		_LORAWAN_GetDutyCycle
 33406 ;; This function uses a non-reentrant model
 33407 ;;
 33408                           
 33409                           	psect	text187
 33410  00BDEE                     __ptext187:
 33411                           	opt stack 0
 33412  00BDEE                     _ValidateChannelId:
 33413                           	opt stack 17
 33414                           
 33415                           ;incstack = 0
 33416                           ;ValidateChannelId@channelId stored from wreg
 33417  00BDEE  0100               	movlb	0	; () banked
 33418  00BDF0  6F62               	movwf	ValidateChannelId@channelId& (0+255),b
 33419                           
 33420                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 33421  00BDF2  0E00               	movlw	0
 33422  00BDF4  0100               	movlb	0	; () banked
 33423  00BDF6  6F61               	movwf	ValidateChannelId@result& (0+255),b
 33424                           
 33425                           ; BSR set to: 0
 33426                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 33427  00BDF8  0E10               	movlw	16
 33428  00BDFA  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 33429  00BDFC  D006               	goto	u20070
 33430                           
 33431                           ; BSR set to: 0
 33432  00BDFE  5160               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 33433  00BE00  A4D8               	btfss	status,2,c
 33434  00BE02  D005               	goto	l1582
 33435                           
 33436                           ; BSR set to: 0
 33437  00BE04  0E03               	movlw	3
 33438  00BE06  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 33439  00BE08  D002               	goto	l1582
 33440  00BE0A                     u20070:
 33441                           
 33442                           ; BSR set to: 0
 33443                           ;lorawan_eu.c: 1130: {
 33444                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 33445                           
 33446                           ; BSR set to: 0
 33447  00BE0A  0E03               	movlw	3
 33448  00BE0C  6F61               	movwf	ValidateChannelId@result& (0+255),b
 33449  00BE0E                     l1582:
 33450                           
 33451                           ; BSR set to: 0
 33452                           ;lorawan_eu.c: 1132: }
 33453                           ;lorawan_eu.c: 1134: return result;
 33454  00BE0E  5161               	movf	ValidateChannelId@result& (0+255),w,b
 33455  00BE10  0012               	return	
 33456  00BE12                     __end_of_ValidateChannelId:
 33457                           	opt stack 0
 33458                           tosu	equ	0xFFF
 33459                           tosh	equ	0xFFE
 33460                           tosl	equ	0xFFD
 33461                           pclath	equ	0xFFA
 33462                           tblptru	equ	0xFF8
 33463                           tblptrh	equ	0xFF7
 33464                           tblptrl	equ	0xFF6
 33465                           tablat	equ	0xFF5
 33466                           prodh	equ	0xFF4
 33467                           prodl	equ	0xFF3
 33468                           intcon	equ	0xFF2
 33469                           intcon2	equ	0xFF1
 33470                           intcon3	equ	0xFF0
 33471                           indf0	equ	0xFEF
 33472                           postinc0	equ	0xFEE
 33473                           fsr0h	equ	0xFEA
 33474                           fsr0l	equ	0xFE9
 33475                           wreg	equ	0xFE8
 33476                           postinc1	equ	0xFE6
 33477                           postdec1	equ	0xFE5
 33478                           plusw1	equ	0xFE3
 33479                           fsr1h	equ	0xFE2
 33480                           fsr1l	equ	0xFE1
 33481                           indf2	equ	0xFDF
 33482                           postinc2	equ	0xFDE
 33483                           postdec2	equ	0xFDD
 33484                           plusw2	equ	0xFDB
 33485                           fsr2h	equ	0xFDA
 33486                           fsr2l	equ	0xFD9
 33487                           status	equ	0xFD8
 33488                           
 33489 ;; *************** function _ExecuteLinkCheck *****************
 33490 ;; Defined at:
 33491 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 33492 ;; Parameters:    Size  Location     Type
 33493 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 33494 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 33495 ;; Auto vars:     Size  Location     Type
 33496 ;;		None
 33497 ;; Return value:  Size  Location     Type
 33498 ;;                  2    0[BANK0 ] PTR unsigned char 
 33499 ;; Registers used:
 33500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33501 ;; Tracked objects:
 33502 ;;		On entry : 0/0
 33503 ;;		On exit  : 0/0
 33504 ;;		Unchanged: 0/0
 33505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33510 ;;Total ram usage:        2 bytes
 33511 ;; Hardware stack levels used:    1
 33512 ;; Hardware stack levels required when called:    7
 33513 ;; This function calls:
 33514 ;;		Nothing
 33515 ;; This function is called by:
 33516 ;;		_MacExecuteCommands
 33517 ;; This function uses a non-reentrant model
 33518 ;;
 33519                           
 33520                           	psect	text188
 33521  00B8C4                     __ptext188:
 33522                           	opt stack 0
 33523  00B8C4                     _ExecuteLinkCheck:
 33524                           	opt stack 18
 33525                           
 33526                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 33527                           
 33528                           ; BSR set to: 0
 33529                           ;incstack = 0
 33530  00B8C4  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 33531  00B8C8  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 33532  00B8CC  50DF               	movf	indf2,w,c
 33533  00B8CE  0102               	movlb	2	; () banked
 33534  00B8D0  6FE1               	movwf	(_loRa+221)& (0+255),b
 33535                           
 33536                           ; BSR set to: 2
 33537  00B8D2  0100               	movlb	0	; () banked
 33538  00B8D4  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 33539  00B8D6  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 33540                           
 33541                           ; BSR set to: 0
 33542                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 33543  00B8D8  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 33544  00B8DC  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 33545  00B8E0  50DF               	movf	indf2,w,c
 33546  00B8E2  0102               	movlb	2	; () banked
 33547  00B8E4  6FE2               	movwf	(_loRa+222)& (0+255),b
 33548  00B8E6  0100               	movlb	0	; () banked
 33549  00B8E8  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 33550  00B8EA  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 33551                           
 33552                           ; BSR set to: 0
 33553                           ;lorawan.c: 1656: return ptr;
 33554  00B8EC  C060  F060         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 33555  00B8F0  C061  F061         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 33556  00B8F4  0012               	return	
 33557  00B8F6                     __end_of_ExecuteLinkCheck:
 33558                           	opt stack 0
 33559                           tosu	equ	0xFFF
 33560                           tosh	equ	0xFFE
 33561                           tosl	equ	0xFFD
 33562                           pclath	equ	0xFFA
 33563                           tblptru	equ	0xFF8
 33564                           tblptrh	equ	0xFF7
 33565                           tblptrl	equ	0xFF6
 33566                           tablat	equ	0xFF5
 33567                           prodh	equ	0xFF4
 33568                           prodl	equ	0xFF3
 33569                           intcon	equ	0xFF2
 33570                           intcon2	equ	0xFF1
 33571                           intcon3	equ	0xFF0
 33572                           indf0	equ	0xFEF
 33573                           postinc0	equ	0xFEE
 33574                           fsr0h	equ	0xFEA
 33575                           fsr0l	equ	0xFE9
 33576                           wreg	equ	0xFE8
 33577                           postinc1	equ	0xFE6
 33578                           postdec1	equ	0xFE5
 33579                           plusw1	equ	0xFE3
 33580                           fsr1h	equ	0xFE2
 33581                           fsr1l	equ	0xFE1
 33582                           indf2	equ	0xFDF
 33583                           postinc2	equ	0xFDE
 33584                           postdec2	equ	0xFDD
 33585                           plusw2	equ	0xFDB
 33586                           fsr2h	equ	0xFDA
 33587                           fsr2l	equ	0xFD9
 33588                           status	equ	0xFD8
 33589                           
 33590 ;; *************** function _ExecuteLinkAdr *****************
 33591 ;; Defined at:
 33592 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33593 ;; Parameters:    Size  Location     Type
 33594 ;;  ptr             2   15[BANK0 ] PTR unsigned char 
 33595 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 33596 ;; Auto vars:     Size  Location     Type
 33597 ;;  redundancy      2   22[BANK0 ] PTR struct .
 33598 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 33599 ;;  channelMask     2   19[BANK0 ] unsigned int 
 33600 ;;  dataRate        1   24[BANK0 ] unsigned char 
 33601 ;;  txPower         1   21[BANK0 ] unsigned char 
 33602 ;; Return value:  Size  Location     Type
 33603 ;;                  2   15[BANK0 ] PTR unsigned char 
 33604 ;; Registers used:
 33605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33606 ;; Tracked objects:
 33607 ;;		On entry : 0/0
 33608 ;;		On exit  : 0/0
 33609 ;;		Unchanged: 0/0
 33610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33612 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33613 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33614 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33615 ;;Total ram usage:       10 bytes
 33616 ;; Hardware stack levels used:    1
 33617 ;; Hardware stack levels required when called:   10
 33618 ;; This function calls:
 33619 ;;		_EnableChannels
 33620 ;;		_UpdateCurrentDataRate
 33621 ;;		_UpdateTxPower
 33622 ;;		_ValidateChannelMask
 33623 ;;		_ValidateChannelMaskCntl
 33624 ;;		_ValidateDataRate
 33625 ;;		_ValidateTxPower
 33626 ;; This function is called by:
 33627 ;;		_MacExecuteCommands
 33628 ;; This function uses a non-reentrant model
 33629 ;;
 33630                           
 33631                           	psect	text189
 33632  004EA6                     __ptext189:
 33633                           	opt stack 0
 33634  004EA6                     _ExecuteLinkAdr:
 33635                           	opt stack 15
 33636                           
 33637                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 33638                           ;lorawan_eu.c: 616: uint16_t channelMask;
 33639                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 33640                           
 33641                           ; BSR set to: 0
 33642                           ;incstack = 0
 33643  004EA6  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 33644  004EAA  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 33645  004EAE  50DF               	movf	indf2,w,c
 33646  004EB0  0B0F               	andlw	15
 33647  004EB2  0100               	movlb	0	; () banked
 33648  004EB4  6F75               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 33649                           
 33650                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 33651  004EB6  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 33652  004EBA  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 33653  004EBE  50DF               	movf	indf2,w,c
 33654  004EC0  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33655  004EC2  3971               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 33656  004EC4  0B0F               	andlw	15
 33657  004EC6  0B0F               	andlw	15
 33658  004EC8  6F78               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 33659                           
 33660                           ; BSR set to: 0
 33661                           ;lorawan_eu.c: 620: ptr++;
 33662  004ECA  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 33663  004ECC  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 33664                           
 33665                           ; BSR set to: 0
 33666                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 33667  004ECE  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 33668  004ED2  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 33669  004ED6  CFDE F073          	movff	postinc2,ExecuteLinkAdr@channelMask
 33670  004EDA  CFDD F074          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 33671                           
 33672                           ; BSR set to: 0
 33673                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 33674  004EDE  0E02               	movlw	2
 33675  004EE0  256F               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 33676  004EE2  6F6F               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 33677  004EE4  0E00               	movlw	0
 33678  004EE6  2170               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 33679  004EE8  6F70               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 33680                           
 33681                           ; BSR set to: 0
 33682                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 33683                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 33684  004EEA  C06F  F076         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 33685  004EEE  C070  F077         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 33686                           
 33687                           ; BSR set to: 0
 33688  004EF2  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 33689  004EF4  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 33690                           
 33691                           ; BSR set to: 0
 33692                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 33693  004EF6  0102               	movlb	2	; () banked
 33694  004EF8  AD06               	btfss	(_loRa+2)& (0+255),6,b
 33695  004EFA  D0EF               	goto	l1434
 33696                           
 33697                           ; BSR set to: 2
 33698                           ;lorawan_eu.c: 627: {
 33699                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 33700  004EFC  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 33701  004F00  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 33702  004F04  0100               	movlb	0	; () banked
 33703  004F06  38DF               	swapf	223,w,c
 33704  004F08  0B07               	andlw	7
 33705  004F0A  ECCF  F05F         	call	_ValidateChannelMaskCntl
 33706  004F0E  0900               	iorlw	0
 33707  004F10  A4D8               	btfss	status,2,c
 33708  004F12  D021               	goto	l1435
 33709  004F14  C073  F060         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 33710  004F18  C074  F061         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 33711  004F1C  EC0A  F056         	call	_ValidateChannelMask	;wreg free
 33712  004F20  0900               	iorlw	0
 33713  004F22  A4D8               	btfss	status,2,c
 33714  004F24  D018               	goto	l1435
 33715                           
 33716                           ;lorawan_eu.c: 629: {
 33717                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 33718  004F26  0102               	movlb	2	; () banked
 33719  004F28  51AB               	movf	(_loRa+167)& (0+255),w,b
 33720  004F2A  0D02               	mullw	2
 33721  004F2C  0E04               	movlw	low _loRa
 33722  004F2E  0100               	movlb	0	; () banked
 33723  004F30  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33724  004F32  0E02               	movlw	high _loRa
 33725  004F34  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33726  004F36  0EA8               	movlw	168
 33727  004F38  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33728  004F3A  0E00               	movlw	0
 33729  004F3C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33730  004F3E  50F3               	movf	prodl,w,c
 33731  004F40  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33732  004F42  50F4               	movf	prodh,w,c
 33733  004F44  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33734  004F46  0E01               	movlw	1
 33735  004F48  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33736  004F4A  6ED9               	movwf	fsr2l,c
 33737  004F4C  0E00               	movlw	0
 33738  004F4E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33739  004F50  6EDA               	movwf	fsr2h,c
 33740  004F52  0102               	movlb	2	; () banked
 33741  004F54  80DF               	bsf	indf2,0,c
 33742  004F56                     l1435:
 33743                           
 33744                           ;lorawan_eu.c: 631: }
 33745                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 33746                           
 33747                           ; BSR set to: 2
 33748  004F56  0100               	movlb	0	; () banked
 33749  004F58  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 33750  004F5A  EC2A  F061         	call	_ValidateDataRate
 33751  004F5E  0900               	iorlw	0
 33752  004F60  A4D8               	btfss	status,2,c
 33753  004F62  D022               	goto	l1436
 33754  004F64  0102               	movlb	2	; () banked
 33755  004F66  51EF               	movf	(_loRa+235)& (0+255),w,b
 33756  004F68  0100               	movlb	0	; () banked
 33757  004F6A  5D78               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 33758  004F6C  A0D8               	btfss	status,0,c
 33759  004F6E  D01C               	goto	l1436
 33760                           
 33761                           ; BSR set to: 0
 33762  004F70  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 33763  004F72  0102               	movlb	2	; () banked
 33764  004F74  5DF0               	subwf	(_loRa+236)& (0+255),w,b
 33765  004F76  A0D8               	btfss	status,0,c
 33766  004F78  D017               	goto	l1436
 33767                           
 33768                           ; BSR set to: 2
 33769                           ;lorawan_eu.c: 634: {
 33770                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 33771  004F7A  51AB               	movf	(_loRa+167)& (0+255),w,b
 33772  004F7C  0D02               	mullw	2
 33773  004F7E  0E04               	movlw	low _loRa
 33774  004F80  0100               	movlb	0	; () banked
 33775  004F82  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33776  004F84  0E02               	movlw	high _loRa
 33777  004F86  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33778  004F88  0EA8               	movlw	168
 33779  004F8A  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33780  004F8C  0E00               	movlw	0
 33781  004F8E  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33782  004F90  50F3               	movf	prodl,w,c
 33783  004F92  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33784  004F94  50F4               	movf	prodh,w,c
 33785  004F96  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33786  004F98  0E01               	movlw	1
 33787  004F9A  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33788  004F9C  6ED9               	movwf	fsr2l,c
 33789  004F9E  0E00               	movlw	0
 33790  004FA0  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33791  004FA2  6EDA               	movwf	fsr2h,c
 33792  004FA4  0102               	movlb	2	; () banked
 33793  004FA6  82DF               	bsf	indf2,1,c
 33794  004FA8                     l1436:
 33795                           
 33796                           ;lorawan_eu.c: 636: }
 33797                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 33798                           
 33799                           ; BSR set to: 2
 33800  004FA8  0100               	movlb	0	; () banked
 33801  004FAA  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 33802  004FAC  EC07  F05E         	call	_ValidateTxPower
 33803  004FB0  0900               	iorlw	0
 33804  004FB2  A4D8               	btfss	status,2,c
 33805  004FB4  D018               	goto	l1437
 33806                           
 33807                           ;lorawan_eu.c: 639: {
 33808                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 33809  004FB6  0102               	movlb	2	; () banked
 33810  004FB8  51AB               	movf	(_loRa+167)& (0+255),w,b
 33811  004FBA  0D02               	mullw	2
 33812  004FBC  0E04               	movlw	low _loRa
 33813  004FBE  0100               	movlb	0	; () banked
 33814  004FC0  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33815  004FC2  0E02               	movlw	high _loRa
 33816  004FC4  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33817  004FC6  0EA8               	movlw	168
 33818  004FC8  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33819  004FCA  0E00               	movlw	0
 33820  004FCC  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33821  004FCE  50F3               	movf	prodl,w,c
 33822  004FD0  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33823  004FD2  50F4               	movf	prodh,w,c
 33824  004FD4  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33825  004FD6  0E01               	movlw	1
 33826  004FD8  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33827  004FDA  6ED9               	movwf	fsr2l,c
 33828  004FDC  0E00               	movlw	0
 33829  004FDE  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33830  004FE0  6EDA               	movwf	fsr2h,c
 33831  004FE2  0102               	movlb	2	; () banked
 33832  004FE4  84DF               	bsf	indf2,2,c
 33833  004FE6                     l1437:
 33834                           
 33835                           ;lorawan_eu.c: 641: }
 33836                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 33837  004FE6  0102               	movlb	2	; () banked
 33838  004FE8  51AB               	movf	(_loRa+167)& (0+255),w,b
 33839  004FEA  0D02               	mullw	2
 33840  004FEC  0E04               	movlw	low _loRa
 33841  004FEE  0100               	movlb	0	; () banked
 33842  004FF0  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33843  004FF2  0E02               	movlw	high _loRa
 33844  004FF4  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33845  004FF6  0EA8               	movlw	168
 33846  004FF8  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33847  004FFA  0E00               	movlw	0
 33848  004FFC  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33849  004FFE  50F3               	movf	prodl,w,c
 33850  005000  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33851  005002  50F4               	movf	prodh,w,c
 33852  005004  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33853  005006  0E01               	movlw	1
 33854  005008  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33855  00500A  6ED9               	movwf	fsr2l,c
 33856  00500C  0E00               	movlw	0
 33857  00500E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33858  005010  6EDA               	movwf	fsr2h,c
 33859  005012  0102               	movlb	2	; () banked
 33860  005014  A4DF               	btfss	indf2,2,c
 33861  005016  D0A6               	goto	l1441
 33862                           
 33863                           ; BSR set to: 2
 33864  005018  51AB               	movf	(_loRa+167)& (0+255),w,b
 33865  00501A  0D02               	mullw	2
 33866  00501C  0E04               	movlw	low _loRa
 33867  00501E  0100               	movlb	0	; () banked
 33868  005020  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33869  005022  0E02               	movlw	high _loRa
 33870  005024  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33871  005026  0EA8               	movlw	168
 33872  005028  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33873  00502A  0E00               	movlw	0
 33874  00502C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33875  00502E  50F3               	movf	prodl,w,c
 33876  005030  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33877  005032  50F4               	movf	prodh,w,c
 33878  005034  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33879  005036  0E01               	movlw	1
 33880  005038  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33881  00503A  6ED9               	movwf	fsr2l,c
 33882  00503C  0E00               	movlw	0
 33883  00503E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33884  005040  6EDA               	movwf	fsr2h,c
 33885  005042  0102               	movlb	2	; () banked
 33886  005044  A2DF               	btfss	indf2,1,c
 33887  005046  D08E               	goto	l1441
 33888                           
 33889                           ; BSR set to: 2
 33890  005048  51AB               	movf	(_loRa+167)& (0+255),w,b
 33891  00504A  0D02               	mullw	2
 33892  00504C  0E04               	movlw	low _loRa
 33893  00504E  0100               	movlb	0	; () banked
 33894  005050  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33895  005052  0E02               	movlw	high _loRa
 33896  005054  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33897  005056  0EA8               	movlw	168
 33898  005058  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33899  00505A  0E00               	movlw	0
 33900  00505C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33901  00505E  50F3               	movf	prodl,w,c
 33902  005060  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33903  005062  50F4               	movf	prodh,w,c
 33904  005064  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33905  005066  0E01               	movlw	1
 33906  005068  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33907  00506A  6ED9               	movwf	fsr2l,c
 33908  00506C  0E00               	movlw	0
 33909  00506E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33910  005070  6EDA               	movwf	fsr2h,c
 33911  005072  0102               	movlb	2	; () banked
 33912  005074  A0DF               	btfss	indf2,0,c
 33913  005076  D076               	goto	l1441
 33914                           
 33915                           ; BSR set to: 2
 33916                           ;lorawan_eu.c: 644: {
 33917                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 33918  005078  C073  F06C         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 33919  00507C  C074  F06D         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 33920  005080  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 33921  005084  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 33922  005088  0100               	movlb	0	; () banked
 33923  00508A  38DF               	swapf	223,w,c
 33924  00508C  0B07               	andlw	7
 33925  00508E  6F6E               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 33926  005090  ECB7  F060         	call	_EnableChannels	;wreg free
 33927                           
 33928                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 33929  005094  0100               	movlb	0	; () banked
 33930  005096  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 33931  005098  ECCE  F062         	call	_UpdateTxPower
 33932                           
 33933                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 33934  00509C  0102               	movlb	2	; () banked
 33935  00509E  8907               	bsf	(_loRa+3)& (0+255),4,b
 33936                           
 33937                           ; BSR set to: 2
 33938                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 33939  0050A0  0100               	movlb	0	; () banked
 33940  0050A2  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 33941  0050A4  ECD3  F062         	call	_UpdateCurrentDataRate
 33942                           
 33943                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 33944  0050A8  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 33945  0050AC  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 33946  0050B0  0100               	movlb	0	; () banked
 33947  0050B2  50DF               	movf	223,w,c
 33948  0050B4  0B0F               	andlw	15
 33949  0050B6  0900               	iorlw	0
 33950  0050B8  A4D8               	btfss	status,2,c
 33951  0050BA  D002               	goto	l1439
 33952                           
 33953                           ; BSR set to: 0
 33954                           ;lorawan_eu.c: 652: {
 33955                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 33956  0050BC  0E00               	movlw	0
 33957  0050BE  D009               	goto	L13
 33958  0050C0                     l1439:
 33959                           
 33960                           ;lorawan_eu.c: 655: else
 33961                           ;lorawan_eu.c: 656: {
 33962                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 33963                           
 33964                           ; BSR set to: 2
 33965  0050C0  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 33966  0050C4  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 33967  0050C8  0100               	movlb	0	; () banked
 33968  0050CA  50DF               	movf	223,w,c
 33969  0050CC  0B0F               	andlw	15
 33970  0050CE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33971  0050D0  0571               	decf	??_ExecuteLinkAdr& (0+255),w,b
 33972  0050D2                     L13:
 33973  0050D2  0102               	movlb	2	; () banked
 33974  0050D4  6FDA               	movwf	(_loRa+214)& (0+255),b
 33975                           
 33976                           ; BSR set to: 2
 33977                           ;lorawan_eu.c: 658: }
 33978                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 33979                           
 33980                           ; BSR set to: 2
 33981  0050D6  8B07               	bsf	(_loRa+3)& (0+255),5,b
 33982                           
 33983                           ; BSR set to: 2
 33984                           ;lorawan_eu.c: 660: }
 33985                           ;lorawan_eu.c: 661: }
 33986  0050D8  D045               	goto	l1441
 33987  0050DA                     l1434:
 33988                           
 33989                           ; BSR set to: 2
 33990                           ;lorawan_eu.c: 662: else
 33991                           ;lorawan_eu.c: 663: {
 33992                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 33993                           
 33994                           ; BSR set to: 2
 33995  0050DA  51AB               	movf	(_loRa+167)& (0+255),w,b
 33996  0050DC  0D02               	mullw	2
 33997  0050DE  0E04               	movlw	low _loRa
 33998  0050E0  0100               	movlb	0	; () banked
 33999  0050E2  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 34000  0050E4  0E02               	movlw	high _loRa
 34001  0050E6  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 34002  0050E8  0EA8               	movlw	168
 34003  0050EA  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 34004  0050EC  0E00               	movlw	0
 34005  0050EE  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 34006  0050F0  50F3               	movf	prodl,w,c
 34007  0050F2  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 34008  0050F4  50F4               	movf	prodh,w,c
 34009  0050F6  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 34010  0050F8  0E01               	movlw	1
 34011  0050FA  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 34012  0050FC  6ED9               	movwf	fsr2l,c
 34013  0050FE  0E00               	movlw	0
 34014  005100  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 34015  005102  6EDA               	movwf	fsr2h,c
 34016  005104  0102               	movlb	2	; () banked
 34017  005106  90DF               	bcf	indf2,0,c
 34018                           
 34019                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 34020  005108  51AB               	movf	(_loRa+167)& (0+255),w,b
 34021  00510A  0D02               	mullw	2
 34022  00510C  0E04               	movlw	low _loRa
 34023  00510E  0100               	movlb	0	; () banked
 34024  005110  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 34025  005112  0E02               	movlw	high _loRa
 34026  005114  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 34027  005116  0EA8               	movlw	168
 34028  005118  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 34029  00511A  0E00               	movlw	0
 34030  00511C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 34031  00511E  50F3               	movf	prodl,w,c
 34032  005120  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 34033  005122  50F4               	movf	prodh,w,c
 34034  005124  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 34035  005126  0E01               	movlw	1
 34036  005128  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 34037  00512A  6ED9               	movwf	fsr2l,c
 34038  00512C  0E00               	movlw	0
 34039  00512E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 34040  005130  6EDA               	movwf	fsr2h,c
 34041  005132  0102               	movlb	2	; () banked
 34042  005134  92DF               	bcf	indf2,1,c
 34043                           
 34044                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 34045  005136  51AB               	movf	(_loRa+167)& (0+255),w,b
 34046  005138  0D02               	mullw	2
 34047  00513A  0E04               	movlw	low _loRa
 34048  00513C  0100               	movlb	0	; () banked
 34049  00513E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 34050  005140  0E02               	movlw	high _loRa
 34051  005142  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 34052  005144  0EA8               	movlw	168
 34053  005146  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 34054  005148  0E00               	movlw	0
 34055  00514A  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 34056  00514C  50F3               	movf	prodl,w,c
 34057  00514E  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 34058  005150  50F4               	movf	prodh,w,c
 34059  005152  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 34060  005154  0E01               	movlw	1
 34061  005156  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 34062  005158  6ED9               	movwf	fsr2l,c
 34063  00515A  0E00               	movlw	0
 34064  00515C  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 34065  00515E  6EDA               	movwf	fsr2h,c
 34066  005160  0102               	movlb	2	; () banked
 34067  005162  94DF               	bcf	indf2,2,c
 34068  005164                     l1441:
 34069                           
 34070                           ; BSR set to: 2
 34071                           ;lorawan_eu.c: 667: }
 34072                           ;lorawan_eu.c: 669: return ptr;
 34073                           
 34074                           ; BSR set to: 2
 34075  005164  C06F  F06F         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 34076  005168  C070  F070         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 34077  00516C  0012               	return	
 34078  00516E                     __end_of_ExecuteLinkAdr:
 34079                           	opt stack 0
 34080                           tosu	equ	0xFFF
 34081                           tosh	equ	0xFFE
 34082                           tosl	equ	0xFFD
 34083                           pclath	equ	0xFFA
 34084                           tblptru	equ	0xFF8
 34085                           tblptrh	equ	0xFF7
 34086                           tblptrl	equ	0xFF6
 34087                           tablat	equ	0xFF5
 34088                           prodh	equ	0xFF4
 34089                           prodl	equ	0xFF3
 34090                           intcon	equ	0xFF2
 34091                           intcon2	equ	0xFF1
 34092                           intcon3	equ	0xFF0
 34093                           indf0	equ	0xFEF
 34094                           postinc0	equ	0xFEE
 34095                           fsr0h	equ	0xFEA
 34096                           fsr0l	equ	0xFE9
 34097                           wreg	equ	0xFE8
 34098                           postinc1	equ	0xFE6
 34099                           postdec1	equ	0xFE5
 34100                           plusw1	equ	0xFE3
 34101                           fsr1h	equ	0xFE2
 34102                           fsr1l	equ	0xFE1
 34103                           indf2	equ	0xFDF
 34104                           postinc2	equ	0xFDE
 34105                           postdec2	equ	0xFDD
 34106                           plusw2	equ	0xFDB
 34107                           fsr2h	equ	0xFDA
 34108                           fsr2l	equ	0xFD9
 34109                           status	equ	0xFD8
 34110                           
 34111 ;; *************** function _ValidateTxPower *****************
 34112 ;; Defined at:
 34113 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34114 ;; Parameters:    Size  Location     Type
 34115 ;;  txPowerNew      1    wreg     unsigned char 
 34116 ;; Auto vars:     Size  Location     Type
 34117 ;;  txPowerNew      1    1[BANK0 ] unsigned char 
 34118 ;;  result          1    0[BANK0 ] enum E7249
 34119 ;; Return value:  Size  Location     Type
 34120 ;;                  1    wreg      enum E7249
 34121 ;; Registers used:
 34122 ;;		wreg, status,2, status,0
 34123 ;; Tracked objects:
 34124 ;;		On entry : 0/0
 34125 ;;		On exit  : 0/0
 34126 ;;		Unchanged: 0/0
 34127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34129 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34131 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34132 ;;Total ram usage:        2 bytes
 34133 ;; Hardware stack levels used:    1
 34134 ;; Hardware stack levels required when called:    7
 34135 ;; This function calls:
 34136 ;;		Nothing
 34137 ;; This function is called by:
 34138 ;;		_ExecuteLinkAdr
 34139 ;;		_LORAWAN_SetTxPower
 34140 ;; This function uses a non-reentrant model
 34141 ;;
 34142                           
 34143                           	psect	text190
 34144  00BC0E                     __ptext190:
 34145                           	opt stack 0
 34146  00BC0E                     _ValidateTxPower:
 34147                           	opt stack 17
 34148                           
 34149                           ; BSR set to: 2
 34150                           ;incstack = 0
 34151                           ;ValidateTxPower@txPowerNew stored from wreg
 34152  00BC0E  0100               	movlb	0	; () banked
 34153  00BC10  6F61               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 34154                           
 34155                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 34156  00BC12  0E00               	movlw	0
 34157  00BC14  0100               	movlb	0	; () banked
 34158  00BC16  6F60               	movwf	ValidateTxPower@result& (0+255),b
 34159                           
 34160                           ; BSR set to: 0
 34161                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 34162  00BC18  0102               	movlb	2	; () banked
 34163  00BC1A  51A8               	movf	(_loRa+164)& (0+255),w,b
 34164  00BC1C  A4D8               	btfss	status,2,c
 34165  00BC1E  D004               	goto	u20710
 34166                           
 34167                           ; BSR set to: 2
 34168  00BC20  0100               	movlb	0	; () banked
 34169  00BC22  5161               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 34170  00BC24  B4D8               	btfsc	status,2,c
 34171  00BC26  D004               	goto	u20720
 34172  00BC28                     u20710:
 34173                           
 34174                           ; BSR set to: 0
 34175  00BC28  0E05               	movlw	5
 34176  00BC2A  0100               	movlb	0	; () banked
 34177  00BC2C  6561               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 34178  00BC2E  D002               	goto	l1421
 34179  00BC30                     u20720:
 34180                           
 34181                           ; BSR set to: 0
 34182                           ;lorawan_eu.c: 587: {
 34183                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 34184                           
 34185                           ; BSR set to: 0
 34186  00BC30  0E03               	movlw	3
 34187  00BC32  6F60               	movwf	ValidateTxPower@result& (0+255),b
 34188  00BC34                     l1421:
 34189                           
 34190                           ; BSR set to: 0
 34191                           ;lorawan_eu.c: 589: }
 34192                           ;lorawan_eu.c: 591: return result;
 34193  00BC34  5160               	movf	ValidateTxPower@result& (0+255),w,b
 34194  00BC36  0012               	return	
 34195  00BC38                     __end_of_ValidateTxPower:
 34196                           	opt stack 0
 34197                           tosu	equ	0xFFF
 34198                           tosh	equ	0xFFE
 34199                           tosl	equ	0xFFD
 34200                           pclath	equ	0xFFA
 34201                           tblptru	equ	0xFF8
 34202                           tblptrh	equ	0xFF7
 34203                           tblptrl	equ	0xFF6
 34204                           tablat	equ	0xFF5
 34205                           prodh	equ	0xFF4
 34206                           prodl	equ	0xFF3
 34207                           intcon	equ	0xFF2
 34208                           intcon2	equ	0xFF1
 34209                           intcon3	equ	0xFF0
 34210                           indf0	equ	0xFEF
 34211                           postinc0	equ	0xFEE
 34212                           fsr0h	equ	0xFEA
 34213                           fsr0l	equ	0xFE9
 34214                           wreg	equ	0xFE8
 34215                           postinc1	equ	0xFE6
 34216                           postdec1	equ	0xFE5
 34217                           plusw1	equ	0xFE3
 34218                           fsr1h	equ	0xFE2
 34219                           fsr1l	equ	0xFE1
 34220                           indf2	equ	0xFDF
 34221                           postinc2	equ	0xFDE
 34222                           postdec2	equ	0xFDD
 34223                           plusw2	equ	0xFDB
 34224                           fsr2h	equ	0xFDA
 34225                           fsr2l	equ	0xFD9
 34226                           status	equ	0xFD8
 34227                           
 34228 ;; *************** function _ValidateDataRate *****************
 34229 ;; Defined at:
 34230 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34231 ;; Parameters:    Size  Location     Type
 34232 ;;  dataRate        1    wreg     unsigned char 
 34233 ;; Auto vars:     Size  Location     Type
 34234 ;;  dataRate        1    0[BANK0 ] unsigned char 
 34235 ;;  result          1    1[BANK0 ] enum E7249
 34236 ;; Return value:  Size  Location     Type
 34237 ;;                  1    wreg      enum E7249
 34238 ;; Registers used:
 34239 ;;		wreg, status,2, status,0
 34240 ;; Tracked objects:
 34241 ;;		On entry : 0/0
 34242 ;;		On exit  : 0/0
 34243 ;;		Unchanged: 0/0
 34244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34246 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34248 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34249 ;;Total ram usage:        2 bytes
 34250 ;; Hardware stack levels used:    1
 34251 ;; Hardware stack levels required when called:    7
 34252 ;; This function calls:
 34253 ;;		Nothing
 34254 ;; This function is called by:
 34255 ;;		_ExecuteLinkAdr
 34256 ;;		_ExecuteRxParamSetupReq
 34257 ;;		_ValidateDataRange
 34258 ;;		_LORAWAN_SetReceiveWindow2Parameters
 34259 ;;		_LORAWAN_SetCurrentDataRate
 34260 ;; This function uses a non-reentrant model
 34261 ;;
 34262                           
 34263                           	psect	text191
 34264  00C254                     __ptext191:
 34265                           	opt stack 0
 34266  00C254                     _ValidateDataRate:
 34267                           	opt stack 17
 34268                           
 34269                           ; BSR set to: 0
 34270                           ;incstack = 0
 34271                           ;ValidateDataRate@dataRate stored from wreg
 34272  00C254  0100               	movlb	0	; () banked
 34273  00C256  6F60               	movwf	ValidateDataRate@dataRate& (0+255),b
 34274                           
 34275                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 34276  00C258  0E00               	movlw	0
 34277  00C25A  0100               	movlb	0	; () banked
 34278  00C25C  6F61               	movwf	ValidateDataRate@result& (0+255),b
 34279                           
 34280                           ; BSR set to: 0
 34281                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 34282  00C25E  0E07               	movlw	7
 34283  00C260  6560               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 34284  00C262  D002               	goto	l1417
 34285                           
 34286                           ; BSR set to: 0
 34287                           ;lorawan_eu.c: 575: {
 34288                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 34289  00C264  0E03               	movlw	3
 34290  00C266  6F61               	movwf	ValidateDataRate@result& (0+255),b
 34291  00C268                     l1417:
 34292                           
 34293                           ; BSR set to: 0
 34294                           ;lorawan_eu.c: 577: }
 34295                           ;lorawan_eu.c: 579: return result;
 34296  00C268  5161               	movf	ValidateDataRate@result& (0+255),w,b
 34297  00C26A  0012               	return	
 34298  00C26C                     __end_of_ValidateDataRate:
 34299                           	opt stack 0
 34300                           tosu	equ	0xFFF
 34301                           tosh	equ	0xFFE
 34302                           tosl	equ	0xFFD
 34303                           pclath	equ	0xFFA
 34304                           tblptru	equ	0xFF8
 34305                           tblptrh	equ	0xFF7
 34306                           tblptrl	equ	0xFF6
 34307                           tablat	equ	0xFF5
 34308                           prodh	equ	0xFF4
 34309                           prodl	equ	0xFF3
 34310                           intcon	equ	0xFF2
 34311                           intcon2	equ	0xFF1
 34312                           intcon3	equ	0xFF0
 34313                           indf0	equ	0xFEF
 34314                           postinc0	equ	0xFEE
 34315                           fsr0h	equ	0xFEA
 34316                           fsr0l	equ	0xFE9
 34317                           wreg	equ	0xFE8
 34318                           postinc1	equ	0xFE6
 34319                           postdec1	equ	0xFE5
 34320                           plusw1	equ	0xFE3
 34321                           fsr1h	equ	0xFE2
 34322                           fsr1l	equ	0xFE1
 34323                           indf2	equ	0xFDF
 34324                           postinc2	equ	0xFDE
 34325                           postdec2	equ	0xFDD
 34326                           plusw2	equ	0xFDB
 34327                           fsr2h	equ	0xFDA
 34328                           fsr2l	equ	0xFD9
 34329                           status	equ	0xFD8
 34330                           
 34331 ;; *************** function _ValidateChannelMaskCntl *****************
 34332 ;; Defined at:
 34333 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34334 ;; Parameters:    Size  Location     Type
 34335 ;;  channelMaskC    1    wreg     unsigned char 
 34336 ;; Auto vars:     Size  Location     Type
 34337 ;;  channelMaskC    1    1[BANK0 ] unsigned char 
 34338 ;;  result          1    0[BANK0 ] enum E7249
 34339 ;; Return value:  Size  Location     Type
 34340 ;;                  1    wreg      enum E7249
 34341 ;; Registers used:
 34342 ;;		wreg, status,2, status,0
 34343 ;; Tracked objects:
 34344 ;;		On entry : 0/0
 34345 ;;		On exit  : 0/0
 34346 ;;		Unchanged: 0/0
 34347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34349 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34351 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34352 ;;Total ram usage:        2 bytes
 34353 ;; Hardware stack levels used:    1
 34354 ;; Hardware stack levels required when called:    7
 34355 ;; This function calls:
 34356 ;;		Nothing
 34357 ;; This function is called by:
 34358 ;;		_ExecuteLinkAdr
 34359 ;; This function uses a non-reentrant model
 34360 ;;
 34361                           
 34362                           	psect	text192
 34363  00BF9E                     __ptext192:
 34364                           	opt stack 0
 34365  00BF9E                     _ValidateChannelMaskCntl:
 34366                           	opt stack 17
 34367                           
 34368                           ; BSR set to: 0
 34369                           ;incstack = 0
 34370                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 34371  00BF9E  0100               	movlb	0	; () banked
 34372  00BFA0  6F61               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 34373                           
 34374                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 34375  00BFA2  0E00               	movlw	0
 34376  00BFA4  0100               	movlb	0	; () banked
 34377  00BFA6  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 34378                           
 34379                           ; BSR set to: 0
 34380                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 34381  00BFA8  5161               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 34382  00BFAA  B4D8               	btfsc	status,2,c
 34383  00BFAC  D006               	goto	l1588
 34384                           
 34385                           ; BSR set to: 0
 34386  00BFAE  0E06               	movlw	6
 34387  00BFB0  1961               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 34388  00BFB2  B4D8               	btfsc	status,2,c
 34389  00BFB4  D002               	goto	l1588
 34390                           
 34391                           ; BSR set to: 0
 34392                           ;lorawan_eu.c: 1142: {
 34393                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 34394  00BFB6  0E03               	movlw	3
 34395  00BFB8  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 34396  00BFBA                     l1588:
 34397                           
 34398                           ; BSR set to: 0
 34399                           ;lorawan_eu.c: 1144: }
 34400                           ;lorawan_eu.c: 1146: return result;
 34401  00BFBA  5160               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 34402  00BFBC  0012               	return	
 34403  00BFBE                     __end_of_ValidateChannelMaskCntl:
 34404                           	opt stack 0
 34405                           tosu	equ	0xFFF
 34406                           tosh	equ	0xFFE
 34407                           tosl	equ	0xFFD
 34408                           pclath	equ	0xFFA
 34409                           tblptru	equ	0xFF8
 34410                           tblptrh	equ	0xFF7
 34411                           tblptrl	equ	0xFF6
 34412                           tablat	equ	0xFF5
 34413                           prodh	equ	0xFF4
 34414                           prodl	equ	0xFF3
 34415                           intcon	equ	0xFF2
 34416                           intcon2	equ	0xFF1
 34417                           intcon3	equ	0xFF0
 34418                           indf0	equ	0xFEF
 34419                           postinc0	equ	0xFEE
 34420                           fsr0h	equ	0xFEA
 34421                           fsr0l	equ	0xFE9
 34422                           wreg	equ	0xFE8
 34423                           postinc1	equ	0xFE6
 34424                           postdec1	equ	0xFE5
 34425                           plusw1	equ	0xFE3
 34426                           fsr1h	equ	0xFE2
 34427                           fsr1l	equ	0xFE1
 34428                           indf2	equ	0xFDF
 34429                           postinc2	equ	0xFDE
 34430                           postdec2	equ	0xFDD
 34431                           plusw2	equ	0xFDB
 34432                           fsr2h	equ	0xFDA
 34433                           fsr2l	equ	0xFD9
 34434                           status	equ	0xFD8
 34435                           
 34436 ;; *************** function _ValidateChannelMask *****************
 34437 ;; Defined at:
 34438 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34439 ;; Parameters:    Size  Location     Type
 34440 ;;  channelMask     2    0[BANK0 ] unsigned int 
 34441 ;; Auto vars:     Size  Location     Type
 34442 ;;  i               1    4[BANK0 ] unsigned char 
 34443 ;; Return value:  Size  Location     Type
 34444 ;;                  1    wreg      enum E7249
 34445 ;; Registers used:
 34446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34447 ;; Tracked objects:
 34448 ;;		On entry : 0/0
 34449 ;;		On exit  : 0/0
 34450 ;;		Unchanged: 0/0
 34451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34452 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34453 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34455 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34456 ;;Total ram usage:        5 bytes
 34457 ;; Hardware stack levels used:    1
 34458 ;; Hardware stack levels required when called:    7
 34459 ;; This function calls:
 34460 ;;		Nothing
 34461 ;; This function is called by:
 34462 ;;		_ExecuteLinkAdr
 34463 ;; This function uses a non-reentrant model
 34464 ;;
 34465                           
 34466                           	psect	text193
 34467  00AC14                     __ptext193:
 34468                           	opt stack 0
 34469  00AC14                     _ValidateChannelMask:
 34470                           	opt stack 17
 34471                           
 34472                           ;lorawan_eu.c: 1168: uint8_t i = 0;
 34473                           
 34474                           ; BSR set to: 0
 34475                           ;incstack = 0
 34476  00AC14  0E00               	movlw	0
 34477  00AC16  0100               	movlb	0	; () banked
 34478  00AC18  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 34479                           
 34480                           ; BSR set to: 0
 34481                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 34482  00AC1A  5160               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 34483  00AC1C  1161               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 34484  00AC1E  B4D8               	btfsc	status,2,c
 34485  00AC20  D026               	goto	l1601
 34486                           
 34487                           ; BSR set to: 0
 34488                           ;lorawan_eu.c: 1171: {
 34489                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 34490  00AC22  0E00               	movlw	0
 34491  00AC24  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 34492  00AC26                     l18567:
 34493                           
 34494                           ; BSR set to: 0
 34495  00AC26  0E0F               	movlw	15
 34496  00AC28  6564               	cpfsgt	ValidateChannelMask@i& (0+255),b
 34497  00AC2A  D001               	goto	l1602
 34498  00AC2C  D01E               	goto	u20790
 34499  00AC2E                     l1602:
 34500                           
 34501                           ; BSR set to: 0
 34502                           ;lorawan_eu.c: 1173: {
 34503                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 34504  00AC2E  A160               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 34505  00AC30  D013               	goto	l1604
 34506                           
 34507                           ; BSR set to: 0
 34508  00AC32  5164               	movf	ValidateChannelMask@i& (0+255),w,b
 34509  00AC34  0D0E               	mullw	14
 34510  00AC36  0E0D               	movlw	13
 34511  00AC38  26F3               	addwf	prodl,f,c
 34512  00AC3A  0E00               	movlw	0
 34513  00AC3C  22F4               	addwfc	prodh,f,c
 34514  00AC3E  0E00               	movlw	low _Channels
 34515  00AC40  24F3               	addwf	prodl,w,c
 34516  00AC42  6ED9               	movwf	fsr2l,c
 34517  00AC44  0E04               	movlw	high _Channels
 34518  00AC46  20F4               	addwfc	prodh,w,c
 34519  00AC48  6EDA               	movwf	fsr2h,c
 34520  00AC4A  50DF               	movf	indf2,w,c
 34521  00AC4C  0B07               	andlw	7
 34522  00AC4E  0A07               	xorlw	7
 34523  00AC50  B4D8               	btfsc	status,2,c
 34524  00AC52  D002               	goto	l1604
 34525                           
 34526                           ; BSR set to: 0
 34527                           ;lorawan_eu.c: 1175: {
 34528                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 34529  00AC54  0E03               	movlw	3
 34530                           
 34531                           ; BSR set to: 0
 34532  00AC56  0012               	return	
 34533  00AC58                     l1604:
 34534                           
 34535                           ; BSR set to: 0
 34536                           ;lorawan_eu.c: 1178: else
 34537                           ;lorawan_eu.c: 1179: {
 34538                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 34539                           
 34540                           ; BSR set to: 0
 34541  00AC58  90D8               	bcf	status,0,c
 34542  00AC5A  3161               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 34543  00AC5C  6F62               	movwf	??_ValidateChannelMask& (0+255),b
 34544  00AC5E  3160               	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 34545  00AC60  6F60               	movwf	ValidateChannelMask@channelMask& (0+255),b
 34546  00AC62  C062  F061         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 34547                           
 34548                           ; BSR set to: 0
 34549                           
 34550                           ; BSR set to: 0
 34551  00AC66  2B64               	incf	ValidateChannelMask@i& (0+255),f,b
 34552  00AC68  D7DE               	goto	l18567
 34553  00AC6A                     u20790:
 34554                           
 34555                           ; BSR set to: 0
 34556                           ;lorawan_eu.c: 1181: }
 34557                           ;lorawan_eu.c: 1182: }
 34558                           ;lorawan_eu.c: 1184: return OK;
 34559                           
 34560                           ; BSR set to: 0
 34561  00AC6A  0E00               	movlw	0
 34562                           
 34563                           ; BSR set to: 0
 34564                           ;lorawan_eu.c: 1185: }
 34565                           
 34566                           ; BSR set to: 0
 34567  00AC6C  0012               	return	
 34568  00AC6E                     l1601:
 34569                           
 34570                           ; BSR set to: 0
 34571                           ;lorawan_eu.c: 1186: else
 34572                           ;lorawan_eu.c: 1187: {
 34573                           ;lorawan_eu.c: 1189: return INVALID_PARAMETER;
 34574                           
 34575                           ; BSR set to: 0
 34576  00AC6E  0E03               	movlw	3
 34577                           
 34578                           ; BSR set to: 0
 34579  00AC70  0012               	return	
 34580  00AC72                     __end_of_ValidateChannelMask:
 34581                           	opt stack 0
 34582                           tosu	equ	0xFFF
 34583                           tosh	equ	0xFFE
 34584                           tosl	equ	0xFFD
 34585                           pclath	equ	0xFFA
 34586                           tblptru	equ	0xFF8
 34587                           tblptrh	equ	0xFF7
 34588                           tblptrl	equ	0xFF6
 34589                           tablat	equ	0xFF5
 34590                           prodh	equ	0xFF4
 34591                           prodl	equ	0xFF3
 34592                           intcon	equ	0xFF2
 34593                           intcon2	equ	0xFF1
 34594                           intcon3	equ	0xFF0
 34595                           indf0	equ	0xFEF
 34596                           postinc0	equ	0xFEE
 34597                           fsr0h	equ	0xFEA
 34598                           fsr0l	equ	0xFE9
 34599                           wreg	equ	0xFE8
 34600                           postinc1	equ	0xFE6
 34601                           postdec1	equ	0xFE5
 34602                           plusw1	equ	0xFE3
 34603                           fsr1h	equ	0xFE2
 34604                           fsr1l	equ	0xFE1
 34605                           indf2	equ	0xFDF
 34606                           postinc2	equ	0xFDE
 34607                           postdec2	equ	0xFDD
 34608                           plusw2	equ	0xFDB
 34609                           fsr2h	equ	0xFDA
 34610                           fsr2l	equ	0xFD9
 34611                           status	equ	0xFD8
 34612                           
 34613 ;; *************** function _UpdateTxPower *****************
 34614 ;; Defined at:
 34615 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34616 ;; Parameters:    Size  Location     Type
 34617 ;;  txPowerNew      1    wreg     unsigned char 
 34618 ;; Auto vars:     Size  Location     Type
 34619 ;;  txPowerNew      1    0[BANK0 ] unsigned char 
 34620 ;; Return value:  Size  Location     Type
 34621 ;;                  1    wreg      void 
 34622 ;; Registers used:
 34623 ;;		wreg
 34624 ;; Tracked objects:
 34625 ;;		On entry : 0/0
 34626 ;;		On exit  : 0/0
 34627 ;;		Unchanged: 0/0
 34628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34632 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34633 ;;Total ram usage:        1 bytes
 34634 ;; Hardware stack levels used:    1
 34635 ;; Hardware stack levels required when called:    7
 34636 ;; This function calls:
 34637 ;;		Nothing
 34638 ;; This function is called by:
 34639 ;;		_ExecuteLinkAdr
 34640 ;;		_LORAWAN_SetTxPower
 34641 ;; This function uses a non-reentrant model
 34642 ;;
 34643                           
 34644                           	psect	text194
 34645  00C59C                     __ptext194:
 34646                           	opt stack 0
 34647  00C59C                     _UpdateTxPower:
 34648                           	opt stack 17
 34649                           
 34650                           ; BSR set to: 0
 34651                           ;incstack = 0
 34652                           ;UpdateTxPower@txPowerNew stored from wreg
 34653  00C59C  0100               	movlb	0	; () banked
 34654  00C59E  6F60               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 34655                           
 34656                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 34657  00C5A0  C060  F2E5         	movff	UpdateTxPower@txPowerNew,_loRa+225
 34658  00C5A4  0012               	return		;funcret
 34659  00C5A6                     __end_of_UpdateTxPower:
 34660                           	opt stack 0
 34661                           tosu	equ	0xFFF
 34662                           tosh	equ	0xFFE
 34663                           tosl	equ	0xFFD
 34664                           pclath	equ	0xFFA
 34665                           tblptru	equ	0xFF8
 34666                           tblptrh	equ	0xFF7
 34667                           tblptrl	equ	0xFF6
 34668                           tablat	equ	0xFF5
 34669                           prodh	equ	0xFF4
 34670                           prodl	equ	0xFF3
 34671                           intcon	equ	0xFF2
 34672                           intcon2	equ	0xFF1
 34673                           intcon3	equ	0xFF0
 34674                           indf0	equ	0xFEF
 34675                           postinc0	equ	0xFEE
 34676                           fsr0h	equ	0xFEA
 34677                           fsr0l	equ	0xFE9
 34678                           wreg	equ	0xFE8
 34679                           postinc1	equ	0xFE6
 34680                           postdec1	equ	0xFE5
 34681                           plusw1	equ	0xFE3
 34682                           fsr1h	equ	0xFE2
 34683                           fsr1l	equ	0xFE1
 34684                           indf2	equ	0xFDF
 34685                           postinc2	equ	0xFDE
 34686                           postdec2	equ	0xFDD
 34687                           plusw2	equ	0xFDB
 34688                           fsr2h	equ	0xFDA
 34689                           fsr2l	equ	0xFD9
 34690                           status	equ	0xFD8
 34691                           
 34692 ;; *************** function _UpdateCurrentDataRate *****************
 34693 ;; Defined at:
 34694 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34695 ;; Parameters:    Size  Location     Type
 34696 ;;  valueNew        1    wreg     unsigned char 
 34697 ;; Auto vars:     Size  Location     Type
 34698 ;;  valueNew        1    0[BANK0 ] unsigned char 
 34699 ;; Return value:  Size  Location     Type
 34700 ;;                  1    wreg      void 
 34701 ;; Registers used:
 34702 ;;		wreg
 34703 ;; Tracked objects:
 34704 ;;		On entry : 0/0
 34705 ;;		On exit  : 0/0
 34706 ;;		Unchanged: 0/0
 34707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34711 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34712 ;;Total ram usage:        1 bytes
 34713 ;; Hardware stack levels used:    1
 34714 ;; Hardware stack levels required when called:    7
 34715 ;; This function calls:
 34716 ;;		Nothing
 34717 ;; This function is called by:
 34718 ;;		_ExecuteLinkAdr
 34719 ;;		_LORAWAN_SetCurrentDataRate
 34720 ;; This function uses a non-reentrant model
 34721 ;;
 34722                           
 34723                           	psect	text195
 34724  00C5A6                     __ptext195:
 34725                           	opt stack 0
 34726  00C5A6                     _UpdateCurrentDataRate:
 34727                           	opt stack 17
 34728                           
 34729                           ;incstack = 0
 34730                           ;UpdateCurrentDataRate@valueNew stored from wreg
 34731  00C5A6  0100               	movlb	0	; () banked
 34732  00C5A8  6F60               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 34733                           
 34734                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 34735  00C5AA  C060  F2E3         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 34736  00C5AE  0012               	return		;funcret
 34737  00C5B0                     __end_of_UpdateCurrentDataRate:
 34738                           	opt stack 0
 34739                           tosu	equ	0xFFF
 34740                           tosh	equ	0xFFE
 34741                           tosl	equ	0xFFD
 34742                           pclath	equ	0xFFA
 34743                           tblptru	equ	0xFF8
 34744                           tblptrh	equ	0xFF7
 34745                           tblptrl	equ	0xFF6
 34746                           tablat	equ	0xFF5
 34747                           prodh	equ	0xFF4
 34748                           prodl	equ	0xFF3
 34749                           intcon	equ	0xFF2
 34750                           intcon2	equ	0xFF1
 34751                           intcon3	equ	0xFF0
 34752                           indf0	equ	0xFEF
 34753                           postinc0	equ	0xFEE
 34754                           fsr0h	equ	0xFEA
 34755                           fsr0l	equ	0xFE9
 34756                           wreg	equ	0xFE8
 34757                           postinc1	equ	0xFE6
 34758                           postdec1	equ	0xFE5
 34759                           plusw1	equ	0xFE3
 34760                           fsr1h	equ	0xFE2
 34761                           fsr1l	equ	0xFE1
 34762                           indf2	equ	0xFDF
 34763                           postinc2	equ	0xFDE
 34764                           postdec2	equ	0xFDD
 34765                           plusw2	equ	0xFDB
 34766                           fsr2h	equ	0xFDA
 34767                           fsr2l	equ	0xFD9
 34768                           status	equ	0xFD8
 34769                           
 34770 ;; *************** function _EnableChannels *****************
 34771 ;; Defined at:
 34772 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34773 ;; Parameters:    Size  Location     Type
 34774 ;;  channelMask     2   12[BANK0 ] unsigned int 
 34775 ;;  channelMaskC    1   14[BANK0 ] unsigned char 
 34776 ;; Auto vars:     Size  Location     Type
 34777 ;;		None
 34778 ;; Return value:  Size  Location     Type
 34779 ;;                  1    wreg      void 
 34780 ;; Registers used:
 34781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34782 ;; Tracked objects:
 34783 ;;		On entry : 0/0
 34784 ;;		On exit  : 0/0
 34785 ;;		Unchanged: 0/0
 34786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34787 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34790 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34791 ;;Total ram usage:        3 bytes
 34792 ;; Hardware stack levels used:    1
 34793 ;; Hardware stack levels required when called:    9
 34794 ;; This function calls:
 34795 ;;		_EnableChannels1
 34796 ;; This function is called by:
 34797 ;;		_ExecuteLinkAdr
 34798 ;; This function uses a non-reentrant model
 34799 ;;
 34800                           
 34801                           	psect	text196
 34802  00C16E                     __ptext196:
 34803                           	opt stack 0
 34804  00C16E                     _EnableChannels:
 34805                           	opt stack 15
 34806                           
 34807                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 34808                           
 34809                           ;incstack = 0
 34810  00C16E  C06C  F064         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 34811  00C172  C06D  F065         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 34812  00C176  C06E  F066         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 34813  00C17A  0E00               	movlw	0
 34814  00C17C  0100               	movlb	0	; () banked
 34815  00C17E  6F67               	movwf	EnableChannels1@channelIndexMin& (0+255),b
 34816  00C180  0E10               	movlw	16
 34817  00C182  6F68               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 34818  00C184  EC47  F053         	call	_EnableChannels1	;wreg free
 34819  00C188  0012               	return		;funcret
 34820  00C18A                     __end_of_EnableChannels:
 34821                           	opt stack 0
 34822                           tosu	equ	0xFFF
 34823                           tosh	equ	0xFFE
 34824                           tosl	equ	0xFFD
 34825                           pclath	equ	0xFFA
 34826                           tblptru	equ	0xFF8
 34827                           tblptrh	equ	0xFF7
 34828                           tblptrl	equ	0xFF6
 34829                           tablat	equ	0xFF5
 34830                           prodh	equ	0xFF4
 34831                           prodl	equ	0xFF3
 34832                           intcon	equ	0xFF2
 34833                           intcon2	equ	0xFF1
 34834                           intcon3	equ	0xFF0
 34835                           indf0	equ	0xFEF
 34836                           postinc0	equ	0xFEE
 34837                           fsr0h	equ	0xFEA
 34838                           fsr0l	equ	0xFE9
 34839                           wreg	equ	0xFE8
 34840                           postinc1	equ	0xFE6
 34841                           postdec1	equ	0xFE5
 34842                           plusw1	equ	0xFE3
 34843                           fsr1h	equ	0xFE2
 34844                           fsr1l	equ	0xFE1
 34845                           indf2	equ	0xFDF
 34846                           postinc2	equ	0xFDE
 34847                           postdec2	equ	0xFDD
 34848                           plusw2	equ	0xFDB
 34849                           fsr2h	equ	0xFDA
 34850                           fsr2l	equ	0xFD9
 34851                           status	equ	0xFD8
 34852                           
 34853 ;; *************** function _EnableChannels1 *****************
 34854 ;; Defined at:
 34855 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34856 ;; Parameters:    Size  Location     Type
 34857 ;;  channelMask     2    4[BANK0 ] unsigned int 
 34858 ;;  channelMaskC    1    6[BANK0 ] unsigned char 
 34859 ;;  channelIndex    1    7[BANK0 ] unsigned char 
 34860 ;;  channelIndex    1    8[BANK0 ] unsigned char 
 34861 ;; Auto vars:     Size  Location     Type
 34862 ;;  i               1   11[BANK0 ] unsigned char 
 34863 ;; Return value:  Size  Location     Type
 34864 ;;                  1    wreg      void 
 34865 ;; Registers used:
 34866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34867 ;; Tracked objects:
 34868 ;;		On entry : 0/0
 34869 ;;		On exit  : 0/0
 34870 ;;		Unchanged: 0/0
 34871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34872 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34873 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34874 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34875 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34876 ;;Total ram usage:        8 bytes
 34877 ;; Hardware stack levels used:    1
 34878 ;; Hardware stack levels required when called:    8
 34879 ;; This function calls:
 34880 ;;		_UpdateChannelIdStatus
 34881 ;; This function is called by:
 34882 ;;		_EnableChannels
 34883 ;; This function uses a non-reentrant model
 34884 ;;
 34885                           
 34886                           	psect	text197
 34887  00A68E                     __ptext197:
 34888                           	opt stack 0
 34889  00A68E                     _EnableChannels1:
 34890                           	opt stack 15
 34891                           
 34892                           ;lorawan_eu.c: 1195: uint8_t i;
 34893                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 34894                           
 34895                           ;incstack = 0
 34896  00A68E  0E06               	movlw	6
 34897  00A690  0100               	movlb	0	; () banked
 34898  00A692  1966               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 34899  00A694  A4D8               	btfss	status,2,c
 34900  00A696  D00F               	goto	l1610
 34901                           
 34902                           ; BSR set to: 0
 34903                           ;lorawan_eu.c: 1198: {
 34904                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 34905  00A698  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 34906  00A69C  D007               	goto	l1611
 34907  00A69E                     
 34908                           ; BSR set to: 0
 34909                           ;lorawan_eu.c: 1200: {
 34910                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 34911                           
 34912                           ; BSR set to: 0
 34913  00A69E  0E01               	movlw	1
 34914  00A6A0  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 34915  00A6A2  516B               	movf	EnableChannels1@i& (0+255),w,b
 34916  00A6A4  EC33  F03A         	call	_UpdateChannelIdStatus
 34917  00A6A8  0100               	movlb	0	; () banked
 34918  00A6AA  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 34919  00A6AC                     l1611:
 34920                           
 34921                           ; BSR set to: 0
 34922                           
 34923                           ; BSR set to: 0
 34924  00A6AC  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 34925  00A6AE  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 34926  00A6B0  B0D8               	btfsc	status,0,c
 34927  00A6B2  0012               	return	
 34928  00A6B4  D7F4               	goto	l1612
 34929  00A6B6                     l1610:
 34930                           
 34931                           ; BSR set to: 0
 34932                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 34933                           
 34934                           ; BSR set to: 0
 34935  00A6B6  5166               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 34936  00A6B8  A4D8               	btfss	status,2,c
 34937  00A6BA  0012               	return	
 34938                           
 34939                           ; BSR set to: 0
 34940                           ;lorawan_eu.c: 1205: {
 34941                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 34942  00A6BC  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 34943  00A6C0  D017               	goto	l1616
 34944  00A6C2                     l1617:
 34945                           
 34946                           ; BSR set to: 0
 34947                           ;lorawan_eu.c: 1207: {
 34948                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 34949  00A6C2  A164               	btfss	EnableChannels1@channelMask& (0+255),0,b
 34950  00A6C4  D006               	goto	l1618
 34951                           
 34952                           ; BSR set to: 0
 34953                           ;lorawan_eu.c: 1209: {
 34954                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 34955  00A6C6  0E01               	movlw	1
 34956  00A6C8  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 34957  00A6CA  516B               	movf	EnableChannels1@i& (0+255),w,b
 34958  00A6CC  EC33  F03A         	call	_UpdateChannelIdStatus
 34959                           
 34960                           ;lorawan_eu.c: 1211: }
 34961  00A6D0  D006               	goto	l1619
 34962  00A6D2                     l1618:
 34963                           
 34964                           ;lorawan_eu.c: 1212: else
 34965                           ;lorawan_eu.c: 1213: {
 34966                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 34967  00A6D2  0E00               	movlw	0
 34968  00A6D4  0100               	movlb	0	; () banked
 34969  00A6D6  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 34970  00A6D8  516B               	movf	EnableChannels1@i& (0+255),w,b
 34971  00A6DA  EC33  F03A         	call	_UpdateChannelIdStatus
 34972  00A6DE                     l1619:
 34973                           
 34974                           ;lorawan_eu.c: 1215: }
 34975                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 34976  00A6DE  90D8               	bcf	status,0,c
 34977  00A6E0  0100               	movlb	0	; () banked
 34978  00A6E2  3165               	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 34979  00A6E4  6F69               	movwf	??_EnableChannels1& (0+255),b
 34980  00A6E6  3164               	rrcf	EnableChannels1@channelMask& (0+255),w,b
 34981  00A6E8  6F64               	movwf	EnableChannels1@channelMask& (0+255),b
 34982  00A6EA  C069  F065         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 34983                           
 34984                           ; BSR set to: 0
 34985  00A6EE  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 34986  00A6F0                     l1616:
 34987                           
 34988                           ; BSR set to: 0
 34989                           
 34990                           ; BSR set to: 0
 34991  00A6F0  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 34992  00A6F2  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 34993  00A6F4  B0D8               	btfsc	status,0,c
 34994  00A6F6  0012               	return	
 34995  00A6F8  D7E4               	goto	l1617
 34996  00A6FA                     __end_of_EnableChannels1:
 34997                           	opt stack 0
 34998                           tosu	equ	0xFFF
 34999                           tosh	equ	0xFFE
 35000                           tosl	equ	0xFFD
 35001                           pclath	equ	0xFFA
 35002                           tblptru	equ	0xFF8
 35003                           tblptrh	equ	0xFF7
 35004                           tblptrl	equ	0xFF6
 35005                           tablat	equ	0xFF5
 35006                           prodh	equ	0xFF4
 35007                           prodl	equ	0xFF3
 35008                           intcon	equ	0xFF2
 35009                           intcon2	equ	0xFF1
 35010                           intcon3	equ	0xFF0
 35011                           indf0	equ	0xFEF
 35012                           postinc0	equ	0xFEE
 35013                           fsr0h	equ	0xFEA
 35014                           fsr0l	equ	0xFE9
 35015                           wreg	equ	0xFE8
 35016                           postinc1	equ	0xFE6
 35017                           postdec1	equ	0xFE5
 35018                           plusw1	equ	0xFE3
 35019                           fsr1h	equ	0xFE2
 35020                           fsr1l	equ	0xFE1
 35021                           indf2	equ	0xFDF
 35022                           postinc2	equ	0xFDE
 35023                           postdec2	equ	0xFDD
 35024                           plusw2	equ	0xFDB
 35025                           fsr2h	equ	0xFDA
 35026                           fsr2l	equ	0xFD9
 35027                           status	equ	0xFD8
 35028                           
 35029 ;; *************** function _UpdateChannelIdStatus *****************
 35030 ;; Defined at:
 35031 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35032 ;; Parameters:    Size  Location     Type
 35033 ;;  channelId       1    wreg     unsigned char 
 35034 ;;  statusNew       1    0[BANK0 ] unsigned char 
 35035 ;; Auto vars:     Size  Location     Type
 35036 ;;  channelId       1    2[BANK0 ] unsigned char 
 35037 ;;  i               1    3[BANK0 ] unsigned char 
 35038 ;; Return value:  Size  Location     Type
 35039 ;;                  1    wreg      void 
 35040 ;; Registers used:
 35041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35042 ;; Tracked objects:
 35043 ;;		On entry : 0/0
 35044 ;;		On exit  : 0/0
 35045 ;;		Unchanged: 0/0
 35046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35047 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35048 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35049 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35050 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35051 ;;Total ram usage:        4 bytes
 35052 ;; Hardware stack levels used:    1
 35053 ;; Hardware stack levels required when called:    7
 35054 ;; This function calls:
 35055 ;;		Nothing
 35056 ;; This function is called by:
 35057 ;;		_LORAWAN_SetChannelIdStatus
 35058 ;;		_ExecuteNewChannel
 35059 ;;		_EnableChannels1
 35060 ;; This function uses a non-reentrant model
 35061 ;;
 35062                           
 35063                           	psect	text198
 35064  007466                     __ptext198:
 35065                           	opt stack 0
 35066  007466                     _UpdateChannelIdStatus:
 35067                           	opt stack 17
 35068                           
 35069                           ; BSR set to: 0
 35070                           ;incstack = 0
 35071                           ;UpdateChannelIdStatus@channelId stored from wreg
 35072  007466  0100               	movlb	0	; () banked
 35073  007468  6F62               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 35074                           
 35075                           ;lorawan_eu.c: 1044: uint8_t i;
 35076                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 35077  00746A  0100               	movlb	0	; () banked
 35078  00746C  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 35079  00746E  0D0E               	mullw	14
 35080  007470  0E04               	movlw	4
 35081  007472  26F3               	addwf	prodl,f,c
 35082  007474  0E00               	movlw	0
 35083  007476  22F4               	addwfc	prodh,f,c
 35084  007478  0E00               	movlw	low _Channels
 35085  00747A  24F3               	addwf	prodl,w,c
 35086  00747C  6ED9               	movwf	fsr2l,c
 35087  00747E  0E04               	movlw	high _Channels
 35088  007480  20F4               	addwfc	prodh,w,c
 35089  007482  6EDA               	movwf	fsr2h,c
 35090  007484  C060  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 35091                           
 35092                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 35093  007488  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 35094  00748A  0D0E               	mullw	14
 35095  00748C  0E04               	movlw	4
 35096  00748E  26F3               	addwf	prodl,f,c
 35097  007490  0E00               	movlw	0
 35098  007492  22F4               	addwfc	prodh,f,c
 35099  007494  0E00               	movlw	low _Channels
 35100  007496  24F3               	addwf	prodl,w,c
 35101  007498  6ED9               	movwf	fsr2l,c
 35102  00749A  0E04               	movlw	high _Channels
 35103  00749C  20F4               	addwfc	prodh,w,c
 35104  00749E  6EDA               	movwf	fsr2h,c
 35105  0074A0  50DF               	movf	indf2,w,c
 35106  0074A2  A4D8               	btfss	status,2,c
 35107  0074A4  D010               	goto	l1550
 35108                           
 35109                           ; BSR set to: 0
 35110                           ;lorawan_eu.c: 1048: {
 35111                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 35112  0074A6  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 35113  0074A8  0D0E               	mullw	14
 35114  0074AA  0E08               	movlw	8
 35115  0074AC  26F3               	addwf	prodl,f,c
 35116  0074AE  0E00               	movlw	0
 35117  0074B0  22F4               	addwfc	prodh,f,c
 35118  0074B2  0E00               	movlw	low _Channels
 35119  0074B4  24F3               	addwf	prodl,w,c
 35120  0074B6  6ED9               	movwf	fsr2l,c
 35121  0074B8  0E04               	movlw	high _Channels
 35122  0074BA  20F4               	addwfc	prodh,w,c
 35123  0074BC  6EDA               	movwf	fsr2h,c
 35124  0074BE  6ADE               	clrf	postinc2,c
 35125  0074C0  6ADE               	clrf	postinc2,c
 35126  0074C2  6ADE               	clrf	postinc2,c
 35127  0074C4  6ADD               	clrf	postdec2,c
 35128  0074C6                     l1550:
 35129                           
 35130                           ; BSR set to: 0
 35131                           ;lorawan_eu.c: 1051: }
 35132                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 35133                           
 35134                           ; BSR set to: 0
 35135  0074C6  0E00               	movlw	0
 35136  0074C8  6F63               	movwf	UpdateChannelIdStatus@i& (0+255),b
 35137  0074CA  D06D               	goto	l1551
 35138  0074CC                     
 35139                           ; BSR set to: 0
 35140                           ;lorawan_eu.c: 1054: {
 35141                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 35142                           
 35143                           ; BSR set to: 0
 35144  0074CC  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35145  0074CE  0D0E               	mullw	14
 35146  0074D0  0E05               	movlw	5
 35147  0074D2  26F3               	addwf	prodl,f,c
 35148  0074D4  0E00               	movlw	0
 35149  0074D6  22F4               	addwfc	prodh,f,c
 35150  0074D8  0E00               	movlw	low _Channels
 35151  0074DA  24F3               	addwf	prodl,w,c
 35152  0074DC  6ED9               	movwf	fsr2l,c
 35153  0074DE  0E04               	movlw	high _Channels
 35154  0074E0  20F4               	addwfc	prodh,w,c
 35155  0074E2  6EDA               	movwf	fsr2h,c
 35156  0074E4  0104               	movlb	4	; () banked
 35157  0074E6  50DF               	movf	223,w,c
 35158  0074E8  0B0F               	andlw	15
 35159  0074EA  0100               	movlb	0	; () banked
 35160  0074EC  6F61               	movwf	??_UpdateChannelIdStatus& (0+255),b
 35161  0074EE  0102               	movlb	2	; () banked
 35162  0074F0  51EF               	movf	(_loRa+235)& (0+255),w,b
 35163  0074F2  0100               	movlb	0	; () banked
 35164  0074F4  5D61               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 35165  0074F6  B0D8               	btfsc	status,0,c
 35166  0074F8  D020               	goto	l1553
 35167                           
 35168                           ; BSR set to: 0
 35169  0074FA  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35170  0074FC  0D0E               	mullw	14
 35171  0074FE  0E04               	movlw	4
 35172  007500  26F3               	addwf	prodl,f,c
 35173  007502  0E00               	movlw	0
 35174  007504  22F4               	addwfc	prodh,f,c
 35175  007506  0E00               	movlw	low _Channels
 35176  007508  24F3               	addwf	prodl,w,c
 35177  00750A  6ED9               	movwf	fsr2l,c
 35178  00750C  0E04               	movlw	high _Channels
 35179  00750E  20F4               	addwfc	prodh,w,c
 35180  007510  6EDA               	movwf	fsr2h,c
 35181  007512  04DE               	decf	postinc2,w,c
 35182  007514  A4D8               	btfss	status,2,c
 35183  007516  D011               	goto	l1553
 35184                           
 35185                           ; BSR set to: 0
 35186                           ;lorawan_eu.c: 1056: {
 35187                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 35188  007518  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35189  00751A  0D0E               	mullw	14
 35190  00751C  0E05               	movlw	5
 35191  00751E  26F3               	addwf	prodl,f,c
 35192  007520  0E00               	movlw	0
 35193  007522  22F4               	addwfc	prodh,f,c
 35194  007524  0E00               	movlw	low _Channels
 35195  007526  24F3               	addwf	prodl,w,c
 35196  007528  6ED9               	movwf	fsr2l,c
 35197  00752A  0E04               	movlw	high _Channels
 35198  00752C  20F4               	addwfc	prodh,w,c
 35199  00752E  6EDA               	movwf	fsr2h,c
 35200  007530  0104               	movlb	4	; () banked
 35201  007532  50DF               	movf	223,w,c
 35202  007534  0B0F               	andlw	15
 35203  007536  0102               	movlb	2	; () banked
 35204  007538  6FEF               	movwf	(_loRa+235)& (0+255),b
 35205  00753A                     l1553:
 35206                           
 35207                           ;lorawan_eu.c: 1058: }
 35208                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 35209  00753A  0100               	movlb	0	; () banked
 35210  00753C  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35211  00753E  0D0E               	mullw	14
 35212  007540  0E05               	movlw	5
 35213  007542  26F3               	addwf	prodl,f,c
 35214  007544  0E00               	movlw	0
 35215  007546  22F4               	addwfc	prodh,f,c
 35216  007548  0E00               	movlw	low _Channels
 35217  00754A  24F3               	addwf	prodl,w,c
 35218  00754C  6ED9               	movwf	fsr2l,c
 35219  00754E  0E04               	movlw	high _Channels
 35220  007550  20F4               	addwfc	prodh,w,c
 35221  007552  6EDA               	movwf	fsr2h,c
 35222  007554  0104               	movlb	4	; () banked
 35223  007556  38DF               	swapf	223,w,c
 35224  007558  0B0F               	andlw	15
 35225  00755A  0102               	movlb	2	; () banked
 35226  00755C  61F0               	cpfslt	(_loRa+236)& (0+255),b
 35227  00755E  D021               	goto	l1554
 35228                           
 35229                           ; BSR set to: 2
 35230  007560  0100               	movlb	0	; () banked
 35231  007562  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35232  007564  0D0E               	mullw	14
 35233  007566  0E04               	movlw	4
 35234  007568  26F3               	addwf	prodl,f,c
 35235  00756A  0E00               	movlw	0
 35236  00756C  22F4               	addwfc	prodh,f,c
 35237  00756E  0E00               	movlw	low _Channels
 35238  007570  24F3               	addwf	prodl,w,c
 35239  007572  6ED9               	movwf	fsr2l,c
 35240  007574  0E04               	movlw	high _Channels
 35241  007576  20F4               	addwfc	prodh,w,c
 35242  007578  6EDA               	movwf	fsr2h,c
 35243  00757A  04DE               	decf	postinc2,w,c
 35244  00757C  A4D8               	btfss	status,2,c
 35245  00757E  D011               	goto	l1554
 35246                           
 35247                           ; BSR set to: 0
 35248                           ;lorawan_eu.c: 1060: {
 35249                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 35250  007580  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35251  007582  0D0E               	mullw	14
 35252  007584  0E05               	movlw	5
 35253  007586  26F3               	addwf	prodl,f,c
 35254  007588  0E00               	movlw	0
 35255  00758A  22F4               	addwfc	prodh,f,c
 35256  00758C  0E00               	movlw	low _Channels
 35257  00758E  24F3               	addwf	prodl,w,c
 35258  007590  6ED9               	movwf	fsr2l,c
 35259  007592  0E04               	movlw	high _Channels
 35260  007594  20F4               	addwfc	prodh,w,c
 35261  007596  6EDA               	movwf	fsr2h,c
 35262  007598  0104               	movlb	4	; () banked
 35263  00759A  38DF               	swapf	223,w,c
 35264  00759C  0B0F               	andlw	15
 35265  00759E  0102               	movlb	2	; () banked
 35266  0075A0  6FF0               	movwf	(_loRa+236)& (0+255),b
 35267  0075A2                     l1554:
 35268                           
 35269                           ; BSR set to: 2
 35270  0075A2  0100               	movlb	0	; () banked
 35271  0075A4  2B63               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 35272  0075A6                     l1551:
 35273                           
 35274                           ; BSR set to: 0
 35275                           
 35276                           ; BSR set to: 0
 35277  0075A6  0102               	movlb	2	; () banked
 35278  0075A8  51F1               	movf	(_loRa+237)& (0+255),w,b
 35279  0075AA  0100               	movlb	0	; () banked
 35280  0075AC  5D63               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 35281  0075AE  A0D8               	btfss	status,0,c
 35282  0075B0  D78D               	goto	l1552
 35283                           
 35284                           ; BSR set to: 0
 35285                           ;lorawan_eu.c: 1062: }
 35286                           ;lorawan_eu.c: 1063: }
 35287                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 35288                           
 35289                           ; BSR set to: 0
 35290  0075B2  0102               	movlb	2	; () banked
 35291  0075B4  51E3               	movf	(_loRa+223)& (0+255),w,b
 35292  0075B6  5DF0               	subwf	(_loRa+236)& (0+255),w,b
 35293  0075B8  A0D8               	btfss	status,0,c
 35294                           
 35295                           ; BSR set to: 2
 35296                           ;lorawan_eu.c: 1066: {
 35297                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 35298  0075BA  C2F0  F2E3         	movff	_loRa+236,_loRa+223
 35299                           
 35300                           ; BSR set to: 2
 35301                           ;lorawan_eu.c: 1068: }
 35302                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 35303                           
 35304                           ; BSR set to: 2
 35305  0075BE  51EF               	movf	(_loRa+235)& (0+255),w,b
 35306  0075C0  5DE3               	subwf	(_loRa+223)& (0+255),w,b
 35307  0075C2  B0D8               	btfsc	status,0,c
 35308  0075C4  0012               	return	
 35309                           
 35310                           ; BSR set to: 2
 35311                           ;lorawan_eu.c: 1071: {
 35312                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 35313  0075C6  C2EF  F2E3         	movff	_loRa+235,_loRa+223
 35314  0075CA  0012               	return	
 35315  0075CC                     __end_of_UpdateChannelIdStatus:
 35316                           	opt stack 0
 35317                           tosu	equ	0xFFF
 35318                           tosh	equ	0xFFE
 35319                           tosl	equ	0xFFD
 35320                           pclath	equ	0xFFA
 35321                           tblptru	equ	0xFF8
 35322                           tblptrh	equ	0xFF7
 35323                           tblptrl	equ	0xFF6
 35324                           tablat	equ	0xFF5
 35325                           prodh	equ	0xFF4
 35326                           prodl	equ	0xFF3
 35327                           intcon	equ	0xFF2
 35328                           intcon2	equ	0xFF1
 35329                           intcon3	equ	0xFF0
 35330                           indf0	equ	0xFEF
 35331                           postinc0	equ	0xFEE
 35332                           fsr0h	equ	0xFEA
 35333                           fsr0l	equ	0xFE9
 35334                           wreg	equ	0xFE8
 35335                           postinc1	equ	0xFE6
 35336                           postdec1	equ	0xFE5
 35337                           plusw1	equ	0xFE3
 35338                           fsr1h	equ	0xFE2
 35339                           fsr1l	equ	0xFE1
 35340                           indf2	equ	0xFDF
 35341                           postinc2	equ	0xFDE
 35342                           postdec2	equ	0xFDD
 35343                           plusw2	equ	0xFDB
 35344                           fsr2h	equ	0xFDA
 35345                           fsr2l	equ	0xFD9
 35346                           status	equ	0xFD8
 35347                           
 35348 ;; *************** function _ExecuteDutyCycle *****************
 35349 ;; Defined at:
 35350 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35351 ;; Parameters:    Size  Location     Type
 35352 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 35353 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 35354 ;; Auto vars:     Size  Location     Type
 35355 ;;  maxDCycle       1    5[BANK0 ] unsigned char 
 35356 ;; Return value:  Size  Location     Type
 35357 ;;                  2    0[BANK0 ] PTR unsigned char 
 35358 ;; Registers used:
 35359 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35360 ;; Tracked objects:
 35361 ;;		On entry : 0/0
 35362 ;;		On exit  : 0/0
 35363 ;;		Unchanged: 0/0
 35364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35367 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35368 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35369 ;;Total ram usage:        6 bytes
 35370 ;; Hardware stack levels used:    1
 35371 ;; Hardware stack levels required when called:    7
 35372 ;; This function calls:
 35373 ;;		Nothing
 35374 ;; This function is called by:
 35375 ;;		_MacExecuteCommands
 35376 ;; This function uses a non-reentrant model
 35377 ;;
 35378                           
 35379                           	psect	text199
 35380  00AFE6                     __ptext199:
 35381                           	opt stack 0
 35382  00AFE6                     _ExecuteDutyCycle:
 35383                           	opt stack 18
 35384                           
 35385                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 35386                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 35387                           
 35388                           ; BSR set to: 2
 35389                           ;incstack = 0
 35390  00AFE6  C060  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 35391  00AFEA  C061  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 35392  00AFEE  50DF               	movf	indf2,w,c
 35393  00AFF0  0100               	movlb	0	; () banked
 35394  00AFF2  6F65               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 35395                           
 35396                           ; BSR set to: 0
 35397  00AFF4  4B60               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 35398  00AFF6  2B61               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 35399                           
 35400                           ; BSR set to: 0
 35401                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 35402  00AFF8  0E0F               	movlw	15
 35403  00AFFA  6165               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 35404  00AFFC  D013               	goto	l1429
 35405                           
 35406                           ; BSR set to: 0
 35407                           ;lorawan_eu.c: 600: {
 35408                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 35409  00AFFE  C065  F062         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 35410  00B002  0E01               	movlw	1
 35411  00B004  6F63               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 35412  00B006  0E00               	movlw	0
 35413  00B008  6F64               	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 35414  00B00A  2B62               	incf	??_ExecuteDutyCycle& (0+255),f,b
 35415  00B00C  D003               	goto	u21434
 35416  00B00E                     u21435:
 35417  00B00E  90D8               	bcf	status,0,c
 35418  00B010  3763               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 35419  00B012  3764               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 35420  00B014                     u21434:
 35421  00B014  2F62               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 35422  00B016  D7FB               	goto	u21435
 35423  00B018  C063  F2DF         	movff	??_ExecuteDutyCycle+1,_loRa+219
 35424  00B01C  C064  F2E0         	movff	??_ExecuteDutyCycle+2,_loRa+220
 35425                           
 35426                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 35427  00B020  0102               	movlb	2	; () banked
 35428  00B022  8D07               	bsf	(_loRa+3)& (0+255),6,b
 35429  00B024                     l1429:
 35430                           
 35431                           ;lorawan_eu.c: 603: }
 35432                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 35433  00B024  0100               	movlb	0	; () banked
 35434  00B026  2965               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 35435  00B028  A4D8               	btfss	status,2,c
 35436  00B02A  D002               	goto	l1430
 35437                           
 35438                           ; BSR set to: 0
 35439                           ;lorawan_eu.c: 606: {
 35440                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 35441  00B02C  0102               	movlb	2	; () banked
 35442  00B02E  8F06               	bsf	(_loRa+2)& (0+255),7,b
 35443  00B030                     l1430:
 35444                           
 35445                           ;lorawan_eu.c: 608: }
 35446                           ;lorawan_eu.c: 610: return ptr;
 35447                           
 35448                           ; BSR set to: 2
 35449  00B030  C060  F060         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 35450  00B034  C061  F061         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 35451  00B038  0012               	return	
 35452  00B03A                     __end_of_ExecuteDutyCycle:
 35453                           	opt stack 0
 35454                           tosu	equ	0xFFF
 35455                           tosh	equ	0xFFE
 35456                           tosl	equ	0xFFD
 35457                           pclath	equ	0xFFA
 35458                           tblptru	equ	0xFF8
 35459                           tblptrh	equ	0xFF7
 35460                           tblptrl	equ	0xFF6
 35461                           tablat	equ	0xFF5
 35462                           prodh	equ	0xFF4
 35463                           prodl	equ	0xFF3
 35464                           intcon	equ	0xFF2
 35465                           intcon2	equ	0xFF1
 35466                           intcon3	equ	0xFF0
 35467                           indf0	equ	0xFEF
 35468                           postinc0	equ	0xFEE
 35469                           fsr0h	equ	0xFEA
 35470                           fsr0l	equ	0xFE9
 35471                           wreg	equ	0xFE8
 35472                           postinc1	equ	0xFE6
 35473                           postdec1	equ	0xFE5
 35474                           plusw1	equ	0xFE3
 35475                           fsr1h	equ	0xFE2
 35476                           fsr1l	equ	0xFE1
 35477                           indf2	equ	0xFDF
 35478                           postinc2	equ	0xFDE
 35479                           postdec2	equ	0xFDD
 35480                           plusw2	equ	0xFDB
 35481                           fsr2h	equ	0xFDA
 35482                           fsr2l	equ	0xFD9
 35483                           status	equ	0xFD8
 35484                           
 35485 ;; *************** function _ExecuteDevStatus *****************
 35486 ;; Defined at:
 35487 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35488 ;; Parameters:    Size  Location     Type
 35489 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 35490 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 35491 ;; Auto vars:     Size  Location     Type
 35492 ;;		None
 35493 ;; Return value:  Size  Location     Type
 35494 ;;                  2    0[BANK0 ] PTR unsigned char 
 35495 ;; Registers used:
 35496 ;;		wreg, status,2, status,0
 35497 ;; Tracked objects:
 35498 ;;		On entry : 0/0
 35499 ;;		On exit  : 0/0
 35500 ;;		Unchanged: 0/0
 35501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35505 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35506 ;;Total ram usage:        2 bytes
 35507 ;; Hardware stack levels used:    1
 35508 ;; Hardware stack levels required when called:    7
 35509 ;; This function calls:
 35510 ;;		Nothing
 35511 ;; This function is called by:
 35512 ;;		_MacExecuteCommands
 35513 ;; This function uses a non-reentrant model
 35514 ;;
 35515                           
 35516                           	psect	text200
 35517  00C5B0                     __ptext200:
 35518                           	opt stack 0
 35519  00C5B0                     _ExecuteDevStatus:
 35520                           	opt stack 18
 35521                           
 35522                           ;lorawan_eu.c: 674: return ptr;
 35523                           
 35524                           ;incstack = 0
 35525  00C5B0  C060  F060         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 35526  00C5B4  C061  F061         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 35527  00C5B8  0012               	return	
 35528  00C5BA                     __end_of_ExecuteDevStatus:
 35529                           	opt stack 0
 35530                           tosu	equ	0xFFF
 35531                           tosh	equ	0xFFE
 35532                           tosl	equ	0xFFD
 35533                           pclath	equ	0xFFA
 35534                           tblptru	equ	0xFF8
 35535                           tblptrh	equ	0xFF7
 35536                           tblptrl	equ	0xFF6
 35537                           tablat	equ	0xFF5
 35538                           prodh	equ	0xFF4
 35539                           prodl	equ	0xFF3
 35540                           intcon	equ	0xFF2
 35541                           intcon2	equ	0xFF1
 35542                           intcon3	equ	0xFF0
 35543                           indf0	equ	0xFEF
 35544                           postinc0	equ	0xFEE
 35545                           fsr0h	equ	0xFEA
 35546                           fsr0l	equ	0xFE9
 35547                           wreg	equ	0xFE8
 35548                           postinc1	equ	0xFE6
 35549                           postdec1	equ	0xFE5
 35550                           plusw1	equ	0xFE3
 35551                           fsr1h	equ	0xFE2
 35552                           fsr1l	equ	0xFE1
 35553                           indf2	equ	0xFDF
 35554                           postinc2	equ	0xFDE
 35555                           postdec2	equ	0xFDD
 35556                           plusw2	equ	0xFDB
 35557                           fsr2h	equ	0xFDA
 35558                           fsr2l	equ	0xFD9
 35559                           status	equ	0xFD8
 35560                           
 35561 ;; *************** function _LORAWAN_Send *****************
 35562 ;; Defined at:
 35563 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 35564 ;; Parameters:    Size  Location     Type
 35565 ;;  confirmed       1    wreg     enum E7217
 35566 ;;  port            1  115[BANK0 ] unsigned char 
 35567 ;;  buffer          2  116[BANK0 ] PTR void 
 35568 ;;		 -> data(8), NULL(0), 
 35569 ;;  bufferLength    1  118[BANK0 ] unsigned char 
 35570 ;; Auto vars:     Size  Location     Type
 35571 ;;  confirmed       1  121[BANK0 ] enum E7217
 35572 ;;  result          1  120[BANK0 ] enum E7190
 35573 ;; Return value:  Size  Location     Type
 35574 ;;                  1    wreg      enum E7190
 35575 ;; Registers used:
 35576 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35577 ;; Tracked objects:
 35578 ;;		On entry : 0/0
 35579 ;;		On exit  : 0/0
 35580 ;;		Unchanged: 0/0
 35581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35582 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35583 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35584 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35585 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35586 ;;Total ram usage:        7 bytes
 35587 ;; Hardware stack levels used:    1
 35588 ;; Hardware stack levels required when called:   13
 35589 ;; This function calls:
 35590 ;;		_AssemblePacket
 35591 ;;		_LORAWAN_GetMaxPayloadSize
 35592 ;;		_RADIO_ReceiveStop
 35593 ;;		_RADIO_Transmit
 35594 ;;		_SelectChannelForTransmission
 35595 ;; This function is called by:
 35596 ;;		_AutomaticReplyCallback
 35597 ;;		_LORAWAN_RxDone
 35598 ;;		_main
 35599 ;; This function uses a non-reentrant model
 35600 ;;
 35601                           
 35602                           	psect	text201
 35603  0093BC                     __ptext201:
 35604                           	opt stack 0
 35605  0093BC                     _LORAWAN_Send:
 35606                           	opt stack 17
 35607                           
 35608                           ;incstack = 0
 35609                           ;LORAWAN_Send@confirmed stored from wreg
 35610  0093BC  0100               	movlb	0	; () banked
 35611  0093BE  6FD9               	movwf	LORAWAN_Send@confirmed& (0+255),b
 35612                           
 35613                           ;lorawan.c: 187: LorawanError_t result;
 35614                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 35615  0093C0  0102               	movlb	2	; () banked
 35616  0093C2  B107               	btfsc	(_loRa+3)& (0+255),0,b
 35617  0093C4  0012               	return	
 35618                           
 35619                           ; BSR set to: 2
 35620                           ;lorawan.c: 192: }
 35621                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 35622                           
 35623                           ; BSR set to: 2
 35624                           ;lorawan.c: 190: {
 35625                           ;lorawan.c: 191: return MAC_PAUSED;
 35626                           ;	Return value of _LORAWAN_Send is never used
 35627  0093C6  BF06               	btfsc	(_loRa+2)& (0+255),7,b
 35628  0093C8  0012               	return	
 35629                           
 35630                           ; BSR set to: 2
 35631                           ;lorawan.c: 197: }
 35632                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 35633                           
 35634                           ; BSR set to: 2
 35635                           ;lorawan.c: 195: {
 35636                           ;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 35637                           ;	Return value of _LORAWAN_Send is never used
 35638  0093CA  A906               	btfss	(_loRa+2)& (0+255),4,b
 35639  0093CC  0012               	return	
 35640                           
 35641                           ; BSR set to: 2
 35642                           ;lorawan.c: 202: }
 35643                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 35644                           
 35645                           ; BSR set to: 2
 35646                           
 35647                           ; BSR set to: 2
 35648                           ;lorawan.c: 200: {
 35649                           ;lorawan.c: 201: return NETWORK_NOT_JOINED;
 35650                           ;	Return value of _LORAWAN_Send is never used
 35651  0093CE  0100               	movlb	0	; () banked
 35652  0093D0  51D3               	movf	LORAWAN_Send@port& (0+255),w,b
 35653  0093D2  A4D8               	btfss	status,2,c
 35654  0093D4  D003               	goto	l1851
 35655                           
 35656                           ; BSR set to: 0
 35657  0093D6  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 35658  0093D8  A4D8               	btfss	status,2,c
 35659  0093DA  0012               	return	
 35660  0093DC                     l1851:
 35661                           
 35662                           ; BSR set to: 0
 35663                           ;lorawan.c: 207: }
 35664                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 35665                           
 35666                           ; BSR set to: 0
 35667  0093DC  EC7B  F055         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 35668  0093E0  0100               	movlb	0	; () banked
 35669  0093E2  6FD7               	movwf	??_LORAWAN_Send& (0+255),b
 35670  0093E4  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 35671  0093E6  5DD7               	subwf	??_LORAWAN_Send& (0+255),w,b
 35672  0093E8  A0D8               	btfss	status,0,c
 35673  0093EA  0012               	return	
 35674                           
 35675                           ; BSR set to: 0
 35676                           ;lorawan.c: 213: }
 35677                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 35678                           
 35679                           ; BSR set to: 0
 35680                           
 35681                           ; BSR set to: 0
 35682                           ;lorawan.c: 211: {
 35683                           ;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 35684                           ;	Return value of _LORAWAN_Send is never used
 35685  0093EC  0102               	movlb	2	; () banked
 35686  0093EE  290A               	incf	(_loRa+6)& (0+255),w,b
 35687  0093F0  E109               	bnz	l19585
 35688  0093F2  290B               	incf	(_loRa+7)& (0+255),w,b
 35689  0093F4  E107               	bnz	l19585
 35690  0093F6  290C               	incf	(_loRa+8)& (0+255),w,b
 35691  0093F8  E105               	bnz	l19585
 35692  0093FA  290D               	incf	(_loRa+9)& (0+255),w,b
 35693  0093FC  A4D8               	btfss	status,2,c
 35694  0093FE  D002               	goto	l1853
 35695                           
 35696                           ; BSR set to: 2
 35697                           ;lorawan.c: 216: {
 35698                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 35699  009400  8308               	bsf	(_loRa+4)& (0+255),1,b
 35700                           
 35701                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 35702                           ;	Return value of _LORAWAN_Send is never used
 35703  009402  0012               	return	
 35704  009404                     l1853:
 35705  009404                     l19585:
 35706                           
 35707                           ; BSR set to: 2
 35708                           ;lorawan.c: 220: }
 35709                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 35710  009404  5106               	movf	(_loRa+2)& (0+255),w,b
 35711  009406  0B0F               	andlw	15
 35712  009408  0900               	iorlw	0
 35713  00940A  B4D8               	btfsc	status,2,c
 35714  00940C  D003               	goto	l1854
 35715                           
 35716                           ; BSR set to: 2
 35717  00940E  5116               	movf	(_loRa+18)& (0+255),w,b
 35718  009410  B4D8               	btfsc	status,2,c
 35719  009412  0012               	return	
 35720  009414                     l1854:
 35721                           
 35722                           ; BSR set to: 2
 35723                           ;lorawan.c: 225: }
 35724                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 35725                           
 35726                           ; BSR set to: 2
 35727  009414  0E01               	movlw	1
 35728  009416  EC7D  F053         	call	_SelectChannelForTransmission
 35729  00941A  0100               	movlb	0	; () banked
 35730  00941C  6FD8               	movwf	LORAWAN_Send@result& (0+255),b
 35731                           
 35732                           ; BSR set to: 0
 35733                           ;lorawan.c: 228: if (result != OK)
 35734  00941E  51D8               	movf	LORAWAN_Send@result& (0+255),w,b
 35735  009420  A4D8               	btfss	status,2,c
 35736  009422  0012               	return	
 35737                           
 35738                           ; BSR set to: 0
 35739                           ;lorawan.c: 232: else
 35740                           ;lorawan.c: 233: {
 35741                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 35742                           
 35743                           ; BSR set to: 0
 35744                           
 35745                           ; BSR set to: 0
 35746                           ;lorawan.c: 231: }
 35747                           
 35748                           ; BSR set to: 0
 35749                           ;lorawan.c: 229: {
 35750                           ;lorawan.c: 230: return result;
 35751                           ;	Return value of _LORAWAN_Send is never used
 35752  009424  0E02               	movlw	2
 35753  009426  0102               	movlb	2	; () banked
 35754  009428  1916               	xorwf	(_loRa+18)& (0+255),w,b
 35755  00942A  B4D8               	btfsc	status,2,c
 35756                           
 35757                           ; BSR set to: 2
 35758                           ;lorawan.c: 235: {
 35759                           ;lorawan.c: 236: RADIO_ReceiveStop();
 35760  00942C  ECDF  F05F         	call	_RADIO_ReceiveStop	;wreg free
 35761                           
 35762                           ;lorawan.c: 237: }
 35763                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 35764  009430  C0D3  F0C7         	movff	LORAWAN_Send@port,AssemblePacket@port
 35765  009434  C0D4  F0C8         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 35766  009438  C0D5  F0C9         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 35767  00943C  C0D6  F0CA         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 35768  009440  0100               	movlb	0	; () banked
 35769  009442  6BCB               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 35770  009444  51D9               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 35771  009446  ECA8  F01B         	call	_AssemblePacket
 35772                           
 35773                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 35774  00944A  0E30               	movlw	low (_macBuffer+16)
 35775  00944C  0100               	movlb	0	; () banked
 35776  00944E  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 35777  009450  0E05               	movlw	high (_macBuffer+16)
 35778  009452  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 35779  009454  C2D8  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 35780  009458  ECE4  F02D         	call	_RADIO_Transmit	;wreg free
 35781  00945C  0100               	movlb	0	; () banked
 35782  00945E  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 35783  009460  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 35784  009462  A4D8               	btfss	status,2,c
 35785  009464  0012               	return	
 35786                           
 35787                           ; BSR set to: 0
 35788                           ;lorawan.c: 242: {
 35789                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 35790  009466  0E01               	movlw	1
 35791  009468  0102               	movlb	2	; () banked
 35792  00946A  270A               	addwf	(_loRa+6)& (0+255),f,b
 35793  00946C  0E00               	movlw	0
 35794  00946E  230B               	addwfc	(_loRa+7)& (0+255),f,b
 35795  009470  230C               	addwfc	(_loRa+8)& (0+255),f,b
 35796  009472  230D               	addwfc	(_loRa+9)& (0+255),f,b
 35797                           
 35798                           ;lorawan.c: 245: if (CNF == confirmed)
 35799  009474  0100               	movlb	0	; () banked
 35800  009476  05D9               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 35801  009478  A4D8               	btfss	status,2,c
 35802  00947A  D002               	goto	l1859
 35803                           
 35804                           ; BSR set to: 0
 35805                           ;lorawan.c: 246: {
 35806                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 35807  00947C  0102               	movlb	2	; () banked
 35808  00947E  8104               	bsf	_loRa& (0+255),0,b
 35809  009480                     l1859:
 35810                           
 35811                           ;lorawan.c: 248: }
 35812                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 35813  009480  0102               	movlb	2	; () banked
 35814  009482  8B04               	bsf	_loRa& (0+255),5,b
 35815                           
 35816                           ; BSR set to: 2
 35817                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 35818  009484  5106               	movf	(_loRa+2)& (0+255),w,b
 35819  009486  0BF0               	andlw	-16
 35820  009488  0901               	iorlw	1
 35821  00948A  6F06               	movwf	(_loRa+2)& (0+255),b
 35822                           
 35823                           ; BSR set to: 2
 35824                           
 35825                           ; BSR set to: 2
 35826                           ;lorawan.c: 252: else
 35827                           ;lorawan.c: 253: {
 35828                           ;lorawan.c: 254: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 35829                           ;	Return value of _LORAWAN_Send is never used
 35830                           
 35831                           ;lorawan.c: 251: }
 35832  00948C  0012               	return	
 35833  00948E                     __end_of_LORAWAN_Send:
 35834                           	opt stack 0
 35835                           tosu	equ	0xFFF
 35836                           tosh	equ	0xFFE
 35837                           tosl	equ	0xFFD
 35838                           pclath	equ	0xFFA
 35839                           tblptru	equ	0xFF8
 35840                           tblptrh	equ	0xFF7
 35841                           tblptrl	equ	0xFF6
 35842                           tablat	equ	0xFF5
 35843                           prodh	equ	0xFF4
 35844                           prodl	equ	0xFF3
 35845                           intcon	equ	0xFF2
 35846                           intcon2	equ	0xFF1
 35847                           intcon3	equ	0xFF0
 35848                           indf0	equ	0xFEF
 35849                           postinc0	equ	0xFEE
 35850                           fsr0h	equ	0xFEA
 35851                           fsr0l	equ	0xFE9
 35852                           wreg	equ	0xFE8
 35853                           postinc1	equ	0xFE6
 35854                           postdec1	equ	0xFE5
 35855                           plusw1	equ	0xFE3
 35856                           fsr1h	equ	0xFE2
 35857                           fsr1l	equ	0xFE1
 35858                           indf2	equ	0xFDF
 35859                           postinc2	equ	0xFDE
 35860                           postdec2	equ	0xFDD
 35861                           plusw2	equ	0xFDB
 35862                           fsr2h	equ	0xFDA
 35863                           fsr2l	equ	0xFD9
 35864                           status	equ	0xFD8
 35865                           
 35866 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 35867 ;; Defined at:
 35868 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 35869 ;; Parameters:    Size  Location     Type
 35870 ;;		None
 35871 ;; Auto vars:     Size  Location     Type
 35872 ;;  result          1   10[BANK0 ] unsigned char 
 35873 ;;  macCommandsL    1    9[BANK0 ] unsigned char 
 35874 ;; Return value:  Size  Location     Type
 35875 ;;                  1    wreg      unsigned char 
 35876 ;; Registers used:
 35877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35878 ;; Tracked objects:
 35879 ;;		On entry : 0/0
 35880 ;;		On exit  : 0/0
 35881 ;;		Unchanged: 0/0
 35882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35884 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35885 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35886 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35887 ;;Total ram usage:        3 bytes
 35888 ;; Hardware stack levels used:    1
 35889 ;; Hardware stack levels required when called:    8
 35890 ;; This function calls:
 35891 ;;		_CountfOptsLength
 35892 ;; This function is called by:
 35893 ;;		_LORAWAN_Send
 35894 ;;		_AckRetransmissionCallback
 35895 ;; This function uses a non-reentrant model
 35896 ;;
 35897                           
 35898                           	psect	text202
 35899  00AAF6                     __ptext202:
 35900                           	opt stack 0
 35901  00AAF6                     _LORAWAN_GetMaxPayloadSize:
 35902                           	opt stack 21
 35903                           
 35904                           ;lorawan.c: 1558: uint8_t result = 0;
 35905                           
 35906                           ;incstack = 0
 35907  00AAF6  0E00               	movlw	0
 35908  00AAF8  0100               	movlb	0	; () banked
 35909  00AAFA  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 35910                           
 35911                           ; BSR set to: 0
 35912                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 35913                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 35914  00AAFC  EC47  F04A         	call	_CountfOptsLength	;wreg free
 35915  00AB00  0100               	movlb	0	; () banked
 35916  00AB02  6F69               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 35917                           
 35918                           ; BSR set to: 0
 35919                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 35920  00AB04  0102               	movlb	2	; () banked
 35921  00AB06  51AB               	movf	(_loRa+167)& (0+255),w,b
 35922  00AB08  A4D8               	btfss	status,2,c
 35923  00AB0A  D00F               	goto	l2313
 35924                           
 35925                           ; BSR set to: 2
 35926                           ;lorawan.c: 1564: {
 35927                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 35928  00AB0C  51E3               	movf	(_loRa+223)& (0+255),w,b
 35929  00AB0E  0D01               	mullw	1
 35930  00AB10  0E9F               	movlw	low _maxPayloadSize
 35931  00AB12  24F3               	addwf	prodl,w,c
 35932  00AB14  6EF6               	movwf	tblptrl,c
 35933  00AB16  0EFE               	movlw	high _maxPayloadSize
 35934  00AB18  20F4               	addwfc	prodh,w,c
 35935  00AB1A  6EF7               	movwf	tblptrh,c
 35936  00AB1C                     	if	1	;There are 3 active tblptr bytes
 35937  00AB1C  6AF8               	clrf	tblptru,c
 35938  00AB1E  0E00               	movlw	low (__mediumconst shr (0+16))
 35939  00AB20  22F8               	addwfc	tblptru,f,c
 35940  00AB22                     	endif
 35941  00AB22  0008               	tblrd		*
 35942  00AB24  CFF5 F06A          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 35943                           
 35944                           ;lorawan.c: 1566: }
 35945  00AB28  D013               	goto	l2314
 35946  00AB2A                     l2313:
 35947                           
 35948                           ; BSR set to: 2
 35949                           ;lorawan.c: 1567: else
 35950                           ;lorawan.c: 1568: {
 35951                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 35952                           
 35953                           ; BSR set to: 2
 35954  00AB2A  51E3               	movf	(_loRa+223)& (0+255),w,b
 35955  00AB2C  0D01               	mullw	1
 35956  00AB2E  0E9F               	movlw	low _maxPayloadSize
 35957  00AB30  24F3               	addwf	prodl,w,c
 35958  00AB32  6EF6               	movwf	tblptrl,c
 35959  00AB34  0EFE               	movlw	high _maxPayloadSize
 35960  00AB36  20F4               	addwfc	prodh,w,c
 35961  00AB38  6EF7               	movwf	tblptrh,c
 35962  00AB3A                     	if	1	;There are 3 active tblptr bytes
 35963  00AB3A  6AF8               	clrf	tblptru,c
 35964  00AB3C  0E00               	movlw	low (__mediumconst shr (0+16))
 35965  00AB3E  22F8               	addwfc	tblptru,f,c
 35966  00AB40                     	endif
 35967  00AB40  0008               	tblrd		*
 35968  00AB42  CFF5 F068          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 35969  00AB46  0100               	movlb	0	; () banked
 35970  00AB48  5169               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 35971  00AB4A  0800               	sublw	0
 35972  00AB4C  2568               	addwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 35973  00AB4E  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 35974  00AB50                     l2314:
 35975                           
 35976                           ;lorawan.c: 1570: }
 35977                           ;lorawan.c: 1572: return result;
 35978                           
 35979                           ; BSR set to: 0
 35980  00AB50  0100               	movlb	0	; () banked
 35981  00AB52  516A               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 35982  00AB54  0012               	return	
 35983  00AB56                     __end_of_LORAWAN_GetMaxPayloadSize:
 35984                           	opt stack 0
 35985                           tosu	equ	0xFFF
 35986                           tosh	equ	0xFFE
 35987                           tosl	equ	0xFFD
 35988                           pclath	equ	0xFFA
 35989                           tblptru	equ	0xFF8
 35990                           tblptrh	equ	0xFF7
 35991                           tblptrl	equ	0xFF6
 35992                           tablat	equ	0xFF5
 35993                           prodh	equ	0xFF4
 35994                           prodl	equ	0xFF3
 35995                           intcon	equ	0xFF2
 35996                           intcon2	equ	0xFF1
 35997                           intcon3	equ	0xFF0
 35998                           indf0	equ	0xFEF
 35999                           postinc0	equ	0xFEE
 36000                           fsr0h	equ	0xFEA
 36001                           fsr0l	equ	0xFE9
 36002                           wreg	equ	0xFE8
 36003                           postinc1	equ	0xFE6
 36004                           postdec1	equ	0xFE5
 36005                           plusw1	equ	0xFE3
 36006                           fsr1h	equ	0xFE2
 36007                           fsr1l	equ	0xFE1
 36008                           indf2	equ	0xFDF
 36009                           postinc2	equ	0xFDE
 36010                           postdec2	equ	0xFDD
 36011                           plusw2	equ	0xFDB
 36012                           fsr2h	equ	0xFDA
 36013                           fsr2l	equ	0xFD9
 36014                           status	equ	0xFD8
 36015                           
 36016 ;; *************** function _AssemblePacket *****************
 36017 ;; Defined at:
 36018 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 36019 ;; Parameters:    Size  Location     Type
 36020 ;;  confirmed       1    wreg     unsigned char 
 36021 ;;  port            1  103[BANK0 ] unsigned char 
 36022 ;;  buffer          2  104[BANK0 ] PTR unsigned char 
 36023 ;;		 -> data(8), NULL(0), 
 36024 ;;  bufferLength    2  106[BANK0 ] unsigned int 
 36025 ;; Auto vars:     Size  Location     Type
 36026 ;;  confirmed       1  110[BANK0 ] unsigned char 
 36027 ;;  bufferIndex     1  114[BANK0 ] unsigned char 
 36028 ;;  macCmdIdx       1  113[BANK0 ] unsigned char 
 36029 ;;  fCtrl           1  112[BANK0 ] struct .
 36030 ;;  mhdr            1  111[BANK0 ] struct .
 36031 ;; Return value:  Size  Location     Type
 36032 ;;                  1    wreg      void 
 36033 ;; Registers used:
 36034 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36035 ;; Tracked objects:
 36036 ;;		On entry : 0/0
 36037 ;;		On exit  : 0/0
 36038 ;;		Unchanged: 0/0
 36039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36040 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36041 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36042 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36043 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36044 ;;Total ram usage:       12 bytes
 36045 ;; Hardware stack levels used:    1
 36046 ;; Hardware stack levels required when called:   12
 36047 ;; This function calls:
 36048 ;;		_AESCmac
 36049 ;;		_AssembleEncryptionBlock
 36050 ;;		_CountfOptsLength
 36051 ;;		_EncryptFRMPayload
 36052 ;;		_FindSmallestDataRate
 36053 ;;		_IncludeMacCommandsResponse
 36054 ;;		_memcpy
 36055 ;;		_memset
 36056 ;; This function is called by:
 36057 ;;		_LORAWAN_Send
 36058 ;; This function uses a non-reentrant model
 36059 ;;
 36060                           
 36061                           	psect	text203
 36062  003750                     __ptext203:
 36063                           	opt stack 0
 36064  003750                     _AssemblePacket:
 36065                           	opt stack 17
 36066                           
 36067                           ; BSR set to: 0
 36068                           ;incstack = 0
 36069                           ;AssemblePacket@confirmed stored from wreg
 36070  003750  0100               	movlb	0	; () banked
 36071  003752  6FCE               	movwf	AssemblePacket@confirmed& (0+255),b
 36072                           
 36073                           ;lorawan.c: 1674: Mhdr_t mhdr;
 36074                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 36075  003754  0E10               	movlw	16
 36076  003756  0100               	movlb	0	; () banked
 36077  003758  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 36078                           
 36079                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 36080                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 36081  00375A  0E00               	movlw	0
 36082  00375C  6FD1               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 36083                           
 36084                           ; BSR set to: 0
 36085                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 36086  00375E  0ECF               	movlw	low AssemblePacket@mhdr
 36087  003760  6F60               	movwf	memset@p1& (0+255),b
 36088  003762  0E00               	movlw	high AssemblePacket@mhdr
 36089  003764  6F61               	movwf	(memset@p1+1)& (0+255),b
 36090  003766  0E00               	movlw	0
 36091  003768  6F63               	movwf	(memset@c+1)& (0+255),b
 36092  00376A  0E00               	movlw	0
 36093  00376C  6F62               	movwf	memset@c& (0+255),b
 36094  00376E  0E00               	movlw	0
 36095  003770  6F65               	movwf	(memset@n+1)& (0+255),b
 36096  003772  0E01               	movlw	1
 36097  003774  6F64               	movwf	memset@n& (0+255),b
 36098  003776  EC23  F05D         	call	_memset	;wreg free
 36099                           
 36100                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 36101  00377A  0E20               	movlw	low _macBuffer
 36102  00377C  0100               	movlb	0	; () banked
 36103  00377E  6F60               	movwf	memset@p1& (0+255),b
 36104  003780  0E05               	movlw	high _macBuffer
 36105  003782  6F61               	movwf	(memset@p1+1)& (0+255),b
 36106  003784  0E00               	movlw	0
 36107  003786  6F63               	movwf	(memset@c+1)& (0+255),b
 36108  003788  0E00               	movlw	0
 36109  00378A  6F62               	movwf	memset@c& (0+255),b
 36110  00378C  0E01               	movlw	1
 36111  00378E  6F65               	movwf	(memset@n+1)& (0+255),b
 36112  003790  0E0F               	movlw	15
 36113  003792  6F64               	movwf	memset@n& (0+255),b
 36114  003794  EC23  F05D         	call	_memset	;wreg free
 36115                           
 36116                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 36117  003798  0EC8               	movlw	low _aesBuffer
 36118  00379A  0100               	movlb	0	; () banked
 36119  00379C  6F60               	movwf	memset@p1& (0+255),b
 36120  00379E  0E03               	movlw	high _aesBuffer
 36121  0037A0  6F61               	movwf	(memset@p1+1)& (0+255),b
 36122  0037A2  0E00               	movlw	0
 36123  0037A4  6F63               	movwf	(memset@c+1)& (0+255),b
 36124  0037A6  0E00               	movlw	0
 36125  0037A8  6F62               	movwf	memset@c& (0+255),b
 36126  0037AA  0E00               	movlw	0
 36127  0037AC  6F65               	movwf	(memset@n+1)& (0+255),b
 36128  0037AE  0E10               	movlw	16
 36129  0037B0  6F64               	movwf	memset@n& (0+255),b
 36130  0037B2  EC23  F05D         	call	_memset	;wreg free
 36131                           
 36132                           ;lorawan.c: 1683: if (confirmed == 1)
 36133  0037B6  0100               	movlb	0	; () banked
 36134  0037B8  05CE               	decf	AssemblePacket@confirmed& (0+255),w,b
 36135  0037BA  A4D8               	btfss	status,2,c
 36136  0037BC  D007               	goto	l2343
 36137                           
 36138                           ; BSR set to: 0
 36139                           ;lorawan.c: 1684: {
 36140                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 36141  0037BE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 36142  0037C0  0B1F               	andlw	-225
 36143  0037C2  0980               	iorlw	128
 36144  0037C4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 36145                           
 36146                           ; BSR set to: 0
 36147                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 36148  0037C6  0102               	movlb	2	; () banked
 36149  0037C8  8104               	bsf	_loRa& (0+255),0,b
 36150                           
 36151                           ;lorawan.c: 1687: }
 36152  0037CA  D005               	goto	l2344
 36153  0037CC                     l2343:
 36154                           
 36155                           ;lorawan.c: 1688: else
 36156                           ;lorawan.c: 1689: {
 36157                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 36158                           
 36159                           ; BSR set to: 2
 36160  0037CC  0100               	movlb	0	; () banked
 36161  0037CE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 36162  0037D0  0B1F               	andlw	-225
 36163  0037D2  0940               	iorlw	64
 36164  0037D4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 36165  0037D6                     l2344:
 36166                           
 36167                           ;lorawan.c: 1691: }
 36168                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 36169  0037D6  0EFC               	movlw	-4
 36170  0037D8  0100               	movlb	0	; () banked
 36171  0037DA  17CF               	andwf	AssemblePacket@mhdr& (0+255),f,b
 36172                           
 36173                           ; BSR set to: 0
 36174                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 36175  0037DC  95CF               	bcf	AssemblePacket@mhdr& (0+255),2,b
 36176  0037DE  97CF               	bcf	AssemblePacket@mhdr& (0+255),3,b
 36177  0037E0  99CF               	bcf	AssemblePacket@mhdr& (0+255),4,b
 36178                           
 36179                           ; BSR set to: 0
 36180                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 36181  0037E2  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36182  0037E4  0D01               	mullw	1
 36183  0037E6  0E20               	movlw	low _macBuffer
 36184  0037E8  24F3               	addwf	prodl,w,c
 36185  0037EA  6ED9               	movwf	fsr2l,c
 36186  0037EC  0E05               	movlw	high _macBuffer
 36187  0037EE  20F4               	addwfc	prodh,w,c
 36188  0037F0  6EDA               	movwf	fsr2h,c
 36189  0037F2  C0CF  FFDF         	movff	AssemblePacket@mhdr,indf2
 36190                           
 36191                           ; BSR set to: 0
 36192  0037F6  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 36193                           
 36194                           ; BSR set to: 0
 36195                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 36196  0037F8  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36197  0037FA  0D01               	mullw	1
 36198  0037FC  0E20               	movlw	low _macBuffer
 36199  0037FE  24F3               	addwf	prodl,w,c
 36200  003800  6F60               	movwf	memcpy@d1& (0+255),b
 36201  003802  0E05               	movlw	high _macBuffer
 36202  003804  20F4               	addwfc	prodh,w,c
 36203  003806  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 36204  003808  0E22               	movlw	low (_loRa+30)
 36205  00380A  6F62               	movwf	memcpy@s1& (0+255),b
 36206  00380C  0E02               	movlw	high (_loRa+30)
 36207  00380E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 36208  003810  0E00               	movlw	0
 36209  003812  6F65               	movwf	(memcpy@n+1)& (0+255),b
 36210  003814  0E04               	movlw	4
 36211  003816  6F64               	movwf	memcpy@n& (0+255),b
 36212  003818  ECAB  F055         	call	_memcpy	;wreg free
 36213                           
 36214                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 36215  00381C  0100               	movlb	0	; () banked
 36216  00381E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36217  003820  0F04               	addlw	4
 36218  003822  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 36219                           
 36220                           ; BSR set to: 0
 36221                           ;lorawan.c: 1699: fCtrl.value = 0;
 36222  003824  0E00               	movlw	0
 36223  003826  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 36224                           
 36225                           ; BSR set to: 0
 36226                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 36227  003828  0102               	movlb	2	; () banked
 36228  00382A  AD06               	btfss	(_loRa+2)& (0+255),6,b
 36229  00382C  D047               	goto	l2353
 36230                           
 36231                           ; BSR set to: 2
 36232                           ;lorawan.c: 1702: {
 36233                           ;lorawan.c: 1703: fCtrl.adr = 1;
 36234  00382E  0100               	movlb	0	; () banked
 36235  003830  8FD0               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 36236                           
 36237                           ; BSR set to: 0
 36238                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 36239  003832  0102               	movlb	2	; () banked
 36240  003834  51E3               	movf	(_loRa+223)& (0+255),w,b
 36241  003836  5DEF               	subwf	(_loRa+235)& (0+255),w,b
 36242  003838  B0D8               	btfsc	status,0,c
 36243  00383A  D03F               	goto	l2346
 36244                           
 36245                           ; BSR set to: 2
 36246                           ;lorawan.c: 1705: {
 36247                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 36248  00383C  0100               	movlb	0	; () banked
 36249  00383E  8DD0               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 36250                           
 36251                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 36252  003840  0102               	movlb	2	; () banked
 36253  003842  8904               	bsf	_loRa& (0+255),4,b
 36254                           
 36255                           ; BSR set to: 2
 36256                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 36257  003844  4BD4               	infsnz	(_loRa+208)& (0+255),f,b
 36258  003846  2BD5               	incf	(_loRa+209)& (0+255),f,b
 36259                           
 36260                           ; BSR set to: 2
 36261                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 36262  003848  51A6               	movf	(_loRa+162)& (0+255),w,b
 36263  00384A  0100               	movlb	0	; () banked
 36264  00384C  6FCC               	movwf	??_AssemblePacket& (0+255),b
 36265  00384E  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 36266  003850  0102               	movlb	2	; () banked
 36267  003852  51D4               	movf	(_loRa+208)& (0+255),w,b
 36268  003854  0100               	movlb	0	; () banked
 36269  003856  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 36270  003858  E10C               	bnz	l19279
 36271  00385A  0102               	movlb	2	; () banked
 36272  00385C  51D5               	movf	(_loRa+209)& (0+255),w,b
 36273  00385E  0100               	movlb	0	; () banked
 36274  003860  19CD               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 36275  003862  A4D8               	btfss	status,2,c
 36276  003864  D006               	goto	l2347
 36277                           
 36278                           ; BSR set to: 0
 36279                           ;lorawan.c: 1711: {
 36280                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 36281  003866  0E00               	movlw	0
 36282  003868  0102               	movlb	2	; () banked
 36283  00386A  6FF2               	movwf	(_loRa+238)& (0+255),b
 36284  00386C  D023               	goto	l19291
 36285  00386E                     l19277:
 36286                           
 36287                           ; BSR set to: 0
 36288                           ;lorawan.c: 1714: loRa.lorawanMacStatus.adrAckRequest = 0;
 36289  00386E  0102               	movlb	2	; () banked
 36290  003870  D024               	goto	l2346
 36291  003872                     l2347:
 36292  003872                     l19279:
 36293                           
 36294                           ;lorawan.c: 1716: else
 36295                           ;lorawan.c: 1717: {
 36296                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 36297  003872  0102               	movlb	2	; () banked
 36298  003874  51A6               	movf	(_loRa+162)& (0+255),w,b
 36299  003876  0100               	movlb	0	; () banked
 36300  003878  6FCC               	movwf	??_AssemblePacket& (0+255),b
 36301  00387A  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 36302  00387C  0102               	movlb	2	; () banked
 36303  00387E  51D4               	movf	(_loRa+208)& (0+255),w,b
 36304  003880  0100               	movlb	0	; () banked
 36305  003882  5DCC               	subwf	??_AssemblePacket& (0+255),w,b
 36306  003884  0102               	movlb	2	; () banked
 36307  003886  51D5               	movf	(_loRa+209)& (0+255),w,b
 36308  003888  0100               	movlb	0	; () banked
 36309  00388A  59CD               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 36310  00388C  B0D8               	btfsc	status,0,c
 36311  00388E  D013               	goto	l2349
 36312                           
 36313                           ; BSR set to: 0
 36314                           ;lorawan.c: 1719: {
 36315                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 36316  003890  0102               	movlb	2	; () banked
 36317  003892  2BF2               	incf	(_loRa+238)& (0+255),f,b
 36318                           
 36319                           ; BSR set to: 2
 36320                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 36321  003894  51F2               	movf	(_loRa+238)& (0+255),w,b
 36322  003896  5DA7               	subwf	(_loRa+163)& (0+255),w,b
 36323  003898  B0D8               	btfsc	status,0,c
 36324  00389A  D010               	goto	l2353
 36325                           
 36326                           ; BSR set to: 2
 36327                           ;lorawan.c: 1725: {
 36328                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 36329  00389C  0E00               	movlw	0
 36330  00389E  6FF2               	movwf	(_loRa+238)& (0+255),b
 36331                           
 36332                           ; BSR set to: 2
 36333                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 36334  0038A0  EC94  F048         	call	_FindSmallestDataRate	;wreg free
 36335  0038A4  0900               	iorlw	0
 36336  0038A6  A4D8               	btfss	status,2,c
 36337  0038A8  D009               	goto	l2353
 36338                           
 36339                           ;lorawan.c: 1729: {
 36340                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 36341  0038AA  0E00               	movlw	0
 36342  0038AC  0102               	movlb	2	; () banked
 36343  0038AE  6FD5               	movwf	(_loRa+209)& (0+255),b
 36344  0038B0  0E00               	movlw	0
 36345  0038B2  6FD4               	movwf	(_loRa+208)& (0+255),b
 36346  0038B4                     l19291:
 36347                           
 36348                           ; BSR set to: 2
 36349                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 36350  0038B4  0100               	movlb	0	; () banked
 36351  0038B6                     l2349:
 36352                           
 36353                           ; BSR set to: 0
 36354                           ;lorawan.c: 1737: else
 36355                           ;lorawan.c: 1738: {
 36356                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 36357  0038B6  9DD0               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 36358  0038B8  D7DA               	goto	l19277
 36359  0038BA                     l2346:
 36360                           
 36361                           ; BSR set to: 2
 36362                           ;lorawan.c: 1744: else
 36363                           ;lorawan.c: 1745: {
 36364                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 36365  0038BA  9904               	bcf	_loRa& (0+255),4,b
 36366  0038BC                     l2353:
 36367                           
 36368                           ;lorawan.c: 1747: }
 36369                           ;lorawan.c: 1748: }
 36370                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 36371                           
 36372                           ; BSR set to: 2
 36373  0038BC  0102               	movlb	2	; () banked
 36374  0038BE  A304               	btfss	_loRa& (0+255),1,b
 36375  0038C0  D004               	goto	l2354
 36376                           
 36377                           ; BSR set to: 2
 36378                           ;lorawan.c: 1751: {
 36379                           ;lorawan.c: 1752: fCtrl.ack = 1;
 36380  0038C2  0100               	movlb	0	; () banked
 36381  0038C4  8BD0               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 36382                           
 36383                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 36384  0038C6  0102               	movlb	2	; () banked
 36385  0038C8  9304               	bcf	_loRa& (0+255),1,b
 36386  0038CA                     l2354:
 36387                           
 36388                           ; BSR set to: 2
 36389                           ;lorawan.c: 1754: }
 36390                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 36391  0038CA  0100               	movlb	0	; () banked
 36392  0038CC  99D0               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 36393                           
 36394                           ; BSR set to: 0
 36395                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 36396  0038CE  0102               	movlb	2	; () banked
 36397  0038D0  51AB               	movf	(_loRa+167)& (0+255),w,b
 36398  0038D2  B4D8               	btfsc	status,2,c
 36399  0038D4  D005               	goto	u21810
 36400                           
 36401                           ; BSR set to: 2
 36402  0038D6  0100               	movlb	0	; () banked
 36403  0038D8  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 36404  0038DA  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 36405  0038DC  A4D8               	btfss	status,2,c
 36406  0038DE  D006               	goto	l2355
 36407  0038E0                     u21810:
 36408                           
 36409                           ;lorawan.c: 1759: {
 36410                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 36411  0038E0  0100               	movlb	0	; () banked
 36412  0038E2  91D0               	bcf	AssemblePacket@fCtrl& (0+255),0,b
 36413  0038E4  93D0               	bcf	AssemblePacket@fCtrl& (0+255),1,b
 36414  0038E6  95D0               	bcf	AssemblePacket@fCtrl& (0+255),2,b
 36415  0038E8  97D0               	bcf	AssemblePacket@fCtrl& (0+255),3,b
 36416                           
 36417                           ;lorawan.c: 1761: }
 36418  0038EA  D009               	goto	l2358
 36419  0038EC                     l2355:
 36420                           
 36421                           ; BSR set to: 0
 36422                           ;lorawan.c: 1763: else
 36423                           ;lorawan.c: 1764: {
 36424                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 36425                           
 36426                           ; BSR set to: 0
 36427  0038EC  EC47  F04A         	call	_CountfOptsLength	;wreg free
 36428  0038F0  0100               	movlb	0	; () banked
 36429  0038F2  6FCC               	movwf	??_AssemblePacket& (0+255),b
 36430  0038F4  51D0               	movf	AssemblePacket@fCtrl& (0+255),w,b
 36431  0038F6  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 36432  0038F8  0BF0               	andlw	-16
 36433  0038FA  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 36434  0038FC  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 36435  0038FE                     l2358:
 36436                           
 36437                           ; BSR set to: 0
 36438                           ;lorawan.c: 1766: }
 36439                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 36440                           
 36441                           ; BSR set to: 0
 36442  0038FE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36443  003900  0D01               	mullw	1
 36444  003902  0E20               	movlw	low _macBuffer
 36445  003904  24F3               	addwf	prodl,w,c
 36446  003906  6ED9               	movwf	fsr2l,c
 36447  003908  0E05               	movlw	high _macBuffer
 36448  00390A  20F4               	addwfc	prodh,w,c
 36449  00390C  6EDA               	movwf	fsr2h,c
 36450  00390E  C0D0  FFDF         	movff	AssemblePacket@fCtrl,indf2
 36451                           
 36452                           ; BSR set to: 0
 36453  003912  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 36454                           
 36455                           ; BSR set to: 0
 36456                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 36457  003914  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36458  003916  0D01               	mullw	1
 36459  003918  0E20               	movlw	low _macBuffer
 36460  00391A  24F3               	addwf	prodl,w,c
 36461  00391C  6F60               	movwf	memcpy@d1& (0+255),b
 36462  00391E  0E05               	movlw	high _macBuffer
 36463  003920  20F4               	addwfc	prodh,w,c
 36464  003922  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 36465  003924  0E0A               	movlw	low (_loRa+6)
 36466  003926  6F62               	movwf	memcpy@s1& (0+255),b
 36467  003928  0E02               	movlw	high (_loRa+6)
 36468  00392A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 36469  00392C  0E00               	movlw	0
 36470  00392E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 36471  003930  0E02               	movlw	2
 36472  003932  6F64               	movwf	memcpy@n& (0+255),b
 36473  003934  ECAB  F055         	call	_memcpy	;wreg free
 36474                           
 36475                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 36476  003938  0100               	movlb	0	; () banked
 36477  00393A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36478  00393C  0F02               	addlw	2
 36479  00393E  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 36480                           
 36481                           ; BSR set to: 0
 36482                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 36483  003940  0102               	movlb	2	; () banked
 36484  003942  51AB               	movf	(_loRa+167)& (0+255),w,b
 36485  003944  B4D8               	btfsc	status,2,c
 36486  003946  D011               	goto	l2359
 36487                           
 36488                           ; BSR set to: 2
 36489  003948  0100               	movlb	0	; () banked
 36490  00394A  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 36491  00394C  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 36492  00394E  B4D8               	btfsc	status,2,c
 36493  003950  D00C               	goto	l2359
 36494                           
 36495                           ; BSR set to: 0
 36496                           ;lorawan.c: 1774: {
 36497                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 36498  003952  0E20               	movlw	low _macBuffer
 36499  003954  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 36500  003956  0E05               	movlw	high _macBuffer
 36501  003958  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 36502  00395A  0ED2               	movlw	low AssemblePacket@bufferIndex
 36503  00395C  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 36504  00395E  0E00               	movlw	high AssemblePacket@bufferIndex
 36505  003960  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 36506  003962  0E01               	movlw	1
 36507  003964  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 36508  003966  EC47  F017         	call	_IncludeMacCommandsResponse	;wreg free
 36509  00396A                     l2359:
 36510                           
 36511                           ;lorawan.c: 1776: }
 36512                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 36513  00396A  0100               	movlb	0	; () banked
 36514  00396C  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36515  00396E  0D01               	mullw	1
 36516  003970  0E20               	movlw	low _macBuffer
 36517  003972  24F3               	addwf	prodl,w,c
 36518  003974  6ED9               	movwf	fsr2l,c
 36519  003976  0E05               	movlw	high _macBuffer
 36520  003978  20F4               	addwfc	prodh,w,c
 36521  00397A  6EDA               	movwf	fsr2h,c
 36522  00397C  C0C7  FFDF         	movff	AssemblePacket@port,indf2
 36523                           
 36524                           ; BSR set to: 0
 36525  003980  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 36526                           
 36527                           ; BSR set to: 0
 36528                           ;lorawan.c: 1780: if (bufferLength != 0)
 36529  003982  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 36530  003984  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 36531  003986  B4D8               	btfsc	status,2,c
 36532  003988  D035               	goto	l2360
 36533                           
 36534                           ; BSR set to: 0
 36535                           ;lorawan.c: 1781: {
 36536                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 36537  00398A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36538  00398C  0D01               	mullw	1
 36539  00398E  0E20               	movlw	low _macBuffer
 36540  003990  24F3               	addwf	prodl,w,c
 36541  003992  6F60               	movwf	memcpy@d1& (0+255),b
 36542  003994  0E05               	movlw	high _macBuffer
 36543  003996  20F4               	addwfc	prodh,w,c
 36544  003998  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 36545  00399A  C0C8  F062         	movff	AssemblePacket@buffer,memcpy@s1
 36546  00399E  C0C9  F063         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 36547  0039A2  C0CA  F064         	movff	AssemblePacket@bufferLength,memcpy@n
 36548  0039A6  C0CB  F065         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 36549  0039AA  ECAB  F055         	call	_memcpy	;wreg free
 36550                           
 36551                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 36552  0039AE  C0C8  F091         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 36553  0039B2  C0C9  F092         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 36554  0039B6  C0CA  F093         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 36555  0039BA  0E00               	movlw	0
 36556  0039BC  0100               	movlb	0	; () banked
 36557  0039BE  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 36558  0039C0  C20A  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 36559  0039C4  C20B  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 36560  0039C8  C20C  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 36561  0039CC  C20D  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 36562  0039D0  0E36               	movlw	low (_loRa+50)
 36563  0039D2  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 36564  0039D4  0E02               	movlw	high (_loRa+50)
 36565  0039D6  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 36566  0039D8  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 36567  0039DC  0E20               	movlw	low _macBuffer
 36568  0039DE  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 36569  0039E0  0E05               	movlw	high _macBuffer
 36570  0039E2  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 36571  0039E4  0E00               	movlw	0
 36572  0039E6  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 36573  0039E8  EC40  F037         	call	_EncryptFRMPayload	;wreg free
 36574                           
 36575                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 36576  0039EC  0100               	movlb	0	; () banked
 36577  0039EE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36578  0039F0  25CA               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 36579  0039F2  D033               	goto	L14
 36580  0039F4                     l2360:
 36581                           
 36582                           ; BSR set to: 0
 36583                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 36584                           
 36585                           ; BSR set to: 0
 36586  0039F4  0102               	movlb	2	; () banked
 36587  0039F6  51AB               	movf	(_loRa+167)& (0+255),w,b
 36588  0039F8  B4D8               	btfsc	status,2,c
 36589  0039FA  D030               	goto	l2362
 36590                           
 36591                           ; BSR set to: 2
 36592                           ;lorawan.c: 1787: {
 36593                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 36594  0039FC  0E2F               	movlw	low _radioBuffer
 36595  0039FE  0100               	movlb	0	; () banked
 36596  003A00  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 36597  003A02  0E06               	movlw	high _radioBuffer
 36598  003A04  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 36599  003A06  0ED1               	movlw	low AssemblePacket@macCmdIdx
 36600  003A08  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 36601  003A0A  0E00               	movlw	high AssemblePacket@macCmdIdx
 36602  003A0C  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 36603  003A0E  0E00               	movlw	0
 36604  003A10  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 36605  003A12  EC47  F017         	call	_IncludeMacCommandsResponse	;wreg free
 36606                           
 36607                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 36608  003A16  0E2F               	movlw	low _radioBuffer
 36609  003A18  0100               	movlb	0	; () banked
 36610  003A1A  6F91               	movwf	EncryptFRMPayload@buffer& (0+255),b
 36611  003A1C  0E06               	movlw	high _radioBuffer
 36612  003A1E  6F92               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 36613  003A20  C0D1  F093         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 36614  003A24  0E00               	movlw	0
 36615  003A26  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 36616  003A28  C20A  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 36617  003A2C  C20B  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 36618  003A30  C20C  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 36619  003A34  C20D  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 36620  003A38  0E26               	movlw	low (_loRa+34)
 36621  003A3A  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 36622  003A3C  0E02               	movlw	high (_loRa+34)
 36623  003A3E  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 36624  003A40  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 36625  003A44  0E20               	movlw	low _macBuffer
 36626  003A46  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 36627  003A48  0E05               	movlw	high _macBuffer
 36628  003A4A  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 36629  003A4C  0E00               	movlw	0
 36630  003A4E  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 36631  003A50  EC40  F037         	call	_EncryptFRMPayload	;wreg free
 36632                           
 36633                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 36634  003A54  0100               	movlb	0	; () banked
 36635  003A56  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36636  003A58  25D1               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 36637  003A5A                     L14:
 36638  003A5A  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 36639  003A5C                     l2362:
 36640                           
 36641                           ;lorawan.c: 1793: }
 36642                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 36643                           
 36644                           ; BSR set to: 0
 36645                           
 36646                           ; BSR set to: 0
 36647  003A5C  C20A  F06B         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 36648  003A60  C20B  F06C         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 36649  003A64  C20C  F06D         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 36650  003A68  C20D  F06E         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 36651  003A6C  0100               	movlb	0	; () banked
 36652  003A6E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36653  003A70  0FF0               	addlw	240
 36654  003A72  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 36655  003A74  0E49               	movlw	73
 36656  003A76  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 36657  003A78  0E00               	movlw	0
 36658  003A7A  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 36659  003A7C  0E00               	movlw	0
 36660  003A7E  ECD1  F045         	call	_AssembleEncryptionBlock
 36661                           
 36662                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 36663  003A82  0E20               	movlw	low _macBuffer
 36664  003A84  0100               	movlb	0	; () banked
 36665  003A86  6F60               	movwf	memcpy@d1& (0+255),b
 36666  003A88  0E05               	movlw	high _macBuffer
 36667  003A8A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 36668  003A8C  0EC8               	movlw	low _aesBuffer
 36669  003A8E  6F62               	movwf	memcpy@s1& (0+255),b
 36670  003A90  0E03               	movlw	high _aesBuffer
 36671  003A92  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 36672  003A94  0E00               	movlw	0
 36673  003A96  6F65               	movwf	(memcpy@n+1)& (0+255),b
 36674  003A98  0E10               	movlw	16
 36675  003A9A  6F64               	movwf	memcpy@n& (0+255),b
 36676  003A9C  ECAB  F055         	call	_memcpy	;wreg free
 36677                           
 36678                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 36679  003AA0  0E26               	movlw	low (_loRa+34)
 36680  003AA2  0100               	movlb	0	; () banked
 36681  003AA4  6FB9               	movwf	AESCmac@key& (0+255),b
 36682  003AA6  0E02               	movlw	high (_loRa+34)
 36683  003AA8  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 36684  003AAA  0EC8               	movlw	low _aesBuffer
 36685  003AAC  6FBB               	movwf	AESCmac@output& (0+255),b
 36686  003AAE  0E03               	movlw	high _aesBuffer
 36687  003AB0  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 36688  003AB2  0E20               	movlw	low _macBuffer
 36689  003AB4  6FBD               	movwf	AESCmac@input& (0+255),b
 36690  003AB6  0E05               	movlw	high _macBuffer
 36691  003AB8  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 36692  003ABA  C0D2  F0BF         	movff	AssemblePacket@bufferIndex,AESCmac@size
 36693  003ABE  EC80  F01D         	call	_AESCmac	;wreg free
 36694                           
 36695                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 36696  003AC2  0100               	movlb	0	; () banked
 36697  003AC4  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36698  003AC6  0D01               	mullw	1
 36699  003AC8  0E20               	movlw	low _macBuffer
 36700  003ACA  24F3               	addwf	prodl,w,c
 36701  003ACC  6F60               	movwf	memcpy@d1& (0+255),b
 36702  003ACE  0E05               	movlw	high _macBuffer
 36703  003AD0  20F4               	addwfc	prodh,w,c
 36704  003AD2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 36705  003AD4  0EC8               	movlw	low _aesBuffer
 36706  003AD6  6F62               	movwf	memcpy@s1& (0+255),b
 36707  003AD8  0E03               	movlw	high _aesBuffer
 36708  003ADA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 36709  003ADC  0E00               	movlw	0
 36710  003ADE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 36711  003AE0  0E04               	movlw	4
 36712  003AE2  6F64               	movwf	memcpy@n& (0+255),b
 36713  003AE4  ECAB  F055         	call	_memcpy	;wreg free
 36714                           
 36715                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 36716  003AE8  0100               	movlb	0	; () banked
 36717  003AEA  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36718  003AEC  0F04               	addlw	4
 36719  003AEE  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 36720                           
 36721                           ; BSR set to: 0
 36722                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 36723  003AF0  0EF0               	movlw	240
 36724  003AF2  25D2               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 36725  003AF4  0102               	movlb	2	; () banked
 36726  003AF6  6FD8               	movwf	(_loRa+212)& (0+255),b
 36727  003AF8  6BD9               	clrf	(_loRa+213)& (0+255),b
 36728  003AFA  0EFF               	movlw	255
 36729  003AFC  23D9               	addwfc	(_loRa+213)& (0+255),f,b
 36730                           
 36731                           ; BSR set to: 2
 36732  003AFE  0012               	return		;funcret
 36733  003B00                     __end_of_AssemblePacket:
 36734                           	opt stack 0
 36735                           tosu	equ	0xFFF
 36736                           tosh	equ	0xFFE
 36737                           tosl	equ	0xFFD
 36738                           pclath	equ	0xFFA
 36739                           tblptru	equ	0xFF8
 36740                           tblptrh	equ	0xFF7
 36741                           tblptrl	equ	0xFF6
 36742                           tablat	equ	0xFF5
 36743                           prodh	equ	0xFF4
 36744                           prodl	equ	0xFF3
 36745                           intcon	equ	0xFF2
 36746                           intcon2	equ	0xFF1
 36747                           intcon3	equ	0xFF0
 36748                           indf0	equ	0xFEF
 36749                           postinc0	equ	0xFEE
 36750                           fsr0h	equ	0xFEA
 36751                           fsr0l	equ	0xFE9
 36752                           wreg	equ	0xFE8
 36753                           postinc1	equ	0xFE6
 36754                           postdec1	equ	0xFE5
 36755                           plusw1	equ	0xFE3
 36756                           fsr1h	equ	0xFE2
 36757                           fsr1l	equ	0xFE1
 36758                           indf2	equ	0xFDF
 36759                           postinc2	equ	0xFDE
 36760                           postdec2	equ	0xFDD
 36761                           plusw2	equ	0xFDB
 36762                           fsr2h	equ	0xFDA
 36763                           fsr2l	equ	0xFD9
 36764                           status	equ	0xFD8
 36765                           
 36766 ;; *************** function _IncludeMacCommandsResponse *****************
 36767 ;; Defined at:
 36768 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 36769 ;; Parameters:    Size  Location     Type
 36770 ;;  macBuffer       2    0[BANK0 ] PTR unsigned char 
 36771 ;;		 -> macBuffer(271), radioBuffer(271), 
 36772 ;;  pBufferIndex    2    2[BANK0 ] PTR unsigned char 
 36773 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 36774 ;;  bIncludeInFo    1    4[BANK0 ] unsigned char 
 36775 ;; Auto vars:     Size  Location     Type
 36776 ;;  bufferIndex     1   14[BANK0 ] unsigned char 
 36777 ;;  i               1   13[BANK0 ] unsigned char 
 36778 ;; Return value:  Size  Location     Type
 36779 ;;                  1    wreg      void 
 36780 ;; Registers used:
 36781 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36782 ;; Tracked objects:
 36783 ;;		On entry : 0/0
 36784 ;;		On exit  : 0/0
 36785 ;;		Unchanged: 0/0
 36786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36787 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36788 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36789 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36790 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36791 ;;Total ram usage:       15 bytes
 36792 ;; Hardware stack levels used:    1
 36793 ;; Hardware stack levels required when called:    8
 36794 ;; This function calls:
 36795 ;;		_RADIO_GetPacketSnr
 36796 ;; This function is called by:
 36797 ;;		_AssemblePacket
 36798 ;; This function uses a non-reentrant model
 36799 ;;
 36800                           
 36801                           	psect	text204
 36802  002E8E                     __ptext204:
 36803                           	opt stack 0
 36804  002E8E                     _IncludeMacCommandsResponse:
 36805                           	opt stack 20
 36806                           
 36807                           ;lorawan.c: 1847: uint8_t i = 0;
 36808                           
 36809                           ; BSR set to: 2
 36810                           ;incstack = 0
 36811  002E8E  0E00               	movlw	0
 36812  002E90  0100               	movlb	0	; () banked
 36813  002E92  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 36814                           
 36815                           ; BSR set to: 0
 36816                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 36817  002E94  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 36818  002E98  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 36819  002E9C  50DF               	movf	indf2,w,c
 36820  002E9E  6F6E               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 36821                           
 36822                           ; BSR set to: 0
 36823                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 36824  002EA0  0E00               	movlw	0
 36825  002EA2  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 36826  002EA4  D218               	goto	l2373
 36827  002EA6                     
 36828                           ; BSR set to: 0
 36829                           ;lorawan.c: 1851: {
 36830                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 36831                           
 36832                           ; BSR set to: 0
 36833  002EA6  5164               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 36834  002EA8  B4D8               	btfsc	status,2,c
 36835  002EAA  D1F6               	goto	l2378
 36836                           
 36837                           ; BSR set to: 0
 36838  002EAC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 36839  002EAE  0D02               	mullw	2
 36840  002EB0  0EAC               	movlw	low (_loRa+168)
 36841  002EB2  24F3               	addwf	prodl,w,c
 36842  002EB4  6ED9               	movwf	fsr2l,c
 36843  002EB6  0E02               	movlw	high (_loRa+168)
 36844  002EB8  20F4               	addwfc	prodh,w,c
 36845  002EBA  6EDA               	movwf	fsr2h,c
 36846  002EBC  28DE               	incf	postinc2,w,c
 36847  002EBE  B4D8               	btfsc	status,2,c
 36848  002EC0  D1EB               	goto	l2378
 36849                           
 36850                           ; BSR set to: 0
 36851                           ;lorawan.c: 1853: {
 36852                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 36853  002EC2  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 36854  002EC6  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 36855  002ECA  50DF               	movf	indf2,w,c
 36856  002ECC  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 36857  002ECE  6B66               	clrf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 36858  002ED0  1F65               	comf	??_IncludeMacCommandsResponse& (0+255),f,b
 36859  002ED2  1F66               	comf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36860  002ED4  4B65               	infsnz	??_IncludeMacCommandsResponse& (0+255),f,b
 36861  002ED6  2B66               	incf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36862  002ED8  0EFE               	movlw	254
 36863  002EDA  6F67               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 36864  002EDC  0EFF               	movlw	255
 36865  002EDE  6F68               	movwf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 36866  002EE0  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 36867  002EE2  0D02               	mullw	2
 36868  002EE4  0EAC               	movlw	low (_loRa+168)
 36869  002EE6  24F3               	addwf	prodl,w,c
 36870  002EE8  6ED9               	movwf	fsr2l,c
 36871  002EEA  0E02               	movlw	high (_loRa+168)
 36872  002EEC  20F4               	addwfc	prodh,w,c
 36873  002EEE  6EDA               	movwf	fsr2h,c
 36874  002EF0  50DF               	movf	indf2,w,c
 36875  002EF2  6F69               	movwf	(??_IncludeMacCommandsResponse+4)& (0+255),b
 36876  002EF4  6B6A               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 36877  002EF6  5167               	movf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 36878  002EF8  2769               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 36879  002EFA  5168               	movf	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 36880  002EFC  236A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 36881  002EFE  0EAF               	movlw	low _macEndDevCmdReplyLen
 36882  002F00  2569               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 36883  002F02  6EF6               	movwf	tblptrl,c
 36884  002F04  0EFE               	movlw	high _macEndDevCmdReplyLen
 36885  002F06  216A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 36886  002F08  6EF7               	movwf	tblptrh,c
 36887  002F0A                     	if	1	;There are 3 active tblptr bytes
 36888  002F0A  6AF8               	clrf	tblptru,c
 36889  002F0C  0E00               	movlw	low (__mediumconst shr (0+16))
 36890  002F0E  22F8               	addwfc	tblptru,f,c
 36891  002F10                     	endif
 36892  002F10  0008               	tblrd		*
 36893  002F12  50F5               	movf	tablat,w,c
 36894  002F14  C06E  F06B         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+6
 36895  002F18  6B6C               	clrf	(??_IncludeMacCommandsResponse+7)& (0+255),b
 36896  002F1A  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 36897  002F1C  0E00               	movlw	0
 36898  002F1E  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 36899  002F20  5165               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 36900  002F22  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 36901  002F24  5166               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 36902  002F26  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 36903  002F28  BF6C               	btfsc	(??_IncludeMacCommandsResponse+7)& (0+255),7,b
 36904  002F2A  D1B6               	goto	l2378
 36905  002F2C  516C               	movf	(??_IncludeMacCommandsResponse+7)& (0+255),w,b
 36906  002F2E  E105               	bnz	u21140
 36907  002F30  0E10               	movlw	16
 36908  002F32  5D6B               	subwf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 36909  002F34  B0D8               	btfsc	status,0,c
 36910  002F36  D1D5               	goto	u21250
 36911  002F38  D1AF               	goto	l2378
 36912  002F3A                     u21140:
 36913                           
 36914                           ; BSR set to: 0
 36915                           ;lorawan.c: 1855: {
 36916                           ;lorawan.c: 1856: break;
 36917  002F3A  D1D3               	goto	u21250
 36918  002F3C                     
 36919                           ; BSR set to: 0
 36920                           ;lorawan.c: 1862: {
 36921                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 36922                           
 36923                           ; BSR set to: 0
 36924  002F3C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 36925  002F3E  0D01               	mullw	1
 36926  002F40  50F3               	movf	prodl,w,c
 36927  002F42  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 36928  002F44  6ED9               	movwf	fsr2l,c
 36929  002F46  50F4               	movf	prodh,w,c
 36930  002F48  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 36931  002F4A  6EDA               	movwf	fsr2h,c
 36932  002F4C  0E03               	movlw	3
 36933  002F4E  6EDF               	movwf	indf2,c
 36934                           
 36935                           ; BSR set to: 0
 36936  002F50  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 36937                           
 36938                           ; BSR set to: 0
 36939                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 36940  002F52  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 36941  002F54  0D01               	mullw	1
 36942  002F56  50F3               	movf	prodl,w,c
 36943  002F58  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 36944  002F5A  6ED9               	movwf	fsr2l,c
 36945  002F5C  50F4               	movf	prodh,w,c
 36946  002F5E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 36947  002F60  6EDA               	movwf	fsr2h,c
 36948  002F62  0E00               	movlw	0
 36949  002F64  6EDF               	movwf	indf2,c
 36950                           
 36951                           ; BSR set to: 0
 36952                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 36953  002F66  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 36954  002F68  0D02               	mullw	2
 36955  002F6A  0E04               	movlw	low _loRa
 36956  002F6C  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 36957  002F6E  0E02               	movlw	high _loRa
 36958  002F70  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 36959  002F72  0EA8               	movlw	168
 36960  002F74  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 36961  002F76  0E00               	movlw	0
 36962  002F78  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36963  002F7A  50F3               	movf	prodl,w,c
 36964  002F7C  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 36965  002F7E  50F4               	movf	prodh,w,c
 36966  002F80  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36967  002F82  0E01               	movlw	1
 36968  002F84  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 36969  002F86  6ED9               	movwf	fsr2l,c
 36970  002F88  0E00               	movlw	0
 36971  002F8A  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 36972  002F8C  6EDA               	movwf	fsr2h,c
 36973  002F8E  0102               	movlb	2	; () banked
 36974  002F90  A0DF               	btfss	indf2,0,c
 36975  002F92  D00B               	goto	l2380
 36976                           
 36977                           ; BSR set to: 2
 36978                           ;lorawan.c: 1866: {
 36979                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 36980  002F94  0100               	movlb	0	; () banked
 36981  002F96  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 36982  002F98  0D01               	mullw	1
 36983  002F9A  50F3               	movf	prodl,w,c
 36984  002F9C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 36985  002F9E  6ED9               	movwf	fsr2l,c
 36986  002FA0  50F4               	movf	prodh,w,c
 36987  002FA2  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 36988  002FA4  6EDA               	movwf	fsr2h,c
 36989  002FA6  0E00               	movlw	0
 36990  002FA8  80DB               	bsf	plusw2,0,c
 36991  002FAA                     l2380:
 36992                           
 36993                           ;lorawan.c: 1868: }
 36994                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 36995  002FAA  0100               	movlb	0	; () banked
 36996  002FAC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 36997  002FAE  0D02               	mullw	2
 36998  002FB0  0E04               	movlw	low _loRa
 36999  002FB2  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37000  002FB4  0E02               	movlw	high _loRa
 37001  002FB6  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37002  002FB8  0EA8               	movlw	168
 37003  002FBA  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37004  002FBC  0E00               	movlw	0
 37005  002FBE  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37006  002FC0  50F3               	movf	prodl,w,c
 37007  002FC2  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37008  002FC4  50F4               	movf	prodh,w,c
 37009  002FC6  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37010  002FC8  0E01               	movlw	1
 37011  002FCA  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37012  002FCC  6ED9               	movwf	fsr2l,c
 37013  002FCE  0E00               	movlw	0
 37014  002FD0  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37015  002FD2  6EDA               	movwf	fsr2h,c
 37016  002FD4  0102               	movlb	2	; () banked
 37017  002FD6  A2DF               	btfss	indf2,1,c
 37018  002FD8  D00B               	goto	l2381
 37019                           
 37020                           ; BSR set to: 2
 37021                           ;lorawan.c: 1871: {
 37022                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 37023  002FDA  0100               	movlb	0	; () banked
 37024  002FDC  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37025  002FDE  0D01               	mullw	1
 37026  002FE0  50F3               	movf	prodl,w,c
 37027  002FE2  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37028  002FE4  6ED9               	movwf	fsr2l,c
 37029  002FE6  50F4               	movf	prodh,w,c
 37030  002FE8  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37031  002FEA  6EDA               	movwf	fsr2h,c
 37032  002FEC  0E00               	movlw	0
 37033  002FEE  82DB               	bsf	plusw2,1,c
 37034  002FF0                     l2381:
 37035                           
 37036                           ;lorawan.c: 1873: }
 37037                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 37038  002FF0  0100               	movlb	0	; () banked
 37039  002FF2  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37040  002FF4  0D02               	mullw	2
 37041  002FF6  0E04               	movlw	low _loRa
 37042  002FF8  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37043  002FFA  0E02               	movlw	high _loRa
 37044  002FFC  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37045  002FFE  0EA8               	movlw	168
 37046  003000  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37047  003002  0E00               	movlw	0
 37048  003004  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37049  003006  50F3               	movf	prodl,w,c
 37050  003008  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37051  00300A  50F4               	movf	prodh,w,c
 37052  00300C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37053  00300E  0E01               	movlw	1
 37054  003010  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37055  003012  6ED9               	movwf	fsr2l,c
 37056  003014  0E00               	movlw	0
 37057  003016  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37058  003018  6EDA               	movwf	fsr2h,c
 37059  00301A  0102               	movlb	2	; () banked
 37060  00301C  A4DF               	btfss	indf2,2,c
 37061  00301E  D089               	goto	l2387
 37062                           
 37063                           ; BSR set to: 2
 37064                           ;lorawan.c: 1876: {
 37065                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 37066  003020  0100               	movlb	0	; () banked
 37067  003022  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37068  003024  0D01               	mullw	1
 37069  003026  50F3               	movf	prodl,w,c
 37070  003028  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37071  00302A  6ED9               	movwf	fsr2l,c
 37072  00302C  50F4               	movf	prodh,w,c
 37073  00302E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37074  003030  6EDA               	movwf	fsr2h,c
 37075  003032  0E00               	movlw	0
 37076  003034  84DB               	bsf	plusw2,2,c
 37077                           
 37078                           ; BSR set to: 0
 37079  003036  D07D               	goto	l2387
 37080  003038                     
 37081                           ; BSR set to: 0
 37082                           ;lorawan.c: 1884: {
 37083                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 37084                           
 37085                           ; BSR set to: 0
 37086  003038  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37087  00303A  0D01               	mullw	1
 37088  00303C  50F3               	movf	prodl,w,c
 37089  00303E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37090  003040  6ED9               	movwf	fsr2l,c
 37091  003042  50F4               	movf	prodh,w,c
 37092  003044  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37093  003046  6EDA               	movwf	fsr2h,c
 37094  003048  0E05               	movlw	5
 37095  00304A  6EDF               	movwf	indf2,c
 37096                           
 37097                           ; BSR set to: 0
 37098  00304C  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 37099                           
 37100                           ; BSR set to: 0
 37101                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 37102  00304E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37103  003050  0D01               	mullw	1
 37104  003052  50F3               	movf	prodl,w,c
 37105  003054  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37106  003056  6ED9               	movwf	fsr2l,c
 37107  003058  50F4               	movf	prodh,w,c
 37108  00305A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37109  00305C  6EDA               	movwf	fsr2h,c
 37110  00305E  0E00               	movlw	0
 37111  003060  6EDF               	movwf	indf2,c
 37112                           
 37113                           ; BSR set to: 0
 37114                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 37115  003062  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37116  003064  0D02               	mullw	2
 37117  003066  0E04               	movlw	low _loRa
 37118  003068  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37119  00306A  0E02               	movlw	high _loRa
 37120  00306C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37121  00306E  0EA8               	movlw	168
 37122  003070  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37123  003072  0E00               	movlw	0
 37124  003074  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37125  003076  50F3               	movf	prodl,w,c
 37126  003078  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37127  00307A  50F4               	movf	prodh,w,c
 37128  00307C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37129  00307E  0E01               	movlw	1
 37130  003080  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37131  003082  6ED9               	movwf	fsr2l,c
 37132  003084  0E00               	movlw	0
 37133  003086  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37134  003088  6EDA               	movwf	fsr2h,c
 37135  00308A  0102               	movlb	2	; () banked
 37136  00308C  A6DF               	btfss	indf2,3,c
 37137  00308E  D00B               	goto	l2385
 37138                           
 37139                           ; BSR set to: 2
 37140                           ;lorawan.c: 1888: {
 37141                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 37142  003090  0100               	movlb	0	; () banked
 37143  003092  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37144  003094  0D01               	mullw	1
 37145  003096  50F3               	movf	prodl,w,c
 37146  003098  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37147  00309A  6ED9               	movwf	fsr2l,c
 37148  00309C  50F4               	movf	prodh,w,c
 37149  00309E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37150  0030A0  6EDA               	movwf	fsr2h,c
 37151  0030A2  0E00               	movlw	0
 37152  0030A4  80DB               	bsf	plusw2,0,c
 37153  0030A6                     l2385:
 37154                           
 37155                           ;lorawan.c: 1890: }
 37156                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 37157  0030A6  0100               	movlb	0	; () banked
 37158  0030A8  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37159  0030AA  0D02               	mullw	2
 37160  0030AC  0E04               	movlw	low _loRa
 37161  0030AE  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37162  0030B0  0E02               	movlw	high _loRa
 37163  0030B2  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37164  0030B4  0EA8               	movlw	168
 37165  0030B6  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37166  0030B8  0E00               	movlw	0
 37167  0030BA  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37168  0030BC  50F3               	movf	prodl,w,c
 37169  0030BE  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37170  0030C0  50F4               	movf	prodh,w,c
 37171  0030C2  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37172  0030C4  0E01               	movlw	1
 37173  0030C6  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37174  0030C8  6ED9               	movwf	fsr2l,c
 37175  0030CA  0E00               	movlw	0
 37176  0030CC  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37177  0030CE  6EDA               	movwf	fsr2h,c
 37178  0030D0  0102               	movlb	2	; () banked
 37179  0030D2  A8DF               	btfss	indf2,4,c
 37180  0030D4  D00B               	goto	l2386
 37181                           
 37182                           ; BSR set to: 2
 37183                           ;lorawan.c: 1893: {
 37184                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 37185  0030D6  0100               	movlb	0	; () banked
 37186  0030D8  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37187  0030DA  0D01               	mullw	1
 37188  0030DC  50F3               	movf	prodl,w,c
 37189  0030DE  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37190  0030E0  6ED9               	movwf	fsr2l,c
 37191  0030E2  50F4               	movf	prodh,w,c
 37192  0030E4  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37193  0030E6  6EDA               	movwf	fsr2h,c
 37194  0030E8  0E00               	movlw	0
 37195  0030EA  82DB               	bsf	plusw2,1,c
 37196  0030EC                     l2386:
 37197                           
 37198                           ;lorawan.c: 1895: }
 37199                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 37200  0030EC  0100               	movlb	0	; () banked
 37201  0030EE  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37202  0030F0  0D02               	mullw	2
 37203  0030F2  0E04               	movlw	low _loRa
 37204  0030F4  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37205  0030F6  0E02               	movlw	high _loRa
 37206  0030F8  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37207  0030FA  0EA8               	movlw	168
 37208  0030FC  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37209  0030FE  0E00               	movlw	0
 37210  003100  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37211  003102  50F3               	movf	prodl,w,c
 37212  003104  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37213  003106  50F4               	movf	prodh,w,c
 37214  003108  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37215  00310A  0E01               	movlw	1
 37216  00310C  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37217  00310E  6ED9               	movwf	fsr2l,c
 37218  003110  0E00               	movlw	0
 37219  003112  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37220  003114  6EDA               	movwf	fsr2h,c
 37221  003116  0102               	movlb	2	; () banked
 37222  003118  AADF               	btfss	indf2,5,c
 37223  00311A  D00B               	goto	l2387
 37224                           
 37225                           ; BSR set to: 2
 37226                           ;lorawan.c: 1898: {
 37227                           ;lorawan.c: 1899: macBuffer[bufferIndex] |= 0x04;
 37228  00311C  0100               	movlb	0	; () banked
 37229  00311E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37230  003120  0D01               	mullw	1
 37231  003122  50F3               	movf	prodl,w,c
 37232  003124  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37233  003126  6ED9               	movwf	fsr2l,c
 37234  003128  50F4               	movf	prodh,w,c
 37235  00312A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37236  00312C  6EDA               	movwf	fsr2h,c
 37237  00312E  0E00               	movlw	0
 37238  003130  84DB               	bsf	plusw2,2,c
 37239  003132                     l2387:
 37240                           
 37241                           ;lorawan.c: 1900: }
 37242                           ;lorawan.c: 1902: bufferIndex ++;
 37243                           
 37244                           ; BSR set to: 0
 37245  003132  0100               	movlb	0	; () banked
 37246  003134  D03C               	goto	L15
 37247  003136                     
 37248                           ; BSR set to: 0
 37249                           ;lorawan.c: 1907: {
 37250                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 37251                           
 37252                           ; BSR set to: 0
 37253  003136  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37254  003138  0D01               	mullw	1
 37255  00313A  50F3               	movf	prodl,w,c
 37256  00313C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37257  00313E  6ED9               	movwf	fsr2l,c
 37258  003140  50F4               	movf	prodh,w,c
 37259  003142  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37260  003144  6EDA               	movwf	fsr2h,c
 37261  003146  0E06               	movlw	6
 37262  003148  6EDF               	movwf	indf2,c
 37263                           
 37264                           ; BSR set to: 0
 37265  00314A  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 37266                           
 37267                           ; BSR set to: 0
 37268                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 37269  00314C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37270  00314E  0D01               	mullw	1
 37271  003150  50F3               	movf	prodl,w,c
 37272  003152  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37273  003154  6ED9               	movwf	fsr2l,c
 37274  003156  50F4               	movf	prodh,w,c
 37275  003158  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37276  00315A  6EDA               	movwf	fsr2h,c
 37277  00315C  C2E4  FFDF         	movff	_loRa+224,indf2
 37278  003160  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 37279                           
 37280                           ; BSR set to: 0
 37281                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 37282  003162  EC3C  F063         	call	_RADIO_GetPacketSnr	;wreg free
 37283  003166  0A80               	xorlw	128
 37284  003168  0FA0               	addlw	160
 37285  00316A  A0D8               	btfss	status,0,c
 37286  00316C  D006               	goto	u21220
 37287  00316E  EC3C  F063         	call	_RADIO_GetPacketSnr	;wreg free
 37288  003172  0A80               	xorlw	128
 37289  003174  0F60               	addlw	-160
 37290  003176  A0D8               	btfss	status,0,c
 37291  003178  D00C               	goto	l2389
 37292  00317A                     u21220:
 37293                           
 37294                           ;lorawan.c: 1911: {
 37295                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 37296  00317A  0100               	movlb	0	; () banked
 37297  00317C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37298  00317E  0D01               	mullw	1
 37299  003180  50F3               	movf	prodl,w,c
 37300  003182  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37301  003184  6ED9               	movwf	fsr2l,c
 37302  003186  50F4               	movf	prodh,w,c
 37303  003188  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37304  00318A  6EDA               	movwf	fsr2h,c
 37305  00318C  0E20               	movlw	32
 37306  00318E  6EDF               	movwf	indf2,c
 37307  003190  D00E               	goto	L15
 37308  003192                     l2389:
 37309                           
 37310                           ;lorawan.c: 1914: else
 37311                           ;lorawan.c: 1915: {
 37312                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 37313                           
 37314                           ; BSR set to: 0
 37315  003192  0100               	movlb	0	; () banked
 37316  003194  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37317  003196  0D01               	mullw	1
 37318  003198  50F3               	movf	prodl,w,c
 37319  00319A  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37320  00319C  6ED9               	movwf	fsr2l,c
 37321  00319E  50F4               	movf	prodh,w,c
 37322  0031A0  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37323  0031A2  6EDA               	movwf	fsr2h,c
 37324  0031A4  EC3C  F063         	call	_RADIO_GetPacketSnr	;wreg free
 37325  0031A8  0B3F               	andlw	63
 37326  0031AA  6EDF               	movwf	indf2,c
 37327  0031AC  D7C2               	goto	l2387
 37328  0031AE                     L15:
 37329  0031AE  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 37330                           
 37331                           ; BSR set to: 0
 37332                           ;lorawan.c: 1917: }
 37333                           ;lorawan.c: 1918: }
 37334                           ;lorawan.c: 1919: break;
 37335  0031B0  D091               	goto	l2383
 37336  0031B2                     
 37337                           ; BSR set to: 0
 37338                           ;lorawan.c: 1922: {
 37339                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 37340                           
 37341                           ; BSR set to: 0
 37342  0031B2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37343  0031B4  0D01               	mullw	1
 37344  0031B6  50F3               	movf	prodl,w,c
 37345  0031B8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37346  0031BA  6ED9               	movwf	fsr2l,c
 37347  0031BC  50F4               	movf	prodh,w,c
 37348  0031BE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37349  0031C0  6EDA               	movwf	fsr2h,c
 37350  0031C2  0E07               	movlw	7
 37351  0031C4  6EDF               	movwf	indf2,c
 37352                           
 37353                           ; BSR set to: 0
 37354  0031C6  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 37355                           
 37356                           ; BSR set to: 0
 37357                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 37358  0031C8  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37359  0031CA  0D01               	mullw	1
 37360  0031CC  50F3               	movf	prodl,w,c
 37361  0031CE  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37362  0031D0  6ED9               	movwf	fsr2l,c
 37363  0031D2  50F4               	movf	prodh,w,c
 37364  0031D4  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37365  0031D6  6EDA               	movwf	fsr2h,c
 37366  0031D8  0E00               	movlw	0
 37367  0031DA  6EDF               	movwf	indf2,c
 37368                           
 37369                           ; BSR set to: 0
 37370                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 37371  0031DC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37372  0031DE  0D02               	mullw	2
 37373  0031E0  0E04               	movlw	low _loRa
 37374  0031E2  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37375  0031E4  0E02               	movlw	high _loRa
 37376  0031E6  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37377  0031E8  0EA8               	movlw	168
 37378  0031EA  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37379  0031EC  0E00               	movlw	0
 37380  0031EE  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37381  0031F0  50F3               	movf	prodl,w,c
 37382  0031F2  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37383  0031F4  50F4               	movf	prodh,w,c
 37384  0031F6  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37385  0031F8  0E01               	movlw	1
 37386  0031FA  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37387  0031FC  6ED9               	movwf	fsr2l,c
 37388  0031FE  0E00               	movlw	0
 37389  003200  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37390  003202  6EDA               	movwf	fsr2h,c
 37391  003204  0102               	movlb	2	; () banked
 37392  003206  AEDF               	btfss	indf2,7,c
 37393  003208  D00B               	goto	l2394
 37394                           
 37395                           ; BSR set to: 2
 37396                           ;lorawan.c: 1926: {
 37397                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 37398  00320A  0100               	movlb	0	; () banked
 37399  00320C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37400  00320E  0D01               	mullw	1
 37401  003210  50F3               	movf	prodl,w,c
 37402  003212  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37403  003214  6ED9               	movwf	fsr2l,c
 37404  003216  50F4               	movf	prodh,w,c
 37405  003218  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37406  00321A  6EDA               	movwf	fsr2h,c
 37407  00321C  0E00               	movlw	0
 37408  00321E  80DB               	bsf	plusw2,0,c
 37409  003220                     l2394:
 37410                           
 37411                           ;lorawan.c: 1928: }
 37412                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 37413  003220  0100               	movlb	0	; () banked
 37414  003222  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37415  003224  0D02               	mullw	2
 37416  003226  0E04               	movlw	low _loRa
 37417  003228  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37418  00322A  0E02               	movlw	high _loRa
 37419  00322C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37420  00322E  0EA8               	movlw	168
 37421  003230  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37422  003232  0E00               	movlw	0
 37423  003234  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37424  003236  50F3               	movf	prodl,w,c
 37425  003238  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37426  00323A  50F4               	movf	prodh,w,c
 37427  00323C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37428  00323E  0E01               	movlw	1
 37429  003240  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37430  003242  6ED9               	movwf	fsr2l,c
 37431  003244  0E00               	movlw	0
 37432  003246  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37433  003248  6EDA               	movwf	fsr2h,c
 37434  00324A  0102               	movlb	2	; () banked
 37435  00324C  ACDF               	btfss	indf2,6,c
 37436  00324E  D771               	goto	l2387
 37437                           
 37438                           ; BSR set to: 2
 37439                           ;lorawan.c: 1931: {
 37440                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 37441  003250  0100               	movlb	0	; () banked
 37442  003252  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37443  003254  0D01               	mullw	1
 37444  003256  50F3               	movf	prodl,w,c
 37445  003258  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37446  00325A  6ED9               	movwf	fsr2l,c
 37447  00325C  50F4               	movf	prodh,w,c
 37448  00325E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37449  003260  6EDA               	movwf	fsr2h,c
 37450  003262  0E00               	movlw	0
 37451  003264  82DB               	bsf	plusw2,1,c
 37452                           
 37453                           ; BSR set to: 0
 37454  003266  D765               	goto	l2387
 37455  003268                     l2396:
 37456                           
 37457                           ; BSR set to: 0
 37458                           ;lorawan.c: 1939: {
 37459                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 37460  003268  0102               	movlb	2	; () banked
 37461  00326A  69E1               	setf	(_loRa+221)& (0+255),b
 37462                           
 37463                           ; BSR set to: 2
 37464                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 37465  00326C  0E00               	movlw	0
 37466  00326E  6FE2               	movwf	(_loRa+222)& (0+255),b
 37467                           
 37468                           ; BSR set to: 2
 37469                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 37470  003270  0100               	movlb	0	; () banked
 37471  003272                     
 37472                           ; BSR set to: 0
 37473                           ;lorawan.c: 1947: case DUTY_CYCLE_CID:
 37474                           ;lorawan.c: 1948: {
 37475                           ;lorawan.c: 1949: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 37476                           
 37477                           ; BSR set to: 0
 37478                           
 37479                           ; BSR set to: 0
 37480  003272  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37481  003274  0D02               	mullw	2
 37482  003276  0EAC               	movlw	low (_loRa+168)
 37483  003278  24F3               	addwf	prodl,w,c
 37484  00327A  6ED9               	movwf	fsr2l,c
 37485  00327C  0E02               	movlw	high (_loRa+168)
 37486  00327E  20F4               	addwfc	prodh,w,c
 37487  003280  6EDA               	movwf	fsr2h,c
 37488  003282  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37489  003284  0D01               	mullw	1
 37490  003286  50F3               	movf	prodl,w,c
 37491  003288  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37492  00328A  6EE9               	movwf	fsr0l,c
 37493  00328C  50F4               	movf	prodh,w,c
 37494  00328E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37495  003290  6EEA               	movwf	fsr0h,c
 37496  003292  CFDF FFEF          	movff	indf2,indf0
 37497  003296  D78B               	goto	L15
 37498  003298                     l2378:
 37499                           
 37500                           ; BSR set to: 0
 37501                           
 37502                           ; BSR set to: 0
 37503  003298  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37504  00329A  0D02               	mullw	2
 37505  00329C  0EAC               	movlw	low (_loRa+168)
 37506  00329E  24F3               	addwf	prodl,w,c
 37507  0032A0  6ED9               	movwf	fsr2l,c
 37508  0032A2  0E02               	movlw	high (_loRa+168)
 37509  0032A4  20F4               	addwfc	prodh,w,c
 37510  0032A6  6EDA               	movwf	fsr2h,c
 37511  0032A8  50DF               	movf	indf2,w,c
 37512                           
 37513                           ; Switch size 1, requested type "space"
 37514                           ; Number of cases is 7, Range of values is 2 to 8
 37515                           ; switch strategies available:
 37516                           ; Name         Instructions Cycles
 37517                           ; simple_byte           22    12 (average)
 37518                           ;	Chosen strategy is simple_byte
 37519  0032AA  0A02               	xorlw	2	; case 2
 37520  0032AC  B4D8               	btfsc	status,2,c
 37521  0032AE  D7DC               	goto	l2396
 37522  0032B0  0A01               	xorlw	1	; case 3
 37523  0032B2  B4D8               	btfsc	status,2,c
 37524  0032B4  D643               	goto	l2379
 37525  0032B6  0A07               	xorlw	7	; case 4
 37526  0032B8  B4D8               	btfsc	status,2,c
 37527  0032BA  D7DB               	goto	l2397
 37528  0032BC  0A01               	xorlw	1	; case 5
 37529  0032BE  B4D8               	btfsc	status,2,c
 37530  0032C0  D6BB               	goto	l2384
 37531  0032C2  0A03               	xorlw	3	; case 6
 37532  0032C4  B4D8               	btfsc	status,2,c
 37533  0032C6  D737               	goto	l2388
 37534  0032C8  0A01               	xorlw	1	; case 7
 37535  0032CA  B4D8               	btfsc	status,2,c
 37536  0032CC  D772               	goto	l2393
 37537  0032CE  0A0F               	xorlw	15	; case 8
 37538  0032D0  B4D8               	btfsc	status,2,c
 37539  0032D2  D7CF               	goto	l2397
 37540  0032D4                     l2383:
 37541                           
 37542                           ; BSR set to: 0
 37543                           
 37544                           ; BSR set to: 0
 37545  0032D4  2B6D               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 37546  0032D6                     l2373:
 37547                           
 37548                           ; BSR set to: 0
 37549                           
 37550                           ; BSR set to: 0
 37551  0032D6  0102               	movlb	2	; () banked
 37552  0032D8  51AB               	movf	(_loRa+167)& (0+255),w,b
 37553  0032DA  0100               	movlb	0	; () banked
 37554  0032DC  5D6D               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 37555  0032DE  A0D8               	btfss	status,0,c
 37556  0032E0  D5E2               	goto	l2374
 37557  0032E2                     u21250:
 37558                           
 37559                           ; BSR set to: 0
 37560                           ;lorawan.c: 1957: }
 37561                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 37562                           
 37563                           ; BSR set to: 0
 37564  0032E2  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 37565  0032E6  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 37566  0032EA  C06E  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 37567                           
 37568                           ; BSR set to: 0
 37569  0032EE  0012               	return		;funcret
 37570  0032F0                     __end_of_IncludeMacCommandsResponse:
 37571                           	opt stack 0
 37572                           tosu	equ	0xFFF
 37573                           tosh	equ	0xFFE
 37574                           tosl	equ	0xFFD
 37575                           pclath	equ	0xFFA
 37576                           tblptru	equ	0xFF8
 37577                           tblptrh	equ	0xFF7
 37578                           tblptrl	equ	0xFF6
 37579                           tablat	equ	0xFF5
 37580                           prodh	equ	0xFF4
 37581                           prodl	equ	0xFF3
 37582                           intcon	equ	0xFF2
 37583                           intcon2	equ	0xFF1
 37584                           intcon3	equ	0xFF0
 37585                           indf0	equ	0xFEF
 37586                           postinc0	equ	0xFEE
 37587                           fsr0h	equ	0xFEA
 37588                           fsr0l	equ	0xFE9
 37589                           wreg	equ	0xFE8
 37590                           postinc1	equ	0xFE6
 37591                           postdec1	equ	0xFE5
 37592                           plusw1	equ	0xFE3
 37593                           fsr1h	equ	0xFE2
 37594                           fsr1l	equ	0xFE1
 37595                           indf2	equ	0xFDF
 37596                           postinc2	equ	0xFDE
 37597                           postdec2	equ	0xFDD
 37598                           plusw2	equ	0xFDB
 37599                           fsr2h	equ	0xFDA
 37600                           fsr2l	equ	0xFD9
 37601                           status	equ	0xFD8
 37602                           
 37603 ;; *************** function _RADIO_GetPacketSnr *****************
 37604 ;; Defined at:
 37605 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 37606 ;; Parameters:    Size  Location     Type
 37607 ;;		None
 37608 ;; Auto vars:     Size  Location     Type
 37609 ;;		None
 37610 ;; Return value:  Size  Location     Type
 37611 ;;                  1    wreg      char 
 37612 ;; Registers used:
 37613 ;;		wreg, status,2
 37614 ;; Tracked objects:
 37615 ;;		On entry : 0/0
 37616 ;;		On exit  : 0/0
 37617 ;;		Unchanged: 0/0
 37618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37623 ;;Total ram usage:        0 bytes
 37624 ;; Hardware stack levels used:    1
 37625 ;; Hardware stack levels required when called:    7
 37626 ;; This function calls:
 37627 ;;		Nothing
 37628 ;; This function is called by:
 37629 ;;		_IncludeMacCommandsResponse
 37630 ;; This function uses a non-reentrant model
 37631 ;;
 37632                           
 37633                           	psect	text205
 37634  00C678                     __ptext205:
 37635                           	opt stack 0
 37636  00C678                     _RADIO_GetPacketSnr:
 37637                           	opt stack 20
 37638                           
 37639                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 37640                           
 37641                           ; BSR set to: 0
 37642                           ;incstack = 0
 37643  00C678  0101               	movlb	1	; () banked
 37644  00C67A  5167               	movf	(_RadioConfiguration+50)& (0+255),w,b
 37645  00C67C  0012               	return	
 37646  00C67E                     __end_of_RADIO_GetPacketSnr:
 37647                           	opt stack 0
 37648                           tosu	equ	0xFFF
 37649                           tosh	equ	0xFFE
 37650                           tosl	equ	0xFFD
 37651                           pclath	equ	0xFFA
 37652                           tblptru	equ	0xFF8
 37653                           tblptrh	equ	0xFF7
 37654                           tblptrl	equ	0xFF6
 37655                           tablat	equ	0xFF5
 37656                           prodh	equ	0xFF4
 37657                           prodl	equ	0xFF3
 37658                           intcon	equ	0xFF2
 37659                           intcon2	equ	0xFF1
 37660                           intcon3	equ	0xFF0
 37661                           indf0	equ	0xFEF
 37662                           postinc0	equ	0xFEE
 37663                           fsr0h	equ	0xFEA
 37664                           fsr0l	equ	0xFE9
 37665                           wreg	equ	0xFE8
 37666                           postinc1	equ	0xFE6
 37667                           postdec1	equ	0xFE5
 37668                           plusw1	equ	0xFE3
 37669                           fsr1h	equ	0xFE2
 37670                           fsr1l	equ	0xFE1
 37671                           indf2	equ	0xFDF
 37672                           postinc2	equ	0xFDE
 37673                           postdec2	equ	0xFDD
 37674                           plusw2	equ	0xFDB
 37675                           fsr2h	equ	0xFDA
 37676                           fsr2l	equ	0xFD9
 37677                           status	equ	0xFD8
 37678                           
 37679 ;; *************** function _FindSmallestDataRate *****************
 37680 ;; Defined at:
 37681 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37682 ;; Parameters:    Size  Location     Type
 37683 ;;		None
 37684 ;; Auto vars:     Size  Location     Type
 37685 ;;  dataRate        1    3[BANK0 ] unsigned char 
 37686 ;;  i               1    2[BANK0 ] unsigned char 
 37687 ;;  found           1    1[BANK0 ] unsigned char 
 37688 ;; Return value:  Size  Location     Type
 37689 ;;                  1    wreg      unsigned char 
 37690 ;; Registers used:
 37691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37692 ;; Tracked objects:
 37693 ;;		On entry : 0/0
 37694 ;;		On exit  : 0/0
 37695 ;;		Unchanged: 0/0
 37696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37698 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37699 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37700 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37701 ;;Total ram usage:        4 bytes
 37702 ;; Hardware stack levels used:    1
 37703 ;; Hardware stack levels required when called:    7
 37704 ;; This function calls:
 37705 ;;		Nothing
 37706 ;; This function is called by:
 37707 ;;		_AckRetransmissionCallback
 37708 ;;		_AssemblePacket
 37709 ;; This function uses a non-reentrant model
 37710 ;;
 37711                           
 37712                           	psect	text206
 37713  009128                     __ptext206:
 37714                           	opt stack 0
 37715  009128                     _FindSmallestDataRate:
 37716                           	opt stack 21
 37717                           
 37718                           ;lorawan.c: 1965: uint8_t i = 0, dataRate;
 37719                           
 37720                           ; BSR set to: 1
 37721                           ;incstack = 0
 37722  009128  0E00               	movlw	0
 37723  00912A  0100               	movlb	0	; () banked
 37724  00912C  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 37725                           
 37726                           ;lorawan.c: 1966: bool found = 0;
 37727  00912E  0E00               	movlw	0
 37728  009130  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 37729                           
 37730                           ; BSR set to: 0
 37731                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 37732  009132  0102               	movlb	2	; () banked
 37733  009134  51E3               	movf	(_loRa+223)& (0+255),w,b
 37734  009136  5DEF               	subwf	(_loRa+235)& (0+255),w,b
 37735  009138  B0D8               	btfsc	status,0,c
 37736  00913A  D062               	goto	l2414
 37737                           
 37738                           ; BSR set to: 2
 37739                           ;lorawan.c: 1969: {
 37740                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 37741  00913C  05E3               	decf	(_loRa+223)& (0+255),w,b
 37742  00913E  0100               	movlb	0	; () banked
 37743  009140  D050               	goto	L16
 37744  009142                     
 37745                           ; BSR set to: 0
 37746                           ;lorawan.c: 1973: {
 37747                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 37748                           
 37749                           ; BSR set to: 0
 37750  009142  0E00               	movlw	0
 37751  009144  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 37752  009146  D03D               	goto	l2406
 37753  009148                     
 37754                           ; BSR set to: 0
 37755                           ;lorawan.c: 1975: {
 37756                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 37757                           
 37758                           ; BSR set to: 0
 37759  009148  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 37760  00914A  0D0E               	mullw	14
 37761  00914C  0E05               	movlw	5
 37762  00914E  26F3               	addwf	prodl,f,c
 37763  009150  0E00               	movlw	0
 37764  009152  22F4               	addwfc	prodh,f,c
 37765  009154  0E00               	movlw	low _Channels
 37766  009156  24F3               	addwf	prodl,w,c
 37767  009158  6ED9               	movwf	fsr2l,c
 37768  00915A  0E04               	movlw	high _Channels
 37769  00915C  20F4               	addwfc	prodh,w,c
 37770  00915E  6EDA               	movwf	fsr2h,c
 37771  009160  0104               	movlb	4	; () banked
 37772  009162  50DF               	movf	223,w,c
 37773  009164  0B0F               	andlw	15
 37774  009166  0100               	movlb	0	; () banked
 37775  009168  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 37776  00916A  5160               	movf	??_FindSmallestDataRate& (0+255),w,b
 37777  00916C  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 37778  00916E  A0D8               	btfss	status,0,c
 37779  009170  D027               	goto	l2408
 37780                           
 37781                           ; BSR set to: 0
 37782  009172  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 37783  009174  0D0E               	mullw	14
 37784  009176  0E05               	movlw	5
 37785  009178  26F3               	addwf	prodl,f,c
 37786  00917A  0E00               	movlw	0
 37787  00917C  22F4               	addwfc	prodh,f,c
 37788  00917E  0E00               	movlw	low _Channels
 37789  009180  24F3               	addwf	prodl,w,c
 37790  009182  6ED9               	movwf	fsr2l,c
 37791  009184  0E04               	movlw	high _Channels
 37792  009186  20F4               	addwfc	prodh,w,c
 37793  009188  6EDA               	movwf	fsr2h,c
 37794  00918A  0104               	movlb	4	; () banked
 37795  00918C  38DF               	swapf	223,w,c
 37796  00918E  0B0F               	andlw	15
 37797  009190  0100               	movlb	0	; () banked
 37798  009192  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 37799  009194  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 37800  009196  5D60               	subwf	??_FindSmallestDataRate& (0+255),w,b
 37801  009198  A0D8               	btfss	status,0,c
 37802  00919A  D012               	goto	l2408
 37803                           
 37804                           ; BSR set to: 0
 37805  00919C  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 37806  00919E  0D0E               	mullw	14
 37807  0091A0  0E04               	movlw	4
 37808  0091A2  26F3               	addwf	prodl,f,c
 37809  0091A4  0E00               	movlw	0
 37810  0091A6  22F4               	addwfc	prodh,f,c
 37811  0091A8  0E00               	movlw	low _Channels
 37812  0091AA  24F3               	addwf	prodl,w,c
 37813  0091AC  6ED9               	movwf	fsr2l,c
 37814  0091AE  0E04               	movlw	high _Channels
 37815  0091B0  20F4               	addwfc	prodh,w,c
 37816  0091B2  6EDA               	movwf	fsr2h,c
 37817  0091B4  04DE               	decf	postinc2,w,c
 37818  0091B6  A4D8               	btfss	status,2,c
 37819  0091B8  D003               	goto	l2408
 37820                           
 37821                           ; BSR set to: 0
 37822                           ;lorawan.c: 1977: {
 37823                           ;lorawan.c: 1978: found = 1;
 37824  0091BA  0E01               	movlw	1
 37825  0091BC  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 37826                           
 37827                           ;lorawan.c: 1979: break;
 37828  0091BE  D007               	goto	u20970
 37829  0091C0                     l2408:
 37830                           
 37831                           ; BSR set to: 0
 37832                           
 37833                           ; BSR set to: 0
 37834  0091C0  2B62               	incf	FindSmallestDataRate@i& (0+255),f,b
 37835  0091C2                     l2406:
 37836                           
 37837                           ; BSR set to: 0
 37838                           
 37839                           ; BSR set to: 0
 37840  0091C2  0102               	movlb	2	; () banked
 37841  0091C4  51F1               	movf	(_loRa+237)& (0+255),w,b
 37842  0091C6  0100               	movlb	0	; () banked
 37843  0091C8  5D62               	subwf	FindSmallestDataRate@i& (0+255),w,b
 37844  0091CA  A0D8               	btfss	status,0,c
 37845  0091CC  D7BD               	goto	l2407
 37846  0091CE                     u20970:
 37847                           
 37848                           ; BSR set to: 0
 37849                           ;lorawan.c: 1980: }
 37850                           ;lorawan.c: 1981: }
 37851                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 37852                           
 37853                           ; BSR set to: 0
 37854  0091CE  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 37855  0091D0  A4D8               	btfss	status,2,c
 37856  0091D2  D008               	goto	l2410
 37857                           
 37858                           ; BSR set to: 0
 37859  0091D4  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 37860  0091D6  0102               	movlb	2	; () banked
 37861  0091D8  5DEF               	subwf	(_loRa+235)& (0+255),w,b
 37862  0091DA  B0D8               	btfsc	status,0,c
 37863  0091DC  D003               	goto	l2410
 37864                           
 37865                           ; BSR set to: 2
 37866                           ;lorawan.c: 1983: {
 37867                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 37868  0091DE  0100               	movlb	0	; () banked
 37869  0091E0  0563               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 37870  0091E2                     L16:
 37871  0091E2  6F63               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 37872  0091E4                     l2410:
 37873                           
 37874                           ; BSR set to: 0
 37875                           
 37876                           ; BSR set to: 0
 37877  0091E4  0100               	movlb	0	; () banked
 37878  0091E6  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 37879  0091E8  A4D8               	btfss	status,2,c
 37880  0091EA  D006               	goto	u21010
 37881                           
 37882                           ; BSR set to: 0
 37883  0091EC  0102               	movlb	2	; () banked
 37884  0091EE  51EF               	movf	(_loRa+235)& (0+255),w,b
 37885  0091F0  0100               	movlb	0	; () banked
 37886  0091F2  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 37887  0091F4  B0D8               	btfsc	status,0,c
 37888  0091F6  D7A5               	goto	l2405
 37889  0091F8                     u21010:
 37890                           
 37891                           ; BSR set to: 0
 37892                           ;lorawan.c: 1985: }
 37893                           ;lorawan.c: 1986: }
 37894                           ;lorawan.c: 1988: if (found == 1)
 37895                           
 37896                           ; BSR set to: 0
 37897                           
 37898                           ; BSR set to: 0
 37899  0091F8  0561               	decf	FindSmallestDataRate@found& (0+255),w,b
 37900  0091FA  B4D8               	btfsc	status,2,c
 37901                           
 37902                           ; BSR set to: 0
 37903                           ;lorawan.c: 1989: {
 37904                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 37905  0091FC  C063  F2E3         	movff	FindSmallestDataRate@dataRate,_loRa+223
 37906  009200                     l2414:
 37907                           
 37908                           ;lorawan.c: 1991: }
 37909                           ;lorawan.c: 1992: }
 37910                           ;lorawan.c: 1994: return found;
 37911                           
 37912                           ; BSR set to: 0
 37913                           
 37914                           ; BSR set to: 0
 37915  009200  0100               	movlb	0	; () banked
 37916  009202  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 37917  009204  0012               	return	
 37918  009206                     __end_of_FindSmallestDataRate:
 37919                           	opt stack 0
 37920                           tosu	equ	0xFFF
 37921                           tosh	equ	0xFFE
 37922                           tosl	equ	0xFFD
 37923                           pclath	equ	0xFFA
 37924                           tblptru	equ	0xFF8
 37925                           tblptrh	equ	0xFF7
 37926                           tblptrl	equ	0xFF6
 37927                           tablat	equ	0xFF5
 37928                           prodh	equ	0xFF4
 37929                           prodl	equ	0xFF3
 37930                           intcon	equ	0xFF2
 37931                           intcon2	equ	0xFF1
 37932                           intcon3	equ	0xFF0
 37933                           indf0	equ	0xFEF
 37934                           postinc0	equ	0xFEE
 37935                           fsr0h	equ	0xFEA
 37936                           fsr0l	equ	0xFE9
 37937                           wreg	equ	0xFE8
 37938                           postinc1	equ	0xFE6
 37939                           postdec1	equ	0xFE5
 37940                           plusw1	equ	0xFE3
 37941                           fsr1h	equ	0xFE2
 37942                           fsr1l	equ	0xFE1
 37943                           indf2	equ	0xFDF
 37944                           postinc2	equ	0xFDE
 37945                           postdec2	equ	0xFDD
 37946                           plusw2	equ	0xFDB
 37947                           fsr2h	equ	0xFDA
 37948                           fsr2l	equ	0xFD9
 37949                           status	equ	0xFD8
 37950                           
 37951 ;; *************** function _EncryptFRMPayload *****************
 37952 ;; Defined at:
 37953 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37954 ;; Parameters:    Size  Location     Type
 37955 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 37956 ;;		 -> data(8), sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 37957 ;;		 -> NULL(0), 
 37958 ;;  bufferLength    1   51[BANK0 ] unsigned char 
 37959 ;;  dir             1   52[BANK0 ] unsigned char 
 37960 ;;  frameCounter    4   53[BANK0 ] unsigned long 
 37961 ;;  key             2   57[BANK0 ] PTR unsigned char 
 37962 ;;		 -> loRa.activationParameters(105), loRa(245), 
 37963 ;;  macBufferInd    1   59[BANK0 ] unsigned char 
 37964 ;;  bufferToBeEn    2   60[BANK0 ] PTR unsigned char 
 37965 ;;		 -> macBuffer(271), radioBuffer(271), 
 37966 ;;  multicastSta    1   62[BANK0 ] unsigned char 
 37967 ;; Auto vars:     Size  Location     Type
 37968 ;;  j               1   70[BANK0 ] unsigned char 
 37969 ;;  i               1   69[BANK0 ] unsigned char 
 37970 ;;  k               1   68[BANK0 ] unsigned char 
 37971 ;; Return value:  Size  Location     Type
 37972 ;;                  1    wreg      void 
 37973 ;; Registers used:
 37974 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37975 ;; Tracked objects:
 37976 ;;		On entry : 0/0
 37977 ;;		On exit  : 0/0
 37978 ;;		Unchanged: 0/0
 37979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37980 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37981 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37982 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37983 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37984 ;;Total ram usage:       22 bytes
 37985 ;; Hardware stack levels used:    1
 37986 ;; Hardware stack levels required when called:   10
 37987 ;; This function calls:
 37988 ;;		_AESEncodeLoRa
 37989 ;;		_AssembleEncryptionBlock
 37990 ;;		___awdiv
 37991 ;; This function is called by:
 37992 ;;		_LORAWAN_RxDone
 37993 ;;		_AssemblePacket
 37994 ;; This function uses a non-reentrant model
 37995 ;;
 37996                           
 37997                           	psect	text207
 37998  006E80                     __ptext207:
 37999                           	opt stack 0
 38000  006E80                     _EncryptFRMPayload:
 38001                           	opt stack 18
 38002                           
 38003                           ;lorawan.c: 2207: uint8_t k = 0, i = 0, j = 0;
 38004                           
 38005                           ; BSR set to: 0
 38006                           ;incstack = 0
 38007  006E80  0E00               	movlw	0
 38008  006E82  0100               	movlb	0	; () banked
 38009  006E84  6FA4               	movwf	EncryptFRMPayload@k& (0+255),b
 38010  006E86  0E00               	movlw	0
 38011  006E88  6FA5               	movwf	EncryptFRMPayload@i& (0+255),b
 38012  006E8A  0E00               	movlw	0
 38013  006E8C  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 38014                           
 38015                           ; BSR set to: 0
 38016                           ;lorawan.c: 2209: k = bufferLength / 16;
 38017  006E8E  C093  F066         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 38018  006E92  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 38019  006E94  0E00               	movlw	0
 38020  006E96  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 38021  006E98  0E10               	movlw	16
 38022  006E9A  6F68               	movwf	___awdiv@divisor& (0+255),b
 38023  006E9C  EC2A  F050         	call	___awdiv	;wreg free
 38024  006EA0  0100               	movlb	0	; () banked
 38025  006EA2  5166               	movf	?___awdiv& (0+255),w,b
 38026  006EA4  6FA4               	movwf	EncryptFRMPayload@k& (0+255),b
 38027                           
 38028                           ; BSR set to: 0
 38029                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 38030  006EA6  0E01               	movlw	1
 38031  006EA8  6FA5               	movwf	EncryptFRMPayload@i& (0+255),b
 38032  006EAA  D05A               	goto	l2479
 38033  006EAC                     
 38034                           ; BSR set to: 0
 38035                           ;lorawan.c: 2211: {
 38036                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 38037                           
 38038                           ; BSR set to: 0
 38039  006EAC  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 38040  006EB0  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 38041  006EB4  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 38042  006EB8  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 38043  006EBC  C0A5  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 38044  006EC0  0E01               	movlw	1
 38045  006EC2  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 38046  006EC4  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 38047  006EC8  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 38048  006ECA  ECD1  F045         	call	_AssembleEncryptionBlock
 38049                           
 38050                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 38051  006ECE  0EC8               	movlw	low _aesBuffer
 38052  006ED0  0100               	movlb	0	; () banked
 38053  006ED2  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 38054  006ED4  0E03               	movlw	high _aesBuffer
 38055  006ED6  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 38056  006ED8  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 38057  006EDC  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 38058  006EE0  EC15  F05C         	call	_AESEncodeLoRa	;wreg free
 38059                           
 38060                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 38061  006EE4  0E00               	movlw	0
 38062  006EE6  0100               	movlb	0	; () banked
 38063  006EE8  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 38064  006EEA                     l18727:
 38065                           
 38066                           ; BSR set to: 0
 38067  006EEA  0E0F               	movlw	15
 38068  006EEC  65A6               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 38069  006EEE  D001               	goto	l2481
 38070  006EF0  D036               	goto	u21050
 38071  006EF2                     l2481:
 38072                           
 38073                           ; BSR set to: 0
 38074                           ;lorawan.c: 2216: {
 38075                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 38076                           
 38077                           ; BSR set to: 0
 38078  006EF2  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 38079  006EF4  0D01               	mullw	1
 38080  006EF6  50F3               	movf	prodl,w,c
 38081  006EF8  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 38082  006EFA  6ED9               	movwf	fsr2l,c
 38083  006EFC  50F4               	movf	prodh,w,c
 38084  006EFE  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 38085  006F00  6EDA               	movwf	fsr2h,c
 38086  006F02  0EF0               	movlw	240
 38087  006F04  6F9F               	movwf	??_EncryptFRMPayload& (0+255),b
 38088  006F06  0EFF               	movlw	255
 38089  006F08  6FA0               	movwf	(??_EncryptFRMPayload+1)& (0+255),b
 38090  006F0A  51A5               	movf	EncryptFRMPayload@i& (0+255),w,b
 38091  006F0C  6FA1               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 38092  006F0E  6BA2               	clrf	(??_EncryptFRMPayload+3)& (0+255),b
 38093  006F10  3BA1               	swapf	(??_EncryptFRMPayload+2)& (0+255),f,b
 38094  006F12  3BA2               	swapf	(??_EncryptFRMPayload+3)& (0+255),f,b
 38095  006F14  0EF0               	movlw	240
 38096  006F16  17A2               	andwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 38097  006F18  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 38098  006F1A  0B0F               	andlw	15
 38099  006F1C  13A2               	iorwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 38100  006F1E  0EF0               	movlw	240
 38101  006F20  17A1               	andwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 38102  006F22  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 38103  006F24  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 38104  006F26  0E00               	movlw	0
 38105  006F28  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 38106  006F2A  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 38107  006F2C  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 38108  006F2E  51A0               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 38109  006F30  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 38110  006F32  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 38111  006F34  2591               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 38112  006F36  6EE9               	movwf	fsr0l,c
 38113  006F38  51A2               	movf	(??_EncryptFRMPayload+3)& (0+255),w,b
 38114  006F3A  2192               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 38115  006F3C  6EEA               	movwf	fsr0h,c
 38116  006F3E  50EF               	movf	indf0,w,c
 38117  006F40  6FA3               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 38118  006F42  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 38119  006F44  0D01               	mullw	1
 38120  006F46  0EC8               	movlw	low _aesBuffer
 38121  006F48  24F3               	addwf	prodl,w,c
 38122  006F4A  6EE9               	movwf	fsr0l,c
 38123  006F4C  0E03               	movlw	high _aesBuffer
 38124  006F4E  20F4               	addwfc	prodh,w,c
 38125  006F50  6EEA               	movwf	fsr0h,c
 38126  006F52  50EF               	movf	indf0,w,c
 38127  006F54  19A3               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 38128  006F56  6EDF               	movwf	indf2,c
 38129                           
 38130                           ; BSR set to: 0
 38131  006F58  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 38132                           
 38133                           ; BSR set to: 0
 38134  006F5A  2BA6               	incf	EncryptFRMPayload@j& (0+255),f,b
 38135  006F5C  D7C6               	goto	l18727
 38136  006F5E                     u21050:
 38137                           
 38138                           ; BSR set to: 0
 38139                           
 38140                           ; BSR set to: 0
 38141  006F5E  2BA5               	incf	EncryptFRMPayload@i& (0+255),f,b
 38142  006F60                     l2479:
 38143                           
 38144                           ; BSR set to: 0
 38145                           
 38146                           ; BSR set to: 0
 38147  006F60  51A5               	movf	EncryptFRMPayload@i& (0+255),w,b
 38148  006F62  5DA4               	subwf	EncryptFRMPayload@k& (0+255),w,b
 38149  006F64  B0D8               	btfsc	status,0,c
 38150  006F66  D7A2               	goto	l2480
 38151                           
 38152                           ; BSR set to: 0
 38153                           ;lorawan.c: 2218: }
 38154                           ;lorawan.c: 2219: }
 38155                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 38156                           
 38157                           ; BSR set to: 0
 38158  006F68  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 38159  006F6C  0E0F               	movlw	15
 38160  006F6E  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 38161  006F70  B4D8               	btfsc	status,2,c
 38162  006F72  0012               	return	
 38163                           
 38164                           ; BSR set to: 0
 38165                           ;lorawan.c: 2222: {
 38166                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 38167  006F74  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 38168  006F78  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 38169  006F7C  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 38170  006F80  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 38171  006F84  C0A5  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 38172  006F88  0E01               	movlw	1
 38173  006F8A  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 38174  006F8C  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 38175  006F90  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 38176  006F92  ECD1  F045         	call	_AssembleEncryptionBlock
 38177                           
 38178                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 38179  006F96  0EC8               	movlw	low _aesBuffer
 38180  006F98  0100               	movlb	0	; () banked
 38181  006F9A  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 38182  006F9C  0E03               	movlw	high _aesBuffer
 38183  006F9E  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 38184  006FA0  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 38185  006FA4  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 38186  006FA8  EC15  F05C         	call	_AESEncodeLoRa	;wreg free
 38187                           
 38188                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 38189  006FAC  0E00               	movlw	0
 38190  006FAE  0100               	movlb	0	; () banked
 38191  006FB0  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 38192  006FB2  D023               	goto	l2485
 38193  006FB4                     
 38194                           ; BSR set to: 0
 38195                           ;lorawan.c: 2227: {
 38196                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 38197                           
 38198                           ; BSR set to: 0
 38199  006FB4  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 38200  006FB6  0D01               	mullw	1
 38201  006FB8  50F3               	movf	prodl,w,c
 38202  006FBA  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 38203  006FBC  6ED9               	movwf	fsr2l,c
 38204  006FBE  50F4               	movf	prodh,w,c
 38205  006FC0  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 38206  006FC2  6EDA               	movwf	fsr2h,c
 38207  006FC4  51A4               	movf	EncryptFRMPayload@k& (0+255),w,b
 38208  006FC6  0D10               	mullw	16
 38209  006FC8  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 38210  006FCA  26F3               	addwf	prodl,f,c
 38211  006FCC  0E00               	movlw	0
 38212  006FCE  22F4               	addwfc	prodh,f,c
 38213  006FD0  50F3               	movf	prodl,w,c
 38214  006FD2  2591               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 38215  006FD4  6EE9               	movwf	fsr0l,c
 38216  006FD6  50F4               	movf	prodh,w,c
 38217  006FD8  2192               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 38218  006FDA  6EEA               	movwf	fsr0h,c
 38219  006FDC  50EF               	movf	indf0,w,c
 38220  006FDE  6F9F               	movwf	??_EncryptFRMPayload& (0+255),b
 38221  006FE0  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 38222  006FE2  0D01               	mullw	1
 38223  006FE4  0EC8               	movlw	low _aesBuffer
 38224  006FE6  24F3               	addwf	prodl,w,c
 38225  006FE8  6EE9               	movwf	fsr0l,c
 38226  006FEA  0E03               	movlw	high _aesBuffer
 38227  006FEC  20F4               	addwfc	prodh,w,c
 38228  006FEE  6EEA               	movwf	fsr0h,c
 38229  006FF0  50EF               	movf	indf0,w,c
 38230  006FF2  199F               	xorwf	??_EncryptFRMPayload& (0+255),w,b
 38231  006FF4  6EDF               	movwf	indf2,c
 38232                           
 38233                           ; BSR set to: 0
 38234  006FF6  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 38235                           
 38236                           ; BSR set to: 0
 38237  006FF8  2BA6               	incf	EncryptFRMPayload@j& (0+255),f,b
 38238  006FFA                     l2485:
 38239                           
 38240                           ; BSR set to: 0
 38241                           
 38242                           ; BSR set to: 0
 38243  006FFA  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 38244  006FFE  0E0F               	movlw	15
 38245  007000  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 38246  007002  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 38247  007004  5DA6               	subwf	EncryptFRMPayload@j& (0+255),w,b
 38248  007006  B0D8               	btfsc	status,0,c
 38249  007008  0012               	return	
 38250  00700A  D7D4               	goto	l2486
 38251  00700C                     __end_of_EncryptFRMPayload:
 38252                           	opt stack 0
 38253                           tosu	equ	0xFFF
 38254                           tosh	equ	0xFFE
 38255                           tosl	equ	0xFFD
 38256                           pclath	equ	0xFFA
 38257                           tblptru	equ	0xFF8
 38258                           tblptrh	equ	0xFF7
 38259                           tblptrl	equ	0xFF6
 38260                           tablat	equ	0xFF5
 38261                           prodh	equ	0xFF4
 38262                           prodl	equ	0xFF3
 38263                           intcon	equ	0xFF2
 38264                           intcon2	equ	0xFF1
 38265                           intcon3	equ	0xFF0
 38266                           indf0	equ	0xFEF
 38267                           postinc0	equ	0xFEE
 38268                           fsr0h	equ	0xFEA
 38269                           fsr0l	equ	0xFE9
 38270                           wreg	equ	0xFE8
 38271                           postinc1	equ	0xFE6
 38272                           postdec1	equ	0xFE5
 38273                           plusw1	equ	0xFE3
 38274                           fsr1h	equ	0xFE2
 38275                           fsr1l	equ	0xFE1
 38276                           indf2	equ	0xFDF
 38277                           postinc2	equ	0xFDE
 38278                           postdec2	equ	0xFDD
 38279                           plusw2	equ	0xFDB
 38280                           fsr2h	equ	0xFDA
 38281                           fsr2l	equ	0xFD9
 38282                           status	equ	0xFD8
 38283                           
 38284 ;; *************** function ___awdiv *****************
 38285 ;; Defined at:
 38286 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 38287 ;; Parameters:    Size  Location     Type
 38288 ;;  dividend        2    6[BANK0 ] int 
 38289 ;;  divisor         2    8[BANK0 ] int 
 38290 ;; Auto vars:     Size  Location     Type
 38291 ;;  quotient        2   12[BANK0 ] int 
 38292 ;;  sign            1   11[BANK0 ] unsigned char 
 38293 ;;  counter         1   10[BANK0 ] unsigned char 
 38294 ;; Return value:  Size  Location     Type
 38295 ;;                  2    6[BANK0 ] int 
 38296 ;; Registers used:
 38297 ;;		wreg, status,2, status,0
 38298 ;; Tracked objects:
 38299 ;;		On entry : 0/0
 38300 ;;		On exit  : 0/0
 38301 ;;		Unchanged: 0/0
 38302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38303 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38304 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38306 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38307 ;;Total ram usage:        8 bytes
 38308 ;; Hardware stack levels used:    1
 38309 ;; Hardware stack levels required when called:    7
 38310 ;; This function calls:
 38311 ;;		Nothing
 38312 ;; This function is called by:
 38313 ;;		_EncryptFRMPayload
 38314 ;;		_fround
 38315 ;;		_scale
 38316 ;;		_printf
 38317 ;; This function uses a non-reentrant model
 38318 ;;
 38319                           
 38320                           	psect	text208
 38321  00A054                     __ptext208:
 38322                           	opt stack 0
 38323  00A054                     ___awdiv:
 38324                           	opt stack 21
 38325                           
 38326                           ; BSR set to: 0
 38327                           ;incstack = 0
 38328  00A054  0E00               	movlw	0
 38329  00A056  0100               	movlb	0	; () banked
 38330  00A058  6F6B               	movwf	___awdiv@sign& (0+255),b
 38331                           
 38332                           ; BSR set to: 0
 38333  00A05A  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 38334  00A05C  D006               	goto	l3728
 38335                           
 38336                           ; BSR set to: 0
 38337  00A05E  6D68               	negf	___awdiv@divisor& (0+255),b
 38338  00A060  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 38339  00A062  B0D8               	btfsc	status,0,c
 38340  00A064  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 38341                           
 38342                           ; BSR set to: 0
 38343  00A066  0E01               	movlw	1
 38344  00A068  6F6B               	movwf	___awdiv@sign& (0+255),b
 38345  00A06A                     l3728:
 38346                           
 38347                           ; BSR set to: 0
 38348                           
 38349                           ; BSR set to: 0
 38350  00A06A  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 38351  00A06C  D006               	goto	l3729
 38352                           
 38353                           ; BSR set to: 0
 38354  00A06E  6D66               	negf	___awdiv@dividend& (0+255),b
 38355  00A070  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 38356  00A072  B0D8               	btfsc	status,0,c
 38357  00A074  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 38358                           
 38359                           ; BSR set to: 0
 38360  00A076  0E01               	movlw	1
 38361  00A078  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 38362  00A07A                     l3729:
 38363                           
 38364                           ; BSR set to: 0
 38365                           
 38366                           ; BSR set to: 0
 38367  00A07A  0E00               	movlw	0
 38368  00A07C  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 38369  00A07E  0E00               	movlw	0
 38370  00A080  6F6C               	movwf	___awdiv@quotient& (0+255),b
 38371                           
 38372                           ; BSR set to: 0
 38373  00A082  5168               	movf	___awdiv@divisor& (0+255),w,b
 38374  00A084  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 38375  00A086  B4D8               	btfsc	status,2,c
 38376  00A088  D01C               	goto	l3736
 38377                           
 38378                           ; BSR set to: 0
 38379  00A08A  0E01               	movlw	1
 38380  00A08C  6F6A               	movwf	___awdiv@counter& (0+255),b
 38381  00A08E  D004               	goto	l3731
 38382  00A090                     
 38383                           ; BSR set to: 0
 38384                           
 38385                           ; BSR set to: 0
 38386  00A090  90D8               	bcf	status,0,c
 38387  00A092  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 38388  00A094  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 38389  00A096  2B6A               	incf	___awdiv@counter& (0+255),f,b
 38390  00A098                     l3731:
 38391                           
 38392                           ; BSR set to: 0
 38393                           
 38394                           ; BSR set to: 0
 38395  00A098  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 38396  00A09A  D7FA               	goto	l3732
 38397  00A09C                     u20180:
 38398                           
 38399                           ; BSR set to: 0
 38400                           
 38401                           ; BSR set to: 0
 38402                           
 38403                           ; BSR set to: 0
 38404  00A09C  90D8               	bcf	status,0,c
 38405  00A09E  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 38406  00A0A0  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 38407                           
 38408                           ; BSR set to: 0
 38409  00A0A2  5168               	movf	___awdiv@divisor& (0+255),w,b
 38410  00A0A4  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 38411  00A0A6  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 38412  00A0A8  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 38413  00A0AA  A0D8               	btfss	status,0,c
 38414  00A0AC  D005               	goto	l3735
 38415                           
 38416                           ; BSR set to: 0
 38417  00A0AE  5168               	movf	___awdiv@divisor& (0+255),w,b
 38418  00A0B0  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 38419  00A0B2  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 38420  00A0B4  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 38421                           
 38422                           ; BSR set to: 0
 38423  00A0B6  816C               	bsf	___awdiv@quotient& (0+255),0,b
 38424  00A0B8                     l3735:
 38425                           
 38426                           ; BSR set to: 0
 38427                           
 38428                           ; BSR set to: 0
 38429  00A0B8  90D8               	bcf	status,0,c
 38430  00A0BA  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 38431  00A0BC  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 38432                           
 38433                           ; BSR set to: 0
 38434  00A0BE  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 38435  00A0C0  D7ED               	goto	u20180
 38436  00A0C2                     l3736:
 38437                           
 38438                           ; BSR set to: 0
 38439                           
 38440                           ; BSR set to: 0
 38441                           
 38442                           ; BSR set to: 0
 38443  00A0C2  516B               	movf	___awdiv@sign& (0+255),w,b
 38444  00A0C4  B4D8               	btfsc	status,2,c
 38445  00A0C6  D004               	goto	l3737
 38446                           
 38447                           ; BSR set to: 0
 38448  00A0C8  6D6C               	negf	___awdiv@quotient& (0+255),b
 38449  00A0CA  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 38450  00A0CC  B0D8               	btfsc	status,0,c
 38451  00A0CE  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 38452  00A0D0                     l3737:
 38453                           
 38454                           ; BSR set to: 0
 38455                           
 38456                           ; BSR set to: 0
 38457  00A0D0  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 38458  00A0D4  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 38459  00A0D8  0012               	return	
 38460  00A0DA                     __end_of___awdiv:
 38461                           	opt stack 0
 38462                           tosu	equ	0xFFF
 38463                           tosh	equ	0xFFE
 38464                           tosl	equ	0xFFD
 38465                           pclath	equ	0xFFA
 38466                           tblptru	equ	0xFF8
 38467                           tblptrh	equ	0xFF7
 38468                           tblptrl	equ	0xFF6
 38469                           tablat	equ	0xFF5
 38470                           prodh	equ	0xFF4
 38471                           prodl	equ	0xFF3
 38472                           intcon	equ	0xFF2
 38473                           intcon2	equ	0xFF1
 38474                           intcon3	equ	0xFF0
 38475                           indf0	equ	0xFEF
 38476                           postinc0	equ	0xFEE
 38477                           fsr0h	equ	0xFEA
 38478                           fsr0l	equ	0xFE9
 38479                           wreg	equ	0xFE8
 38480                           postinc1	equ	0xFE6
 38481                           postdec1	equ	0xFE5
 38482                           plusw1	equ	0xFE3
 38483                           fsr1h	equ	0xFE2
 38484                           fsr1l	equ	0xFE1
 38485                           indf2	equ	0xFDF
 38486                           postinc2	equ	0xFDE
 38487                           postdec2	equ	0xFDD
 38488                           plusw2	equ	0xFDB
 38489                           fsr2h	equ	0xFDA
 38490                           fsr2l	equ	0xFD9
 38491                           status	equ	0xFD8
 38492                           
 38493 ;; *************** function _AssembleEncryptionBlock *****************
 38494 ;; Defined at:
 38495 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 38496 ;; Parameters:    Size  Location     Type
 38497 ;;  dir             1    wreg     unsigned char 
 38498 ;;  frameCounter    4   11[BANK0 ] unsigned long 
 38499 ;;  blockId         1   15[BANK0 ] unsigned char 
 38500 ;;  firstByte       1   16[BANK0 ] unsigned char 
 38501 ;;  multicastSta    1   17[BANK0 ] unsigned char 
 38502 ;; Auto vars:     Size  Location     Type
 38503 ;;  dir             1   18[BANK0 ] unsigned char 
 38504 ;;  bufferIndex     1   19[BANK0 ] unsigned char 
 38505 ;; Return value:  Size  Location     Type
 38506 ;;                  1    wreg      void 
 38507 ;; Registers used:
 38508 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38509 ;; Tracked objects:
 38510 ;;		On entry : 0/0
 38511 ;;		On exit  : 0/0
 38512 ;;		Unchanged: 0/0
 38513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38514 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38515 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38517 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38518 ;;Total ram usage:        9 bytes
 38519 ;; Hardware stack levels used:    1
 38520 ;; Hardware stack levels required when called:    8
 38521 ;; This function calls:
 38522 ;;		_memcpy
 38523 ;;		_memset
 38524 ;; This function is called by:
 38525 ;;		_LORAWAN_RxDone
 38526 ;;		_AssemblePacket
 38527 ;;		_EncryptFRMPayload
 38528 ;; This function uses a non-reentrant model
 38529 ;;
 38530                           
 38531                           	psect	text209
 38532  008BA2                     __ptext209:
 38533                           	opt stack 0
 38534  008BA2                     _AssembleEncryptionBlock:
 38535                           	opt stack 19
 38536                           
 38537                           ; BSR set to: 0
 38538                           ;incstack = 0
 38539                           ;AssembleEncryptionBlock@dir stored from wreg
 38540  008BA2  0100               	movlb	0	; () banked
 38541  008BA4  6F72               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 38542                           
 38543                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 38544  008BA6  0E00               	movlw	0
 38545  008BA8  0100               	movlb	0	; () banked
 38546  008BAA  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 38547                           
 38548                           ; BSR set to: 0
 38549                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 38550  008BAC  0EC8               	movlw	low _aesBuffer
 38551  008BAE  6F60               	movwf	memset@p1& (0+255),b
 38552  008BB0  0E03               	movlw	high _aesBuffer
 38553  008BB2  6F61               	movwf	(memset@p1+1)& (0+255),b
 38554  008BB4  0E00               	movlw	0
 38555  008BB6  6F63               	movwf	(memset@c+1)& (0+255),b
 38556  008BB8  0E00               	movlw	0
 38557  008BBA  6F62               	movwf	memset@c& (0+255),b
 38558  008BBC  0E00               	movlw	0
 38559  008BBE  6F65               	movwf	(memset@n+1)& (0+255),b
 38560  008BC0  0E10               	movlw	16
 38561  008BC2  6F64               	movwf	memset@n& (0+255),b
 38562  008BC4  EC23  F05D         	call	_memset	;wreg free
 38563                           
 38564                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 38565  008BC8  0100               	movlb	0	; () banked
 38566  008BCA  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38567  008BCC  0D01               	mullw	1
 38568  008BCE  0EC8               	movlw	low _aesBuffer
 38569  008BD0  24F3               	addwf	prodl,w,c
 38570  008BD2  6ED9               	movwf	fsr2l,c
 38571  008BD4  0E03               	movlw	high _aesBuffer
 38572  008BD6  20F4               	addwfc	prodh,w,c
 38573  008BD8  6EDA               	movwf	fsr2h,c
 38574  008BDA  C070  FFDF         	movff	AssembleEncryptionBlock@firstByte,indf2
 38575                           
 38576                           ; BSR set to: 0
 38577                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 38578  008BDE  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38579  008BE0  0F05               	addlw	5
 38580  008BE2  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 38581                           
 38582                           ; BSR set to: 0
 38583                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 38584  008BE4  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38585  008BE6  0D01               	mullw	1
 38586  008BE8  0EC8               	movlw	low _aesBuffer
 38587  008BEA  24F3               	addwf	prodl,w,c
 38588  008BEC  6ED9               	movwf	fsr2l,c
 38589  008BEE  0E03               	movlw	high _aesBuffer
 38590  008BF0  20F4               	addwfc	prodh,w,c
 38591  008BF2  6EDA               	movwf	fsr2h,c
 38592  008BF4  C072  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 38593                           
 38594                           ; BSR set to: 0
 38595  008BF8  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 38596                           
 38597                           ; BSR set to: 0
 38598                           ;lorawan.c: 2168: if (0 == multicastStatus)
 38599  008BFA  5171               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 38600  008BFC  A4D8               	btfss	status,2,c
 38601  008BFE  D013               	goto	l2468
 38602                           
 38603                           ; BSR set to: 0
 38604                           ;lorawan.c: 2169: {
 38605                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 38606  008C00  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38607  008C02  0D01               	mullw	1
 38608  008C04  0EC8               	movlw	low _aesBuffer
 38609  008C06  24F3               	addwf	prodl,w,c
 38610  008C08  6F60               	movwf	memcpy@d1& (0+255),b
 38611  008C0A  0E03               	movlw	high _aesBuffer
 38612  008C0C  20F4               	addwfc	prodh,w,c
 38613  008C0E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38614  008C10  0E22               	movlw	low (_loRa+30)
 38615  008C12  6F62               	movwf	memcpy@s1& (0+255),b
 38616  008C14  0E02               	movlw	high (_loRa+30)
 38617  008C16  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38618  008C18  0E00               	movlw	0
 38619  008C1A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38620  008C1C  0E04               	movlw	4
 38621  008C1E  6F64               	movwf	memcpy@n& (0+255),b
 38622  008C20  ECAB  F055         	call	_memcpy	;wreg free
 38623  008C24  D012               	goto	l18193
 38624  008C26                     l2468:
 38625                           
 38626                           ; BSR set to: 0
 38627                           ;lorawan.c: 2173: else
 38628                           ;lorawan.c: 2174: {
 38629                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 38630                           
 38631                           ; BSR set to: 0
 38632  008C26  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38633  008C28  0D01               	mullw	1
 38634  008C2A  0EC8               	movlw	low _aesBuffer
 38635  008C2C  24F3               	addwf	prodl,w,c
 38636  008C2E  6F60               	movwf	memcpy@d1& (0+255),b
 38637  008C30  0E03               	movlw	high _aesBuffer
 38638  008C32  20F4               	addwfc	prodh,w,c
 38639  008C34  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38640  008C36  0E66               	movlw	low (_loRa+98)
 38641  008C38  6F62               	movwf	memcpy@s1& (0+255),b
 38642  008C3A  0E02               	movlw	high (_loRa+98)
 38643  008C3C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38644  008C3E  0E00               	movlw	0
 38645  008C40  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38646  008C42  0E04               	movlw	4
 38647  008C44  6F64               	movwf	memcpy@n& (0+255),b
 38648  008C46  ECAB  F055         	call	_memcpy	;wreg free
 38649  008C4A                     l18193:
 38650                           
 38651                           ;lorawan.c: 2176: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.mcastDev
      +                          iceAddress);
 38652  008C4A  0100               	movlb	0	; () banked
 38653  008C4C  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38654  008C4E  0F04               	addlw	4
 38655  008C50  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 38656                           
 38657                           ; BSR set to: 0
 38658                           ;lorawan.c: 2177: }
 38659                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 38660                           
 38661                           ; BSR set to: 0
 38662  008C52  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38663  008C54  0D01               	mullw	1
 38664  008C56  0EC8               	movlw	low _aesBuffer
 38665  008C58  24F3               	addwf	prodl,w,c
 38666  008C5A  6F60               	movwf	memcpy@d1& (0+255),b
 38667  008C5C  0E03               	movlw	high _aesBuffer
 38668  008C5E  20F4               	addwfc	prodh,w,c
 38669  008C60  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38670  008C62  0E6B               	movlw	low AssembleEncryptionBlock@frameCounter
 38671  008C64  6F62               	movwf	memcpy@s1& (0+255),b
 38672  008C66  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 38673  008C68  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38674  008C6A  0E00               	movlw	0
 38675  008C6C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38676  008C6E  0E04               	movlw	4
 38677  008C70  6F64               	movwf	memcpy@n& (0+255),b
 38678  008C72  ECAB  F055         	call	_memcpy	;wreg free
 38679                           
 38680                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 38681  008C76  0100               	movlb	0	; () banked
 38682  008C78  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38683  008C7A  0F04               	addlw	4
 38684  008C7C  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 38685                           
 38686                           ; BSR set to: 0
 38687                           ;lorawan.c: 2182: bufferIndex ++;
 38688  008C7E  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 38689                           
 38690                           ; BSR set to: 0
 38691                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 38692  008C80  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38693  008C82  0D01               	mullw	1
 38694  008C84  0EC8               	movlw	low _aesBuffer
 38695  008C86  24F3               	addwf	prodl,w,c
 38696  008C88  6ED9               	movwf	fsr2l,c
 38697  008C8A  0E03               	movlw	high _aesBuffer
 38698  008C8C  20F4               	addwfc	prodh,w,c
 38699  008C8E  6EDA               	movwf	fsr2h,c
 38700  008C90  C06F  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 38701                           
 38702                           ; BSR set to: 0
 38703  008C94  0012               	return		;funcret
 38704  008C96                     __end_of_AssembleEncryptionBlock:
 38705                           	opt stack 0
 38706                           tosu	equ	0xFFF
 38707                           tosh	equ	0xFFE
 38708                           tosl	equ	0xFFD
 38709                           pclath	equ	0xFFA
 38710                           tblptru	equ	0xFF8
 38711                           tblptrh	equ	0xFF7
 38712                           tblptrl	equ	0xFF6
 38713                           tablat	equ	0xFF5
 38714                           prodh	equ	0xFF4
 38715                           prodl	equ	0xFF3
 38716                           intcon	equ	0xFF2
 38717                           intcon2	equ	0xFF1
 38718                           intcon3	equ	0xFF0
 38719                           indf0	equ	0xFEF
 38720                           postinc0	equ	0xFEE
 38721                           fsr0h	equ	0xFEA
 38722                           fsr0l	equ	0xFE9
 38723                           wreg	equ	0xFE8
 38724                           postinc1	equ	0xFE6
 38725                           postdec1	equ	0xFE5
 38726                           plusw1	equ	0xFE3
 38727                           fsr1h	equ	0xFE2
 38728                           fsr1l	equ	0xFE1
 38729                           indf2	equ	0xFDF
 38730                           postinc2	equ	0xFDE
 38731                           postdec2	equ	0xFDD
 38732                           plusw2	equ	0xFDB
 38733                           fsr2h	equ	0xFDA
 38734                           fsr2l	equ	0xFD9
 38735                           status	equ	0xFD8
 38736                           
 38737 ;; *************** function _CountfOptsLength *****************
 38738 ;; Defined at:
 38739 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 38740 ;; Parameters:    Size  Location     Type
 38741 ;;		None
 38742 ;; Auto vars:     Size  Location     Type
 38743 ;;  i               1    7[BANK0 ] unsigned char 
 38744 ;;  macCommandLe    1    6[BANK0 ] unsigned char 
 38745 ;; Return value:  Size  Location     Type
 38746 ;;                  1    wreg      unsigned char 
 38747 ;; Registers used:
 38748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 38749 ;; Tracked objects:
 38750 ;;		On entry : 0/0
 38751 ;;		On exit  : 0/0
 38752 ;;		Unchanged: 0/0
 38753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38755 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38756 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38757 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38758 ;;Total ram usage:        8 bytes
 38759 ;; Hardware stack levels used:    1
 38760 ;; Hardware stack levels required when called:    7
 38761 ;; This function calls:
 38762 ;;		Nothing
 38763 ;; This function is called by:
 38764 ;;		_LORAWAN_GetMaxPayloadSize
 38765 ;;		_AssemblePacket
 38766 ;; This function uses a non-reentrant model
 38767 ;;
 38768                           
 38769                           	psect	text210
 38770  00948E                     __ptext210:
 38771                           	opt stack 0
 38772  00948E                     _CountfOptsLength:
 38773                           	opt stack 21
 38774                           
 38775                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 38776                           
 38777                           ; BSR set to: 0
 38778                           ;incstack = 0
 38779  00948E  0E00               	movlw	0
 38780  009490  0100               	movlb	0	; () banked
 38781  009492  6F66               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 38782                           
 38783                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 38784  009494  0E00               	movlw	0
 38785  009496  6F67               	movwf	CountfOptsLength@i& (0+255),b
 38786  009498  D057               	goto	l2459
 38787  00949A                     
 38788                           ; BSR set to: 0
 38789                           ;lorawan.c: 2139: {
 38790                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 38791                           
 38792                           ; BSR set to: 0
 38793  00949A  5167               	movf	CountfOptsLength@i& (0+255),w,b
 38794  00949C  0D02               	mullw	2
 38795  00949E  0EAC               	movlw	low (_loRa+168)
 38796  0094A0  24F3               	addwf	prodl,w,c
 38797  0094A2  6ED9               	movwf	fsr2l,c
 38798  0094A4  0E02               	movlw	high (_loRa+168)
 38799  0094A6  20F4               	addwfc	prodh,w,c
 38800  0094A8  6EDA               	movwf	fsr2h,c
 38801  0094AA  28DE               	incf	postinc2,w,c
 38802  0094AC  B4D8               	btfsc	status,2,c
 38803  0094AE  D04B               	goto	l2463
 38804                           
 38805                           ; BSR set to: 0
 38806                           ;lorawan.c: 2141: {
 38807                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 38808  0094B0  0EFE               	movlw	254
 38809  0094B2  6F60               	movwf	??_CountfOptsLength& (0+255),b
 38810  0094B4  0EFF               	movlw	255
 38811  0094B6  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 38812  0094B8  5167               	movf	CountfOptsLength@i& (0+255),w,b
 38813  0094BA  0D02               	mullw	2
 38814  0094BC  0EAC               	movlw	low (_loRa+168)
 38815  0094BE  24F3               	addwf	prodl,w,c
 38816  0094C0  6ED9               	movwf	fsr2l,c
 38817  0094C2  0E02               	movlw	high (_loRa+168)
 38818  0094C4  20F4               	addwfc	prodh,w,c
 38819  0094C6  6EDA               	movwf	fsr2h,c
 38820  0094C8  50DF               	movf	indf2,w,c
 38821  0094CA  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 38822  0094CC  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 38823  0094CE  5160               	movf	??_CountfOptsLength& (0+255),w,b
 38824  0094D0  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 38825  0094D2  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 38826  0094D4  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 38827  0094D6  0EAF               	movlw	low _macEndDevCmdReplyLen
 38828  0094D8  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 38829  0094DA  6EF6               	movwf	tblptrl,c
 38830  0094DC  0EFE               	movlw	high _macEndDevCmdReplyLen
 38831  0094DE  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 38832  0094E0  6EF7               	movwf	tblptrh,c
 38833  0094E2                     	if	1	;There are 3 active tblptr bytes
 38834  0094E2  6AF8               	clrf	tblptru,c
 38835  0094E4  0E00               	movlw	low (__mediumconst shr (0+16))
 38836  0094E6  22F8               	addwfc	tblptru,f,c
 38837  0094E8                     	endif
 38838  0094E8  0008               	tblrd		*
 38839  0094EA  50F5               	movf	tablat,w,c
 38840  0094EC  C066  F064         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 38841  0094F0  6B65               	clrf	(??_CountfOptsLength+5)& (0+255),b
 38842  0094F2  2764               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 38843  0094F4  0E00               	movlw	0
 38844  0094F6  2365               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 38845  0094F8  BF65               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 38846  0094FA  D006               	goto	u21100
 38847  0094FC  5165               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 38848  0094FE  E12A               	bnz	l18769
 38849  009500  0E10               	movlw	16
 38850  009502  5D64               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 38851  009504  B0D8               	btfsc	status,0,c
 38852  009506  D026               	goto	u21110
 38853  009508                     u21100:
 38854                           
 38855                           ; BSR set to: 0
 38856                           ;lorawan.c: 2143: {
 38857                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 38858  009508  0EFE               	movlw	254
 38859  00950A  6F60               	movwf	??_CountfOptsLength& (0+255),b
 38860  00950C  0EFF               	movlw	255
 38861  00950E  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 38862  009510  5167               	movf	CountfOptsLength@i& (0+255),w,b
 38863  009512  0D02               	mullw	2
 38864  009514  0EAC               	movlw	low (_loRa+168)
 38865  009516  24F3               	addwf	prodl,w,c
 38866  009518  6ED9               	movwf	fsr2l,c
 38867  00951A  0E02               	movlw	high (_loRa+168)
 38868  00951C  20F4               	addwfc	prodh,w,c
 38869  00951E  6EDA               	movwf	fsr2h,c
 38870  009520  50DF               	movf	indf2,w,c
 38871  009522  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 38872  009524  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 38873  009526  5160               	movf	??_CountfOptsLength& (0+255),w,b
 38874  009528  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 38875  00952A  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 38876  00952C  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 38877  00952E  0EAF               	movlw	low _macEndDevCmdReplyLen
 38878  009530  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 38879  009532  6EF6               	movwf	tblptrl,c
 38880  009534  0EFE               	movlw	high _macEndDevCmdReplyLen
 38881  009536  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 38882  009538  6EF7               	movwf	tblptrh,c
 38883  00953A                     	if	1	;There are 3 active tblptr bytes
 38884  00953A  6AF8               	clrf	tblptru,c
 38885  00953C  0E00               	movlw	low (__mediumconst shr (0+16))
 38886  00953E  22F8               	addwfc	tblptru,f,c
 38887  009540                     	endif
 38888  009540  0008               	tblrd		*
 38889  009542  50F5               	movf	tablat,w,c
 38890  009544  2766               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 38891  009546                     l2463:
 38892                           
 38893                           ; BSR set to: 0
 38894                           
 38895                           ; BSR set to: 0
 38896                           
 38897                           ; BSR set to: 0
 38898  009546  2B67               	incf	CountfOptsLength@i& (0+255),f,b
 38899  009548                     l2459:
 38900                           
 38901                           ; BSR set to: 0
 38902                           
 38903                           ; BSR set to: 0
 38904  009548  0102               	movlb	2	; () banked
 38905  00954A  51AB               	movf	(_loRa+167)& (0+255),w,b
 38906  00954C  0100               	movlb	0	; () banked
 38907  00954E  5D67               	subwf	CountfOptsLength@i& (0+255),w,b
 38908  009550  A0D8               	btfss	status,0,c
 38909  009552  D7A3               	goto	l2460
 38910  009554                     u21110:
 38911  009554                     l18769:
 38912                           
 38913                           ; BSR set to: 0
 38914                           ;lorawan.c: 2149: }
 38915                           ;lorawan.c: 2150: }
 38916                           ;lorawan.c: 2151: }
 38917                           ;lorawan.c: 2153: return macCommandLength;
 38918  009554  5166               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 38919  009556  0012               	return	
 38920  009558                     __end_of_CountfOptsLength:
 38921                           	opt stack 0
 38922                           tosu	equ	0xFFF
 38923                           tosh	equ	0xFFE
 38924                           tosl	equ	0xFFD
 38925                           pclath	equ	0xFFA
 38926                           tblptru	equ	0xFF8
 38927                           tblptrh	equ	0xFF7
 38928                           tblptrl	equ	0xFF6
 38929                           tablat	equ	0xFF5
 38930                           prodh	equ	0xFF4
 38931                           prodl	equ	0xFF3
 38932                           intcon	equ	0xFF2
 38933                           intcon2	equ	0xFF1
 38934                           intcon3	equ	0xFF0
 38935                           indf0	equ	0xFEF
 38936                           postinc0	equ	0xFEE
 38937                           fsr0h	equ	0xFEA
 38938                           fsr0l	equ	0xFE9
 38939                           wreg	equ	0xFE8
 38940                           postinc1	equ	0xFE6
 38941                           postdec1	equ	0xFE5
 38942                           plusw1	equ	0xFE3
 38943                           fsr1h	equ	0xFE2
 38944                           fsr1l	equ	0xFE1
 38945                           indf2	equ	0xFDF
 38946                           postinc2	equ	0xFDE
 38947                           postdec2	equ	0xFDD
 38948                           plusw2	equ	0xFDB
 38949                           fsr2h	equ	0xFDA
 38950                           fsr2l	equ	0xFD9
 38951                           status	equ	0xFD8
 38952                           
 38953 ;; *************** function _ExtractMic *****************
 38954 ;; Defined at:
 38955 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 38956 ;; Parameters:    Size  Location     Type
 38957 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 38958 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 38959 ;;  bufferLength    1   13[BANK0 ] unsigned char 
 38960 ;; Auto vars:     Size  Location     Type
 38961 ;;  mic             4   19[BANK0 ] unsigned long 
 38962 ;; Return value:  Size  Location     Type
 38963 ;;                  4   11[BANK0 ] unsigned long 
 38964 ;; Registers used:
 38965 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38966 ;; Tracked objects:
 38967 ;;		On entry : 0/0
 38968 ;;		On exit  : 0/0
 38969 ;;		Unchanged: 0/0
 38970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38971 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38972 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38973 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38974 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38975 ;;Total ram usage:       12 bytes
 38976 ;; Hardware stack levels used:    1
 38977 ;; Hardware stack levels required when called:    8
 38978 ;; This function calls:
 38979 ;;		_memcpy
 38980 ;; This function is called by:
 38981 ;;		_LORAWAN_RxDone
 38982 ;; This function uses a non-reentrant model
 38983 ;;
 38984                           
 38985                           	psect	text211
 38986  00ADE0                     __ptext211:
 38987                           	opt stack 0
 38988  00ADE0                     _ExtractMic:
 38989                           	opt stack 18
 38990                           
 38991                           ;lorawan.c: 2189: uint32_t mic = 0;
 38992                           
 38993                           ; BSR set to: 0
 38994                           ;incstack = 0
 38995  00ADE0  0E00               	movlw	0
 38996  00ADE2  0100               	movlb	0	; () banked
 38997  00ADE4  6F73               	movwf	ExtractMic@mic& (0+255),b
 38998  00ADE6  0E00               	movlw	0
 38999  00ADE8  6F74               	movwf	(ExtractMic@mic+1)& (0+255),b
 39000  00ADEA  0E00               	movlw	0
 39001  00ADEC  6F75               	movwf	(ExtractMic@mic+2)& (0+255),b
 39002  00ADEE  0E00               	movlw	0
 39003  00ADF0  6F76               	movwf	(ExtractMic@mic+3)& (0+255),b
 39004                           
 39005                           ; BSR set to: 0
 39006                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 39007  00ADF2  0E73               	movlw	low ExtractMic@mic
 39008  00ADF4  6F60               	movwf	memcpy@d1& (0+255),b
 39009  00ADF6  0E00               	movlw	high ExtractMic@mic
 39010  00ADF8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 39011  00ADFA  0EFC               	movlw	252
 39012  00ADFC  6F6F               	movwf	??_ExtractMic& (0+255),b
 39013  00ADFE  0EFF               	movlw	255
 39014  00AE00  6F70               	movwf	(??_ExtractMic+1)& (0+255),b
 39015  00AE02  516D               	movf	ExtractMic@bufferLength& (0+255),w,b
 39016  00AE04  6F71               	movwf	(??_ExtractMic+2)& (0+255),b
 39017  00AE06  6B72               	clrf	(??_ExtractMic+3)& (0+255),b
 39018  00AE08  516F               	movf	??_ExtractMic& (0+255),w,b
 39019  00AE0A  2771               	addwf	(??_ExtractMic+2)& (0+255),f,b
 39020  00AE0C  5170               	movf	(??_ExtractMic+1)& (0+255),w,b
 39021  00AE0E  2372               	addwfc	(??_ExtractMic+3)& (0+255),f,b
 39022  00AE10  5171               	movf	(??_ExtractMic+2)& (0+255),w,b
 39023  00AE12  256B               	addwf	ExtractMic@buffer& (0+255),w,b
 39024  00AE14  6F62               	movwf	memcpy@s1& (0+255),b
 39025  00AE16  5172               	movf	(??_ExtractMic+3)& (0+255),w,b
 39026  00AE18  216C               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 39027  00AE1A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 39028  00AE1C  0E00               	movlw	0
 39029  00AE1E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 39030  00AE20  0E04               	movlw	4
 39031  00AE22  6F64               	movwf	memcpy@n& (0+255),b
 39032  00AE24  ECAB  F055         	call	_memcpy	;wreg free
 39033                           
 39034                           ;lorawan.c: 2191: return mic;
 39035  00AE28  C073  F06B         	movff	ExtractMic@mic,?_ExtractMic
 39036  00AE2C  C074  F06C         	movff	ExtractMic@mic+1,?_ExtractMic+1
 39037  00AE30  C075  F06D         	movff	ExtractMic@mic+2,?_ExtractMic+2
 39038  00AE34  C076  F06E         	movff	ExtractMic@mic+3,?_ExtractMic+3
 39039  00AE38  0012               	return	
 39040  00AE3A                     __end_of_ExtractMic:
 39041                           	opt stack 0
 39042                           tosu	equ	0xFFF
 39043                           tosh	equ	0xFFE
 39044                           tosl	equ	0xFFD
 39045                           pclath	equ	0xFFA
 39046                           tblptru	equ	0xFF8
 39047                           tblptrh	equ	0xFF7
 39048                           tblptrl	equ	0xFF6
 39049                           tablat	equ	0xFF5
 39050                           prodh	equ	0xFF4
 39051                           prodl	equ	0xFF3
 39052                           intcon	equ	0xFF2
 39053                           intcon2	equ	0xFF1
 39054                           intcon3	equ	0xFF0
 39055                           indf0	equ	0xFEF
 39056                           postinc0	equ	0xFEE
 39057                           fsr0h	equ	0xFEA
 39058                           fsr0l	equ	0xFE9
 39059                           wreg	equ	0xFE8
 39060                           postinc1	equ	0xFE6
 39061                           postdec1	equ	0xFE5
 39062                           plusw1	equ	0xFE3
 39063                           fsr1h	equ	0xFE2
 39064                           fsr1l	equ	0xFE1
 39065                           indf2	equ	0xFDF
 39066                           postinc2	equ	0xFDE
 39067                           postdec2	equ	0xFDD
 39068                           plusw2	equ	0xFDB
 39069                           fsr2h	equ	0xFDA
 39070                           fsr2l	equ	0xFD9
 39071                           status	equ	0xFD8
 39072                           
 39073 ;; *************** function _ComputeSessionKeys *****************
 39074 ;; Defined at:
 39075 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 39076 ;; Parameters:    Size  Location     Type
 39077 ;;  joinAcceptBu    2   49[BANK0 ] PTR struct .
 39078 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 39079 ;; Auto vars:     Size  Location     Type
 39080 ;;		None
 39081 ;; Return value:  Size  Location     Type
 39082 ;;                  1    wreg      void 
 39083 ;; Registers used:
 39084 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39085 ;; Tracked objects:
 39086 ;;		On entry : 0/0
 39087 ;;		On exit  : 0/0
 39088 ;;		Unchanged: 0/0
 39089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39094 ;;Total ram usage:        2 bytes
 39095 ;; Hardware stack levels used:    1
 39096 ;; Hardware stack levels required when called:   10
 39097 ;; This function calls:
 39098 ;;		_AESEncodeLoRa
 39099 ;;		_PrepareSessionKeys
 39100 ;; This function is called by:
 39101 ;;		_LORAWAN_RxDone
 39102 ;; This function uses a non-reentrant model
 39103 ;;
 39104                           
 39105                           	psect	text212
 39106  00A0DA                     __ptext212:
 39107                           	opt stack 0
 39108  00A0DA                     _ComputeSessionKeys:
 39109                           	opt stack 16
 39110                           
 39111                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 39112                           
 39113                           ;incstack = 0
 39114  00A0DA  0E36               	movlw	low (_loRa+50)
 39115  00A0DC  0100               	movlb	0	; () banked
 39116  00A0DE  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 39117  00A0E0  0E02               	movlw	high (_loRa+50)
 39118  00A0E2  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 39119  00A0E4  0E01               	movlw	1
 39120  00A0E6  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 39121  00A0E8  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 39122  00A0EA  0E00               	movlw	0
 39123  00A0EC  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 39124  00A0EE  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 39125  00A0F0  0E04               	movlw	4
 39126  00A0F2  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 39127  00A0F4  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 39128  00A0F6  0E00               	movlw	0
 39129  00A0F8  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 39130  00A0FA  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 39131  00A0FC  ECBA  F04B         	call	_PrepareSessionKeys	;wreg free
 39132                           
 39133                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 39134  00A100  0E02               	movlw	2
 39135  00A102  0102               	movlb	2	; () banked
 39136  00A104  6F36               	movwf	(_loRa+50)& (0+255),b
 39137                           
 39138                           ; BSR set to: 2
 39139                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 39140  00A106  0E36               	movlw	low (_loRa+50)
 39141  00A108  0100               	movlb	0	; () banked
 39142  00A10A  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 39143  00A10C  0E02               	movlw	high (_loRa+50)
 39144  00A10E  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 39145  00A110  0E46               	movlw	low (_loRa+66)
 39146  00A112  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 39147  00A114  0E02               	movlw	high (_loRa+66)
 39148  00A116  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 39149  00A118  EC15  F05C         	call	_AESEncodeLoRa	;wreg free
 39150                           
 39151                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 39152  00A11C  0E26               	movlw	low (_loRa+34)
 39153  00A11E  0100               	movlb	0	; () banked
 39154  00A120  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 39155  00A122  0E02               	movlw	high (_loRa+34)
 39156  00A124  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 39157  00A126  0E01               	movlw	1
 39158  00A128  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 39159  00A12A  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 39160  00A12C  0E00               	movlw	0
 39161  00A12E  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 39162  00A130  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 39163  00A132  0E04               	movlw	4
 39164  00A134  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 39165  00A136  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 39166  00A138  0E00               	movlw	0
 39167  00A13A  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 39168  00A13C  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 39169  00A13E  ECBA  F04B         	call	_PrepareSessionKeys	;wreg free
 39170                           
 39171                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 39172  00A142  0E01               	movlw	1
 39173  00A144  0102               	movlb	2	; () banked
 39174  00A146  6F26               	movwf	(_loRa+34)& (0+255),b
 39175                           
 39176                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 39177  00A148  0E26               	movlw	low (_loRa+34)
 39178  00A14A  0100               	movlb	0	; () banked
 39179  00A14C  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 39180  00A14E  0E02               	movlw	high (_loRa+34)
 39181  00A150  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 39182  00A152  0E46               	movlw	low (_loRa+66)
 39183  00A154  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 39184  00A156  0E02               	movlw	high (_loRa+66)
 39185  00A158  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 39186  00A15A  EC15  F05C         	call	_AESEncodeLoRa	;wreg free
 39187  00A15E  0012               	return		;funcret
 39188  00A160                     __end_of_ComputeSessionKeys:
 39189                           	opt stack 0
 39190                           tosu	equ	0xFFF
 39191                           tosh	equ	0xFFE
 39192                           tosl	equ	0xFFD
 39193                           pclath	equ	0xFFA
 39194                           tblptru	equ	0xFF8
 39195                           tblptrh	equ	0xFF7
 39196                           tblptrl	equ	0xFF6
 39197                           tablat	equ	0xFF5
 39198                           prodh	equ	0xFF4
 39199                           prodl	equ	0xFF3
 39200                           intcon	equ	0xFF2
 39201                           intcon2	equ	0xFF1
 39202                           intcon3	equ	0xFF0
 39203                           indf0	equ	0xFEF
 39204                           postinc0	equ	0xFEE
 39205                           fsr0h	equ	0xFEA
 39206                           fsr0l	equ	0xFE9
 39207                           wreg	equ	0xFE8
 39208                           postinc1	equ	0xFE6
 39209                           postdec1	equ	0xFE5
 39210                           plusw1	equ	0xFE3
 39211                           fsr1h	equ	0xFE2
 39212                           fsr1l	equ	0xFE1
 39213                           indf2	equ	0xFDF
 39214                           postinc2	equ	0xFDE
 39215                           postdec2	equ	0xFDD
 39216                           plusw2	equ	0xFDB
 39217                           fsr2h	equ	0xFDA
 39218                           fsr2l	equ	0xFD9
 39219                           status	equ	0xFD8
 39220                           
 39221 ;; *************** function _PrepareSessionKeys *****************
 39222 ;; Defined at:
 39223 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 39224 ;; Parameters:    Size  Location     Type
 39225 ;;  sessionKey      2   11[BANK0 ] PTR unsigned char 
 39226 ;;		 -> loRa.activationParameters(105), loRa(245), 
 39227 ;;  appNonce        2   13[BANK0 ] PTR unsigned char 
 39228 ;;		 -> sp__ADC_GetConversion(2), ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 39229 ;;  networkId       2   15[BANK0 ] PTR unsigned char 
 39230 ;;		 -> sp__ADC_GetConversion(2), ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 39231 ;; Auto vars:     Size  Location     Type
 39232 ;;  index           1   17[BANK0 ] unsigned char 
 39233 ;; Return value:  Size  Location     Type
 39234 ;;                  1    wreg      void 
 39235 ;; Registers used:
 39236 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39237 ;; Tracked objects:
 39238 ;;		On entry : 0/0
 39239 ;;		On exit  : 0/0
 39240 ;;		Unchanged: 0/0
 39241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39242 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39245 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39246 ;;Total ram usage:        7 bytes
 39247 ;; Hardware stack levels used:    1
 39248 ;; Hardware stack levels required when called:    8
 39249 ;; This function calls:
 39250 ;;		_memcpy
 39251 ;;		_memset
 39252 ;; This function is called by:
 39253 ;;		_ComputeSessionKeys
 39254 ;; This function uses a non-reentrant model
 39255 ;;
 39256                           
 39257                           	psect	text213
 39258  009774                     __ptext213:
 39259                           	opt stack 0
 39260  009774                     _PrepareSessionKeys:
 39261                           	opt stack 17
 39262                           
 39263                           ;lorawan.c: 2047: uint8_t index = 0;
 39264                           
 39265                           ;incstack = 0
 39266  009774  0E00               	movlw	0
 39267  009776  0100               	movlb	0	; () banked
 39268  009778  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 39269                           
 39270                           ; BSR set to: 0
 39271                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 39272  00977A  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39273  00977C  0D01               	mullw	1
 39274  00977E  50F3               	movf	prodl,w,c
 39275  009780  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 39276  009782  6F60               	movwf	memset@p1& (0+255),b
 39277  009784  50F4               	movf	prodh,w,c
 39278  009786  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 39279  009788  6F61               	movwf	(memset@p1+1)& (0+255),b
 39280  00978A  0E00               	movlw	0
 39281  00978C  6F63               	movwf	(memset@c+1)& (0+255),b
 39282  00978E  0E00               	movlw	0
 39283  009790  6F62               	movwf	memset@c& (0+255),b
 39284  009792  0E00               	movlw	0
 39285  009794  6F65               	movwf	(memset@n+1)& (0+255),b
 39286  009796  0E10               	movlw	16
 39287  009798  6F64               	movwf	memset@n& (0+255),b
 39288  00979A  EC23  F05D         	call	_memset	;wreg free
 39289                           
 39290                           ;lorawan.c: 2050: index ++;
 39291  00979E  0100               	movlb	0	; () banked
 39292  0097A0  2B71               	incf	PrepareSessionKeys@index& (0+255),f,b
 39293                           
 39294                           ; BSR set to: 0
 39295                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 39296  0097A2  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39297  0097A4  0D01               	mullw	1
 39298  0097A6  50F3               	movf	prodl,w,c
 39299  0097A8  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 39300  0097AA  6F60               	movwf	memcpy@d1& (0+255),b
 39301  0097AC  50F4               	movf	prodh,w,c
 39302  0097AE  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 39303  0097B0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 39304  0097B2  C06D  F062         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 39305  0097B6  C06E  F063         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 39306  0097BA  0E00               	movlw	0
 39307  0097BC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 39308  0097BE  0E03               	movlw	3
 39309  0097C0  6F64               	movwf	memcpy@n& (0+255),b
 39310  0097C2  ECAB  F055         	call	_memcpy	;wreg free
 39311                           
 39312                           ;lorawan.c: 2053: index = index + 3;
 39313  0097C6  0100               	movlb	0	; () banked
 39314  0097C8  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39315  0097CA  0F03               	addlw	3
 39316  0097CC  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 39317                           
 39318                           ; BSR set to: 0
 39319                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 39320  0097CE  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39321  0097D0  0D01               	mullw	1
 39322  0097D2  50F3               	movf	prodl,w,c
 39323  0097D4  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 39324  0097D6  6F60               	movwf	memcpy@d1& (0+255),b
 39325  0097D8  50F4               	movf	prodh,w,c
 39326  0097DA  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 39327  0097DC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 39328  0097DE  C06F  F062         	movff	PrepareSessionKeys@networkId,memcpy@s1
 39329  0097E2  C070  F063         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 39330  0097E6  0E00               	movlw	0
 39331  0097E8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 39332  0097EA  0E03               	movlw	3
 39333  0097EC  6F64               	movwf	memcpy@n& (0+255),b
 39334  0097EE  ECAB  F055         	call	_memcpy	;wreg free
 39335                           
 39336                           ;lorawan.c: 2056: index = index + 3;
 39337  0097F2  0100               	movlb	0	; () banked
 39338  0097F4  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39339  0097F6  0F03               	addlw	3
 39340  0097F8  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 39341                           
 39342                           ; BSR set to: 0
 39343                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 39344  0097FA  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39345  0097FC  0D01               	mullw	1
 39346  0097FE  50F3               	movf	prodl,w,c
 39347  009800  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 39348  009802  6F60               	movwf	memcpy@d1& (0+255),b
 39349  009804  50F4               	movf	prodh,w,c
 39350  009806  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 39351  009808  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 39352  00980A  0ED6               	movlw	low (_loRa+210)
 39353  00980C  6F62               	movwf	memcpy@s1& (0+255),b
 39354  00980E  0E02               	movlw	high (_loRa+210)
 39355  009810  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 39356  009812  0E00               	movlw	0
 39357  009814  6F65               	movwf	(memcpy@n+1)& (0+255),b
 39358  009816  0E02               	movlw	2
 39359  009818  6F64               	movwf	memcpy@n& (0+255),b
 39360  00981A  ECAB  F055         	call	_memcpy	;wreg free
 39361  00981E  0012               	return		;funcret
 39362  009820                     __end_of_PrepareSessionKeys:
 39363                           	opt stack 0
 39364                           tosu	equ	0xFFF
 39365                           tosh	equ	0xFFE
 39366                           tosl	equ	0xFFD
 39367                           pclath	equ	0xFFA
 39368                           tblptru	equ	0xFF8
 39369                           tblptrh	equ	0xFF7
 39370                           tblptrl	equ	0xFF6
 39371                           tablat	equ	0xFF5
 39372                           prodh	equ	0xFF4
 39373                           prodl	equ	0xFF3
 39374                           intcon	equ	0xFF2
 39375                           intcon2	equ	0xFF1
 39376                           intcon3	equ	0xFF0
 39377                           indf0	equ	0xFEF
 39378                           postinc0	equ	0xFEE
 39379                           fsr0h	equ	0xFEA
 39380                           fsr0l	equ	0xFE9
 39381                           wreg	equ	0xFE8
 39382                           postinc1	equ	0xFE6
 39383                           postdec1	equ	0xFE5
 39384                           plusw1	equ	0xFE3
 39385                           fsr1h	equ	0xFE2
 39386                           fsr1l	equ	0xFE1
 39387                           indf2	equ	0xFDF
 39388                           postinc2	equ	0xFDE
 39389                           postdec2	equ	0xFDD
 39390                           plusw2	equ	0xFDB
 39391                           fsr2h	equ	0xFDA
 39392                           fsr2l	equ	0xFD9
 39393                           status	equ	0xFD8
 39394                           
 39395 ;; *************** function _CheckMcastFlags *****************
 39396 ;; Defined at:
 39397 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 39398 ;; Parameters:    Size  Location     Type
 39399 ;;  hdr             2    0[BANK0 ] PTR struct .
 39400 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 39401 ;; Auto vars:     Size  Location     Type
 39402 ;;		None
 39403 ;; Return value:  Size  Location     Type
 39404 ;;                  1    wreg      unsigned char 
 39405 ;; Registers used:
 39406 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39407 ;; Tracked objects:
 39408 ;;		On entry : 0/0
 39409 ;;		On exit  : 0/0
 39410 ;;		Unchanged: 0/0
 39411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39412 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39415 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39416 ;;Total ram usage:        2 bytes
 39417 ;; Hardware stack levels used:    1
 39418 ;; Hardware stack levels required when called:    7
 39419 ;; This function calls:
 39420 ;;		Nothing
 39421 ;; This function is called by:
 39422 ;;		_LORAWAN_RxDone
 39423 ;; This function uses a non-reentrant model
 39424 ;;
 39425                           
 39426                           	psect	text214
 39427  00A1E4                     __ptext214:
 39428                           	opt stack 0
 39429  00A1E4                     _CheckMcastFlags:
 39430                           	opt stack 19
 39431                           
 39432                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 39433                           
 39434                           ;incstack = 0
 39435  00A1E4  0100               	movlb	0	; () banked
 39436  00A1E6  EE20 F005          	lfsr	2,5
 39437  00A1EA  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 39438  00A1EC  26D9               	addwf	fsr2l,f,c
 39439  00A1EE  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 39440  00A1F0  22DA               	addwfc	fsr2h,f,c
 39441  00A1F2  BADF               	btfsc	indf2,5,c
 39442  00A1F4  D012               	goto	u22400
 39443                           
 39444                           ; BSR set to: 0
 39445  00A1F6  EE20 F005          	lfsr	2,5
 39446  00A1FA  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 39447  00A1FC  26D9               	addwf	fsr2l,f,c
 39448  00A1FE  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 39449  00A200  22DA               	addwfc	fsr2h,f,c
 39450  00A202  BCDF               	btfsc	indf2,6,c
 39451  00A204  D00A               	goto	u22400
 39452                           
 39453                           ; BSR set to: 0
 39454  00A206  C060  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 39455  00A20A  C061  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 39456  00A20E  38DF               	swapf	223,w,c
 39457  00A210  32E8               	rrcf	wreg,f,c
 39458  00A212  0B07               	andlw	7
 39459  00A214  0A03               	xorlw	3
 39460  00A216  B4D8               	btfsc	status,2,c
 39461  00A218  D002               	goto	l2449
 39462  00A21A                     u22400:
 39463                           
 39464                           ; BSR set to: 0
 39465                           ;lorawan.c: 2110: {
 39466                           ;lorawan.c: 2111: return 0;
 39467                           
 39468                           ; BSR set to: 0
 39469  00A21A  0E00               	movlw	0
 39470                           
 39471                           ; BSR set to: 0
 39472  00A21C  0012               	return	
 39473  00A21E                     l2449:
 39474                           
 39475                           ; BSR set to: 0
 39476                           ;lorawan.c: 2112: }
 39477                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 39478                           
 39479                           ; BSR set to: 0
 39480  00A21E  EE20 F005          	lfsr	2,5
 39481  00A222  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 39482  00A224  26D9               	addwf	fsr2l,f,c
 39483  00A226  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 39484  00A228  22DA               	addwfc	fsr2h,f,c
 39485  00A22A  50DF               	movf	223,w,c
 39486  00A22C  0B0F               	andlw	15
 39487  00A22E  0900               	iorlw	0
 39488  00A230  B4D8               	btfsc	status,2,c
 39489  00A232  D002               	goto	l2453
 39490                           
 39491                           ; BSR set to: 0
 39492                           ;lorawan.c: 2115: {
 39493                           ;lorawan.c: 2116: return 0;
 39494  00A234  0E00               	movlw	0
 39495                           
 39496                           ; BSR set to: 0
 39497  00A236  0012               	return	
 39498  00A238                     l2453:
 39499                           
 39500                           ; BSR set to: 0
 39501                           ;lorawan.c: 2118: else
 39502                           ;lorawan.c: 2119: {
 39503                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 39504                           
 39505                           ; BSR set to: 0
 39506  00A238  EE20 F008          	lfsr	2,8
 39507  00A23C  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 39508  00A23E  26D9               	addwf	fsr2l,f,c
 39509  00A240  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 39510  00A242  22DA               	addwfc	fsr2h,f,c
 39511  00A244  50DF               	movf	indf2,w,c
 39512  00A246  A4D8               	btfss	status,2,c
 39513  00A248  D002               	goto	l2455
 39514                           
 39515                           ; BSR set to: 0
 39516                           ;lorawan.c: 2121: {
 39517                           ;lorawan.c: 2122: return 0;
 39518  00A24A  0E00               	movlw	0
 39519                           
 39520                           ; BSR set to: 0
 39521  00A24C  0012               	return	
 39522  00A24E                     l2455:
 39523                           
 39524                           ; BSR set to: 0
 39525                           ;lorawan.c: 2123: }
 39526                           ;lorawan.c: 2124: }
 39527                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 39528                           
 39529                           ; BSR set to: 0
 39530                           
 39531                           ; BSR set to: 0
 39532  00A24E  EE20 F005          	lfsr	2,5
 39533  00A252  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 39534  00A254  26D9               	addwf	fsr2l,f,c
 39535  00A256  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 39536  00A258  22DA               	addwfc	fsr2h,f,c
 39537  00A25A  A8DF               	btfss	indf2,4,c
 39538  00A25C  D002               	goto	l2456
 39539                           
 39540                           ; BSR set to: 0
 39541                           ;lorawan.c: 2127: {
 39542                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 39543  00A25E  0102               	movlb	2	; () banked
 39544  00A260  8704               	bsf	_loRa& (0+255),3,b
 39545  00A262                     l2456:
 39546                           
 39547                           ;lorawan.c: 2129: }
 39548                           ;lorawan.c: 2131: return 1;
 39549                           
 39550                           ; BSR set to: 2
 39551  00A262  0E01               	movlw	1
 39552  00A264  0012               	return	
 39553  00A266                     __end_of_CheckMcastFlags:
 39554                           	opt stack 0
 39555                           tosu	equ	0xFFF
 39556                           tosh	equ	0xFFE
 39557                           tosl	equ	0xFFD
 39558                           pclath	equ	0xFFA
 39559                           tblptru	equ	0xFF8
 39560                           tblptrh	equ	0xFF7
 39561                           tblptrl	equ	0xFF6
 39562                           tablat	equ	0xFF5
 39563                           prodh	equ	0xFF4
 39564                           prodl	equ	0xFF3
 39565                           intcon	equ	0xFF2
 39566                           intcon2	equ	0xFF1
 39567                           intcon3	equ	0xFF0
 39568                           indf0	equ	0xFEF
 39569                           postinc0	equ	0xFEE
 39570                           fsr0h	equ	0xFEA
 39571                           fsr0l	equ	0xFE9
 39572                           wreg	equ	0xFE8
 39573                           postinc1	equ	0xFE6
 39574                           postdec1	equ	0xFE5
 39575                           plusw1	equ	0xFE3
 39576                           fsr1h	equ	0xFE2
 39577                           fsr1l	equ	0xFE1
 39578                           indf2	equ	0xFDF
 39579                           postinc2	equ	0xFDE
 39580                           postdec2	equ	0xFDD
 39581                           plusw2	equ	0xFDB
 39582                           fsr2h	equ	0xFDA
 39583                           fsr2l	equ	0xFD9
 39584                           status	equ	0xFD8
 39585                           
 39586 ;; *************** function _CheckFlags *****************
 39587 ;; Defined at:
 39588 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 39589 ;; Parameters:    Size  Location     Type
 39590 ;;  hdr             2    0[BANK0 ] PTR struct .
 39591 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 39592 ;; Auto vars:     Size  Location     Type
 39593 ;;		None
 39594 ;; Return value:  Size  Location     Type
 39595 ;;                  1    wreg      void 
 39596 ;; Registers used:
 39597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39598 ;; Tracked objects:
 39599 ;;		On entry : 0/0
 39600 ;;		On exit  : 0/0
 39601 ;;		Unchanged: 0/0
 39602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39603 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39606 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39607 ;;Total ram usage:        2 bytes
 39608 ;; Hardware stack levels used:    1
 39609 ;; Hardware stack levels required when called:    7
 39610 ;; This function calls:
 39611 ;;		Nothing
 39612 ;; This function is called by:
 39613 ;;		_LORAWAN_RxDone
 39614 ;; This function uses a non-reentrant model
 39615 ;;
 39616                           
 39617                           	psect	text215
 39618  00AC72                     __ptext215:
 39619                           	opt stack 0
 39620  00AC72                     _CheckFlags:
 39621                           	opt stack 19
 39622                           
 39623                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 39624                           
 39625                           ;incstack = 0
 39626  00AC72  0100               	movlb	0	; () banked
 39627  00AC74  EE20 F005          	lfsr	2,5
 39628  00AC78  5160               	movf	CheckFlags@hdr& (0+255),w,b
 39629  00AC7A  26D9               	addwf	fsr2l,f,c
 39630  00AC7C  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 39631  00AC7E  22DA               	addwfc	fsr2h,f,c
 39632  00AC80  AEDF               	btfss	indf2,7,c
 39633  00AC82  D002               	goto	l2442
 39634                           
 39635                           ; BSR set to: 0
 39636                           ;lorawan.c: 2077: {
 39637                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 39638  00AC84  0102               	movlb	2	; () banked
 39639  00AC86  8D06               	bsf	(_loRa+2)& (0+255),6,b
 39640  00AC88                     l2442:
 39641                           
 39642                           ;lorawan.c: 2079: }
 39643                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 39644                           
 39645                           ; BSR set to: 2
 39646  00AC88  0100               	movlb	0	; () banked
 39647  00AC8A  EE20 F005          	lfsr	2,5
 39648  00AC8E  5160               	movf	CheckFlags@hdr& (0+255),w,b
 39649  00AC90  26D9               	addwf	fsr2l,f,c
 39650  00AC92  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 39651  00AC94  22DA               	addwfc	fsr2h,f,c
 39652  00AC96  A8DF               	btfss	indf2,4,c
 39653  00AC98  D002               	goto	l2443
 39654                           
 39655                           ; BSR set to: 0
 39656                           ;lorawan.c: 2082: {
 39657                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 39658  00AC9A  0102               	movlb	2	; () banked
 39659  00AC9C  8704               	bsf	_loRa& (0+255),3,b
 39660  00AC9E                     l2443:
 39661                           
 39662                           ;lorawan.c: 2084: }
 39663                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 39664                           
 39665                           ; BSR set to: 2
 39666  00AC9E  0100               	movlb	0	; () banked
 39667  00ACA0  EE20 F005          	lfsr	2,5
 39668  00ACA4  5160               	movf	CheckFlags@hdr& (0+255),w,b
 39669  00ACA6  26D9               	addwf	fsr2l,f,c
 39670  00ACA8  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 39671  00ACAA  22DA               	addwfc	fsr2h,f,c
 39672  00ACAC  ACDF               	btfss	indf2,6,c
 39673  00ACAE  D002               	goto	l2444
 39674                           
 39675                           ; BSR set to: 0
 39676                           ;lorawan.c: 2087: {
 39677                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 39678  00ACB0  0102               	movlb	2	; () banked
 39679  00ACB2  8904               	bsf	_loRa& (0+255),4,b
 39680  00ACB4                     l2444:
 39681                           
 39682                           ;lorawan.c: 2089: }
 39683                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 39684                           
 39685                           ; BSR set to: 2
 39686  00ACB4  C060  FFD9         	movff	CheckFlags@hdr,fsr2l
 39687  00ACB8  C061  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 39688  00ACBC  0100               	movlb	0	; () banked
 39689  00ACBE  38DF               	swapf	223,w,c
 39690  00ACC0  32E8               	rrcf	wreg,f,c
 39691  00ACC2  0B07               	andlw	7
 39692  00ACC4  0A05               	xorlw	5
 39693  00ACC6  A4D8               	btfss	status,2,c
 39694  00ACC8  0012               	return	
 39695                           
 39696                           ; BSR set to: 0
 39697                           ;lorawan.c: 2092: {
 39698                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 39699  00ACCA  0102               	movlb	2	; () banked
 39700  00ACCC  8304               	bsf	_loRa& (0+255),1,b
 39701  00ACCE  0012               	return	
 39702  00ACD0                     __end_of_CheckFlags:
 39703                           	opt stack 0
 39704                           tosu	equ	0xFFF
 39705                           tosh	equ	0xFFE
 39706                           tosl	equ	0xFFD
 39707                           pclath	equ	0xFFA
 39708                           tblptru	equ	0xFF8
 39709                           tblptrh	equ	0xFF7
 39710                           tblptrl	equ	0xFF6
 39711                           tablat	equ	0xFF5
 39712                           prodh	equ	0xFF4
 39713                           prodl	equ	0xFF3
 39714                           intcon	equ	0xFF2
 39715                           intcon2	equ	0xFF1
 39716                           intcon3	equ	0xFF0
 39717                           indf0	equ	0xFEF
 39718                           postinc0	equ	0xFEE
 39719                           fsr0h	equ	0xFEA
 39720                           fsr0l	equ	0xFE9
 39721                           wreg	equ	0xFE8
 39722                           postinc1	equ	0xFE6
 39723                           postdec1	equ	0xFE5
 39724                           plusw1	equ	0xFE3
 39725                           fsr1h	equ	0xFE2
 39726                           fsr1l	equ	0xFE1
 39727                           indf2	equ	0xFDF
 39728                           postinc2	equ	0xFDE
 39729                           postdec2	equ	0xFDD
 39730                           plusw2	equ	0xFDB
 39731                           fsr2h	equ	0xFDA
 39732                           fsr2l	equ	0xFD9
 39733                           status	equ	0xFD8
 39734                           
 39735 ;; *************** function _RADIO_FSKPacketSent *****************
 39736 ;; Defined at:
 39737 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 39738 ;; Parameters:    Size  Location     Type
 39739 ;;		None
 39740 ;; Auto vars:     Size  Location     Type
 39741 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
 39742 ;;  irqFlags        1  143[BANK0 ] unsigned char 
 39743 ;; Return value:  Size  Location     Type
 39744 ;;                  1    wreg      void 
 39745 ;; Registers used:
 39746 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39747 ;; Tracked objects:
 39748 ;;		On entry : 0/0
 39749 ;;		On exit  : 0/0
 39750 ;;		Unchanged: 0/0
 39751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39753 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39754 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39755 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39756 ;;Total ram usage:       13 bytes
 39757 ;; Hardware stack levels used:    1
 39758 ;; Hardware stack levels required when called:   15
 39759 ;; This function calls:
 39760 ;;		_LORAWAN_TxDone
 39761 ;;		_RADIO_RegisterRead
 39762 ;;		_RADIO_WriteMode
 39763 ;;		_SwTimerReadValue
 39764 ;;		_SwTimerStop
 39765 ;;		___lmul
 39766 ;; This function is called by:
 39767 ;;		_RADIO_DIO0
 39768 ;; This function uses a non-reentrant model
 39769 ;;
 39770                           
 39771                           	psect	text216
 39772  007EDA                     __ptext216:
 39773                           	opt stack 0
 39774  007EDA                     _RADIO_FSKPacketSent:
 39775                           	opt stack 13
 39776                           
 39777                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 39778                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 39779                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 39780                           
 39781                           ;incstack = 0
 39782  007EDA  0E3F               	movlw	63
 39783  007EDC  EC96  F05E         	call	_RADIO_RegisterRead
 39784  007EE0  0100               	movlb	0	; () banked
 39785  007EE2  6FEF               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 39786                           
 39787                           ; BSR set to: 0
 39788                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 39789  007EE4  A7EF               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 39790  007EE6  0012               	return	
 39791                           
 39792                           ; BSR set to: 0
 39793                           ;radio_driver_SX1276.c: 1100: {
 39794                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 39795  007EE8  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 39796  007EEC  0E00               	movlw	0
 39797  007EEE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 39798  007EF0  0E00               	movlw	0
 39799  007EF2  ECDE  F043         	call	_RADIO_WriteMode
 39800                           
 39801                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 39802  007EF6  0101               	movlb	1	; () banked
 39803  007EF8  9158               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 39804                           
 39805                           ; BSR set to: 1
 39806                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 39807  007EFA  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 39808  007EFC  ECAA  F05E         	call	_SwTimerStop
 39809                           
 39810                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 39811  007F00  0101               	movlb	1	; () banked
 39812  007F02  B958               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 39813  007F04  0012               	return	
 39814                           
 39815                           ; BSR set to: 1
 39816                           ;radio_driver_SX1276.c: 1107: {
 39817                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 39818  007F06  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 39819  007F08  EC7D  F05B         	call	_SwTimerReadValue
 39820  007F0C  0100               	movlb	0	; () banked
 39821  007F0E  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 39822  007F10  E108               	bnz	u24110
 39823  007F12  0E1F               	movlw	31
 39824  007F14  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
 39825  007F16  0EAC               	movlw	172
 39826  007F18  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 39827  007F1A  0EDF               	movlw	223
 39828  007F1C  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 39829  007F1E  A0D8               	btfss	status,0,c
 39830  007F20  D021               	goto	l909
 39831  007F22                     u24110:
 39832                           
 39833                           ; BSR set to: 0
 39834  007F22  0101               	movlb	1	; () banked
 39835  007F24  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 39836  007F26  EC7D  F05B         	call	_SwTimerReadValue
 39837  007F2A  0E0D               	movlw	13
 39838  007F2C  D006               	goto	u24120
 39839  007F2E                     u24125:
 39840  007F2E  0100               	movlb	0	; () banked
 39841  007F30  90D8               	bcf	status,0,c
 39842  007F32  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 39843  007F34  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 39844  007F36  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 39845  007F38  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
 39846  007F3A                     u24120:
 39847  007F3A  2EE8               	decfsz	wreg,f,c
 39848  007F3C  D7F8               	goto	u24125
 39849  007F3E  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 39850  007F42  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 39851  007F46  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 39852  007F4A  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 39853  007F4E  0E7D               	movlw	125
 39854  007F50  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 39855  007F52  0E00               	movlw	0
 39856  007F54  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 39857  007F56  0E00               	movlw	0
 39858  007F58  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 39859  007F5A  0E00               	movlw	0
 39860  007F5C  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 39861  007F5E  EC1D  F057         	call	___lmul	;wreg free
 39862  007F62  D021               	goto	L17
 39863  007F64                     l909:
 39864  007F64  0101               	movlb	1	; () banked
 39865  007F66  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 39866  007F68  EC7D  F05B         	call	_SwTimerReadValue
 39867  007F6C  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 39868  007F70  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 39869  007F74  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 39870  007F78  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 39871  007F7C  0E7D               	movlw	125
 39872  007F7E  0100               	movlb	0	; () banked
 39873  007F80  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 39874  007F82  0E00               	movlw	0
 39875  007F84  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 39876  007F86  0E00               	movlw	0
 39877  007F88  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 39878  007F8A  0E00               	movlw	0
 39879  007F8C  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 39880  007F8E  EC1D  F057         	call	___lmul	;wreg free
 39881  007F92  0E0D               	movlw	13
 39882  007F94  D006               	goto	u24130
 39883  007F96                     u24135:
 39884  007F96  0100               	movlb	0	; () banked
 39885  007F98  90D8               	bcf	status,0,c
 39886  007F9A  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 39887  007F9C  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 39888  007F9E  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 39889  007FA0  339A               	rrcf	?___lmul& (0+255),f,b
 39890  007FA2                     u24130:
 39891  007FA2  2EE8               	decfsz	wreg,f,c
 39892  007FA4  D7F8               	goto	u24135
 39893  007FA6                     L17:
 39894  007FA6  C09A  F0EB         	movff	?___lmul,_RADIO_FSKPacketSent$1193
 39895  007FAA  C09B  F0EC         	movff	?___lmul+1,_RADIO_FSKPacketSent$1193+1
 39896  007FAE  C09C  F0ED         	movff	?___lmul+2,_RADIO_FSKPacketSent$1193+2
 39897  007FB2  C09D  F0EE         	movff	?___lmul+3,_RADIO_FSKPacketSent$1193+3
 39898                           
 39899                           ; BSR set to: 0
 39900  007FB6  C0EB  F0E3         	movff	_RADIO_FSKPacketSent$1193,??_RADIO_FSKPacketSent
 39901  007FBA  C0EC  F0E4         	movff	_RADIO_FSKPacketSent$1193+1,??_RADIO_FSKPacketSent+1
 39902  007FBE  C0ED  F0E5         	movff	_RADIO_FSKPacketSent$1193+2,??_RADIO_FSKPacketSent+2
 39903  007FC2  C0EE  F0E6         	movff	_RADIO_FSKPacketSent$1193+3,??_RADIO_FSKPacketSent+3
 39904  007FC6  0100               	movlb	0	; () banked
 39905  007FC8  1FE3               	comf	??_RADIO_FSKPacketSent& (0+255),f,b
 39906  007FCA  1FE4               	comf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 39907  007FCC  1FE5               	comf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 39908  007FCE  1FE6               	comf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 39909  007FD0  2BE3               	incf	??_RADIO_FSKPacketSent& (0+255),f,b
 39910  007FD2  0E00               	movlw	0
 39911  007FD4  23E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 39912  007FD6  23E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 39913  007FD8  23E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 39914  007FDA  0E20               	movlw	32
 39915  007FDC  25E3               	addwf	??_RADIO_FSKPacketSent& (0+255),w,b
 39916  007FDE  6FE7               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 39917  007FE0  0E4E               	movlw	78
 39918  007FE2  21E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),w,b
 39919  007FE4  6FE8               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 39920  007FE6  0E00               	movlw	0
 39921  007FE8  21E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),w,b
 39922  007FEA  6FE9               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 39923  007FEC  0E00               	movlw	0
 39924  007FEE  21E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),w,b
 39925  007FF0  6FEA               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 39926                           
 39927                           ; BSR set to: 0
 39928                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 39929  007FF2  0101               	movlb	1	; () banked
 39930  007FF4  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 39931  007FF6  ECAA  F05E         	call	_SwTimerStop
 39932                           
 39933                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 39934  007FFA  C0E7  F0BB         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 39935  007FFE  C0E8  F0BC         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 39936  008002  EC5B  F00B         	call	_LORAWAN_TxDone	;wreg free
 39937  008006  0012               	return	
 39938  008008                     __end_of_RADIO_FSKPacketSent:
 39939                           	opt stack 0
 39940                           tosu	equ	0xFFF
 39941                           tosh	equ	0xFFE
 39942                           tosl	equ	0xFFD
 39943                           pclath	equ	0xFFA
 39944                           tblptru	equ	0xFF8
 39945                           tblptrh	equ	0xFF7
 39946                           tblptrl	equ	0xFF6
 39947                           tablat	equ	0xFF5
 39948                           prodh	equ	0xFF4
 39949                           prodl	equ	0xFF3
 39950                           intcon	equ	0xFF2
 39951                           intcon2	equ	0xFF1
 39952                           intcon3	equ	0xFF0
 39953                           indf0	equ	0xFEF
 39954                           postinc0	equ	0xFEE
 39955                           fsr0h	equ	0xFEA
 39956                           fsr0l	equ	0xFE9
 39957                           wreg	equ	0xFE8
 39958                           postinc1	equ	0xFE6
 39959                           postdec1	equ	0xFE5
 39960                           plusw1	equ	0xFE3
 39961                           fsr1h	equ	0xFE2
 39962                           fsr1l	equ	0xFE1
 39963                           indf2	equ	0xFDF
 39964                           postinc2	equ	0xFDE
 39965                           postdec2	equ	0xFDD
 39966                           plusw2	equ	0xFDB
 39967                           fsr2h	equ	0xFDA
 39968                           fsr2l	equ	0xFD9
 39969                           status	equ	0xFD8
 39970                           
 39971 ;; *************** function _LORAWAN_TxDone *****************
 39972 ;; Defined at:
 39973 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39974 ;; Parameters:    Size  Location     Type
 39975 ;;  timeOnAir       2   91[BANK0 ] unsigned int 
 39976 ;; Auto vars:     Size  Location     Type
 39977 ;;  minim           4  126[BANK0 ] unsigned long 
 39978 ;;  ticks           4  122[BANK0 ] unsigned long 
 39979 ;;  delta           4  114[BANK0 ] unsigned long 
 39980 ;;  i               1  130[BANK0 ] unsigned char 
 39981 ;;  found           1  113[BANK0 ] unsigned char 
 39982 ;; Return value:  Size  Location     Type
 39983 ;;                  1    wreg      void 
 39984 ;; Registers used:
 39985 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39986 ;; Tracked objects:
 39987 ;;		On entry : 0/0
 39988 ;;		On exit  : 0/0
 39989 ;;		Unchanged: 0/0
 39990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39991 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39992 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39993 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39994 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39995 ;;Total ram usage:       40 bytes
 39996 ;; Hardware stack levels used:    1
 39997 ;; Hardware stack levels required when called:   14
 39998 ;; This function calls:
 39999 ;;		_LORAWAN_EnterContinuousReceive
 40000 ;;		_RADIO_GetStatus
 40001 ;;		_RxData
 40002 ;;		_SwTimerIsRunning
 40003 ;;		_SwTimerReadValue
 40004 ;;		_SwTimerSetTimeout
 40005 ;;		_SwTimerStart
 40006 ;;		_SwTimerStop
 40007 ;;		___lldiv
 40008 ;;		___lmul
 40009 ;; This function is called by:
 40010 ;;		_RADIO_TxDone
 40011 ;;		_RADIO_FSKPacketSent
 40012 ;;		_RADIO_WatchdogTimeout
 40013 ;; This function uses a non-reentrant model
 40014 ;;
 40015                           
 40016                           	psect	text217
 40017  0016B6                     __ptext217:
 40018                           	opt stack 0
 40019  0016B6                     _LORAWAN_TxDone:
 40020                           	opt stack 13
 40021                           
 40022                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 40023                           
 40024                           ;incstack = 0
 40025  0016B6  0102               	movlb	2	; () banked
 40026  0016B8  B107               	btfsc	(_loRa+3)& (0+255),0,b
 40027  0016BA  D3A2               	goto	l1357
 40028                           
 40029                           ; BSR set to: 2
 40030                           ;lorawan_eu.c: 368: {
 40031                           ;lorawan_eu.c: 369: bool found = 0;
 40032  0016BC  0E00               	movlw	0
 40033  0016BE  0100               	movlb	0	; () banked
 40034  0016C0  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 40035                           
 40036                           ;lorawan_eu.c: 370: uint8_t i;
 40037                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 40038  0016C2  0E00               	movlw	0
 40039  0016C4  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 40040  0016C6  0E00               	movlw	0
 40041  0016C8  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 40042  0016CA  0E00               	movlw	0
 40043  0016CC  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 40044  0016CE  0E00               	movlw	0
 40045  0016D0  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 40046                           
 40047                           ; BSR set to: 0
 40048  0016D2  69DE               	setf	LORAWAN_TxDone@minim& (0+255),b
 40049  0016D4  69DF               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 40050  0016D6  69E0               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 40051  0016D8  69E1               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 40052                           
 40053                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 40054  0016DA  0E00               	movlw	0
 40055  0016DC  0102               	movlb	2	; () banked
 40056  0016DE  6FF5               	movwf	(_loRa+241)& (0+255),b
 40057                           
 40058                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 40059  0016E0  5106               	movf	(_loRa+2)& (0+255),w,b
 40060  0016E2  0BF0               	andlw	-16
 40061  0016E4  0902               	iorlw	2
 40062  0016E6  6F06               	movwf	(_loRa+2)& (0+255),b
 40063                           
 40064                           ; BSR set to: 2
 40065                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 40066  0016E8  C2DE  F0E2         	movff	_loRa+218,LORAWAN_TxDone@i
 40067                           
 40068                           ; BSR set to: 2
 40069                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 40070  0016EC  A504               	btfss	_loRa& (0+255),2,b
 40071  0016EE  D0BA               	goto	l1358
 40072                           
 40073                           ; BSR set to: 2
 40074                           ;lorawan_eu.c: 382: {
 40075                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 40076  0016F0  511B               	movf	(_loRa+23)& (0+255),w,b
 40077  0016F2  0D01               	mullw	1
 40078  0016F4  0E97               	movlw	low _rxWindowOffset
 40079  0016F6  24F3               	addwf	prodl,w,c
 40080  0016F8  6EF6               	movwf	tblptrl,c
 40081  0016FA  0EFE               	movlw	high _rxWindowOffset
 40082  0016FC  20F4               	addwfc	prodh,w,c
 40083  0016FE  6EF7               	movwf	tblptrh,c
 40084  001700                     	if	1	;There are 3 active tblptr bytes
 40085  001700  6AF8               	clrf	tblptru,c
 40086  001702  0E00               	movlw	low (__mediumconst shr (0+16))
 40087  001704  22F8               	addwfc	tblptru,f,c
 40088  001706                     	endif
 40089  001706  0008               	tblrd		*
 40090  001708  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 40091  00170C  519C               	movf	(_loRa+152)& (0+255),w,b
 40092  00170E  0100               	movlb	0	; () banked
 40093  001710  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 40094  001712  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 40095  001714  0E00               	movlw	0
 40096  001716  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 40097  001718  0EFF               	movlw	255
 40098  00171A  0102               	movlb	2	; () banked
 40099  00171C  219D               	addwfc	(_loRa+153)& (0+255),w,b
 40100  00171E  0100               	movlb	0	; () banked
 40101  001720  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 40102  001722  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 40103  001724  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 40104  001726  0E0C               	movlw	12
 40105  001728                     u23615:
 40106  001728  90D8               	bcf	status,0,c
 40107  00172A  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40108  00172C  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40109  00172E  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40110  001730  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40111  001732  2EE8               	decfsz	wreg,f,c
 40112  001734  D7F9               	goto	u23615
 40113  001736  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 40114  00173A  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 40115  00173E  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 40116  001742  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 40117  001746  0E7D               	movlw	125
 40118  001748  6F64               	movwf	___lldiv@divisor& (0+255),b
 40119  00174A  0E00               	movlw	0
 40120  00174C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40121  00174E  0E00               	movlw	0
 40122  001750  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40123  001752  0E00               	movlw	0
 40124  001754  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40125  001756  ECB0  F050         	call	___lldiv	;wreg free
 40126  00175A  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 40127  00175E  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 40128  001762  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 40129  001766  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 40130  00176A  0102               	movlb	2	; () banked
 40131  00176C  51E6               	movf	(_loRa+226)& (0+255),w,b
 40132  00176E  ECD7  F05A         	call	_SwTimerSetTimeout
 40133                           
 40134                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 40135  001772  0102               	movlb	2	; () banked
 40136  001774  5120               	movf	(_loRa+28)& (0+255),w,b
 40137  001776  0D01               	mullw	1
 40138  001778  0E97               	movlw	low _rxWindowOffset
 40139  00177A  24F3               	addwf	prodl,w,c
 40140  00177C  6EF6               	movwf	tblptrl,c
 40141  00177E  0EFE               	movlw	high _rxWindowOffset
 40142  001780  20F4               	addwfc	prodh,w,c
 40143  001782  6EF7               	movwf	tblptrh,c
 40144  001784                     	if	1	;There are 3 active tblptr bytes
 40145  001784  6AF8               	clrf	tblptru,c
 40146  001786  0E00               	movlw	low (__mediumconst shr (0+16))
 40147  001788  22F8               	addwfc	tblptru,f,c
 40148  00178A                     	endif
 40149  00178A  0008               	tblrd		*
 40150  00178C  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 40151  001790  519E               	movf	(_loRa+154)& (0+255),w,b
 40152  001792  0100               	movlb	0	; () banked
 40153  001794  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 40154  001796  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 40155  001798  0E00               	movlw	0
 40156  00179A  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 40157  00179C  0EFF               	movlw	255
 40158  00179E  0102               	movlb	2	; () banked
 40159  0017A0  219F               	addwfc	(_loRa+155)& (0+255),w,b
 40160  0017A2  0100               	movlb	0	; () banked
 40161  0017A4  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 40162  0017A6  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 40163  0017A8  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 40164  0017AA  0E0C               	movlw	12
 40165  0017AC                     u23625:
 40166  0017AC  90D8               	bcf	status,0,c
 40167  0017AE  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40168  0017B0  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40169  0017B2  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40170  0017B4  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40171  0017B6  2EE8               	decfsz	wreg,f,c
 40172  0017B8  D7F9               	goto	u23625
 40173  0017BA  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 40174  0017BE  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 40175  0017C2  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 40176  0017C6  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 40177  0017CA  0E7D               	movlw	125
 40178  0017CC  6F64               	movwf	___lldiv@divisor& (0+255),b
 40179  0017CE  0E00               	movlw	0
 40180  0017D0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40181  0017D2  0E00               	movlw	0
 40182  0017D4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40183  0017D6  0E00               	movlw	0
 40184  0017D8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40185  0017DA  ECB0  F050         	call	___lldiv	;wreg free
 40186  0017DE  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 40187  0017E2  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 40188  0017E6  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 40189  0017EA  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 40190  0017EE  0102               	movlb	2	; () banked
 40191  0017F0  51E7               	movf	(_loRa+227)& (0+255),w,b
 40192  0017F2  ECD7  F05A         	call	_SwTimerSetTimeout
 40193                           
 40194                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 40195  0017F6  0102               	movlb	2	; () banked
 40196  0017F8  51E6               	movf	(_loRa+226)& (0+255),w,b
 40197  0017FA  EC5C  F04D         	call	_SwTimerStart
 40198                           
 40199                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 40200  0017FE  0102               	movlb	2	; () banked
 40201  001800  51E7               	movf	(_loRa+227)& (0+255),w,b
 40202  001802  EC5C  F04D         	call	_SwTimerStart
 40203                           
 40204                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 40205  001806  C2DF  F09A         	movff	_loRa+219,___lmul@multiplier
 40206  00180A  C2E0  F09B         	movff	_loRa+220,___lmul@multiplier+1
 40207  00180E  0100               	movlb	0	; () banked
 40208  001810  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 40209  001812  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 40210  001814  0ED6               	movlw	214
 40211  001816  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 40212  001818  0E0B               	movlw	11
 40213  00181A  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 40214  00181C  0E00               	movlw	0
 40215  00181E  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 40216  001820  0E00               	movlw	0
 40217  001822  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 40218  001824  EC1D  F057         	call	___lmul	;wreg free
 40219  001828  0EFF               	movlw	255
 40220  00182A  0100               	movlb	0	; () banked
 40221  00182C  259A               	addwf	?___lmul& (0+255),w,b
 40222  00182E  6FD6               	movwf	_LORAWAN_TxDone$7046& (0+255),b
 40223  001830  0EFF               	movlw	255
 40224  001832  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 40225  001834  6FD7               	movwf	(_LORAWAN_TxDone$7046+1)& (0+255),b
 40226  001836  0EFF               	movlw	255
 40227  001838  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 40228  00183A  6FD8               	movwf	(_LORAWAN_TxDone$7046+2)& (0+255),b
 40229  00183C  0EFF               	movlw	255
 40230  00183E  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 40231  001840  6FD9               	movwf	(_LORAWAN_TxDone$7046+3)& (0+255),b
 40232                           
 40233                           ; BSR set to: 0
 40234                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 40235  001842  C0D6  F09A         	movff	_LORAWAN_TxDone$7046,___lmul@multiplier
 40236  001846  C0D7  F09B         	movff	_LORAWAN_TxDone$7046+1,___lmul@multiplier+1
 40237  00184A  C0D8  F09C         	movff	_LORAWAN_TxDone$7046+2,___lmul@multiplier+2
 40238  00184E  C0D9  F09D         	movff	_LORAWAN_TxDone$7046+3,___lmul@multiplier+3
 40239  001852  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 40240  001856  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 40241  00185A  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 40242  00185C  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 40243  00185E  EC1D  F057         	call	___lmul	;wreg free
 40244  001862  D0D7               	goto	L18
 40245  001864                     l1358:
 40246                           
 40247                           ;lorawan_eu.c: 390: else
 40248                           ;lorawan_eu.c: 391: {
 40249                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 40250                           
 40251                           ; BSR set to: 0
 40252  001864  0102               	movlb	2	; () banked
 40253  001866  511B               	movf	(_loRa+23)& (0+255),w,b
 40254  001868  0D01               	mullw	1
 40255  00186A  0E97               	movlw	low _rxWindowOffset
 40256  00186C  24F3               	addwf	prodl,w,c
 40257  00186E  6EF6               	movwf	tblptrl,c
 40258  001870  0EFE               	movlw	high _rxWindowOffset
 40259  001872  20F4               	addwfc	prodh,w,c
 40260  001874  6EF7               	movwf	tblptrh,c
 40261  001876                     	if	1	;There are 3 active tblptr bytes
 40262  001876  6AF8               	clrf	tblptru,c
 40263  001878  0E00               	movlw	low (__mediumconst shr (0+16))
 40264  00187A  22F8               	addwfc	tblptru,f,c
 40265  00187C                     	endif
 40266  00187C  0008               	tblrd		*
 40267  00187E  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 40268  001882  5198               	movf	(_loRa+148)& (0+255),w,b
 40269  001884  0100               	movlb	0	; () banked
 40270  001886  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 40271  001888  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 40272  00188A  0E00               	movlw	0
 40273  00188C  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 40274  00188E  0EFF               	movlw	255
 40275  001890  0102               	movlb	2	; () banked
 40276  001892  2199               	addwfc	(_loRa+149)& (0+255),w,b
 40277  001894  0100               	movlb	0	; () banked
 40278  001896  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 40279  001898  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 40280  00189A  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 40281  00189C  0E0C               	movlw	12
 40282  00189E                     u23635:
 40283  00189E  90D8               	bcf	status,0,c
 40284  0018A0  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40285  0018A2  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40286  0018A4  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40287  0018A6  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40288  0018A8  2EE8               	decfsz	wreg,f,c
 40289  0018AA  D7F9               	goto	u23635
 40290  0018AC  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 40291  0018B0  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 40292  0018B4  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 40293  0018B8  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 40294  0018BC  0E7D               	movlw	125
 40295  0018BE  6F64               	movwf	___lldiv@divisor& (0+255),b
 40296  0018C0  0E00               	movlw	0
 40297  0018C2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40298  0018C4  0E00               	movlw	0
 40299  0018C6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40300  0018C8  0E00               	movlw	0
 40301  0018CA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40302  0018CC  ECB0  F050         	call	___lldiv	;wreg free
 40303  0018D0  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 40304  0018D4  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 40305  0018D8  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 40306  0018DC  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 40307  0018E0  0102               	movlb	2	; () banked
 40308  0018E2  51E8               	movf	(_loRa+228)& (0+255),w,b
 40309  0018E4  ECD7  F05A         	call	_SwTimerSetTimeout
 40310                           
 40311                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 40312  0018E8  0102               	movlb	2	; () banked
 40313  0018EA  5120               	movf	(_loRa+28)& (0+255),w,b
 40314  0018EC  0D01               	mullw	1
 40315  0018EE  0E97               	movlw	low _rxWindowOffset
 40316  0018F0  24F3               	addwf	prodl,w,c
 40317  0018F2  6EF6               	movwf	tblptrl,c
 40318  0018F4  0EFE               	movlw	high _rxWindowOffset
 40319  0018F6  20F4               	addwfc	prodh,w,c
 40320  0018F8  6EF7               	movwf	tblptrh,c
 40321  0018FA                     	if	1	;There are 3 active tblptr bytes
 40322  0018FA  6AF8               	clrf	tblptru,c
 40323  0018FC  0E00               	movlw	low (__mediumconst shr (0+16))
 40324  0018FE  22F8               	addwfc	tblptru,f,c
 40325  001900                     	endif
 40326  001900  0008               	tblrd		*
 40327  001902  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 40328  001906  519A               	movf	(_loRa+150)& (0+255),w,b
 40329  001908  0100               	movlb	0	; () banked
 40330  00190A  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 40331  00190C  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 40332  00190E  0E00               	movlw	0
 40333  001910  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 40334  001912  0EFF               	movlw	255
 40335  001914  0102               	movlb	2	; () banked
 40336  001916  219B               	addwfc	(_loRa+151)& (0+255),w,b
 40337  001918  0100               	movlb	0	; () banked
 40338  00191A  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 40339  00191C  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 40340  00191E  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 40341  001920  0E0C               	movlw	12
 40342  001922                     u23645:
 40343  001922  90D8               	bcf	status,0,c
 40344  001924  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40345  001926  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40346  001928  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40347  00192A  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40348  00192C  2EE8               	decfsz	wreg,f,c
 40349  00192E  D7F9               	goto	u23645
 40350  001930  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 40351  001934  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 40352  001938  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 40353  00193C  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 40354  001940  0E7D               	movlw	125
 40355  001942  6F64               	movwf	___lldiv@divisor& (0+255),b
 40356  001944  0E00               	movlw	0
 40357  001946  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40358  001948  0E00               	movlw	0
 40359  00194A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40360  00194C  0E00               	movlw	0
 40361  00194E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40362  001950  ECB0  F050         	call	___lldiv	;wreg free
 40363  001954  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 40364  001958  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 40365  00195C  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 40366  001960  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 40367  001964  0102               	movlb	2	; () banked
 40368  001966  51E9               	movf	(_loRa+229)& (0+255),w,b
 40369  001968  ECD7  F05A         	call	_SwTimerSetTimeout
 40370                           
 40371                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 40372  00196C  0102               	movlb	2	; () banked
 40373  00196E  51E8               	movf	(_loRa+228)& (0+255),w,b
 40374  001970  EC5C  F04D         	call	_SwTimerStart
 40375                           
 40376                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 40377  001974  0102               	movlb	2	; () banked
 40378  001976  5116               	movf	(_loRa+18)& (0+255),w,b
 40379  001978  A4D8               	btfss	status,2,c
 40380  00197A  D003               	goto	l1360
 40381                           
 40382                           ; BSR set to: 2
 40383                           ;lorawan_eu.c: 396: {
 40384                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 40385  00197C  51E9               	movf	(_loRa+229)& (0+255),w,b
 40386  00197E  EC5C  F04D         	call	_SwTimerStart
 40387  001982                     l1360:
 40388                           
 40389                           ;lorawan_eu.c: 398: }
 40390                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 40391  001982  0100               	movlb	0	; () banked
 40392  001984  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40393  001986  0D0E               	mullw	14
 40394  001988  0E06               	movlw	6
 40395  00198A  26F3               	addwf	prodl,f,c
 40396  00198C  0E00               	movlw	0
 40397  00198E  22F4               	addwfc	prodh,f,c
 40398  001990  0E00               	movlw	low _Channels
 40399  001992  24F3               	addwf	prodl,w,c
 40400  001994  6ED9               	movwf	fsr2l,c
 40401  001996  0E04               	movlw	high _Channels
 40402  001998  20F4               	addwfc	prodh,w,c
 40403  00199A  6EDA               	movwf	fsr2h,c
 40404  00199C  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 40405  0019A0  CFDD F0BE          	movff	postdec2,??_LORAWAN_TxDone+1
 40406  0019A4  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 40407  0019A6  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 40408  0019A8  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 40409  0019AA  6FC0               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 40410  0019AC  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 40411  0019AE  6BC2               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 40412  0019B0  0E01               	movlw	1
 40413  0019B2  25BF               	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 40414  0019B4  6F9A               	movwf	___lmul@multiplier& (0+255),b
 40415  0019B6  0E00               	movlw	0
 40416  0019B8  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 40417  0019BA  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 40418  0019BC  0E00               	movlw	0
 40419  0019BE  21C1               	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 40420  0019C0  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 40421  0019C2  0E00               	movlw	0
 40422  0019C4  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 40423  0019C6  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 40424  0019C8  C2DF  F09E         	movff	_loRa+219,___lmul@multiplicand
 40425  0019CC  C2E0  F09F         	movff	_loRa+220,___lmul@multiplicand+1
 40426  0019D0  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 40427  0019D2  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 40428  0019D4  EC1D  F057         	call	___lmul	;wreg free
 40429  0019D8  0EFF               	movlw	255
 40430  0019DA  0100               	movlb	0	; () banked
 40431  0019DC  259A               	addwf	?___lmul& (0+255),w,b
 40432  0019DE  6FD6               	movwf	_LORAWAN_TxDone$7046& (0+255),b
 40433  0019E0  0EFF               	movlw	255
 40434  0019E2  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 40435  0019E4  6FD7               	movwf	(_LORAWAN_TxDone$7046+1)& (0+255),b
 40436  0019E6  0EFF               	movlw	255
 40437  0019E8  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 40438  0019EA  6FD8               	movwf	(_LORAWAN_TxDone$7046+2)& (0+255),b
 40439  0019EC  0EFF               	movlw	255
 40440  0019EE  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 40441  0019F0  6FD9               	movwf	(_LORAWAN_TxDone$7046+3)& (0+255),b
 40442                           
 40443                           ;lorawan_eu.c: 398: }
 40444                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 40445  0019F2  C0D6  F09A         	movff	_LORAWAN_TxDone$7046,___lmul@multiplier
 40446  0019F6  C0D7  F09B         	movff	_LORAWAN_TxDone$7046+1,___lmul@multiplier+1
 40447  0019FA  C0D8  F09C         	movff	_LORAWAN_TxDone$7046+2,___lmul@multiplier+2
 40448  0019FE  C0D9  F09D         	movff	_LORAWAN_TxDone$7046+3,___lmul@multiplier+3
 40449  001A02  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 40450  001A06  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 40451  001A0A  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 40452  001A0C  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 40453  001A0E  EC1D  F057         	call	___lmul	;wreg free
 40454  001A12                     L18:
 40455  001A12  0100               	movlb	0	; () banked
 40456  001A14  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40457  001A16  0D0E               	mullw	14
 40458  001A18  0E08               	movlw	8
 40459  001A1A  26F3               	addwf	prodl,f,c
 40460  001A1C  0E00               	movlw	0
 40461  001A1E  22F4               	addwfc	prodh,f,c
 40462  001A20  0E00               	movlw	low _Channels
 40463  001A22  24F3               	addwf	prodl,w,c
 40464  001A24  6ED9               	movwf	fsr2l,c
 40465  001A26  0E04               	movlw	high _Channels
 40466  001A28  20F4               	addwfc	prodh,w,c
 40467  001A2A  6EDA               	movwf	fsr2h,c
 40468  001A2C  C09A  FFDE         	movff	?___lmul,postinc2
 40469  001A30  C09B  FFDE         	movff	?___lmul+1,postinc2
 40470  001A34  C09C  FFDE         	movff	?___lmul+2,postinc2
 40471  001A38  C09D  FFDE         	movff	?___lmul+3,postinc2
 40472                           
 40473                           ; BSR set to: 0
 40474                           ;lorawan_eu.c: 401: }
 40475                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 40476  001A3C  0102               	movlb	2	; () banked
 40477  001A3E  51ED               	movf	(_loRa+233)& (0+255),w,b
 40478  001A40  EC1C  F05E         	call	_SwTimerIsRunning
 40479  001A44  0900               	iorlw	0
 40480  001A46  B4D8               	btfsc	status,2,c
 40481  001A48  D08A               	goto	l1361
 40482                           
 40483                           ;lorawan_eu.c: 404: {
 40484                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 40485  001A4A  0102               	movlb	2	; () banked
 40486  001A4C  51ED               	movf	(_loRa+233)& (0+255),w,b
 40487  001A4E  ECAA  F05E         	call	_SwTimerStop
 40488                           
 40489                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 40490  001A52  0102               	movlb	2	; () banked
 40491  001A54  51ED               	movf	(_loRa+233)& (0+255),w,b
 40492  001A56  EC7D  F05B         	call	_SwTimerReadValue
 40493  001A5A  C091  F0DA         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 40494  001A5E  C092  F0DB         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 40495  001A62  C093  F0DC         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 40496  001A66  C094  F0DD         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 40497                           
 40498                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 40499  001A6A  0100               	movlb	0	; () banked
 40500  001A6C  51DD               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 40501  001A6E  E108               	bnz	u23670
 40502  001A70  0E1F               	movlw	31
 40503  001A72  5DDA               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 40504  001A74  0EAC               	movlw	172
 40505  001A76  59DB               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 40506  001A78  0EDF               	movlw	223
 40507  001A7A  59DC               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 40508  001A7C  A0D8               	btfss	status,0,c
 40509  001A7E  D024               	goto	l1363
 40510  001A80                     u23670:
 40511                           
 40512                           ; BSR set to: 0
 40513  001A80  C0DA  F0BD         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 40514  001A84  C0DB  F0BE         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 40515  001A88  C0DC  F0BF         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 40516  001A8C  C0DD  F0C0         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 40517  001A90  0E0D               	movlw	13
 40518  001A92  D005               	goto	u23680
 40519  001A94                     u23685:
 40520  001A94  90D8               	bcf	status,0,c
 40521  001A96  33C0               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40522  001A98  33BF               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40523  001A9A  33BE               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40524  001A9C  33BD               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 40525  001A9E                     u23680:
 40526  001A9E  2EE8               	decfsz	wreg,f,c
 40527  001AA0  D7F9               	goto	u23685
 40528  001AA2  C0BD  F09A         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 40529  001AA6  C0BE  F09B         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 40530  001AAA  C0BF  F09C         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 40531  001AAE  C0C0  F09D         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 40532  001AB2  0E7D               	movlw	125
 40533  001AB4  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 40534  001AB6  0E00               	movlw	0
 40535  001AB8  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 40536  001ABA  0E00               	movlw	0
 40537  001ABC  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 40538  001ABE  0E00               	movlw	0
 40539  001AC0  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 40540  001AC2  EC1D  F057         	call	___lmul	;wreg free
 40541  001AC6  D01D               	goto	L19
 40542  001AC8                     l1363:
 40543  001AC8  C0DA  F09A         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 40544  001ACC  C0DB  F09B         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 40545  001AD0  C0DC  F09C         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 40546  001AD4  C0DD  F09D         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 40547  001AD8  0E7D               	movlw	125
 40548  001ADA  0100               	movlb	0	; () banked
 40549  001ADC  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 40550  001ADE  0E00               	movlw	0
 40551  001AE0  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 40552  001AE2  0E00               	movlw	0
 40553  001AE4  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 40554  001AE6  0E00               	movlw	0
 40555  001AE8  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 40556  001AEA  EC1D  F057         	call	___lmul	;wreg free
 40557  001AEE  0E0D               	movlw	13
 40558  001AF0  D006               	goto	u23690
 40559  001AF2                     u23695:
 40560  001AF2  0100               	movlb	0	; () banked
 40561  001AF4  90D8               	bcf	status,0,c
 40562  001AF6  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 40563  001AF8  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 40564  001AFA  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 40565  001AFC  339A               	rrcf	?___lmul& (0+255),f,b
 40566  001AFE                     u23690:
 40567  001AFE  2EE8               	decfsz	wreg,f,c
 40568  001B00  D7F8               	goto	u23695
 40569  001B02                     L19:
 40570  001B02  C09A  F0C9         	movff	?___lmul,_LORAWAN_TxDone$2066
 40571  001B06  C09B  F0CA         	movff	?___lmul+1,_LORAWAN_TxDone$2066+1
 40572  001B0A  C09C  F0CB         	movff	?___lmul+2,_LORAWAN_TxDone$2066+2
 40573  001B0E  C09D  F0CC         	movff	?___lmul+3,_LORAWAN_TxDone$2066+3
 40574                           
 40575                           ; BSR set to: 0
 40576  001B12  C0C9  F0BD         	movff	_LORAWAN_TxDone$2066,??_LORAWAN_TxDone
 40577  001B16  C0CA  F0BE         	movff	_LORAWAN_TxDone$2066+1,??_LORAWAN_TxDone+1
 40578  001B1A  C0CB  F0BF         	movff	_LORAWAN_TxDone$2066+2,??_LORAWAN_TxDone+2
 40579  001B1E  C0CC  F0C0         	movff	_LORAWAN_TxDone$2066+3,??_LORAWAN_TxDone+3
 40580  001B22  0100               	movlb	0	; () banked
 40581  001B24  1FBD               	comf	??_LORAWAN_TxDone& (0+255),f,b
 40582  001B26  1FBE               	comf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40583  001B28  1FBF               	comf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40584  001B2A  1FC0               	comf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40585  001B2C  2BBD               	incf	??_LORAWAN_TxDone& (0+255),f,b
 40586  001B2E  0E00               	movlw	0
 40587  001B30  23BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40588  001B32  23BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40589  001B34  23C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40590  001B36  0102               	movlb	2	; () banked
 40591  001B38  51CC               	movf	(_loRa+200)& (0+255),w,b
 40592  001B3A  0100               	movlb	0	; () banked
 40593  001B3C  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 40594  001B3E  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 40595  001B40  0102               	movlb	2	; () banked
 40596  001B42  51CD               	movf	(_loRa+201)& (0+255),w,b
 40597  001B44  0100               	movlb	0	; () banked
 40598  001B46  21BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),w,b
 40599  001B48  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 40600  001B4A  0102               	movlb	2	; () banked
 40601  001B4C  51CE               	movf	(_loRa+202)& (0+255),w,b
 40602  001B4E  0100               	movlb	0	; () banked
 40603  001B50  21BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),w,b
 40604  001B52  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 40605  001B54  0102               	movlb	2	; () banked
 40606  001B56  51CF               	movf	(_loRa+203)& (0+255),w,b
 40607  001B58  0100               	movlb	0	; () banked
 40608  001B5A  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 40609  001B5C  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 40610  001B5E                     l1361:
 40611                           
 40612                           ;lorawan_eu.c: 409: }
 40613                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 40614                           
 40615                           ; BSR set to: 0
 40616  001B5E  0E00               	movlw	0
 40617  001B60  0100               	movlb	0	; () banked
 40618  001B62  6FE2               	movwf	LORAWAN_TxDone@i& (0+255),b
 40619  001B64                     l20329:
 40620                           
 40621                           ; BSR set to: 0
 40622  001B64  0E0F               	movlw	15
 40623  001B66  65E2               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 40624  001B68  D001               	goto	l1366
 40625  001B6A  D0D4               	goto	u23770
 40626  001B6C                     l1366:
 40627                           
 40628                           ; BSR set to: 0
 40629                           ;lorawan_eu.c: 412: {
 40630                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 40631                           
 40632                           ; BSR set to: 0
 40633  001B6C  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40634  001B6E  0D0E               	mullw	14
 40635  001B70  0E04               	movlw	4
 40636  001B72  26F3               	addwf	prodl,f,c
 40637  001B74  0E00               	movlw	0
 40638  001B76  22F4               	addwfc	prodh,f,c
 40639  001B78  0E00               	movlw	low _Channels
 40640  001B7A  24F3               	addwf	prodl,w,c
 40641  001B7C  6ED9               	movwf	fsr2l,c
 40642  001B7E  0E04               	movlw	high _Channels
 40643  001B80  20F4               	addwfc	prodh,w,c
 40644  001B82  6EDA               	movwf	fsr2h,c
 40645  001B84  04DE               	decf	postinc2,w,c
 40646  001B86  A4D8               	btfss	status,2,c
 40647  001B88  D0C3               	goto	l1372
 40648                           
 40649                           ; BSR set to: 0
 40650  001B8A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40651  001B8C  0D0E               	mullw	14
 40652  001B8E  0E08               	movlw	8
 40653  001B90  26F3               	addwf	prodl,f,c
 40654  001B92  0E00               	movlw	0
 40655  001B94  22F4               	addwfc	prodh,f,c
 40656  001B96  0E00               	movlw	low _Channels
 40657  001B98  24F3               	addwf	prodl,w,c
 40658  001B9A  6ED9               	movwf	fsr2l,c
 40659  001B9C  0E04               	movlw	high _Channels
 40660  001B9E  20F4               	addwfc	prodh,w,c
 40661  001BA0  6EDA               	movwf	fsr2h,c
 40662  001BA2  50DE               	movf	postinc2,w,c
 40663  001BA4  10DE               	iorwf	postinc2,w,c
 40664  001BA6  10DE               	iorwf	postinc2,w,c
 40665  001BA8  10DE               	iorwf	postinc2,w,c
 40666  001BAA  B4D8               	btfsc	status,2,c
 40667  001BAC  D0B1               	goto	l1372
 40668                           
 40669                           ; BSR set to: 0
 40670                           ;lorawan_eu.c: 414: {
 40671                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 40672  001BAE  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40673  001BB0  0102               	movlb	2	; () banked
 40674  001BB2  19DE               	xorwf	(_loRa+218)& (0+255),w,b
 40675  001BB4  B4D8               	btfsc	status,2,c
 40676  001BB6  D06D               	goto	l1371
 40677                           
 40678                           ; BSR set to: 2
 40679                           ;lorawan_eu.c: 416: {
 40680                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 40681  001BB8  0100               	movlb	0	; () banked
 40682  001BBA  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40683  001BBC  0D0E               	mullw	14
 40684  001BBE  0E08               	movlw	8
 40685  001BC0  26F3               	addwf	prodl,f,c
 40686  001BC2  0E00               	movlw	0
 40687  001BC4  22F4               	addwfc	prodh,f,c
 40688  001BC6  0E00               	movlw	low _Channels
 40689  001BC8  24F3               	addwf	prodl,w,c
 40690  001BCA  6ED9               	movwf	fsr2l,c
 40691  001BCC  0E04               	movlw	high _Channels
 40692  001BCE  20F4               	addwfc	prodh,w,c
 40693  001BD0  6EDA               	movwf	fsr2h,c
 40694  001BD2  50DE               	movf	postinc2,w,c
 40695  001BD4  5DD2               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 40696  001BD6  50DE               	movf	postinc2,w,c
 40697  001BD8  59D3               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 40698  001BDA  50DE               	movf	postinc2,w,c
 40699  001BDC  59D4               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 40700  001BDE  50DE               	movf	postinc2,w,c
 40701  001BE0  59D5               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 40702  001BE2  B0D8               	btfsc	status,0,c
 40703  001BE4  D046               	goto	l1370
 40704                           
 40705                           ; BSR set to: 0
 40706                           ;lorawan_eu.c: 418: {
 40707                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 40708  001BE6  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40709  001BE8  0D0E               	mullw	14
 40710  001BEA  0E08               	movlw	8
 40711  001BEC  26F3               	addwf	prodl,f,c
 40712  001BEE  0E00               	movlw	0
 40713  001BF0  22F4               	addwfc	prodh,f,c
 40714  001BF2  0E00               	movlw	low _Channels
 40715  001BF4  24F3               	addwf	prodl,w,c
 40716  001BF6  6ED9               	movwf	fsr2l,c
 40717  001BF8  0E04               	movlw	high _Channels
 40718  001BFA  20F4               	addwfc	prodh,w,c
 40719  001BFC  6EDA               	movwf	fsr2h,c
 40720  001BFE  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 40721  001C02  CFDE F0BE          	movff	postinc2,??_LORAWAN_TxDone+1
 40722  001C06  CFDE F0BF          	movff	postinc2,??_LORAWAN_TxDone+2
 40723  001C0A  CFDE F0C0          	movff	postinc2,??_LORAWAN_TxDone+3
 40724  001C0E  C0D2  F0C1         	movff	LORAWAN_TxDone@delta,??_LORAWAN_TxDone+4
 40725  001C12  C0D3  F0C2         	movff	LORAWAN_TxDone@delta+1,??_LORAWAN_TxDone+5
 40726  001C16  C0D4  F0C3         	movff	LORAWAN_TxDone@delta+2,??_LORAWAN_TxDone+6
 40727  001C1A  C0D5  F0C4         	movff	LORAWAN_TxDone@delta+3,??_LORAWAN_TxDone+7
 40728  001C1E  1FC1               	comf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40729  001C20  1FC2               	comf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 40730  001C22  1FC3               	comf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 40731  001C24  1FC4               	comf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 40732  001C26  2BC1               	incf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40733  001C28  0E00               	movlw	0
 40734  001C2A  23C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),f,b
 40735  001C2C  23C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 40736  001C2E  23C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 40737  001C30  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 40738  001C32  25C1               	addwf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 40739  001C34  6FC5               	movwf	(??_LORAWAN_TxDone+8)& (0+255),b
 40740  001C36  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 40741  001C38  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 40742  001C3A  6FC6               	movwf	(??_LORAWAN_TxDone+9)& (0+255),b
 40743  001C3C  51BF               	movf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 40744  001C3E  21C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),w,b
 40745  001C40  6FC7               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 40746  001C42  51C0               	movf	(??_LORAWAN_TxDone+3)& (0+255),w,b
 40747  001C44  21C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 40748  001C46  6FC8               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 40749  001C48  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40750  001C4A  0D0E               	mullw	14
 40751  001C4C  0E08               	movlw	8
 40752  001C4E  26F3               	addwf	prodl,f,c
 40753  001C50  0E00               	movlw	0
 40754  001C52  22F4               	addwfc	prodh,f,c
 40755  001C54  0E00               	movlw	low _Channels
 40756  001C56  24F3               	addwf	prodl,w,c
 40757  001C58  6ED9               	movwf	fsr2l,c
 40758  001C5A  0E04               	movlw	high _Channels
 40759  001C5C  20F4               	addwfc	prodh,w,c
 40760  001C5E  6EDA               	movwf	fsr2h,c
 40761  001C60  C0C5  FFDE         	movff	??_LORAWAN_TxDone+8,postinc2
 40762  001C64  C0C6  FFDE         	movff	??_LORAWAN_TxDone+9,postinc2
 40763  001C68  C0C7  FFDE         	movff	??_LORAWAN_TxDone+10,postinc2
 40764  001C6C  C0C8  FFDE         	movff	??_LORAWAN_TxDone+11,postinc2
 40765                           
 40766                           ;lorawan_eu.c: 420: }
 40767  001C70  D010               	goto	l1371
 40768  001C72                     l1370:
 40769                           
 40770                           ; BSR set to: 0
 40771                           ;lorawan_eu.c: 421: else
 40772                           ;lorawan_eu.c: 422: {
 40773                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 40774                           
 40775                           ; BSR set to: 0
 40776  001C72  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40777  001C74  0D0E               	mullw	14
 40778  001C76  0E08               	movlw	8
 40779  001C78  26F3               	addwf	prodl,f,c
 40780  001C7A  0E00               	movlw	0
 40781  001C7C  22F4               	addwfc	prodh,f,c
 40782  001C7E  0E00               	movlw	low _Channels
 40783  001C80  24F3               	addwf	prodl,w,c
 40784  001C82  6ED9               	movwf	fsr2l,c
 40785  001C84  0E04               	movlw	high _Channels
 40786  001C86  20F4               	addwfc	prodh,w,c
 40787  001C88  6EDA               	movwf	fsr2h,c
 40788  001C8A  6ADE               	clrf	postinc2,c
 40789  001C8C  6ADE               	clrf	postinc2,c
 40790  001C8E  6ADE               	clrf	postinc2,c
 40791  001C90  6ADD               	clrf	postdec2,c
 40792  001C92                     l1371:
 40793                           
 40794                           ;lorawan_eu.c: 424: }
 40795                           ;lorawan_eu.c: 425: }
 40796                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 40797                           
 40798                           ; BSR set to: 0
 40799  001C92  0100               	movlb	0	; () banked
 40800  001C94  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40801  001C96  0D0E               	mullw	14
 40802  001C98  0E08               	movlw	8
 40803  001C9A  26F3               	addwf	prodl,f,c
 40804  001C9C  0E00               	movlw	0
 40805  001C9E  22F4               	addwfc	prodh,f,c
 40806  001CA0  0E00               	movlw	low _Channels
 40807  001CA2  24F3               	addwf	prodl,w,c
 40808  001CA4  6ED9               	movwf	fsr2l,c
 40809  001CA6  0E04               	movlw	high _Channels
 40810  001CA8  20F4               	addwfc	prodh,w,c
 40811  001CAA  6EDA               	movwf	fsr2h,c
 40812  001CAC  50DE               	movf	postinc2,w,c
 40813  001CAE  5DDE               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 40814  001CB0  50DE               	movf	postinc2,w,c
 40815  001CB2  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 40816  001CB4  50DE               	movf	postinc2,w,c
 40817  001CB6  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 40818  001CB8  50DE               	movf	postinc2,w,c
 40819  001CBA  59E1               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 40820  001CBC  A0D8               	btfss	status,0,c
 40821  001CBE  D028               	goto	l1372
 40822                           
 40823                           ; BSR set to: 0
 40824  001CC0  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40825  001CC2  0D0E               	mullw	14
 40826  001CC4  0E08               	movlw	8
 40827  001CC6  26F3               	addwf	prodl,f,c
 40828  001CC8  0E00               	movlw	0
 40829  001CCA  22F4               	addwfc	prodh,f,c
 40830  001CCC  0E00               	movlw	low _Channels
 40831  001CCE  24F3               	addwf	prodl,w,c
 40832  001CD0  6ED9               	movwf	fsr2l,c
 40833  001CD2  0E04               	movlw	high _Channels
 40834  001CD4  20F4               	addwfc	prodh,w,c
 40835  001CD6  6EDA               	movwf	fsr2h,c
 40836  001CD8  50DE               	movf	postinc2,w,c
 40837  001CDA  10DE               	iorwf	postinc2,w,c
 40838  001CDC  10DE               	iorwf	postinc2,w,c
 40839  001CDE  10DE               	iorwf	postinc2,w,c
 40840  001CE0  B4D8               	btfsc	status,2,c
 40841  001CE2  D016               	goto	l1372
 40842                           
 40843                           ; BSR set to: 0
 40844                           ;lorawan_eu.c: 427: {
 40845                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 40846  001CE4  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40847  001CE6  0D0E               	mullw	14
 40848  001CE8  0E08               	movlw	8
 40849  001CEA  26F3               	addwf	prodl,f,c
 40850  001CEC  0E00               	movlw	0
 40851  001CEE  22F4               	addwfc	prodh,f,c
 40852  001CF0  0E00               	movlw	low _Channels
 40853  001CF2  24F3               	addwf	prodl,w,c
 40854  001CF4  6ED9               	movwf	fsr2l,c
 40855  001CF6  0E04               	movlw	high _Channels
 40856  001CF8  20F4               	addwfc	prodh,w,c
 40857  001CFA  6EDA               	movwf	fsr2h,c
 40858  001CFC  CFDE F0DE          	movff	postinc2,LORAWAN_TxDone@minim
 40859  001D00  CFDE F0DF          	movff	postinc2,LORAWAN_TxDone@minim+1
 40860  001D04  CFDE F0E0          	movff	postinc2,LORAWAN_TxDone@minim+2
 40861  001D08  CFDE F0E1          	movff	postinc2,LORAWAN_TxDone@minim+3
 40862                           
 40863                           ; BSR set to: 0
 40864                           ;lorawan_eu.c: 429: found = 1;
 40865  001D0C  0E01               	movlw	1
 40866  001D0E  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 40867  001D10                     l1372:
 40868                           
 40869                           ; BSR set to: 0
 40870                           
 40871                           ; BSR set to: 0
 40872                           
 40873                           ; BSR set to: 0
 40874  001D10  2BE2               	incf	LORAWAN_TxDone@i& (0+255),f,b
 40875  001D12  D728               	goto	l20329
 40876  001D14                     u23770:
 40877                           
 40878                           ; BSR set to: 0
 40879                           ;lorawan_eu.c: 430: }
 40880                           ;lorawan_eu.c: 431: }
 40881                           ;lorawan_eu.c: 432: }
 40882                           ;lorawan_eu.c: 433: if (found == 1)
 40883                           
 40884                           ; BSR set to: 0
 40885  001D14  05D1               	decf	LORAWAN_TxDone@found& (0+255),w,b
 40886  001D16  A4D8               	btfss	status,2,c
 40887  001D18  D067               	goto	l1373
 40888                           
 40889                           ; BSR set to: 0
 40890                           ;lorawan_eu.c: 434: {
 40891                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 40892  001D1A  C0DE  F2CC         	movff	LORAWAN_TxDone@minim,_loRa+200
 40893  001D1E  C0DF  F2CD         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 40894  001D22  C0E0  F2CE         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 40895  001D26  C0E1  F2CF         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 40896                           
 40897                           ; BSR set to: 0
 40898                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 40899  001D2A  51E1               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 40900  001D2C  E107               	bnz	u23790
 40901  001D2E  29DE               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 40902  001D30  0EFF               	movlw	255
 40903  001D32  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 40904  001D34  0E0F               	movlw	15
 40905  001D36  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 40906  001D38  A0D8               	btfss	status,0,c
 40907  001D3A  D01C               	goto	l1375
 40908  001D3C                     u23790:
 40909                           
 40910                           ; BSR set to: 0
 40911  001D3C  C0DE  F060         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 40912  001D40  C0DF  F061         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 40913  001D44  C0E0  F062         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 40914  001D48  C0E1  F063         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 40915  001D4C  0E7D               	movlw	125
 40916  001D4E  6F64               	movwf	___lldiv@divisor& (0+255),b
 40917  001D50  0E00               	movlw	0
 40918  001D52  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40919  001D54  0E00               	movlw	0
 40920  001D56  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40921  001D58  0E00               	movlw	0
 40922  001D5A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40923  001D5C  ECB0  F050         	call	___lldiv	;wreg free
 40924  001D60  0E0C               	movlw	12
 40925  001D62                     u23805:
 40926  001D62  90D8               	bcf	status,0,c
 40927  001D64  0100               	movlb	0	; () banked
 40928  001D66  3760               	rlcf	?___lldiv& (0+255),f,b
 40929  001D68  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 40930  001D6A  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 40931  001D6C  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 40932  001D6E  2EE8               	decfsz	wreg,f,c
 40933  001D70  D7F8               	goto	u23805
 40934  001D72  D022               	goto	L20
 40935  001D74                     l1375:
 40936                           
 40937                           ; BSR set to: 0
 40938                           
 40939                           ; BSR set to: 0
 40940  001D74  C0DE  F0BD         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 40941  001D78  C0DF  F0BE         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 40942  001D7C  C0E0  F0BF         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 40943  001D80  C0E1  F0C0         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 40944  001D84  0E0C               	movlw	12
 40945  001D86                     u23815:
 40946  001D86  90D8               	bcf	status,0,c
 40947  001D88  37BD               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 40948  001D8A  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40949  001D8C  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40950  001D8E  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40951  001D90  2EE8               	decfsz	wreg,f,c
 40952  001D92  D7F9               	goto	u23815
 40953  001D94  C0BD  F060         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 40954  001D98  C0BE  F061         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 40955  001D9C  C0BF  F062         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 40956  001DA0  C0C0  F063         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 40957  001DA4  0E7D               	movlw	125
 40958  001DA6  6F64               	movwf	___lldiv@divisor& (0+255),b
 40959  001DA8  0E00               	movlw	0
 40960  001DAA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40961  001DAC  0E00               	movlw	0
 40962  001DAE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40963  001DB0  0E00               	movlw	0
 40964  001DB2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40965  001DB4  ECB0  F050         	call	___lldiv	;wreg free
 40966  001DB8                     L20:
 40967  001DB8  C060  F0CD         	movff	?___lldiv,_LORAWAN_TxDone$2067
 40968  001DBC  C061  F0CE         	movff	?___lldiv+1,_LORAWAN_TxDone$2067+1
 40969  001DC0  C062  F0CF         	movff	?___lldiv+2,_LORAWAN_TxDone$2067+2
 40970  001DC4  C063  F0D0         	movff	?___lldiv+3,_LORAWAN_TxDone$2067+3
 40971  001DC8  C0CD  F06D         	movff	_LORAWAN_TxDone$2067,SwTimerSetTimeout@timeout
 40972  001DCC  C0CE  F06E         	movff	_LORAWAN_TxDone$2067+1,SwTimerSetTimeout@timeout+1
 40973  001DD0  C0CF  F06F         	movff	_LORAWAN_TxDone$2067+2,SwTimerSetTimeout@timeout+2
 40974  001DD4  C0D0  F070         	movff	_LORAWAN_TxDone$2067+3,SwTimerSetTimeout@timeout+3
 40975  001DD8  0102               	movlb	2	; () banked
 40976  001DDA  51ED               	movf	(_loRa+233)& (0+255),w,b
 40977  001DDC  ECD7  F05A         	call	_SwTimerSetTimeout
 40978                           
 40979                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 40980  001DE0  0102               	movlb	2	; () banked
 40981  001DE2  51ED               	movf	(_loRa+233)& (0+255),w,b
 40982  001DE4  EC5C  F04D         	call	_SwTimerStart
 40983  001DE8                     l1373:
 40984                           
 40985                           ;lorawan_eu.c: 438: }
 40986                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 40987  001DE8  0E02               	movlw	2
 40988  001DEA  0102               	movlb	2	; () banked
 40989  001DEC  1916               	xorwf	(_loRa+18)& (0+255),w,b
 40990  001DEE  A4D8               	btfss	status,2,c
 40991  001DF0  0012               	return	
 40992                           
 40993                           ; BSR set to: 2
 40994                           ;lorawan_eu.c: 440: {
 40995                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 40996  001DF2  5106               	movf	(_loRa+2)& (0+255),w,b
 40997  001DF4  0BF0               	andlw	-16
 40998  001DF6  0908               	iorlw	8
 40999  001DF8  6F06               	movwf	(_loRa+2)& (0+255),b
 41000                           
 41001                           ; BSR set to: 2
 41002                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 41003  001DFA  EC72  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 41004                           
 41005                           ;lorawan_eu.c: 443: }
 41006                           ;lorawan_eu.c: 444: }
 41007  001DFE  0012               	return	
 41008  001E00                     l1357:
 41009                           
 41010                           ;lorawan_eu.c: 445: else
 41011                           ;lorawan_eu.c: 446: {
 41012                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 41013  001E00  EC3F  F063         	call	_RADIO_GetStatus	;wreg free
 41014  001E04  0100               	movlb	0	; () banked
 41015  001E06  6FBD               	movwf	??_LORAWAN_TxDone& (0+255),b
 41016  001E08  A9BD               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 41017  001E0A  D014               	goto	l1380
 41018                           
 41019                           ; BSR set to: 0
 41020                           ;lorawan_eu.c: 448: {
 41021                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 41022  001E0C  0E00               	movlw	0
 41023  001E0E  6F60               	movwf	RxData@pData& (0+255),b
 41024  001E10  0E00               	movlw	0
 41025  001E12  6F61               	movwf	(RxData@pData+1)& (0+255),b
 41026  001E14  0E00               	movlw	0
 41027  001E16  6F62               	movwf	RxData@dataLength& (0+255),b
 41028  001E18  0E02               	movlw	2
 41029  001E1A  6F63               	movwf	RxData@status& (0+255),b
 41030  001E1C  D801               	call	u23848
 41031  001E1E  0012               	return	
 41032  001E20                     u23848:
 41033  001E20  0005               	push	
 41034  001E22  6EFA               	movwf	pclath,c
 41035  001E24  0101               	movlb	1	; () banked
 41036  001E26  510C               	movf	_rxPayload& (0+255),w,b
 41037  001E28  6EFD               	movwf	tosl,c
 41038  001E2A  510D               	movf	(_rxPayload+1)& (0+255),w,b
 41039  001E2C  6EFE               	movwf	tosh,c
 41040  001E2E  6AFF               	clrf	tosu,c
 41041  001E30  50FA               	movf	pclath,w,c
 41042  001E32  0012               	return		;indir
 41043  001E34                     l1380:
 41044                           
 41045                           ;lorawan_eu.c: 452: else
 41046                           ;lorawan_eu.c: 453: {
 41047                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 41048  001E34  0101               	movlb	1	; () banked
 41049  001E36  510C               	movf	_rxPayload& (0+255),w,b
 41050  001E38  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 41051  001E3A  B4D8               	btfsc	status,2,c
 41052  001E3C  0012               	return	
 41053                           
 41054                           ; BSR set to: 1
 41055                           ;lorawan_eu.c: 456: {
 41056                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 41057  001E3E  0E00               	movlw	0
 41058  001E40  0100               	movlb	0	; () banked
 41059  001E42  6F60               	movwf	RxData@pData& (0+255),b
 41060  001E44  0E00               	movlw	0
 41061  001E46  6F61               	movwf	(RxData@pData+1)& (0+255),b
 41062  001E48  0E00               	movlw	0
 41063  001E4A  6F62               	movwf	RxData@dataLength& (0+255),b
 41064  001E4C  0E03               	movlw	3
 41065  001E4E  6F63               	movwf	RxData@status& (0+255),b
 41066  001E50  D801               	call	u23868
 41067  001E52  0012               	return	
 41068  001E54                     u23868:
 41069  001E54  0005               	push	
 41070  001E56  6EFA               	movwf	pclath,c
 41071  001E58  0101               	movlb	1	; () banked
 41072  001E5A  510C               	movf	_rxPayload& (0+255),w,b
 41073  001E5C  6EFD               	movwf	tosl,c
 41074  001E5E  510D               	movf	(_rxPayload+1)& (0+255),w,b
 41075  001E60  6EFE               	movwf	tosh,c
 41076  001E62  6AFF               	clrf	tosu,c
 41077  001E64  50FA               	movf	pclath,w,c
 41078  001E66  0012               	return		;indir
 41079  001E68                     __end_of_LORAWAN_TxDone:
 41080                           	opt stack 0
 41081                           tosu	equ	0xFFF
 41082                           tosh	equ	0xFFE
 41083                           tosl	equ	0xFFD
 41084                           pclath	equ	0xFFA
 41085                           tblptru	equ	0xFF8
 41086                           tblptrh	equ	0xFF7
 41087                           tblptrl	equ	0xFF6
 41088                           tablat	equ	0xFF5
 41089                           prodh	equ	0xFF4
 41090                           prodl	equ	0xFF3
 41091                           intcon	equ	0xFF2
 41092                           intcon2	equ	0xFF1
 41093                           intcon3	equ	0xFF0
 41094                           indf0	equ	0xFEF
 41095                           postinc0	equ	0xFEE
 41096                           fsr0h	equ	0xFEA
 41097                           fsr0l	equ	0xFE9
 41098                           wreg	equ	0xFE8
 41099                           postinc1	equ	0xFE6
 41100                           postdec1	equ	0xFE5
 41101                           plusw1	equ	0xFE3
 41102                           fsr1h	equ	0xFE2
 41103                           fsr1l	equ	0xFE1
 41104                           indf2	equ	0xFDF
 41105                           postinc2	equ	0xFDE
 41106                           postdec2	equ	0xFDD
 41107                           plusw2	equ	0xFDB
 41108                           fsr2h	equ	0xFDA
 41109                           fsr2l	equ	0xFD9
 41110                           status	equ	0xFD8
 41111                           
 41112 ;; *************** function _SwTimerReadValue *****************
 41113 ;; Defined at:
 41114 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41115 ;; Parameters:    Size  Location     Type
 41116 ;;  timerId         1    wreg     unsigned char 
 41117 ;; Auto vars:     Size  Location     Type
 41118 ;;  timerId         1   57[BANK0 ] unsigned char 
 41119 ;;  ticksCount      4   53[BANK0 ] unsigned long 
 41120 ;; Return value:  Size  Location     Type
 41121 ;;                  4   49[BANK0 ] unsigned long 
 41122 ;; Registers used:
 41123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41124 ;; Tracked objects:
 41125 ;;		On entry : 0/0
 41126 ;;		On exit  : 0/0
 41127 ;;		Unchanged: 0/0
 41128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41129 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41130 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41132 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41133 ;;Total ram usage:        9 bytes
 41134 ;; Hardware stack levels used:    1
 41135 ;; Hardware stack levels required when called:   10
 41136 ;; This function calls:
 41137 ;;		_SwTimersInterrupt
 41138 ;; This function is called by:
 41139 ;;		_RADIO_TxDone
 41140 ;;		_RADIO_FSKPacketSent
 41141 ;;		_LORAWAN_TxDone
 41142 ;;		_LORAWAN_Pause
 41143 ;; This function uses a non-reentrant model
 41144 ;;
 41145                           
 41146                           	psect	text218
 41147  00B6FA                     __ptext218:
 41148                           	opt stack 0
 41149  00B6FA                     _SwTimerReadValue:
 41150                           	opt stack 16
 41151                           
 41152                           ;incstack = 0
 41153                           ;SwTimerReadValue@timerId stored from wreg
 41154  00B6FA  0100               	movlb	0	; () banked
 41155  00B6FC  6F99               	movwf	SwTimerReadValue@timerId& (0+255),b
 41156                           
 41157                           ;sw_timer.c: 195: uint32_t ticksCount;
 41158                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 41159  00B6FE  9EF2               	bcf	intcon,7,c	;volatile
 41160                           
 41161                           ;sw_timer.c: 200: SwTimersInterrupt();
 41162  00B700  ECDD  F042         	call	_SwTimersInterrupt	;wreg free
 41163                           
 41164                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 41165  00B704  0100               	movlb	0	; () banked
 41166  00B706  5199               	movf	SwTimerReadValue@timerId& (0+255),w,b
 41167  00B708  0D08               	mullw	8
 41168  00B70A  0E00               	movlw	low _swTimers
 41169  00B70C  24F3               	addwf	prodl,w,c
 41170  00B70E  6ED9               	movwf	fsr2l,c
 41171  00B710  0E03               	movlw	high _swTimers
 41172  00B712  20F4               	addwfc	prodh,w,c
 41173  00B714  6EDA               	movwf	fsr2h,c
 41174  00B716  CFDE F095          	movff	postinc2,SwTimerReadValue@ticksCount
 41175  00B71A  CFDE F096          	movff	postinc2,SwTimerReadValue@ticksCount+1
 41176  00B71E  CFDE F097          	movff	postinc2,SwTimerReadValue@ticksCount+2
 41177  00B722  CFDE F098          	movff	postinc2,SwTimerReadValue@ticksCount+3
 41178                           
 41179                           ; BSR set to: 0
 41180                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 41181  00B726  8EF2               	bsf	intcon,7,c	;volatile
 41182                           
 41183                           ; BSR set to: 0
 41184                           ;sw_timer.c: 204: return ticksCount;
 41185  00B728  C095  F091         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 41186  00B72C  C096  F092         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 41187  00B730  C097  F093         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 41188  00B734  C098  F094         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 41189  00B738  0012               	return	
 41190  00B73A                     __end_of_SwTimerReadValue:
 41191                           	opt stack 0
 41192                           tosu	equ	0xFFF
 41193                           tosh	equ	0xFFE
 41194                           tosl	equ	0xFFD
 41195                           pclath	equ	0xFFA
 41196                           tblptru	equ	0xFF8
 41197                           tblptrh	equ	0xFF7
 41198                           tblptrl	equ	0xFF6
 41199                           tablat	equ	0xFF5
 41200                           prodh	equ	0xFF4
 41201                           prodl	equ	0xFF3
 41202                           intcon	equ	0xFF2
 41203                           intcon2	equ	0xFF1
 41204                           intcon3	equ	0xFF0
 41205                           indf0	equ	0xFEF
 41206                           postinc0	equ	0xFEE
 41207                           fsr0h	equ	0xFEA
 41208                           fsr0l	equ	0xFE9
 41209                           wreg	equ	0xFE8
 41210                           postinc1	equ	0xFE6
 41211                           postdec1	equ	0xFE5
 41212                           plusw1	equ	0xFE3
 41213                           fsr1h	equ	0xFE2
 41214                           fsr1l	equ	0xFE1
 41215                           indf2	equ	0xFDF
 41216                           postinc2	equ	0xFDE
 41217                           postdec2	equ	0xFDD
 41218                           plusw2	equ	0xFDB
 41219                           fsr2h	equ	0xFDA
 41220                           fsr2l	equ	0xFD9
 41221                           status	equ	0xFD8
 41222                           
 41223 ;; *************** function _SwTimerIsRunning *****************
 41224 ;; Defined at:
 41225 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41226 ;; Parameters:    Size  Location     Type
 41227 ;;  timerId         1    wreg     unsigned char 
 41228 ;; Auto vars:     Size  Location     Type
 41229 ;;  timerId         1    0[BANK0 ] unsigned char 
 41230 ;;  isRunning       1    1[BANK0 ] unsigned char 
 41231 ;; Return value:  Size  Location     Type
 41232 ;;                  1    wreg      unsigned char 
 41233 ;; Registers used:
 41234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41235 ;; Tracked objects:
 41236 ;;		On entry : 0/0
 41237 ;;		On exit  : 0/0
 41238 ;;		Unchanged: 0/0
 41239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41241 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41243 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41244 ;;Total ram usage:        2 bytes
 41245 ;; Hardware stack levels used:    1
 41246 ;; Hardware stack levels required when called:    7
 41247 ;; This function calls:
 41248 ;;		Nothing
 41249 ;; This function is called by:
 41250 ;;		_LORAWAN_TxDone
 41251 ;; This function uses a non-reentrant model
 41252 ;;
 41253                           
 41254                           	psect	text219
 41255  00BC38                     __ptext219:
 41256                           	opt stack 0
 41257  00BC38                     _SwTimerIsRunning:
 41258                           	opt stack 19
 41259                           
 41260                           ; BSR set to: 0
 41261                           ;incstack = 0
 41262                           ;SwTimerIsRunning@timerId stored from wreg
 41263  00BC38  0100               	movlb	0	; () banked
 41264  00BC3A  6F60               	movwf	SwTimerIsRunning@timerId& (0+255),b
 41265                           
 41266                           ;sw_timer.c: 209: uint8_t isRunning;
 41267                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 41268  00BC3C  9EF2               	bcf	intcon,7,c	;volatile
 41269                           
 41270                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 41271  00BC3E  0100               	movlb	0	; () banked
 41272  00BC40  5160               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 41273  00BC42  0D08               	mullw	8
 41274  00BC44  0E04               	movlw	4
 41275  00BC46  26F3               	addwf	prodl,f,c
 41276  00BC48  0E00               	movlw	0
 41277  00BC4A  22F4               	addwfc	prodh,f,c
 41278  00BC4C  0E00               	movlw	low _swTimers
 41279  00BC4E  24F3               	addwf	prodl,w,c
 41280  00BC50  6ED9               	movwf	fsr2l,c
 41281  00BC52  0E03               	movlw	high _swTimers
 41282  00BC54  20F4               	addwfc	prodh,w,c
 41283  00BC56  6EDA               	movwf	fsr2h,c
 41284  00BC58  50DF               	movf	indf2,w,c
 41285  00BC5A  6F61               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 41286                           
 41287                           ; BSR set to: 0
 41288                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 41289  00BC5C  8EF2               	bsf	intcon,7,c	;volatile
 41290                           
 41291                           ; BSR set to: 0
 41292                           ;sw_timer.c: 215: return isRunning;
 41293  00BC5E  5161               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 41294  00BC60  0012               	return	
 41295  00BC62                     __end_of_SwTimerIsRunning:
 41296                           	opt stack 0
 41297                           tosu	equ	0xFFF
 41298                           tosh	equ	0xFFE
 41299                           tosl	equ	0xFFD
 41300                           pclath	equ	0xFFA
 41301                           tblptru	equ	0xFF8
 41302                           tblptrh	equ	0xFF7
 41303                           tblptrl	equ	0xFF6
 41304                           tablat	equ	0xFF5
 41305                           prodh	equ	0xFF4
 41306                           prodl	equ	0xFF3
 41307                           intcon	equ	0xFF2
 41308                           intcon2	equ	0xFF1
 41309                           intcon3	equ	0xFF0
 41310                           indf0	equ	0xFEF
 41311                           postinc0	equ	0xFEE
 41312                           fsr0h	equ	0xFEA
 41313                           fsr0l	equ	0xFE9
 41314                           wreg	equ	0xFE8
 41315                           postinc1	equ	0xFE6
 41316                           postdec1	equ	0xFE5
 41317                           plusw1	equ	0xFE3
 41318                           fsr1h	equ	0xFE2
 41319                           fsr1l	equ	0xFE1
 41320                           indf2	equ	0xFDF
 41321                           postinc2	equ	0xFDE
 41322                           postdec2	equ	0xFDD
 41323                           plusw2	equ	0xFDB
 41324                           fsr2h	equ	0xFDA
 41325                           fsr2l	equ	0xFD9
 41326                           status	equ	0xFD8
 41327                           
 41328 ;; *************** function _RADIO_GetStatus *****************
 41329 ;; Defined at:
 41330 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 41331 ;; Parameters:    Size  Location     Type
 41332 ;;		None
 41333 ;; Auto vars:     Size  Location     Type
 41334 ;;		None
 41335 ;; Return value:  Size  Location     Type
 41336 ;;                  1    wreg      unsigned char 
 41337 ;; Registers used:
 41338 ;;		wreg, status,2
 41339 ;; Tracked objects:
 41340 ;;		On entry : 0/0
 41341 ;;		On exit  : 0/0
 41342 ;;		Unchanged: 0/0
 41343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41348 ;;Total ram usage:        0 bytes
 41349 ;; Hardware stack levels used:    1
 41350 ;; Hardware stack levels required when called:    7
 41351 ;; This function calls:
 41352 ;;		Nothing
 41353 ;; This function is called by:
 41354 ;;		_LORAWAN_TxDone
 41355 ;;		_LORAWAN_ReceiveWindow2Callback
 41356 ;;		_LORAWAN_RxDone
 41357 ;; This function uses a non-reentrant model
 41358 ;;
 41359                           
 41360                           	psect	text220
 41361  00C67E                     __ptext220:
 41362                           	opt stack 0
 41363  00C67E                     _RADIO_GetStatus:
 41364                           	opt stack 19
 41365                           
 41366                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 41367                           
 41368                           ; BSR set to: 0
 41369                           ;incstack = 0
 41370  00C67E  0101               	movlb	1	; () banked
 41371  00C680  5158               	movf	(_RadioConfiguration+35)& (0+255),w,b
 41372  00C682  0012               	return	
 41373  00C684                     __end_of_RADIO_GetStatus:
 41374                           	opt stack 0
 41375                           tosu	equ	0xFFF
 41376                           tosh	equ	0xFFE
 41377                           tosl	equ	0xFFD
 41378                           pclath	equ	0xFFA
 41379                           tblptru	equ	0xFF8
 41380                           tblptrh	equ	0xFF7
 41381                           tblptrl	equ	0xFF6
 41382                           tablat	equ	0xFF5
 41383                           prodh	equ	0xFF4
 41384                           prodl	equ	0xFF3
 41385                           intcon	equ	0xFF2
 41386                           intcon2	equ	0xFF1
 41387                           intcon3	equ	0xFF0
 41388                           indf0	equ	0xFEF
 41389                           postinc0	equ	0xFEE
 41390                           fsr0h	equ	0xFEA
 41391                           fsr0l	equ	0xFE9
 41392                           wreg	equ	0xFE8
 41393                           postinc1	equ	0xFE6
 41394                           postdec1	equ	0xFE5
 41395                           plusw1	equ	0xFE3
 41396                           fsr1h	equ	0xFE2
 41397                           fsr1l	equ	0xFE1
 41398                           indf2	equ	0xFDF
 41399                           postinc2	equ	0xFDE
 41400                           postdec2	equ	0xFDD
 41401                           plusw2	equ	0xFDB
 41402                           fsr2h	equ	0xFDA
 41403                           fsr2l	equ	0xFD9
 41404                           status	equ	0xFD8
 41405                           
 41406 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 41407 ;; Defined at:
 41408 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 41409 ;; Parameters:    Size  Location     Type
 41410 ;;		None
 41411 ;; Auto vars:     Size  Location     Type
 41412 ;;		None
 41413 ;; Return value:  Size  Location     Type
 41414 ;;                  1    wreg      void 
 41415 ;; Registers used:
 41416 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41417 ;; Tracked objects:
 41418 ;;		On entry : 0/0
 41419 ;;		On exit  : 0/0
 41420 ;;		Unchanged: 0/0
 41421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41426 ;;Total ram usage:        0 bytes
 41427 ;; Hardware stack levels used:    1
 41428 ;; Hardware stack levels required when called:   13
 41429 ;; This function calls:
 41430 ;;		_ConfigureRadioRx
 41431 ;;		_RADIO_ReceiveStart
 41432 ;;		_RADIO_ReceiveStop
 41433 ;;		_RADIO_ReleaseData
 41434 ;;		_ResetParametersForConfirmedTransmission
 41435 ;;		_ResetParametersForUnconfirmedTransmission
 41436 ;;		_RxData
 41437 ;; This function is called by:
 41438 ;;		_LORAWAN_TxDone
 41439 ;;		_LORAWAN_ReceiveWindow2Callback
 41440 ;;		_LORAWAN_RxDone
 41441 ;;		_SetReceptionNotOkState
 41442 ;; This function uses a non-reentrant model
 41443 ;;
 41444                           
 41445                           	psect	text221
 41446  00A2E4                     __ptext221:
 41447                           	opt stack 0
 41448  00A2E4                     _LORAWAN_EnterContinuousReceive:
 41449                           	opt stack 13
 41450                           
 41451                           ;lorawan.c: 917: RADIO_ReceiveStop();
 41452                           
 41453                           ; BSR set to: 1
 41454                           ;incstack = 0
 41455  00A2E4  ECDF  F05F         	call	_RADIO_ReceiveStop	;wreg free
 41456                           
 41457                           ;lorawan.c: 918: RADIO_ReleaseData();
 41458  00A2E8  EC42  F063         	call	_RADIO_ReleaseData	;wreg free
 41459                           
 41460                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 41461  00A2EC  C21C  F073         	movff	_loRa+24,ConfigureRadioRx@freq
 41462  00A2F0  C21D  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
 41463  00A2F4  C21E  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
 41464  00A2F8  C21F  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
 41465  00A2FC  0102               	movlb	2	; () banked
 41466  00A2FE  5120               	movf	(_loRa+28)& (0+255),w,b
 41467  00A300  EC31  F05E         	call	_ConfigureRadioRx
 41468                           
 41469                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 41470  00A304  0E00               	movlw	0
 41471  00A306  0100               	movlb	0	; () banked
 41472  00A308  6FB2               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 41473  00A30A  0E00               	movlw	0
 41474  00A30C  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 41475  00A30E  EC00  F02F         	call	_RADIO_ReceiveStart	;wreg free
 41476  00A312  0100               	movlb	0	; () banked
 41477  00A314  51B1               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 41478  00A316  11B2               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 41479  00A318  B4D8               	btfsc	status,2,c
 41480  00A31A  0012               	return	
 41481                           
 41482                           ; BSR set to: 0
 41483                           ;lorawan.c: 923: {
 41484                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 41485  00A31C  ECF4  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 41486                           
 41487                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 41488  00A320  ECA0  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 41489                           
 41490                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 41491  00A324  0102               	movlb	2	; () banked
 41492  00A326  9106               	bcf	(_loRa+2)& (0+255),0,b
 41493  00A328  9306               	bcf	(_loRa+2)& (0+255),1,b
 41494  00A32A  9506               	bcf	(_loRa+2)& (0+255),2,b
 41495  00A32C  9706               	bcf	(_loRa+2)& (0+255),3,b
 41496                           
 41497                           ; BSR set to: 2
 41498                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 41499  00A32E  0101               	movlb	1	; () banked
 41500  00A330  510C               	movf	_rxPayload& (0+255),w,b
 41501  00A332  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 41502  00A334  B4D8               	btfsc	status,2,c
 41503  00A336  0012               	return	
 41504                           
 41505                           ; BSR set to: 1
 41506                           ;lorawan.c: 928: {
 41507                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 41508  00A338  0E00               	movlw	0
 41509  00A33A  0100               	movlb	0	; () banked
 41510  00A33C  6F60               	movwf	RxData@pData& (0+255),b
 41511  00A33E  0E00               	movlw	0
 41512  00A340  6F61               	movwf	(RxData@pData+1)& (0+255),b
 41513  00A342  0E00               	movlw	0
 41514  00A344  6F62               	movwf	RxData@dataLength& (0+255),b
 41515  00A346  0E00               	movlw	0
 41516  00A348  6F63               	movwf	RxData@status& (0+255),b
 41517  00A34A  D801               	call	u21408
 41518  00A34C  0012               	return	
 41519  00A34E                     u21408:
 41520  00A34E  0005               	push	
 41521  00A350  6EFA               	movwf	pclath,c
 41522  00A352  0101               	movlb	1	; () banked
 41523  00A354  510C               	movf	_rxPayload& (0+255),w,b
 41524  00A356  6EFD               	movwf	tosl,c
 41525  00A358  510D               	movf	(_rxPayload+1)& (0+255),w,b
 41526  00A35A  6EFE               	movwf	tosh,c
 41527  00A35C  6AFF               	clrf	tosu,c
 41528  00A35E  50FA               	movf	pclath,w,c
 41529  00A360  0012               	return		;indir
 41530  00A362                     __end_of_LORAWAN_EnterContinuousReceive:
 41531                           	opt stack 0
 41532                           tosu	equ	0xFFF
 41533                           tosh	equ	0xFFE
 41534                           tosl	equ	0xFFD
 41535                           pclath	equ	0xFFA
 41536                           tblptru	equ	0xFF8
 41537                           tblptrh	equ	0xFF7
 41538                           tblptrl	equ	0xFF6
 41539                           tablat	equ	0xFF5
 41540                           prodh	equ	0xFF4
 41541                           prodl	equ	0xFF3
 41542                           intcon	equ	0xFF2
 41543                           intcon2	equ	0xFF1
 41544                           intcon3	equ	0xFF0
 41545                           indf0	equ	0xFEF
 41546                           postinc0	equ	0xFEE
 41547                           fsr0h	equ	0xFEA
 41548                           fsr0l	equ	0xFE9
 41549                           wreg	equ	0xFE8
 41550                           postinc1	equ	0xFE6
 41551                           postdec1	equ	0xFE5
 41552                           plusw1	equ	0xFE3
 41553                           fsr1h	equ	0xFE2
 41554                           fsr1l	equ	0xFE1
 41555                           indf2	equ	0xFDF
 41556                           postinc2	equ	0xFDE
 41557                           postdec2	equ	0xFDD
 41558                           plusw2	equ	0xFDB
 41559                           fsr2h	equ	0xFDA
 41560                           fsr2l	equ	0xFD9
 41561                           status	equ	0xFD8
 41562                           
 41563 ;; *************** function _RxData *****************
 41564 ;; Defined at:
 41565 ;;		line 82 in file "main.c"
 41566 ;; Parameters:    Size  Location     Type
 41567 ;;  pData           2    0[BANK0 ] PTR unsigned char 
 41568 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 41569 ;;  dataLength      1    2[BANK0 ] unsigned char 
 41570 ;;  status          1    3[BANK0 ] enum E7645
 41571 ;; Auto vars:     Size  Location     Type
 41572 ;;		None
 41573 ;; Return value:  Size  Location     Type
 41574 ;;                  1    wreg      void 
 41575 ;; Registers used:
 41576 ;;		None
 41577 ;; Tracked objects:
 41578 ;;		On entry : 0/0
 41579 ;;		On exit  : 0/0
 41580 ;;		Unchanged: 0/0
 41581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41582 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41585 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41586 ;;Total ram usage:        4 bytes
 41587 ;; Hardware stack levels used:    1
 41588 ;; Hardware stack levels required when called:    7
 41589 ;; This function calls:
 41590 ;;		Nothing
 41591 ;; This function is called by:
 41592 ;;		_main
 41593 ;;		_LORAWAN_EnterContinuousReceive
 41594 ;;		_LORAWAN_ReceiveWindow2Callback
 41595 ;;		_SetReceptionNotOkState
 41596 ;;		_LORAWAN_RxDone
 41597 ;;		_LORAWAN_RxTimeout
 41598 ;;		_LORAWAN_TxDone
 41599 ;;		_AckRetransmissionCallback
 41600 ;;		_UnconfirmedTransmissionCallback
 41601 ;; This function uses a non-reentrant model
 41602 ;;
 41603                           
 41604                           	psect	text222
 41605  00C6F2                     __ptext222:
 41606                           	opt stack 0
 41607  00C6F2                     _RxData:
 41608                           	opt stack 20
 41609                           
 41610                           ;incstack = 0
 41611  00C6F2  0012               	return		;funcret
 41612  00C6F4                     __end_of_RxData:
 41613                           	opt stack 0
 41614                           tosu	equ	0xFFF
 41615                           tosh	equ	0xFFE
 41616                           tosl	equ	0xFFD
 41617                           pclath	equ	0xFFA
 41618                           tblptru	equ	0xFF8
 41619                           tblptrh	equ	0xFF7
 41620                           tblptrl	equ	0xFF6
 41621                           tablat	equ	0xFF5
 41622                           prodh	equ	0xFF4
 41623                           prodl	equ	0xFF3
 41624                           intcon	equ	0xFF2
 41625                           intcon2	equ	0xFF1
 41626                           intcon3	equ	0xFF0
 41627                           indf0	equ	0xFEF
 41628                           postinc0	equ	0xFEE
 41629                           fsr0h	equ	0xFEA
 41630                           fsr0l	equ	0xFE9
 41631                           wreg	equ	0xFE8
 41632                           postinc1	equ	0xFE6
 41633                           postdec1	equ	0xFE5
 41634                           plusw1	equ	0xFE3
 41635                           fsr1h	equ	0xFE2
 41636                           fsr1l	equ	0xFE1
 41637                           indf2	equ	0xFDF
 41638                           postinc2	equ	0xFDE
 41639                           postdec2	equ	0xFDD
 41640                           plusw2	equ	0xFDB
 41641                           fsr2h	equ	0xFDA
 41642                           fsr2l	equ	0xFD9
 41643                           status	equ	0xFD8
 41644                           
 41645 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 41646 ;; Defined at:
 41647 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 41648 ;; Parameters:    Size  Location     Type
 41649 ;;		None
 41650 ;; Auto vars:     Size  Location     Type
 41651 ;;		None
 41652 ;; Return value:  Size  Location     Type
 41653 ;;                  1    wreg      void 
 41654 ;; Registers used:
 41655 ;;		wreg, status,2
 41656 ;; Tracked objects:
 41657 ;;		On entry : 0/0
 41658 ;;		On exit  : 0/0
 41659 ;;		Unchanged: 0/0
 41660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41665 ;;Total ram usage:        0 bytes
 41666 ;; Hardware stack levels used:    1
 41667 ;; Hardware stack levels required when called:    7
 41668 ;; This function calls:
 41669 ;;		Nothing
 41670 ;; This function is called by:
 41671 ;;		_LORAWAN_RxTimeout
 41672 ;;		_LORAWAN_ReceiveWindow2Callback
 41673 ;;		_LORAWAN_EnterContinuousReceive
 41674 ;;		_UnconfirmedTransmissionCallback
 41675 ;; This function uses a non-reentrant model
 41676 ;;
 41677                           
 41678                           	psect	text223
 41679  00C340                     __ptext223:
 41680                           	opt stack 0
 41681  00C340                     _ResetParametersForUnconfirmedTransmission:
 41682                           	opt stack 20
 41683                           
 41684                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 41685                           
 41686                           ;incstack = 0
 41687  00C340  0102               	movlb	2	; () banked
 41688  00C342  9106               	bcf	(_loRa+2)& (0+255),0,b
 41689  00C344  9306               	bcf	(_loRa+2)& (0+255),1,b
 41690  00C346  9506               	bcf	(_loRa+2)& (0+255),2,b
 41691  00C348  9706               	bcf	(_loRa+2)& (0+255),3,b
 41692                           
 41693                           ; BSR set to: 2
 41694                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 41695  00C34A  0E01               	movlw	1
 41696  00C34C  6FDC               	movwf	(_loRa+216)& (0+255),b
 41697                           
 41698                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 41699  00C34E  0E00               	movlw	0
 41700  00C350  6FAB               	movwf	(_loRa+167)& (0+255),b
 41701                           
 41702                           ; BSR set to: 2
 41703  00C352  0012               	return		;funcret
 41704  00C354                     __end_of_ResetParametersForUnconfirmedTransmission:
 41705                           	opt stack 0
 41706                           tosu	equ	0xFFF
 41707                           tosh	equ	0xFFE
 41708                           tosl	equ	0xFFD
 41709                           pclath	equ	0xFFA
 41710                           tblptru	equ	0xFF8
 41711                           tblptrh	equ	0xFF7
 41712                           tblptrl	equ	0xFF6
 41713                           tablat	equ	0xFF5
 41714                           prodh	equ	0xFF4
 41715                           prodl	equ	0xFF3
 41716                           intcon	equ	0xFF2
 41717                           intcon2	equ	0xFF1
 41718                           intcon3	equ	0xFF0
 41719                           indf0	equ	0xFEF
 41720                           postinc0	equ	0xFEE
 41721                           fsr0h	equ	0xFEA
 41722                           fsr0l	equ	0xFE9
 41723                           wreg	equ	0xFE8
 41724                           postinc1	equ	0xFE6
 41725                           postdec1	equ	0xFE5
 41726                           plusw1	equ	0xFE3
 41727                           fsr1h	equ	0xFE2
 41728                           fsr1l	equ	0xFE1
 41729                           indf2	equ	0xFDF
 41730                           postinc2	equ	0xFDE
 41731                           postdec2	equ	0xFDD
 41732                           plusw2	equ	0xFDB
 41733                           fsr2h	equ	0xFDA
 41734                           fsr2l	equ	0xFD9
 41735                           status	equ	0xFD8
 41736                           
 41737 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 41738 ;; Defined at:
 41739 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 41740 ;; Parameters:    Size  Location     Type
 41741 ;;		None
 41742 ;; Auto vars:     Size  Location     Type
 41743 ;;		None
 41744 ;; Return value:  Size  Location     Type
 41745 ;;                  1    wreg      void 
 41746 ;; Registers used:
 41747 ;;		wreg, status,2
 41748 ;; Tracked objects:
 41749 ;;		On entry : 0/0
 41750 ;;		On exit  : 0/0
 41751 ;;		Unchanged: 0/0
 41752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41757 ;;Total ram usage:        0 bytes
 41758 ;; Hardware stack levels used:    1
 41759 ;; Hardware stack levels required when called:    7
 41760 ;; This function calls:
 41761 ;;		Nothing
 41762 ;; This function is called by:
 41763 ;;		_LORAWAN_RxTimeout
 41764 ;;		_LORAWAN_ReceiveWindow2Callback
 41765 ;;		_LORAWAN_EnterContinuousReceive
 41766 ;;		_AckRetransmissionCallback
 41767 ;; This function uses a non-reentrant model
 41768 ;;
 41769                           
 41770                           	psect	text224
 41771  00C3E8                     __ptext224:
 41772                           	opt stack 0
 41773  00C3E8                     _ResetParametersForConfirmedTransmission:
 41774                           	opt stack 18
 41775                           
 41776                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 41777                           
 41778                           ; BSR set to: 2
 41779                           ;incstack = 0
 41780  00C3E8  0102               	movlb	2	; () banked
 41781  00C3EA  9106               	bcf	(_loRa+2)& (0+255),0,b
 41782  00C3EC  9306               	bcf	(_loRa+2)& (0+255),1,b
 41783  00C3EE  9506               	bcf	(_loRa+2)& (0+255),2,b
 41784  00C3F0  9706               	bcf	(_loRa+2)& (0+255),3,b
 41785                           
 41786                           ; BSR set to: 2
 41787                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 41788  00C3F2  0E01               	movlw	1
 41789  00C3F4  6FDD               	movwf	(_loRa+217)& (0+255),b
 41790                           
 41791                           ; BSR set to: 2
 41792                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 41793  00C3F6  9104               	bcf	_loRa& (0+255),0,b
 41794                           
 41795                           ; BSR set to: 2
 41796  00C3F8  0012               	return		;funcret
 41797  00C3FA                     __end_of_ResetParametersForConfirmedTransmission:
 41798                           	opt stack 0
 41799                           tosu	equ	0xFFF
 41800                           tosh	equ	0xFFE
 41801                           tosl	equ	0xFFD
 41802                           pclath	equ	0xFFA
 41803                           tblptru	equ	0xFF8
 41804                           tblptrh	equ	0xFF7
 41805                           tblptrl	equ	0xFF6
 41806                           tablat	equ	0xFF5
 41807                           prodh	equ	0xFF4
 41808                           prodl	equ	0xFF3
 41809                           intcon	equ	0xFF2
 41810                           intcon2	equ	0xFF1
 41811                           intcon3	equ	0xFF0
 41812                           indf0	equ	0xFEF
 41813                           postinc0	equ	0xFEE
 41814                           fsr0h	equ	0xFEA
 41815                           fsr0l	equ	0xFE9
 41816                           wreg	equ	0xFE8
 41817                           postinc1	equ	0xFE6
 41818                           postdec1	equ	0xFE5
 41819                           plusw1	equ	0xFE3
 41820                           fsr1h	equ	0xFE2
 41821                           fsr1l	equ	0xFE1
 41822                           indf2	equ	0xFDF
 41823                           postinc2	equ	0xFDE
 41824                           postdec2	equ	0xFDD
 41825                           plusw2	equ	0xFDB
 41826                           fsr2h	equ	0xFDA
 41827                           fsr2l	equ	0xFD9
 41828                           status	equ	0xFD8
 41829                           
 41830 ;; *************** function _RADIO_ReleaseData *****************
 41831 ;; Defined at:
 41832 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 41833 ;; Parameters:    Size  Location     Type
 41834 ;;		None
 41835 ;; Auto vars:     Size  Location     Type
 41836 ;;		None
 41837 ;; Return value:  Size  Location     Type
 41838 ;;                  1    wreg      void 
 41839 ;; Registers used:
 41840 ;;		status,2, status,0
 41841 ;; Tracked objects:
 41842 ;;		On entry : 0/0
 41843 ;;		On exit  : 0/0
 41844 ;;		Unchanged: 0/0
 41845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41850 ;;Total ram usage:        0 bytes
 41851 ;; Hardware stack levels used:    1
 41852 ;; Hardware stack levels required when called:    7
 41853 ;; This function calls:
 41854 ;;		Nothing
 41855 ;; This function is called by:
 41856 ;;		_LORAWAN_ReceiveWindow1Callback
 41857 ;;		_LORAWAN_ReceiveWindow2Callback
 41858 ;;		_LORAWAN_EnterContinuousReceive
 41859 ;;		_LORAWAN_RxDone
 41860 ;; This function uses a non-reentrant model
 41861 ;;
 41862                           
 41863                           	psect	text225
 41864  00C684                     __ptext225:
 41865                           	opt stack 0
 41866  00C684                     _RADIO_ReleaseData:
 41867                           	opt stack 18
 41868                           
 41869                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 41870                           
 41871                           ; BSR set to: 2
 41872                           ;incstack = 0
 41873  00C684  0101               	movlb	1	; () banked
 41874  00C686  9558               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 41875                           
 41876                           ; BSR set to: 1
 41877  00C688  0012               	return		;funcret
 41878  00C68A                     __end_of_RADIO_ReleaseData:
 41879                           	opt stack 0
 41880                           tosu	equ	0xFFF
 41881                           tosh	equ	0xFFE
 41882                           tosl	equ	0xFFD
 41883                           pclath	equ	0xFFA
 41884                           tblptru	equ	0xFF8
 41885                           tblptrh	equ	0xFF7
 41886                           tblptrl	equ	0xFF6
 41887                           tablat	equ	0xFF5
 41888                           prodh	equ	0xFF4
 41889                           prodl	equ	0xFF3
 41890                           intcon	equ	0xFF2
 41891                           intcon2	equ	0xFF1
 41892                           intcon3	equ	0xFF0
 41893                           indf0	equ	0xFEF
 41894                           postinc0	equ	0xFEE
 41895                           fsr0h	equ	0xFEA
 41896                           fsr0l	equ	0xFE9
 41897                           wreg	equ	0xFE8
 41898                           postinc1	equ	0xFE6
 41899                           postdec1	equ	0xFE5
 41900                           plusw1	equ	0xFE3
 41901                           fsr1h	equ	0xFE2
 41902                           fsr1l	equ	0xFE1
 41903                           indf2	equ	0xFDF
 41904                           postinc2	equ	0xFDE
 41905                           postdec2	equ	0xFDD
 41906                           plusw2	equ	0xFDB
 41907                           fsr2h	equ	0xFDA
 41908                           fsr2l	equ	0xFD9
 41909                           status	equ	0xFD8
 41910                           
 41911 ;; *************** function _RADIO_ReceiveStop *****************
 41912 ;; Defined at:
 41913 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 41914 ;; Parameters:    Size  Location     Type
 41915 ;;		None
 41916 ;; Auto vars:     Size  Location     Type
 41917 ;;		None
 41918 ;; Return value:  Size  Location     Type
 41919 ;;                  1    wreg      void 
 41920 ;; Registers used:
 41921 ;;		wreg, status,2, status,0, cstack
 41922 ;; Tracked objects:
 41923 ;;		On entry : 0/0
 41924 ;;		On exit  : 0/0
 41925 ;;		Unchanged: 0/0
 41926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41931 ;;Total ram usage:        0 bytes
 41932 ;; Hardware stack levels used:    1
 41933 ;; Hardware stack levels required when called:   11
 41934 ;; This function calls:
 41935 ;;		_RADIO_WriteMode
 41936 ;; This function is called by:
 41937 ;;		_LORAWAN_Send
 41938 ;;		_LORAWAN_ReceiveWindow1Callback
 41939 ;;		_LORAWAN_ReceiveWindow2Callback
 41940 ;;		_LORAWAN_EnterContinuousReceive
 41941 ;;		_LORAWAN_SetClass
 41942 ;; This function uses a non-reentrant model
 41943 ;;
 41944                           
 41945                           	psect	text226
 41946  00BFBE                     __ptext226:
 41947                           	opt stack 0
 41948  00BFBE                     _RADIO_ReceiveStop:
 41949                           	opt stack 18
 41950                           
 41951                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 41952                           
 41953                           ; BSR set to: 1
 41954                           ;incstack = 0
 41955  00BFBE  0E02               	movlw	2
 41956  00BFC0  0101               	movlb	1	; () banked
 41957  00BFC2  1958               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 41958  00BFC4  A4D8               	btfss	status,2,c
 41959  00BFC6  0012               	return	
 41960                           
 41961                           ; BSR set to: 1
 41962                           ;radio_driver_SX1276.c: 954: {
 41963                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 41964  00BFC8  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 41965  00BFCC  0E00               	movlw	0
 41966  00BFCE  0100               	movlb	0	; () banked
 41967  00BFD0  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 41968  00BFD2  0E00               	movlw	0
 41969  00BFD4  ECDE  F043         	call	_RADIO_WriteMode
 41970                           
 41971                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 41972  00BFD8  0101               	movlb	1	; () banked
 41973  00BFDA  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 41974  00BFDC  0012               	return	
 41975  00BFDE                     __end_of_RADIO_ReceiveStop:
 41976                           	opt stack 0
 41977                           tosu	equ	0xFFF
 41978                           tosh	equ	0xFFE
 41979                           tosl	equ	0xFFD
 41980                           pclath	equ	0xFFA
 41981                           tblptru	equ	0xFF8
 41982                           tblptrh	equ	0xFF7
 41983                           tblptrl	equ	0xFF6
 41984                           tablat	equ	0xFF5
 41985                           prodh	equ	0xFF4
 41986                           prodl	equ	0xFF3
 41987                           intcon	equ	0xFF2
 41988                           intcon2	equ	0xFF1
 41989                           intcon3	equ	0xFF0
 41990                           indf0	equ	0xFEF
 41991                           postinc0	equ	0xFEE
 41992                           fsr0h	equ	0xFEA
 41993                           fsr0l	equ	0xFE9
 41994                           wreg	equ	0xFE8
 41995                           postinc1	equ	0xFE6
 41996                           postdec1	equ	0xFE5
 41997                           plusw1	equ	0xFE3
 41998                           fsr1h	equ	0xFE2
 41999                           fsr1l	equ	0xFE1
 42000                           indf2	equ	0xFDF
 42001                           postinc2	equ	0xFDE
 42002                           postdec2	equ	0xFDD
 42003                           plusw2	equ	0xFDB
 42004                           fsr2h	equ	0xFDA
 42005                           fsr2l	equ	0xFD9
 42006                           status	equ	0xFD8
 42007                           
 42008 ;; *************** function _RADIO_ReceiveStart *****************
 42009 ;; Defined at:
 42010 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 42011 ;; Parameters:    Size  Location     Type
 42012 ;;  rxWindowSize    2   81[BANK0 ] unsigned int 
 42013 ;; Auto vars:     Size  Location     Type
 42014 ;;		None
 42015 ;; Return value:  Size  Location     Type
 42016 ;;                  2   81[BANK0 ] enum E7038
 42017 ;; Registers used:
 42018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42019 ;; Tracked objects:
 42020 ;;		On entry : 0/0
 42021 ;;		On exit  : 0/0
 42022 ;;		Unchanged: 0/0
 42023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42025 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42026 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42027 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42028 ;;Total ram usage:       10 bytes
 42029 ;; Hardware stack levels used:    1
 42030 ;; Hardware stack levels required when called:   12
 42031 ;; This function calls:
 42032 ;;		_RADIO_RegisterWrite
 42033 ;;		_RADIO_WriteConfiguration
 42034 ;;		_RADIO_WriteMode
 42035 ;;		_SwTimerSetTimeout
 42036 ;;		_SwTimerStart
 42037 ;;		___lldiv
 42038 ;; This function is called by:
 42039 ;;		_LORAWAN_ReceiveWindow1Callback
 42040 ;;		_LORAWAN_ReceiveWindow2Callback
 42041 ;;		_LORAWAN_EnterContinuousReceive
 42042 ;; This function uses a non-reentrant model
 42043 ;;
 42044                           
 42045                           	psect	text227
 42046  005E00                     __ptext227:
 42047                           	opt stack 0
 42048  005E00                     _RADIO_ReceiveStart:
 42049                           	opt stack 13
 42050                           
 42051                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 42052                           
 42053                           ; BSR set to: 1
 42054                           ;incstack = 0
 42055  005E00  0101               	movlb	1	; () banked
 42056  005E02  A558               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 42057  005E04  D006               	goto	l849
 42058                           
 42059                           ; BSR set to: 1
 42060                           ;radio_driver_SX1276.c: 878: {
 42061                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 42062  005E06  0E80               	movlw	128
 42063  005E08  0100               	movlb	0	; () banked
 42064  005E0A  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 42065  005E0C  0E03               	movlw	3
 42066  005E0E  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 42067                           
 42068                           ; BSR set to: 0
 42069  005E10  0012               	return	
 42070  005E12                     l849:
 42071                           
 42072                           ;radio_driver_SX1276.c: 880: }
 42073                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 42074                           
 42075                           ; BSR set to: 0
 42076  005E12  C158  F0B3         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 42077  005E16  0E03               	movlw	3
 42078  005E18  0100               	movlb	0	; () banked
 42079  005E1A  17B3               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 42080  005E1C  B4D8               	btfsc	status,2,c
 42081  005E1E  D005               	goto	l851
 42082                           
 42083                           ; BSR set to: 0
 42084                           ;radio_driver_SX1276.c: 883: {
 42085                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 42086  005E20  0E80               	movlw	128
 42087  005E22  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 42088  005E24  0E04               	movlw	4
 42089  005E26  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 42090                           
 42091                           ; BSR set to: 0
 42092  005E28  0012               	return	
 42093  005E2A                     l851:
 42094                           
 42095                           ; BSR set to: 0
 42096                           ;radio_driver_SX1276.c: 885: }
 42097                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 42098                           
 42099                           ; BSR set to: 0
 42100  005E2A  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 42101  005E2C  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 42102  005E2E  A4D8               	btfss	status,2,c
 42103  005E30  D007               	goto	l852
 42104                           
 42105                           ; BSR set to: 0
 42106                           ;radio_driver_SX1276.c: 888: {
 42107                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 42108  005E32  0E00               	movlw	0
 42109  005E34  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 42110  005E36  0E04               	movlw	4
 42111  005E38  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 42112  005E3A  EC87  F012         	call	_RADIO_WriteConfiguration	;wreg free
 42113                           
 42114                           ;radio_driver_SX1276.c: 890: }
 42115  005E3E  D006               	goto	l853
 42116  005E40                     l852:
 42117                           
 42118                           ;radio_driver_SX1276.c: 891: else
 42119                           ;radio_driver_SX1276.c: 892: {
 42120                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 42121  005E40  C0B1  F0A6         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 42122  005E44  C0B2  F0A7         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 42123  005E48  EC87  F012         	call	_RADIO_WriteConfiguration	;wreg free
 42124  005E4C                     l853:
 42125                           
 42126                           ;radio_driver_SX1276.c: 894: }
 42127                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 42128  005E4C  0101               	movlb	1	; () banked
 42129  005E4E  054D               	decf	(_RadioConfiguration+24)& (0+255),w,b
 42130  005E50  A4D8               	btfss	status,2,c
 42131  005E52  D013               	goto	l854
 42132                           
 42133                           ; BSR set to: 1
 42134                           ;radio_driver_SX1276.c: 897: {
 42135                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 42136  005E54  0E01               	movlw	1
 42137  005E56  0100               	movlb	0	; () banked
 42138  005E58  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 42139  005E5A  0E22               	movlw	34
 42140  005E5C  ECEF  F05F         	call	_RADIO_RegisterWrite
 42141                           
 42142                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 42143  005E60  0E00               	movlw	0
 42144  005E62  0100               	movlb	0	; () banked
 42145  005E64  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 42146  005E66  0E40               	movlw	64
 42147  005E68  ECEF  F05F         	call	_RADIO_RegisterWrite
 42148                           
 42149                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 42150  005E6C  0E00               	movlw	0
 42151  005E6E  0100               	movlb	0	; () banked
 42152  005E70  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 42153  005E72  0E41               	movlw	65
 42154  005E74  ECEF  F05F         	call	_RADIO_RegisterWrite
 42155                           
 42156                           ;radio_driver_SX1276.c: 908: }
 42157  005E78  D016               	goto	l855
 42158  005E7A                     l854:
 42159                           
 42160                           ;radio_driver_SX1276.c: 909: else
 42161                           ;radio_driver_SX1276.c: 910: {
 42162                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 42163  005E7A  C169  F062         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 42164  005E7E  0E12               	movlw	18
 42165  005E80  ECEF  F05F         	call	_RADIO_RegisterWrite
 42166                           
 42167                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 42168  005E84  C16A  F062         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 42169  005E88  0E13               	movlw	19
 42170  005E8A  ECEF  F05F         	call	_RADIO_RegisterWrite
 42171                           
 42172                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 42173  005E8E  0E00               	movlw	0
 42174  005E90  0100               	movlb	0	; () banked
 42175  005E92  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 42176  005E94  0E40               	movlw	64
 42177  005E96  ECEF  F05F         	call	_RADIO_RegisterWrite
 42178                           
 42179                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 42180  005E9A  0E00               	movlw	0
 42181  005E9C  0100               	movlb	0	; () banked
 42182  005E9E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 42183  005EA0  0E41               	movlw	65
 42184  005EA2  ECEF  F05F         	call	_RADIO_RegisterWrite
 42185  005EA6                     l855:
 42186                           
 42187                           ;radio_driver_SX1276.c: 917: }
 42188                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 42189  005EA6  0101               	movlb	1	; () banked
 42190  005EA8  8358               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 42191                           
 42192                           ; BSR set to: 1
 42193                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 42194  005EAA  0EE7               	movlw	231
 42195  005EAC  1758               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 42196                           
 42197                           ; BSR set to: 1
 42198                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 42199  005EAE  0100               	movlb	0	; () banked
 42200  005EB0  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 42201  005EB2  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 42202  005EB4  A4D8               	btfss	status,2,c
 42203  005EB6  D008               	goto	l856
 42204                           
 42205                           ; BSR set to: 0
 42206                           ;radio_driver_SX1276.c: 925: {
 42207                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 42208  005EB8  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 42209  005EBC  0E00               	movlw	0
 42210  005EBE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 42211  005EC0  0E05               	movlw	5
 42212  005EC2  ECDE  F043         	call	_RADIO_WriteMode
 42213                           
 42214                           ;radio_driver_SX1276.c: 927: }
 42215  005EC6  D046               	goto	l859
 42216  005EC8                     l856:
 42217                           
 42218                           ;radio_driver_SX1276.c: 928: else
 42219                           ;radio_driver_SX1276.c: 929: {
 42220                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 42221  005EC8  0101               	movlb	1	; () banked
 42222  005ECA  054D               	decf	(_RadioConfiguration+24)& (0+255),w,b
 42223  005ECC  A4D8               	btfss	status,2,c
 42224  005ECE  D009               	goto	l858
 42225                           
 42226                           ; BSR set to: 1
 42227                           ;radio_driver_SX1276.c: 931: {
 42228                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 42229  005ED0  0E01               	movlw	1
 42230  005ED2  0100               	movlb	0	; () banked
 42231  005ED4  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 42232  005ED6  0E00               	movlw	0
 42233  005ED8  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 42234  005EDA  0E06               	movlw	6
 42235  005EDC  ECDE  F043         	call	_RADIO_WriteMode
 42236                           
 42237                           ;radio_driver_SX1276.c: 933: }
 42238  005EE0  D039               	goto	l859
 42239  005EE2                     l858:
 42240                           
 42241                           ;radio_driver_SX1276.c: 934: else
 42242                           ;radio_driver_SX1276.c: 935: {
 42243                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 42244  005EE2  0E00               	movlw	0
 42245  005EE4  0100               	movlb	0	; () banked
 42246  005EE6  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 42247  005EE8  0E00               	movlw	0
 42248  005EEA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 42249  005EEC  0E05               	movlw	5
 42250  005EEE  ECDE  F043         	call	_RADIO_WriteMode
 42251                           
 42252                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 42253  005EF2  0100               	movlb	0	; () banked
 42254  005EF4  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 42255  005EF6  6FB3               	movwf	??_RADIO_ReceiveStart& (0+255),b
 42256  005EF8  51B2               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 42257  005EFA  6FB4               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 42258  005EFC  6BB5               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 42259  005EFE  6BB6               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 42260  005F00  0E0C               	movlw	12
 42261  005F02                     u20475:
 42262  005F02  90D8               	bcf	status,0,c
 42263  005F04  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 42264  005F06  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 42265  005F08  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 42266  005F0A  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 42267  005F0C  2EE8               	decfsz	wreg,f,c
 42268  005F0E  D7F9               	goto	u20475
 42269  005F10  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 42270  005F14  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 42271  005F18  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 42272  005F1C  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 42273  005F20  0E7D               	movlw	125
 42274  005F22  6F64               	movwf	___lldiv@divisor& (0+255),b
 42275  005F24  0E00               	movlw	0
 42276  005F26  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 42277  005F28  0E00               	movlw	0
 42278  005F2A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 42279  005F2C  0E00               	movlw	0
 42280  005F2E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 42281  005F30  ECB0  F050         	call	___lldiv	;wreg free
 42282  005F34  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 42283  005F38  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 42284  005F3C  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 42285  005F40  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 42286  005F44  0101               	movlb	1	; () banked
 42287  005F46  515D               	movf	(_RadioConfiguration+40)& (0+255),w,b
 42288  005F48  ECD7  F05A         	call	_SwTimerSetTimeout
 42289                           
 42290                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 42291  005F4C  0101               	movlb	1	; () banked
 42292  005F4E  515D               	movf	(_RadioConfiguration+40)& (0+255),w,b
 42293  005F50  EC5C  F04D         	call	_SwTimerStart
 42294  005F54                     l859:
 42295                           
 42296                           ;radio_driver_SX1276.c: 939: }
 42297                           ;radio_driver_SX1276.c: 940: }
 42298                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 42299  005F54  0101               	movlb	1	; () banked
 42300  005F56  515F               	movf	(_RadioConfiguration+42)& (0+255),w,b
 42301  005F58  1160               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 42302  005F5A  1161               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 42303  005F5C  1162               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 42304  005F5E  B4D8               	btfsc	status,2,c
 42305  005F60  D061               	goto	l860
 42306                           
 42307                           ; BSR set to: 1
 42308                           ;radio_driver_SX1276.c: 943: {
 42309                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 42310  005F62  5162               	movf	(_RadioConfiguration+45)& (0+255),w,b
 42311  005F64  E107               	bnz	u20490
 42312  005F66  295F               	incf	(_RadioConfiguration+42)& (0+255),w,b
 42313  005F68  0EFF               	movlw	255
 42314  005F6A  5960               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 42315  005F6C  0E0F               	movlw	15
 42316  005F6E  5961               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 42317  005F70  A0D8               	btfss	status,0,c
 42318  005F72  D01D               	goto	l862
 42319  005F74                     u20490:
 42320                           
 42321                           ; BSR set to: 1
 42322  005F74  C15F  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 42323  005F78  C160  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 42324  005F7C  C161  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 42325  005F80  C162  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 42326  005F84  0E7D               	movlw	125
 42327  005F86  0100               	movlb	0	; () banked
 42328  005F88  6F64               	movwf	___lldiv@divisor& (0+255),b
 42329  005F8A  0E00               	movlw	0
 42330  005F8C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 42331  005F8E  0E00               	movlw	0
 42332  005F90  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 42333  005F92  0E00               	movlw	0
 42334  005F94  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 42335  005F96  ECB0  F050         	call	___lldiv	;wreg free
 42336  005F9A  0E0C               	movlw	12
 42337  005F9C                     u20505:
 42338  005F9C  90D8               	bcf	status,0,c
 42339  005F9E  0100               	movlb	0	; () banked
 42340  005FA0  3760               	rlcf	?___lldiv& (0+255),f,b
 42341  005FA2  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 42342  005FA4  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 42343  005FA6  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 42344  005FA8  2EE8               	decfsz	wreg,f,c
 42345  005FAA  D7F8               	goto	u20505
 42346  005FAC  D023               	goto	L21
 42347  005FAE                     l862:
 42348                           
 42349                           ; BSR set to: 0
 42350  005FAE  C15F  F0B3         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 42351  005FB2  C160  F0B4         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 42352  005FB6  C161  F0B5         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 42353  005FBA  C162  F0B6         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 42354  005FBE  0E0C               	movlw	12
 42355  005FC0                     u20515:
 42356  005FC0  90D8               	bcf	status,0,c
 42357  005FC2  0100               	movlb	0	; () banked
 42358  005FC4  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 42359  005FC6  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 42360  005FC8  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 42361  005FCA  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 42362  005FCC  2EE8               	decfsz	wreg,f,c
 42363  005FCE  D7F8               	goto	u20515
 42364  005FD0  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 42365  005FD4  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 42366  005FD8  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 42367  005FDC  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 42368  005FE0  0E7D               	movlw	125
 42369  005FE2  6F64               	movwf	___lldiv@divisor& (0+255),b
 42370  005FE4  0E00               	movlw	0
 42371  005FE6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 42372  005FE8  0E00               	movlw	0
 42373  005FEA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 42374  005FEC  0E00               	movlw	0
 42375  005FEE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 42376  005FF0  ECB0  F050         	call	___lldiv	;wreg free
 42377  005FF4                     L21:
 42378  005FF4  C060  F0B7         	movff	?___lldiv,_RADIO_ReceiveStart$1177
 42379  005FF8  C061  F0B8         	movff	?___lldiv+1,_RADIO_ReceiveStart$1177+1
 42380  005FFC  C062  F0B9         	movff	?___lldiv+2,_RADIO_ReceiveStart$1177+2
 42381  006000  C063  F0BA         	movff	?___lldiv+3,_RADIO_ReceiveStart$1177+3
 42382  006004  C0B7  F06D         	movff	_RADIO_ReceiveStart$1177,SwTimerSetTimeout@timeout
 42383  006008  C0B8  F06E         	movff	_RADIO_ReceiveStart$1177+1,SwTimerSetTimeout@timeout+1
 42384  00600C  C0B9  F06F         	movff	_RADIO_ReceiveStart$1177+2,SwTimerSetTimeout@timeout+2
 42385  006010  C0BA  F070         	movff	_RADIO_ReceiveStart$1177+3,SwTimerSetTimeout@timeout+3
 42386  006014  0101               	movlb	1	; () banked
 42387  006016  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 42388  006018  ECD7  F05A         	call	_SwTimerSetTimeout
 42389                           
 42390                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 42391  00601C  0101               	movlb	1	; () banked
 42392  00601E  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 42393  006020  EC5C  F04D         	call	_SwTimerStart
 42394  006024                     l860:
 42395                           
 42396                           ;radio_driver_SX1276.c: 946: }
 42397                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 42398  006024  0E00               	movlw	0
 42399  006026  0100               	movlb	0	; () banked
 42400  006028  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 42401  00602A  0E00               	movlw	0
 42402  00602C  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 42403  00602E  0012               	return	
 42404  006030                     __end_of_RADIO_ReceiveStart:
 42405                           	opt stack 0
 42406                           tosu	equ	0xFFF
 42407                           tosh	equ	0xFFE
 42408                           tosl	equ	0xFFD
 42409                           pclath	equ	0xFFA
 42410                           tblptru	equ	0xFF8
 42411                           tblptrh	equ	0xFF7
 42412                           tblptrl	equ	0xFF6
 42413                           tablat	equ	0xFF5
 42414                           prodh	equ	0xFF4
 42415                           prodl	equ	0xFF3
 42416                           intcon	equ	0xFF2
 42417                           intcon2	equ	0xFF1
 42418                           intcon3	equ	0xFF0
 42419                           indf0	equ	0xFEF
 42420                           postinc0	equ	0xFEE
 42421                           fsr0h	equ	0xFEA
 42422                           fsr0l	equ	0xFE9
 42423                           wreg	equ	0xFE8
 42424                           postinc1	equ	0xFE6
 42425                           postdec1	equ	0xFE5
 42426                           plusw1	equ	0xFE3
 42427                           fsr1h	equ	0xFE2
 42428                           fsr1l	equ	0xFE1
 42429                           indf2	equ	0xFDF
 42430                           postinc2	equ	0xFDE
 42431                           postdec2	equ	0xFDD
 42432                           plusw2	equ	0xFDB
 42433                           fsr2h	equ	0xFDA
 42434                           fsr2l	equ	0xFD9
 42435                           status	equ	0xFD8
 42436                           
 42437 ;; *************** function _ConfigureRadioRx *****************
 42438 ;; Defined at:
 42439 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 42440 ;; Parameters:    Size  Location     Type
 42441 ;;  dataRate        1    wreg     unsigned char 
 42442 ;;  freq            4   19[BANK0 ] unsigned long 
 42443 ;; Auto vars:     Size  Location     Type
 42444 ;;  dataRate        1   23[BANK0 ] unsigned char 
 42445 ;; Return value:  Size  Location     Type
 42446 ;;                  1    wreg      void 
 42447 ;; Registers used:
 42448 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42449 ;; Tracked objects:
 42450 ;;		On entry : 0/0
 42451 ;;		On exit  : 0/0
 42452 ;;		Unchanged: 0/0
 42453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42454 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42455 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42457 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42458 ;;Total ram usage:        5 bytes
 42459 ;; Hardware stack levels used:    1
 42460 ;; Hardware stack levels required when called:   10
 42461 ;; This function calls:
 42462 ;;		_ConfigureRadio
 42463 ;;		_RADIO_SetCRC
 42464 ;;		_RADIO_SetIQInverted
 42465 ;; This function is called by:
 42466 ;;		_LORAWAN_ReceiveWindow1Callback
 42467 ;;		_LORAWAN_ReceiveWindow2Callback
 42468 ;;		_LORAWAN_EnterContinuousReceive
 42469 ;; This function uses a non-reentrant model
 42470 ;;
 42471                           
 42472                           	psect	text228
 42473  00BC62                     __ptext228:
 42474                           	opt stack 0
 42475  00BC62                     _ConfigureRadioRx:
 42476                           	opt stack 15
 42477                           
 42478                           ; BSR set to: 0
 42479                           ;incstack = 0
 42480                           ;ConfigureRadioRx@dataRate stored from wreg
 42481  00BC62  0100               	movlb	0	; () banked
 42482  00BC64  6F77               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 42483                           
 42484                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 42485  00BC66  C073  F06E         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 42486  00BC6A  C074  F06F         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 42487  00BC6E  C075  F070         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 42488  00BC72  C076  F071         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 42489  00BC76  0100               	movlb	0	; () banked
 42490  00BC78  5177               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 42491  00BC7A  EC64  F04C         	call	_ConfigureRadio
 42492                           
 42493                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 42494  00BC7E  0E00               	movlw	0
 42495  00BC80  ECE7  F062         	call	_RADIO_SetCRC
 42496                           
 42497                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 42498  00BC84  0E01               	movlw	1
 42499  00BC86  ECE2  F062         	call	_RADIO_SetIQInverted
 42500  00BC8A  0012               	return		;funcret
 42501  00BC8C                     __end_of_ConfigureRadioRx:
 42502                           	opt stack 0
 42503                           tosu	equ	0xFFF
 42504                           tosh	equ	0xFFE
 42505                           tosl	equ	0xFFD
 42506                           pclath	equ	0xFFA
 42507                           tblptru	equ	0xFF8
 42508                           tblptrh	equ	0xFF7
 42509                           tblptrl	equ	0xFF6
 42510                           tablat	equ	0xFF5
 42511                           prodh	equ	0xFF4
 42512                           prodl	equ	0xFF3
 42513                           intcon	equ	0xFF2
 42514                           intcon2	equ	0xFF1
 42515                           intcon3	equ	0xFF0
 42516                           indf0	equ	0xFEF
 42517                           postinc0	equ	0xFEE
 42518                           fsr0h	equ	0xFEA
 42519                           fsr0l	equ	0xFE9
 42520                           wreg	equ	0xFE8
 42521                           postinc1	equ	0xFE6
 42522                           postdec1	equ	0xFE5
 42523                           plusw1	equ	0xFE3
 42524                           fsr1h	equ	0xFE2
 42525                           fsr1l	equ	0xFE1
 42526                           indf2	equ	0xFDF
 42527                           postinc2	equ	0xFDE
 42528                           postdec2	equ	0xFDD
 42529                           plusw2	equ	0xFDB
 42530                           fsr2h	equ	0xFDA
 42531                           fsr2l	equ	0xFD9
 42532                           status	equ	0xFD8
 42533                           
 42534 ;; *************** function _INTERRUPT_GetDioStatus *****************
 42535 ;; Defined at:
 42536 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42537 ;; Parameters:    Size  Location     Type
 42538 ;;		None
 42539 ;; Auto vars:     Size  Location     Type
 42540 ;;  a               1    0[BANK0 ] unsigned char 
 42541 ;; Return value:  Size  Location     Type
 42542 ;;                  1    wreg      unsigned char 
 42543 ;; Registers used:
 42544 ;;		wreg, status,2
 42545 ;; Tracked objects:
 42546 ;;		On entry : 0/0
 42547 ;;		On exit  : 0/0
 42548 ;;		Unchanged: 0/0
 42549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42551 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42553 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42554 ;;Total ram usage:        1 bytes
 42555 ;; Hardware stack levels used:    1
 42556 ;; Hardware stack levels required when called:    7
 42557 ;; This function calls:
 42558 ;;		Nothing
 42559 ;; This function is called by:
 42560 ;;		_LORAWAN_Mainloop
 42561 ;; This function uses a non-reentrant model
 42562 ;;
 42563                           
 42564                           	psect	text229
 42565  00C354                     __ptext229:
 42566                           	opt stack 0
 42567  00C354                     _INTERRUPT_GetDioStatus:
 42568                           	opt stack 22
 42569                           
 42570                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 42571                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 42572                           
 42573                           ;incstack = 0
 42574  00C354  9EF2               	bcf	intcon,7,c	;volatile
 42575                           
 42576                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 42577  00C356  C134  F060         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 42578                           
 42579                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 42580  00C35A  0E00               	movlw	0
 42581  00C35C  0101               	movlb	1	; () banked
 42582  00C35E  6F34               	movwf	_dioStatus& (0+255),b	;volatile
 42583                           
 42584                           ; BSR set to: 1
 42585                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 42586  00C360  8EF2               	bsf	intcon,7,c	;volatile
 42587                           
 42588                           ;interrupt_manager_lora_addons.c: 55: return a;
 42589  00C362  0100               	movlb	0	; () banked
 42590  00C364  5160               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 42591  00C366  0012               	return	
 42592  00C368                     __end_of_INTERRUPT_GetDioStatus:
 42593                           	opt stack 0
 42594                           tosu	equ	0xFFF
 42595                           tosh	equ	0xFFE
 42596                           tosl	equ	0xFFD
 42597                           pclath	equ	0xFFA
 42598                           tblptru	equ	0xFF8
 42599                           tblptrh	equ	0xFF7
 42600                           tblptrl	equ	0xFF6
 42601                           tablat	equ	0xFF5
 42602                           prodh	equ	0xFF4
 42603                           prodl	equ	0xFF3
 42604                           intcon	equ	0xFF2
 42605                           intcon2	equ	0xFF1
 42606                           intcon3	equ	0xFF0
 42607                           indf0	equ	0xFEF
 42608                           postinc0	equ	0xFEE
 42609                           fsr0h	equ	0xFEA
 42610                           fsr0l	equ	0xFE9
 42611                           wreg	equ	0xFE8
 42612                           postinc1	equ	0xFE6
 42613                           postdec1	equ	0xFE5
 42614                           plusw1	equ	0xFE3
 42615                           fsr1h	equ	0xFE2
 42616                           fsr1l	equ	0xFE1
 42617                           indf2	equ	0xFDF
 42618                           postinc2	equ	0xFDE
 42619                           postdec2	equ	0xFDD
 42620                           plusw2	equ	0xFDB
 42621                           fsr2h	equ	0xFDA
 42622                           fsr2l	equ	0xFD9
 42623                           status	equ	0xFD8
 42624                           
 42625 ;; *************** function _LORAWAN_Join *****************
 42626 ;; Defined at:
 42627 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 42628 ;; Parameters:    Size  Location     Type
 42629 ;;  activationTy    1    wreg     enum E7213
 42630 ;; Auto vars:     Size  Location     Type
 42631 ;;  activationTy    1  125[BANK0 ] enum E7213
 42632 ;;  result          1  124[BANK0 ] enum E7190
 42633 ;;  bufferIndex     1  123[BANK0 ] unsigned char 
 42634 ;; Return value:  Size  Location     Type
 42635 ;;                  1    wreg      enum E7190
 42636 ;; Registers used:
 42637 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42638 ;; Tracked objects:
 42639 ;;		On entry : 0/0
 42640 ;;		On exit  : 0/0
 42641 ;;		Unchanged: 0/0
 42642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42644 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42646 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42647 ;;Total ram usage:        3 bytes
 42648 ;; Hardware stack levels used:    1
 42649 ;; Hardware stack levels required when called:   14
 42650 ;; This function calls:
 42651 ;;		_PrepareJoinRequestFrame
 42652 ;;		_RADIO_Transmit
 42653 ;;		_SelectChannelForTransmission
 42654 ;;		_SwTimerSetTimeout
 42655 ;;		_SwTimerStart
 42656 ;;		_UpdateJoinInProgress
 42657 ;; This function is called by:
 42658 ;;		_main
 42659 ;; This function uses a non-reentrant model
 42660 ;;
 42661                           
 42662                           	psect	text230
 42663  009970                     __ptext230:
 42664                           	opt stack 0
 42665  009970                     _LORAWAN_Join:
 42666                           	opt stack 16
 42667                           
 42668                           ; BSR set to: 0
 42669                           ;incstack = 0
 42670                           ;LORAWAN_Join@activationTypeNew stored from wreg
 42671  009970  0100               	movlb	0	; () banked
 42672  009972  6FDD               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 42673                           
 42674                           ;lorawan.c: 117: uint8_t bufferIndex;
 42675                           ;lorawan.c: 118: LorawanError_t result;
 42676                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 42677  009974  0102               	movlb	2	; () banked
 42678  009976  B107               	btfsc	(_loRa+3)& (0+255),0,b
 42679  009978  0012               	return	
 42680                           
 42681                           ; BSR set to: 2
 42682                           ;lorawan.c: 123: }
 42683                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 42684                           
 42685                           ; BSR set to: 2
 42686                           ;lorawan.c: 121: {
 42687                           ;lorawan.c: 122: return MAC_PAUSED;
 42688                           ;	Return value of _LORAWAN_Join is never used
 42689  00997A  BF06               	btfsc	(_loRa+2)& (0+255),7,b
 42690  00997C  0012               	return	
 42691                           
 42692                           ; BSR set to: 2
 42693                           ;lorawan.c: 128: }
 42694                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 42695                           
 42696                           ; BSR set to: 2
 42697                           
 42698                           ; BSR set to: 2
 42699                           ;lorawan.c: 126: {
 42700                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
 42701                           ;	Return value of _LORAWAN_Join is never used
 42702  00997E  5106               	movf	(_loRa+2)& (0+255),w,b
 42703  009980  0B0F               	andlw	15
 42704  009982  0900               	iorlw	0
 42705  009984  A4D8               	btfss	status,2,c
 42706  009986  0012               	return	
 42707                           
 42708                           ; BSR set to: 2
 42709                           ;lorawan.c: 133: }
 42710                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 42711                           
 42712                           ; BSR set to: 2
 42713                           ;lorawan.c: 131: {
 42714                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 42715                           ;	Return value of _LORAWAN_Join is never used
 42716  009988  C0DD  F221         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 42717                           
 42718                           ; BSR set to: 2
 42719                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 42720  00998C  0100               	movlb	0	; () banked
 42721  00998E  51DD               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 42722  009990  A4D8               	btfss	status,2,c
 42723  009992  D024               	goto	l1831
 42724                           
 42725                           ; BSR set to: 0
 42726                           ;lorawan.c: 138: {
 42727                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 42728  009994  0102               	movlb	2	; () banked
 42729  009996  A1A9               	btfss	(_loRa+165)& (0+255),0,b
 42730  009998  0012               	return	
 42731                           
 42732                           ; BSR set to: 2
 42733  00999A  A3A9               	btfss	(_loRa+165)& (0+255),1,b
 42734  00999C  0012               	return	
 42735                           
 42736                           ; BSR set to: 2
 42737  00999E  A7A9               	btfss	(_loRa+165)& (0+255),3,b
 42738  0099A0  0012               	return	
 42739                           
 42740                           ; BSR set to: 2
 42741                           ;lorawan.c: 144: else
 42742                           ;lorawan.c: 145: {
 42743                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 42744                           
 42745                           ; BSR set to: 2
 42746                           
 42747                           ; BSR set to: 2
 42748                           ;lorawan.c: 143: }
 42749                           
 42750                           ; BSR set to: 2
 42751                           ;lorawan.c: 141: {
 42752                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
 42753                           ;	Return value of _LORAWAN_Join is never used
 42754  0099A2  EC78  F036         	call	_PrepareJoinRequestFrame	;wreg free
 42755  0099A6  0100               	movlb	0	; () banked
 42756  0099A8  6FDB               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 42757                           
 42758                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 42759  0099AA  0E00               	movlw	0
 42760  0099AC  EC7D  F053         	call	_SelectChannelForTransmission
 42761  0099B0  0100               	movlb	0	; () banked
 42762  0099B2  6FDC               	movwf	LORAWAN_Join@result& (0+255),b
 42763                           
 42764                           ; BSR set to: 0
 42765                           ;lorawan.c: 149: if (result == OK)
 42766  0099B4  51DC               	movf	LORAWAN_Join@result& (0+255),w,b
 42767  0099B6  A4D8               	btfss	status,2,c
 42768  0099B8  0012               	return	
 42769                           
 42770                           ; BSR set to: 0
 42771                           ;lorawan.c: 150: {
 42772                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 42773  0099BA  0E20               	movlw	low _macBuffer
 42774  0099BC  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 42775  0099BE  0E05               	movlw	high _macBuffer
 42776  0099C0  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 42777  0099C2  C0DB  F0B3         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 42778  0099C6  ECE4  F02D         	call	_RADIO_Transmit	;wreg free
 42779  0099CA  0100               	movlb	0	; () banked
 42780  0099CC  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 42781  0099CE  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 42782  0099D0  A4D8               	btfss	status,2,c
 42783  0099D2  0012               	return	
 42784                           
 42785                           ; BSR set to: 0
 42786                           ;lorawan.c: 152: {
 42787                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 42788  0099D4  0E01               	movlw	1
 42789  0099D6  ECE0  F060         	call	_UpdateJoinInProgress
 42790                           
 42791                           ;lorawan.c: 164: }
 42792                           ;lorawan.c: 165: }
 42793                           ;lorawan.c: 166: }
 42794                           
 42795                           ;lorawan.c: 161: else
 42796                           ;lorawan.c: 162: {
 42797                           ;lorawan.c: 163: return result;
 42798                           ;	Return value of _LORAWAN_Join is never used
 42799                           
 42800                           ;lorawan.c: 159: }
 42801                           ;lorawan.c: 160: }
 42802                           
 42803                           ;lorawan.c: 156: else
 42804                           ;lorawan.c: 157: {
 42805                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 42806                           ;	Return value of _LORAWAN_Join is never used
 42807                           
 42808                           ;lorawan.c: 155: }
 42809                           
 42810                           ;lorawan.c: 154: return OK;
 42811                           ;	Return value of _LORAWAN_Join is never used
 42812  0099DA  0012               	return	
 42813  0099DC                     l1831:
 42814                           
 42815                           ; BSR set to: 0
 42816                           ;lorawan.c: 167: else
 42817                           ;lorawan.c: 168: {
 42818                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 42819  0099DC  0102               	movlb	2	; () banked
 42820  0099DE  ABA9               	btfss	(_loRa+165)& (0+255),5,b
 42821  0099E0  0012               	return	
 42822                           
 42823                           ; BSR set to: 2
 42824  0099E2  A9A9               	btfss	(_loRa+165)& (0+255),4,b
 42825  0099E4  0012               	return	
 42826                           
 42827                           ; BSR set to: 2
 42828  0099E6  A5A9               	btfss	(_loRa+165)& (0+255),2,b
 42829  0099E8  0012               	return	
 42830                           
 42831                           ; BSR set to: 2
 42832                           ;lorawan.c: 174: else
 42833                           ;lorawan.c: 175: {
 42834                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 42835                           
 42836                           ; BSR set to: 2
 42837                           
 42838                           ; BSR set to: 2
 42839                           ;lorawan.c: 173: }
 42840                           
 42841                           ; BSR set to: 2
 42842                           ;lorawan.c: 171: {
 42843                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
 42844                           ;	Return value of _LORAWAN_Join is never used
 42845  0099EA  0E07               	movlw	7
 42846  0099EC  ECE0  F060         	call	_UpdateJoinInProgress
 42847                           
 42848                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 42849  0099F0  0E8F               	movlw	143
 42850  0099F2  0100               	movlb	0	; () banked
 42851  0099F4  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 42852  0099F6  0E02               	movlw	2
 42853  0099F8  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 42854  0099FA  0E00               	movlw	0
 42855  0099FC  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 42856  0099FE  0E00               	movlw	0
 42857  009A00  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 42858  009A02  0102               	movlb	2	; () banked
 42859  009A04  51F7               	movf	(_loRa+243)& (0+255),w,b
 42860  009A06  ECD7  F05A         	call	_SwTimerSetTimeout
 42861                           
 42862                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 42863  009A0A  0102               	movlb	2	; () banked
 42864  009A0C  51F7               	movf	(_loRa+243)& (0+255),w,b
 42865  009A0E  EC5C  F04D         	call	_SwTimerStart
 42866                           
 42867                           ;lorawan.c: 180: return OK;
 42868                           ;	Return value of _LORAWAN_Join is never used
 42869  009A12  0012               	return	
 42870  009A14                     __end_of_LORAWAN_Join:
 42871                           	opt stack 0
 42872                           tosu	equ	0xFFF
 42873                           tosh	equ	0xFFE
 42874                           tosl	equ	0xFFD
 42875                           pclath	equ	0xFFA
 42876                           tblptru	equ	0xFF8
 42877                           tblptrh	equ	0xFF7
 42878                           tblptrl	equ	0xFF6
 42879                           tablat	equ	0xFF5
 42880                           prodh	equ	0xFF4
 42881                           prodl	equ	0xFF3
 42882                           intcon	equ	0xFF2
 42883                           intcon2	equ	0xFF1
 42884                           intcon3	equ	0xFF0
 42885                           indf0	equ	0xFEF
 42886                           postinc0	equ	0xFEE
 42887                           fsr0h	equ	0xFEA
 42888                           fsr0l	equ	0xFE9
 42889                           wreg	equ	0xFE8
 42890                           postinc1	equ	0xFE6
 42891                           postdec1	equ	0xFE5
 42892                           plusw1	equ	0xFE3
 42893                           fsr1h	equ	0xFE2
 42894                           fsr1l	equ	0xFE1
 42895                           indf2	equ	0xFDF
 42896                           postinc2	equ	0xFDE
 42897                           postdec2	equ	0xFDD
 42898                           plusw2	equ	0xFDB
 42899                           fsr2h	equ	0xFDA
 42900                           fsr2l	equ	0xFD9
 42901                           status	equ	0xFD8
 42902                           
 42903 ;; *************** function _UpdateJoinInProgress *****************
 42904 ;; Defined at:
 42905 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 42906 ;; Parameters:    Size  Location     Type
 42907 ;;  state           1    wreg     unsigned char 
 42908 ;; Auto vars:     Size  Location     Type
 42909 ;;  state           1    0[BANK0 ] unsigned char 
 42910 ;; Return value:  Size  Location     Type
 42911 ;;                  1    wreg      void 
 42912 ;; Registers used:
 42913 ;;		wreg, status,2, status,0
 42914 ;; Tracked objects:
 42915 ;;		On entry : 0/0
 42916 ;;		On exit  : 0/0
 42917 ;;		Unchanged: 0/0
 42918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42920 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42922 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42923 ;;Total ram usage:        1 bytes
 42924 ;; Hardware stack levels used:    1
 42925 ;; Hardware stack levels required when called:    7
 42926 ;; This function calls:
 42927 ;;		Nothing
 42928 ;; This function is called by:
 42929 ;;		_LORAWAN_Join
 42930 ;; This function uses a non-reentrant model
 42931 ;;
 42932                           
 42933                           	psect	text231
 42934  00C1C0                     __ptext231:
 42935                           	opt stack 0
 42936  00C1C0                     _UpdateJoinInProgress:
 42937                           	opt stack 22
 42938                           
 42939                           ;incstack = 0
 42940                           ;UpdateJoinInProgress@state stored from wreg
 42941  00C1C0  0100               	movlb	0	; () banked
 42942  00C1C2  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
 42943                           
 42944                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 42945  00C1C4  0102               	movlb	2	; () banked
 42946  00C1C6  9906               	bcf	(_loRa+2)& (0+255),4,b
 42947                           
 42948                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 42949  00C1C8  8504               	bsf	_loRa& (0+255),2,b
 42950                           
 42951                           ; BSR set to: 2
 42952                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 42953  00C1CA  5106               	movf	(_loRa+2)& (0+255),w,b
 42954  00C1CC  0100               	movlb	0	; () banked
 42955  00C1CE  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 42956  00C1D0  0BF0               	andlw	-16
 42957  00C1D2  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 42958  00C1D4  0102               	movlb	2	; () banked
 42959  00C1D6  6F06               	movwf	(_loRa+2)& (0+255),b
 42960                           
 42961                           ; BSR set to: 2
 42962  00C1D8  0012               	return		;funcret
 42963  00C1DA                     __end_of_UpdateJoinInProgress:
 42964                           	opt stack 0
 42965                           tosu	equ	0xFFF
 42966                           tosh	equ	0xFFE
 42967                           tosl	equ	0xFFD
 42968                           pclath	equ	0xFFA
 42969                           tblptru	equ	0xFF8
 42970                           tblptrh	equ	0xFF7
 42971                           tblptrl	equ	0xFF6
 42972                           tablat	equ	0xFF5
 42973                           prodh	equ	0xFF4
 42974                           prodl	equ	0xFF3
 42975                           intcon	equ	0xFF2
 42976                           intcon2	equ	0xFF1
 42977                           intcon3	equ	0xFF0
 42978                           indf0	equ	0xFEF
 42979                           postinc0	equ	0xFEE
 42980                           fsr0h	equ	0xFEA
 42981                           fsr0l	equ	0xFE9
 42982                           wreg	equ	0xFE8
 42983                           postinc1	equ	0xFE6
 42984                           postdec1	equ	0xFE5
 42985                           plusw1	equ	0xFE3
 42986                           fsr1h	equ	0xFE2
 42987                           fsr1l	equ	0xFE1
 42988                           indf2	equ	0xFDF
 42989                           postinc2	equ	0xFDE
 42990                           postdec2	equ	0xFDD
 42991                           plusw2	equ	0xFDB
 42992                           fsr2h	equ	0xFDA
 42993                           fsr2l	equ	0xFD9
 42994                           status	equ	0xFD8
 42995                           
 42996 ;; *************** function _SelectChannelForTransmission *****************
 42997 ;; Defined at:
 42998 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 42999 ;; Parameters:    Size  Location     Type
 43000 ;;  transmission    1    wreg     unsigned char 
 43001 ;; Auto vars:     Size  Location     Type
 43002 ;;  transmission    1   91[BANK0 ] unsigned char 
 43003 ;;  channelIndex    1   93[BANK0 ] unsigned char 
 43004 ;;  result          1   92[BANK0 ] enum E7249
 43005 ;; Return value:  Size  Location     Type
 43006 ;;                  1    wreg      enum E7249
 43007 ;; Registers used:
 43008 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43009 ;; Tracked objects:
 43010 ;;		On entry : 0/0
 43011 ;;		On exit  : 0/0
 43012 ;;		Unchanged: 0/0
 43013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43015 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43017 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43018 ;;Total ram usage:        3 bytes
 43019 ;; Hardware stack levels used:    1
 43020 ;; Hardware stack levels required when called:   11
 43021 ;; This function calls:
 43022 ;;		_ConfigureRadioTx
 43023 ;;		_SearchAvailableChannel
 43024 ;; This function is called by:
 43025 ;;		_LORAWAN_RxTimeout
 43026 ;;		_LORAWAN_Join
 43027 ;;		_LORAWAN_Send
 43028 ;;		_AckRetransmissionCallback
 43029 ;;		_UnconfirmedTransmissionCallback
 43030 ;; This function uses a non-reentrant model
 43031 ;;
 43032                           
 43033                           	psect	text232
 43034  00A6FA                     __ptext232:
 43035                           	opt stack 0
 43036  00A6FA                     _SelectChannelForTransmission:
 43037                           	opt stack 18
 43038                           
 43039                           ; BSR set to: 2
 43040                           ;incstack = 0
 43041                           ;SelectChannelForTransmission@transmissionType stored from wreg
 43042  00A6FA  0100               	movlb	0	; () banked
 43043  00A6FC  6FBB               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 43044                           
 43045                           ;lorawan_eu.c: 921: LorawanError_t result = OK;
 43046  00A6FE  0E00               	movlw	0
 43047  00A700  0100               	movlb	0	; () banked
 43048  00A702  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 43049                           
 43050                           ; BSR set to: 0
 43051                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 43052                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 43053  00A704  C0BB  F0AF         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 43054  00A708  0EBD               	movlw	low SelectChannelForTransmission@channelIndex
 43055  00A70A  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 43056  00A70C  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 43057  00A70E  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 43058  00A710  0E10               	movlw	16
 43059  00A712  EC99  F040         	call	_SearchAvailableChannel
 43060  00A716  0100               	movlb	0	; () banked
 43061  00A718  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 43062                           
 43063                           ; BSR set to: 0
 43064                           ;lorawan_eu.c: 926: if (result == OK)
 43065  00A71A  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 43066  00A71C  A4D8               	btfss	status,2,c
 43067  00A71E  D020               	goto	l1517
 43068                           
 43069                           ; BSR set to: 0
 43070                           ;lorawan_eu.c: 927: {
 43071                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 43072  00A720  C0BD  F2DE         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 43073                           
 43074                           ; BSR set to: 0
 43075                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 43076  00A724  51BD               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 43077  00A726  0D0E               	mullw	14
 43078  00A728  0E00               	movlw	low _Channels
 43079  00A72A  24F3               	addwf	prodl,w,c
 43080  00A72C  6ED9               	movwf	fsr2l,c
 43081  00A72E  0E04               	movlw	high _Channels
 43082  00A730  20F4               	addwfc	prodh,w,c
 43083  00A732  6EDA               	movwf	fsr2h,c
 43084  00A734  CFDE F217          	movff	postinc2,_loRa+19
 43085  00A738  CFDE F218          	movff	postinc2,_loRa+20
 43086  00A73C  CFDE F219          	movff	postinc2,_loRa+21
 43087  00A740  CFDE F21A          	movff	postinc2,_loRa+22
 43088                           
 43089                           ; BSR set to: 0
 43090                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 43091  00A744  C2E3  F21B         	movff	_loRa+223,_loRa+23
 43092                           
 43093                           ; BSR set to: 0
 43094                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 43095  00A748  C217  F073         	movff	_loRa+19,ConfigureRadioTx@freq
 43096  00A74C  C218  F074         	movff	_loRa+20,ConfigureRadioTx@freq+1
 43097  00A750  C219  F075         	movff	_loRa+21,ConfigureRadioTx@freq+2
 43098  00A754  C21A  F076         	movff	_loRa+22,ConfigureRadioTx@freq+3
 43099  00A758  0102               	movlb	2	; () banked
 43100  00A75A  511B               	movf	(_loRa+23)& (0+255),w,b
 43101  00A75C  EC1D  F058         	call	_ConfigureRadioTx
 43102  00A760                     l1517:
 43103                           
 43104                           ;lorawan_eu.c: 933: }
 43105                           ;lorawan_eu.c: 934: return result;
 43106  00A760  0100               	movlb	0	; () banked
 43107  00A762  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 43108  00A764  0012               	return	
 43109  00A766                     __end_of_SelectChannelForTransmission:
 43110                           	opt stack 0
 43111                           tosu	equ	0xFFF
 43112                           tosh	equ	0xFFE
 43113                           tosl	equ	0xFFD
 43114                           pclath	equ	0xFFA
 43115                           tblptru	equ	0xFF8
 43116                           tblptrh	equ	0xFF7
 43117                           tblptrl	equ	0xFF6
 43118                           tablat	equ	0xFF5
 43119                           prodh	equ	0xFF4
 43120                           prodl	equ	0xFF3
 43121                           intcon	equ	0xFF2
 43122                           intcon2	equ	0xFF1
 43123                           intcon3	equ	0xFF0
 43124                           indf0	equ	0xFEF
 43125                           postinc0	equ	0xFEE
 43126                           fsr0h	equ	0xFEA
 43127                           fsr0l	equ	0xFE9
 43128                           wreg	equ	0xFE8
 43129                           postinc1	equ	0xFE6
 43130                           postdec1	equ	0xFE5
 43131                           plusw1	equ	0xFE3
 43132                           fsr1h	equ	0xFE2
 43133                           fsr1l	equ	0xFE1
 43134                           indf2	equ	0xFDF
 43135                           postinc2	equ	0xFDE
 43136                           postdec2	equ	0xFDD
 43137                           plusw2	equ	0xFDB
 43138                           fsr2h	equ	0xFDA
 43139                           fsr2l	equ	0xFD9
 43140                           status	equ	0xFD8
 43141                           
 43142 ;; *************** function _SearchAvailableChannel *****************
 43143 ;; Defined at:
 43144 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 43145 ;; Parameters:    Size  Location     Type
 43146 ;;  maxChannels     1    wreg     unsigned char 
 43147 ;;  transmission    1   79[BANK0 ] unsigned char 
 43148 ;;  channelIndex    2   80[BANK0 ] PTR unsigned char 
 43149 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 43150 ;; Auto vars:     Size  Location     Type
 43151 ;;  maxChannels     1   88[BANK0 ] unsigned char 
 43152 ;;  i               1   90[BANK0 ] unsigned char 
 43153 ;;  randomNumber    1   89[BANK0 ] unsigned char 
 43154 ;;  result          1   87[BANK0 ] enum E7249
 43155 ;;  randomNumber    1   86[BANK0 ] unsigned char 
 43156 ;; Return value:  Size  Location     Type
 43157 ;;                  1    wreg      enum E7249
 43158 ;; Registers used:
 43159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43160 ;; Tracked objects:
 43161 ;;		On entry : 0/0
 43162 ;;		On exit  : 0/0
 43163 ;;		Unchanged: 0/0
 43164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43165 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43166 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43167 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43168 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43169 ;;Total ram usage:       12 bytes
 43170 ;; Hardware stack levels used:    1
 43171 ;; Hardware stack levels required when called:   10
 43172 ;; This function calls:
 43173 ;;		_Random
 43174 ;; This function is called by:
 43175 ;;		_SelectChannelForTransmission
 43176 ;;		_LORAWAN_RxDone
 43177 ;; This function uses a non-reentrant model
 43178 ;;
 43179                           
 43180                           	psect	text233
 43181  008132                     __ptext233:
 43182                           	opt stack 0
 43183  008132                     _SearchAvailableChannel:
 43184                           	opt stack 18
 43185                           
 43186                           ; BSR set to: 0
 43187                           ;incstack = 0
 43188                           ;SearchAvailableChannel@maxChannels stored from wreg
 43189  008132  0100               	movlb	0	; () banked
 43190  008134  6FB8               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 43191                           
 43192                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 43193                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 43194  008136  0E00               	movlw	0
 43195  008138  0100               	movlb	0	; () banked
 43196  00813A  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 43197                           
 43198                           ; BSR set to: 0
 43199                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 43200  00813C  C0B8  F0AD         	movff	SearchAvailableChannel@maxChannels,Random@max
 43201  008140  6BAE               	clrf	(Random@max+1)& (0+255),b
 43202  008142  EC4D  F05F         	call	_Random	;wreg free
 43203  008146  0100               	movlb	0	; () banked
 43204  008148  29AD               	incf	?_Random& (0+255),w,b
 43205  00814A  6FB9               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 43206                           
 43207                           ; BSR set to: 0
 43208                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 43209  00814C  C0B9  F0B6         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 43210                           
 43211                           ;lorawan_eu.c: 786: while (randomNumber)
 43212  008150  D074               	goto	l1481
 43213  008152                     
 43214                           ; BSR set to: 0
 43215                           ;lorawan_eu.c: 787: {
 43216                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 43217                           
 43218                           ; BSR set to: 0
 43219  008152  0E00               	movlw	0
 43220  008154  6FBA               	movwf	SearchAvailableChannel@i& (0+255),b
 43221  008156  D063               	goto	l1472
 43222  008158                     
 43223                           ; BSR set to: 0
 43224                           ;lorawan_eu.c: 789: {
 43225                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 43226                           
 43227                           ; BSR set to: 0
 43228  008158  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43229  00815A  0D0E               	mullw	14
 43230  00815C  0E04               	movlw	4
 43231  00815E  26F3               	addwf	prodl,f,c
 43232  008160  0E00               	movlw	0
 43233  008162  22F4               	addwfc	prodh,f,c
 43234  008164  0E00               	movlw	low _Channels
 43235  008166  24F3               	addwf	prodl,w,c
 43236  008168  6ED9               	movwf	fsr2l,c
 43237  00816A  0E04               	movlw	high _Channels
 43238  00816C  20F4               	addwfc	prodh,w,c
 43239  00816E  6EDA               	movwf	fsr2h,c
 43240  008170  04DE               	decf	postinc2,w,c
 43241  008172  A4D8               	btfss	status,2,c
 43242  008174  D052               	goto	l1477
 43243                           
 43244                           ; BSR set to: 0
 43245  008176  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43246  008178  0D0E               	mullw	14
 43247  00817A  0E08               	movlw	8
 43248  00817C  26F3               	addwf	prodl,f,c
 43249  00817E  0E00               	movlw	0
 43250  008180  22F4               	addwfc	prodh,f,c
 43251  008182  0E00               	movlw	low _Channels
 43252  008184  24F3               	addwf	prodl,w,c
 43253  008186  6ED9               	movwf	fsr2l,c
 43254  008188  0E04               	movlw	high _Channels
 43255  00818A  20F4               	addwfc	prodh,w,c
 43256  00818C  6EDA               	movwf	fsr2h,c
 43257  00818E  50DE               	movf	postinc2,w,c
 43258  008190  10DE               	iorwf	postinc2,w,c
 43259  008192  10DE               	iorwf	postinc2,w,c
 43260  008194  10DE               	iorwf	postinc2,w,c
 43261  008196  A4D8               	btfss	status,2,c
 43262  008198  D040               	goto	l1477
 43263                           
 43264                           ; BSR set to: 0
 43265  00819A  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43266  00819C  0D0E               	mullw	14
 43267  00819E  0E05               	movlw	5
 43268  0081A0  26F3               	addwf	prodl,f,c
 43269  0081A2  0E00               	movlw	0
 43270  0081A4  22F4               	addwfc	prodh,f,c
 43271  0081A6  0E00               	movlw	low _Channels
 43272  0081A8  24F3               	addwf	prodl,w,c
 43273  0081AA  6ED9               	movwf	fsr2l,c
 43274  0081AC  0E04               	movlw	high _Channels
 43275  0081AE  20F4               	addwfc	prodh,w,c
 43276  0081B0  6EDA               	movwf	fsr2h,c
 43277  0081B2  0104               	movlb	4	; () banked
 43278  0081B4  50DF               	movf	223,w,c
 43279  0081B6  0B0F               	andlw	15
 43280  0081B8  0100               	movlb	0	; () banked
 43281  0081BA  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 43282  0081BC  51B2               	movf	??_SearchAvailableChannel& (0+255),w,b
 43283  0081BE  0102               	movlb	2	; () banked
 43284  0081C0  5DE3               	subwf	(_loRa+223)& (0+255),w,b
 43285  0081C2  A0D8               	btfss	status,0,c
 43286  0081C4  D02A               	goto	l1477
 43287                           
 43288                           ; BSR set to: 2
 43289  0081C6  0100               	movlb	0	; () banked
 43290  0081C8  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43291  0081CA  0D0E               	mullw	14
 43292  0081CC  0E05               	movlw	5
 43293  0081CE  26F3               	addwf	prodl,f,c
 43294  0081D0  0E00               	movlw	0
 43295  0081D2  22F4               	addwfc	prodh,f,c
 43296  0081D4  0E00               	movlw	low _Channels
 43297  0081D6  24F3               	addwf	prodl,w,c
 43298  0081D8  6ED9               	movwf	fsr2l,c
 43299  0081DA  0E04               	movlw	high _Channels
 43300  0081DC  20F4               	addwfc	prodh,w,c
 43301  0081DE  6EDA               	movwf	fsr2h,c
 43302  0081E0  0104               	movlb	4	; () banked
 43303  0081E2  38DF               	swapf	223,w,c
 43304  0081E4  0B0F               	andlw	15
 43305  0081E6  0100               	movlb	0	; () banked
 43306  0081E8  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 43307  0081EA  0102               	movlb	2	; () banked
 43308  0081EC  51E3               	movf	(_loRa+223)& (0+255),w,b
 43309  0081EE  0100               	movlb	0	; () banked
 43310  0081F0  5DB2               	subwf	??_SearchAvailableChannel& (0+255),w,b
 43311  0081F2  A0D8               	btfss	status,0,c
 43312  0081F4  D012               	goto	l1477
 43313                           
 43314                           ; BSR set to: 0
 43315                           ;lorawan_eu.c: 791: {
 43316                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 43317  0081F6  51AF               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 43318  0081F8  A4D8               	btfss	status,2,c
 43319  0081FA  D00E               	goto	l1475
 43320                           
 43321                           ; BSR set to: 0
 43322                           ;lorawan_eu.c: 793: {
 43323                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 43324  0081FC  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43325  0081FE  0D0E               	mullw	14
 43326  008200  0E0C               	movlw	12
 43327  008202  26F3               	addwf	prodl,f,c
 43328  008204  0E00               	movlw	0
 43329  008206  22F4               	addwfc	prodh,f,c
 43330  008208  0E00               	movlw	low _Channels
 43331  00820A  24F3               	addwf	prodl,w,c
 43332  00820C  6ED9               	movwf	fsr2l,c
 43333  00820E  0E04               	movlw	high _Channels
 43334  008210  20F4               	addwfc	prodh,w,c
 43335  008212  6EDA               	movwf	fsr2h,c
 43336  008214  04DE               	decf	postinc2,w,c
 43337  008216  B4D8               	btfsc	status,2,c
 43338  008218                     l1475:
 43339                           
 43340                           ; BSR set to: 0
 43341                           ;lorawan_eu.c: 799: else
 43342                           ;lorawan_eu.c: 800: {
 43343                           ;lorawan_eu.c: 801: randomNumber --;
 43344                           
 43345                           ; BSR set to: 0
 43346  008218  07B9               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 43347  00821A                     l1477:
 43348                           
 43349                           ; BSR set to: 0
 43350  00821A  0100               	movlb	0	; () banked
 43351  00821C  2BBA               	incf	SearchAvailableChannel@i& (0+255),f,b
 43352  00821E                     l1472:
 43353                           
 43354                           ; BSR set to: 0
 43355                           
 43356                           ; BSR set to: 0
 43357  00821E  51B8               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 43358  008220  5DBA               	subwf	SearchAvailableChannel@i& (0+255),w,b
 43359  008222  B0D8               	btfsc	status,0,c
 43360  008224  D003               	goto	u20880
 43361                           
 43362                           ; BSR set to: 0
 43363  008226  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 43364  008228  A4D8               	btfss	status,2,c
 43365  00822A  D796               	goto	l1473
 43366  00822C                     u20880:
 43367                           
 43368                           ; BSR set to: 0
 43369                           ;lorawan_eu.c: 802: }
 43370                           ;lorawan_eu.c: 803: }
 43371                           ;lorawan_eu.c: 804: }
 43372                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 43373                           
 43374                           ; BSR set to: 0
 43375                           
 43376                           ; BSR set to: 0
 43377  00822C  51B6               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 43378  00822E  19B9               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 43379  008230  A4D8               	btfss	status,2,c
 43380  008232  D003               	goto	l1481
 43381                           
 43382                           ; BSR set to: 0
 43383                           ;lorawan_eu.c: 807: {
 43384                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 43385  008234  0E09               	movlw	9
 43386  008236  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 43387                           
 43388                           ;lorawan_eu.c: 809: break;
 43389  008238  D003               	goto	u20900
 43390  00823A                     l1481:
 43391                           
 43392                           ; BSR set to: 0
 43393                           
 43394                           ; BSR set to: 0
 43395                           
 43396                           ; BSR set to: 0
 43397  00823A  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 43398  00823C  A4D8               	btfss	status,2,c
 43399  00823E  D789               	goto	l1471
 43400  008240                     u20900:
 43401                           
 43402                           ; BSR set to: 0
 43403                           ;lorawan_eu.c: 810: }
 43404                           ;lorawan_eu.c: 811: }
 43405                           ;lorawan_eu.c: 813: if ( i != 0)
 43406                           
 43407                           ; BSR set to: 0
 43408  008240  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43409  008242  B4D8               	btfsc	status,2,c
 43410  008244  D007               	goto	l1483
 43411                           
 43412                           ; BSR set to: 0
 43413                           ;lorawan_eu.c: 814: {
 43414                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 43415  008246  05BA               	decf	SearchAvailableChannel@i& (0+255),w,b
 43416  008248  C0B0  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 43417  00824C  C0B1  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 43418  008250  6EDF               	movwf	indf2,c
 43419                           
 43420                           ;lorawan_eu.c: 816: }
 43421  008252  D002               	goto	l1484
 43422  008254                     l1483:
 43423                           
 43424                           ; BSR set to: 0
 43425                           ;lorawan_eu.c: 817: else
 43426                           ;lorawan_eu.c: 818: {
 43427                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 43428                           
 43429                           ; BSR set to: 0
 43430  008254  0E09               	movlw	9
 43431  008256  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 43432  008258                     l1484:
 43433                           
 43434                           ; BSR set to: 0
 43435                           ;lorawan_eu.c: 820: }
 43436                           ;lorawan_eu.c: 821: return result;
 43437  008258  51B7               	movf	SearchAvailableChannel@result& (0+255),w,b
 43438  00825A  0012               	return	
 43439  00825C                     __end_of_SearchAvailableChannel:
 43440                           	opt stack 0
 43441                           tosu	equ	0xFFF
 43442                           tosh	equ	0xFFE
 43443                           tosl	equ	0xFFD
 43444                           pclath	equ	0xFFA
 43445                           tblptru	equ	0xFF8
 43446                           tblptrh	equ	0xFF7
 43447                           tblptrl	equ	0xFF6
 43448                           tablat	equ	0xFF5
 43449                           prodh	equ	0xFF4
 43450                           prodl	equ	0xFF3
 43451                           intcon	equ	0xFF2
 43452                           intcon2	equ	0xFF1
 43453                           intcon3	equ	0xFF0
 43454                           indf0	equ	0xFEF
 43455                           postinc0	equ	0xFEE
 43456                           fsr0h	equ	0xFEA
 43457                           fsr0l	equ	0xFE9
 43458                           wreg	equ	0xFE8
 43459                           postinc1	equ	0xFE6
 43460                           postdec1	equ	0xFE5
 43461                           plusw1	equ	0xFE3
 43462                           fsr1h	equ	0xFE2
 43463                           fsr1l	equ	0xFE1
 43464                           indf2	equ	0xFDF
 43465                           postinc2	equ	0xFDE
 43466                           postdec2	equ	0xFDD
 43467                           plusw2	equ	0xFDB
 43468                           fsr2h	equ	0xFDA
 43469                           fsr2l	equ	0xFD9
 43470                           status	equ	0xFD8
 43471                           
 43472 ;; *************** function _ConfigureRadioTx *****************
 43473 ;; Defined at:
 43474 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 43475 ;; Parameters:    Size  Location     Type
 43476 ;;  dataRate        1    wreg     unsigned char 
 43477 ;;  freq            4   19[BANK0 ] unsigned long 
 43478 ;; Auto vars:     Size  Location     Type
 43479 ;;  dataRate        1   23[BANK0 ] unsigned char 
 43480 ;;  txPower         1   24[BANK0 ] char 
 43481 ;; Return value:  Size  Location     Type
 43482 ;;                  1    wreg      void 
 43483 ;; Registers used:
 43484 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43485 ;; Tracked objects:
 43486 ;;		On entry : 0/0
 43487 ;;		On exit  : 0/0
 43488 ;;		Unchanged: 0/0
 43489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43490 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43491 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43493 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43494 ;;Total ram usage:        6 bytes
 43495 ;; Hardware stack levels used:    1
 43496 ;; Hardware stack levels required when called:   10
 43497 ;; This function calls:
 43498 ;;		_ConfigureRadio
 43499 ;;		_RADIO_SetCRC
 43500 ;;		_RADIO_SetIQInverted
 43501 ;;		_RADIO_SetOutputPower
 43502 ;; This function is called by:
 43503 ;;		_SelectChannelForTransmission
 43504 ;; This function uses a non-reentrant model
 43505 ;;
 43506                           
 43507                           	psect	text234
 43508  00B03A                     __ptext234:
 43509                           	opt stack 0
 43510  00B03A                     _ConfigureRadioTx:
 43511                           	opt stack 18
 43512                           
 43513                           ; BSR set to: 0
 43514                           ;incstack = 0
 43515                           ;ConfigureRadioTx@dataRate stored from wreg
 43516  00B03A  0100               	movlb	0	; () banked
 43517  00B03C  6F77               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 43518                           
 43519                           ;lorawan_eu.c: 1257: int8_t txPower;
 43520                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 43521  00B03E  C073  F06E         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 43522  00B042  C074  F06F         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 43523  00B046  C075  F070         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 43524  00B04A  C076  F071         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 43525  00B04E  0100               	movlb	0	; () banked
 43526  00B050  5177               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 43527  00B052  EC64  F04C         	call	_ConfigureRadio
 43528                           
 43529                           ;lorawan_eu.c: 1261: if (ISM_EU868 == loRa.ismBand)
 43530  00B056  0102               	movlb	2	; () banked
 43531  00B058  51A8               	movf	(_loRa+164)& (0+255),w,b
 43532                           
 43533                           ; BSR set to: 2
 43534                           ;lorawan_eu.c: 1265: else
 43535                           ;lorawan_eu.c: 1266: {
 43536                           ;lorawan_eu.c: 1267: txPower = txPower868[loRa.txPower];
 43537                           
 43538                           ; BSR set to: 2
 43539                           
 43540                           ;lorawan_eu.c: 1264: }
 43541                           
 43542                           ; BSR set to: 2
 43543                           ;lorawan_eu.c: 1262: {
 43544                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 43545  00B05A  51E5               	movf	(_loRa+225)& (0+255),w,b
 43546  00B05C  0D01               	mullw	1
 43547  00B05E  0ECA               	movlw	low _txPower868
 43548  00B060  24F3               	addwf	prodl,w,c
 43549  00B062  6EF6               	movwf	tblptrl,c
 43550  00B064  0EFE               	movlw	high _txPower868
 43551  00B066  20F4               	addwfc	prodh,w,c
 43552  00B068  6EF7               	movwf	tblptrh,c
 43553  00B06A                     	if	1	;There are 3 active tblptr bytes
 43554  00B06A  6AF8               	clrf	tblptru,c
 43555  00B06C  0E00               	movlw	low (__mediumconst shr (0+16))
 43556  00B06E  22F8               	addwfc	tblptru,f,c
 43557  00B070                     	endif
 43558  00B070  0008               	tblrd		*
 43559  00B072  CFF5 F078          	movff	tablat,ConfigureRadioTx@txPower
 43560                           
 43561                           ; BSR set to: 2
 43562                           ;lorawan_eu.c: 1268: }
 43563                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 43564                           
 43565                           ; BSR set to: 2
 43566  00B076  0100               	movlb	0	; () banked
 43567  00B078  5178               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 43568  00B07A  ECDD  F062         	call	_RADIO_SetOutputPower
 43569                           
 43570                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 43571  00B07E  0E01               	movlw	1
 43572  00B080  ECE7  F062         	call	_RADIO_SetCRC
 43573                           
 43574                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 43575  00B084  0E00               	movlw	0
 43576  00B086  ECE2  F062         	call	_RADIO_SetIQInverted
 43577  00B08A  0012               	return		;funcret
 43578  00B08C                     __end_of_ConfigureRadioTx:
 43579                           	opt stack 0
 43580                           tosu	equ	0xFFF
 43581                           tosh	equ	0xFFE
 43582                           tosl	equ	0xFFD
 43583                           pclath	equ	0xFFA
 43584                           tblptru	equ	0xFF8
 43585                           tblptrh	equ	0xFF7
 43586                           tblptrl	equ	0xFF6
 43587                           tablat	equ	0xFF5
 43588                           prodh	equ	0xFF4
 43589                           prodl	equ	0xFF3
 43590                           intcon	equ	0xFF2
 43591                           intcon2	equ	0xFF1
 43592                           intcon3	equ	0xFF0
 43593                           indf0	equ	0xFEF
 43594                           postinc0	equ	0xFEE
 43595                           fsr0h	equ	0xFEA
 43596                           fsr0l	equ	0xFE9
 43597                           wreg	equ	0xFE8
 43598                           postinc1	equ	0xFE6
 43599                           postdec1	equ	0xFE5
 43600                           plusw1	equ	0xFE3
 43601                           fsr1h	equ	0xFE2
 43602                           fsr1l	equ	0xFE1
 43603                           indf2	equ	0xFDF
 43604                           postinc2	equ	0xFDE
 43605                           postdec2	equ	0xFDD
 43606                           plusw2	equ	0xFDB
 43607                           fsr2h	equ	0xFDA
 43608                           fsr2l	equ	0xFD9
 43609                           status	equ	0xFD8
 43610                           
 43611 ;; *************** function _RADIO_SetOutputPower *****************
 43612 ;; Defined at:
 43613 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 43614 ;; Parameters:    Size  Location     Type
 43615 ;;  power           1    wreg     char 
 43616 ;; Auto vars:     Size  Location     Type
 43617 ;;  power           1    0[BANK0 ] char 
 43618 ;; Return value:  Size  Location     Type
 43619 ;;                  1    wreg      void 
 43620 ;; Registers used:
 43621 ;;		wreg
 43622 ;; Tracked objects:
 43623 ;;		On entry : 0/0
 43624 ;;		On exit  : 0/0
 43625 ;;		Unchanged: 0/0
 43626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43630 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43631 ;;Total ram usage:        1 bytes
 43632 ;; Hardware stack levels used:    1
 43633 ;; Hardware stack levels required when called:    7
 43634 ;; This function calls:
 43635 ;;		Nothing
 43636 ;; This function is called by:
 43637 ;;		_ConfigureRadioTx
 43638 ;; This function uses a non-reentrant model
 43639 ;;
 43640                           
 43641                           	psect	text235
 43642  00C5BA                     __ptext235:
 43643                           	opt stack 0
 43644  00C5BA                     _RADIO_SetOutputPower:
 43645                           	opt stack 20
 43646                           
 43647                           ;incstack = 0
 43648                           ;RADIO_SetOutputPower@power stored from wreg
 43649  00C5BA  0100               	movlb	0	; () banked
 43650  00C5BC  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
 43651                           
 43652                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 43653  00C5BE  C060  F150         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 43654  00C5C2  0012               	return		;funcret
 43655  00C5C4                     __end_of_RADIO_SetOutputPower:
 43656                           	opt stack 0
 43657                           tosu	equ	0xFFF
 43658                           tosh	equ	0xFFE
 43659                           tosl	equ	0xFFD
 43660                           pclath	equ	0xFFA
 43661                           tblptru	equ	0xFF8
 43662                           tblptrh	equ	0xFF7
 43663                           tblptrl	equ	0xFF6
 43664                           tablat	equ	0xFF5
 43665                           prodh	equ	0xFF4
 43666                           prodl	equ	0xFF3
 43667                           intcon	equ	0xFF2
 43668                           intcon2	equ	0xFF1
 43669                           intcon3	equ	0xFF0
 43670                           indf0	equ	0xFEF
 43671                           postinc0	equ	0xFEE
 43672                           fsr0h	equ	0xFEA
 43673                           fsr0l	equ	0xFE9
 43674                           wreg	equ	0xFE8
 43675                           postinc1	equ	0xFE6
 43676                           postdec1	equ	0xFE5
 43677                           plusw1	equ	0xFE3
 43678                           fsr1h	equ	0xFE2
 43679                           fsr1l	equ	0xFE1
 43680                           indf2	equ	0xFDF
 43681                           postinc2	equ	0xFDE
 43682                           postdec2	equ	0xFDD
 43683                           plusw2	equ	0xFDB
 43684                           fsr2h	equ	0xFDA
 43685                           fsr2l	equ	0xFD9
 43686                           status	equ	0xFD8
 43687                           
 43688 ;; *************** function _RADIO_SetIQInverted *****************
 43689 ;; Defined at:
 43690 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 43691 ;; Parameters:    Size  Location     Type
 43692 ;;  iqInverted      1    wreg     unsigned char 
 43693 ;; Auto vars:     Size  Location     Type
 43694 ;;  iqInverted      1    0[BANK0 ] unsigned char 
 43695 ;; Return value:  Size  Location     Type
 43696 ;;                  1    wreg      void 
 43697 ;; Registers used:
 43698 ;;		wreg
 43699 ;; Tracked objects:
 43700 ;;		On entry : 0/0
 43701 ;;		On exit  : 0/0
 43702 ;;		Unchanged: 0/0
 43703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43705 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43707 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43708 ;;Total ram usage:        1 bytes
 43709 ;; Hardware stack levels used:    1
 43710 ;; Hardware stack levels required when called:    7
 43711 ;; This function calls:
 43712 ;;		Nothing
 43713 ;; This function is called by:
 43714 ;;		_ConfigureRadioTx
 43715 ;;		_ConfigureRadioRx
 43716 ;; This function uses a non-reentrant model
 43717 ;;
 43718                           
 43719                           	psect	text236
 43720  00C5C4                     __ptext236:
 43721                           	opt stack 0
 43722  00C5C4                     _RADIO_SetIQInverted:
 43723                           	opt stack 20
 43724                           
 43725                           ;incstack = 0
 43726                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 43727  00C5C4  0100               	movlb	0	; () banked
 43728  00C5C6  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 43729                           
 43730                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 43731  00C5C8  C060  F155         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 43732  00C5CC  0012               	return		;funcret
 43733  00C5CE                     __end_of_RADIO_SetIQInverted:
 43734                           	opt stack 0
 43735                           tosu	equ	0xFFF
 43736                           tosh	equ	0xFFE
 43737                           tosl	equ	0xFFD
 43738                           pclath	equ	0xFFA
 43739                           tblptru	equ	0xFF8
 43740                           tblptrh	equ	0xFF7
 43741                           tblptrl	equ	0xFF6
 43742                           tablat	equ	0xFF5
 43743                           prodh	equ	0xFF4
 43744                           prodl	equ	0xFF3
 43745                           intcon	equ	0xFF2
 43746                           intcon2	equ	0xFF1
 43747                           intcon3	equ	0xFF0
 43748                           indf0	equ	0xFEF
 43749                           postinc0	equ	0xFEE
 43750                           fsr0h	equ	0xFEA
 43751                           fsr0l	equ	0xFE9
 43752                           wreg	equ	0xFE8
 43753                           postinc1	equ	0xFE6
 43754                           postdec1	equ	0xFE5
 43755                           plusw1	equ	0xFE3
 43756                           fsr1h	equ	0xFE2
 43757                           fsr1l	equ	0xFE1
 43758                           indf2	equ	0xFDF
 43759                           postinc2	equ	0xFDE
 43760                           postdec2	equ	0xFDD
 43761                           plusw2	equ	0xFDB
 43762                           fsr2h	equ	0xFDA
 43763                           fsr2l	equ	0xFD9
 43764                           status	equ	0xFD8
 43765                           
 43766 ;; *************** function _RADIO_SetCRC *****************
 43767 ;; Defined at:
 43768 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 43769 ;; Parameters:    Size  Location     Type
 43770 ;;  crc             1    wreg     unsigned char 
 43771 ;; Auto vars:     Size  Location     Type
 43772 ;;  crc             1    0[BANK0 ] unsigned char 
 43773 ;; Return value:  Size  Location     Type
 43774 ;;                  1    wreg      void 
 43775 ;; Registers used:
 43776 ;;		wreg
 43777 ;; Tracked objects:
 43778 ;;		On entry : 0/0
 43779 ;;		On exit  : 0/0
 43780 ;;		Unchanged: 0/0
 43781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43783 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43785 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43786 ;;Total ram usage:        1 bytes
 43787 ;; Hardware stack levels used:    1
 43788 ;; Hardware stack levels required when called:    7
 43789 ;; This function calls:
 43790 ;;		Nothing
 43791 ;; This function is called by:
 43792 ;;		_ConfigureRadioTx
 43793 ;;		_ConfigureRadioRx
 43794 ;; This function uses a non-reentrant model
 43795 ;;
 43796                           
 43797                           	psect	text237
 43798  00C5CE                     __ptext237:
 43799                           	opt stack 0
 43800  00C5CE                     _RADIO_SetCRC:
 43801                           	opt stack 20
 43802                           
 43803                           ;incstack = 0
 43804                           ;RADIO_SetCRC@crc stored from wreg
 43805  00C5CE  0100               	movlb	0	; () banked
 43806  00C5D0  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
 43807                           
 43808                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 43809  00C5D2  C060  F151         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 43810  00C5D6  0012               	return		;funcret
 43811  00C5D8                     __end_of_RADIO_SetCRC:
 43812                           	opt stack 0
 43813                           tosu	equ	0xFFF
 43814                           tosh	equ	0xFFE
 43815                           tosl	equ	0xFFD
 43816                           pclath	equ	0xFFA
 43817                           tblptru	equ	0xFF8
 43818                           tblptrh	equ	0xFF7
 43819                           tblptrl	equ	0xFF6
 43820                           tablat	equ	0xFF5
 43821                           prodh	equ	0xFF4
 43822                           prodl	equ	0xFF3
 43823                           intcon	equ	0xFF2
 43824                           intcon2	equ	0xFF1
 43825                           intcon3	equ	0xFF0
 43826                           indf0	equ	0xFEF
 43827                           postinc0	equ	0xFEE
 43828                           fsr0h	equ	0xFEA
 43829                           fsr0l	equ	0xFE9
 43830                           wreg	equ	0xFE8
 43831                           postinc1	equ	0xFE6
 43832                           postdec1	equ	0xFE5
 43833                           plusw1	equ	0xFE3
 43834                           fsr1h	equ	0xFE2
 43835                           fsr1l	equ	0xFE1
 43836                           indf2	equ	0xFDF
 43837                           postinc2	equ	0xFDE
 43838                           postdec2	equ	0xFDD
 43839                           plusw2	equ	0xFDB
 43840                           fsr2h	equ	0xFDA
 43841                           fsr2l	equ	0xFD9
 43842                           status	equ	0xFD8
 43843                           
 43844 ;; *************** function _ConfigureRadio *****************
 43845 ;; Defined at:
 43846 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 43847 ;; Parameters:    Size  Location     Type
 43848 ;;  dataRate        1    wreg     unsigned char 
 43849 ;;  freq            4   14[BANK0 ] unsigned long 
 43850 ;; Auto vars:     Size  Location     Type
 43851 ;;  dataRate        1   18[BANK0 ] unsigned char 
 43852 ;; Return value:  Size  Location     Type
 43853 ;;                  1    wreg      void 
 43854 ;; Registers used:
 43855 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43856 ;; Tracked objects:
 43857 ;;		On entry : 0/0
 43858 ;;		On exit  : 0/0
 43859 ;;		Unchanged: 0/0
 43860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43861 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43864 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43865 ;;Total ram usage:        5 bytes
 43866 ;; Hardware stack levels used:    1
 43867 ;; Hardware stack levels required when called:    9
 43868 ;; This function calls:
 43869 ;;		_RADIO_SetBandwidth
 43870 ;;		_RADIO_SetChannelFrequency
 43871 ;;		_RADIO_SetFSKSyncWord
 43872 ;;		_RADIO_SetFrequencyHopPeriod
 43873 ;;		_RADIO_SetLoRaSyncWord
 43874 ;;		_RADIO_SetModulation
 43875 ;;		_RADIO_SetSpreadingFactor
 43876 ;; This function is called by:
 43877 ;;		_ConfigureRadioTx
 43878 ;;		_ConfigureRadioRx
 43879 ;; This function uses a non-reentrant model
 43880 ;;
 43881                           
 43882                           	psect	text238
 43883  0098C8                     __ptext238:
 43884                           	opt stack 0
 43885  0098C8                     _ConfigureRadio:
 43886                           	opt stack 18
 43887                           
 43888                           ;incstack = 0
 43889                           ;ConfigureRadio@dataRate stored from wreg
 43890  0098C8  0100               	movlb	0	; () banked
 43891  0098CA  6F72               	movwf	ConfigureRadio@dataRate& (0+255),b
 43892                           
 43893                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 43894  0098CC  0100               	movlb	0	; () banked
 43895  0098CE  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 43896  0098D0  0D01               	mullw	1
 43897  0098D2  0E8F               	movlw	low _modulation
 43898  0098D4  24F3               	addwf	prodl,w,c
 43899  0098D6  6EF6               	movwf	tblptrl,c
 43900  0098D8  0EFE               	movlw	high _modulation
 43901  0098DA  20F4               	addwfc	prodh,w,c
 43902  0098DC  6EF7               	movwf	tblptrh,c
 43903  0098DE                     	if	1	;There are 3 active tblptr bytes
 43904  0098DE  6AF8               	clrf	tblptru,c
 43905  0098E0  0E00               	movlw	low (__mediumconst shr (0+16))
 43906  0098E2  22F8               	addwfc	tblptru,f,c
 43907  0098E4                     	endif
 43908  0098E4  0008               	tblrd		*
 43909  0098E6  50F5               	movf	tablat,w,c
 43910  0098E8  ECF1  F062         	call	_RADIO_SetModulation
 43911                           
 43912                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 43913  0098EC  C06E  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 43914  0098F0  C06F  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 43915  0098F4  C070  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 43916  0098F8  C071  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 43917  0098FC  EC5B  F04F         	call	_RADIO_SetChannelFrequency	;wreg free
 43918                           
 43919                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 43920  009900  0E00               	movlw	0
 43921  009902  0100               	movlb	0	; () banked
 43922  009904  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 43923  009906  0E00               	movlw	0
 43924  009908  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 43925  00990A  ECF6  F062         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 43926                           
 43927                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 43928  00990E  0E07               	movlw	7
 43929  009910  0100               	movlb	0	; () banked
 43930  009912  6172               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 43931  009914  D024               	goto	l1497
 43932                           
 43933                           ; BSR set to: 0
 43934                           ;lorawan_eu.c: 870: {
 43935                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 43936  009916  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 43937  009918  0D01               	mullw	1
 43938  00991A  0EBD               	movlw	low _spreadingFactor
 43939  00991C  24F3               	addwf	prodl,w,c
 43940  00991E  6EF6               	movwf	tblptrl,c
 43941  009920  0EFE               	movlw	high _spreadingFactor
 43942  009922  20F4               	addwfc	prodh,w,c
 43943  009924  6EF7               	movwf	tblptrh,c
 43944  009926                     	if	1	;There are 3 active tblptr bytes
 43945  009926  6AF8               	clrf	tblptru,c
 43946  009928  0E00               	movlw	low (__mediumconst shr (0+16))
 43947  00992A  22F8               	addwfc	tblptru,f,c
 43948  00992C                     	endif
 43949  00992C  0008               	tblrd		*
 43950  00992E  50F5               	movf	tablat,w,c
 43951  009930  ECEC  F062         	call	_RADIO_SetSpreadingFactor
 43952                           
 43953                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 43954  009934  0100               	movlb	0	; () banked
 43955  009936  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 43956  009938  0D01               	mullw	1
 43957  00993A  0EB6               	movlw	low _bandwidth
 43958  00993C  24F3               	addwf	prodl,w,c
 43959  00993E  6EF6               	movwf	tblptrl,c
 43960  009940  0EFE               	movlw	high _bandwidth
 43961  009942  20F4               	addwfc	prodh,w,c
 43962  009944  6EF7               	movwf	tblptrh,c
 43963  009946                     	if	1	;There are 3 active tblptr bytes
 43964  009946  6AF8               	clrf	tblptru,c
 43965  009948  0E00               	movlw	low (__mediumconst shr (0+16))
 43966  00994A  22F8               	addwfc	tblptru,f,c
 43967  00994C                     	endif
 43968  00994C  0008               	tblrd		*
 43969  00994E  50F5               	movf	tablat,w,c
 43970  009950  ECFB  F062         	call	_RADIO_SetBandwidth
 43971                           
 43972                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 43973  009954  0102               	movlb	2	; () banked
 43974  009956  51F8               	movf	(_loRa+244)& (0+255),w,b
 43975  009958  EC00  F063         	call	_RADIO_SetLoRaSyncWord
 43976                           
 43977                           ;lorawan_eu.c: 875: }
 43978  00995C  0012               	return	
 43979  00995E                     l1497:
 43980                           
 43981                           ;lorawan_eu.c: 876: else
 43982                           ;lorawan_eu.c: 877: {
 43983                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 43984  00995E  0E24               	movlw	low _FskSyncWordBuff
 43985  009960  0100               	movlb	0	; () banked
 43986  009962  6F6B               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 43987  009964  0EFF               	movlw	high _FskSyncWordBuff
 43988  009966  6F6C               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 43989  009968  0E03               	movlw	3
 43990  00996A  ECF3  F05C         	call	_RADIO_SetFSKSyncWord
 43991  00996E  0012               	return	
 43992  009970                     __end_of_ConfigureRadio:
 43993                           	opt stack 0
 43994                           tosu	equ	0xFFF
 43995                           tosh	equ	0xFFE
 43996                           tosl	equ	0xFFD
 43997                           pclath	equ	0xFFA
 43998                           tblptru	equ	0xFF8
 43999                           tblptrh	equ	0xFF7
 44000                           tblptrl	equ	0xFF6
 44001                           tablat	equ	0xFF5
 44002                           prodh	equ	0xFF4
 44003                           prodl	equ	0xFF3
 44004                           intcon	equ	0xFF2
 44005                           intcon2	equ	0xFF1
 44006                           intcon3	equ	0xFF0
 44007                           indf0	equ	0xFEF
 44008                           postinc0	equ	0xFEE
 44009                           fsr0h	equ	0xFEA
 44010                           fsr0l	equ	0xFE9
 44011                           wreg	equ	0xFE8
 44012                           postinc1	equ	0xFE6
 44013                           postdec1	equ	0xFE5
 44014                           plusw1	equ	0xFE3
 44015                           fsr1h	equ	0xFE2
 44016                           fsr1l	equ	0xFE1
 44017                           indf2	equ	0xFDF
 44018                           postinc2	equ	0xFDE
 44019                           postdec2	equ	0xFDD
 44020                           plusw2	equ	0xFDB
 44021                           fsr2h	equ	0xFDA
 44022                           fsr2l	equ	0xFD9
 44023                           status	equ	0xFD8
 44024                           
 44025 ;; *************** function _RADIO_SetSpreadingFactor *****************
 44026 ;; Defined at:
 44027 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44028 ;; Parameters:    Size  Location     Type
 44029 ;;  spreadingFac    1    wreg     enum E6994
 44030 ;; Auto vars:     Size  Location     Type
 44031 ;;  spreadingFac    1    0[BANK0 ] enum E6994
 44032 ;; Return value:  Size  Location     Type
 44033 ;;                  1    wreg      void 
 44034 ;; Registers used:
 44035 ;;		wreg
 44036 ;; Tracked objects:
 44037 ;;		On entry : 0/0
 44038 ;;		On exit  : 0/0
 44039 ;;		Unchanged: 0/0
 44040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44044 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44045 ;;Total ram usage:        1 bytes
 44046 ;; Hardware stack levels used:    1
 44047 ;; Hardware stack levels required when called:    7
 44048 ;; This function calls:
 44049 ;;		Nothing
 44050 ;; This function is called by:
 44051 ;;		_ConfigureRadio
 44052 ;; This function uses a non-reentrant model
 44053 ;;
 44054                           
 44055                           	psect	text239
 44056  00C5D8                     __ptext239:
 44057                           	opt stack 0
 44058  00C5D8                     _RADIO_SetSpreadingFactor:
 44059                           	opt stack 19
 44060                           
 44061                           ;incstack = 0
 44062                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 44063  00C5D8  0100               	movlb	0	; () banked
 44064  00C5DA  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 44065                           
 44066                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 44067  00C5DC  C060  F14E         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 44068  00C5E0  0012               	return		;funcret
 44069  00C5E2                     __end_of_RADIO_SetSpreadingFactor:
 44070                           	opt stack 0
 44071                           tosu	equ	0xFFF
 44072                           tosh	equ	0xFFE
 44073                           tosl	equ	0xFFD
 44074                           pclath	equ	0xFFA
 44075                           tblptru	equ	0xFF8
 44076                           tblptrh	equ	0xFF7
 44077                           tblptrl	equ	0xFF6
 44078                           tablat	equ	0xFF5
 44079                           prodh	equ	0xFF4
 44080                           prodl	equ	0xFF3
 44081                           intcon	equ	0xFF2
 44082                           intcon2	equ	0xFF1
 44083                           intcon3	equ	0xFF0
 44084                           indf0	equ	0xFEF
 44085                           postinc0	equ	0xFEE
 44086                           fsr0h	equ	0xFEA
 44087                           fsr0l	equ	0xFE9
 44088                           wreg	equ	0xFE8
 44089                           postinc1	equ	0xFE6
 44090                           postdec1	equ	0xFE5
 44091                           plusw1	equ	0xFE3
 44092                           fsr1h	equ	0xFE2
 44093                           fsr1l	equ	0xFE1
 44094                           indf2	equ	0xFDF
 44095                           postinc2	equ	0xFDE
 44096                           postdec2	equ	0xFDD
 44097                           plusw2	equ	0xFDB
 44098                           fsr2h	equ	0xFDA
 44099                           fsr2l	equ	0xFD9
 44100                           status	equ	0xFD8
 44101                           
 44102 ;; *************** function _RADIO_SetModulation *****************
 44103 ;; Defined at:
 44104 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44105 ;; Parameters:    Size  Location     Type
 44106 ;;  modulation      1    wreg     enum E6984
 44107 ;; Auto vars:     Size  Location     Type
 44108 ;;  modulation      1    0[BANK0 ] enum E6984
 44109 ;; Return value:  Size  Location     Type
 44110 ;;                  1    wreg      void 
 44111 ;; Registers used:
 44112 ;;		wreg
 44113 ;; Tracked objects:
 44114 ;;		On entry : 0/0
 44115 ;;		On exit  : 0/0
 44116 ;;		Unchanged: 0/0
 44117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44121 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44122 ;;Total ram usage:        1 bytes
 44123 ;; Hardware stack levels used:    1
 44124 ;; Hardware stack levels required when called:    7
 44125 ;; This function calls:
 44126 ;;		Nothing
 44127 ;; This function is called by:
 44128 ;;		_ConfigureRadio
 44129 ;; This function uses a non-reentrant model
 44130 ;;
 44131                           
 44132                           	psect	text240
 44133  00C5E2                     __ptext240:
 44134                           	opt stack 0
 44135  00C5E2                     _RADIO_SetModulation:
 44136                           	opt stack 19
 44137                           
 44138                           ;incstack = 0
 44139                           ;RADIO_SetModulation@modulation stored from wreg
 44140  00C5E2  0100               	movlb	0	; () banked
 44141  00C5E4  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
 44142                           
 44143                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 44144  00C5E6  C060  F14D         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 44145  00C5EA  0012               	return		;funcret
 44146  00C5EC                     __end_of_RADIO_SetModulation:
 44147                           	opt stack 0
 44148                           tosu	equ	0xFFF
 44149                           tosh	equ	0xFFE
 44150                           tosl	equ	0xFFD
 44151                           pclath	equ	0xFFA
 44152                           tblptru	equ	0xFF8
 44153                           tblptrh	equ	0xFF7
 44154                           tblptrl	equ	0xFF6
 44155                           tablat	equ	0xFF5
 44156                           prodh	equ	0xFF4
 44157                           prodl	equ	0xFF3
 44158                           intcon	equ	0xFF2
 44159                           intcon2	equ	0xFF1
 44160                           intcon3	equ	0xFF0
 44161                           indf0	equ	0xFEF
 44162                           postinc0	equ	0xFEE
 44163                           fsr0h	equ	0xFEA
 44164                           fsr0l	equ	0xFE9
 44165                           wreg	equ	0xFE8
 44166                           postinc1	equ	0xFE6
 44167                           postdec1	equ	0xFE5
 44168                           plusw1	equ	0xFE3
 44169                           fsr1h	equ	0xFE2
 44170                           fsr1l	equ	0xFE1
 44171                           indf2	equ	0xFDF
 44172                           postinc2	equ	0xFDE
 44173                           postdec2	equ	0xFDD
 44174                           plusw2	equ	0xFDB
 44175                           fsr2h	equ	0xFDA
 44176                           fsr2l	equ	0xFD9
 44177                           status	equ	0xFD8
 44178                           
 44179 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 44180 ;; Defined at:
 44181 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44182 ;; Parameters:    Size  Location     Type
 44183 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
 44184 ;; Auto vars:     Size  Location     Type
 44185 ;;		None
 44186 ;; Return value:  Size  Location     Type
 44187 ;;                  1    wreg      void 
 44188 ;; Registers used:
 44189 ;;		None
 44190 ;; Tracked objects:
 44191 ;;		On entry : 0/0
 44192 ;;		On exit  : 0/0
 44193 ;;		Unchanged: 0/0
 44194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44195 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44198 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44199 ;;Total ram usage:        2 bytes
 44200 ;; Hardware stack levels used:    1
 44201 ;; Hardware stack levels required when called:    7
 44202 ;; This function calls:
 44203 ;;		Nothing
 44204 ;; This function is called by:
 44205 ;;		_ConfigureRadio
 44206 ;; This function uses a non-reentrant model
 44207 ;;
 44208                           
 44209                           	psect	text241
 44210  00C5EC                     __ptext241:
 44211                           	opt stack 0
 44212  00C5EC                     _RADIO_SetFrequencyHopPeriod:
 44213                           	opt stack 19
 44214                           
 44215                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 44216                           
 44217                           ;incstack = 0
 44218  00C5EC  C060  F153         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 44219  00C5F0  C061  F154         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 44220  00C5F4  0012               	return		;funcret
 44221  00C5F6                     __end_of_RADIO_SetFrequencyHopPeriod:
 44222                           	opt stack 0
 44223                           tosu	equ	0xFFF
 44224                           tosh	equ	0xFFE
 44225                           tosl	equ	0xFFD
 44226                           pclath	equ	0xFFA
 44227                           tblptru	equ	0xFF8
 44228                           tblptrh	equ	0xFF7
 44229                           tblptrl	equ	0xFF6
 44230                           tablat	equ	0xFF5
 44231                           prodh	equ	0xFF4
 44232                           prodl	equ	0xFF3
 44233                           intcon	equ	0xFF2
 44234                           intcon2	equ	0xFF1
 44235                           intcon3	equ	0xFF0
 44236                           indf0	equ	0xFEF
 44237                           postinc0	equ	0xFEE
 44238                           fsr0h	equ	0xFEA
 44239                           fsr0l	equ	0xFE9
 44240                           wreg	equ	0xFE8
 44241                           postinc1	equ	0xFE6
 44242                           postdec1	equ	0xFE5
 44243                           plusw1	equ	0xFE3
 44244                           fsr1h	equ	0xFE2
 44245                           fsr1l	equ	0xFE1
 44246                           indf2	equ	0xFDF
 44247                           postinc2	equ	0xFDE
 44248                           postdec2	equ	0xFDD
 44249                           plusw2	equ	0xFDB
 44250                           fsr2h	equ	0xFDA
 44251                           fsr2l	equ	0xFD9
 44252                           status	equ	0xFD8
 44253                           
 44254 ;; *************** function _RADIO_SetFSKSyncWord *****************
 44255 ;; Defined at:
 44256 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44257 ;; Parameters:    Size  Location     Type
 44258 ;;  syncWordLen     1    wreg     unsigned char 
 44259 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
 44260 ;;		 -> FskSyncWordBuff(3), 
 44261 ;; Auto vars:     Size  Location     Type
 44262 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
 44263 ;; Return value:  Size  Location     Type
 44264 ;;                  1    wreg      void 
 44265 ;; Registers used:
 44266 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44267 ;; Tracked objects:
 44268 ;;		On entry : 0/0
 44269 ;;		On exit  : 0/0
 44270 ;;		Unchanged: 0/0
 44271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44272 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44275 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44276 ;;Total ram usage:        3 bytes
 44277 ;; Hardware stack levels used:    1
 44278 ;; Hardware stack levels required when called:    8
 44279 ;; This function calls:
 44280 ;;		_memcpy
 44281 ;; This function is called by:
 44282 ;;		_ConfigureRadio
 44283 ;; This function uses a non-reentrant model
 44284 ;;
 44285                           
 44286                           	psect	text242
 44287  00B9E6                     __ptext242:
 44288                           	opt stack 0
 44289  00B9E6                     _RADIO_SetFSKSyncWord:
 44290                           	opt stack 18
 44291                           
 44292                           ;incstack = 0
 44293                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 44294  00B9E6  0100               	movlb	0	; () banked
 44295  00B9E8  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 44296                           
 44297                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 44298  00B9EA  0E08               	movlw	8
 44299  00B9EC  0100               	movlb	0	; () banked
 44300  00B9EE  656D               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 44301  00B9F0  D002               	goto	l1133
 44302                           
 44303                           ; BSR set to: 0
 44304                           ;radio_driver_SX1276.c: 1627: {
 44305                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 44306  00B9F2  0E08               	movlw	8
 44307  00B9F4  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 44308  00B9F6                     l1133:
 44309                           
 44310                           ; BSR set to: 0
 44311                           ;radio_driver_SX1276.c: 1629: }
 44312                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 44313                           
 44314                           ; BSR set to: 0
 44315  00B9F6  0E44               	movlw	low (_RadioConfiguration+15)
 44316  00B9F8  6F60               	movwf	memcpy@d1& (0+255),b
 44317  00B9FA  0E01               	movlw	high (_RadioConfiguration+15)
 44318  00B9FC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44319  00B9FE  C06B  F062         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 44320  00BA02  C06C  F063         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 44321  00BA06  C06D  F064         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 44322  00BA0A  6B65               	clrf	(memcpy@n+1)& (0+255),b
 44323  00BA0C  ECAB  F055         	call	_memcpy	;wreg free
 44324                           
 44325                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 44326  00BA10  C06D  F14C         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 44327  00BA14  0012               	return		;funcret
 44328  00BA16                     __end_of_RADIO_SetFSKSyncWord:
 44329                           	opt stack 0
 44330                           tosu	equ	0xFFF
 44331                           tosh	equ	0xFFE
 44332                           tosl	equ	0xFFD
 44333                           pclath	equ	0xFFA
 44334                           tblptru	equ	0xFF8
 44335                           tblptrh	equ	0xFF7
 44336                           tblptrl	equ	0xFF6
 44337                           tablat	equ	0xFF5
 44338                           prodh	equ	0xFF4
 44339                           prodl	equ	0xFF3
 44340                           intcon	equ	0xFF2
 44341                           intcon2	equ	0xFF1
 44342                           intcon3	equ	0xFF0
 44343                           indf0	equ	0xFEF
 44344                           postinc0	equ	0xFEE
 44345                           fsr0h	equ	0xFEA
 44346                           fsr0l	equ	0xFE9
 44347                           wreg	equ	0xFE8
 44348                           postinc1	equ	0xFE6
 44349                           postdec1	equ	0xFE5
 44350                           plusw1	equ	0xFE3
 44351                           fsr1h	equ	0xFE2
 44352                           fsr1l	equ	0xFE1
 44353                           indf2	equ	0xFDF
 44354                           postinc2	equ	0xFDE
 44355                           postdec2	equ	0xFDD
 44356                           plusw2	equ	0xFDB
 44357                           fsr2h	equ	0xFDA
 44358                           fsr2l	equ	0xFD9
 44359                           status	equ	0xFD8
 44360                           
 44361 ;; *************** function _RADIO_SetChannelFrequency *****************
 44362 ;; Defined at:
 44363 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44364 ;; Parameters:    Size  Location     Type
 44365 ;;  frequency       4    0[BANK0 ] unsigned long 
 44366 ;; Auto vars:     Size  Location     Type
 44367 ;;		None
 44368 ;; Return value:  Size  Location     Type
 44369 ;;                  2    0[BANK0 ] enum E7038
 44370 ;; Registers used:
 44371 ;;		wreg, status,2, status,0
 44372 ;; Tracked objects:
 44373 ;;		On entry : 0/0
 44374 ;;		On exit  : 0/0
 44375 ;;		Unchanged: 0/0
 44376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44377 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44380 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44381 ;;Total ram usage:        4 bytes
 44382 ;; Hardware stack levels used:    1
 44383 ;; Hardware stack levels required when called:    7
 44384 ;; This function calls:
 44385 ;;		Nothing
 44386 ;; This function is called by:
 44387 ;;		_ConfigureRadio
 44388 ;; This function uses a non-reentrant model
 44389 ;;
 44390                           
 44391                           	psect	text243
 44392  009EB6                     __ptext243:
 44393                           	opt stack 0
 44394  009EB6                     _RADIO_SetChannelFrequency:
 44395                           	opt stack 19
 44396                           
 44397                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 44398                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 44399                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 44400                           
 44401                           ;incstack = 0
 44402  009EB6  0E40               	movlw	64
 44403  009EB8  0100               	movlb	0	; () banked
 44404  009EBA  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44405  009EBC  0E74               	movlw	116
 44406  009EBE  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44407  009EC0  0E2A               	movlw	42
 44408  009EC2  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44409  009EC4  0E08               	movlw	8
 44410  009EC6  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44411  009EC8  A0D8               	btfss	status,0,c
 44412  009ECA  D00A               	goto	u19530
 44413                           
 44414                           ; BSR set to: 0
 44415  009ECC  0EC1               	movlw	193
 44416  009ECE  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44417  009ED0  0E49               	movlw	73
 44418  009ED2  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44419  009ED4  0E6E               	movlw	110
 44420  009ED6  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44421  009ED8  0E0A               	movlw	10
 44422  009EDA  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44423  009EDC  A0D8               	btfss	status,0,c
 44424  009EDE  D027               	goto	u19570
 44425  009EE0                     u19530:
 44426                           
 44427                           ; BSR set to: 0
 44428                           
 44429                           ; BSR set to: 0
 44430  009EE0  0E80               	movlw	128
 44431  009EE2  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44432  009EE4  0E1A               	movlw	26
 44433  009EE6  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44434  009EE8  0E70               	movlw	112
 44435  009EEA  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44436  009EEC  0E18               	movlw	24
 44437  009EEE  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44438  009EF0  A0D8               	btfss	status,0,c
 44439  009EF2  D00A               	goto	u19550
 44440                           
 44441                           ; BSR set to: 0
 44442  009EF4  0E41               	movlw	65
 44443  009EF6  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44444  009EF8  0EDD               	movlw	221
 44445  009EFA  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44446  009EFC  0E4A               	movlw	74
 44447  009EFE  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44448  009F00  0E1F               	movlw	31
 44449  009F02  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44450  009F04  A0D8               	btfss	status,0,c
 44451  009F06  D013               	goto	u19570
 44452  009F08                     u19550:
 44453                           
 44454                           ; BSR set to: 0
 44455                           
 44456                           ; BSR set to: 0
 44457  009F08  0E80               	movlw	128
 44458  009F0A  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44459  009F0C  0E13               	movlw	19
 44460  009F0E  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44461  009F10  0E61               	movlw	97
 44462  009F12  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44463  009F14  0E33               	movlw	51
 44464  009F16  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44465  009F18  A0D8               	btfss	status,0,c
 44466  009F1A  0012               	return	
 44467                           
 44468                           ; BSR set to: 0
 44469  009F1C  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44470  009F1E  0EF7               	movlw	247
 44471  009F20  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44472  009F22  0ECB               	movlw	203
 44473  009F24  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44474  009F26  0E3C               	movlw	60
 44475  009F28  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44476  009F2A  B0D8               	btfsc	status,0,c
 44477  009F2C  0012               	return	
 44478  009F2E                     u19570:
 44479                           
 44480                           ; BSR set to: 0
 44481                           ;radio_driver_SX1276.c: 1449: {
 44482                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 44483  009F2E  C060  F135         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 44484  009F32  C061  F136         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 44485  009F36  C062  F137         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 44486  009F3A  C063  F138         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 44487                           
 44488                           ; BSR set to: 0
 44489                           ;radio_driver_SX1276.c: 1453: else
 44490                           ;radio_driver_SX1276.c: 1454: {
 44491                           ;radio_driver_SX1276.c: 1455: return ERR_OUT_OF_RANGE;
 44492                           ;	Return value of _RADIO_SetChannelFrequency is never used
 44493                           
 44494                           ; BSR set to: 0
 44495                           ;radio_driver_SX1276.c: 1452: }
 44496                           
 44497                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 44498                           ;	Return value of _RADIO_SetChannelFrequency is never used
 44499  009F3E  0012               	return	
 44500  009F40                     __end_of_RADIO_SetChannelFrequency:
 44501                           	opt stack 0
 44502                           tosu	equ	0xFFF
 44503                           tosh	equ	0xFFE
 44504                           tosl	equ	0xFFD
 44505                           pclath	equ	0xFFA
 44506                           tblptru	equ	0xFF8
 44507                           tblptrh	equ	0xFF7
 44508                           tblptrl	equ	0xFF6
 44509                           tablat	equ	0xFF5
 44510                           prodh	equ	0xFF4
 44511                           prodl	equ	0xFF3
 44512                           intcon	equ	0xFF2
 44513                           intcon2	equ	0xFF1
 44514                           intcon3	equ	0xFF0
 44515                           indf0	equ	0xFEF
 44516                           postinc0	equ	0xFEE
 44517                           fsr0h	equ	0xFEA
 44518                           fsr0l	equ	0xFE9
 44519                           wreg	equ	0xFE8
 44520                           postinc1	equ	0xFE6
 44521                           postdec1	equ	0xFE5
 44522                           plusw1	equ	0xFE3
 44523                           fsr1h	equ	0xFE2
 44524                           fsr1l	equ	0xFE1
 44525                           indf2	equ	0xFDF
 44526                           postinc2	equ	0xFDE
 44527                           postdec2	equ	0xFDD
 44528                           plusw2	equ	0xFDB
 44529                           fsr2h	equ	0xFDA
 44530                           fsr2l	equ	0xFD9
 44531                           status	equ	0xFD8
 44532                           
 44533 ;; *************** function _RADIO_SetBandwidth *****************
 44534 ;; Defined at:
 44535 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44536 ;; Parameters:    Size  Location     Type
 44537 ;;  bandwidth       1    wreg     enum E7002
 44538 ;; Auto vars:     Size  Location     Type
 44539 ;;  bandwidth       1    0[BANK0 ] enum E7002
 44540 ;; Return value:  Size  Location     Type
 44541 ;;                  1    wreg      void 
 44542 ;; Registers used:
 44543 ;;		wreg
 44544 ;; Tracked objects:
 44545 ;;		On entry : 0/0
 44546 ;;		On exit  : 0/0
 44547 ;;		Unchanged: 0/0
 44548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44550 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44552 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44553 ;;Total ram usage:        1 bytes
 44554 ;; Hardware stack levels used:    1
 44555 ;; Hardware stack levels required when called:    7
 44556 ;; This function calls:
 44557 ;;		Nothing
 44558 ;; This function is called by:
 44559 ;;		_ConfigureRadio
 44560 ;; This function uses a non-reentrant model
 44561 ;;
 44562                           
 44563                           	psect	text244
 44564  00C5F6                     __ptext244:
 44565                           	opt stack 0
 44566  00C5F6                     _RADIO_SetBandwidth:
 44567                           	opt stack 19
 44568                           
 44569                           ; BSR set to: 0
 44570                           ;incstack = 0
 44571                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 44572  00C5F6  0100               	movlb	0	; () banked
 44573  00C5F8  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 44574                           
 44575                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 44576  00C5FA  C060  F14F         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 44577  00C5FE  0012               	return		;funcret
 44578  00C600                     __end_of_RADIO_SetBandwidth:
 44579                           	opt stack 0
 44580                           tosu	equ	0xFFF
 44581                           tosh	equ	0xFFE
 44582                           tosl	equ	0xFFD
 44583                           pclath	equ	0xFFA
 44584                           tblptru	equ	0xFF8
 44585                           tblptrh	equ	0xFF7
 44586                           tblptrl	equ	0xFF6
 44587                           tablat	equ	0xFF5
 44588                           prodh	equ	0xFF4
 44589                           prodl	equ	0xFF3
 44590                           intcon	equ	0xFF2
 44591                           intcon2	equ	0xFF1
 44592                           intcon3	equ	0xFF0
 44593                           indf0	equ	0xFEF
 44594                           postinc0	equ	0xFEE
 44595                           fsr0h	equ	0xFEA
 44596                           fsr0l	equ	0xFE9
 44597                           wreg	equ	0xFE8
 44598                           postinc1	equ	0xFE6
 44599                           postdec1	equ	0xFE5
 44600                           plusw1	equ	0xFE3
 44601                           fsr1h	equ	0xFE2
 44602                           fsr1l	equ	0xFE1
 44603                           indf2	equ	0xFDF
 44604                           postinc2	equ	0xFDE
 44605                           postdec2	equ	0xFDD
 44606                           plusw2	equ	0xFDB
 44607                           fsr2h	equ	0xFDA
 44608                           fsr2l	equ	0xFD9
 44609                           status	equ	0xFD8
 44610                           
 44611 ;; *************** function _RADIO_Transmit *****************
 44612 ;; Defined at:
 44613 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44614 ;; Parameters:    Size  Location     Type
 44615 ;;  buffer          2   81[BANK0 ] PTR unsigned char 
 44616 ;;		 -> macBuffer(271), 
 44617 ;;  bufferLen       1   83[BANK0 ] unsigned char 
 44618 ;; Auto vars:     Size  Location     Type
 44619 ;;  i               1   97[BANK0 ] unsigned char 
 44620 ;;  regValue        1   96[BANK0 ] unsigned char 
 44621 ;; Return value:  Size  Location     Type
 44622 ;;                  2   81[BANK0 ] enum E7038
 44623 ;; Registers used:
 44624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44625 ;; Tracked objects:
 44626 ;;		On entry : 0/0
 44627 ;;		On exit  : 0/0
 44628 ;;		Unchanged: 0/0
 44629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44630 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44631 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44632 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44633 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44634 ;;Total ram usage:       17 bytes
 44635 ;; Hardware stack levels used:    1
 44636 ;; Hardware stack levels required when called:   12
 44637 ;; This function calls:
 44638 ;;		_HALSPICSAssert
 44639 ;;		_HALSPICSDeassert
 44640 ;;		_HALSPISend
 44641 ;;		_RADIO_RegisterRead
 44642 ;;		_RADIO_RegisterWrite
 44643 ;;		_RADIO_WriteConfiguration
 44644 ;;		_RADIO_WriteMode
 44645 ;;		_SwTimerSetTimeout
 44646 ;;		_SwTimerStart
 44647 ;;		_SwTimerStop
 44648 ;;		___lldiv
 44649 ;; This function is called by:
 44650 ;;		_LORAWAN_RxTimeout
 44651 ;;		_LORAWAN_Join
 44652 ;;		_LORAWAN_Send
 44653 ;;		_AckRetransmissionCallback
 44654 ;;		_UnconfirmedTransmissionCallback
 44655 ;; This function uses a non-reentrant model
 44656 ;;
 44657                           
 44658                           	psect	text245
 44659  005BC8                     __ptext245:
 44660                           	opt stack 0
 44661  005BC8                     _RADIO_Transmit:
 44662                           	opt stack 17
 44663                           
 44664                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 44665                           ;radio_driver_SX1276.c: 789: uint8_t i;
 44666                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 44667                           
 44668                           ;incstack = 0
 44669  005BC8  0101               	movlb	1	; () banked
 44670  005BCA  A558               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 44671  005BCC  D006               	goto	l828
 44672                           
 44673                           ; BSR set to: 1
 44674                           ;radio_driver_SX1276.c: 792: {
 44675                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 44676  005BCE  0E80               	movlw	128
 44677  005BD0  0100               	movlb	0	; () banked
 44678  005BD2  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 44679  005BD4  0E03               	movlw	3
 44680  005BD6  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 44681                           
 44682                           ; BSR set to: 0
 44683  005BD8  0012               	return	
 44684  005BDA                     l828:
 44685                           
 44686                           ;radio_driver_SX1276.c: 794: }
 44687                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 44688                           
 44689                           ; BSR set to: 0
 44690  005BDA  C158  F0B4         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 44691  005BDE  0E03               	movlw	3
 44692  005BE0  0100               	movlb	0	; () banked
 44693  005BE2  17B4               	andwf	??_RADIO_Transmit& (0+255),f,b
 44694  005BE4  B4D8               	btfsc	status,2,c
 44695  005BE6  D005               	goto	l830
 44696                           
 44697                           ; BSR set to: 0
 44698                           ;radio_driver_SX1276.c: 797: {
 44699                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 44700  005BE8  0E80               	movlw	128
 44701  005BEA  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 44702  005BEC  0E04               	movlw	4
 44703  005BEE  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 44704                           
 44705                           ; BSR set to: 0
 44706  005BF0  0012               	return	
 44707  005BF2                     l830:
 44708                           
 44709                           ; BSR set to: 0
 44710                           ;radio_driver_SX1276.c: 799: }
 44711                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 44712                           
 44713                           ; BSR set to: 0
 44714  005BF2  0101               	movlb	1	; () banked
 44715  005BF4  514D               	movf	(_RadioConfiguration+24)& (0+255),w,b
 44716  005BF6  A4D8               	btfss	status,2,c
 44717  005BF8  D009               	goto	l831
 44718                           
 44719                           ; BSR set to: 1
 44720  005BFA  0E40               	movlw	64
 44721  005BFC  0100               	movlb	0	; () banked
 44722  005BFE  65B3               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 44723  005C00  D005               	goto	l831
 44724                           
 44725                           ; BSR set to: 0
 44726                           ;radio_driver_SX1276.c: 802: {
 44727                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 44728  005C02  0E80               	movlw	128
 44729  005C04  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 44730  005C06  0E02               	movlw	2
 44731  005C08  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 44732                           
 44733                           ; BSR set to: 0
 44734  005C0A  0012               	return	
 44735  005C0C                     l831:
 44736                           
 44737                           ;radio_driver_SX1276.c: 804: }
 44738                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 44739                           
 44740                           ; BSR set to: 0
 44741  005C0C  0101               	movlb	1	; () banked
 44742  005C0E  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 44743  005C10  ECAA  F05E         	call	_SwTimerStop
 44744                           
 44745                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 44746  005C14  0E00               	movlw	0
 44747  005C16  0100               	movlb	0	; () banked
 44748  005C18  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 44749  005C1A  0E04               	movlw	4
 44750  005C1C  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 44751  005C1E  EC87  F012         	call	_RADIO_WriteConfiguration	;wreg free
 44752                           
 44753                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 44754  005C22  0101               	movlb	1	; () banked
 44755  005C24  054D               	decf	(_RadioConfiguration+24)& (0+255),w,b
 44756  005C26  A4D8               	btfss	status,2,c
 44757  005C28  D027               	goto	l832
 44758                           
 44759                           ; BSR set to: 1
 44760                           ;radio_driver_SX1276.c: 813: {
 44761                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 44762  005C2A  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 44763  005C2E  0E22               	movlw	34
 44764  005C30  ECEF  F05F         	call	_RADIO_RegisterWrite
 44765                           
 44766                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 44767  005C34  0E0A               	movlw	10
 44768  005C36  EC96  F05E         	call	_RADIO_RegisterRead
 44769  005C3A  0100               	movlb	0	; () banked
 44770  005C3C  6FC0               	movwf	RADIO_Transmit@regValue& (0+255),b
 44771                           
 44772                           ; BSR set to: 0
 44773                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 44774  005C3E  0EF0               	movlw	240
 44775  005C40  17C0               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 44776                           
 44777                           ; BSR set to: 0
 44778                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 44779  005C42  87C0               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 44780                           
 44781                           ; BSR set to: 0
 44782                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 44783  005C44  C0C0  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 44784  005C48  0E0A               	movlw	10
 44785  005C4A  ECEF  F05F         	call	_RADIO_RegisterWrite
 44786                           
 44787                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 44788  005C4E  0E40               	movlw	64
 44789  005C50  0100               	movlb	0	; () banked
 44790  005C52  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 44791  005C54  0E40               	movlw	64
 44792  005C56  ECEF  F05F         	call	_RADIO_RegisterWrite
 44793                           
 44794                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 44795  005C5A  0E00               	movlw	0
 44796  005C5C  0100               	movlb	0	; () banked
 44797  005C5E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 44798  005C60  0E41               	movlw	65
 44799  005C62  ECEF  F05F         	call	_RADIO_RegisterWrite
 44800                           
 44801                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 44802  005C66  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 44803  005C6A  0E01               	movlw	1
 44804  005C6C  0100               	movlb	0	; () banked
 44805  005C6E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 44806  005C70  0E01               	movlw	1
 44807  005C72  ECDE  F043         	call	_RADIO_WriteMode
 44808                           
 44809                           ;radio_driver_SX1276.c: 828: }
 44810  005C76  D00C               	goto	l833
 44811  005C78                     l832:
 44812                           
 44813                           ;radio_driver_SX1276.c: 829: else
 44814                           ;radio_driver_SX1276.c: 830: {
 44815                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 44816  005C78  0E00               	movlw	0
 44817  005C7A  0100               	movlb	0	; () banked
 44818  005C7C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 44819  005C7E  0E40               	movlw	64
 44820  005C80  ECEF  F05F         	call	_RADIO_RegisterWrite
 44821                           
 44822                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 44823  005C84  0E00               	movlw	0
 44824  005C86  0100               	movlb	0	; () banked
 44825  005C88  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 44826  005C8A  0E41               	movlw	65
 44827  005C8C  ECEF  F05F         	call	_RADIO_RegisterWrite
 44828  005C90                     l833:
 44829                           
 44830                           ;radio_driver_SX1276.c: 834: }
 44831                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 44832  005C90  0101               	movlb	1	; () banked
 44833  005C92  514D               	movf	(_RadioConfiguration+24)& (0+255),w,b
 44834  005C94  A4D8               	btfss	status,2,c
 44835  005C96  D005               	goto	l834
 44836                           
 44837                           ; BSR set to: 1
 44838                           ;radio_driver_SX1276.c: 837: {
 44839                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 44840  005C98  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 44841  005C9C  0E00               	movlw	0
 44842  005C9E  ECEF  F05F         	call	_RADIO_RegisterWrite
 44843  005CA2                     l834:
 44844                           
 44845                           ;radio_driver_SX1276.c: 840: }
 44846                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 44847  005CA2  EC6E  F063         	call	_HALSPICSAssert	;wreg free
 44848                           
 44849                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 44850  005CA6  0E80               	movlw	128
 44851  005CA8  EC78  F062         	call	_HALSPISend
 44852                           
 44853                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 44854  005CAC  0E00               	movlw	0
 44855  005CAE  0100               	movlb	0	; () banked
 44856  005CB0  6FC1               	movwf	RADIO_Transmit@i& (0+255),b
 44857  005CB2  D00D               	goto	l835
 44858  005CB4                     
 44859                           ; BSR set to: 0
 44860                           ;radio_driver_SX1276.c: 846: {
 44861                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 44862                           
 44863                           ; BSR set to: 0
 44864  005CB4  51C1               	movf	RADIO_Transmit@i& (0+255),w,b
 44865  005CB6  0D01               	mullw	1
 44866  005CB8  50F3               	movf	prodl,w,c
 44867  005CBA  25B1               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 44868  005CBC  6ED9               	movwf	fsr2l,c
 44869  005CBE  50F4               	movf	prodh,w,c
 44870  005CC0  21B2               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 44871  005CC2  6EDA               	movwf	fsr2h,c
 44872  005CC4  50DF               	movf	indf2,w,c
 44873  005CC6  EC78  F062         	call	_HALSPISend
 44874  005CCA  0100               	movlb	0	; () banked
 44875  005CCC  2BC1               	incf	RADIO_Transmit@i& (0+255),f,b
 44876  005CCE                     l835:
 44877                           
 44878                           ; BSR set to: 0
 44879                           
 44880                           ; BSR set to: 0
 44881  005CCE  51B3               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 44882  005CD0  5DC1               	subwf	RADIO_Transmit@i& (0+255),w,b
 44883  005CD2  A0D8               	btfss	status,0,c
 44884  005CD4  D7EF               	goto	l836
 44885                           
 44886                           ; BSR set to: 0
 44887                           ;radio_driver_SX1276.c: 848: }
 44888                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 44889                           
 44890                           ; BSR set to: 0
 44891  005CD6  EC6C  F063         	call	_HALSPICSDeassert	;wreg free
 44892                           
 44893                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 44894  005CDA  0101               	movlb	1	; () banked
 44895  005CDC  8158               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 44896                           
 44897                           ; BSR set to: 1
 44898                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 44899  005CDE  0EE7               	movlw	231
 44900  005CE0  1758               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 44901                           
 44902                           ; BSR set to: 1
 44903                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 44904  005CE2  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 44905  005CE6  0E00               	movlw	0
 44906  005CE8  0100               	movlb	0	; () banked
 44907  005CEA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 44908  005CEC  0E03               	movlw	3
 44909  005CEE  ECDE  F043         	call	_RADIO_WriteMode
 44910                           
 44911                           ; BSR set to: 0
 44912                           
 44913                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 44914  005CF2  0E00               	movlw	0
 44915  005CF4  0100               	movlb	0	; () banked
 44916  005CF6  6FB8               	movwf	_RADIO_Transmit$1172& (0+255),b
 44917  005CF8  0E00               	movlw	0
 44918  005CFA  6FB9               	movwf	(_RADIO_Transmit$1172+1)& (0+255),b
 44919  005CFC  0E0A               	movlw	10
 44920  005CFE  6FBA               	movwf	(_RADIO_Transmit$1172+2)& (0+255),b
 44921  005D00  0E00               	movlw	0
 44922  005D02  6FBB               	movwf	(_RADIO_Transmit$1172+3)& (0+255),b
 44923                           
 44924                           ; BSR set to: 0
 44925                           
 44926                           ; BSR set to: 0
 44927  005D04  C0B8  F06D         	movff	_RADIO_Transmit$1172,SwTimerSetTimeout@timeout
 44928  005D08  C0B9  F06E         	movff	_RADIO_Transmit$1172+1,SwTimerSetTimeout@timeout+1
 44929  005D0C  C0BA  F06F         	movff	_RADIO_Transmit$1172+2,SwTimerSetTimeout@timeout+2
 44930  005D10  C0BB  F070         	movff	_RADIO_Transmit$1172+3,SwTimerSetTimeout@timeout+3
 44931  005D14  0101               	movlb	1	; () banked
 44932  005D16  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 44933  005D18  ECD7  F05A         	call	_SwTimerSetTimeout
 44934                           
 44935                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 44936  005D1C  0101               	movlb	1	; () banked
 44937  005D1E  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 44938  005D20  EC5C  F04D         	call	_SwTimerStart
 44939                           
 44940                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 44941  005D24  0101               	movlb	1	; () banked
 44942  005D26  515F               	movf	(_RadioConfiguration+42)& (0+255),w,b
 44943  005D28  1160               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 44944  005D2A  1161               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 44945  005D2C  1162               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 44946  005D2E  B4D8               	btfsc	status,2,c
 44947  005D30  D061               	goto	l842
 44948                           
 44949                           ; BSR set to: 1
 44950                           ;radio_driver_SX1276.c: 866: {
 44951                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 44952  005D32  5162               	movf	(_RadioConfiguration+45)& (0+255),w,b
 44953  005D34  E107               	bnz	u21350
 44954  005D36  295F               	incf	(_RadioConfiguration+42)& (0+255),w,b
 44955  005D38  0EFF               	movlw	255
 44956  005D3A  5960               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 44957  005D3C  0E0F               	movlw	15
 44958  005D3E  5961               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 44959  005D40  A0D8               	btfss	status,0,c
 44960  005D42  D01D               	goto	l844
 44961  005D44                     u21350:
 44962                           
 44963                           ; BSR set to: 1
 44964  005D44  C15F  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 44965  005D48  C160  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 44966  005D4C  C161  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 44967  005D50  C162  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 44968  005D54  0E7D               	movlw	125
 44969  005D56  0100               	movlb	0	; () banked
 44970  005D58  6F64               	movwf	___lldiv@divisor& (0+255),b
 44971  005D5A  0E00               	movlw	0
 44972  005D5C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 44973  005D5E  0E00               	movlw	0
 44974  005D60  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 44975  005D62  0E00               	movlw	0
 44976  005D64  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 44977  005D66  ECB0  F050         	call	___lldiv	;wreg free
 44978  005D6A  0E0C               	movlw	12
 44979  005D6C                     u21365:
 44980  005D6C  90D8               	bcf	status,0,c
 44981  005D6E  0100               	movlb	0	; () banked
 44982  005D70  3760               	rlcf	?___lldiv& (0+255),f,b
 44983  005D72  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 44984  005D74  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 44985  005D76  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 44986  005D78  2EE8               	decfsz	wreg,f,c
 44987  005D7A  D7F8               	goto	u21365
 44988  005D7C  D023               	goto	L22
 44989  005D7E                     l844:
 44990                           
 44991                           ; BSR set to: 0
 44992  005D7E  C15F  F0B4         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 44993  005D82  C160  F0B5         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 44994  005D86  C161  F0B6         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 44995  005D8A  C162  F0B7         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 44996  005D8E  0E0C               	movlw	12
 44997  005D90                     u21375:
 44998  005D90  90D8               	bcf	status,0,c
 44999  005D92  0100               	movlb	0	; () banked
 45000  005D94  37B4               	rlcf	??_RADIO_Transmit& (0+255),f,b
 45001  005D96  37B5               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 45002  005D98  37B6               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 45003  005D9A  37B7               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 45004  005D9C  2EE8               	decfsz	wreg,f,c
 45005  005D9E  D7F8               	goto	u21375
 45006  005DA0  C0B4  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
 45007  005DA4  C0B5  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 45008  005DA8  C0B6  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 45009  005DAC  C0B7  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 45010  005DB0  0E7D               	movlw	125
 45011  005DB2  6F64               	movwf	___lldiv@divisor& (0+255),b
 45012  005DB4  0E00               	movlw	0
 45013  005DB6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 45014  005DB8  0E00               	movlw	0
 45015  005DBA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 45016  005DBC  0E00               	movlw	0
 45017  005DBE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 45018  005DC0  ECB0  F050         	call	___lldiv	;wreg free
 45019  005DC4                     L22:
 45020  005DC4  C060  F0BC         	movff	?___lldiv,_RADIO_Transmit$1174
 45021  005DC8  C061  F0BD         	movff	?___lldiv+1,_RADIO_Transmit$1174+1
 45022  005DCC  C062  F0BE         	movff	?___lldiv+2,_RADIO_Transmit$1174+2
 45023  005DD0  C063  F0BF         	movff	?___lldiv+3,_RADIO_Transmit$1174+3
 45024  005DD4  C0BC  F06D         	movff	_RADIO_Transmit$1174,SwTimerSetTimeout@timeout
 45025  005DD8  C0BD  F06E         	movff	_RADIO_Transmit$1174+1,SwTimerSetTimeout@timeout+1
 45026  005DDC  C0BE  F06F         	movff	_RADIO_Transmit$1174+2,SwTimerSetTimeout@timeout+2
 45027  005DE0  C0BF  F070         	movff	_RADIO_Transmit$1174+3,SwTimerSetTimeout@timeout+3
 45028  005DE4  0101               	movlb	1	; () banked
 45029  005DE6  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 45030  005DE8  ECD7  F05A         	call	_SwTimerSetTimeout
 45031                           
 45032                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 45033  005DEC  0101               	movlb	1	; () banked
 45034  005DEE  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 45035  005DF0  EC5C  F04D         	call	_SwTimerStart
 45036  005DF4                     l842:
 45037                           
 45038                           ;radio_driver_SX1276.c: 869: }
 45039                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 45040  005DF4  0E00               	movlw	0
 45041  005DF6  0100               	movlb	0	; () banked
 45042  005DF8  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 45043  005DFA  0E00               	movlw	0
 45044  005DFC  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 45045  005DFE  0012               	return	
 45046  005E00                     __end_of_RADIO_Transmit:
 45047                           	opt stack 0
 45048                           tosu	equ	0xFFF
 45049                           tosh	equ	0xFFE
 45050                           tosl	equ	0xFFD
 45051                           pclath	equ	0xFFA
 45052                           tblptru	equ	0xFF8
 45053                           tblptrh	equ	0xFF7
 45054                           tblptrl	equ	0xFF6
 45055                           tablat	equ	0xFF5
 45056                           prodh	equ	0xFF4
 45057                           prodl	equ	0xFF3
 45058                           intcon	equ	0xFF2
 45059                           intcon2	equ	0xFF1
 45060                           intcon3	equ	0xFF0
 45061                           indf0	equ	0xFEF
 45062                           postinc0	equ	0xFEE
 45063                           fsr0h	equ	0xFEA
 45064                           fsr0l	equ	0xFE9
 45065                           wreg	equ	0xFE8
 45066                           postinc1	equ	0xFE6
 45067                           postdec1	equ	0xFE5
 45068                           plusw1	equ	0xFE3
 45069                           fsr1h	equ	0xFE2
 45070                           fsr1l	equ	0xFE1
 45071                           indf2	equ	0xFDF
 45072                           postinc2	equ	0xFDE
 45073                           postdec2	equ	0xFDD
 45074                           plusw2	equ	0xFDB
 45075                           fsr2h	equ	0xFDA
 45076                           fsr2l	equ	0xFD9
 45077                           status	equ	0xFD8
 45078                           
 45079 ;; *************** function _RADIO_WriteConfiguration *****************
 45080 ;; Defined at:
 45081 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 45082 ;; Parameters:    Size  Location     Type
 45083 ;;  symbolTimeou    2   70[BANK0 ] unsigned int 
 45084 ;; Auto vars:     Size  Location     Type
 45085 ;;  tempValue       4   76[BANK0 ] unsigned long 
 45086 ;;  regValue        1   80[BANK0 ] unsigned char 
 45087 ;;  i               1   75[BANK0 ] unsigned char 
 45088 ;; Return value:  Size  Location     Type
 45089 ;;                  1    wreg      void 
 45090 ;; Registers used:
 45091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45092 ;; Tracked objects:
 45093 ;;		On entry : 0/0
 45094 ;;		On exit  : 0/0
 45095 ;;		Unchanged: 0/0
 45096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45098 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45099 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45100 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45101 ;;Total ram usage:       11 bytes
 45102 ;; Hardware stack levels used:    1
 45103 ;; Hardware stack levels required when called:   11
 45104 ;; This function calls:
 45105 ;;		_RADIO_RegisterRead
 45106 ;;		_RADIO_RegisterWrite
 45107 ;;		_RADIO_WriteFSKBitRate
 45108 ;;		_RADIO_WriteFSKFrequencyDeviation
 45109 ;;		_RADIO_WriteFrequency
 45110 ;;		_RADIO_WriteMode
 45111 ;;		_RADIO_WritePower
 45112 ;;		___lmul
 45113 ;; This function is called by:
 45114 ;;		_RADIO_Transmit
 45115 ;;		_RADIO_ReceiveStart
 45116 ;;		_RADIO_TransmitCW
 45117 ;; This function uses a non-reentrant model
 45118 ;;
 45119                           
 45120                           	psect	text246
 45121  00250E                     __ptext246:
 45122                           	opt stack 0
 45123  00250E                     _RADIO_WriteConfiguration:
 45124                           	opt stack 17
 45125                           
 45126                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 45127                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 45128                           ;radio_driver_SX1276.c: 537: uint8_t i;
 45129                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 45130                           
 45131                           ; BSR set to: 0
 45132                           ;incstack = 0
 45133  00250E  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 45134  002512  0E00               	movlw	0
 45135  002514  0100               	movlb	0	; () banked
 45136  002516  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 45137  002518  0E00               	movlw	0
 45138  00251A  ECDE  F043         	call	_RADIO_WriteMode
 45139                           
 45140                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 45141  00251E  C135  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 45142  002522  C136  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 45143  002526  C137  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 45144  00252A  C138  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 45145  00252E  ECC3  F046         	call	_RADIO_WriteFrequency	;wreg free
 45146                           
 45147                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 45148  002532  0101               	movlb	1	; () banked
 45149  002534  5150               	movf	(_RadioConfiguration+27)& (0+255),w,b
 45150  002536  EC4B  F046         	call	_RADIO_WritePower
 45151                           
 45152                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 45153  00253A  0101               	movlb	1	; () banked
 45154  00253C  054D               	decf	(_RadioConfiguration+24)& (0+255),w,b
 45155  00253E  A4D8               	btfss	status,2,c
 45156  002540  D1ED               	goto	l784
 45157                           
 45158                           ; BSR set to: 1
 45159                           ;radio_driver_SX1276.c: 545: {
 45160                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 45161  002542  C143  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 45162  002546  0E39               	movlw	57
 45163  002548  ECEF  F05F         	call	_RADIO_RegisterWrite
 45164                           
 45165                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 45166                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 45167                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 45168                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 45169  00254C  C157  F0A8         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 45170  002550  0E01               	movlw	1
 45171  002552  0100               	movlb	0	; () banked
 45172  002554  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 45173  002556  0101               	movlb	1	; () banked
 45174  002558  90D8               	bcf	status,0,c
 45175  00255A  3556               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 45176  00255C  0100               	movlb	0	; () banked
 45177  00255E  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 45178  002560  0101               	movlb	1	; () banked
 45179  002562  394F               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 45180  002564  0BF0               	andlw	240
 45181  002566  0100               	movlb	0	; () banked
 45182  002568  11A9               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 45183  00256A  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 45184  00256C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45185  00256E  0E1D               	movlw	29
 45186  002570  ECEF  F05F         	call	_RADIO_RegisterWrite
 45187                           
 45188                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 45189                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 45190                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 45191                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 45192  002574  C0A6  F0A8         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 45193  002578  C0A7  F0A9         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 45194  00257C  C0A9  F0A8         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 45195  002580  0100               	movlb	0	; () banked
 45196  002582  6BA9               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 45197  002584  0E03               	movlw	3
 45198  002586  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 45199  002588  C151  F0AA         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 45200  00258C  0E01               	movlw	1
 45201  00258E  17AA               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 45202  002590  90D8               	bcf	status,0,c
 45203  002592  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 45204  002594  90D8               	bcf	status,0,c
 45205  002596  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 45206  002598  0101               	movlb	1	; () banked
 45207  00259A  394E               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 45208  00259C  0BF0               	andlw	240
 45209  00259E  0100               	movlb	0	; () banked
 45210  0025A0  11AA               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 45211  0025A2  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 45212  0025A4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45213  0025A6  0E1E               	movlw	30
 45214  0025A8  ECEF  F05F         	call	_RADIO_RegisterWrite
 45215                           
 45216                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 45217  0025AC  0101               	movlb	1	; () banked
 45218  0025AE  5153               	movf	(_RadioConfiguration+30)& (0+255),w,b
 45219  0025B0  1154               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 45220  0025B2  B4D8               	btfsc	status,2,c
 45221  0025B4  D06F               	goto	l785
 45222                           
 45223                           ; BSR set to: 1
 45224                           ;radio_driver_SX1276.c: 561: {
 45225                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 45226  0025B6  C153  F0AC         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 45227  0025BA  C154  F0AD         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 45228  0025BE  0100               	movlb	0	; () banked
 45229  0025C0  6BAE               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 45230  0025C2  6BAF               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 45231                           
 45232                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 45233  0025C4  D04E               	goto	l786
 45234  0025C6                     
 45235                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 45236                           
 45237                           ; BSR set to: 0
 45238  0025C6  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 45239  0025CA  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 45240  0025CE  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 45241  0025D2  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 45242  0025D6  0E7D               	movlw	125
 45243  0025D8  0100               	movlb	0	; () banked
 45244  0025DA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 45245  0025DC  0E00               	movlw	0
 45246  0025DE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 45247  0025E0  0E00               	movlw	0
 45248  0025E2  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 45249  0025E4  0E00               	movlw	0
 45250  0025E6  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 45251  0025E8  EC1D  F057         	call	___lmul	;wreg free
 45252  0025EC  D027               	goto	L24
 45253  0025EE                     
 45254                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 45255  0025EE  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 45256  0025F2  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 45257  0025F6  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 45258  0025FA  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 45259  0025FE  0EFA               	movlw	250
 45260  002600  0100               	movlb	0	; () banked
 45261  002602  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 45262  002604  0E00               	movlw	0
 45263  002606  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 45264  002608  0E00               	movlw	0
 45265  00260A  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 45266  00260C  0E00               	movlw	0
 45267  00260E  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 45268  002610  EC1D  F057         	call	___lmul	;wreg free
 45269  002614  D013               	goto	L24
 45270  002616                     
 45271                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 45272  002616  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 45273  00261A  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 45274  00261E  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 45275  002622  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 45276  002626  0EF4               	movlw	244
 45277  002628  0100               	movlb	0	; () banked
 45278  00262A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 45279  00262C  0E01               	movlw	1
 45280  00262E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 45281  002630  0E00               	movlw	0
 45282  002632  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 45283  002634  0E00               	movlw	0
 45284  002636  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 45285  002638  EC1D  F057         	call	___lmul	;wreg free
 45286  00263C                     L24:
 45287  00263C  C09A  F0AC         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 45288  002640  C09B  F0AD         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 45289  002644  C09C  F0AE         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 45290  002648  C09D  F0AF         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 45291                           
 45292                           ;radio_driver_SX1276.c: 574: break;
 45293  00264C  D016               	goto	l788
 45294  00264E                     
 45295                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 45296  00264E  0E00               	movlw	0
 45297  002650  0100               	movlb	0	; () banked
 45298  002652  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 45299  002654  0E00               	movlw	0
 45300  002656  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 45301  002658  0E00               	movlw	0
 45302  00265A  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 45303  00265C  0E00               	movlw	0
 45304  00265E  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 45305                           
 45306                           ; BSR set to: 0
 45307                           ;radio_driver_SX1276.c: 579: }
 45308                           
 45309                           ;radio_driver_SX1276.c: 578: break;
 45310  002660  D00C               	goto	l788
 45311  002662                     l786:
 45312                           
 45313                           ; BSR set to: 0
 45314                           
 45315                           ; BSR set to: 0
 45316  002662  0101               	movlb	1	; () banked
 45317  002664  514F               	movf	(_RadioConfiguration+26)& (0+255),w,b
 45318                           
 45319                           ; Switch size 1, requested type "space"
 45320                           ; Number of cases is 3, Range of values is 7 to 9
 45321                           ; switch strategies available:
 45322                           ; Name         Instructions Cycles
 45323                           ; simple_byte           10     6 (average)
 45324                           ;	Chosen strategy is simple_byte
 45325  002666  0A07               	xorlw	7	; case 7
 45326  002668  B4D8               	btfsc	status,2,c
 45327  00266A  D7AD               	goto	l787
 45328  00266C  0A0F               	xorlw	15	; case 8
 45329  00266E  B4D8               	btfsc	status,2,c
 45330  002670  D7BE               	goto	l789
 45331  002672  0A01               	xorlw	1	; case 9
 45332  002674  B4D8               	btfsc	status,2,c
 45333  002676  D7CF               	goto	l790
 45334  002678  D7EA               	goto	l791
 45335  00267A                     l788:
 45336                           
 45337                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 45338                           
 45339                           ; BSR set to: 1
 45340  00267A  0101               	movlb	1	; () banked
 45341  00267C  294E               	incf	(_RadioConfiguration+25)& (0+255),w,b
 45342  00267E  0100               	movlb	0	; () banked
 45343  002680  6FA8               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 45344  002682  D005               	goto	u19810
 45345  002684                     u19815:
 45346  002684  90D8               	bcf	status,0,c
 45347  002686  33AF               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 45348  002688  33AE               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 45349  00268A  33AD               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 45350  00268C  33AC               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 45351  00268E                     u19810:
 45352  00268E  2FA8               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 45353  002690  D7F9               	goto	u19815
 45354                           
 45355                           ;radio_driver_SX1276.c: 582: }
 45356  002692  D009               	goto	l792
 45357  002694                     l785:
 45358                           
 45359                           ;radio_driver_SX1276.c: 583: else
 45360                           ;radio_driver_SX1276.c: 584: {
 45361                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 45362  002694  0E00               	movlw	0
 45363  002696  0100               	movlb	0	; () banked
 45364  002698  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 45365  00269A  0E00               	movlw	0
 45366  00269C  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 45367  00269E  0E00               	movlw	0
 45368  0026A0  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 45369  0026A2  0E00               	movlw	0
 45370  0026A4  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 45371  0026A6                     l792:
 45372                           
 45373                           ;radio_driver_SX1276.c: 586: }
 45374                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 45375                           
 45376                           ; BSR set to: 0
 45377  0026A6  C0AC  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 45378  0026AA  0E24               	movlw	36
 45379  0026AC  ECEF  F05F         	call	_RADIO_RegisterWrite
 45380                           
 45381                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 45382  0026B0  C0A6  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 45383  0026B4  0E1F               	movlw	31
 45384  0026B6  ECEF  F05F         	call	_RADIO_RegisterWrite
 45385                           
 45386                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 45387  0026BA  0E26               	movlw	38
 45388  0026BC  EC96  F05E         	call	_RADIO_RegisterRead
 45389  0026C0  0100               	movlb	0	; () banked
 45390  0026C2  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45391                           
 45392                           ; BSR set to: 0
 45393                           ;radio_driver_SX1276.c: 596: if (
 45394                           ;radio_driver_SX1276.c: 597: (
 45395                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 45396                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 45397                           ;radio_driver_SX1276.c: 600: ) ||
 45398                           ;radio_driver_SX1276.c: 601: (
 45399                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 45400                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 45401                           ;radio_driver_SX1276.c: 604: )
 45402                           ;radio_driver_SX1276.c: 605: )
 45403  0026C4  0E0C               	movlw	12
 45404  0026C6  0101               	movlb	1	; () banked
 45405  0026C8  194E               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 45406  0026CA  A4D8               	btfss	status,2,c
 45407  0026CC  D008               	goto	u19840
 45408                           
 45409                           ; BSR set to: 1
 45410  0026CE  0E07               	movlw	7
 45411  0026D0  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45412  0026D2  B4D8               	btfsc	status,2,c
 45413  0026D4  D00C               	goto	u19860
 45414                           
 45415                           ; BSR set to: 1
 45416  0026D6  0E08               	movlw	8
 45417  0026D8  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45418  0026DA  B4D8               	btfsc	status,2,c
 45419  0026DC  D008               	goto	u19860
 45420  0026DE                     u19840:
 45421                           
 45422                           ; BSR set to: 1
 45423                           
 45424                           ; BSR set to: 1
 45425  0026DE  0E0B               	movlw	11
 45426  0026E0  194E               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 45427  0026E2  A4D8               	btfss	status,2,c
 45428  0026E4  D007               	goto	l793
 45429                           
 45430                           ; BSR set to: 1
 45431  0026E6  0E07               	movlw	7
 45432  0026E8  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45433  0026EA  A4D8               	btfss	status,2,c
 45434  0026EC  D003               	goto	l793
 45435  0026EE                     u19860:
 45436                           
 45437                           ; BSR set to: 1
 45438                           ;radio_driver_SX1276.c: 606: {
 45439                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 45440                           
 45441                           ; BSR set to: 1
 45442  0026EE  0100               	movlb	0	; () banked
 45443  0026F0  87B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 45444                           
 45445                           ;radio_driver_SX1276.c: 608: }
 45446  0026F2  D002               	goto	l798
 45447  0026F4                     l793:
 45448                           
 45449                           ;radio_driver_SX1276.c: 609: else
 45450                           ;radio_driver_SX1276.c: 610: {
 45451                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 45452                           
 45453                           ; BSR set to: 0
 45454  0026F4  0100               	movlb	0	; () banked
 45455  0026F6  97B0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 45456  0026F8                     l798:
 45457                           
 45458                           ; BSR set to: 0
 45459                           ;radio_driver_SX1276.c: 612: }
 45460                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 45461  0026F8  85B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 45462                           
 45463                           ; BSR set to: 0
 45464                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 45465  0026FA  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45466  0026FE  0E26               	movlw	38
 45467  002700  ECEF  F05F         	call	_RADIO_RegisterWrite
 45468                           
 45469                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 45470  002704  0E31               	movlw	49
 45471  002706  EC96  F05E         	call	_RADIO_RegisterRead
 45472  00270A  0100               	movlb	0	; () banked
 45473  00270C  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45474                           
 45475                           ; BSR set to: 0
 45476                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 45477  00270E  0EF8               	movlw	248
 45478  002710  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 45479                           
 45480                           ; BSR set to: 0
 45481                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 45482  002712  0E03               	movlw	3
 45483  002714  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 45484                           
 45485                           ; BSR set to: 0
 45486                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 45487  002716  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45488  00271A  0E31               	movlw	49
 45489  00271C  ECEF  F05F         	call	_RADIO_RegisterWrite
 45490                           
 45491                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 45492  002720  0E0A               	movlw	10
 45493  002722  0100               	movlb	0	; () banked
 45494  002724  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45495  002726  0E37               	movlw	55
 45496  002728  ECEF  F05F         	call	_RADIO_RegisterWrite
 45497                           
 45498                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 45499  00272C  0E12               	movlw	18
 45500  00272E  0101               	movlb	1	; () banked
 45501  002730  1966               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 45502  002732  A4D8               	btfss	status,2,c
 45503  002734  D02F               	goto	l803
 45504                           
 45505                           ; BSR set to: 1
 45506                           ;radio_driver_SX1276.c: 626: {
 45507                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 45508                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 45509  002736  0E07               	movlw	7
 45510  002738  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45511  00273A  B4D8               	btfsc	status,2,c
 45512  00273C  D004               	goto	u19890
 45513                           
 45514                           ; BSR set to: 1
 45515  00273E  0E08               	movlw	8
 45516  002740  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45517  002742  A4D8               	btfss	status,2,c
 45518  002744  D017               	goto	l800
 45519  002746                     u19890:
 45520                           
 45521                           ; BSR set to: 1
 45522                           ;radio_driver_SX1276.c: 631: {
 45523                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 45524                           
 45525                           ; BSR set to: 1
 45526  002746  0E31               	movlw	49
 45527  002748  EC96  F05E         	call	_RADIO_RegisterRead
 45528  00274C  0100               	movlb	0	; () banked
 45529  00274E  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45530                           
 45531                           ; BSR set to: 0
 45532                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 45533  002750  9FB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 45534                           
 45535                           ; BSR set to: 0
 45536                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 45537  002752  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45538  002756  0E31               	movlw	49
 45539  002758  ECEF  F05F         	call	_RADIO_RegisterWrite
 45540                           
 45541                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 45542  00275C  0E40               	movlw	64
 45543  00275E  0100               	movlb	0	; () banked
 45544  002760  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45545  002762  0E2F               	movlw	47
 45546  002764  ECEF  F05F         	call	_RADIO_RegisterWrite
 45547                           
 45548                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 45549  002768  0E00               	movlw	0
 45550  00276A  0100               	movlb	0	; () banked
 45551  00276C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45552  00276E  0E30               	movlw	48
 45553  002770  ECEF  F05F         	call	_RADIO_RegisterWrite
 45554  002774                     l800:
 45555                           
 45556                           ;radio_driver_SX1276.c: 637: }
 45557                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 45558  002774  0E09               	movlw	9
 45559  002776  0101               	movlb	1	; () banked
 45560  002778  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45561  00277A  A4D8               	btfss	status,2,c
 45562  00277C  D00B               	goto	l803
 45563                           
 45564                           ; BSR set to: 1
 45565                           ;radio_driver_SX1276.c: 640: {
 45566                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 45567  00277E  0E31               	movlw	49
 45568  002780  EC96  F05E         	call	_RADIO_RegisterRead
 45569  002784  0100               	movlb	0	; () banked
 45570  002786  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45571                           
 45572                           ; BSR set to: 0
 45573                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 45574  002788  8FB0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 45575                           
 45576                           ; BSR set to: 0
 45577                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 45578  00278A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45579  00278E  0E31               	movlw	49
 45580  002790  ECEF  F05F         	call	_RADIO_RegisterWrite
 45581  002794                     l803:
 45582                           
 45583                           ;radio_driver_SX1276.c: 644: }
 45584                           ;radio_driver_SX1276.c: 645: }
 45585                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 45586  002794  0E33               	movlw	51
 45587  002796  EC96  F05E         	call	_RADIO_RegisterRead
 45588  00279A  0100               	movlb	0	; () banked
 45589  00279C  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45590                           
 45591                           ; BSR set to: 0
 45592                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 45593  00279E  9DB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 45594                           
 45595                           ; BSR set to: 0
 45596                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 45597  0027A0  81B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 45598                           
 45599                           ; BSR set to: 0
 45600                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 45601  0027A2  C155  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 45602  0027A6  0E01               	movlw	1
 45603  0027A8  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 45604  0027AA  0E06               	movlw	6
 45605  0027AC  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 45606  0027AE                     u19915:
 45607  0027AE  90D8               	bcf	status,0,c
 45608  0027B0  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 45609  0027B2  2FA9               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 45610  0027B4  D7FC               	goto	u19915
 45611  0027B6  51A8               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 45612  0027B8  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 45613                           
 45614                           ; BSR set to: 0
 45615                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 45616  0027BA  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45617  0027BE  0E33               	movlw	51
 45618  0027C0  ECEF  F05F         	call	_RADIO_RegisterWrite
 45619                           
 45620                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 45621  0027C4  C155  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 45622  0027C8  0E01               	movlw	1
 45623  0027CA  0100               	movlb	0	; () banked
 45624  0027CC  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 45625  0027CE  90D8               	bcf	status,0,c
 45626  0027D0  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 45627  0027D2  90D8               	bcf	status,0,c
 45628  0027D4  35A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 45629  0027D6  0AFF               	xorlw	255
 45630  0027D8  0B1D               	andlw	29
 45631  0027DA  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45632                           
 45633                           ; BSR set to: 0
 45634                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 45635  0027DC  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45636  0027E0  0E3B               	movlw	59
 45637  0027E2  ECEF  F05F         	call	_RADIO_RegisterWrite
 45638                           
 45639                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 45640  0027E6  0101               	movlb	1	; () banked
 45641  0027E8  5142               	movf	(_RadioConfiguration+13)& (0+255),w,b
 45642  0027EA  0100               	movlb	0	; () banked
 45643  0027EC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45644  0027EE  0E20               	movlw	32
 45645  0027F0  ECEF  F05F         	call	_RADIO_RegisterWrite
 45646                           
 45647                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 45648  0027F4  C141  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 45649  0027F8  0E21               	movlw	33
 45650  0027FA  ECEF  F05F         	call	_RADIO_RegisterWrite
 45651                           
 45652                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 45653  0027FE  0E00               	movlw	0
 45654  002800  0100               	movlb	0	; () banked
 45655  002802  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45656  002804  0E0D               	movlw	13
 45657  002806  ECEF  F05F         	call	_RADIO_RegisterWrite
 45658                           
 45659                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 45660  00280A  0E00               	movlw	0
 45661  00280C  0100               	movlb	0	; () banked
 45662  00280E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45663  002810  0E0E               	movlw	14
 45664  002812  ECEF  F05F         	call	_RADIO_RegisterWrite
 45665                           
 45666                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 45667  002816  0E00               	movlw	0
 45668  002818  0100               	movlb	0	; () banked
 45669  00281A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45670  00281C  0E0F               	movlw	15
 45671  00281E  ECEF  F05F         	call	_RADIO_RegisterWrite
 45672                           
 45673                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 45674  002822  0E12               	movlw	18
 45675  002824  0101               	movlb	1	; () banked
 45676  002826  1966               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 45677  002828  A4D8               	btfss	status,2,c
 45678  00282A  D071               	goto	l810
 45679                           
 45680                           ; BSR set to: 1
 45681                           ;radio_driver_SX1276.c: 665: {
 45682                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 45683                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 45684                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 45685                           ;radio_driver_SX1276.c: 669: )
 45686  00282C  0E09               	movlw	9
 45687  00282E  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45688  002830  A4D8               	btfss	status,2,c
 45689  002832  D020               	goto	l805
 45690                           
 45691                           ; BSR set to: 1
 45692  002834  0E80               	movlw	128
 45693  002836  5D35               	subwf	_RadioConfiguration& (0+255),w,b
 45694  002838  0E13               	movlw	19
 45695  00283A  5936               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 45696  00283C  0E61               	movlw	97
 45697  00283E  5937               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 45698  002840  0E33               	movlw	51
 45699  002842  5938               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 45700  002844  A0D8               	btfss	status,0,c
 45701  002846  D016               	goto	l805
 45702                           
 45703                           ; BSR set to: 1
 45704  002848  0535               	decf	_RadioConfiguration& (0+255),w,b
 45705  00284A  0EF7               	movlw	247
 45706  00284C  5936               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 45707  00284E  0ECB               	movlw	203
 45708  002850  5937               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 45709  002852  0E3C               	movlw	60
 45710  002854  5938               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 45711  002856  B0D8               	btfsc	status,0,c
 45712  002858  D00D               	goto	l805
 45713                           
 45714                           ; BSR set to: 1
 45715                           ;radio_driver_SX1276.c: 670: {
 45716                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 45717  00285A  0E02               	movlw	2
 45718  00285C  0100               	movlb	0	; () banked
 45719  00285E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45720  002860  0E36               	movlw	54
 45721  002862  ECEF  F05F         	call	_RADIO_RegisterWrite
 45722                           
 45723                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 45724  002866  0E64               	movlw	100
 45725  002868  0100               	movlb	0	; () banked
 45726  00286A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45727  00286C  0E3A               	movlw	58
 45728  00286E  ECEF  F05F         	call	_RADIO_RegisterWrite
 45729                           
 45730                           ;radio_driver_SX1276.c: 673: }
 45731  002872  D02C               	goto	l808
 45732  002874                     l805:
 45733                           
 45734                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 45735                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 45736                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 45737                           ;radio_driver_SX1276.c: 677: )
 45738  002874  0E09               	movlw	9
 45739  002876  0101               	movlb	1	; () banked
 45740  002878  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45741  00287A  A4D8               	btfss	status,2,c
 45742  00287C  D021               	goto	l807
 45743                           
 45744                           ; BSR set to: 1
 45745  00287E  0E80               	movlw	128
 45746  002880  5D35               	subwf	_RadioConfiguration& (0+255),w,b
 45747  002882  0E1A               	movlw	26
 45748  002884  5936               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 45749  002886  0E70               	movlw	112
 45750  002888  5937               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 45751  00288A  0E18               	movlw	24
 45752  00288C  5938               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 45753  00288E  A0D8               	btfss	status,0,c
 45754  002890  D017               	goto	l807
 45755                           
 45756                           ; BSR set to: 1
 45757  002892  0E41               	movlw	65
 45758  002894  5D35               	subwf	_RadioConfiguration& (0+255),w,b
 45759  002896  0EDD               	movlw	221
 45760  002898  5936               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 45761  00289A  0E4A               	movlw	74
 45762  00289C  5937               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 45763  00289E  0E1F               	movlw	31
 45764  0028A0  5938               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 45765  0028A2  B0D8               	btfsc	status,0,c
 45766  0028A4  D00D               	goto	l807
 45767                           
 45768                           ; BSR set to: 1
 45769                           ;radio_driver_SX1276.c: 678: {
 45770                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 45771  0028A6  0E02               	movlw	2
 45772  0028A8  0100               	movlb	0	; () banked
 45773  0028AA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45774  0028AC  0E36               	movlw	54
 45775  0028AE  ECEF  F05F         	call	_RADIO_RegisterWrite
 45776                           
 45777                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 45778  0028B2  0E7F               	movlw	127
 45779  0028B4  0100               	movlb	0	; () banked
 45780  0028B6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45781  0028B8  0E3A               	movlw	58
 45782  0028BA  ECEF  F05F         	call	_RADIO_RegisterWrite
 45783                           
 45784                           ;radio_driver_SX1276.c: 681: }
 45785  0028BE  D006               	goto	l808
 45786  0028C0                     l807:
 45787                           
 45788                           ;radio_driver_SX1276.c: 682: else
 45789                           ;radio_driver_SX1276.c: 683: {
 45790                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 45791  0028C0  0E03               	movlw	3
 45792  0028C2  0100               	movlb	0	; () banked
 45793  0028C4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45794  0028C6  0E36               	movlw	54
 45795  0028C8  ECEF  F05F         	call	_RADIO_RegisterWrite
 45796  0028CC                     l808:
 45797                           
 45798                           ;radio_driver_SX1276.c: 685: }
 45799                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 45800  0028CC  0E09               	movlw	9
 45801  0028CE  0101               	movlb	1	; () banked
 45802  0028D0  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45803  0028D2  A4D8               	btfss	status,2,c
 45804  0028D4  D010               	goto	l809
 45805                           
 45806                           ; BSR set to: 1
 45807  0028D6  0555               	decf	(_RadioConfiguration+32)& (0+255),w,b
 45808  0028D8  A4D8               	btfss	status,2,c
 45809  0028DA  D00D               	goto	l809
 45810                           
 45811                           ; BSR set to: 1
 45812                           ;radio_driver_SX1276.c: 689: {
 45813                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 45814  0028DC  0E65               	movlw	101
 45815  0028DE  0100               	movlb	0	; () banked
 45816  0028E0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45817  0028E2  0E3A               	movlw	58
 45818  0028E4  ECEF  F05F         	call	_RADIO_RegisterWrite
 45819                           
 45820                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 45821  0028E8  0E19               	movlw	25
 45822  0028EA  0100               	movlb	0	; () banked
 45823  0028EC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45824  0028EE  0E3B               	movlw	59
 45825  0028F0  ECEF  F05F         	call	_RADIO_RegisterWrite
 45826                           
 45827                           ;radio_driver_SX1276.c: 692: }
 45828  0028F4  D00C               	goto	l810
 45829  0028F6                     l809:
 45830                           
 45831                           ;radio_driver_SX1276.c: 693: else
 45832                           ;radio_driver_SX1276.c: 694: {
 45833                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 45834  0028F6  0E65               	movlw	101
 45835  0028F8  0100               	movlb	0	; () banked
 45836  0028FA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45837  0028FC  0E3A               	movlw	58
 45838  0028FE  ECEF  F05F         	call	_RADIO_RegisterWrite
 45839                           
 45840                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 45841  002902  0E1D               	movlw	29
 45842  002904  0100               	movlb	0	; () banked
 45843  002906  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45844  002908  0E3B               	movlw	59
 45845  00290A  ECEF  F05F         	call	_RADIO_RegisterWrite
 45846  00290E                     l810:
 45847                           
 45848                           ;radio_driver_SX1276.c: 697: }
 45849                           ;radio_driver_SX1276.c: 698: }
 45850                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 45851  00290E  0EFF               	movlw	255
 45852  002910  0100               	movlb	0	; () banked
 45853  002912  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45854  002914  0E12               	movlw	18
 45855  002916  ECEF  F05F         	call	_RADIO_RegisterWrite
 45856                           
 45857                           ;radio_driver_SX1276.c: 702: }
 45858  00291A  0012               	return	
 45859  00291C                     l784:
 45860                           
 45861                           ;radio_driver_SX1276.c: 703: else
 45862                           ;radio_driver_SX1276.c: 704: {
 45863                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 45864  00291C  C139  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 45865  002920  C13A  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 45866  002924  C13B  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 45867  002928  C13C  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 45868  00292C  ECB3  F053         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 45869                           
 45870                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 45871  002930  C13D  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 45872  002934  C13E  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 45873  002938  C13F  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 45874  00293C  C140  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 45875  002940  ECE8  F053         	call	_RADIO_WriteFSKBitRate	;wreg free
 45876                           
 45877                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 45878  002944  0101               	movlb	1	; () banked
 45879  002946  5142               	movf	(_RadioConfiguration+13)& (0+255),w,b
 45880  002948  0100               	movlb	0	; () banked
 45881  00294A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45882  00294C  0E25               	movlw	37
 45883  00294E  ECEF  F05F         	call	_RADIO_RegisterWrite
 45884                           
 45885                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 45886  002952  C141  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 45887  002956  0E26               	movlw	38
 45888  002958  ECEF  F05F         	call	_RADIO_RegisterWrite
 45889                           
 45890                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 45891  00295C  0E0A               	movlw	10
 45892  00295E  EC96  F05E         	call	_RADIO_RegisterRead
 45893  002962  0100               	movlb	0	; () banked
 45894  002964  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45895                           
 45896                           ; BSR set to: 0
 45897                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 45898  002966  0E9F               	movlw	159
 45899  002968  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 45900                           
 45901                           ; BSR set to: 0
 45902                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 45903  00296A  0101               	movlb	1	; () banked
 45904  00296C  3968               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 45905  00296E  46E8               	rlncf	wreg,f,c
 45906  002970  0BE0               	andlw	224
 45907  002972  0100               	movlb	0	; () banked
 45908  002974  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 45909                           
 45910                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 45911  002976  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45912  00297A  0E0A               	movlw	10
 45913  00297C  ECEF  F05F         	call	_RADIO_RegisterWrite
 45914                           
 45915                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 45916  002980  0EC8               	movlw	200
 45917  002982  0100               	movlb	0	; () banked
 45918  002984  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45919                           
 45920                           ; BSR set to: 0
 45921                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 45922  002986  0101               	movlb	1	; () banked
 45923  002988  5151               	movf	(_RadioConfiguration+28)& (0+255),w,b
 45924  00298A  B4D8               	btfsc	status,2,c
 45925  00298C  D002               	goto	l812
 45926                           
 45927                           ; BSR set to: 1
 45928                           ;radio_driver_SX1276.c: 722: {
 45929                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 45930  00298E  0100               	movlb	0	; () banked
 45931  002990  89B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 45932  002992                     l812:
 45933                           
 45934                           ;radio_driver_SX1276.c: 724: }
 45935                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 45936                           
 45937                           ; BSR set to: 0
 45938  002992  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45939  002996  0E30               	movlw	48
 45940  002998  ECEF  F05F         	call	_RADIO_RegisterWrite
 45941                           
 45942                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 45943  00299C  0E00               	movlw	0
 45944  00299E  0100               	movlb	0	; () banked
 45945  0029A0  6FAB               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 45946  0029A2  D010               	goto	l813
 45947  0029A4                     
 45948                           ; BSR set to: 0
 45949                           ;radio_driver_SX1276.c: 729: {
 45950                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 45951                           
 45952                           ; BSR set to: 0
 45953  0029A4  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 45954  0029A6  0D01               	mullw	1
 45955  0029A8  0E44               	movlw	low (_RadioConfiguration+15)
 45956  0029AA  24F3               	addwf	prodl,w,c
 45957  0029AC  6ED9               	movwf	fsr2l,c
 45958  0029AE  0E01               	movlw	high (_RadioConfiguration+15)
 45959  0029B0  20F4               	addwfc	prodh,w,c
 45960  0029B2  6EDA               	movwf	fsr2h,c
 45961  0029B4  50DF               	movf	indf2,w,c
 45962  0029B6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45963  0029B8  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 45964  0029BA  0F28               	addlw	40
 45965  0029BC  ECEF  F05F         	call	_RADIO_RegisterWrite
 45966  0029C0  0100               	movlb	0	; () banked
 45967  0029C2  2BAB               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 45968  0029C4                     l813:
 45969                           
 45970                           ; BSR set to: 0
 45971                           
 45972                           ; BSR set to: 0
 45973  0029C4  0101               	movlb	1	; () banked
 45974  0029C6  514C               	movf	(_RadioConfiguration+23)& (0+255),w,b
 45975  0029C8  0100               	movlb	0	; () banked
 45976  0029CA  5DAB               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 45977  0029CC  A0D8               	btfss	status,0,c
 45978  0029CE  D7EA               	goto	l814
 45979                           
 45980                           ; BSR set to: 0
 45981                           ;radio_driver_SX1276.c: 733: }
 45982                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 45983                           
 45984                           ; BSR set to: 0
 45985  0029D0  0101               	movlb	1	; () banked
 45986  0029D2  514C               	movf	(_RadioConfiguration+23)& (0+255),w,b
 45987  0029D4  B4D8               	btfsc	status,2,c
 45988  0029D6  D008               	goto	l816
 45989                           
 45990                           ; BSR set to: 1
 45991                           ;radio_driver_SX1276.c: 737: {
 45992                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 45993  0029D8  054C               	decf	(_RadioConfiguration+23)& (0+255),w,b
 45994  0029DA  0910               	iorlw	16
 45995  0029DC  0100               	movlb	0	; () banked
 45996  0029DE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45997  0029E0  0E27               	movlw	39
 45998  0029E2  ECEF  F05F         	call	_RADIO_RegisterWrite
 45999                           
 46000                           ;radio_driver_SX1276.c: 739: }
 46001  0029E6  D006               	goto	l817
 46002  0029E8                     l816:
 46003                           
 46004                           ;radio_driver_SX1276.c: 740: else
 46005                           ;radio_driver_SX1276.c: 741: {
 46006                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 46007  0029E8  0E00               	movlw	0
 46008  0029EA  0100               	movlb	0	; () banked
 46009  0029EC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 46010  0029EE  0E27               	movlw	39
 46011  0029F0  ECEF  F05F         	call	_RADIO_RegisterWrite
 46012  0029F4                     l817:
 46013                           
 46014                           ;radio_driver_SX1276.c: 743: }
 46015                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 46016  0029F4  0EFF               	movlw	255
 46017  0029F6  0100               	movlb	0	; () banked
 46018  0029F8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 46019  0029FA  0E3E               	movlw	62
 46020  0029FC  ECEF  F05F         	call	_RADIO_RegisterWrite
 46021                           
 46022                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 46023  002A00  0EFF               	movlw	255
 46024  002A02  0100               	movlb	0	; () banked
 46025  002A04  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 46026  002A06  0E3F               	movlw	63
 46027  002A08  ECEF  F05F         	call	_RADIO_RegisterWrite
 46028  002A0C  0012               	return	
 46029  002A0E                     __end_of_RADIO_WriteConfiguration:
 46030                           	opt stack 0
 46031                           tosu	equ	0xFFF
 46032                           tosh	equ	0xFFE
 46033                           tosl	equ	0xFFD
 46034                           pclath	equ	0xFFA
 46035                           tblptru	equ	0xFF8
 46036                           tblptrh	equ	0xFF7
 46037                           tblptrl	equ	0xFF6
 46038                           tablat	equ	0xFF5
 46039                           prodh	equ	0xFF4
 46040                           prodl	equ	0xFF3
 46041                           intcon	equ	0xFF2
 46042                           intcon2	equ	0xFF1
 46043                           intcon3	equ	0xFF0
 46044                           indf0	equ	0xFEF
 46045                           postinc0	equ	0xFEE
 46046                           fsr0h	equ	0xFEA
 46047                           fsr0l	equ	0xFE9
 46048                           wreg	equ	0xFE8
 46049                           postinc1	equ	0xFE6
 46050                           postdec1	equ	0xFE5
 46051                           plusw1	equ	0xFE3
 46052                           fsr1h	equ	0xFE2
 46053                           fsr1l	equ	0xFE1
 46054                           indf2	equ	0xFDF
 46055                           postinc2	equ	0xFDE
 46056                           postdec2	equ	0xFDD
 46057                           plusw2	equ	0xFDB
 46058                           fsr2h	equ	0xFDA
 46059                           fsr2l	equ	0xFD9
 46060                           status	equ	0xFD8
 46061                           
 46062 ;; *************** function _RADIO_WritePower *****************
 46063 ;; Defined at:
 46064 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 46065 ;; Parameters:    Size  Location     Type
 46066 ;;  power           1    wreg     char 
 46067 ;; Auto vars:     Size  Location     Type
 46068 ;;  power           1    6[BANK0 ] char 
 46069 ;;  paDac           1    5[BANK0 ] unsigned char 
 46070 ;;  ocp             1    4[BANK0 ] unsigned char 
 46071 ;; Return value:  Size  Location     Type
 46072 ;;                  1    wreg      void 
 46073 ;; Registers used:
 46074 ;;		wreg, status,2, status,0, cstack
 46075 ;; Tracked objects:
 46076 ;;		On entry : 0/0
 46077 ;;		On exit  : 0/0
 46078 ;;		Unchanged: 0/0
 46079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46081 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46083 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46084 ;;Total ram usage:        3 bytes
 46085 ;; Hardware stack levels used:    1
 46086 ;; Hardware stack levels required when called:   10
 46087 ;; This function calls:
 46088 ;;		_RADIO_RegisterRead
 46089 ;;		_RADIO_RegisterWrite
 46090 ;; This function is called by:
 46091 ;;		_RADIO_WriteConfiguration
 46092 ;; This function uses a non-reentrant model
 46093 ;;
 46094                           
 46095                           	psect	text247
 46096  008C96                     __ptext247:
 46097                           	opt stack 0
 46098  008C96                     _RADIO_WritePower:
 46099                           	opt stack 17
 46100                           
 46101                           ;incstack = 0
 46102                           ;RADIO_WritePower@power stored from wreg
 46103  008C96  0100               	movlb	0	; () banked
 46104  008C98  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46105                           
 46106                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 46107                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 46108                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 46109  008C9A  0101               	movlb	1	; () banked
 46110  008C9C  5152               	movf	(_RadioConfiguration+29)& (0+255),w,b
 46111  008C9E  A4D8               	btfss	status,2,c
 46112  008CA0  D030               	goto	l755
 46113                           
 46114                           ; BSR set to: 1
 46115                           ;radio_driver_SX1276.c: 348: {
 46116                           ;radio_driver_SX1276.c: 350: if (power < -3)
 46117  008CA2  0100               	movlb	0	; () banked
 46118  008CA4  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46119  008CA6  0A80               	xorlw	128
 46120  008CA8  0F83               	addlw	131
 46121  008CAA  B0D8               	btfsc	status,0,c
 46122  008CAC  D002               	goto	l756
 46123                           
 46124                           ; BSR set to: 0
 46125                           ;radio_driver_SX1276.c: 351: {
 46126                           ;radio_driver_SX1276.c: 352: power = -3;
 46127  008CAE  0EFD               	movlw	253
 46128  008CB0  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46129  008CB2                     l756:
 46130                           
 46131                           ; BSR set to: 0
 46132                           ;radio_driver_SX1276.c: 353: }
 46133                           ;radio_driver_SX1276.c: 354: if (power > 15)
 46134                           
 46135                           ; BSR set to: 0
 46136  008CB2  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46137  008CB4  0A80               	xorlw	128
 46138  008CB6  0F70               	addlw	-144
 46139  008CB8  A0D8               	btfss	status,0,c
 46140  008CBA  D002               	goto	l757
 46141                           
 46142                           ; BSR set to: 0
 46143                           ;radio_driver_SX1276.c: 355: {
 46144                           ;radio_driver_SX1276.c: 356: power = 15;
 46145  008CBC  0E0F               	movlw	15
 46146  008CBE  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46147  008CC0                     l757:
 46148                           
 46149                           ; BSR set to: 0
 46150                           ;radio_driver_SX1276.c: 357: }
 46151                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 46152                           
 46153                           ; BSR set to: 0
 46154  008CC0  0E4D               	movlw	77
 46155  008CC2  EC96  F05E         	call	_RADIO_RegisterRead
 46156  008CC6  0100               	movlb	0	; () banked
 46157  008CC8  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 46158                           
 46159                           ; BSR set to: 0
 46160                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 46161  008CCA  0EF8               	movlw	248
 46162  008CCC  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 46163                           
 46164                           ; BSR set to: 0
 46165                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 46166  008CCE  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 46167                           
 46168                           ; BSR set to: 0
 46169                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 46170  008CD0  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 46171  008CD4  0E4D               	movlw	77
 46172  008CD6  ECEF  F05F         	call	_RADIO_RegisterWrite
 46173                           
 46174                           ;radio_driver_SX1276.c: 364: if (power < 0)
 46175  008CDA  0100               	movlb	0	; () banked
 46176  008CDC  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
 46177  008CDE  D009               	goto	l758
 46178                           
 46179                           ; BSR set to: 0
 46180                           ;radio_driver_SX1276.c: 365: {
 46181                           ;radio_driver_SX1276.c: 369: power += 3;
 46182  008CE0  0E03               	movlw	3
 46183  008CE2  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 46184                           
 46185                           ; BSR set to: 0
 46186                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 46187  008CE4  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46188  008CE6  0920               	iorlw	32
 46189  008CE8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 46190  008CEA  0E09               	movlw	9
 46191  008CEC  ECEF  F05F         	call	_RADIO_RegisterWrite
 46192                           
 46193                           ;radio_driver_SX1276.c: 371: }
 46194  008CF0  0012               	return	
 46195  008CF2                     l758:
 46196                           
 46197                           ;radio_driver_SX1276.c: 372: else
 46198                           ;radio_driver_SX1276.c: 373: {
 46199                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 46200  008CF2  0100               	movlb	0	; () banked
 46201  008CF4  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46202  008CF6  0970               	iorlw	112
 46203  008CF8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 46204  008CFA  0E09               	movlw	9
 46205  008CFC  ECEF  F05F         	call	_RADIO_RegisterWrite
 46206                           
 46207                           ;radio_driver_SX1276.c: 378: }
 46208                           ;radio_driver_SX1276.c: 379: }
 46209  008D00  0012               	return	
 46210  008D02                     l755:
 46211                           
 46212                           ;radio_driver_SX1276.c: 380: else
 46213                           ;radio_driver_SX1276.c: 381: {
 46214                           ;radio_driver_SX1276.c: 385: if (power < 2)
 46215  008D02  0100               	movlb	0	; () banked
 46216  008D04  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46217  008D06  0A80               	xorlw	128
 46218  008D08  0F7E               	addlw	-130
 46219  008D0A  B0D8               	btfsc	status,0,c
 46220  008D0C  D002               	goto	l761
 46221                           
 46222                           ; BSR set to: 0
 46223                           ;radio_driver_SX1276.c: 386: {
 46224                           ;radio_driver_SX1276.c: 387: power = 2;
 46225  008D0E  0E02               	movlw	2
 46226  008D10  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46227  008D12                     l761:
 46228                           
 46229                           ; BSR set to: 0
 46230                           ;radio_driver_SX1276.c: 388: }
 46231                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 46232                           
 46233                           ; BSR set to: 0
 46234  008D12  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46235  008D14  0A80               	xorlw	128
 46236  008D16  0F6C               	addlw	-148
 46237  008D18  A0D8               	btfss	status,0,c
 46238  008D1A  D002               	goto	l762
 46239                           
 46240                           ; BSR set to: 0
 46241                           ;radio_driver_SX1276.c: 392: {
 46242                           ;radio_driver_SX1276.c: 393: power = 20;
 46243  008D1C  0E14               	movlw	20
 46244  008D1E  D006               	goto	L25
 46245  008D20                     l762:
 46246                           
 46247                           ; BSR set to: 0
 46248                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 46249                           
 46250                           ; BSR set to: 0
 46251  008D20  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46252  008D22  0A80               	xorlw	128
 46253  008D24  0F6E               	addlw	-146
 46254  008D26  A0D8               	btfss	status,0,c
 46255  008D28  D002               	goto	l764
 46256                           
 46257                           ; BSR set to: 0
 46258                           ;radio_driver_SX1276.c: 396: {
 46259                           ;radio_driver_SX1276.c: 397: power = 17;
 46260  008D2A  0E11               	movlw	17
 46261  008D2C                     L25:
 46262  008D2C  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46263  008D2E                     l764:
 46264                           
 46265                           ; BSR set to: 0
 46266                           ;radio_driver_SX1276.c: 398: }
 46267                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 46268                           
 46269                           ; BSR set to: 0
 46270                           
 46271                           ; BSR set to: 0
 46272  008D2E  0E0B               	movlw	11
 46273  008D30  EC96  F05E         	call	_RADIO_RegisterRead
 46274  008D34  0100               	movlb	0	; () banked
 46275  008D36  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
 46276                           
 46277                           ; BSR set to: 0
 46278                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 46279  008D38  0E4D               	movlw	77
 46280  008D3A  EC96  F05E         	call	_RADIO_RegisterRead
 46281  008D3E  0100               	movlb	0	; () banked
 46282  008D40  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 46283                           
 46284                           ; BSR set to: 0
 46285                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 46286  008D42  0EF8               	movlw	248
 46287  008D44  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 46288                           
 46289                           ; BSR set to: 0
 46290                           ;radio_driver_SX1276.c: 403: if (power == 20)
 46291  008D46  0E14               	movlw	20
 46292  008D48  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
 46293  008D4A  A4D8               	btfss	status,2,c
 46294  008D4C  D006               	goto	l765
 46295                           
 46296                           ; BSR set to: 0
 46297                           ;radio_driver_SX1276.c: 404: {
 46298                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 46299  008D4E  0E07               	movlw	7
 46300  008D50  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 46301                           
 46302                           ; BSR set to: 0
 46303                           ;radio_driver_SX1276.c: 406: power = 15;
 46304  008D52  0E0F               	movlw	15
 46305  008D54  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46306                           
 46307                           ; BSR set to: 0
 46308                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 46309  008D56  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 46310                           
 46311                           ;radio_driver_SX1276.c: 408: }
 46312  008D58  D004               	goto	l766
 46313  008D5A                     l765:
 46314                           
 46315                           ; BSR set to: 0
 46316                           ;radio_driver_SX1276.c: 409: else
 46317                           ;radio_driver_SX1276.c: 410: {
 46318                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 46319                           
 46320                           ; BSR set to: 0
 46321  008D5A  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 46322                           
 46323                           ; BSR set to: 0
 46324                           ;radio_driver_SX1276.c: 412: power -= 2;
 46325  008D5C  0EFE               	movlw	254
 46326  008D5E  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 46327                           
 46328                           ; BSR set to: 0
 46329                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 46330  008D60  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 46331  008D62                     l766:
 46332                           
 46333                           ; BSR set to: 0
 46334                           ;radio_driver_SX1276.c: 414: }
 46335                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 46336                           
 46337                           ; BSR set to: 0
 46338  008D62  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 46339  008D66  0E4D               	movlw	77
 46340  008D68  ECEF  F05F         	call	_RADIO_RegisterWrite
 46341                           
 46342                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 46343  008D6C  0100               	movlb	0	; () banked
 46344  008D6E  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46345  008D70  0980               	iorlw	128
 46346  008D72  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 46347  008D74  0E09               	movlw	9
 46348  008D76  ECEF  F05F         	call	_RADIO_RegisterWrite
 46349                           
 46350                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 46351  008D7A  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 46352  008D7E  0E0B               	movlw	11
 46353  008D80  ECEF  F05F         	call	_RADIO_RegisterWrite
 46354  008D84  0012               	return	
 46355  008D86                     __end_of_RADIO_WritePower:
 46356                           	opt stack 0
 46357                           tosu	equ	0xFFF
 46358                           tosh	equ	0xFFE
 46359                           tosl	equ	0xFFD
 46360                           pclath	equ	0xFFA
 46361                           tblptru	equ	0xFF8
 46362                           tblptrh	equ	0xFF7
 46363                           tblptrl	equ	0xFF6
 46364                           tablat	equ	0xFF5
 46365                           prodh	equ	0xFF4
 46366                           prodl	equ	0xFF3
 46367                           intcon	equ	0xFF2
 46368                           intcon2	equ	0xFF1
 46369                           intcon3	equ	0xFF0
 46370                           indf0	equ	0xFEF
 46371                           postinc0	equ	0xFEE
 46372                           fsr0h	equ	0xFEA
 46373                           fsr0l	equ	0xFE9
 46374                           wreg	equ	0xFE8
 46375                           postinc1	equ	0xFE6
 46376                           postdec1	equ	0xFE5
 46377                           plusw1	equ	0xFE3
 46378                           fsr1h	equ	0xFE2
 46379                           fsr1l	equ	0xFE1
 46380                           indf2	equ	0xFDF
 46381                           postinc2	equ	0xFDE
 46382                           postdec2	equ	0xFDD
 46383                           plusw2	equ	0xFDB
 46384                           fsr2h	equ	0xFDA
 46385                           fsr2l	equ	0xFD9
 46386                           status	equ	0xFD8
 46387                           
 46388 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 46389 ;; Defined at:
 46390 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 46391 ;; Parameters:    Size  Location     Type
 46392 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
 46393 ;; Auto vars:     Size  Location     Type
 46394 ;;  num             4   17[BANK0 ] unsigned long 
 46395 ;; Return value:  Size  Location     Type
 46396 ;;                  1    wreg      void 
 46397 ;; Registers used:
 46398 ;;		wreg, status,2, status,0, cstack
 46399 ;; Tracked objects:
 46400 ;;		On entry : 0/0
 46401 ;;		On exit  : 0/0
 46402 ;;		Unchanged: 0/0
 46403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46404 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46405 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46407 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46408 ;;Total ram usage:        8 bytes
 46409 ;; Hardware stack levels used:    1
 46410 ;; Hardware stack levels required when called:   10
 46411 ;; This function calls:
 46412 ;;		_RADIO_RegisterWrite
 46413 ;;		___lldiv
 46414 ;; This function is called by:
 46415 ;;		_RADIO_WriteConfiguration
 46416 ;; This function uses a non-reentrant model
 46417 ;;
 46418                           
 46419                           	psect	text248
 46420  00A766                     __ptext248:
 46421                           	opt stack 0
 46422  00A766                     _RADIO_WriteFSKFrequencyDeviation:
 46423                           	opt stack 17
 46424                           
 46425                           ;radio_driver_SX1276.c: 296: uint32_t num;
 46426                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 46427                           
 46428                           ;incstack = 0
 46429  00A766  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 46430  00A76A  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 46431  00A76E  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 46432  00A772  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 46433                           
 46434                           ;radio_driver_SX1276.c: 304: num <<= (8);
 46435  00A776  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 46436  00A77A  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 46437  00A77E  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 46438  00A782  0100               	movlb	0	; () banked
 46439  00A784  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 46440                           
 46441                           ; BSR set to: 0
 46442                           ;radio_driver_SX1276.c: 305: num /= 15625;
 46443  00A786  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 46444  00A78A  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 46445  00A78E  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 46446  00A792  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 46447  00A796  0E09               	movlw	9
 46448  00A798  6F64               	movwf	___lldiv@divisor& (0+255),b
 46449  00A79A  0E3D               	movlw	61
 46450  00A79C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 46451  00A79E  0E00               	movlw	0
 46452  00A7A0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 46453  00A7A2  0E00               	movlw	0
 46454  00A7A4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 46455  00A7A6  ECB0  F050         	call	___lldiv	;wreg free
 46456  00A7AA  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 46457  00A7AE  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 46458  00A7B2  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 46459  00A7B6  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 46460                           
 46461                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 46462  00A7BA  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 46463  00A7BE  0E04               	movlw	4
 46464  00A7C0  ECEF  F05F         	call	_RADIO_RegisterWrite
 46465                           
 46466                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 46467  00A7C4  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 46468  00A7C8  0E05               	movlw	5
 46469  00A7CA  ECEF  F05F         	call	_RADIO_RegisterWrite
 46470  00A7CE  0012               	return		;funcret
 46471  00A7D0                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 46472                           	opt stack 0
 46473                           tosu	equ	0xFFF
 46474                           tosh	equ	0xFFE
 46475                           tosl	equ	0xFFD
 46476                           pclath	equ	0xFFA
 46477                           tblptru	equ	0xFF8
 46478                           tblptrh	equ	0xFF7
 46479                           tblptrl	equ	0xFF6
 46480                           tablat	equ	0xFF5
 46481                           prodh	equ	0xFF4
 46482                           prodl	equ	0xFF3
 46483                           intcon	equ	0xFF2
 46484                           intcon2	equ	0xFF1
 46485                           intcon3	equ	0xFF0
 46486                           indf0	equ	0xFEF
 46487                           postinc0	equ	0xFEE
 46488                           fsr0h	equ	0xFEA
 46489                           fsr0l	equ	0xFE9
 46490                           wreg	equ	0xFE8
 46491                           postinc1	equ	0xFE6
 46492                           postdec1	equ	0xFE5
 46493                           plusw1	equ	0xFE3
 46494                           fsr1h	equ	0xFE2
 46495                           fsr1l	equ	0xFE1
 46496                           indf2	equ	0xFDF
 46497                           postinc2	equ	0xFDE
 46498                           postdec2	equ	0xFDD
 46499                           plusw2	equ	0xFDB
 46500                           fsr2h	equ	0xFDA
 46501                           fsr2l	equ	0xFD9
 46502                           status	equ	0xFD8
 46503                           
 46504 ;; *************** function _RADIO_WriteFSKBitRate *****************
 46505 ;; Defined at:
 46506 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 46507 ;; Parameters:    Size  Location     Type
 46508 ;;  bitRate         4   13[BANK0 ] unsigned long 
 46509 ;; Auto vars:     Size  Location     Type
 46510 ;;  num             4   17[BANK0 ] unsigned long 
 46511 ;; Return value:  Size  Location     Type
 46512 ;;                  1    wreg      void 
 46513 ;; Registers used:
 46514 ;;		wreg, status,2, status,0, cstack
 46515 ;; Tracked objects:
 46516 ;;		On entry : 0/0
 46517 ;;		On exit  : 0/0
 46518 ;;		Unchanged: 0/0
 46519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46520 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46521 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46523 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46524 ;;Total ram usage:        8 bytes
 46525 ;; Hardware stack levels used:    1
 46526 ;; Hardware stack levels required when called:   10
 46527 ;; This function calls:
 46528 ;;		_RADIO_RegisterWrite
 46529 ;;		___lldiv
 46530 ;; This function is called by:
 46531 ;;		_RADIO_WriteConfiguration
 46532 ;; This function uses a non-reentrant model
 46533 ;;
 46534                           
 46535                           	psect	text249
 46536  00A7D0                     __ptext249:
 46537                           	opt stack 0
 46538  00A7D0                     _RADIO_WriteFSKBitRate:
 46539                           	opt stack 17
 46540                           
 46541                           ;radio_driver_SX1276.c: 318: uint32_t num;
 46542                           ;radio_driver_SX1276.c: 320: num = 32000000;
 46543                           
 46544                           ;incstack = 0
 46545  00A7D0  0E00               	movlw	0
 46546  00A7D2  0100               	movlb	0	; () banked
 46547  00A7D4  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 46548  00A7D6  0E48               	movlw	72
 46549  00A7D8  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 46550  00A7DA  0EE8               	movlw	232
 46551  00A7DC  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 46552  00A7DE  0E01               	movlw	1
 46553  00A7E0  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 46554                           
 46555                           ; BSR set to: 0
 46556                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 46557  00A7E2  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 46558  00A7E6  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 46559  00A7EA  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 46560  00A7EE  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 46561  00A7F2  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 46562  00A7F6  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 46563  00A7FA  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 46564  00A7FE  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 46565  00A802  ECB0  F050         	call	___lldiv	;wreg free
 46566  00A806  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 46567  00A80A  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 46568  00A80E  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 46569  00A812  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 46570                           
 46571                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 46572  00A816  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 46573  00A81A  0E02               	movlw	2
 46574  00A81C  ECEF  F05F         	call	_RADIO_RegisterWrite
 46575                           
 46576                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 46577  00A820  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 46578  00A824  0E03               	movlw	3
 46579  00A826  ECEF  F05F         	call	_RADIO_RegisterWrite
 46580                           
 46581                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 46582  00A82A  0E00               	movlw	0
 46583  00A82C  0100               	movlb	0	; () banked
 46584  00A82E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 46585  00A830  0E5D               	movlw	93
 46586  00A832  ECEF  F05F         	call	_RADIO_RegisterWrite
 46587  00A836  0012               	return		;funcret
 46588  00A838                     __end_of_RADIO_WriteFSKBitRate:
 46589                           	opt stack 0
 46590                           tosu	equ	0xFFF
 46591                           tosh	equ	0xFFE
 46592                           tosl	equ	0xFFD
 46593                           pclath	equ	0xFFA
 46594                           tblptru	equ	0xFF8
 46595                           tblptrh	equ	0xFF7
 46596                           tblptrl	equ	0xFF6
 46597                           tablat	equ	0xFF5
 46598                           prodh	equ	0xFF4
 46599                           prodl	equ	0xFF3
 46600                           intcon	equ	0xFF2
 46601                           intcon2	equ	0xFF1
 46602                           intcon3	equ	0xFF0
 46603                           indf0	equ	0xFEF
 46604                           postinc0	equ	0xFEE
 46605                           fsr0h	equ	0xFEA
 46606                           fsr0l	equ	0xFE9
 46607                           wreg	equ	0xFE8
 46608                           postinc1	equ	0xFE6
 46609                           postdec1	equ	0xFE5
 46610                           plusw1	equ	0xFE3
 46611                           fsr1h	equ	0xFE2
 46612                           fsr1l	equ	0xFE1
 46613                           indf2	equ	0xFDF
 46614                           postinc2	equ	0xFDE
 46615                           postdec2	equ	0xFDD
 46616                           plusw2	equ	0xFDB
 46617                           fsr2h	equ	0xFDA
 46618                           fsr2l	equ	0xFD9
 46619                           status	equ	0xFD8
 46620                           
 46621 ;; *************** function _PrepareJoinRequestFrame *****************
 46622 ;; Defined at:
 46623 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 46624 ;; Parameters:    Size  Location     Type
 46625 ;;		None
 46626 ;; Auto vars:     Size  Location     Type
 46627 ;;  mic             4  116[BANK0 ] unsigned long 
 46628 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 46629 ;;  iCtr            1  121[BANK0 ] unsigned char 
 46630 ;;  mhdr            1  120[BANK0 ] struct .
 46631 ;; Return value:  Size  Location     Type
 46632 ;;                  1    wreg      unsigned char 
 46633 ;; Registers used:
 46634 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46635 ;; Tracked objects:
 46636 ;;		On entry : 0/0
 46637 ;;		On exit  : 0/0
 46638 ;;		Unchanged: 0/0
 46639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46641 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46642 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46643 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46644 ;;Total ram usage:       11 bytes
 46645 ;; Hardware stack levels used:    1
 46646 ;; Hardware stack levels required when called:   13
 46647 ;; This function calls:
 46648 ;;		_ComputeMic
 46649 ;;		_Random
 46650 ;;		_memcpy
 46651 ;;		_memset
 46652 ;; This function is called by:
 46653 ;;		_LORAWAN_Join
 46654 ;; This function uses a non-reentrant model
 46655 ;;
 46656                           
 46657                           	psect	text250
 46658  006CF0                     __ptext250:
 46659                           	opt stack 0
 46660  006CF0                     _PrepareJoinRequestFrame:
 46661                           	opt stack 16
 46662                           
 46663                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 46664                           
 46665                           ;incstack = 0
 46666  006CF0  0E00               	movlw	0
 46667  006CF2  0100               	movlb	0	; () banked
 46668  006CF4  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 46669                           
 46670                           ; BSR set to: 0
 46671                           ;lorawan.c: 1809: Mhdr_t mhdr;
 46672                           ;lorawan.c: 1810: uint32_t mic;
 46673                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 46674  006CF6  0E20               	movlw	low _macBuffer
 46675  006CF8  6F60               	movwf	memset@p1& (0+255),b
 46676  006CFA  0E05               	movlw	high _macBuffer
 46677  006CFC  6F61               	movwf	(memset@p1+1)& (0+255),b
 46678  006CFE  0E00               	movlw	0
 46679  006D00  6F63               	movwf	(memset@c+1)& (0+255),b
 46680  006D02  0E00               	movlw	0
 46681  006D04  6F62               	movwf	memset@c& (0+255),b
 46682  006D06  0E01               	movlw	1
 46683  006D08  6F65               	movwf	(memset@n+1)& (0+255),b
 46684  006D0A  0E0F               	movlw	15
 46685  006D0C  6F64               	movwf	memset@n& (0+255),b
 46686  006D0E  EC23  F05D         	call	_memset	;wreg free
 46687                           
 46688                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 46689  006D12  0100               	movlb	0	; () banked
 46690  006D14  9BD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
 46691  006D16  9DD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
 46692  006D18  9FD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
 46693                           
 46694                           ; BSR set to: 0
 46695                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 46696  006D1A  0EFC               	movlw	-4
 46697  006D1C  17D8               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 46698                           
 46699                           ; BSR set to: 0
 46700                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 46701  006D1E  95D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
 46702  006D20  97D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
 46703  006D22  99D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
 46704                           
 46705                           ; BSR set to: 0
 46706                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 46707  006D24  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46708  006D26  0D01               	mullw	1
 46709  006D28  0E20               	movlw	low _macBuffer
 46710  006D2A  24F3               	addwf	prodl,w,c
 46711  006D2C  6ED9               	movwf	fsr2l,c
 46712  006D2E  0E05               	movlw	high _macBuffer
 46713  006D30  20F4               	addwfc	prodh,w,c
 46714  006D32  6EDA               	movwf	fsr2h,c
 46715  006D34  C0D8  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 46716                           
 46717                           ; BSR set to: 0
 46718  006D38  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 46719                           
 46720                           ; BSR set to: 0
 46721                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 46722  006D3A  0E00               	movlw	0
 46723  006D3C  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 46724  006D3E                     l21275:
 46725                           
 46726                           ; BSR set to: 0
 46727  006D3E  0E07               	movlw	7
 46728  006D40  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 46729  006D42  D001               	goto	l2366
 46730  006D44  D022               	goto	u25320
 46731  006D46                     l2366:
 46732                           
 46733                           ; BSR set to: 0
 46734                           ;lorawan.c: 1821: {
 46735                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 46736                           
 46737                           ; BSR set to: 0
 46738  006D46  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 46739  006D48  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 46740  006D4A  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 46741  006D4C  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 46742  006D4E  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46743  006D50  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 46744  006D52  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46745  006D54  0E07               	movlw	7
 46746  006D56  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 46747  006D58  0E00               	movlw	0
 46748  006D5A  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46749  006D5C  0E56               	movlw	low (_loRa+82)
 46750  006D5E  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 46751  006D60  6ED9               	movwf	fsr2l,c
 46752  006D62  0E02               	movlw	high (_loRa+82)
 46753  006D64  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 46754  006D66  6EDA               	movwf	fsr2h,c
 46755  006D68  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 46756  006D6A  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 46757  006D6E  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 46758  006D70  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 46759  006D72  0E00               	movlw	0
 46760  006D74  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 46761  006D76  0E20               	movlw	low _macBuffer
 46762  006D78  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 46763  006D7A  6EE9               	movwf	fsr0l,c
 46764  006D7C  0E05               	movlw	high _macBuffer
 46765  006D7E  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 46766  006D80  6EEA               	movwf	fsr0h,c
 46767  006D82  CFDF FFEF          	movff	indf2,indf0
 46768                           
 46769                           ; BSR set to: 0
 46770  006D86  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 46771  006D88  D7DA               	goto	l21275
 46772  006D8A                     u25320:
 46773                           
 46774                           ; BSR set to: 0
 46775                           ;lorawan.c: 1823: }
 46776                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 46777                           
 46778                           ; BSR set to: 0
 46779  006D8A  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46780  006D8C  0F08               	addlw	8
 46781  006D8E  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 46782                           
 46783                           ; BSR set to: 0
 46784                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 46785  006D90  0E00               	movlw	0
 46786  006D92  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 46787  006D94                     l21289:
 46788                           
 46789                           ; BSR set to: 0
 46790  006D94  0E07               	movlw	7
 46791  006D96  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 46792  006D98  D001               	goto	l2368
 46793  006D9A  D022               	goto	u25340
 46794  006D9C                     l2368:
 46795                           
 46796                           ; BSR set to: 0
 46797                           ;lorawan.c: 1828: {
 46798                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 46799                           
 46800                           ; BSR set to: 0
 46801  006D9C  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 46802  006D9E  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 46803  006DA0  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 46804  006DA2  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 46805  006DA4  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46806  006DA6  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 46807  006DA8  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46808  006DAA  0E07               	movlw	7
 46809  006DAC  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 46810  006DAE  0E00               	movlw	0
 46811  006DB0  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46812  006DB2  0E5E               	movlw	low (_loRa+90)
 46813  006DB4  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 46814  006DB6  6ED9               	movwf	fsr2l,c
 46815  006DB8  0E02               	movlw	high (_loRa+90)
 46816  006DBA  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 46817  006DBC  6EDA               	movwf	fsr2h,c
 46818  006DBE  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 46819  006DC0  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 46820  006DC4  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 46821  006DC6  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 46822  006DC8  0E00               	movlw	0
 46823  006DCA  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 46824  006DCC  0E20               	movlw	low _macBuffer
 46825  006DCE  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 46826  006DD0  6EE9               	movwf	fsr0l,c
 46827  006DD2  0E05               	movlw	high _macBuffer
 46828  006DD4  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 46829  006DD6  6EEA               	movwf	fsr0h,c
 46830  006DD8  CFDF FFEF          	movff	indf2,indf0
 46831                           
 46832                           ; BSR set to: 0
 46833  006DDC  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 46834  006DDE  D7DA               	goto	l21289
 46835  006DE0                     u25340:
 46836                           
 46837                           ; BSR set to: 0
 46838                           ;lorawan.c: 1830: }
 46839                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 46840                           
 46841                           ; BSR set to: 0
 46842  006DE0  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46843  006DE2  0F08               	addlw	8
 46844  006DE4  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 46845                           
 46846                           ; BSR set to: 0
 46847                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 46848  006DE6  0EFF               	movlw	255
 46849  006DE8  6FAE               	movwf	(Random@max+1)& (0+255),b
 46850  006DEA  69AD               	setf	Random@max& (0+255),b
 46851  006DEC  EC4D  F05F         	call	_Random	;wreg free
 46852  006DF0  C0AD  F2D6         	movff	?_Random,_loRa+210
 46853  006DF4  C0AE  F2D7         	movff	?_Random+1,_loRa+211
 46854                           
 46855                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 46856  006DF8  0100               	movlb	0	; () banked
 46857  006DFA  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46858  006DFC  0D01               	mullw	1
 46859  006DFE  0E20               	movlw	low _macBuffer
 46860  006E00  24F3               	addwf	prodl,w,c
 46861  006E02  6F60               	movwf	memcpy@d1& (0+255),b
 46862  006E04  0E05               	movlw	high _macBuffer
 46863  006E06  20F4               	addwfc	prodh,w,c
 46864  006E08  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 46865  006E0A  0ED6               	movlw	low (_loRa+210)
 46866  006E0C  6F62               	movwf	memcpy@s1& (0+255),b
 46867  006E0E  0E02               	movlw	high (_loRa+210)
 46868  006E10  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 46869  006E12  0E00               	movlw	0
 46870  006E14  6F65               	movwf	(memcpy@n+1)& (0+255),b
 46871  006E16  0E02               	movlw	2
 46872  006E18  6F64               	movwf	memcpy@n& (0+255),b
 46873  006E1A  ECAB  F055         	call	_memcpy	;wreg free
 46874                           
 46875                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 46876  006E1E  0100               	movlb	0	; () banked
 46877  006E20  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46878  006E22  0F02               	addlw	2
 46879  006E24  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 46880                           
 46881                           ; BSR set to: 0
 46882                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 46883  006E26  0E46               	movlw	low (_loRa+66)
 46884  006E28  6FC7               	movwf	ComputeMic@key& (0+255),b
 46885  006E2A  0E02               	movlw	high (_loRa+66)
 46886  006E2C  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 46887  006E2E  0E20               	movlw	low _macBuffer
 46888  006E30  6FC9               	movwf	ComputeMic@buffer& (0+255),b
 46889  006E32  0E05               	movlw	high _macBuffer
 46890  006E34  6FCA               	movwf	(ComputeMic@buffer+1)& (0+255),b
 46891  006E36  C0DA  F0CB         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 46892  006E3A  ECE8  F054         	call	_ComputeMic	;wreg free
 46893  006E3E  C0C7  F0D4         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 46894  006E42  C0C8  F0D5         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 46895  006E46  C0C9  F0D6         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 46896  006E4A  C0CA  F0D7         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 46897                           
 46898                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 46899  006E4E  0100               	movlb	0	; () banked
 46900  006E50  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46901  006E52  0D01               	mullw	1
 46902  006E54  0E20               	movlw	low _macBuffer
 46903  006E56  24F3               	addwf	prodl,w,c
 46904  006E58  6F60               	movwf	memcpy@d1& (0+255),b
 46905  006E5A  0E05               	movlw	high _macBuffer
 46906  006E5C  20F4               	addwfc	prodh,w,c
 46907  006E5E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 46908  006E60  0ED4               	movlw	low PrepareJoinRequestFrame@mic
 46909  006E62  6F62               	movwf	memcpy@s1& (0+255),b
 46910  006E64  0E00               	movlw	high PrepareJoinRequestFrame@mic
 46911  006E66  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 46912  006E68  0E00               	movlw	0
 46913  006E6A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 46914  006E6C  0E04               	movlw	4
 46915  006E6E  6F64               	movwf	memcpy@n& (0+255),b
 46916  006E70  ECAB  F055         	call	_memcpy	;wreg free
 46917                           
 46918                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 46919  006E74  0100               	movlb	0	; () banked
 46920  006E76  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46921  006E78  0F04               	addlw	4
 46922  006E7A  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 46923                           
 46924                           ; BSR set to: 0
 46925                           ;lorawan.c: 1842: return bufferIndex;
 46926  006E7C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46927  006E7E  0012               	return	
 46928  006E80                     __end_of_PrepareJoinRequestFrame:
 46929                           	opt stack 0
 46930                           tosu	equ	0xFFF
 46931                           tosh	equ	0xFFE
 46932                           tosl	equ	0xFFD
 46933                           pclath	equ	0xFFA
 46934                           tblptru	equ	0xFF8
 46935                           tblptrh	equ	0xFF7
 46936                           tblptrl	equ	0xFF6
 46937                           tablat	equ	0xFF5
 46938                           prodh	equ	0xFF4
 46939                           prodl	equ	0xFF3
 46940                           intcon	equ	0xFF2
 46941                           intcon2	equ	0xFF1
 46942                           intcon3	equ	0xFF0
 46943                           indf0	equ	0xFEF
 46944                           postinc0	equ	0xFEE
 46945                           fsr0h	equ	0xFEA
 46946                           fsr0l	equ	0xFE9
 46947                           wreg	equ	0xFE8
 46948                           postinc1	equ	0xFE6
 46949                           postdec1	equ	0xFE5
 46950                           plusw1	equ	0xFE3
 46951                           fsr1h	equ	0xFE2
 46952                           fsr1l	equ	0xFE1
 46953                           indf2	equ	0xFDF
 46954                           postinc2	equ	0xFDE
 46955                           postdec2	equ	0xFDD
 46956                           plusw2	equ	0xFDB
 46957                           fsr2h	equ	0xFDA
 46958                           fsr2l	equ	0xFD9
 46959                           status	equ	0xFD8
 46960                           
 46961 ;; *************** function _Random *****************
 46962 ;; Defined at:
 46963 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 46964 ;; Parameters:    Size  Location     Type
 46965 ;;  max             2   77[BANK0 ] unsigned int 
 46966 ;; Auto vars:     Size  Location     Type
 46967 ;;		None
 46968 ;; Return value:  Size  Location     Type
 46969 ;;                  2   77[BANK0 ] unsigned int 
 46970 ;; Registers used:
 46971 ;;		wreg, status,2, status,0, cstack
 46972 ;; Tracked objects:
 46973 ;;		On entry : 0/0
 46974 ;;		On exit  : 0/0
 46975 ;;		Unchanged: 0/0
 46976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46980 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46981 ;;Total ram usage:        2 bytes
 46982 ;; Hardware stack levels used:    1
 46983 ;; Hardware stack levels required when called:    9
 46984 ;; This function calls:
 46985 ;;		___lwmod
 46986 ;;		_rand
 46987 ;; This function is called by:
 46988 ;;		_SearchAvailableChannel
 46989 ;;		_PrepareJoinRequestFrame
 46990 ;; This function uses a non-reentrant model
 46991 ;;
 46992                           
 46993                           	psect	text251
 46994  00BE9A                     __ptext251:
 46995                           	opt stack 0
 46996  00BE9A                     _Random:
 46997                           	opt stack 18
 46998                           
 46999                           ;lorawan.c: 1118: return (rand () % max);
 47000                           
 47001                           ; BSR set to: 0
 47002                           ;incstack = 0
 47003  00BE9A  EC68  F056         	call	_rand	;wreg free
 47004  00BE9E  C0A6  F0A8         	movff	?_rand,___lwmod@dividend
 47005  00BEA2  C0A7  F0A9         	movff	?_rand+1,___lwmod@dividend+1
 47006  00BEA6  C0AD  F0AA         	movff	Random@max,___lwmod@divisor
 47007  00BEAA  C0AE  F0AB         	movff	Random@max+1,___lwmod@divisor+1
 47008  00BEAE  EC93  F05A         	call	___lwmod	;wreg free
 47009  00BEB2  C0A8  F0AD         	movff	?___lwmod,?_Random
 47010  00BEB6  C0A9  F0AE         	movff	?___lwmod+1,?_Random+1
 47011  00BEBA  0012               	return	
 47012  00BEBC                     __end_of_Random:
 47013                           	opt stack 0
 47014                           tosu	equ	0xFFF
 47015                           tosh	equ	0xFFE
 47016                           tosl	equ	0xFFD
 47017                           pclath	equ	0xFFA
 47018                           tblptru	equ	0xFF8
 47019                           tblptrh	equ	0xFF7
 47020                           tblptrl	equ	0xFF6
 47021                           tablat	equ	0xFF5
 47022                           prodh	equ	0xFF4
 47023                           prodl	equ	0xFF3
 47024                           intcon	equ	0xFF2
 47025                           intcon2	equ	0xFF1
 47026                           intcon3	equ	0xFF0
 47027                           indf0	equ	0xFEF
 47028                           postinc0	equ	0xFEE
 47029                           fsr0h	equ	0xFEA
 47030                           fsr0l	equ	0xFE9
 47031                           wreg	equ	0xFE8
 47032                           postinc1	equ	0xFE6
 47033                           postdec1	equ	0xFE5
 47034                           plusw1	equ	0xFE3
 47035                           fsr1h	equ	0xFE2
 47036                           fsr1l	equ	0xFE1
 47037                           indf2	equ	0xFDF
 47038                           postinc2	equ	0xFDE
 47039                           postdec2	equ	0xFDD
 47040                           plusw2	equ	0xFDB
 47041                           fsr2h	equ	0xFDA
 47042                           fsr2l	equ	0xFD9
 47043                           status	equ	0xFD8
 47044                           
 47045 ;; *************** function _rand *****************
 47046 ;; Defined at:
 47047 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 47048 ;; Parameters:    Size  Location     Type
 47049 ;;		None
 47050 ;; Auto vars:     Size  Location     Type
 47051 ;;		None
 47052 ;; Return value:  Size  Location     Type
 47053 ;;                  2   70[BANK0 ] int 
 47054 ;; Registers used:
 47055 ;;		wreg, status,2, status,0, cstack
 47056 ;; Tracked objects:
 47057 ;;		On entry : 0/0
 47058 ;;		On exit  : 0/0
 47059 ;;		Unchanged: 0/0
 47060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47065 ;;Total ram usage:        2 bytes
 47066 ;; Hardware stack levels used:    1
 47067 ;; Hardware stack levels required when called:    8
 47068 ;; This function calls:
 47069 ;;		___lmul
 47070 ;; This function is called by:
 47071 ;;		_Random
 47072 ;; This function uses a non-reentrant model
 47073 ;;
 47074                           
 47075                           	psect	text252
 47076  00ACD0                     __ptext252:
 47077                           	opt stack 0
 47078  00ACD0                     _rand:
 47079                           	opt stack 18
 47080                           
 47081                           ;incstack = 0
 47082  00ACD0  C1F9  F09A         	movff	_randx,___lmul@multiplier
 47083  00ACD4  C1FA  F09B         	movff	_randx+1,___lmul@multiplier+1
 47084  00ACD8  C1FB  F09C         	movff	_randx+2,___lmul@multiplier+2
 47085  00ACDC  C1FC  F09D         	movff	_randx+3,___lmul@multiplier+3
 47086  00ACE0  0E6D               	movlw	109
 47087  00ACE2  0100               	movlb	0	; () banked
 47088  00ACE4  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 47089  00ACE6  0E4E               	movlw	78
 47090  00ACE8  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 47091  00ACEA  0EC6               	movlw	198
 47092  00ACEC  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 47093  00ACEE  0E41               	movlw	65
 47094  00ACF0  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 47095  00ACF2  EC1D  F057         	call	___lmul	;wreg free
 47096  00ACF6  C09A  F1F9         	movff	?___lmul,_randx
 47097  00ACFA  C09B  F1FA         	movff	?___lmul+1,_randx+1
 47098  00ACFE  C09C  F1FB         	movff	?___lmul+2,_randx+2
 47099  00AD02  C09D  F1FC         	movff	?___lmul+3,_randx+3
 47100  00AD06  0E39               	movlw	57
 47101  00AD08  0101               	movlb	1	; () banked
 47102  00AD0A  27F9               	addwf	_randx& (0+255),f,b
 47103  00AD0C  0E30               	movlw	48
 47104  00AD0E  23FA               	addwfc	(_randx+1)& (0+255),f,b
 47105  00AD10  0E00               	movlw	0
 47106  00AD12  23FB               	addwfc	(_randx+2)& (0+255),f,b
 47107  00AD14  0E00               	movlw	0
 47108  00AD16  23FC               	addwfc	(_randx+3)& (0+255),f,b
 47109                           
 47110                           ; BSR set to: 1
 47111  00AD18  0EFF               	movlw	255
 47112  00AD1A  15FB               	andwf	(_randx+2)& (0+255),w,b
 47113  00AD1C  0100               	movlb	0	; () banked
 47114  00AD1E  6FA6               	movwf	?_rand& (0+255),b
 47115  00AD20  0E7F               	movlw	127
 47116  00AD22  0101               	movlb	1	; () banked
 47117  00AD24  15FC               	andwf	(_randx+3)& (0+255),w,b
 47118  00AD26  0100               	movlb	0	; () banked
 47119  00AD28  6FA7               	movwf	(?_rand+1)& (0+255),b
 47120  00AD2A  0012               	return	
 47121  00AD2C                     __end_of_rand:
 47122                           	opt stack 0
 47123                           tosu	equ	0xFFF
 47124                           tosh	equ	0xFFE
 47125                           tosl	equ	0xFFD
 47126                           pclath	equ	0xFFA
 47127                           tblptru	equ	0xFF8
 47128                           tblptrh	equ	0xFF7
 47129                           tblptrl	equ	0xFF6
 47130                           tablat	equ	0xFF5
 47131                           prodh	equ	0xFF4
 47132                           prodl	equ	0xFF3
 47133                           intcon	equ	0xFF2
 47134                           intcon2	equ	0xFF1
 47135                           intcon3	equ	0xFF0
 47136                           indf0	equ	0xFEF
 47137                           postinc0	equ	0xFEE
 47138                           fsr0h	equ	0xFEA
 47139                           fsr0l	equ	0xFE9
 47140                           wreg	equ	0xFE8
 47141                           postinc1	equ	0xFE6
 47142                           postdec1	equ	0xFE5
 47143                           plusw1	equ	0xFE3
 47144                           fsr1h	equ	0xFE2
 47145                           fsr1l	equ	0xFE1
 47146                           indf2	equ	0xFDF
 47147                           postinc2	equ	0xFDE
 47148                           postdec2	equ	0xFDD
 47149                           plusw2	equ	0xFDB
 47150                           fsr2h	equ	0xFDA
 47151                           fsr2l	equ	0xFD9
 47152                           status	equ	0xFD8
 47153                           
 47154 ;; *************** function ___lwmod *****************
 47155 ;; Defined at:
 47156 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 47157 ;; Parameters:    Size  Location     Type
 47158 ;;  dividend        2   72[BANK0 ] unsigned int 
 47159 ;;  divisor         2   74[BANK0 ] unsigned int 
 47160 ;; Auto vars:     Size  Location     Type
 47161 ;;  counter         1   76[BANK0 ] unsigned char 
 47162 ;; Return value:  Size  Location     Type
 47163 ;;                  2   72[BANK0 ] unsigned int 
 47164 ;; Registers used:
 47165 ;;		wreg, status,2, status,0
 47166 ;; Tracked objects:
 47167 ;;		On entry : 0/0
 47168 ;;		On exit  : 0/0
 47169 ;;		Unchanged: 0/0
 47170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47171 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47174 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47175 ;;Total ram usage:        5 bytes
 47176 ;; Hardware stack levels used:    1
 47177 ;; Hardware stack levels required when called:    7
 47178 ;; This function calls:
 47179 ;;		Nothing
 47180 ;; This function is called by:
 47181 ;;		_Random
 47182 ;; This function uses a non-reentrant model
 47183 ;;
 47184                           
 47185                           	psect	text253
 47186  00B526                     __ptext253:
 47187                           	opt stack 0
 47188  00B526                     ___lwmod:
 47189                           	opt stack 19
 47190                           
 47191                           ; BSR set to: 0
 47192                           ;incstack = 0
 47193  00B526  0100               	movlb	0	; () banked
 47194  00B528  51AA               	movf	___lwmod@divisor& (0+255),w,b
 47195  00B52A  11AB               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 47196  00B52C  B4D8               	btfsc	status,2,c
 47197  00B52E  D018               	goto	l4018
 47198                           
 47199                           ; BSR set to: 0
 47200  00B530  0E01               	movlw	1
 47201  00B532  6FAC               	movwf	___lwmod@counter& (0+255),b
 47202  00B534  D004               	goto	l4013
 47203  00B536                     
 47204                           ; BSR set to: 0
 47205                           
 47206                           ; BSR set to: 0
 47207  00B536  90D8               	bcf	status,0,c
 47208  00B538  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
 47209  00B53A  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 47210  00B53C  2BAC               	incf	___lwmod@counter& (0+255),f,b
 47211  00B53E                     l4013:
 47212                           
 47213                           ; BSR set to: 0
 47214                           
 47215                           ; BSR set to: 0
 47216  00B53E  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 47217  00B540  D7FA               	goto	l4014
 47218  00B542                     u19680:
 47219                           
 47220                           ; BSR set to: 0
 47221                           
 47222                           ; BSR set to: 0
 47223                           
 47224                           ; BSR set to: 0
 47225  00B542  51AA               	movf	___lwmod@divisor& (0+255),w,b
 47226  00B544  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
 47227  00B546  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 47228  00B548  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 47229  00B54A  A0D8               	btfss	status,0,c
 47230  00B54C  D004               	goto	l4017
 47231                           
 47232                           ; BSR set to: 0
 47233  00B54E  51AA               	movf	___lwmod@divisor& (0+255),w,b
 47234  00B550  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
 47235  00B552  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 47236  00B554  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 47237  00B556                     l4017:
 47238                           
 47239                           ; BSR set to: 0
 47240                           
 47241                           ; BSR set to: 0
 47242  00B556  90D8               	bcf	status,0,c
 47243  00B558  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 47244  00B55A  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
 47245                           
 47246                           ; BSR set to: 0
 47247  00B55C  2FAC               	decfsz	___lwmod@counter& (0+255),f,b
 47248  00B55E  D7F1               	goto	u19680
 47249  00B560                     l4018:
 47250                           
 47251                           ; BSR set to: 0
 47252                           
 47253                           ; BSR set to: 0
 47254  00B560  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
 47255  00B564  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
 47256                           
 47257                           ; BSR set to: 0
 47258  00B568  0012               	return		;funcret
 47259  00B56A                     __end_of___lwmod:
 47260                           	opt stack 0
 47261                           tosu	equ	0xFFF
 47262                           tosh	equ	0xFFE
 47263                           tosl	equ	0xFFD
 47264                           pclath	equ	0xFFA
 47265                           tblptru	equ	0xFF8
 47266                           tblptrh	equ	0xFF7
 47267                           tblptrl	equ	0xFF6
 47268                           tablat	equ	0xFF5
 47269                           prodh	equ	0xFF4
 47270                           prodl	equ	0xFF3
 47271                           intcon	equ	0xFF2
 47272                           intcon2	equ	0xFF1
 47273                           intcon3	equ	0xFF0
 47274                           indf0	equ	0xFEF
 47275                           postinc0	equ	0xFEE
 47276                           fsr0h	equ	0xFEA
 47277                           fsr0l	equ	0xFE9
 47278                           wreg	equ	0xFE8
 47279                           postinc1	equ	0xFE6
 47280                           postdec1	equ	0xFE5
 47281                           plusw1	equ	0xFE3
 47282                           fsr1h	equ	0xFE2
 47283                           fsr1l	equ	0xFE1
 47284                           indf2	equ	0xFDF
 47285                           postinc2	equ	0xFDE
 47286                           postdec2	equ	0xFDD
 47287                           plusw2	equ	0xFDB
 47288                           fsr2h	equ	0xFDA
 47289                           fsr2l	equ	0xFD9
 47290                           status	equ	0xFD8
 47291                           
 47292 ;; *************** function _ComputeMic *****************
 47293 ;; Defined at:
 47294 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 47295 ;; Parameters:    Size  Location     Type
 47296 ;;  key             2  103[BANK0 ] PTR unsigned char 
 47297 ;;		 -> loRa.activationParameters(105), loRa(245), 
 47298 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
 47299 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 47300 ;;  bufferLength    1  107[BANK0 ] unsigned char 
 47301 ;; Auto vars:     Size  Location     Type
 47302 ;;  mic             4  108[BANK0 ] unsigned long 
 47303 ;; Return value:  Size  Location     Type
 47304 ;;                  4  103[BANK0 ] unsigned long 
 47305 ;; Registers used:
 47306 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47307 ;; Tracked objects:
 47308 ;;		On entry : 0/0
 47309 ;;		On exit  : 0/0
 47310 ;;		Unchanged: 0/0
 47311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47312 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47313 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47315 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47316 ;;Total ram usage:        9 bytes
 47317 ;; Hardware stack levels used:    1
 47318 ;; Hardware stack levels required when called:   12
 47319 ;; This function calls:
 47320 ;;		_AESCmac
 47321 ;;		_memcpy
 47322 ;; This function is called by:
 47323 ;;		_LORAWAN_RxDone
 47324 ;;		_PrepareJoinRequestFrame
 47325 ;; This function uses a non-reentrant model
 47326 ;;
 47327                           
 47328                           	psect	text254
 47329  00A9D0                     __ptext254:
 47330                           	opt stack 0
 47331  00A9D0                     _ComputeMic:
 47332                           	opt stack 14
 47333                           
 47334                           ;lorawan.c: 2196: uint32_t mic = 0;
 47335                           
 47336                           ; BSR set to: 0
 47337                           ;incstack = 0
 47338  00A9D0  0E00               	movlw	0
 47339  00A9D2  0100               	movlb	0	; () banked
 47340  00A9D4  6FCC               	movwf	ComputeMic@mic& (0+255),b
 47341  00A9D6  0E00               	movlw	0
 47342  00A9D8  6FCD               	movwf	(ComputeMic@mic+1)& (0+255),b
 47343  00A9DA  0E00               	movlw	0
 47344  00A9DC  6FCE               	movwf	(ComputeMic@mic+2)& (0+255),b
 47345  00A9DE  0E00               	movlw	0
 47346  00A9E0  6FCF               	movwf	(ComputeMic@mic+3)& (0+255),b
 47347                           
 47348                           ; BSR set to: 0
 47349                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 47350  00A9E2  C0C7  F0B9         	movff	ComputeMic@key,AESCmac@key
 47351  00A9E6  C0C8  F0BA         	movff	ComputeMic@key+1,AESCmac@key+1
 47352  00A9EA  0EC8               	movlw	low _aesBuffer
 47353  00A9EC  6FBB               	movwf	AESCmac@output& (0+255),b
 47354  00A9EE  0E03               	movlw	high _aesBuffer
 47355  00A9F0  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 47356  00A9F2  C0C9  F0BD         	movff	ComputeMic@buffer,AESCmac@input
 47357  00A9F6  C0CA  F0BE         	movff	ComputeMic@buffer+1,AESCmac@input+1
 47358  00A9FA  C0CB  F0BF         	movff	ComputeMic@bufferLength,AESCmac@size
 47359  00A9FE  EC80  F01D         	call	_AESCmac	;wreg free
 47360                           
 47361                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 47362  00AA02  0ECC               	movlw	low ComputeMic@mic
 47363  00AA04  0100               	movlb	0	; () banked
 47364  00AA06  6F60               	movwf	memcpy@d1& (0+255),b
 47365  00AA08  0E00               	movlw	high ComputeMic@mic
 47366  00AA0A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 47367  00AA0C  0EC8               	movlw	low _aesBuffer
 47368  00AA0E  6F62               	movwf	memcpy@s1& (0+255),b
 47369  00AA10  0E03               	movlw	high _aesBuffer
 47370  00AA12  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 47371  00AA14  0E00               	movlw	0
 47372  00AA16  6F65               	movwf	(memcpy@n+1)& (0+255),b
 47373  00AA18  0E04               	movlw	4
 47374  00AA1A  6F64               	movwf	memcpy@n& (0+255),b
 47375  00AA1C  ECAB  F055         	call	_memcpy	;wreg free
 47376                           
 47377                           ;lorawan.c: 2202: return mic;
 47378  00AA20  C0CC  F0C7         	movff	ComputeMic@mic,?_ComputeMic
 47379  00AA24  C0CD  F0C8         	movff	ComputeMic@mic+1,?_ComputeMic+1
 47380  00AA28  C0CE  F0C9         	movff	ComputeMic@mic+2,?_ComputeMic+2
 47381  00AA2C  C0CF  F0CA         	movff	ComputeMic@mic+3,?_ComputeMic+3
 47382  00AA30  0012               	return	
 47383  00AA32                     __end_of_ComputeMic:
 47384                           	opt stack 0
 47385                           tosu	equ	0xFFF
 47386                           tosh	equ	0xFFE
 47387                           tosl	equ	0xFFD
 47388                           pclath	equ	0xFFA
 47389                           tblptru	equ	0xFF8
 47390                           tblptrh	equ	0xFF7
 47391                           tblptrl	equ	0xFF6
 47392                           tablat	equ	0xFF5
 47393                           prodh	equ	0xFF4
 47394                           prodl	equ	0xFF3
 47395                           intcon	equ	0xFF2
 47396                           intcon2	equ	0xFF1
 47397                           intcon3	equ	0xFF0
 47398                           indf0	equ	0xFEF
 47399                           postinc0	equ	0xFEE
 47400                           fsr0h	equ	0xFEA
 47401                           fsr0l	equ	0xFE9
 47402                           wreg	equ	0xFE8
 47403                           postinc1	equ	0xFE6
 47404                           postdec1	equ	0xFE5
 47405                           plusw1	equ	0xFE3
 47406                           fsr1h	equ	0xFE2
 47407                           fsr1l	equ	0xFE1
 47408                           indf2	equ	0xFDF
 47409                           postinc2	equ	0xFDE
 47410                           postdec2	equ	0xFDD
 47411                           plusw2	equ	0xFDB
 47412                           fsr2h	equ	0xFDA
 47413                           fsr2l	equ	0xFD9
 47414                           status	equ	0xFD8
 47415                           
 47416 ;; *************** function _AESCmac *****************
 47417 ;; Defined at:
 47418 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 47419 ;; Parameters:    Size  Location     Type
 47420 ;;  key             2   89[BANK0 ] PTR unsigned char 
 47421 ;;		 -> loRa.activationParameters(105), loRa(245), 
 47422 ;;  output          2   91[BANK0 ] PTR unsigned char 
 47423 ;;		 -> aesBuffer(16), 
 47424 ;;  input           2   93[BANK0 ] PTR unsigned char 
 47425 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 47426 ;;  size            1   95[BANK0 ] unsigned char 
 47427 ;; Auto vars:     Size  Location     Type
 47428 ;;  x              16   80[BANK1 ] unsigned char [16]
 47429 ;;  y              16   64[BANK1 ] unsigned char [16]
 47430 ;;  padded         16   48[BANK1 ] unsigned char [16]
 47431 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 47432 ;;  k1             16   16[BANK1 ] unsigned char [16]
 47433 ;;  k2             16    0[BANK1 ] unsigned char [16]
 47434 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 47435 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 47436 ;;		 -> NULL(0), 
 47437 ;;  i               1  101[BANK1 ] unsigned char 
 47438 ;;  j               1  100[BANK1 ] unsigned char 
 47439 ;;  n               1   99[BANK1 ] unsigned char 
 47440 ;;  flag            1   98[BANK1 ] unsigned char 
 47441 ;; Return value:  Size  Location     Type
 47442 ;;                  1    wreg      void 
 47443 ;; Registers used:
 47444 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47445 ;; Tracked objects:
 47446 ;;		On entry : 0/0
 47447 ;;		On exit  : 0/0
 47448 ;;		Unchanged: 0/0
 47449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47450 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47451 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47452 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47453 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47454 ;;Total ram usage:      116 bytes
 47455 ;; Hardware stack levels used:    1
 47456 ;; Hardware stack levels required when called:   11
 47457 ;; This function calls:
 47458 ;;		_AESEncodeLoRa
 47459 ;;		_GenerateSubkey
 47460 ;;		_memcpy
 47461 ;;		_memset
 47462 ;; This function is called by:
 47463 ;;		_LORAWAN_RxDone
 47464 ;;		_AssemblePacket
 47465 ;;		_ComputeMic
 47466 ;; This function uses a non-reentrant model
 47467 ;;
 47468                           
 47469                           	psect	text255
 47470  003B00                     __ptext255:
 47471                           	opt stack 0
 47472  003B00                     _AESCmac:
 47473                           	opt stack 17
 47474                           
 47475                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
 47476                           
 47477                           ;incstack = 0
 47478  003B00  0E00               	movlw	0
 47479  003B02  0101               	movlb	1	; () banked
 47480  003B04  6FEF               	movwf	AESCmac@n& (0+255),b
 47481  003B06  0E00               	movlw	0
 47482  003B08  6FF1               	movwf	AESCmac@i& (0+255),b
 47483  003B0A  0E00               	movlw	0
 47484  003B0C  6FF0               	movwf	AESCmac@j& (0+255),b
 47485                           
 47486                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 47487  003B0E  0E00               	movlw	0
 47488  003B10  6FEE               	movwf	AESCmac@flag& (0+255),b
 47489                           
 47490                           ; BSR set to: 1
 47491                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 47492                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 47493                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 47494  003B12  0E00               	movlw	0
 47495  003B14  6FEC               	movwf	AESCmac@ptr& (0+255),b
 47496  003B16  0E00               	movlw	0
 47497  003B18  6FED               	movwf	(AESCmac@ptr+1)& (0+255),b
 47498                           
 47499                           ; BSR set to: 1
 47500                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 47501  003B1A  C0B9  F091         	movff	AESCmac@key,GenerateSubkey@key
 47502  003B1E  C0BA  F092         	movff	AESCmac@key+1,GenerateSubkey@key+1
 47503  003B22  0E9C               	movlw	low AESCmac@k1
 47504  003B24  0100               	movlb	0	; () banked
 47505  003B26  6F93               	movwf	GenerateSubkey@k1& (0+255),b
 47506  003B28  0E01               	movlw	high AESCmac@k1
 47507  003B2A  6F94               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 47508  003B2C  0E8C               	movlw	low AESCmac@k2
 47509  003B2E  6F95               	movwf	GenerateSubkey@k2& (0+255),b
 47510  003B30  0E01               	movlw	high AESCmac@k2
 47511  003B32  6F96               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 47512  003B34  ECEE  F03C         	call	_GenerateSubkey	;wreg free
 47513                           
 47514                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 47515  003B38  0100               	movlb	0	; () banked
 47516  003B3A  51BF               	movf	AESCmac@size& (0+255),w,b
 47517  003B3C  6FC0               	movwf	??_AESCmac& (0+255),b
 47518  003B3E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 47519  003B40  0E0F               	movlw	15
 47520  003B42  27C0               	addwf	??_AESCmac& (0+255),f,b
 47521  003B44  0E00               	movlw	0
 47522  003B46  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 47523  003B48  0E04               	movlw	4
 47524  003B4A  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 47525  003B4C                     u20245:
 47526  003B4C  35C1               	rlcf	(??_AESCmac+1)& (0+255),w,b
 47527  003B4E  33C1               	rrcf	(??_AESCmac+1)& (0+255),f,b
 47528  003B50  33C0               	rrcf	??_AESCmac& (0+255),f,b
 47529  003B52  2FC2               	decfsz	(??_AESCmac+2)& (0+255),f,b
 47530  003B54  D7FB               	goto	u20245
 47531  003B56  51C0               	movf	??_AESCmac& (0+255),w,b
 47532  003B58  0101               	movlb	1	; () banked
 47533  003B5A  6FEF               	movwf	AESCmac@n& (0+255),b
 47534                           
 47535                           ; BSR set to: 1
 47536                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 47537  003B5C  51EF               	movf	AESCmac@n& (0+255),w,b
 47538  003B5E  A4D8               	btfss	status,2,c
 47539  003B60  D004               	goto	l366
 47540                           
 47541                           ; BSR set to: 1
 47542                           ;lorawan_aes_cmac.c: 53: {
 47543                           ;lorawan_aes_cmac.c: 54: n = 1;
 47544  003B62  0E01               	movlw	1
 47545  003B64  6FEF               	movwf	AESCmac@n& (0+255),b
 47546                           
 47547                           ;lorawan_aes_cmac.c: 55: flag = 0;
 47548  003B66  0E00               	movlw	0
 47549  003B68  D00B               	goto	L26
 47550  003B6A                     l366:
 47551                           
 47552                           ; BSR set to: 1
 47553                           ;lorawan_aes_cmac.c: 57: else
 47554                           ;lorawan_aes_cmac.c: 58: {
 47555                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 47556                           
 47557                           ; BSR set to: 1
 47558  003B6A  C0BF  F0C0         	movff	AESCmac@size,??_AESCmac
 47559  003B6E  0E0F               	movlw	15
 47560  003B70  0100               	movlb	0	; () banked
 47561  003B72  17C0               	andwf	??_AESCmac& (0+255),f,b
 47562  003B74  A4D8               	btfss	status,2,c
 47563  003B76  D002               	goto	u20260
 47564  003B78  0E01               	movlw	1
 47565  003B7A  D001               	goto	u20270
 47566  003B7C                     u20260:
 47567  003B7C  0E00               	movlw	0
 47568  003B7E                     u20270:
 47569  003B7E  0101               	movlb	1	; () banked
 47570  003B80                     L26:
 47571  003B80  6FEE               	movwf	AESCmac@flag& (0+255),b
 47572                           
 47573                           ; BSR set to: 1
 47574                           ;lorawan_aes_cmac.c: 60: }
 47575                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 47576  003B82  05EE               	decf	AESCmac@flag& (0+255),w,b
 47577  003B84  A4D8               	btfss	status,2,c
 47578  003B86  D048               	goto	l368
 47579                           
 47580                           ; BSR set to: 1
 47581                           ;lorawan_aes_cmac.c: 63: {
 47582                           ;lorawan_aes_cmac.c: 64: j = 0;
 47583  003B88  0E00               	movlw	0
 47584  003B8A  6FF0               	movwf	AESCmac@j& (0+255),b
 47585                           
 47586                           ; BSR set to: 1
 47587                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 47588  003B8C  39EF               	swapf	AESCmac@n& (0+255),w,b
 47589  003B8E  0BF0               	andlw	240
 47590  003B90  0FF0               	addlw	240
 47591  003B92  6FF1               	movwf	AESCmac@i& (0+255),b
 47592  003B94  D024               	goto	l369
 47593  003B96                     
 47594                           ;lorawan_aes_cmac.c: 66: {
 47595                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 47596                           
 47597                           ; BSR set to: 1
 47598  003B96  0101               	movlb	1	; () banked
 47599  003B98  51F0               	movf	AESCmac@j& (0+255),w,b
 47600  003B9A  0D01               	mullw	1
 47601  003B9C  0EAC               	movlw	low AESCmac@mLast
 47602  003B9E  24F3               	addwf	prodl,w,c
 47603  003BA0  6ED9               	movwf	fsr2l,c
 47604  003BA2  0E01               	movlw	high AESCmac@mLast
 47605  003BA4  20F4               	addwfc	prodh,w,c
 47606  003BA6  6EDA               	movwf	fsr2h,c
 47607  003BA8  51F0               	movf	AESCmac@j& (0+255),w,b
 47608  003BAA  0D01               	mullw	1
 47609  003BAC  0E9C               	movlw	low AESCmac@k1
 47610  003BAE  24F3               	addwf	prodl,w,c
 47611  003BB0  6EE9               	movwf	fsr0l,c
 47612  003BB2  0E01               	movlw	high AESCmac@k1
 47613  003BB4  20F4               	addwfc	prodh,w,c
 47614  003BB6  6EEA               	movwf	fsr0h,c
 47615  003BB8  50EF               	movf	indf0,w,c
 47616  003BBA  0100               	movlb	0	; () banked
 47617  003BBC  6FC0               	movwf	??_AESCmac& (0+255),b
 47618  003BBE  0101               	movlb	1	; () banked
 47619  003BC0  51F1               	movf	AESCmac@i& (0+255),w,b
 47620  003BC2  0D01               	mullw	1
 47621  003BC4  50F3               	movf	prodl,w,c
 47622  003BC6  0100               	movlb	0	; () banked
 47623  003BC8  25BD               	addwf	AESCmac@input& (0+255),w,b
 47624  003BCA  6EE9               	movwf	fsr0l,c
 47625  003BCC  50F4               	movf	prodh,w,c
 47626  003BCE  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 47627  003BD0  6EEA               	movwf	fsr0h,c
 47628  003BD2  50EF               	movf	indf0,w,c
 47629  003BD4  19C0               	xorwf	??_AESCmac& (0+255),w,b
 47630  003BD6  6EDF               	movwf	indf2,c
 47631                           
 47632                           ; BSR set to: 0
 47633                           ;lorawan_aes_cmac.c: 68: j++;
 47634  003BD8  0101               	movlb	1	; () banked
 47635  003BDA  2BF0               	incf	AESCmac@j& (0+255),f,b
 47636                           
 47637                           ; BSR set to: 1
 47638  003BDC  2BF1               	incf	AESCmac@i& (0+255),f,b
 47639  003BDE                     l369:
 47640                           
 47641                           ; BSR set to: 1
 47642                           
 47643                           ; BSR set to: 1
 47644  003BDE  51EF               	movf	AESCmac@n& (0+255),w,b
 47645  003BE0  0100               	movlb	0	; () banked
 47646  003BE2  6FC0               	movwf	??_AESCmac& (0+255),b
 47647  003BE4  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 47648  003BE6  3BC0               	swapf	??_AESCmac& (0+255),f,b
 47649  003BE8  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 47650  003BEA  0EF0               	movlw	240
 47651  003BEC  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 47652  003BEE  51C0               	movf	??_AESCmac& (0+255),w,b
 47653  003BF0  0B0F               	andlw	15
 47654  003BF2  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 47655  003BF4  0EF0               	movlw	240
 47656  003BF6  17C0               	andwf	??_AESCmac& (0+255),f,b
 47657  003BF8  0101               	movlb	1	; () banked
 47658  003BFA  51F1               	movf	AESCmac@i& (0+255),w,b
 47659  003BFC  0100               	movlb	0	; () banked
 47660  003BFE  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 47661  003C00  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 47662  003C02  51C0               	movf	??_AESCmac& (0+255),w,b
 47663  003C04  5DC2               	subwf	(??_AESCmac+2)& (0+255),w,b
 47664  003C06  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 47665  003C08  0A80               	xorlw	128
 47666  003C0A  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 47667  003C0C  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 47668  003C0E  0A80               	xorlw	128
 47669  003C10  59C4               	subwfb	(??_AESCmac+4)& (0+255),w,b
 47670  003C12  B0D8               	btfsc	status,0,c
 47671  003C14  D07F               	goto	u20350
 47672  003C16  D7BF               	goto	l370
 47673  003C18                     l368:
 47674                           
 47675                           ;lorawan_aes_cmac.c: 71: else
 47676                           ;lorawan_aes_cmac.c: 72: {
 47677                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 47678                           
 47679                           ; BSR set to: 0
 47680  003C18  0100               	movlb	0	; () banked
 47681  003C1A  51BF               	movf	AESCmac@size& (0+255),w,b
 47682  003C1C  0B0F               	andlw	15
 47683  003C1E  6FC0               	movwf	??_AESCmac& (0+255),b
 47684  003C20  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 47685  003C22  1FC0               	comf	??_AESCmac& (0+255),f,b
 47686  003C24  1FC1               	comf	(??_AESCmac+1)& (0+255),f,b
 47687  003C26  4BC0               	infsnz	??_AESCmac& (0+255),f,b
 47688  003C28  2BC1               	incf	(??_AESCmac+1)& (0+255),f,b
 47689  003C2A  51BF               	movf	AESCmac@size& (0+255),w,b
 47690  003C2C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 47691  003C2E  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 47692  003C30  51C0               	movf	??_AESCmac& (0+255),w,b
 47693  003C32  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 47694  003C34  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 47695  003C36  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 47696  003C38  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 47697  003C3A  25BD               	addwf	AESCmac@input& (0+255),w,b
 47698  003C3C  0101               	movlb	1	; () banked
 47699  003C3E  6FEC               	movwf	AESCmac@ptr& (0+255),b
 47700  003C40  0100               	movlb	0	; () banked
 47701  003C42  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 47702  003C44  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 47703  003C46  0101               	movlb	1	; () banked
 47704  003C48  6FED               	movwf	(AESCmac@ptr+1)& (0+255),b
 47705                           
 47706                           ; BSR set to: 1
 47707                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 47708  003C4A  0E00               	movlw	0
 47709  003C4C  6FF1               	movwf	AESCmac@i& (0+255),b
 47710  003C4E                     l18305:
 47711                           
 47712                           ; BSR set to: 1
 47713  003C4E  0E0F               	movlw	15
 47714  003C50  65F1               	cpfsgt	AESCmac@i& (0+255),b
 47715  003C52  D001               	goto	l373
 47716  003C54  D036               	goto	u20330
 47717  003C56                     l373:
 47718                           
 47719                           ; BSR set to: 1
 47720                           ;lorawan_aes_cmac.c: 76: {
 47721                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 47722                           
 47723                           ; BSR set to: 1
 47724  003C56  0100               	movlb	0	; () banked
 47725  003C58  51BF               	movf	AESCmac@size& (0+255),w,b
 47726  003C5A  0B0F               	andlw	15
 47727  003C5C  0101               	movlb	1	; () banked
 47728  003C5E  61F1               	cpfslt	AESCmac@i& (0+255),b
 47729  003C60  D013               	goto	l375
 47730                           
 47731                           ; BSR set to: 1
 47732                           ;lorawan_aes_cmac.c: 78: {
 47733                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 47734  003C62  51F1               	movf	AESCmac@i& (0+255),w,b
 47735  003C64  0D01               	mullw	1
 47736  003C66  50F3               	movf	prodl,w,c
 47737  003C68  25EC               	addwf	AESCmac@ptr& (0+255),w,b
 47738  003C6A  6ED9               	movwf	fsr2l,c
 47739  003C6C  50F4               	movf	prodh,w,c
 47740  003C6E  21ED               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 47741  003C70  6EDA               	movwf	fsr2h,c
 47742  003C72  51F1               	movf	AESCmac@i& (0+255),w,b
 47743  003C74  0D01               	mullw	1
 47744  003C76  0EBC               	movlw	low AESCmac@padded
 47745  003C78  24F3               	addwf	prodl,w,c
 47746  003C7A  6EE9               	movwf	fsr0l,c
 47747  003C7C  0E01               	movlw	high AESCmac@padded
 47748  003C7E  20F4               	addwfc	prodh,w,c
 47749  003C80  6EEA               	movwf	fsr0h,c
 47750  003C82  CFDF FFEF          	movff	indf2,indf0
 47751                           
 47752                           ;lorawan_aes_cmac.c: 80: }
 47753  003C86  D01B               	goto	l378
 47754  003C88                     l375:
 47755                           
 47756                           ; BSR set to: 1
 47757                           ;lorawan_aes_cmac.c: 81: else
 47758                           ;lorawan_aes_cmac.c: 82: {
 47759                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 47760                           
 47761                           ; BSR set to: 1
 47762  003C88  0100               	movlb	0	; () banked
 47763  003C8A  51BF               	movf	AESCmac@size& (0+255),w,b
 47764  003C8C  0B0F               	andlw	15
 47765  003C8E  0101               	movlb	1	; () banked
 47766  003C90  19F1               	xorwf	AESCmac@i& (0+255),w,b
 47767  003C92  A4D8               	btfss	status,2,c
 47768  003C94  D00A               	goto	l377
 47769                           
 47770                           ; BSR set to: 1
 47771                           ;lorawan_aes_cmac.c: 84: {
 47772                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 47773  003C96  51F1               	movf	AESCmac@i& (0+255),w,b
 47774  003C98  0D01               	mullw	1
 47775  003C9A  0EBC               	movlw	low AESCmac@padded
 47776  003C9C  24F3               	addwf	prodl,w,c
 47777  003C9E  6ED9               	movwf	fsr2l,c
 47778  003CA0  0E01               	movlw	high AESCmac@padded
 47779  003CA2  20F4               	addwfc	prodh,w,c
 47780  003CA4  6EDA               	movwf	fsr2h,c
 47781  003CA6  0E80               	movlw	128
 47782  003CA8  D009               	goto	L27
 47783  003CAA                     l377:
 47784                           
 47785                           ; BSR set to: 1
 47786                           ;lorawan_aes_cmac.c: 87: else
 47787                           ;lorawan_aes_cmac.c: 88: {
 47788                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 47789                           
 47790                           ; BSR set to: 1
 47791  003CAA  51F1               	movf	AESCmac@i& (0+255),w,b
 47792  003CAC  0D01               	mullw	1
 47793  003CAE  0EBC               	movlw	low AESCmac@padded
 47794  003CB0  24F3               	addwf	prodl,w,c
 47795  003CB2  6ED9               	movwf	fsr2l,c
 47796  003CB4  0E01               	movlw	high AESCmac@padded
 47797  003CB6  20F4               	addwfc	prodh,w,c
 47798  003CB8  6EDA               	movwf	fsr2h,c
 47799  003CBA  0E00               	movlw	0
 47800  003CBC                     L27:
 47801  003CBC  6EDF               	movwf	indf2,c
 47802  003CBE                     l378:
 47803                           
 47804                           ; BSR set to: 1
 47805                           
 47806                           ; BSR set to: 1
 47807                           
 47808                           ; BSR set to: 1
 47809  003CBE  2BF1               	incf	AESCmac@i& (0+255),f,b
 47810  003CC0  D7C6               	goto	l18305
 47811  003CC2                     u20330:
 47812                           
 47813                           ; BSR set to: 1
 47814                           ;lorawan_aes_cmac.c: 90: }
 47815                           ;lorawan_aes_cmac.c: 91: }
 47816                           ;lorawan_aes_cmac.c: 92: }
 47817                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 47818                           
 47819                           ; BSR set to: 1
 47820  003CC2  0E00               	movlw	0
 47821  003CC4  6FF1               	movwf	AESCmac@i& (0+255),b
 47822  003CC6                     l18325:
 47823                           
 47824                           ; BSR set to: 1
 47825  003CC6  0E0F               	movlw	15
 47826  003CC8  65F1               	cpfsgt	AESCmac@i& (0+255),b
 47827  003CCA  D001               	goto	l379
 47828  003CCC  D023               	goto	u20350
 47829  003CCE                     l379:
 47830                           
 47831                           ; BSR set to: 1
 47832                           ;lorawan_aes_cmac.c: 96: {
 47833                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 47834                           
 47835                           ; BSR set to: 1
 47836  003CCE  51F1               	movf	AESCmac@i& (0+255),w,b
 47837  003CD0  0D01               	mullw	1
 47838  003CD2  0EAC               	movlw	low AESCmac@mLast
 47839  003CD4  24F3               	addwf	prodl,w,c
 47840  003CD6  6ED9               	movwf	fsr2l,c
 47841  003CD8  0E01               	movlw	high AESCmac@mLast
 47842  003CDA  20F4               	addwfc	prodh,w,c
 47843  003CDC  6EDA               	movwf	fsr2h,c
 47844  003CDE  51F1               	movf	AESCmac@i& (0+255),w,b
 47845  003CE0  0D01               	mullw	1
 47846  003CE2  0E8C               	movlw	low AESCmac@k2
 47847  003CE4  24F3               	addwf	prodl,w,c
 47848  003CE6  6EE9               	movwf	fsr0l,c
 47849  003CE8  0E01               	movlw	high AESCmac@k2
 47850  003CEA  20F4               	addwfc	prodh,w,c
 47851  003CEC  6EEA               	movwf	fsr0h,c
 47852  003CEE  50EF               	movf	indf0,w,c
 47853  003CF0  0100               	movlb	0	; () banked
 47854  003CF2  6FC0               	movwf	??_AESCmac& (0+255),b
 47855  003CF4  0101               	movlb	1	; () banked
 47856  003CF6  51F1               	movf	AESCmac@i& (0+255),w,b
 47857  003CF8  0D01               	mullw	1
 47858  003CFA  0EBC               	movlw	low AESCmac@padded
 47859  003CFC  24F3               	addwf	prodl,w,c
 47860  003CFE  6EE9               	movwf	fsr0l,c
 47861  003D00  0E01               	movlw	high AESCmac@padded
 47862  003D02  20F4               	addwfc	prodh,w,c
 47863  003D04  6EEA               	movwf	fsr0h,c
 47864  003D06  50EF               	movf	indf0,w,c
 47865  003D08  0100               	movlb	0	; () banked
 47866  003D0A  19C0               	xorwf	??_AESCmac& (0+255),w,b
 47867  003D0C  6EDF               	movwf	indf2,c
 47868                           
 47869                           ; BSR set to: 0
 47870  003D0E  0101               	movlb	1	; () banked
 47871  003D10  2BF1               	incf	AESCmac@i& (0+255),f,b
 47872  003D12  D7D9               	goto	l18325
 47873  003D14                     u20350:
 47874                           
 47875                           ;lorawan_aes_cmac.c: 98: }
 47876                           ;lorawan_aes_cmac.c: 99: }
 47877                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 47878                           
 47879                           ; BSR set to: 1
 47880                           
 47881                           ; BSR set to: 1
 47882  003D14  0EDC               	movlw	low AESCmac@x
 47883  003D16  0100               	movlb	0	; () banked
 47884  003D18  6F60               	movwf	memset@p1& (0+255),b
 47885  003D1A  0E01               	movlw	high AESCmac@x
 47886  003D1C  6F61               	movwf	(memset@p1+1)& (0+255),b
 47887  003D1E  0E00               	movlw	0
 47888  003D20  6F63               	movwf	(memset@c+1)& (0+255),b
 47889  003D22  0E00               	movlw	0
 47890  003D24  6F62               	movwf	memset@c& (0+255),b
 47891  003D26  0E00               	movlw	0
 47892  003D28  6F65               	movwf	(memset@n+1)& (0+255),b
 47893  003D2A  0E10               	movlw	16
 47894  003D2C  6F64               	movwf	memset@n& (0+255),b
 47895  003D2E  EC23  F05D         	call	_memset	;wreg free
 47896                           
 47897                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 47898  003D32  0E00               	movlw	0
 47899  003D34  0101               	movlb	1	; () banked
 47900  003D36  6FF1               	movwf	AESCmac@i& (0+255),b
 47901  003D38  D056               	goto	l381
 47902  003D3A                     
 47903                           ;lorawan_aes_cmac.c: 104: {
 47904                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 47905                           
 47906                           ; BSR set to: 1
 47907  003D3A  0E00               	movlw	0
 47908  003D3C  0101               	movlb	1	; () banked
 47909  003D3E  6FF0               	movwf	AESCmac@j& (0+255),b
 47910  003D40                     l18341:
 47911                           
 47912                           ; BSR set to: 1
 47913  003D40  0E0F               	movlw	15
 47914  003D42  65F0               	cpfsgt	AESCmac@j& (0+255),b
 47915  003D44  D001               	goto	l383
 47916  003D46  D033               	goto	u20370
 47917  003D48                     l383:
 47918                           
 47919                           ; BSR set to: 1
 47920                           ;lorawan_aes_cmac.c: 106: {
 47921                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 47922                           
 47923                           ; BSR set to: 1
 47924  003D48  51F0               	movf	AESCmac@j& (0+255),w,b
 47925  003D4A  0D01               	mullw	1
 47926  003D4C  0ECC               	movlw	low AESCmac@y
 47927  003D4E  24F3               	addwf	prodl,w,c
 47928  003D50  6ED9               	movwf	fsr2l,c
 47929  003D52  0E01               	movlw	high AESCmac@y
 47930  003D54  20F4               	addwfc	prodh,w,c
 47931  003D56  6EDA               	movwf	fsr2h,c
 47932  003D58  51F1               	movf	AESCmac@i& (0+255),w,b
 47933  003D5A  0100               	movlb	0	; () banked
 47934  003D5C  6FC0               	movwf	??_AESCmac& (0+255),b
 47935  003D5E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 47936  003D60  3BC0               	swapf	??_AESCmac& (0+255),f,b
 47937  003D62  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 47938  003D64  0EF0               	movlw	240
 47939  003D66  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 47940  003D68  51C0               	movf	??_AESCmac& (0+255),w,b
 47941  003D6A  0B0F               	andlw	15
 47942  003D6C  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 47943  003D6E  0EF0               	movlw	240
 47944  003D70  17C0               	andwf	??_AESCmac& (0+255),f,b
 47945  003D72  0101               	movlb	1	; () banked
 47946  003D74  51F0               	movf	AESCmac@j& (0+255),w,b
 47947  003D76  0100               	movlb	0	; () banked
 47948  003D78  27C0               	addwf	??_AESCmac& (0+255),f,b
 47949  003D7A  0E00               	movlw	0
 47950  003D7C  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 47951  003D7E  51C0               	movf	??_AESCmac& (0+255),w,b
 47952  003D80  25BD               	addwf	AESCmac@input& (0+255),w,b
 47953  003D82  6EE9               	movwf	fsr0l,c
 47954  003D84  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 47955  003D86  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 47956  003D88  6EEA               	movwf	fsr0h,c
 47957  003D8A  50EF               	movf	indf0,w,c
 47958  003D8C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 47959  003D8E  0101               	movlb	1	; () banked
 47960  003D90  51F0               	movf	AESCmac@j& (0+255),w,b
 47961  003D92  0D01               	mullw	1
 47962  003D94  0EDC               	movlw	low AESCmac@x
 47963  003D96  24F3               	addwf	prodl,w,c
 47964  003D98  6EE9               	movwf	fsr0l,c
 47965  003D9A  0E01               	movlw	high AESCmac@x
 47966  003D9C  20F4               	addwfc	prodh,w,c
 47967  003D9E  6EEA               	movwf	fsr0h,c
 47968  003DA0  50EF               	movf	indf0,w,c
 47969  003DA2  0100               	movlb	0	; () banked
 47970  003DA4  19C2               	xorwf	(??_AESCmac+2)& (0+255),w,b
 47971  003DA6  6EDF               	movwf	indf2,c
 47972                           
 47973                           ; BSR set to: 0
 47974  003DA8  0101               	movlb	1	; () banked
 47975  003DAA  2BF0               	incf	AESCmac@j& (0+255),f,b
 47976  003DAC  D7C9               	goto	l18341
 47977  003DAE                     u20370:
 47978                           
 47979                           ; BSR set to: 1
 47980                           ;lorawan_aes_cmac.c: 108: }
 47981                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 47982                           
 47983                           ; BSR set to: 1
 47984  003DAE  0EDC               	movlw	low AESCmac@x
 47985  003DB0  0100               	movlb	0	; () banked
 47986  003DB2  6F60               	movwf	memcpy@d1& (0+255),b
 47987  003DB4  0E01               	movlw	high AESCmac@x
 47988  003DB6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 47989  003DB8  0ECC               	movlw	low AESCmac@y
 47990  003DBA  6F62               	movwf	memcpy@s1& (0+255),b
 47991  003DBC  0E01               	movlw	high AESCmac@y
 47992  003DBE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 47993  003DC0  0E00               	movlw	0
 47994  003DC2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 47995  003DC4  0E10               	movlw	16
 47996  003DC6  6F64               	movwf	memcpy@n& (0+255),b
 47997  003DC8  ECAB  F055         	call	_memcpy	;wreg free
 47998                           
 47999                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 48000  003DCC  0EDC               	movlw	low AESCmac@x
 48001  003DCE  0100               	movlb	0	; () banked
 48002  003DD0  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 48003  003DD2  0E01               	movlw	high AESCmac@x
 48004  003DD4  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 48005  003DD6  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 48006  003DDA  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 48007  003DDE  EC15  F05C         	call	_AESEncodeLoRa	;wreg free
 48008  003DE2  0101               	movlb	1	; () banked
 48009  003DE4  2BF1               	incf	AESCmac@i& (0+255),f,b
 48010  003DE6                     l381:
 48011                           
 48012                           ; BSR set to: 1
 48013                           
 48014                           ; BSR set to: 1
 48015  003DE6  0EFF               	movlw	255
 48016  003DE8  0100               	movlb	0	; () banked
 48017  003DEA  6FC0               	movwf	??_AESCmac& (0+255),b
 48018  003DEC  0EFF               	movlw	255
 48019  003DEE  6FC1               	movwf	(??_AESCmac+1)& (0+255),b
 48020  003DF0  0101               	movlb	1	; () banked
 48021  003DF2  51EF               	movf	AESCmac@n& (0+255),w,b
 48022  003DF4  0100               	movlb	0	; () banked
 48023  003DF6  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 48024  003DF8  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 48025  003DFA  51C0               	movf	??_AESCmac& (0+255),w,b
 48026  003DFC  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 48027  003DFE  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 48028  003E00  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 48029  003E02  0101               	movlb	1	; () banked
 48030  003E04  51F1               	movf	AESCmac@i& (0+255),w,b
 48031  003E06  0100               	movlb	0	; () banked
 48032  003E08  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 48033  003E0A  6BC5               	clrf	(??_AESCmac+5)& (0+255),b
 48034  003E0C  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 48035  003E0E  5DC4               	subwf	(??_AESCmac+4)& (0+255),w,b
 48036  003E10  51C5               	movf	(??_AESCmac+5)& (0+255),w,b
 48037  003E12  0A80               	xorlw	128
 48038  003E14  6FC6               	movwf	(??_AESCmac+6)& (0+255),b
 48039  003E16  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 48040  003E18  0A80               	xorlw	128
 48041  003E1A  59C6               	subwfb	(??_AESCmac+6)& (0+255),w,b
 48042  003E1C  A0D8               	btfss	status,0,c
 48043  003E1E  D78D               	goto	l382
 48044                           
 48045                           ; BSR set to: 0
 48046                           ;lorawan_aes_cmac.c: 111: }
 48047                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 48048                           
 48049                           ; BSR set to: 0
 48050  003E20  0E00               	movlw	0
 48051  003E22  0101               	movlb	1	; () banked
 48052  003E24  6FF1               	movwf	AESCmac@i& (0+255),b
 48053  003E26                     l18361:
 48054                           
 48055                           ; BSR set to: 1
 48056  003E26  0E0F               	movlw	15
 48057  003E28  65F1               	cpfsgt	AESCmac@i& (0+255),b
 48058  003E2A  D001               	goto	l386
 48059  003E2C  D023               	goto	u20400
 48060  003E2E                     l386:
 48061                           
 48062                           ; BSR set to: 1
 48063                           ;lorawan_aes_cmac.c: 114: {
 48064                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 48065                           
 48066                           ; BSR set to: 1
 48067  003E2E  51F1               	movf	AESCmac@i& (0+255),w,b
 48068  003E30  0D01               	mullw	1
 48069  003E32  0ECC               	movlw	low AESCmac@y
 48070  003E34  24F3               	addwf	prodl,w,c
 48071  003E36  6ED9               	movwf	fsr2l,c
 48072  003E38  0E01               	movlw	high AESCmac@y
 48073  003E3A  20F4               	addwfc	prodh,w,c
 48074  003E3C  6EDA               	movwf	fsr2h,c
 48075  003E3E  51F1               	movf	AESCmac@i& (0+255),w,b
 48076  003E40  0D01               	mullw	1
 48077  003E42  0EAC               	movlw	low AESCmac@mLast
 48078  003E44  24F3               	addwf	prodl,w,c
 48079  003E46  6EE9               	movwf	fsr0l,c
 48080  003E48  0E01               	movlw	high AESCmac@mLast
 48081  003E4A  20F4               	addwfc	prodh,w,c
 48082  003E4C  6EEA               	movwf	fsr0h,c
 48083  003E4E  50EF               	movf	indf0,w,c
 48084  003E50  0100               	movlb	0	; () banked
 48085  003E52  6FC0               	movwf	??_AESCmac& (0+255),b
 48086  003E54  0101               	movlb	1	; () banked
 48087  003E56  51F1               	movf	AESCmac@i& (0+255),w,b
 48088  003E58  0D01               	mullw	1
 48089  003E5A  0EDC               	movlw	low AESCmac@x
 48090  003E5C  24F3               	addwf	prodl,w,c
 48091  003E5E  6EE9               	movwf	fsr0l,c
 48092  003E60  0E01               	movlw	high AESCmac@x
 48093  003E62  20F4               	addwfc	prodh,w,c
 48094  003E64  6EEA               	movwf	fsr0h,c
 48095  003E66  50EF               	movf	indf0,w,c
 48096  003E68  0100               	movlb	0	; () banked
 48097  003E6A  19C0               	xorwf	??_AESCmac& (0+255),w,b
 48098  003E6C  6EDF               	movwf	indf2,c
 48099                           
 48100                           ; BSR set to: 0
 48101  003E6E  0101               	movlb	1	; () banked
 48102  003E70  2BF1               	incf	AESCmac@i& (0+255),f,b
 48103  003E72  D7D9               	goto	l18361
 48104  003E74                     u20400:
 48105                           
 48106                           ; BSR set to: 1
 48107                           ;lorawan_aes_cmac.c: 116: }
 48108                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 48109                           
 48110                           ; BSR set to: 1
 48111  003E74  0ECC               	movlw	low AESCmac@y
 48112  003E76  0100               	movlb	0	; () banked
 48113  003E78  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 48114  003E7A  0E01               	movlw	high AESCmac@y
 48115  003E7C  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 48116  003E7E  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 48117  003E82  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 48118  003E86  EC15  F05C         	call	_AESEncodeLoRa	;wreg free
 48119                           
 48120                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 48121  003E8A  C0BB  F060         	movff	AESCmac@output,memcpy@d1
 48122  003E8E  C0BC  F061         	movff	AESCmac@output+1,memcpy@d1+1
 48123  003E92  0ECC               	movlw	low AESCmac@y
 48124  003E94  0100               	movlb	0	; () banked
 48125  003E96  6F62               	movwf	memcpy@s1& (0+255),b
 48126  003E98  0E01               	movlw	high AESCmac@y
 48127  003E9A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 48128  003E9C  0E00               	movlw	0
 48129  003E9E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 48130  003EA0  0E10               	movlw	16
 48131  003EA2  6F64               	movwf	memcpy@n& (0+255),b
 48132  003EA4  ECAB  F055         	call	_memcpy	;wreg free
 48133  003EA8  0012               	return		;funcret
 48134  003EAA                     __end_of_AESCmac:
 48135                           	opt stack 0
 48136                           tosu	equ	0xFFF
 48137                           tosh	equ	0xFFE
 48138                           tosl	equ	0xFFD
 48139                           pclath	equ	0xFFA
 48140                           tblptru	equ	0xFF8
 48141                           tblptrh	equ	0xFF7
 48142                           tblptrl	equ	0xFF6
 48143                           tablat	equ	0xFF5
 48144                           prodh	equ	0xFF4
 48145                           prodl	equ	0xFF3
 48146                           intcon	equ	0xFF2
 48147                           intcon2	equ	0xFF1
 48148                           intcon3	equ	0xFF0
 48149                           indf0	equ	0xFEF
 48150                           postinc0	equ	0xFEE
 48151                           fsr0h	equ	0xFEA
 48152                           fsr0l	equ	0xFE9
 48153                           wreg	equ	0xFE8
 48154                           postinc1	equ	0xFE6
 48155                           postdec1	equ	0xFE5
 48156                           plusw1	equ	0xFE3
 48157                           fsr1h	equ	0xFE2
 48158                           fsr1l	equ	0xFE1
 48159                           indf2	equ	0xFDF
 48160                           postinc2	equ	0xFDE
 48161                           postdec2	equ	0xFDD
 48162                           plusw2	equ	0xFDB
 48163                           fsr2h	equ	0xFDA
 48164                           fsr2l	equ	0xFD9
 48165                           status	equ	0xFD8
 48166                           
 48167 ;; *************** function _GenerateSubkey *****************
 48168 ;; Defined at:
 48169 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 48170 ;; Parameters:    Size  Location     Type
 48171 ;;  key             2   49[BANK0 ] PTR unsigned char 
 48172 ;;		 -> loRa.activationParameters(105), loRa(245), 
 48173 ;;  k1              2   51[BANK0 ] PTR unsigned char 
 48174 ;;		 -> AESCmac@k1(16), 
 48175 ;;  k2              2   53[BANK0 ] PTR unsigned char 
 48176 ;;		 -> AESCmac@k2(16), 
 48177 ;; Auto vars:     Size  Location     Type
 48178 ;;  l              16   72[BANK0 ] unsigned char [16]
 48179 ;;  const_Rb       16   56[BANK0 ] unsigned char [16]
 48180 ;;  i               1   88[BANK0 ] unsigned char 
 48181 ;; Return value:  Size  Location     Type
 48182 ;;                  1    wreg      void 
 48183 ;; Registers used:
 48184 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48185 ;; Tracked objects:
 48186 ;;		On entry : 0/0
 48187 ;;		On exit  : 0/0
 48188 ;;		Unchanged: 0/0
 48189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48190 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48191 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48192 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48193 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48194 ;;Total ram usage:       40 bytes
 48195 ;; Hardware stack levels used:    1
 48196 ;; Hardware stack levels required when called:   10
 48197 ;; This function calls:
 48198 ;;		_AESEncodeLoRa
 48199 ;;		_FillSubKey
 48200 ;;		_memset
 48201 ;; This function is called by:
 48202 ;;		_AESCmac
 48203 ;; This function uses a non-reentrant model
 48204 ;;
 48205                           
 48206                           	psect	text256
 48207  0079DC                     __ptext256:
 48208                           	opt stack 0
 48209  0079DC                     _GenerateSubkey:
 48210                           	opt stack 17
 48211                           
 48212                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
 48213                           
 48214                           ;incstack = 0
 48215  0079DC  0E00               	movlw	0
 48216  0079DE  0100               	movlb	0	; () banked
 48217  0079E0  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 48218                           
 48219                           ; BSR set to: 0
 48220                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 48221                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 48222                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 48223  0079E2  EE24  F0E0         	lfsr	2,GenerateSubkey@F7103
 48224  0079E6  EE00  F098         	lfsr	0,GenerateSubkey@const_Rb
 48225  0079EA  0E0F               	movlw	15
 48226  0079EC                     u19711:
 48227  0079EC  CFDB FFEB          	movff	plusw2,plusw0
 48228  0079F0  06E8               	decf	wreg,f,c
 48229  0079F2  E2FC               	bc	u19711
 48230                           
 48231                           ; BSR set to: 0
 48232                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 48233  0079F4  0EA8               	movlw	low GenerateSubkey@l
 48234  0079F6  6F60               	movwf	memset@p1& (0+255),b
 48235  0079F8  0E00               	movlw	high GenerateSubkey@l
 48236  0079FA  6F61               	movwf	(memset@p1+1)& (0+255),b
 48237  0079FC  0E00               	movlw	0
 48238  0079FE  6F63               	movwf	(memset@c+1)& (0+255),b
 48239  007A00  0E00               	movlw	0
 48240  007A02  6F62               	movwf	memset@c& (0+255),b
 48241  007A04  0E00               	movlw	0
 48242  007A06  6F65               	movwf	(memset@n+1)& (0+255),b
 48243  007A08  0E10               	movlw	16
 48244  007A0A  6F64               	movwf	memset@n& (0+255),b
 48245  007A0C  EC23  F05D         	call	_memset	;wreg free
 48246                           
 48247                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 48248  007A10  0EA8               	movlw	low GenerateSubkey@l
 48249  007A12  0100               	movlb	0	; () banked
 48250  007A14  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 48251  007A16  0E00               	movlw	high GenerateSubkey@l
 48252  007A18  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 48253  007A1A  C091  F07F         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 48254  007A1E  C092  F080         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 48255  007A22  EC15  F05C         	call	_AESEncodeLoRa	;wreg free
 48256                           
 48257                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 48258  007A26  0100               	movlb	0	; () banked
 48259  007A28  BFA8               	btfsc	GenerateSubkey@l& (0+255),7,b
 48260  007A2A  D00D               	goto	l393
 48261                           
 48262                           ; BSR set to: 0
 48263                           ;lorawan_aes_cmac.c: 138: {
 48264                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 48265  007A2C  0EA8               	movlw	low GenerateSubkey@l
 48266  007A2E  6F60               	movwf	FillSubKey@source& (0+255),b
 48267  007A30  0E00               	movlw	high GenerateSubkey@l
 48268  007A32  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 48269  007A34  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 48270  007A38  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 48271  007A3C  0E10               	movlw	16
 48272  007A3E  6F64               	movwf	FillSubKey@size& (0+255),b
 48273  007A40  EC19  F055         	call	_FillSubKey	;wreg free
 48274                           
 48275                           ;lorawan_aes_cmac.c: 140: }
 48276  007A44  D02A               	goto	u19740
 48277  007A46                     l393:
 48278                           
 48279                           ;lorawan_aes_cmac.c: 141: else
 48280                           ;lorawan_aes_cmac.c: 142: {
 48281                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 48282  007A46  0EA8               	movlw	low GenerateSubkey@l
 48283  007A48  0100               	movlb	0	; () banked
 48284  007A4A  6F60               	movwf	FillSubKey@source& (0+255),b
 48285  007A4C  0E00               	movlw	high GenerateSubkey@l
 48286  007A4E  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 48287  007A50  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 48288  007A54  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 48289  007A58  0E10               	movlw	16
 48290  007A5A  6F64               	movwf	FillSubKey@size& (0+255),b
 48291  007A5C  EC19  F055         	call	_FillSubKey	;wreg free
 48292                           
 48293                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 48294  007A60  0E00               	movlw	0
 48295  007A62  0100               	movlb	0	; () banked
 48296  007A64  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 48297  007A66                     l17891:
 48298                           
 48299                           ; BSR set to: 0
 48300  007A66  0E0F               	movlw	15
 48301  007A68  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 48302  007A6A  D001               	goto	l395
 48303  007A6C  D016               	goto	u19740
 48304  007A6E                     l395:
 48305                           
 48306                           ; BSR set to: 0
 48307                           ;lorawan_aes_cmac.c: 146: {
 48308                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 48309                           
 48310                           ; BSR set to: 0
 48311  007A6E  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 48312  007A70  0D01               	mullw	1
 48313  007A72  0E98               	movlw	low GenerateSubkey@const_Rb
 48314  007A74  24F3               	addwf	prodl,w,c
 48315  007A76  6ED9               	movwf	fsr2l,c
 48316  007A78  0E00               	movlw	high GenerateSubkey@const_Rb
 48317  007A7A  20F4               	addwfc	prodh,w,c
 48318  007A7C  6EDA               	movwf	fsr2h,c
 48319  007A7E  50DF               	movf	indf2,w,c
 48320  007A80  6F97               	movwf	??_GenerateSubkey& (0+255),b
 48321  007A82  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 48322  007A84  0D01               	mullw	1
 48323  007A86  50F3               	movf	prodl,w,c
 48324  007A88  2593               	addwf	GenerateSubkey@k1& (0+255),w,b
 48325  007A8A  6ED9               	movwf	fsr2l,c
 48326  007A8C  50F4               	movf	prodh,w,c
 48327  007A8E  2194               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 48328  007A90  6EDA               	movwf	fsr2h,c
 48329  007A92  5197               	movf	??_GenerateSubkey& (0+255),w,b
 48330  007A94  1ADF               	xorwf	indf2,f,c
 48331                           
 48332                           ; BSR set to: 0
 48333  007A96  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 48334  007A98  D7E6               	goto	l17891
 48335  007A9A                     u19740:
 48336                           
 48337                           ;lorawan_aes_cmac.c: 148: }
 48338                           ;lorawan_aes_cmac.c: 149: }
 48339                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 48340                           
 48341                           ; BSR set to: 0
 48342                           
 48343                           ; BSR set to: 0
 48344  007A9A  C093  FFD9         	movff	GenerateSubkey@k1,fsr2l
 48345  007A9E  C094  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 48346  007AA2  0100               	movlb	0	; () banked
 48347  007AA4  BEDF               	btfsc	indf2,7,c
 48348  007AA6  D00D               	goto	l397
 48349                           
 48350                           ; BSR set to: 0
 48351                           ;lorawan_aes_cmac.c: 153: {
 48352                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 48353  007AA8  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 48354  007AAC  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 48355  007AB0  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 48356  007AB4  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 48357  007AB8  0E10               	movlw	16
 48358  007ABA  6F64               	movwf	FillSubKey@size& (0+255),b
 48359  007ABC  EC19  F055         	call	_FillSubKey	;wreg free
 48360                           
 48361                           ;lorawan_aes_cmac.c: 155: }
 48362  007AC0  0012               	return	
 48363  007AC2                     l397:
 48364                           
 48365                           ;lorawan_aes_cmac.c: 156: else
 48366                           ;lorawan_aes_cmac.c: 157: {
 48367                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 48368  007AC2  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 48369  007AC6  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 48370  007ACA  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 48371  007ACE  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 48372  007AD2  0E10               	movlw	16
 48373  007AD4  0100               	movlb	0	; () banked
 48374  007AD6  6F64               	movwf	FillSubKey@size& (0+255),b
 48375  007AD8  EC19  F055         	call	_FillSubKey	;wreg free
 48376                           
 48377                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 48378  007ADC  0E00               	movlw	0
 48379  007ADE  0100               	movlb	0	; () banked
 48380  007AE0  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 48381  007AE2                     l17909:
 48382                           
 48383                           ; BSR set to: 0
 48384  007AE2  0E0F               	movlw	15
 48385  007AE4  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 48386  007AE6  D001               	goto	l399
 48387  007AE8  0012               	return	
 48388  007AEA                     l399:
 48389                           
 48390                           ; BSR set to: 0
 48391                           ;lorawan_aes_cmac.c: 161: {
 48392                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 48393                           
 48394                           ; BSR set to: 0
 48395  007AEA  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 48396  007AEC  0D01               	mullw	1
 48397  007AEE  50F3               	movf	prodl,w,c
 48398  007AF0  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 48399  007AF2  6ED9               	movwf	fsr2l,c
 48400  007AF4  50F4               	movf	prodh,w,c
 48401  007AF6  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 48402  007AF8  6EDA               	movwf	fsr2h,c
 48403  007AFA  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 48404  007AFC  0D01               	mullw	1
 48405  007AFE  0E98               	movlw	low GenerateSubkey@const_Rb
 48406  007B00  24F3               	addwf	prodl,w,c
 48407  007B02  6EE9               	movwf	fsr0l,c
 48408  007B04  0E00               	movlw	high GenerateSubkey@const_Rb
 48409  007B06  20F4               	addwfc	prodh,w,c
 48410  007B08  6EEA               	movwf	fsr0h,c
 48411  007B0A  50EF               	movf	indf0,w,c
 48412  007B0C  6F97               	movwf	??_GenerateSubkey& (0+255),b
 48413  007B0E  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 48414  007B10  0D01               	mullw	1
 48415  007B12  50F3               	movf	prodl,w,c
 48416  007B14  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 48417  007B16  6EE9               	movwf	fsr0l,c
 48418  007B18  50F4               	movf	prodh,w,c
 48419  007B1A  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 48420  007B1C  6EEA               	movwf	fsr0h,c
 48421  007B1E  50EF               	movf	indf0,w,c
 48422  007B20  1997               	xorwf	??_GenerateSubkey& (0+255),w,b
 48423  007B22  6EDF               	movwf	indf2,c
 48424                           
 48425                           ; BSR set to: 0
 48426  007B24  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 48427  007B26  D7DD               	goto	l17909
 48428  007B28                     __end_of_GenerateSubkey:
 48429                           	opt stack 0
 48430                           tosu	equ	0xFFF
 48431                           tosh	equ	0xFFE
 48432                           tosl	equ	0xFFD
 48433                           pclath	equ	0xFFA
 48434                           tblptru	equ	0xFF8
 48435                           tblptrh	equ	0xFF7
 48436                           tblptrl	equ	0xFF6
 48437                           tablat	equ	0xFF5
 48438                           prodh	equ	0xFF4
 48439                           prodl	equ	0xFF3
 48440                           intcon	equ	0xFF2
 48441                           intcon2	equ	0xFF1
 48442                           intcon3	equ	0xFF0
 48443                           indf0	equ	0xFEF
 48444                           postinc0	equ	0xFEE
 48445                           plusw0	equ	0xFEB
 48446                           fsr0h	equ	0xFEA
 48447                           fsr0l	equ	0xFE9
 48448                           wreg	equ	0xFE8
 48449                           postinc1	equ	0xFE6
 48450                           postdec1	equ	0xFE5
 48451                           plusw1	equ	0xFE3
 48452                           fsr1h	equ	0xFE2
 48453                           fsr1l	equ	0xFE1
 48454                           indf2	equ	0xFDF
 48455                           postinc2	equ	0xFDE
 48456                           postdec2	equ	0xFDD
 48457                           plusw2	equ	0xFDB
 48458                           fsr2h	equ	0xFDA
 48459                           fsr2l	equ	0xFD9
 48460                           status	equ	0xFD8
 48461                           
 48462 ;; *************** function _FillSubKey *****************
 48463 ;; Defined at:
 48464 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 48465 ;; Parameters:    Size  Location     Type
 48466 ;;  source          2    0[BANK0 ] PTR unsigned char 
 48467 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 48468 ;;  key             2    2[BANK0 ] PTR unsigned char 
 48469 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 48470 ;;  size            1    4[BANK0 ] unsigned char 
 48471 ;; Auto vars:     Size  Location     Type
 48472 ;;  i               1    7[BANK0 ] unsigned char 
 48473 ;;  carry           1    6[BANK0 ] unsigned char 
 48474 ;; Return value:  Size  Location     Type
 48475 ;;                  1    wreg      void 
 48476 ;; Registers used:
 48477 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48478 ;; Tracked objects:
 48479 ;;		On entry : 0/0
 48480 ;;		On exit  : 0/0
 48481 ;;		Unchanged: 0/0
 48482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48483 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48485 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48486 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48487 ;;Total ram usage:        8 bytes
 48488 ;; Hardware stack levels used:    1
 48489 ;; Hardware stack levels required when called:    7
 48490 ;; This function calls:
 48491 ;;		Nothing
 48492 ;; This function is called by:
 48493 ;;		_GenerateSubkey
 48494 ;; This function uses a non-reentrant model
 48495 ;;
 48496                           
 48497                           	psect	text257
 48498  00AA32                     __ptext257:
 48499                           	opt stack 0
 48500  00AA32                     _FillSubKey:
 48501                           	opt stack 19
 48502                           
 48503                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 48504                           
 48505                           ;incstack = 0
 48506  00AA32  0E00               	movlw	0
 48507  00AA34  0100               	movlb	0	; () banked
 48508  00AA36  6F67               	movwf	FillSubKey@i& (0+255),b
 48509                           
 48510                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 48511  00AA38  0E00               	movlw	0
 48512  00AA3A  6F66               	movwf	FillSubKey@carry& (0+255),b
 48513                           
 48514                           ; BSR set to: 0
 48515                           ;lorawan_aes_cmac.c: 172: i=size;
 48516  00AA3C  C064  F067         	movff	FillSubKey@size,FillSubKey@i
 48517                           
 48518                           ;lorawan_aes_cmac.c: 174: while(i--)
 48519  00AA40  D024               	goto	l404
 48520  00AA42                     
 48521                           ; BSR set to: 0
 48522                           ;lorawan_aes_cmac.c: 175: {
 48523                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 48524                           
 48525                           ; BSR set to: 0
 48526  00AA42  5167               	movf	FillSubKey@i& (0+255),w,b
 48527  00AA44  0D01               	mullw	1
 48528  00AA46  50F3               	movf	prodl,w,c
 48529  00AA48  2562               	addwf	FillSubKey@key& (0+255),w,b
 48530  00AA4A  6ED9               	movwf	fsr2l,c
 48531  00AA4C  50F4               	movf	prodh,w,c
 48532  00AA4E  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 48533  00AA50  6EDA               	movwf	fsr2h,c
 48534  00AA52  5167               	movf	FillSubKey@i& (0+255),w,b
 48535  00AA54  0D01               	mullw	1
 48536  00AA56  50F3               	movf	prodl,w,c
 48537  00AA58  2560               	addwf	FillSubKey@source& (0+255),w,b
 48538  00AA5A  6EE9               	movwf	fsr0l,c
 48539  00AA5C  50F4               	movf	prodh,w,c
 48540  00AA5E  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 48541  00AA60  6EEA               	movwf	fsr0h,c
 48542  00AA62  50EF               	movf	indf0,w,c
 48543  00AA64  6F65               	movwf	??_FillSubKey& (0+255),b
 48544  00AA66  90D8               	bcf	status,0,c
 48545  00AA68  3565               	rlcf	??_FillSubKey& (0+255),w,b
 48546  00AA6A  1166               	iorwf	FillSubKey@carry& (0+255),w,b
 48547  00AA6C  6EDF               	movwf	indf2,c
 48548                           
 48549                           ; BSR set to: 0
 48550                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 48551  00AA6E  5167               	movf	FillSubKey@i& (0+255),w,b
 48552  00AA70  0D01               	mullw	1
 48553  00AA72  50F3               	movf	prodl,w,c
 48554  00AA74  2560               	addwf	FillSubKey@source& (0+255),w,b
 48555  00AA76  6ED9               	movwf	fsr2l,c
 48556  00AA78  50F4               	movf	prodh,w,c
 48557  00AA7A  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 48558  00AA7C  6EDA               	movwf	fsr2h,c
 48559  00AA7E  AEDF               	btfss	indf2,7,c
 48560  00AA80  D002               	goto	u19210
 48561  00AA82  0E01               	movlw	1
 48562  00AA84  D001               	goto	u19220
 48563  00AA86                     u19210:
 48564  00AA86  0E00               	movlw	0
 48565  00AA88                     u19220:
 48566  00AA88  6F66               	movwf	FillSubKey@carry& (0+255),b
 48567  00AA8A                     l404:
 48568                           
 48569                           ; BSR set to: 0
 48570                           
 48571                           ; BSR set to: 0
 48572  00AA8A  0767               	decf	FillSubKey@i& (0+255),f,b
 48573  00AA8C  2967               	incf	FillSubKey@i& (0+255),w,b
 48574  00AA8E  B4D8               	btfsc	status,2,c
 48575  00AA90  0012               	return	
 48576  00AA92  D7D7               	goto	l405
 48577  00AA94                     __end_of_FillSubKey:
 48578                           	opt stack 0
 48579                           tosu	equ	0xFFF
 48580                           tosh	equ	0xFFE
 48581                           tosl	equ	0xFFD
 48582                           pclath	equ	0xFFA
 48583                           tblptru	equ	0xFF8
 48584                           tblptrh	equ	0xFF7
 48585                           tblptrl	equ	0xFF6
 48586                           tablat	equ	0xFF5
 48587                           prodh	equ	0xFF4
 48588                           prodl	equ	0xFF3
 48589                           intcon	equ	0xFF2
 48590                           intcon2	equ	0xFF1
 48591                           intcon3	equ	0xFF0
 48592                           indf0	equ	0xFEF
 48593                           postinc0	equ	0xFEE
 48594                           plusw0	equ	0xFEB
 48595                           fsr0h	equ	0xFEA
 48596                           fsr0l	equ	0xFE9
 48597                           wreg	equ	0xFE8
 48598                           postinc1	equ	0xFE6
 48599                           postdec1	equ	0xFE5
 48600                           plusw1	equ	0xFE3
 48601                           fsr1h	equ	0xFE2
 48602                           fsr1l	equ	0xFE1
 48603                           indf2	equ	0xFDF
 48604                           postinc2	equ	0xFDE
 48605                           postdec2	equ	0xFDD
 48606                           plusw2	equ	0xFDB
 48607                           fsr2h	equ	0xFDA
 48608                           fsr2l	equ	0xFD9
 48609                           status	equ	0xFD8
 48610                           
 48611 ;; *************** function _AESEncodeLoRa *****************
 48612 ;; Defined at:
 48613 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 48614 ;; Parameters:    Size  Location     Type
 48615 ;;  block           2   29[BANK0 ] PTR unsigned char 
 48616 ;;		 -> sp__ADC_GetConversion(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), 
 48617 ;;		 -> radioBuffer(271), loRa(245), GenerateSubkey@l(16), AESCmac@y(16), 
 48618 ;;		 -> AESCmac@x(16), 
 48619 ;;  key             2   31[BANK0 ] PTR unsigned char 
 48620 ;;		 -> loRa.activationParameters(105), loRa(245), 
 48621 ;; Auto vars:     Size  Location     Type
 48622 ;;  useKey         16   33[BANK0 ] unsigned char [16]
 48623 ;; Return value:  Size  Location     Type
 48624 ;;                  1    wreg      void 
 48625 ;; Registers used:
 48626 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48627 ;; Tracked objects:
 48628 ;;		On entry : 0/0
 48629 ;;		On exit  : 0/0
 48630 ;;		Unchanged: 0/0
 48631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48633 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48635 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48636 ;;Total ram usage:       20 bytes
 48637 ;; Hardware stack levels used:    1
 48638 ;; Hardware stack levels required when called:    9
 48639 ;; This function calls:
 48640 ;;		_AESEncode
 48641 ;;		_memcpy
 48642 ;; This function is called by:
 48643 ;;		_AESCmac
 48644 ;;		_GenerateSubkey
 48645 ;;		_LORAWAN_RxDone
 48646 ;;		_ComputeSessionKeys
 48647 ;;		_EncryptFRMPayload
 48648 ;; This function uses a non-reentrant model
 48649 ;;
 48650                           
 48651                           	psect	text258
 48652  00B82A                     __ptext258:
 48653                           	opt stack 0
 48654  00B82A                     _AESEncodeLoRa:
 48655                           	opt stack 18
 48656                           
 48657                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 48658                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 48659                           
 48660                           ; BSR set to: 0
 48661                           ;incstack = 0
 48662  00B82A  0E81               	movlw	low AESEncodeLoRa@useKey
 48663  00B82C  0100               	movlb	0	; () banked
 48664  00B82E  6F60               	movwf	memcpy@d1& (0+255),b
 48665  00B830  0E00               	movlw	high AESEncodeLoRa@useKey
 48666  00B832  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 48667  00B834  C07F  F062         	movff	AESEncodeLoRa@key,memcpy@s1
 48668  00B838  C080  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 48669  00B83C  0E00               	movlw	0
 48670  00B83E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 48671  00B840  0E10               	movlw	16
 48672  00B842  6F64               	movwf	memcpy@n& (0+255),b
 48673  00B844  ECAB  F055         	call	_memcpy	;wreg free
 48674                           
 48675                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 48676  00B848  C07D  F066         	movff	AESEncodeLoRa@block,AESEncode@block
 48677  00B84C  C07E  F067         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 48678  00B850  0E81               	movlw	low AESEncodeLoRa@useKey
 48679  00B852  0100               	movlb	0	; () banked
 48680  00B854  6F68               	movwf	AESEncode@key& (0+255),b
 48681  00B856  0E00               	movlw	high AESEncodeLoRa@useKey
 48682  00B858  6F69               	movwf	(AESEncode@key+1)& (0+255),b
 48683  00B85A  ECB0  F022         	call	_AESEncode	;wreg free
 48684  00B85E  0012               	return		;funcret
 48685  00B860                     __end_of_AESEncodeLoRa:
 48686                           	opt stack 0
 48687                           tosu	equ	0xFFF
 48688                           tosh	equ	0xFFE
 48689                           tosl	equ	0xFFD
 48690                           pclath	equ	0xFFA
 48691                           tblptru	equ	0xFF8
 48692                           tblptrh	equ	0xFF7
 48693                           tblptrl	equ	0xFF6
 48694                           tablat	equ	0xFF5
 48695                           prodh	equ	0xFF4
 48696                           prodl	equ	0xFF3
 48697                           intcon	equ	0xFF2
 48698                           intcon2	equ	0xFF1
 48699                           intcon3	equ	0xFF0
 48700                           indf0	equ	0xFEF
 48701                           postinc0	equ	0xFEE
 48702                           plusw0	equ	0xFEB
 48703                           fsr0h	equ	0xFEA
 48704                           fsr0l	equ	0xFE9
 48705                           wreg	equ	0xFE8
 48706                           postinc1	equ	0xFE6
 48707                           postdec1	equ	0xFE5
 48708                           plusw1	equ	0xFE3
 48709                           fsr1h	equ	0xFE2
 48710                           fsr1l	equ	0xFE1
 48711                           indf2	equ	0xFDF
 48712                           postinc2	equ	0xFDE
 48713                           postdec2	equ	0xFDD
 48714                           plusw2	equ	0xFDB
 48715                           fsr2h	equ	0xFDA
 48716                           fsr2l	equ	0xFD9
 48717                           status	equ	0xFD8
 48718                           
 48719 ;; *************** function _AESEncode *****************
 48720 ;; Defined at:
 48721 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
 48722 ;; Parameters:    Size  Location     Type
 48723 ;;  block           2    6[BANK0 ] PTR unsigned char 
 48724 ;;		 -> sp__ADC_GetConversion(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), 
 48725 ;;		 -> radioBuffer(271), loRa(245), GenerateSubkey@l(16), AESCmac@y(16), 
 48726 ;;		 -> AESCmac@x(16), 
 48727 ;;  key             2    8[BANK0 ] PTR unsigned char 
 48728 ;;		 -> AESEncodeLoRa@useKey(16), 
 48729 ;; Auto vars:     Size  Location     Type
 48730 ;;  aux3            1   27[BANK0 ] unsigned char 
 48731 ;;  aux1            1   26[BANK0 ] unsigned char 
 48732 ;;  aux2            1   25[BANK0 ] unsigned char 
 48733 ;;  aux             1   24[BANK0 ] unsigned char 
 48734 ;;  i               1   28[BANK0 ] unsigned char 
 48735 ;;  temp            1    0        unsigned char 
 48736 ;; Return value:  Size  Location     Type
 48737 ;;                  1    wreg      void 
 48738 ;; Registers used:
 48739 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48740 ;; Tracked objects:
 48741 ;;		On entry : 0/0
 48742 ;;		On exit  : 0/0
 48743 ;;		Unchanged: 0/0
 48744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48745 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48746 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48747 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48748 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48749 ;;Total ram usage:       23 bytes
 48750 ;; Hardware stack levels used:    1
 48751 ;; Hardware stack levels required when called:    8
 48752 ;; This function calls:
 48753 ;;		_EncKeySchedule
 48754 ;;		_EncodeShiftRow
 48755 ;; This function is called by:
 48756 ;;		_AESEncodeLoRa
 48757 ;; This function uses a non-reentrant model
 48758 ;;
 48759                           
 48760                           	psect	text259
 48761  004560                     __ptext259:
 48762                           	opt stack 0
 48763  004560                     _AESEncode:
 48764                           	opt stack 18
 48765                           
 48766                           ;AES.c: 250: unsigned char i;
 48767                           ;AES.c: 251: unsigned char temp;
 48768                           ;AES.c: 254: _roundCounter = 10;
 48769                           
 48770                           ;incstack = 0
 48771  004560  0E0A               	movlw	10
 48772  004562  0101               	movlb	1	; () banked
 48773  004564  6F33               	movwf	__roundCounter& (0+255),b
 48774                           
 48775                           ;AES.c: 256: _rcon = 0x01;
 48776  004566  0E01               	movlw	1
 48777  004568  6E46               	movwf	__rcon,c
 48778                           
 48779                           ;AES.c: 259: for(i=0;i<16;i++)
 48780  00456A  0E00               	movlw	0
 48781  00456C  0100               	movlb	0	; () banked
 48782  00456E  6F7C               	movwf	AESEncode@i& (0+255),b
 48783  004570                     l17407:
 48784                           
 48785                           ; BSR set to: 0
 48786  004570  0E0F               	movlw	15
 48787  004572  657C               	cpfsgt	AESEncode@i& (0+255),b
 48788  004574  D001               	goto	l632
 48789  004576  D016               	goto	u18970
 48790  004578                     l632:
 48791                           
 48792                           ; BSR set to: 0
 48793                           ;AES.c: 260: {
 48794                           ;AES.c: 261: block[i] ^= key[i];
 48795                           
 48796                           ; BSR set to: 0
 48797  004578  517C               	movf	AESEncode@i& (0+255),w,b
 48798  00457A  0D01               	mullw	1
 48799  00457C  50F3               	movf	prodl,w,c
 48800  00457E  2568               	addwf	AESEncode@key& (0+255),w,b
 48801  004580  6ED9               	movwf	fsr2l,c
 48802  004582  50F4               	movf	prodh,w,c
 48803  004584  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 48804  004586  6EDA               	movwf	fsr2h,c
 48805  004588  50DF               	movf	indf2,w,c
 48806  00458A  6F6A               	movwf	??_AESEncode& (0+255),b
 48807  00458C  517C               	movf	AESEncode@i& (0+255),w,b
 48808  00458E  0D01               	mullw	1
 48809  004590  50F3               	movf	prodl,w,c
 48810  004592  2566               	addwf	AESEncode@block& (0+255),w,b
 48811  004594  6ED9               	movwf	fsr2l,c
 48812  004596  50F4               	movf	prodh,w,c
 48813  004598  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48814  00459A  6EDA               	movwf	fsr2h,c
 48815  00459C  516A               	movf	??_AESEncode& (0+255),w,b
 48816  00459E  1ADF               	xorwf	indf2,f,c
 48817                           
 48818                           ; BSR set to: 0
 48819  0045A0  2B7C               	incf	AESEncode@i& (0+255),f,b
 48820  0045A2  D7E6               	goto	l17407
 48821  0045A4                     u18970:
 48822                           
 48823                           ;AES.c: 265: {
 48824                           ;AES.c: 268: for(i=0;i<16;i++)
 48825                           
 48826                           ; BSR set to: 0
 48827                           
 48828                           ;AES.c: 262: }
 48829                           ;AES.c: 264: do
 48830                           
 48831                           ; BSR set to: 0
 48832  0045A4  0E00               	movlw	0
 48833  0045A6  0100               	movlb	0	; () banked
 48834  0045A8  6F7C               	movwf	AESEncode@i& (0+255),b
 48835  0045AA                     l17419:
 48836                           
 48837                           ; BSR set to: 0
 48838  0045AA  0E0F               	movlw	15
 48839  0045AC  657C               	cpfsgt	AESEncode@i& (0+255),b
 48840  0045AE  D001               	goto	l635
 48841  0045B0  D022               	goto	u18990
 48842  0045B2                     l635:
 48843                           
 48844                           ; BSR set to: 0
 48845                           ;AES.c: 269: {
 48846                           ;AES.c: 270: block[i]=STable[block[i]];
 48847                           
 48848                           ; BSR set to: 0
 48849  0045B2  517C               	movf	AESEncode@i& (0+255),w,b
 48850  0045B4  0D01               	mullw	1
 48851  0045B6  50F3               	movf	prodl,w,c
 48852  0045B8  2566               	addwf	AESEncode@block& (0+255),w,b
 48853  0045BA  6ED9               	movwf	fsr2l,c
 48854  0045BC  50F4               	movf	prodh,w,c
 48855  0045BE  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48856  0045C0  6EDA               	movwf	fsr2h,c
 48857  0045C2  50DF               	movf	indf2,w,c
 48858  0045C4  6F6A               	movwf	??_AESEncode& (0+255),b
 48859  0045C6  516A               	movf	??_AESEncode& (0+255),w,b
 48860  0045C8  0D01               	mullw	1
 48861  0045CA  0EF9               	movlw	low _STable
 48862  0045CC  24F3               	addwf	prodl,w,c
 48863  0045CE  6EF6               	movwf	tblptrl,c
 48864  0045D0  0EFC               	movlw	high _STable
 48865  0045D2  20F4               	addwfc	prodh,w,c
 48866  0045D4  6EF7               	movwf	tblptrh,c
 48867  0045D6                     	if	1	;There are 3 active tblptr bytes
 48868  0045D6  6AF8               	clrf	tblptru,c
 48869  0045D8  0E00               	movlw	low (__mediumconst shr (0+16))
 48870  0045DA  22F8               	addwfc	tblptru,f,c
 48871  0045DC                     	endif
 48872  0045DC  517C               	movf	AESEncode@i& (0+255),w,b
 48873  0045DE  0D01               	mullw	1
 48874  0045E0  50F3               	movf	prodl,w,c
 48875  0045E2  2566               	addwf	AESEncode@block& (0+255),w,b
 48876  0045E4  6ED9               	movwf	fsr2l,c
 48877  0045E6  50F4               	movf	prodh,w,c
 48878  0045E8  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48879  0045EA  6EDA               	movwf	fsr2h,c
 48880  0045EC  0008               	tblrd		*
 48881  0045EE  CFF5 FFDF          	movff	tablat,indf2
 48882                           
 48883                           ; BSR set to: 0
 48884  0045F2  2B7C               	incf	AESEncode@i& (0+255),f,b
 48885  0045F4  D7DA               	goto	l17419
 48886  0045F6                     u18990:
 48887                           
 48888                           ; BSR set to: 0
 48889                           ;AES.c: 271: }
 48890                           ;AES.c: 274: EncodeShiftRow(block);
 48891                           
 48892                           ; BSR set to: 0
 48893  0045F6  C066  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
 48894  0045FA  C067  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 48895  0045FE  ECE6  F03A         	call	_EncodeShiftRow	;wreg free
 48896                           
 48897                           ;AES.c: 277: if(_roundCounter != 1)
 48898  004602  0101               	movlb	1	; () banked
 48899  004604  0533               	decf	__roundCounter& (0+255),w,b
 48900  004606  B4D8               	btfsc	status,2,c
 48901  004608  D127               	goto	u19050
 48902                           
 48903                           ; BSR set to: 1
 48904                           ;AES.c: 278: {
 48905                           ;AES.c: 279: unsigned char aux,aux1,aux2,aux3;
 48906                           ;AES.c: 281: for(i=0;i<16;i+=4)
 48907  00460A  0E00               	movlw	0
 48908  00460C  0100               	movlb	0	; () banked
 48909  00460E  6F7C               	movwf	AESEncode@i& (0+255),b
 48910  004610                     l17435:
 48911                           
 48912                           ; BSR set to: 0
 48913  004610  0E0F               	movlw	15
 48914  004612  657C               	cpfsgt	AESEncode@i& (0+255),b
 48915  004614  D001               	goto	l638
 48916  004616  D120               	goto	u19050
 48917  004618                     l638:
 48918                           
 48919                           ; BSR set to: 0
 48920                           ;AES.c: 282: {
 48921                           ;AES.c: 283: aux1= block[i+0] ^ block[i+1];
 48922                           
 48923                           ; BSR set to: 0
 48924  004618  517C               	movf	AESEncode@i& (0+255),w,b
 48925  00461A  6F6A               	movwf	??_AESEncode& (0+255),b
 48926  00461C  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 48927  00461E  0E01               	movlw	1
 48928  004620  276A               	addwf	??_AESEncode& (0+255),f,b
 48929  004622  0E00               	movlw	0
 48930  004624  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 48931  004626  516A               	movf	??_AESEncode& (0+255),w,b
 48932  004628  2566               	addwf	AESEncode@block& (0+255),w,b
 48933  00462A  6ED9               	movwf	fsr2l,c
 48934  00462C  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 48935  00462E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48936  004630  6EDA               	movwf	fsr2h,c
 48937  004632  50DF               	movf	indf2,w,c
 48938  004634  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 48939  004636  517C               	movf	AESEncode@i& (0+255),w,b
 48940  004638  2566               	addwf	AESEncode@block& (0+255),w,b
 48941  00463A  6ED9               	movwf	fsr2l,c
 48942  00463C  0E00               	movlw	0
 48943  00463E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48944  004640  6EDA               	movwf	fsr2h,c
 48945  004642  50DF               	movf	indf2,w,c
 48946  004644  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 48947  004646  6F7A               	movwf	AESEncode@aux1& (0+255),b
 48948                           
 48949                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
 48950  004648  517C               	movf	AESEncode@i& (0+255),w,b
 48951  00464A  6F6A               	movwf	??_AESEncode& (0+255),b
 48952  00464C  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 48953  00464E  0E03               	movlw	3
 48954  004650  276A               	addwf	??_AESEncode& (0+255),f,b
 48955  004652  0E00               	movlw	0
 48956  004654  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 48957  004656  516A               	movf	??_AESEncode& (0+255),w,b
 48958  004658  2566               	addwf	AESEncode@block& (0+255),w,b
 48959  00465A  6ED9               	movwf	fsr2l,c
 48960  00465C  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 48961  00465E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48962  004660  6EDA               	movwf	fsr2h,c
 48963  004662  50DF               	movf	indf2,w,c
 48964  004664  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 48965  004666  517C               	movf	AESEncode@i& (0+255),w,b
 48966  004668  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 48967  00466A  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 48968  00466C  0E02               	movlw	2
 48969  00466E  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 48970  004670  0E00               	movlw	0
 48971  004672  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 48972  004674  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 48973  004676  2566               	addwf	AESEncode@block& (0+255),w,b
 48974  004678  6ED9               	movwf	fsr2l,c
 48975  00467A  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 48976  00467C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48977  00467E  6EDA               	movwf	fsr2h,c
 48978  004680  50DF               	movf	indf2,w,c
 48979  004682  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 48980  004684  6F7B               	movwf	AESEncode@aux3& (0+255),b
 48981                           
 48982                           ; BSR set to: 0
 48983                           ;AES.c: 285: aux = aux1 ^ aux3;
 48984  004686  517A               	movf	AESEncode@aux1& (0+255),w,b
 48985  004688  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 48986  00468A  6F78               	movwf	AESEncode@aux& (0+255),b
 48987                           
 48988                           ; BSR set to: 0
 48989                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
 48990  00468C  517C               	movf	AESEncode@i& (0+255),w,b
 48991  00468E  6F6A               	movwf	??_AESEncode& (0+255),b
 48992  004690  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 48993  004692  0E01               	movlw	1
 48994  004694  276A               	addwf	??_AESEncode& (0+255),f,b
 48995  004696  0E00               	movlw	0
 48996  004698  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 48997  00469A  516A               	movf	??_AESEncode& (0+255),w,b
 48998  00469C  2566               	addwf	AESEncode@block& (0+255),w,b
 48999  00469E  6ED9               	movwf	fsr2l,c
 49000  0046A0  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 49001  0046A2  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49002  0046A4  6EDA               	movwf	fsr2h,c
 49003  0046A6  50DF               	movf	indf2,w,c
 49004  0046A8  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 49005  0046AA  517C               	movf	AESEncode@i& (0+255),w,b
 49006  0046AC  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 49007  0046AE  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 49008  0046B0  0E02               	movlw	2
 49009  0046B2  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 49010  0046B4  0E00               	movlw	0
 49011  0046B6  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 49012  0046B8  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 49013  0046BA  2566               	addwf	AESEncode@block& (0+255),w,b
 49014  0046BC  6ED9               	movwf	fsr2l,c
 49015  0046BE  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 49016  0046C0  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49017  0046C2  6EDA               	movwf	fsr2h,c
 49018  0046C4  50DF               	movf	indf2,w,c
 49019  0046C6  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 49020  0046C8  6F79               	movwf	AESEncode@aux2& (0+255),b
 49021                           
 49022                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 49023  0046CA  0E7F               	movlw	127
 49024  0046CC  657A               	cpfsgt	AESEncode@aux1& (0+255),b
 49025  0046CE  D00C               	goto	l641
 49026                           
 49027                           ; BSR set to: 0
 49028  0046D0  0E1B               	movlw	27
 49029  0046D2  C07A  F06A         	movff	AESEncode@aux1,??_AESEncode
 49030  0046D6  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 49031  0046D8  90D8               	bcf	status,0,c
 49032  0046DA  376A               	rlcf	??_AESEncode& (0+255),f,b
 49033  0046DC  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 49034  0046DE  196A               	xorwf	??_AESEncode& (0+255),w,b
 49035  0046E0  6F72               	movwf	_AESEncode$909& (0+255),b
 49036  0046E2  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 49037  0046E4  6F73               	movwf	(_AESEncode$909+1)& (0+255),b
 49038  0046E6  D005               	goto	l643
 49039  0046E8                     l641:
 49040                           
 49041                           ; BSR set to: 0
 49042                           
 49043                           ; BSR set to: 0
 49044  0046E8  90D8               	bcf	status,0,c
 49045  0046EA  357A               	rlcf	AESEncode@aux1& (0+255),w,b
 49046  0046EC  6F72               	movwf	_AESEncode$909& (0+255),b
 49047  0046EE  6B73               	clrf	(_AESEncode$909+1)& (0+255),b
 49048  0046F0  3773               	rlcf	(_AESEncode$909+1)& (0+255),f,b
 49049  0046F2                     l643:
 49050                           
 49051                           ; BSR set to: 0
 49052                           
 49053                           ; BSR set to: 0
 49054  0046F2  C072  F07A         	movff	_AESEncode$909,AESEncode@aux1
 49055                           
 49056                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 49057  0046F6  0E7F               	movlw	127
 49058  0046F8  6579               	cpfsgt	AESEncode@aux2& (0+255),b
 49059  0046FA  D00C               	goto	l645
 49060                           
 49061                           ; BSR set to: 0
 49062  0046FC  0E1B               	movlw	27
 49063  0046FE  C079  F06A         	movff	AESEncode@aux2,??_AESEncode
 49064  004702  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 49065  004704  90D8               	bcf	status,0,c
 49066  004706  376A               	rlcf	??_AESEncode& (0+255),f,b
 49067  004708  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 49068  00470A  196A               	xorwf	??_AESEncode& (0+255),w,b
 49069  00470C  6F74               	movwf	_AESEncode$910& (0+255),b
 49070  00470E  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 49071  004710  6F75               	movwf	(_AESEncode$910+1)& (0+255),b
 49072  004712  D005               	goto	l647
 49073  004714                     l645:
 49074                           
 49075                           ; BSR set to: 0
 49076                           
 49077                           ; BSR set to: 0
 49078  004714  90D8               	bcf	status,0,c
 49079  004716  3579               	rlcf	AESEncode@aux2& (0+255),w,b
 49080  004718  6F74               	movwf	_AESEncode$910& (0+255),b
 49081  00471A  6B75               	clrf	(_AESEncode$910+1)& (0+255),b
 49082  00471C  3775               	rlcf	(_AESEncode$910+1)& (0+255),f,b
 49083  00471E                     l647:
 49084                           
 49085                           ; BSR set to: 0
 49086                           
 49087                           ; BSR set to: 0
 49088  00471E  C074  F079         	movff	_AESEncode$910,AESEncode@aux2
 49089                           
 49090                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 49091  004722  0E7F               	movlw	127
 49092  004724  657B               	cpfsgt	AESEncode@aux3& (0+255),b
 49093  004726  D00C               	goto	l649
 49094                           
 49095                           ; BSR set to: 0
 49096  004728  0E1B               	movlw	27
 49097  00472A  C07B  F06A         	movff	AESEncode@aux3,??_AESEncode
 49098  00472E  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 49099  004730  90D8               	bcf	status,0,c
 49100  004732  376A               	rlcf	??_AESEncode& (0+255),f,b
 49101  004734  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 49102  004736  196A               	xorwf	??_AESEncode& (0+255),w,b
 49103  004738  6F76               	movwf	_AESEncode$911& (0+255),b
 49104  00473A  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 49105  00473C  6F77               	movwf	(_AESEncode$911+1)& (0+255),b
 49106  00473E  D005               	goto	l651
 49107  004740                     l649:
 49108                           
 49109                           ; BSR set to: 0
 49110                           
 49111                           ; BSR set to: 0
 49112  004740  90D8               	bcf	status,0,c
 49113  004742  357B               	rlcf	AESEncode@aux3& (0+255),w,b
 49114  004744  6F76               	movwf	_AESEncode$911& (0+255),b
 49115  004746  6B77               	clrf	(_AESEncode$911+1)& (0+255),b
 49116  004748  3777               	rlcf	(_AESEncode$911+1)& (0+255),f,b
 49117  00474A                     l651:
 49118                           
 49119                           ; BSR set to: 0
 49120                           
 49121                           ; BSR set to: 0
 49122  00474A  C076  F07B         	movff	_AESEncode$911,AESEncode@aux3
 49123                           
 49124                           ; BSR set to: 0
 49125                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
 49126  00474E  517C               	movf	AESEncode@i& (0+255),w,b
 49127  004750  2566               	addwf	AESEncode@block& (0+255),w,b
 49128  004752  6ED9               	movwf	fsr2l,c
 49129  004754  0E00               	movlw	0
 49130  004756  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49131  004758  6EDA               	movwf	fsr2h,c
 49132  00475A  517C               	movf	AESEncode@i& (0+255),w,b
 49133  00475C  2566               	addwf	AESEncode@block& (0+255),w,b
 49134  00475E  6EE9               	movwf	fsr0l,c
 49135  004760  0E00               	movlw	0
 49136  004762  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49137  004764  6EEA               	movwf	fsr0h,c
 49138  004766  50EF               	movf	indf0,w,c
 49139  004768  1978               	xorwf	AESEncode@aux& (0+255),w,b
 49140  00476A  197A               	xorwf	AESEncode@aux1& (0+255),w,b
 49141  00476C  6EDF               	movwf	indf2,c
 49142                           
 49143                           ; BSR set to: 0
 49144                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
 49145  00476E  517C               	movf	AESEncode@i& (0+255),w,b
 49146  004770  6F6A               	movwf	??_AESEncode& (0+255),b
 49147  004772  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 49148  004774  0E01               	movlw	1
 49149  004776  276A               	addwf	??_AESEncode& (0+255),f,b
 49150  004778  0E00               	movlw	0
 49151  00477A  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 49152  00477C  516A               	movf	??_AESEncode& (0+255),w,b
 49153  00477E  2566               	addwf	AESEncode@block& (0+255),w,b
 49154  004780  6ED9               	movwf	fsr2l,c
 49155  004782  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 49156  004784  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49157  004786  6EDA               	movwf	fsr2h,c
 49158  004788  517C               	movf	AESEncode@i& (0+255),w,b
 49159  00478A  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 49160  00478C  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 49161  00478E  0E01               	movlw	1
 49162  004790  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 49163  004792  0E00               	movlw	0
 49164  004794  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 49165  004796  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 49166  004798  2566               	addwf	AESEncode@block& (0+255),w,b
 49167  00479A  6EE9               	movwf	fsr0l,c
 49168  00479C  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 49169  00479E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49170  0047A0  6EEA               	movwf	fsr0h,c
 49171  0047A2  50EF               	movf	indf0,w,c
 49172  0047A4  1978               	xorwf	AESEncode@aux& (0+255),w,b
 49173  0047A6  1979               	xorwf	AESEncode@aux2& (0+255),w,b
 49174  0047A8  6EDF               	movwf	indf2,c
 49175                           
 49176                           ; BSR set to: 0
 49177                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
 49178  0047AA  517C               	movf	AESEncode@i& (0+255),w,b
 49179  0047AC  6F6A               	movwf	??_AESEncode& (0+255),b
 49180  0047AE  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 49181  0047B0  0E02               	movlw	2
 49182  0047B2  276A               	addwf	??_AESEncode& (0+255),f,b
 49183  0047B4  0E00               	movlw	0
 49184  0047B6  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 49185  0047B8  516A               	movf	??_AESEncode& (0+255),w,b
 49186  0047BA  2566               	addwf	AESEncode@block& (0+255),w,b
 49187  0047BC  6ED9               	movwf	fsr2l,c
 49188  0047BE  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 49189  0047C0  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49190  0047C2  6EDA               	movwf	fsr2h,c
 49191  0047C4  517C               	movf	AESEncode@i& (0+255),w,b
 49192  0047C6  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 49193  0047C8  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 49194  0047CA  0E02               	movlw	2
 49195  0047CC  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 49196  0047CE  0E00               	movlw	0
 49197  0047D0  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 49198  0047D2  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 49199  0047D4  2566               	addwf	AESEncode@block& (0+255),w,b
 49200  0047D6  6EE9               	movwf	fsr0l,c
 49201  0047D8  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 49202  0047DA  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49203  0047DC  6EEA               	movwf	fsr0h,c
 49204  0047DE  50EF               	movf	indf0,w,c
 49205  0047E0  1978               	xorwf	AESEncode@aux& (0+255),w,b
 49206  0047E2  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 49207  0047E4  6EDF               	movwf	indf2,c
 49208                           
 49209                           ; BSR set to: 0
 49210                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 49211  0047E6  517C               	movf	AESEncode@i& (0+255),w,b
 49212  0047E8  6F6A               	movwf	??_AESEncode& (0+255),b
 49213  0047EA  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 49214  0047EC  0E03               	movlw	3
 49215  0047EE  276A               	addwf	??_AESEncode& (0+255),f,b
 49216  0047F0  0E00               	movlw	0
 49217  0047F2  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 49218  0047F4  516A               	movf	??_AESEncode& (0+255),w,b
 49219  0047F6  2566               	addwf	AESEncode@block& (0+255),w,b
 49220  0047F8  6ED9               	movwf	fsr2l,c
 49221  0047FA  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 49222  0047FC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49223  0047FE  6EDA               	movwf	fsr2h,c
 49224  004800  517C               	movf	AESEncode@i& (0+255),w,b
 49225  004802  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 49226  004804  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 49227  004806  0E02               	movlw	2
 49228  004808  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 49229  00480A  0E00               	movlw	0
 49230  00480C  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 49231  00480E  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 49232  004810  2566               	addwf	AESEncode@block& (0+255),w,b
 49233  004812  6EE9               	movwf	fsr0l,c
 49234  004814  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 49235  004816  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49236  004818  6EEA               	movwf	fsr0h,c
 49237  00481A  50EF               	movf	indf0,w,c
 49238  00481C  6F6E               	movwf	(??_AESEncode+4)& (0+255),b
 49239  00481E  517C               	movf	AESEncode@i& (0+255),w,b
 49240  004820  6F6F               	movwf	(??_AESEncode+5)& (0+255),b
 49241  004822  6B70               	clrf	(??_AESEncode+6)& (0+255),b
 49242  004824  0E01               	movlw	1
 49243  004826  276F               	addwf	(??_AESEncode+5)& (0+255),f,b
 49244  004828  0E00               	movlw	0
 49245  00482A  2370               	addwfc	(??_AESEncode+6)& (0+255),f,b
 49246  00482C  516F               	movf	(??_AESEncode+5)& (0+255),w,b
 49247  00482E  2566               	addwf	AESEncode@block& (0+255),w,b
 49248  004830  6EE9               	movwf	fsr0l,c
 49249  004832  5170               	movf	(??_AESEncode+6)& (0+255),w,b
 49250  004834  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49251  004836  6EEA               	movwf	fsr0h,c
 49252  004838  50EF               	movf	indf0,w,c
 49253  00483A  6F71               	movwf	(??_AESEncode+7)& (0+255),b
 49254  00483C  517C               	movf	AESEncode@i& (0+255),w,b
 49255  00483E  2566               	addwf	AESEncode@block& (0+255),w,b
 49256  004840  6EE9               	movwf	fsr0l,c
 49257  004842  0E00               	movlw	0
 49258  004844  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49259  004846  6EEA               	movwf	fsr0h,c
 49260  004848  50EF               	movf	indf0,w,c
 49261  00484A  1971               	xorwf	(??_AESEncode+7)& (0+255),w,b
 49262  00484C  196E               	xorwf	(??_AESEncode+4)& (0+255),w,b
 49263  00484E  1978               	xorwf	AESEncode@aux& (0+255),w,b
 49264  004850  6EDF               	movwf	indf2,c
 49265  004852  0E04               	movlw	4
 49266  004854  277C               	addwf	AESEncode@i& (0+255),f,b
 49267  004856  D6DC               	goto	l17435
 49268  004858                     u19050:
 49269                           
 49270                           ;AES.c: 296: }
 49271                           ;AES.c: 297: }
 49272                           ;AES.c: 299: EncKeySchedule(key);
 49273                           
 49274                           ; BSR set to: 0
 49275                           
 49276                           ; BSR set to: 0
 49277  004858  C068  F060         	movff	AESEncode@key,EncKeySchedule@key
 49278  00485C  C069  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
 49279  004860  EC10  F02A         	call	_EncKeySchedule	;wreg free
 49280                           
 49281                           ;AES.c: 302: for(i=0;i<16;i++)
 49282  004864  0E00               	movlw	0
 49283  004866  0100               	movlb	0	; () banked
 49284  004868  6F7C               	movwf	AESEncode@i& (0+255),b
 49285  00486A                     l17475:
 49286                           
 49287                           ; BSR set to: 0
 49288  00486A  0E0F               	movlw	15
 49289  00486C  657C               	cpfsgt	AESEncode@i& (0+255),b
 49290  00486E  D001               	goto	l652
 49291  004870  D016               	goto	u19070
 49292  004872                     l652:
 49293                           
 49294                           ; BSR set to: 0
 49295                           ;AES.c: 303: {
 49296                           ;AES.c: 304: block[i] ^= key[i];
 49297                           
 49298                           ; BSR set to: 0
 49299  004872  517C               	movf	AESEncode@i& (0+255),w,b
 49300  004874  0D01               	mullw	1
 49301  004876  50F3               	movf	prodl,w,c
 49302  004878  2568               	addwf	AESEncode@key& (0+255),w,b
 49303  00487A  6ED9               	movwf	fsr2l,c
 49304  00487C  50F4               	movf	prodh,w,c
 49305  00487E  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 49306  004880  6EDA               	movwf	fsr2h,c
 49307  004882  50DF               	movf	indf2,w,c
 49308  004884  6F6A               	movwf	??_AESEncode& (0+255),b
 49309  004886  517C               	movf	AESEncode@i& (0+255),w,b
 49310  004888  0D01               	mullw	1
 49311  00488A  50F3               	movf	prodl,w,c
 49312  00488C  2566               	addwf	AESEncode@block& (0+255),w,b
 49313  00488E  6ED9               	movwf	fsr2l,c
 49314  004890  50F4               	movf	prodh,w,c
 49315  004892  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49316  004894  6EDA               	movwf	fsr2h,c
 49317  004896  516A               	movf	??_AESEncode& (0+255),w,b
 49318  004898  1ADF               	xorwf	indf2,f,c
 49319                           
 49320                           ; BSR set to: 0
 49321  00489A  2B7C               	incf	AESEncode@i& (0+255),f,b
 49322  00489C  D7E6               	goto	l17475
 49323  00489E                     u19070:
 49324                           
 49325                           ; BSR set to: 0
 49326                           ;AES.c: 305: }
 49327                           ;AES.c: 307: _roundCounter--;
 49328                           
 49329                           ; BSR set to: 0
 49330  00489E  0101               	movlb	1	; () banked
 49331  0048A0  0733               	decf	__roundCounter& (0+255),f,b
 49332                           
 49333                           ; BSR set to: 1
 49334                           ;AES.c: 308: }
 49335                           ;AES.c: 309: while(_roundCounter !=0);
 49336  0048A2  5133               	movf	__roundCounter& (0+255),w,b
 49337  0048A4  B4D8               	btfsc	status,2,c
 49338  0048A6  0012               	return	
 49339  0048A8  D67D               	goto	u18970
 49340  0048AA                     __end_of_AESEncode:
 49341                           	opt stack 0
 49342                           tosu	equ	0xFFF
 49343                           tosh	equ	0xFFE
 49344                           tosl	equ	0xFFD
 49345                           pclath	equ	0xFFA
 49346                           tblptru	equ	0xFF8
 49347                           tblptrh	equ	0xFF7
 49348                           tblptrl	equ	0xFF6
 49349                           tablat	equ	0xFF5
 49350                           prodh	equ	0xFF4
 49351                           prodl	equ	0xFF3
 49352                           intcon	equ	0xFF2
 49353                           intcon2	equ	0xFF1
 49354                           intcon3	equ	0xFF0
 49355                           indf0	equ	0xFEF
 49356                           postinc0	equ	0xFEE
 49357                           plusw0	equ	0xFEB
 49358                           fsr0h	equ	0xFEA
 49359                           fsr0l	equ	0xFE9
 49360                           wreg	equ	0xFE8
 49361                           postinc1	equ	0xFE6
 49362                           postdec1	equ	0xFE5
 49363                           plusw1	equ	0xFE3
 49364                           fsr1h	equ	0xFE2
 49365                           fsr1l	equ	0xFE1
 49366                           indf2	equ	0xFDF
 49367                           postinc2	equ	0xFDE
 49368                           postdec2	equ	0xFDD
 49369                           plusw2	equ	0xFDB
 49370                           fsr2h	equ	0xFDA
 49371                           fsr2l	equ	0xFD9
 49372                           status	equ	0xFD8
 49373                           
 49374 ;; *************** function _EncodeShiftRow *****************
 49375 ;; Defined at:
 49376 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 49377 ;; Parameters:    Size  Location     Type
 49378 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 49379 ;;		 -> sp__ADC_GetConversion(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), 
 49380 ;;		 -> radioBuffer(271), loRa(245), GenerateSubkey@l(16), AESCmac@y(16), 
 49381 ;;		 -> AESCmac@x(16), 
 49382 ;; Auto vars:     Size  Location     Type
 49383 ;;  temp            1    2[BANK0 ] unsigned char 
 49384 ;; Return value:  Size  Location     Type
 49385 ;;                  1    wreg      void 
 49386 ;; Registers used:
 49387 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 49388 ;; Tracked objects:
 49389 ;;		On entry : 0/0
 49390 ;;		On exit  : 0/0
 49391 ;;		Unchanged: 0/0
 49392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 49393 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49394 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49396 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49397 ;;Total ram usage:        3 bytes
 49398 ;; Hardware stack levels used:    1
 49399 ;; Hardware stack levels required when called:    7
 49400 ;; This function calls:
 49401 ;;		Nothing
 49402 ;; This function is called by:
 49403 ;;		_AESEncode
 49404 ;; This function uses a non-reentrant model
 49405 ;;
 49406                           
 49407                           	psect	text260
 49408  0075CC                     __ptext260:
 49409                           	opt stack 0
 49410  0075CC                     _EncodeShiftRow:
 49411                           	opt stack 18
 49412                           
 49413                           ;AES.c: 387: unsigned char temp;
 49414                           ;AES.c: 392: temp=stateTable[1];
 49415                           
 49416                           ; BSR set to: 1
 49417                           ;incstack = 0
 49418  0075CC  0100               	movlb	0	; () banked
 49419  0075CE  EE20 F001          	lfsr	2,1
 49420  0075D2  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49421  0075D4  26D9               	addwf	fsr2l,f,c
 49422  0075D6  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49423  0075D8  22DA               	addwfc	fsr2h,f,c
 49424  0075DA  50DF               	movf	indf2,w,c
 49425  0075DC  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 49426                           
 49427                           ; BSR set to: 0
 49428                           ;AES.c: 393: stateTable[1]=stateTable[5];
 49429  0075DE  EE20 F005          	lfsr	2,5
 49430  0075E2  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49431  0075E4  26D9               	addwf	fsr2l,f,c
 49432  0075E6  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49433  0075E8  22DA               	addwfc	fsr2h,f,c
 49434  0075EA  EE00 F001          	lfsr	0,1
 49435  0075EE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49436  0075F0  26E9               	addwf	fsr0l,f,c
 49437  0075F2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49438  0075F4  22EA               	addwfc	fsr0h,f,c
 49439  0075F6  CFDF FFEF          	movff	indf2,indf0
 49440                           
 49441                           ; BSR set to: 0
 49442                           ;AES.c: 394: stateTable[5]=stateTable[9];
 49443  0075FA  EE20 F009          	lfsr	2,9
 49444  0075FE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49445  007600  26D9               	addwf	fsr2l,f,c
 49446  007602  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49447  007604  22DA               	addwfc	fsr2h,f,c
 49448  007606  EE00 F005          	lfsr	0,5
 49449  00760A  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49450  00760C  26E9               	addwf	fsr0l,f,c
 49451  00760E  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49452  007610  22EA               	addwfc	fsr0h,f,c
 49453  007612  CFDF FFEF          	movff	indf2,indf0
 49454                           
 49455                           ; BSR set to: 0
 49456                           ;AES.c: 395: stateTable[9]=stateTable[13];
 49457  007616  EE20 F00D          	lfsr	2,13
 49458  00761A  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49459  00761C  26D9               	addwf	fsr2l,f,c
 49460  00761E  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49461  007620  22DA               	addwfc	fsr2h,f,c
 49462  007622  EE00 F009          	lfsr	0,9
 49463  007626  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49464  007628  26E9               	addwf	fsr0l,f,c
 49465  00762A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49466  00762C  22EA               	addwfc	fsr0h,f,c
 49467  00762E  CFDF FFEF          	movff	indf2,indf0
 49468                           
 49469                           ; BSR set to: 0
 49470                           ;AES.c: 396: stateTable[13]=temp;
 49471  007632  EE20 F00D          	lfsr	2,13
 49472  007636  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49473  007638  26D9               	addwf	fsr2l,f,c
 49474  00763A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49475  00763C  22DA               	addwfc	fsr2h,f,c
 49476  00763E  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 49477                           
 49478                           ; BSR set to: 0
 49479                           ;AES.c: 399: temp=stateTable[2];
 49480  007642  EE20 F002          	lfsr	2,2
 49481  007646  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49482  007648  26D9               	addwf	fsr2l,f,c
 49483  00764A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49484  00764C  22DA               	addwfc	fsr2h,f,c
 49485  00764E  50DF               	movf	indf2,w,c
 49486  007650  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 49487                           
 49488                           ; BSR set to: 0
 49489                           ;AES.c: 400: stateTable[2]=stateTable[10];
 49490  007652  EE20 F00A          	lfsr	2,10
 49491  007656  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49492  007658  26D9               	addwf	fsr2l,f,c
 49493  00765A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49494  00765C  22DA               	addwfc	fsr2h,f,c
 49495  00765E  EE00 F002          	lfsr	0,2
 49496  007662  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49497  007664  26E9               	addwf	fsr0l,f,c
 49498  007666  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49499  007668  22EA               	addwfc	fsr0h,f,c
 49500  00766A  CFDF FFEF          	movff	indf2,indf0
 49501                           
 49502                           ;AES.c: 401: stateTable[10]=temp;
 49503  00766E  EE20 F00A          	lfsr	2,10
 49504  007672  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49505  007674  26D9               	addwf	fsr2l,f,c
 49506  007676  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49507  007678  22DA               	addwfc	fsr2h,f,c
 49508  00767A  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 49509                           
 49510                           ;AES.c: 402: temp=stateTable[14];
 49511  00767E  EE20 F00E          	lfsr	2,14
 49512  007682  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49513  007684  26D9               	addwf	fsr2l,f,c
 49514  007686  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49515  007688  22DA               	addwfc	fsr2h,f,c
 49516  00768A  50DF               	movf	indf2,w,c
 49517  00768C  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 49518                           
 49519                           ; BSR set to: 0
 49520                           ;AES.c: 403: stateTable[14]=stateTable[6];
 49521  00768E  EE20 F006          	lfsr	2,6
 49522  007692  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49523  007694  26D9               	addwf	fsr2l,f,c
 49524  007696  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49525  007698  22DA               	addwfc	fsr2h,f,c
 49526  00769A  EE00 F00E          	lfsr	0,14
 49527  00769E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49528  0076A0  26E9               	addwf	fsr0l,f,c
 49529  0076A2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49530  0076A4  22EA               	addwfc	fsr0h,f,c
 49531  0076A6  CFDF FFEF          	movff	indf2,indf0
 49532                           
 49533                           ; BSR set to: 0
 49534                           ;AES.c: 404: stateTable[6]=temp;
 49535  0076AA  EE20 F006          	lfsr	2,6
 49536  0076AE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49537  0076B0  26D9               	addwf	fsr2l,f,c
 49538  0076B2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49539  0076B4  22DA               	addwfc	fsr2h,f,c
 49540  0076B6  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 49541                           
 49542                           ; BSR set to: 0
 49543                           ;AES.c: 407: temp=stateTable[3];
 49544  0076BA  EE20 F003          	lfsr	2,3
 49545  0076BE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49546  0076C0  26D9               	addwf	fsr2l,f,c
 49547  0076C2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49548  0076C4  22DA               	addwfc	fsr2h,f,c
 49549  0076C6  50DF               	movf	indf2,w,c
 49550  0076C8  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 49551                           
 49552                           ; BSR set to: 0
 49553                           ;AES.c: 408: stateTable[3]=stateTable[15];
 49554  0076CA  EE20 F00F          	lfsr	2,15
 49555  0076CE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49556  0076D0  26D9               	addwf	fsr2l,f,c
 49557  0076D2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49558  0076D4  22DA               	addwfc	fsr2h,f,c
 49559  0076D6  EE00 F003          	lfsr	0,3
 49560  0076DA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49561  0076DC  26E9               	addwf	fsr0l,f,c
 49562  0076DE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49563  0076E0  22EA               	addwfc	fsr0h,f,c
 49564  0076E2  CFDF FFEF          	movff	indf2,indf0
 49565                           
 49566                           ; BSR set to: 0
 49567                           ;AES.c: 409: stateTable[15]=stateTable[11];
 49568  0076E6  EE20 F00B          	lfsr	2,11
 49569  0076EA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49570  0076EC  26D9               	addwf	fsr2l,f,c
 49571  0076EE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49572  0076F0  22DA               	addwfc	fsr2h,f,c
 49573  0076F2  EE00 F00F          	lfsr	0,15
 49574  0076F6  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49575  0076F8  26E9               	addwf	fsr0l,f,c
 49576  0076FA  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49577  0076FC  22EA               	addwfc	fsr0h,f,c
 49578  0076FE  CFDF FFEF          	movff	indf2,indf0
 49579                           
 49580                           ; BSR set to: 0
 49581                           ;AES.c: 410: stateTable[11]=stateTable[7];
 49582  007702  EE20 F007          	lfsr	2,7
 49583  007706  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49584  007708  26D9               	addwf	fsr2l,f,c
 49585  00770A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49586  00770C  22DA               	addwfc	fsr2h,f,c
 49587  00770E  EE00 F00B          	lfsr	0,11
 49588  007712  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49589  007714  26E9               	addwf	fsr0l,f,c
 49590  007716  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49591  007718  22EA               	addwfc	fsr0h,f,c
 49592  00771A  CFDF FFEF          	movff	indf2,indf0
 49593                           
 49594                           ;AES.c: 411: stateTable[7]=temp;
 49595  00771E  EE20 F007          	lfsr	2,7
 49596  007722  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49597  007724  26D9               	addwf	fsr2l,f,c
 49598  007726  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49599  007728  22DA               	addwfc	fsr2h,f,c
 49600  00772A  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 49601                           
 49602                           ; BSR set to: 0
 49603  00772E  0012               	return		;funcret
 49604  007730                     __end_of_EncodeShiftRow:
 49605                           	opt stack 0
 49606                           tosu	equ	0xFFF
 49607                           tosh	equ	0xFFE
 49608                           tosl	equ	0xFFD
 49609                           pclath	equ	0xFFA
 49610                           tblptru	equ	0xFF8
 49611                           tblptrh	equ	0xFF7
 49612                           tblptrl	equ	0xFF6
 49613                           tablat	equ	0xFF5
 49614                           prodh	equ	0xFF4
 49615                           prodl	equ	0xFF3
 49616                           intcon	equ	0xFF2
 49617                           intcon2	equ	0xFF1
 49618                           intcon3	equ	0xFF0
 49619                           indf0	equ	0xFEF
 49620                           postinc0	equ	0xFEE
 49621                           plusw0	equ	0xFEB
 49622                           fsr0h	equ	0xFEA
 49623                           fsr0l	equ	0xFE9
 49624                           wreg	equ	0xFE8
 49625                           postinc1	equ	0xFE6
 49626                           postdec1	equ	0xFE5
 49627                           plusw1	equ	0xFE3
 49628                           fsr1h	equ	0xFE2
 49629                           fsr1l	equ	0xFE1
 49630                           indf2	equ	0xFDF
 49631                           postinc2	equ	0xFDE
 49632                           postdec2	equ	0xFDD
 49633                           plusw2	equ	0xFDB
 49634                           fsr2h	equ	0xFDA
 49635                           fsr2l	equ	0xFD9
 49636                           status	equ	0xFD8
 49637                           
 49638 ;; *************** function _EncKeySchedule *****************
 49639 ;; Defined at:
 49640 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 49641 ;; Parameters:    Size  Location     Type
 49642 ;;  key             2    0[BANK0 ] PTR unsigned char 
 49643 ;;		 -> AESEncodeLoRa@useKey(16), 
 49644 ;; Auto vars:     Size  Location     Type
 49645 ;;		None
 49646 ;; Return value:  Size  Location     Type
 49647 ;;                  1    wreg      void 
 49648 ;; Registers used:
 49649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 49650 ;; Tracked objects:
 49651 ;;		On entry : 0/0
 49652 ;;		On exit  : 0/0
 49653 ;;		Unchanged: 0/0
 49654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 49655 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49656 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49657 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49658 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49659 ;;Total ram usage:        6 bytes
 49660 ;; Hardware stack levels used:    1
 49661 ;; Hardware stack levels required when called:    7
 49662 ;; This function calls:
 49663 ;;		Nothing
 49664 ;; This function is called by:
 49665 ;;		_AESEncode
 49666 ;; This function uses a non-reentrant model
 49667 ;;
 49668                           
 49669                           	psect	text261
 49670  005420                     __ptext261:
 49671                           	opt stack 0
 49672  005420                     _EncKeySchedule:
 49673                           	opt stack 18
 49674                           
 49675                           ;AES.c: 340: key[0]^=STable[key[13]];
 49676                           
 49677                           ; BSR set to: 0
 49678                           ;incstack = 0
 49679  005420  0100               	movlb	0	; () banked
 49680  005422  EE20 F00D          	lfsr	2,13
 49681  005426  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49682  005428  26D9               	addwf	fsr2l,f,c
 49683  00542A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49684  00542C  22DA               	addwfc	fsr2h,f,c
 49685  00542E  50DF               	movf	indf2,w,c
 49686  005430  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49687  005432  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49688  005434  0D01               	mullw	1
 49689  005436  0EF9               	movlw	low _STable
 49690  005438  24F3               	addwf	prodl,w,c
 49691  00543A  6EF6               	movwf	tblptrl,c
 49692  00543C  0EFC               	movlw	high _STable
 49693  00543E  20F4               	addwfc	prodh,w,c
 49694  005440  6EF7               	movwf	tblptrh,c
 49695  005442                     	if	1	;There are 3 active tblptr bytes
 49696  005442  6AF8               	clrf	tblptru,c
 49697  005444  0E00               	movlw	low (__mediumconst shr (0+16))
 49698  005446  22F8               	addwfc	tblptru,f,c
 49699  005448                     	endif
 49700  005448  0008               	tblrd		*
 49701  00544A  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 49702  00544E  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 49703  005452  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 49704  005456  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 49705  005458  1ADF               	xorwf	indf2,f,c
 49706                           
 49707                           ;AES.c: 341: key[1]^=STable[key[14]];
 49708  00545A  EE20 F00E          	lfsr	2,14
 49709  00545E  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49710  005460  26D9               	addwf	fsr2l,f,c
 49711  005462  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49712  005464  22DA               	addwfc	fsr2h,f,c
 49713  005466  50DF               	movf	indf2,w,c
 49714  005468  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49715  00546A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49716  00546C  0D01               	mullw	1
 49717  00546E  0EF9               	movlw	low _STable
 49718  005470  24F3               	addwf	prodl,w,c
 49719  005472  6EF6               	movwf	tblptrl,c
 49720  005474  0EFC               	movlw	high _STable
 49721  005476  20F4               	addwfc	prodh,w,c
 49722  005478  6EF7               	movwf	tblptrh,c
 49723  00547A                     	if	1	;There are 3 active tblptr bytes
 49724  00547A  6AF8               	clrf	tblptru,c
 49725  00547C  0E00               	movlw	low (__mediumconst shr (0+16))
 49726  00547E  22F8               	addwfc	tblptru,f,c
 49727  005480                     	endif
 49728  005480  0008               	tblrd		*
 49729  005482  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 49730  005486  EE20 F001          	lfsr	2,1
 49731  00548A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49732  00548C  26D9               	addwf	fsr2l,f,c
 49733  00548E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49734  005490  22DA               	addwfc	fsr2h,f,c
 49735  005492  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 49736  005494  1ADF               	xorwf	indf2,f,c
 49737                           
 49738                           ;AES.c: 342: key[2]^=STable[key[15]];
 49739  005496  EE20 F00F          	lfsr	2,15
 49740  00549A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49741  00549C  26D9               	addwf	fsr2l,f,c
 49742  00549E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49743  0054A0  22DA               	addwfc	fsr2h,f,c
 49744  0054A2  50DF               	movf	indf2,w,c
 49745  0054A4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49746  0054A6  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49747  0054A8  0D01               	mullw	1
 49748  0054AA  0EF9               	movlw	low _STable
 49749  0054AC  24F3               	addwf	prodl,w,c
 49750  0054AE  6EF6               	movwf	tblptrl,c
 49751  0054B0  0EFC               	movlw	high _STable
 49752  0054B2  20F4               	addwfc	prodh,w,c
 49753  0054B4  6EF7               	movwf	tblptrh,c
 49754  0054B6                     	if	1	;There are 3 active tblptr bytes
 49755  0054B6  6AF8               	clrf	tblptru,c
 49756  0054B8  0E00               	movlw	low (__mediumconst shr (0+16))
 49757  0054BA  22F8               	addwfc	tblptru,f,c
 49758  0054BC                     	endif
 49759  0054BC  0008               	tblrd		*
 49760  0054BE  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 49761  0054C2  EE20 F002          	lfsr	2,2
 49762  0054C6  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49763  0054C8  26D9               	addwf	fsr2l,f,c
 49764  0054CA  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49765  0054CC  22DA               	addwfc	fsr2h,f,c
 49766  0054CE  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 49767  0054D0  1ADF               	xorwf	indf2,f,c
 49768                           
 49769                           ;AES.c: 343: key[3]^=STable[key[12]];
 49770  0054D2  EE20 F00C          	lfsr	2,12
 49771  0054D6  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49772  0054D8  26D9               	addwf	fsr2l,f,c
 49773  0054DA  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49774  0054DC  22DA               	addwfc	fsr2h,f,c
 49775  0054DE  50DF               	movf	indf2,w,c
 49776  0054E0  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49777  0054E2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49778  0054E4  0D01               	mullw	1
 49779  0054E6  0EF9               	movlw	low _STable
 49780  0054E8  24F3               	addwf	prodl,w,c
 49781  0054EA  6EF6               	movwf	tblptrl,c
 49782  0054EC  0EFC               	movlw	high _STable
 49783  0054EE  20F4               	addwfc	prodh,w,c
 49784  0054F0  6EF7               	movwf	tblptrh,c
 49785  0054F2                     	if	1	;There are 3 active tblptr bytes
 49786  0054F2  6AF8               	clrf	tblptru,c
 49787  0054F4  0E00               	movlw	low (__mediumconst shr (0+16))
 49788  0054F6  22F8               	addwfc	tblptru,f,c
 49789  0054F8                     	endif
 49790  0054F8  0008               	tblrd		*
 49791  0054FA  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 49792  0054FE  EE20 F003          	lfsr	2,3
 49793  005502  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49794  005504  26D9               	addwf	fsr2l,f,c
 49795  005506  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49796  005508  22DA               	addwfc	fsr2h,f,c
 49797  00550A  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 49798  00550C  1ADF               	xorwf	indf2,f,c
 49799                           
 49800                           ; BSR set to: 0
 49801                           ;AES.c: 345: key[0]^=_rcon;
 49802  00550E  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 49803  005512  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 49804  005516  5046               	movf	__rcon,w,c
 49805  005518  1ADF               	xorwf	indf2,f,c
 49806                           
 49807                           ; BSR set to: 0
 49808                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 49809  00551A  0E7F               	movlw	127
 49810  00551C  6446               	cpfsgt	__rcon,c
 49811  00551E  D00C               	goto	l659
 49812                           
 49813                           ; BSR set to: 0
 49814  005520  0E1B               	movlw	27
 49815  005522  C046  F062         	movff	__rcon,??_EncKeySchedule
 49816  005526  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 49817  005528  90D8               	bcf	status,0,c
 49818  00552A  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 49819  00552C  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 49820  00552E  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 49821  005530  6F64               	movwf	_EncKeySchedule$914& (0+255),b
 49822  005532  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 49823  005534  6F65               	movwf	(_EncKeySchedule$914+1)& (0+255),b
 49824  005536  D005               	goto	l661
 49825  005538                     l659:
 49826                           
 49827                           ; BSR set to: 0
 49828                           
 49829                           ; BSR set to: 0
 49830  005538  90D8               	bcf	status,0,c
 49831  00553A  3446               	rlcf	__rcon,w,c
 49832  00553C  6F64               	movwf	_EncKeySchedule$914& (0+255),b
 49833  00553E  6B65               	clrf	(_EncKeySchedule$914+1)& (0+255),b
 49834  005540  3765               	rlcf	(_EncKeySchedule$914+1)& (0+255),f,b
 49835  005542                     l661:
 49836                           
 49837                           ; BSR set to: 0
 49838                           
 49839                           ; BSR set to: 0
 49840  005542  C064  F046         	movff	_EncKeySchedule$914,__rcon
 49841                           
 49842                           ; BSR set to: 0
 49843                           ;AES.c: 349: key[4]^=key[0];
 49844  005546  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 49845  00554A  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 49846  00554E  50DF               	movf	indf2,w,c
 49847  005550  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49848  005552  EE20 F004          	lfsr	2,4
 49849  005556  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49850  005558  26D9               	addwf	fsr2l,f,c
 49851  00555A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49852  00555C  22DA               	addwfc	fsr2h,f,c
 49853  00555E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49854  005560  1ADF               	xorwf	indf2,f,c
 49855                           
 49856                           ; BSR set to: 0
 49857                           ;AES.c: 350: key[5]^=key[1];
 49858  005562  EE20 F001          	lfsr	2,1
 49859  005566  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49860  005568  26D9               	addwf	fsr2l,f,c
 49861  00556A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49862  00556C  22DA               	addwfc	fsr2h,f,c
 49863  00556E  50DF               	movf	indf2,w,c
 49864  005570  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49865  005572  EE20 F005          	lfsr	2,5
 49866  005576  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49867  005578  26D9               	addwf	fsr2l,f,c
 49868  00557A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49869  00557C  22DA               	addwfc	fsr2h,f,c
 49870  00557E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49871  005580  1ADF               	xorwf	indf2,f,c
 49872                           
 49873                           ; BSR set to: 0
 49874                           ;AES.c: 351: key[6]^=key[2];
 49875  005582  EE20 F002          	lfsr	2,2
 49876  005586  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49877  005588  26D9               	addwf	fsr2l,f,c
 49878  00558A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49879  00558C  22DA               	addwfc	fsr2h,f,c
 49880  00558E  50DF               	movf	indf2,w,c
 49881  005590  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49882  005592  EE20 F006          	lfsr	2,6
 49883  005596  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49884  005598  26D9               	addwf	fsr2l,f,c
 49885  00559A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49886  00559C  22DA               	addwfc	fsr2h,f,c
 49887  00559E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49888  0055A0  1ADF               	xorwf	indf2,f,c
 49889                           
 49890                           ; BSR set to: 0
 49891                           ;AES.c: 352: key[7]^=key[3];
 49892  0055A2  EE20 F003          	lfsr	2,3
 49893  0055A6  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49894  0055A8  26D9               	addwf	fsr2l,f,c
 49895  0055AA  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49896  0055AC  22DA               	addwfc	fsr2h,f,c
 49897  0055AE  50DF               	movf	indf2,w,c
 49898  0055B0  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49899  0055B2  EE20 F007          	lfsr	2,7
 49900  0055B6  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49901  0055B8  26D9               	addwf	fsr2l,f,c
 49902  0055BA  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49903  0055BC  22DA               	addwfc	fsr2h,f,c
 49904  0055BE  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49905  0055C0  1ADF               	xorwf	indf2,f,c
 49906                           
 49907                           ; BSR set to: 0
 49908                           ;AES.c: 355: key[8]^=key[4];
 49909  0055C2  EE20 F004          	lfsr	2,4
 49910  0055C6  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49911  0055C8  26D9               	addwf	fsr2l,f,c
 49912  0055CA  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49913  0055CC  22DA               	addwfc	fsr2h,f,c
 49914  0055CE  50DF               	movf	indf2,w,c
 49915  0055D0  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49916  0055D2  EE20 F008          	lfsr	2,8
 49917  0055D6  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49918  0055D8  26D9               	addwf	fsr2l,f,c
 49919  0055DA  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49920  0055DC  22DA               	addwfc	fsr2h,f,c
 49921  0055DE  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49922  0055E0  1ADF               	xorwf	indf2,f,c
 49923                           
 49924                           ; BSR set to: 0
 49925                           ;AES.c: 356: key[9]^=key[5];
 49926  0055E2  EE20 F005          	lfsr	2,5
 49927  0055E6  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49928  0055E8  26D9               	addwf	fsr2l,f,c
 49929  0055EA  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49930  0055EC  22DA               	addwfc	fsr2h,f,c
 49931  0055EE  50DF               	movf	indf2,w,c
 49932  0055F0  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49933  0055F2  EE20 F009          	lfsr	2,9
 49934  0055F6  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49935  0055F8  26D9               	addwf	fsr2l,f,c
 49936  0055FA  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49937  0055FC  22DA               	addwfc	fsr2h,f,c
 49938  0055FE  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49939  005600  1ADF               	xorwf	indf2,f,c
 49940                           
 49941                           ; BSR set to: 0
 49942                           ;AES.c: 357: key[10]^=key[6];
 49943  005602  EE20 F006          	lfsr	2,6
 49944  005606  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49945  005608  26D9               	addwf	fsr2l,f,c
 49946  00560A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49947  00560C  22DA               	addwfc	fsr2h,f,c
 49948  00560E  50DF               	movf	indf2,w,c
 49949  005610  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49950  005612  EE20 F00A          	lfsr	2,10
 49951  005616  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49952  005618  26D9               	addwf	fsr2l,f,c
 49953  00561A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49954  00561C  22DA               	addwfc	fsr2h,f,c
 49955  00561E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49956  005620  1ADF               	xorwf	indf2,f,c
 49957                           
 49958                           ; BSR set to: 0
 49959                           ;AES.c: 358: key[11]^=key[7];
 49960  005622  EE20 F007          	lfsr	2,7
 49961  005626  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49962  005628  26D9               	addwf	fsr2l,f,c
 49963  00562A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49964  00562C  22DA               	addwfc	fsr2h,f,c
 49965  00562E  50DF               	movf	indf2,w,c
 49966  005630  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49967  005632  EE20 F00B          	lfsr	2,11
 49968  005636  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49969  005638  26D9               	addwf	fsr2l,f,c
 49970  00563A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49971  00563C  22DA               	addwfc	fsr2h,f,c
 49972  00563E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49973  005640  1ADF               	xorwf	indf2,f,c
 49974                           
 49975                           ; BSR set to: 0
 49976                           ;AES.c: 361: key[12]^=key[8];
 49977  005642  EE20 F008          	lfsr	2,8
 49978  005646  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49979  005648  26D9               	addwf	fsr2l,f,c
 49980  00564A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49981  00564C  22DA               	addwfc	fsr2h,f,c
 49982  00564E  50DF               	movf	indf2,w,c
 49983  005650  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49984  005652  EE20 F00C          	lfsr	2,12
 49985  005656  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49986  005658  26D9               	addwf	fsr2l,f,c
 49987  00565A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49988  00565C  22DA               	addwfc	fsr2h,f,c
 49989  00565E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49990  005660  1ADF               	xorwf	indf2,f,c
 49991                           
 49992                           ; BSR set to: 0
 49993                           ;AES.c: 362: key[13]^=key[9];
 49994  005662  EE20 F009          	lfsr	2,9
 49995  005666  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49996  005668  26D9               	addwf	fsr2l,f,c
 49997  00566A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49998  00566C  22DA               	addwfc	fsr2h,f,c
 49999  00566E  50DF               	movf	indf2,w,c
 50000  005670  6F62               	movwf	??_EncKeySchedule& (0+255),b
 50001  005672  EE20 F00D          	lfsr	2,13
 50002  005676  5160               	movf	EncKeySchedule@key& (0+255),w,b
 50003  005678  26D9               	addwf	fsr2l,f,c
 50004  00567A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 50005  00567C  22DA               	addwfc	fsr2h,f,c
 50006  00567E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 50007  005680  1ADF               	xorwf	indf2,f,c
 50008                           
 50009                           ; BSR set to: 0
 50010                           ;AES.c: 363: key[14]^=key[10];
 50011  005682  EE20 F00A          	lfsr	2,10
 50012  005686  5160               	movf	EncKeySchedule@key& (0+255),w,b
 50013  005688  26D9               	addwf	fsr2l,f,c
 50014  00568A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 50015  00568C  22DA               	addwfc	fsr2h,f,c
 50016  00568E  50DF               	movf	indf2,w,c
 50017  005690  6F62               	movwf	??_EncKeySchedule& (0+255),b
 50018  005692  EE20 F00E          	lfsr	2,14
 50019  005696  5160               	movf	EncKeySchedule@key& (0+255),w,b
 50020  005698  26D9               	addwf	fsr2l,f,c
 50021  00569A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 50022  00569C  22DA               	addwfc	fsr2h,f,c
 50023  00569E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 50024  0056A0  1ADF               	xorwf	indf2,f,c
 50025                           
 50026                           ; BSR set to: 0
 50027                           ;AES.c: 364: key[15]^=key[11];
 50028  0056A2  EE20 F00B          	lfsr	2,11
 50029  0056A6  5160               	movf	EncKeySchedule@key& (0+255),w,b
 50030  0056A8  26D9               	addwf	fsr2l,f,c
 50031  0056AA  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 50032  0056AC  22DA               	addwfc	fsr2h,f,c
 50033  0056AE  50DF               	movf	indf2,w,c
 50034  0056B0  6F62               	movwf	??_EncKeySchedule& (0+255),b
 50035  0056B2  EE20 F00F          	lfsr	2,15
 50036  0056B6  5160               	movf	EncKeySchedule@key& (0+255),w,b
 50037  0056B8  26D9               	addwf	fsr2l,f,c
 50038  0056BA  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 50039  0056BC  22DA               	addwfc	fsr2h,f,c
 50040  0056BE  5162               	movf	??_EncKeySchedule& (0+255),w,b
 50041  0056C0  1ADF               	xorwf	indf2,f,c
 50042                           
 50043                           ; BSR set to: 0
 50044  0056C2  0012               	return		;funcret
 50045  0056C4                     __end_of_EncKeySchedule:
 50046                           	opt stack 0
 50047                           tosu	equ	0xFFF
 50048                           tosh	equ	0xFFE
 50049                           tosl	equ	0xFFD
 50050                           pclath	equ	0xFFA
 50051                           tblptru	equ	0xFF8
 50052                           tblptrh	equ	0xFF7
 50053                           tblptrl	equ	0xFF6
 50054                           tablat	equ	0xFF5
 50055                           prodh	equ	0xFF4
 50056                           prodl	equ	0xFF3
 50057                           intcon	equ	0xFF2
 50058                           intcon2	equ	0xFF1
 50059                           intcon3	equ	0xFF0
 50060                           indf0	equ	0xFEF
 50061                           postinc0	equ	0xFEE
 50062                           plusw0	equ	0xFEB
 50063                           fsr0h	equ	0xFEA
 50064                           fsr0l	equ	0xFE9
 50065                           wreg	equ	0xFE8
 50066                           postinc1	equ	0xFE6
 50067                           postdec1	equ	0xFE5
 50068                           plusw1	equ	0xFE3
 50069                           fsr1h	equ	0xFE2
 50070                           fsr1l	equ	0xFE1
 50071                           indf2	equ	0xFDF
 50072                           postinc2	equ	0xFDE
 50073                           postdec2	equ	0xFDD
 50074                           plusw2	equ	0xFDB
 50075                           fsr2h	equ	0xFDA
 50076                           fsr2l	equ	0xFD9
 50077                           status	equ	0xFD8
 50078                           
 50079 ;; *************** function _LORAWAN_Init *****************
 50080 ;; Defined at:
 50081 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 50082 ;; Parameters:    Size  Location     Type
 50083 ;;  RxPayload       2   82[BANK0 ] PTR FTN(PTR unsigned cha
 50084 ;;		 -> RxData(1), 
 50085 ;;  RxJoinRespon    2   84[BANK0 ] PTR FTN(unsigned char ,)
 50086 ;;		 -> RxJoinResponse(1), 
 50087 ;; Auto vars:     Size  Location     Type
 50088 ;;		None
 50089 ;; Return value:  Size  Location     Type
 50090 ;;                  1    wreg      void 
 50091 ;; Registers used:
 50092 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50093 ;; Tracked objects:
 50094 ;;		On entry : 0/0
 50095 ;;		On exit  : 0/0
 50096 ;;		Unchanged: 0/0
 50097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50098 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50101 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50102 ;;Total ram usage:        4 bytes
 50103 ;; Hardware stack levels used:    1
 50104 ;; Hardware stack levels required when called:   13
 50105 ;; This function calls:
 50106 ;;		_CreateAllSoftwareTimers
 50107 ;;		_LORAWAN_Reset
 50108 ;;		_RADIO_Init
 50109 ;;		_RADIO_ReadRandom
 50110 ;;		_SetCallbackSoftwareTimers
 50111 ;;		_StopAllSoftwareTimers
 50112 ;;		_srand
 50113 ;; This function is called by:
 50114 ;;		_main
 50115 ;; This function uses a non-reentrant model
 50116 ;;
 50117                           
 50118                           	psect	text262
 50119  00AA94                     __ptext262:
 50120                           	opt stack 0
 50121  00AA94                     _LORAWAN_Init:
 50122                           	opt stack 17
 50123                           
 50124                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 50125                           
 50126                           ; BSR set to: 0
 50127                           ;incstack = 0
 50128  00AA94  0102               	movlb	2	; () banked
 50129  00AA96  51F4               	movf	(_loRa+240)& (0+255),w,b
 50130  00AA98  A4D8               	btfss	status,2,c
 50131  00AA9A  D008               	goto	l1298
 50132                           
 50133                           ; BSR set to: 2
 50134                           ;lorawan_eu.c: 127: {
 50135                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 50136  00AA9C  EC6F  F058         	call	_CreateAllSoftwareTimers	;wreg free
 50137                           
 50138                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 50139  00AAA0  EC03  F049         	call	_SetCallbackSoftwareTimers	;wreg free
 50140                           
 50141                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 50142  00AAA4  0E01               	movlw	1
 50143  00AAA6  0102               	movlb	2	; () banked
 50144  00AAA8  6FF4               	movwf	(_loRa+240)& (0+255),b
 50145                           
 50146                           ;lorawan_eu.c: 131: }
 50147  00AAAA  D002               	goto	l1299
 50148  00AAAC                     l1298:
 50149                           
 50150                           ; BSR set to: 2
 50151                           ;lorawan_eu.c: 132: else
 50152                           ;lorawan_eu.c: 133: {
 50153                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 50154                           
 50155                           ; BSR set to: 2
 50156  00AAAC  EC46  F058         	call	_StopAllSoftwareTimers	;wreg free
 50157  00AAB0                     l1299:
 50158                           
 50159                           ;lorawan_eu.c: 135: }
 50160                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 50161  00AAB0  C0B2  F10C         	movff	LORAWAN_Init@RxPayload,_rxPayload
 50162  00AAB4  C0B3  F10D         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 50163                           
 50164                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 50165  00AAB8  C0B4  F10E         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 50166  00AABC  C0B5  F10F         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 50167                           
 50168                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 50169  00AAC0  0E3F               	movlw	low (_radioBuffer+16)
 50170  00AAC2  0100               	movlb	0	; () banked
 50171  00AAC4  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 50172  00AAC6  0E06               	movlw	high (_radioBuffer+16)
 50173  00AAC8  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 50174  00AACA  0EA0               	movlw	160
 50175  00AACC  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 50176  00AACE  0E27               	movlw	39
 50177  00AAD0  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 50178  00AAD2  0EBE               	movlw	190
 50179  00AAD4  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 50180  00AAD6  0E33               	movlw	51
 50181  00AAD8  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 50182  00AADA  ECF0  F033         	call	_RADIO_Init	;wreg free
 50183                           
 50184                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 50185  00AADE  EC0A  F04D         	call	_RADIO_ReadRandom	;wreg free
 50186  00AAE2  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 50187  00AAE6  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 50188  00AAEA  EC4D  F062         	call	_srand	;wreg free
 50189                           
 50190                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 50191  00AAEE  0E00               	movlw	0
 50192  00AAF0  EC09  F033         	call	_LORAWAN_Reset
 50193  00AAF4  0012               	return		;funcret
 50194  00AAF6                     __end_of_LORAWAN_Init:
 50195                           	opt stack 0
 50196                           tosu	equ	0xFFF
 50197                           tosh	equ	0xFFE
 50198                           tosl	equ	0xFFD
 50199                           pclath	equ	0xFFA
 50200                           tblptru	equ	0xFF8
 50201                           tblptrh	equ	0xFF7
 50202                           tblptrl	equ	0xFF6
 50203                           tablat	equ	0xFF5
 50204                           prodh	equ	0xFF4
 50205                           prodl	equ	0xFF3
 50206                           intcon	equ	0xFF2
 50207                           intcon2	equ	0xFF1
 50208                           intcon3	equ	0xFF0
 50209                           indf0	equ	0xFEF
 50210                           postinc0	equ	0xFEE
 50211                           plusw0	equ	0xFEB
 50212                           fsr0h	equ	0xFEA
 50213                           fsr0l	equ	0xFE9
 50214                           wreg	equ	0xFE8
 50215                           postinc1	equ	0xFE6
 50216                           postdec1	equ	0xFE5
 50217                           plusw1	equ	0xFE3
 50218                           fsr1h	equ	0xFE2
 50219                           fsr1l	equ	0xFE1
 50220                           indf2	equ	0xFDF
 50221                           postinc2	equ	0xFDE
 50222                           postdec2	equ	0xFDD
 50223                           plusw2	equ	0xFDB
 50224                           fsr2h	equ	0xFDA
 50225                           fsr2l	equ	0xFD9
 50226                           status	equ	0xFD8
 50227                           
 50228 ;; *************** function _srand *****************
 50229 ;; Defined at:
 50230 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 50231 ;; Parameters:    Size  Location     Type
 50232 ;;  x               2   18[BANK0 ] unsigned int 
 50233 ;; Auto vars:     Size  Location     Type
 50234 ;;		None
 50235 ;; Return value:  Size  Location     Type
 50236 ;;                  1    wreg      void 
 50237 ;; Registers used:
 50238 ;;		status,2
 50239 ;; Tracked objects:
 50240 ;;		On entry : 0/0
 50241 ;;		On exit  : 0/0
 50242 ;;		Unchanged: 0/0
 50243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50247 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50248 ;;Total ram usage:        2 bytes
 50249 ;; Hardware stack levels used:    1
 50250 ;; Hardware stack levels required when called:    7
 50251 ;; This function calls:
 50252 ;;		Nothing
 50253 ;; This function is called by:
 50254 ;;		_LORAWAN_Init
 50255 ;; This function uses a non-reentrant model
 50256 ;;
 50257                           
 50258                           	psect	text263
 50259  00C49A                     __ptext263:
 50260                           	opt stack 0
 50261  00C49A                     _srand:
 50262                           	opt stack 22
 50263                           
 50264                           ;incstack = 0
 50265  00C49A  C072  F1F9         	movff	srand@x,_randx
 50266  00C49E  C073  F1FA         	movff	srand@x+1,_randx+1
 50267  00C4A2  0101               	movlb	1	; () banked
 50268  00C4A4  6BFB               	clrf	(_randx+2)& (0+255),b
 50269  00C4A6  6BFC               	clrf	(_randx+3)& (0+255),b
 50270                           
 50271                           ; BSR set to: 1
 50272  00C4A8  0012               	return		;funcret
 50273  00C4AA                     __end_of_srand:
 50274                           	opt stack 0
 50275                           tosu	equ	0xFFF
 50276                           tosh	equ	0xFFE
 50277                           tosl	equ	0xFFD
 50278                           pclath	equ	0xFFA
 50279                           tblptru	equ	0xFF8
 50280                           tblptrh	equ	0xFF7
 50281                           tblptrl	equ	0xFF6
 50282                           tablat	equ	0xFF5
 50283                           prodh	equ	0xFF4
 50284                           prodl	equ	0xFF3
 50285                           intcon	equ	0xFF2
 50286                           intcon2	equ	0xFF1
 50287                           intcon3	equ	0xFF0
 50288                           indf0	equ	0xFEF
 50289                           postinc0	equ	0xFEE
 50290                           plusw0	equ	0xFEB
 50291                           fsr0h	equ	0xFEA
 50292                           fsr0l	equ	0xFE9
 50293                           wreg	equ	0xFE8
 50294                           postinc1	equ	0xFE6
 50295                           postdec1	equ	0xFE5
 50296                           plusw1	equ	0xFE3
 50297                           fsr1h	equ	0xFE2
 50298                           fsr1l	equ	0xFE1
 50299                           indf2	equ	0xFDF
 50300                           postinc2	equ	0xFDE
 50301                           postdec2	equ	0xFDD
 50302                           plusw2	equ	0xFDB
 50303                           fsr2h	equ	0xFDA
 50304                           fsr2l	equ	0xFD9
 50305                           status	equ	0xFD8
 50306                           
 50307 ;; *************** function _SetCallbackSoftwareTimers *****************
 50308 ;; Defined at:
 50309 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 50310 ;; Parameters:    Size  Location     Type
 50311 ;;		None
 50312 ;; Auto vars:     Size  Location     Type
 50313 ;;		None
 50314 ;; Return value:  Size  Location     Type
 50315 ;;                  1    wreg      void 
 50316 ;; Registers used:
 50317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50318 ;; Tracked objects:
 50319 ;;		On entry : 0/0
 50320 ;;		On exit  : 0/0
 50321 ;;		Unchanged: 0/0
 50322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50327 ;;Total ram usage:        0 bytes
 50328 ;; Hardware stack levels used:    1
 50329 ;; Hardware stack levels required when called:    8
 50330 ;; This function calls:
 50331 ;;		_SwTimerSetCallback
 50332 ;; This function is called by:
 50333 ;;		_LORAWAN_Init
 50334 ;; This function uses a non-reentrant model
 50335 ;;
 50336                           
 50337                           	psect	text264
 50338  009206                     __ptext264:
 50339                           	opt stack 0
 50340  009206                     _SetCallbackSoftwareTimers:
 50341                           	opt stack 21
 50342                           
 50343                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 50344                           
 50345                           ; BSR set to: 1
 50346                           ;incstack = 0
 50347  009206  0E58               	movlw	low _LORAWAN_ReceiveWindow1Callback
 50348  009208  0100               	movlb	0	; () banked
 50349  00920A  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50350  00920C  0E95               	movlw	high _LORAWAN_ReceiveWindow1Callback
 50351  00920E  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50352  009210  0E00               	movlw	0
 50353  009212  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50354  009214  0102               	movlb	2	; () banked
 50355  009216  51E6               	movf	(_loRa+226)& (0+255),w,b
 50356  009218  ECB5  F05A         	call	_SwTimerSetCallback
 50357                           
 50358                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 50359  00921C  0EE4               	movlw	low _LORAWAN_ReceiveWindow2Callback
 50360  00921E  0100               	movlb	0	; () banked
 50361  009220  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50362  009222  0E92               	movlw	high _LORAWAN_ReceiveWindow2Callback
 50363  009224  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50364  009226  0E00               	movlw	0
 50365  009228  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50366  00922A  0102               	movlb	2	; () banked
 50367  00922C  51E7               	movf	(_loRa+227)& (0+255),w,b
 50368  00922E  ECB5  F05A         	call	_SwTimerSetCallback
 50369                           
 50370                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 50371  009232  0E8E               	movlw	low _LORAWAN_LinkCheckCallback
 50372  009234  0100               	movlb	0	; () banked
 50373  009236  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50374  009238  0E71               	movlw	high _LORAWAN_LinkCheckCallback
 50375  00923A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50376  00923C  0E00               	movlw	0
 50377  00923E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50378  009240  0102               	movlb	2	; () banked
 50379  009242  51EB               	movf	(_loRa+231)& (0+255),w,b
 50380  009244  ECB5  F05A         	call	_SwTimerSetCallback
 50381                           
 50382                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 50383  009248  0E58               	movlw	low _LORAWAN_ReceiveWindow1Callback
 50384  00924A  0100               	movlb	0	; () banked
 50385  00924C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50386  00924E  0E95               	movlw	high _LORAWAN_ReceiveWindow1Callback
 50387  009250  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50388  009252  0E00               	movlw	0
 50389  009254  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50390  009256  0102               	movlb	2	; () banked
 50391  009258  51E8               	movf	(_loRa+228)& (0+255),w,b
 50392  00925A  ECB5  F05A         	call	_SwTimerSetCallback
 50393                           
 50394                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 50395  00925E  0EE4               	movlw	low _LORAWAN_ReceiveWindow2Callback
 50396  009260  0100               	movlb	0	; () banked
 50397  009262  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50398  009264  0E92               	movlw	high _LORAWAN_ReceiveWindow2Callback
 50399  009266  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50400  009268  0E00               	movlw	0
 50401  00926A  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50402  00926C  0102               	movlb	2	; () banked
 50403  00926E  51E9               	movf	(_loRa+229)& (0+255),w,b
 50404  009270  ECB5  F05A         	call	_SwTimerSetCallback
 50405                           
 50406                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 50407  009274  0E82               	movlw	low _AckRetransmissionCallback
 50408  009276  0100               	movlb	0	; () banked
 50409  009278  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50410  00927A  0E83               	movlw	high _AckRetransmissionCallback
 50411  00927C  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50412  00927E  0E00               	movlw	0
 50413  009280  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50414  009282  0102               	movlb	2	; () banked
 50415  009284  51EC               	movf	(_loRa+232)& (0+255),w,b
 50416  009286  ECB5  F05A         	call	_SwTimerSetCallback
 50417                           
 50418                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 50419  00928A  0EC8               	movlw	low _AutomaticReplyCallback
 50420  00928C  0100               	movlb	0	; () banked
 50421  00928E  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50422  009290  0EBD               	movlw	high _AutomaticReplyCallback
 50423  009292  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50424  009294  0E00               	movlw	0
 50425  009296  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50426  009298  0102               	movlb	2	; () banked
 50427  00929A  51EA               	movf	(_loRa+230)& (0+255),w,b
 50428  00929C  ECB5  F05A         	call	_SwTimerSetCallback
 50429                           
 50430                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 50431  0092A0  0EDC               	movlw	low _UnconfirmedTransmissionCallback
 50432  0092A2  0100               	movlb	0	; () banked
 50433  0092A4  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50434  0092A6  0EA3               	movlw	high _UnconfirmedTransmissionCallback
 50435  0092A8  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50436  0092AA  0E00               	movlw	0
 50437  0092AC  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50438  0092AE  0102               	movlb	2	; () banked
 50439  0092B0  51EE               	movf	(_loRa+234)& (0+255),w,b
 50440  0092B2  ECB5  F05A         	call	_SwTimerSetCallback
 50441                           
 50442                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 50443  0092B6  0E68               	movlw	low _UpdateJoinSuccessState
 50444  0092B8  0100               	movlb	0	; () banked
 50445  0092BA  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50446  0092BC  0E7C               	movlw	high _UpdateJoinSuccessState
 50447  0092BE  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50448  0092C0  0E00               	movlw	0
 50449  0092C2  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50450  0092C4  0102               	movlb	2	; () banked
 50451  0092C6  51F7               	movf	(_loRa+243)& (0+255),w,b
 50452  0092C8  ECB5  F05A         	call	_SwTimerSetCallback
 50453                           
 50454                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 50455  0092CC  0EAA               	movlw	low _DutyCycleCallback
 50456  0092CE  0100               	movlb	0	; () banked
 50457  0092D0  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50458  0092D2  0E48               	movlw	high _DutyCycleCallback
 50459  0092D4  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50460  0092D6  0E00               	movlw	0
 50461  0092D8  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50462  0092DA  0102               	movlb	2	; () banked
 50463  0092DC  51ED               	movf	(_loRa+233)& (0+255),w,b
 50464  0092DE  ECB5  F05A         	call	_SwTimerSetCallback
 50465  0092E2  0012               	return		;funcret
 50466  0092E4                     __end_of_SetCallbackSoftwareTimers:
 50467                           	opt stack 0
 50468                           tosu	equ	0xFFF
 50469                           tosh	equ	0xFFE
 50470                           tosl	equ	0xFFD
 50471                           pclath	equ	0xFFA
 50472                           tblptru	equ	0xFF8
 50473                           tblptrh	equ	0xFF7
 50474                           tblptrl	equ	0xFF6
 50475                           tablat	equ	0xFF5
 50476                           prodh	equ	0xFF4
 50477                           prodl	equ	0xFF3
 50478                           intcon	equ	0xFF2
 50479                           intcon2	equ	0xFF1
 50480                           intcon3	equ	0xFF0
 50481                           indf0	equ	0xFEF
 50482                           postinc0	equ	0xFEE
 50483                           plusw0	equ	0xFEB
 50484                           fsr0h	equ	0xFEA
 50485                           fsr0l	equ	0xFE9
 50486                           wreg	equ	0xFE8
 50487                           postinc1	equ	0xFE6
 50488                           postdec1	equ	0xFE5
 50489                           plusw1	equ	0xFE3
 50490                           fsr1h	equ	0xFE2
 50491                           fsr1l	equ	0xFE1
 50492                           indf2	equ	0xFDF
 50493                           postinc2	equ	0xFDE
 50494                           postdec2	equ	0xFDD
 50495                           plusw2	equ	0xFDB
 50496                           fsr2h	equ	0xFDA
 50497                           fsr2l	equ	0xFD9
 50498                           status	equ	0xFD8
 50499                           
 50500 ;; *************** function _RADIO_ReadRandom *****************
 50501 ;; Defined at:
 50502 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 50503 ;; Parameters:    Size  Location     Type
 50504 ;;		None
 50505 ;; Auto vars:     Size  Location     Type
 50506 ;;  retVal          2   15[BANK0 ] unsigned int 
 50507 ;;  i               1   17[BANK0 ] unsigned char 
 50508 ;; Return value:  Size  Location     Type
 50509 ;;                  2   12[BANK0 ] unsigned int 
 50510 ;; Registers used:
 50511 ;;		wreg, status,2, status,0, cstack
 50512 ;; Tracked objects:
 50513 ;;		On entry : 0/0
 50514 ;;		On exit  : 0/0
 50515 ;;		Unchanged: 0/0
 50516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50518 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50519 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50520 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50521 ;;Total ram usage:        6 bytes
 50522 ;; Hardware stack levels used:    1
 50523 ;; Hardware stack levels required when called:   11
 50524 ;; This function calls:
 50525 ;;		_RADIO_RegisterRead
 50526 ;;		_RADIO_RegisterWrite
 50527 ;;		_RADIO_WriteMode
 50528 ;;		_SystemBlockingWaitMs
 50529 ;; This function is called by:
 50530 ;;		_LORAWAN_Init
 50531 ;; This function uses a non-reentrant model
 50532 ;;
 50533                           
 50534                           	psect	text265
 50535  009A14                     __ptext265:
 50536                           	opt stack 0
 50537  009A14                     _RADIO_ReadRandom:
 50538                           	opt stack 18
 50539                           
 50540                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 50541                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 50542                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 50543                           
 50544                           ;incstack = 0
 50545  009A14  0E00               	movlw	0
 50546  009A16  0100               	movlb	0	; () banked
 50547  009A18  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 50548  009A1A  0E00               	movlw	0
 50549  009A1C  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 50550                           
 50551                           ; BSR set to: 0
 50552                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 50553  009A1E  0E01               	movlw	1
 50554  009A20  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 50555  009A22  0E01               	movlw	1
 50556  009A24  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 50557  009A26  0E00               	movlw	0
 50558  009A28  ECDE  F043         	call	_RADIO_WriteMode
 50559                           
 50560                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 50561  009A2C  0EFF               	movlw	255
 50562  009A2E  0100               	movlb	0	; () banked
 50563  009A30  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 50564  009A32  0E11               	movlw	17
 50565  009A34  ECEF  F05F         	call	_RADIO_RegisterWrite
 50566                           
 50567                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 50568  009A38  0E01               	movlw	1
 50569  009A3A  0100               	movlb	0	; () banked
 50570  009A3C  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 50571  009A3E  0E01               	movlw	1
 50572  009A40  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 50573  009A42  0E05               	movlw	5
 50574  009A44  ECDE  F043         	call	_RADIO_WriteMode
 50575                           
 50576                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 50577  009A48  0E00               	movlw	0
 50578  009A4A  0100               	movlb	0	; () banked
 50579  009A4C  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 50580  009A4E                     l21135:
 50581                           
 50582                           ; BSR set to: 0
 50583  009A4E  0E0F               	movlw	15
 50584  009A50  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 50585  009A52  D001               	goto	l1002
 50586  009A54  D019               	goto	u25280
 50587  009A56                     l1002:
 50588                           
 50589                           ; BSR set to: 0
 50590                           ;radio_driver_SX1276.c: 1377: {
 50591                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 50592                           
 50593                           ; BSR set to: 0
 50594  009A56  0E01               	movlw	1
 50595  009A58  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 50596  009A5A  0E00               	movlw	0
 50597  009A5C  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 50598  009A5E  0E00               	movlw	0
 50599  009A60  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 50600  009A62  0E00               	movlw	0
 50601  009A64  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 50602  009A66  EC0B  F05D         	call	_SystemBlockingWaitMs	;wreg free
 50603                           
 50604                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 50605  009A6A  0100               	movlb	0	; () banked
 50606  009A6C  90D8               	bcf	status,0,c
 50607  009A6E  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 50608  009A70  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 50609                           
 50610                           ; BSR set to: 0
 50611                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 50612  009A72  0E2C               	movlw	44
 50613  009A74  EC96  F05E         	call	_RADIO_RegisterRead
 50614  009A78  0100               	movlb	0	; () banked
 50615  009A7A  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 50616  009A7C  0E01               	movlw	1
 50617  009A7E  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 50618  009A80  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 50619  009A82  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 50620  009A84  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 50621  009A86  D7E3               	goto	l21135
 50622  009A88                     u25280:
 50623                           
 50624                           ; BSR set to: 0
 50625                           ;radio_driver_SX1276.c: 1381: }
 50626                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 50627                           
 50628                           ; BSR set to: 0
 50629  009A88  0E01               	movlw	1
 50630  009A8A  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 50631  009A8C  0E01               	movlw	1
 50632  009A8E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 50633  009A90  0E00               	movlw	0
 50634  009A92  ECDE  F043         	call	_RADIO_WriteMode
 50635                           
 50636                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 50637  009A96  0EFF               	movlw	255
 50638  009A98  0100               	movlb	0	; () banked
 50639  009A9A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 50640  009A9C  0E12               	movlw	18
 50641  009A9E  ECEF  F05F         	call	_RADIO_RegisterWrite
 50642                           
 50643                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 50644  009AA2  0E00               	movlw	0
 50645  009AA4  0100               	movlb	0	; () banked
 50646  009AA6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 50647  009AA8  0E11               	movlw	17
 50648  009AAA  ECEF  F05F         	call	_RADIO_RegisterWrite
 50649                           
 50650                           ;radio_driver_SX1276.c: 1389: return retVal;
 50651  009AAE  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 50652  009AB2  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 50653  009AB6  0012               	return	
 50654  009AB8                     __end_of_RADIO_ReadRandom:
 50655                           	opt stack 0
 50656                           tosu	equ	0xFFF
 50657                           tosh	equ	0xFFE
 50658                           tosl	equ	0xFFD
 50659                           pclath	equ	0xFFA
 50660                           tblptru	equ	0xFF8
 50661                           tblptrh	equ	0xFF7
 50662                           tblptrl	equ	0xFF6
 50663                           tablat	equ	0xFF5
 50664                           prodh	equ	0xFF4
 50665                           prodl	equ	0xFF3
 50666                           intcon	equ	0xFF2
 50667                           intcon2	equ	0xFF1
 50668                           intcon3	equ	0xFF0
 50669                           indf0	equ	0xFEF
 50670                           postinc0	equ	0xFEE
 50671                           plusw0	equ	0xFEB
 50672                           fsr0h	equ	0xFEA
 50673                           fsr0l	equ	0xFE9
 50674                           wreg	equ	0xFE8
 50675                           postinc1	equ	0xFE6
 50676                           postdec1	equ	0xFE5
 50677                           plusw1	equ	0xFE3
 50678                           fsr1h	equ	0xFE2
 50679                           fsr1l	equ	0xFE1
 50680                           indf2	equ	0xFDF
 50681                           postinc2	equ	0xFDE
 50682                           postdec2	equ	0xFDD
 50683                           plusw2	equ	0xFDB
 50684                           fsr2h	equ	0xFDA
 50685                           fsr2l	equ	0xFD9
 50686                           status	equ	0xFD8
 50687                           
 50688 ;; *************** function _LORAWAN_Reset *****************
 50689 ;; Defined at:
 50690 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 50691 ;; Parameters:    Size  Location     Type
 50692 ;;  ismBandNew      1    wreg     enum E7280
 50693 ;; Auto vars:     Size  Location     Type
 50694 ;;  ismBandNew      1   81[BANK0 ] enum E7280
 50695 ;; Return value:  Size  Location     Type
 50696 ;;                  1    wreg      void 
 50697 ;; Registers used:
 50698 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50699 ;; Tracked objects:
 50700 ;;		On entry : 0/0
 50701 ;;		On exit  : 0/0
 50702 ;;		Unchanged: 0/0
 50703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50705 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50707 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50708 ;;Total ram usage:        1 bytes
 50709 ;; Hardware stack levels used:    1
 50710 ;; Hardware stack levels required when called:   12
 50711 ;; This function calls:
 50712 ;;		_InitDefault433Channels
 50713 ;;		_InitDefault868Channels
 50714 ;;		_LORAWAN_LinkCheckConfigure
 50715 ;;		_RADIO_Init
 50716 ;;		_RADIO_SetLoRaSyncWord
 50717 ;;		_StopAllSoftwareTimers
 50718 ;;		_UpdateMinMaxChDataRate
 50719 ;;		_memset
 50720 ;; This function is called by:
 50721 ;;		_LORAWAN_Init
 50722 ;; This function uses a non-reentrant model
 50723 ;;
 50724                           
 50725                           	psect	text266
 50726  006612                     __ptext266:
 50727                           	opt stack 0
 50728  006612                     _LORAWAN_Reset:
 50729                           	opt stack 17
 50730                           
 50731                           ;incstack = 0
 50732                           ;LORAWAN_Reset@ismBandNew stored from wreg
 50733  006612  0100               	movlb	0	; () banked
 50734  006614  6FB1               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 50735                           
 50736                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 50737  006616  0102               	movlb	2	; () banked
 50738  006618  05F4               	decf	(_loRa+240)& (0+255),w,b
 50739  00661A  B4D8               	btfsc	status,2,c
 50740                           
 50741                           ; BSR set to: 2
 50742                           ;lorawan_eu.c: 151: {
 50743                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 50744  00661C  EC46  F058         	call	_StopAllSoftwareTimers	;wreg free
 50745                           
 50746                           ;lorawan_eu.c: 153: }
 50747                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 50748  006620  0E34               	movlw	52
 50749  006622  0102               	movlb	2	; () banked
 50750  006624  6FF8               	movwf	(_loRa+244)& (0+255),b
 50751                           
 50752                           ; BSR set to: 2
 50753                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 50754  006626  51F8               	movf	(_loRa+244)& (0+255),w,b
 50755  006628  EC00  F063         	call	_RADIO_SetLoRaSyncWord
 50756                           
 50757                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 50758  00662C  0E00               	movlw	0
 50759  00662E  0102               	movlb	2	; () banked
 50760  006630  6F06               	movwf	(_loRa+2)& (0+255),b
 50761  006632  0E00               	movlw	0
 50762  006634  6F07               	movwf	(_loRa+3)& (0+255),b
 50763  006636  0E00               	movlw	0
 50764  006638  6F08               	movwf	(_loRa+4)& (0+255),b
 50765  00663A  0E00               	movlw	0
 50766  00663C  6F09               	movwf	(_loRa+5)& (0+255),b
 50767                           
 50768                           ; BSR set to: 2
 50769                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 50770  00663E  69E1               	setf	(_loRa+221)& (0+255),b
 50771                           
 50772                           ; BSR set to: 2
 50773                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 50774  006640  0E00               	movlw	0
 50775  006642  6FE2               	movwf	(_loRa+222)& (0+255),b
 50776                           
 50777                           ; BSR set to: 2
 50778                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 50779  006644  0E00               	movlw	0
 50780  006646  6FCC               	movwf	(_loRa+200)& (0+255),b
 50781  006648  0E00               	movlw	0
 50782  00664A  6FCD               	movwf	(_loRa+201)& (0+255),b
 50783  00664C  0E00               	movlw	0
 50784  00664E  6FCE               	movwf	(_loRa+202)& (0+255),b
 50785  006650  0E00               	movlw	0
 50786  006652  6FCF               	movwf	(_loRa+203)& (0+255),b
 50787                           
 50788                           ; BSR set to: 2
 50789                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 50790  006654  0E00               	movlw	0
 50791  006656  6FD9               	movwf	(_loRa+213)& (0+255),b
 50792  006658  0E00               	movlw	0
 50793  00665A  6FD8               	movwf	(_loRa+212)& (0+255),b
 50794                           
 50795                           ; BSR set to: 2
 50796                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 50797  00665C  0E00               	movlw	0
 50798  00665E  6F0E               	movwf	(_loRa+10)& (0+255),b
 50799  006660  0E00               	movlw	0
 50800  006662  6F0F               	movwf	(_loRa+11)& (0+255),b
 50801  006664  0E00               	movlw	0
 50802  006666  6F10               	movwf	(_loRa+12)& (0+255),b
 50803  006668  0E00               	movlw	0
 50804  00666A  6F11               	movwf	(_loRa+13)& (0+255),b
 50805                           
 50806                           ; BSR set to: 2
 50807                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 50808  00666C  0E00               	movlw	0
 50809  00666E  6F0A               	movwf	(_loRa+6)& (0+255),b
 50810  006670  0E00               	movlw	0
 50811  006672  6F0B               	movwf	(_loRa+7)& (0+255),b
 50812  006674  0E00               	movlw	0
 50813  006676  6F0C               	movwf	(_loRa+8)& (0+255),b
 50814  006678  0E00               	movlw	0
 50815  00667A  6F0D               	movwf	(_loRa+9)& (0+255),b
 50816                           
 50817                           ; BSR set to: 2
 50818                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 50819  00667C  0E00               	movlw	0
 50820  00667E  6FD7               	movwf	(_loRa+211)& (0+255),b
 50821  006680  0E00               	movlw	0
 50822  006682  6FD6               	movwf	(_loRa+210)& (0+255),b
 50823                           
 50824                           ; BSR set to: 2
 50825                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 50826  006684  0E00               	movlw	0
 50827  006686  6FE0               	movwf	(_loRa+220)& (0+255),b
 50828  006688  0E01               	movlw	1
 50829  00668A  6FDF               	movwf	(_loRa+219)& (0+255),b
 50830                           
 50831                           ; BSR set to: 2
 50832                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 50833  00668C  0E00               	movlw	0
 50834  00668E  6FD5               	movwf	(_loRa+209)& (0+255),b
 50835  006690  0E00               	movlw	0
 50836  006692  6FD4               	movwf	(_loRa+208)& (0+255),b
 50837                           
 50838                           ; BSR set to: 2
 50839                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 50840  006694  0E00               	movlw	0
 50841  006696  6FF2               	movwf	(_loRa+238)& (0+255),b
 50842                           
 50843                           ; BSR set to: 2
 50844                           ;lorawan_eu.c: 169: loRa.offset = 0;
 50845  006698  0E00               	movlw	0
 50846  00669A  6FF3               	movwf	(_loRa+239)& (0+255),b
 50847                           
 50848                           ; BSR set to: 2
 50849                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 50850  00669C  0E00               	movlw	0
 50851  00669E  6FCC               	movwf	(_loRa+200)& (0+255),b
 50852  0066A0  0E00               	movlw	0
 50853  0066A2  6FCD               	movwf	(_loRa+201)& (0+255),b
 50854  0066A4  0E00               	movlw	0
 50855  0066A6  6FCE               	movwf	(_loRa+202)& (0+255),b
 50856  0066A8  0E00               	movlw	0
 50857  0066AA  6FCF               	movwf	(_loRa+203)& (0+255),b
 50858                           
 50859                           ; BSR set to: 2
 50860                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 50861  0066AC  9507               	bcf	(_loRa+3)& (0+255),2,b
 50862                           
 50863                           ; BSR set to: 2
 50864                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 50865  0066AE  0E00               	movlw	0
 50866  0066B0  6F06               	movwf	(_loRa+2)& (0+255),b
 50867  0066B2  0E00               	movlw	0
 50868  0066B4  6F07               	movwf	(_loRa+3)& (0+255),b
 50869  0066B6  0E00               	movlw	0
 50870  0066B8  6F08               	movwf	(_loRa+4)& (0+255),b
 50871  0066BA  0E00               	movlw	0
 50872  0066BC  6F09               	movwf	(_loRa+5)& (0+255),b
 50873                           
 50874                           ; BSR set to: 2
 50875                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 50876  0066BE  0E00               	movlw	0
 50877  0066C0  6F05               	movwf	(_loRa+1)& (0+255),b
 50878  0066C2  0E00               	movlw	0
 50879  0066C4  6F04               	movwf	_loRa& (0+255),b
 50880                           
 50881                           ; BSR set to: 2
 50882                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 50883  0066C6  0E07               	movlw	7
 50884  0066C8  6FDB               	movwf	(_loRa+215)& (0+255),b
 50885                           
 50886                           ; BSR set to: 2
 50887                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 50888  0066CA  0E00               	movlw	0
 50889  0066CC  6FDA               	movwf	(_loRa+214)& (0+255),b
 50890                           
 50891                           ; BSR set to: 2
 50892                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 50893  0066CE  0E01               	movlw	1
 50894  0066D0  6FDD               	movwf	(_loRa+217)& (0+255),b
 50895                           
 50896                           ; BSR set to: 2
 50897                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 50898  0066D2  0E01               	movlw	1
 50899  0066D4  6FDC               	movwf	(_loRa+216)& (0+255),b
 50900                           
 50901                           ; BSR set to: 2
 50902                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 50903  0066D6  69E4               	setf	(_loRa+224)& (0+255),b
 50904                           
 50905                           ; BSR set to: 2
 50906                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 50907  0066D8  C0B1  F2A8         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 50908                           
 50909                           ; BSR set to: 2
 50910                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 50911  0066DC  0E00               	movlw	0
 50912  0066DE  6F16               	movwf	(_loRa+18)& (0+255),b
 50913                           
 50914                           ; BSR set to: 2
 50915                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 50916  0066E0  0E10               	movlw	16
 50917  0066E2  6FF1               	movwf	(_loRa+237)& (0+255),b
 50918                           
 50919                           ; BSR set to: 2
 50920                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 50921  0066E4  0100               	movlb	0	; () banked
 50922  0066E6  51B1               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 50923  0066E8  A4D8               	btfss	status,2,c
 50924  0066EA  D01B               	goto	l1304
 50925                           
 50926                           ; BSR set to: 0
 50927                           ;lorawan_eu.c: 193: {
 50928                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 50929  0066EC  0E3F               	movlw	low (_radioBuffer+16)
 50930  0066EE  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 50931  0066F0  0E06               	movlw	high (_radioBuffer+16)
 50932  0066F2  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 50933  0066F4  0EA0               	movlw	160
 50934  0066F6  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 50935  0066F8  0E27               	movlw	39
 50936  0066FA  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 50937  0066FC  0EBE               	movlw	190
 50938  0066FE  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 50939  006700  0E33               	movlw	51
 50940  006702  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 50941  006704  ECF0  F033         	call	_RADIO_Init	;wreg free
 50942                           
 50943                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 50944  006708  ECA0  F04F         	call	_InitDefault868Channels	;wreg free
 50945                           
 50946                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 50947  00670C  0E00               	movlw	0
 50948  00670E  0102               	movlb	2	; () banked
 50949  006710  6F20               	movwf	(_loRa+28)& (0+255),b
 50950                           
 50951                           ; BSR set to: 2
 50952                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 50953  006712  0E08               	movlw	8
 50954  006714  6F1C               	movwf	(_loRa+24)& (0+255),b
 50955  006716  0EE6               	movlw	230
 50956  006718  6F1D               	movwf	(_loRa+25)& (0+255),b
 50957  00671A  0ED3               	movlw	211
 50958  00671C  6F1E               	movwf	(_loRa+26)& (0+255),b
 50959  00671E  0E33               	movlw	51
 50960  006720  D01B               	goto	L28
 50961  006722                     l1304:
 50962                           
 50963                           ;lorawan_eu.c: 201: else
 50964                           ;lorawan_eu.c: 202: {
 50965                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 50966                           
 50967                           ; BSR set to: 2
 50968  006722  0E3F               	movlw	low (_radioBuffer+16)
 50969  006724  0100               	movlb	0	; () banked
 50970  006726  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 50971  006728  0E06               	movlw	high (_radioBuffer+16)
 50972  00672A  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 50973  00672C  0E20               	movlw	32
 50974  00672E  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 50975  006730  0EA2               	movlw	162
 50976  006732  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 50977  006734  0ED3               	movlw	211
 50978  006736  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 50979  006738  0E19               	movlw	25
 50980  00673A  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 50981  00673C  ECF0  F033         	call	_RADIO_Init	;wreg free
 50982                           
 50983                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 50984  006740  ECE5  F04F         	call	_InitDefault433Channels	;wreg free
 50985                           
 50986                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 50987  006744  0E00               	movlw	0
 50988  006746  0102               	movlb	2	; () banked
 50989  006748  6F20               	movwf	(_loRa+28)& (0+255),b
 50990                           
 50991                           ; BSR set to: 2
 50992                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 50993  00674A  0E28               	movlw	40
 50994  00674C  6F1C               	movwf	(_loRa+24)& (0+255),b
 50995  00674E  0E76               	movlw	118
 50996  006750  6F1D               	movwf	(_loRa+25)& (0+255),b
 50997  006752  0EE8               	movlw	232
 50998  006754  6F1E               	movwf	(_loRa+26)& (0+255),b
 50999  006756  0E19               	movlw	25
 51000  006758                     L28:
 51001  006758  6F1F               	movwf	(_loRa+27)& (0+255),b
 51002                           
 51003                           ; BSR set to: 2
 51004                           ;lorawan_eu.c: 209: }
 51005                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 51006                           
 51007                           ; BSR set to: 2
 51008  00675A  0E01               	movlw	1
 51009  00675C  6FE5               	movwf	(_loRa+225)& (0+255),b
 51010                           
 51011                           ; BSR set to: 2
 51012                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 51013  00675E  0E00               	movlw	0
 51014  006760  6FE3               	movwf	(_loRa+223)& (0+255),b
 51015                           
 51016                           ; BSR set to: 2
 51017                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 51018  006762  EC5D  F044         	call	_UpdateMinMaxChDataRate	;wreg free
 51019                           
 51020                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 51021  006766  0E00               	movlw	0
 51022  006768  0102               	movlb	2	; () banked
 51023  00676A  6FAA               	movwf	(_loRa+166)& (0+255),b
 51024  00676C  0E00               	movlw	0
 51025  00676E  6FA9               	movwf	(_loRa+165)& (0+255),b
 51026                           
 51027                           ; BSR set to: 2
 51028                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 51029  006770  0E21               	movlw	low (_loRa+29)
 51030  006772  0100               	movlb	0	; () banked
 51031  006774  6F60               	movwf	memset@p1& (0+255),b
 51032  006776  0E02               	movlw	high (_loRa+29)
 51033  006778  6F61               	movwf	(memset@p1+1)& (0+255),b
 51034  00677A  0E00               	movlw	0
 51035  00677C  6F63               	movwf	(memset@c+1)& (0+255),b
 51036  00677E  0E00               	movlw	0
 51037  006780  6F62               	movwf	memset@c& (0+255),b
 51038  006782  0E00               	movlw	0
 51039  006784  6F65               	movwf	(memset@n+1)& (0+255),b
 51040  006786  0E69               	movlw	105
 51041  006788  6F64               	movwf	memset@n& (0+255),b
 51042  00678A  EC23  F05D         	call	_memset	;wreg free
 51043                           
 51044                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 51045  00678E  0E03               	movlw	3
 51046  006790  0102               	movlb	2	; () banked
 51047  006792  6F99               	movwf	(_loRa+149)& (0+255),b
 51048  006794  0EE8               	movlw	232
 51049  006796  6F98               	movwf	(_loRa+148)& (0+255),b
 51050                           
 51051                           ; BSR set to: 2
 51052                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 51053  006798  0E07               	movlw	7
 51054  00679A  6F9B               	movwf	(_loRa+151)& (0+255),b
 51055  00679C  0ED0               	movlw	208
 51056  00679E  6F9A               	movwf	(_loRa+150)& (0+255),b
 51057                           
 51058                           ; BSR set to: 2
 51059                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 51060  0067A0  0E13               	movlw	19
 51061  0067A2  6F9D               	movwf	(_loRa+153)& (0+255),b
 51062  0067A4  0E88               	movlw	136
 51063  0067A6  6F9C               	movwf	(_loRa+152)& (0+255),b
 51064                           
 51065                           ; BSR set to: 2
 51066                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 51067  0067A8  0E17               	movlw	23
 51068  0067AA  6F9F               	movwf	(_loRa+155)& (0+255),b
 51069  0067AC  0E70               	movlw	112
 51070  0067AE  6F9E               	movwf	(_loRa+154)& (0+255),b
 51071                           
 51072                           ; BSR set to: 2
 51073                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 51074  0067B0  0E07               	movlw	7
 51075  0067B2  6FA5               	movwf	(_loRa+161)& (0+255),b
 51076  0067B4  0ED0               	movlw	208
 51077  0067B6  6FA4               	movwf	(_loRa+160)& (0+255),b
 51078                           
 51079                           ; BSR set to: 2
 51080                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 51081  0067B8  0E20               	movlw	32
 51082  0067BA  6FA7               	movwf	(_loRa+163)& (0+255),b
 51083                           
 51084                           ; BSR set to: 2
 51085                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 51086  0067BC  0E40               	movlw	64
 51087  0067BE  6FA6               	movwf	(_loRa+162)& (0+255),b
 51088                           
 51089                           ; BSR set to: 2
 51090                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 51091  0067C0  0E40               	movlw	64
 51092  0067C2  6FA1               	movwf	(_loRa+157)& (0+255),b
 51093  0067C4  0E00               	movlw	0
 51094  0067C6  6FA0               	movwf	(_loRa+156)& (0+255),b
 51095                           
 51096                           ; BSR set to: 2
 51097                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 51098  0067C8  0E40               	movlw	64
 51099  0067CA  6FA3               	movwf	(_loRa+159)& (0+255),b
 51100  0067CC  0E00               	movlw	0
 51101  0067CE  6FA2               	movwf	(_loRa+158)& (0+255),b
 51102                           
 51103                           ; BSR set to: 2
 51104                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 51105  0067D0  0E00               	movlw	0
 51106  0067D2  0100               	movlb	0	; () banked
 51107  0067D4  6FA7               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 51108  0067D6  0E00               	movlw	0
 51109  0067D8  6FA6               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 51110  0067DA  EC98  F03B         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 51111  0067DE  0012               	return		;funcret
 51112  0067E0                     __end_of_LORAWAN_Reset:
 51113                           	opt stack 0
 51114                           tosu	equ	0xFFF
 51115                           tosh	equ	0xFFE
 51116                           tosl	equ	0xFFD
 51117                           pclath	equ	0xFFA
 51118                           tblptru	equ	0xFF8
 51119                           tblptrh	equ	0xFF7
 51120                           tblptrl	equ	0xFF6
 51121                           tablat	equ	0xFF5
 51122                           prodh	equ	0xFF4
 51123                           prodl	equ	0xFF3
 51124                           intcon	equ	0xFF2
 51125                           intcon2	equ	0xFF1
 51126                           intcon3	equ	0xFF0
 51127                           indf0	equ	0xFEF
 51128                           postinc0	equ	0xFEE
 51129                           plusw0	equ	0xFEB
 51130                           fsr0h	equ	0xFEA
 51131                           fsr0l	equ	0xFE9
 51132                           wreg	equ	0xFE8
 51133                           postinc1	equ	0xFE6
 51134                           postdec1	equ	0xFE5
 51135                           plusw1	equ	0xFE3
 51136                           fsr1h	equ	0xFE2
 51137                           fsr1l	equ	0xFE1
 51138                           indf2	equ	0xFDF
 51139                           postinc2	equ	0xFDE
 51140                           postdec2	equ	0xFDD
 51141                           plusw2	equ	0xFDB
 51142                           fsr2h	equ	0xFDA
 51143                           fsr2l	equ	0xFD9
 51144                           status	equ	0xFD8
 51145                           
 51146 ;; *************** function _UpdateMinMaxChDataRate *****************
 51147 ;; Defined at:
 51148 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 51149 ;; Parameters:    Size  Location     Type
 51150 ;;		None
 51151 ;; Auto vars:     Size  Location     Type
 51152 ;;  i               1    1[BANK0 ] unsigned char 
 51153 ;; Return value:  Size  Location     Type
 51154 ;;                  1    wreg      void 
 51155 ;; Registers used:
 51156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51157 ;; Tracked objects:
 51158 ;;		On entry : 0/0
 51159 ;;		On exit  : 0/0
 51160 ;;		Unchanged: 0/0
 51161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 51162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51163 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51164 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51165 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51166 ;;Total ram usage:        2 bytes
 51167 ;; Hardware stack levels used:    1
 51168 ;; Hardware stack levels required when called:    7
 51169 ;; This function calls:
 51170 ;;		Nothing
 51171 ;; This function is called by:
 51172 ;;		_LORAWAN_Reset
 51173 ;; This function uses a non-reentrant model
 51174 ;;
 51175                           
 51176                           	psect	text267
 51177  0088BA                     __ptext267:
 51178                           	opt stack 0
 51179  0088BA                     _UpdateMinMaxChDataRate:
 51180                           	opt stack 21
 51181                           
 51182                           ;lorawan.c: 1065: uint8_t i;
 51183                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 51184                           
 51185                           ;incstack = 0
 51186  0088BA  0E07               	movlw	7
 51187  0088BC  0102               	movlb	2	; () banked
 51188  0088BE  6FEF               	movwf	(_loRa+235)& (0+255),b
 51189                           
 51190                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 51191  0088C0  0E00               	movlw	0
 51192  0088C2  6FF0               	movwf	(_loRa+236)& (0+255),b
 51193                           
 51194                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 51195  0088C4  0E00               	movlw	0
 51196  0088C6  0100               	movlb	0	; () banked
 51197  0088C8  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 51198  0088CA  D06D               	goto	l2206
 51199  0088CC                     
 51200                           ; BSR set to: 0
 51201                           ;lorawan.c: 1072: {
 51202                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 51203                           
 51204                           ; BSR set to: 0
 51205  0088CC  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51206  0088CE  0D0E               	mullw	14
 51207  0088D0  0E05               	movlw	5
 51208  0088D2  26F3               	addwf	prodl,f,c
 51209  0088D4  0E00               	movlw	0
 51210  0088D6  22F4               	addwfc	prodh,f,c
 51211  0088D8  0E00               	movlw	low _Channels
 51212  0088DA  24F3               	addwf	prodl,w,c
 51213  0088DC  6ED9               	movwf	fsr2l,c
 51214  0088DE  0E04               	movlw	high _Channels
 51215  0088E0  20F4               	addwfc	prodh,w,c
 51216  0088E2  6EDA               	movwf	fsr2h,c
 51217  0088E4  0104               	movlb	4	; () banked
 51218  0088E6  50DF               	movf	223,w,c
 51219  0088E8  0B0F               	andlw	15
 51220  0088EA  0100               	movlb	0	; () banked
 51221  0088EC  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 51222  0088EE  0102               	movlb	2	; () banked
 51223  0088F0  51EF               	movf	(_loRa+235)& (0+255),w,b
 51224  0088F2  0100               	movlb	0	; () banked
 51225  0088F4  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 51226  0088F6  B0D8               	btfsc	status,0,c
 51227  0088F8  D020               	goto	l2208
 51228                           
 51229                           ; BSR set to: 0
 51230  0088FA  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51231  0088FC  0D0E               	mullw	14
 51232  0088FE  0E04               	movlw	4
 51233  008900  26F3               	addwf	prodl,f,c
 51234  008902  0E00               	movlw	0
 51235  008904  22F4               	addwfc	prodh,f,c
 51236  008906  0E00               	movlw	low _Channels
 51237  008908  24F3               	addwf	prodl,w,c
 51238  00890A  6ED9               	movwf	fsr2l,c
 51239  00890C  0E04               	movlw	high _Channels
 51240  00890E  20F4               	addwfc	prodh,w,c
 51241  008910  6EDA               	movwf	fsr2h,c
 51242  008912  04DE               	decf	postinc2,w,c
 51243  008914  A4D8               	btfss	status,2,c
 51244  008916  D011               	goto	l2208
 51245                           
 51246                           ; BSR set to: 0
 51247                           ;lorawan.c: 1074: {
 51248                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 51249  008918  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51250  00891A  0D0E               	mullw	14
 51251  00891C  0E05               	movlw	5
 51252  00891E  26F3               	addwf	prodl,f,c
 51253  008920  0E00               	movlw	0
 51254  008922  22F4               	addwfc	prodh,f,c
 51255  008924  0E00               	movlw	low _Channels
 51256  008926  24F3               	addwf	prodl,w,c
 51257  008928  6ED9               	movwf	fsr2l,c
 51258  00892A  0E04               	movlw	high _Channels
 51259  00892C  20F4               	addwfc	prodh,w,c
 51260  00892E  6EDA               	movwf	fsr2h,c
 51261  008930  0104               	movlb	4	; () banked
 51262  008932  50DF               	movf	223,w,c
 51263  008934  0B0F               	andlw	15
 51264  008936  0102               	movlb	2	; () banked
 51265  008938  6FEF               	movwf	(_loRa+235)& (0+255),b
 51266  00893A                     l2208:
 51267                           
 51268                           ;lorawan.c: 1076: }
 51269                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 51270  00893A  0100               	movlb	0	; () banked
 51271  00893C  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51272  00893E  0D0E               	mullw	14
 51273  008940  0E05               	movlw	5
 51274  008942  26F3               	addwf	prodl,f,c
 51275  008944  0E00               	movlw	0
 51276  008946  22F4               	addwfc	prodh,f,c
 51277  008948  0E00               	movlw	low _Channels
 51278  00894A  24F3               	addwf	prodl,w,c
 51279  00894C  6ED9               	movwf	fsr2l,c
 51280  00894E  0E04               	movlw	high _Channels
 51281  008950  20F4               	addwfc	prodh,w,c
 51282  008952  6EDA               	movwf	fsr2h,c
 51283  008954  0104               	movlb	4	; () banked
 51284  008956  38DF               	swapf	223,w,c
 51285  008958  0B0F               	andlw	15
 51286  00895A  0102               	movlb	2	; () banked
 51287  00895C  61F0               	cpfslt	(_loRa+236)& (0+255),b
 51288  00895E  D021               	goto	l2209
 51289                           
 51290                           ; BSR set to: 2
 51291  008960  0100               	movlb	0	; () banked
 51292  008962  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51293  008964  0D0E               	mullw	14
 51294  008966  0E04               	movlw	4
 51295  008968  26F3               	addwf	prodl,f,c
 51296  00896A  0E00               	movlw	0
 51297  00896C  22F4               	addwfc	prodh,f,c
 51298  00896E  0E00               	movlw	low _Channels
 51299  008970  24F3               	addwf	prodl,w,c
 51300  008972  6ED9               	movwf	fsr2l,c
 51301  008974  0E04               	movlw	high _Channels
 51302  008976  20F4               	addwfc	prodh,w,c
 51303  008978  6EDA               	movwf	fsr2h,c
 51304  00897A  04DE               	decf	postinc2,w,c
 51305  00897C  A4D8               	btfss	status,2,c
 51306  00897E  D011               	goto	l2209
 51307                           
 51308                           ; BSR set to: 0
 51309                           ;lorawan.c: 1078: {
 51310                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 51311  008980  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51312  008982  0D0E               	mullw	14
 51313  008984  0E05               	movlw	5
 51314  008986  26F3               	addwf	prodl,f,c
 51315  008988  0E00               	movlw	0
 51316  00898A  22F4               	addwfc	prodh,f,c
 51317  00898C  0E00               	movlw	low _Channels
 51318  00898E  24F3               	addwf	prodl,w,c
 51319  008990  6ED9               	movwf	fsr2l,c
 51320  008992  0E04               	movlw	high _Channels
 51321  008994  20F4               	addwfc	prodh,w,c
 51322  008996  6EDA               	movwf	fsr2h,c
 51323  008998  0104               	movlb	4	; () banked
 51324  00899A  38DF               	swapf	223,w,c
 51325  00899C  0B0F               	andlw	15
 51326  00899E  0102               	movlb	2	; () banked
 51327  0089A0  6FF0               	movwf	(_loRa+236)& (0+255),b
 51328  0089A2                     l2209:
 51329                           
 51330                           ; BSR set to: 2
 51331  0089A2  0100               	movlb	0	; () banked
 51332  0089A4  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 51333  0089A6                     l2206:
 51334                           
 51335                           ; BSR set to: 0
 51336                           
 51337                           ; BSR set to: 0
 51338  0089A6  0102               	movlb	2	; () banked
 51339  0089A8  51F1               	movf	(_loRa+237)& (0+255),w,b
 51340  0089AA  0100               	movlb	0	; () banked
 51341  0089AC  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51342  0089AE  B0D8               	btfsc	status,0,c
 51343  0089B0  0012               	return	
 51344  0089B2  D78C               	goto	l2207
 51345  0089B4                     __end_of_UpdateMinMaxChDataRate:
 51346                           	opt stack 0
 51347                           tosu	equ	0xFFF
 51348                           tosh	equ	0xFFE
 51349                           tosl	equ	0xFFD
 51350                           pclath	equ	0xFFA
 51351                           tblptru	equ	0xFF8
 51352                           tblptrh	equ	0xFF7
 51353                           tblptrl	equ	0xFF6
 51354                           tablat	equ	0xFF5
 51355                           prodh	equ	0xFF4
 51356                           prodl	equ	0xFF3
 51357                           intcon	equ	0xFF2
 51358                           intcon2	equ	0xFF1
 51359                           intcon3	equ	0xFF0
 51360                           indf0	equ	0xFEF
 51361                           postinc0	equ	0xFEE
 51362                           plusw0	equ	0xFEB
 51363                           fsr0h	equ	0xFEA
 51364                           fsr0l	equ	0xFE9
 51365                           wreg	equ	0xFE8
 51366                           postinc1	equ	0xFE6
 51367                           postdec1	equ	0xFE5
 51368                           plusw1	equ	0xFE3
 51369                           fsr1h	equ	0xFE2
 51370                           fsr1l	equ	0xFE1
 51371                           indf2	equ	0xFDF
 51372                           postinc2	equ	0xFDE
 51373                           postdec2	equ	0xFDD
 51374                           plusw2	equ	0xFDB
 51375                           fsr2h	equ	0xFDA
 51376                           fsr2l	equ	0xFD9
 51377                           status	equ	0xFD8
 51378                           
 51379 ;; *************** function _StopAllSoftwareTimers *****************
 51380 ;; Defined at:
 51381 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 51382 ;; Parameters:    Size  Location     Type
 51383 ;;		None
 51384 ;; Auto vars:     Size  Location     Type
 51385 ;;		None
 51386 ;; Return value:  Size  Location     Type
 51387 ;;                  1    wreg      void 
 51388 ;; Registers used:
 51389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51390 ;; Tracked objects:
 51391 ;;		On entry : 0/0
 51392 ;;		On exit  : 0/0
 51393 ;;		Unchanged: 0/0
 51394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 51395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51399 ;;Total ram usage:        0 bytes
 51400 ;; Hardware stack levels used:    1
 51401 ;; Hardware stack levels required when called:    8
 51402 ;; This function calls:
 51403 ;;		_SwTimerStop
 51404 ;; This function is called by:
 51405 ;;		_LORAWAN_Init
 51406 ;;		_LORAWAN_Reset
 51407 ;; This function uses a non-reentrant model
 51408 ;;
 51409                           
 51410                           	psect	text268
 51411  00B08C                     __ptext268:
 51412                           	opt stack 0
 51413  00B08C                     _StopAllSoftwareTimers:
 51414                           	opt stack 21
 51415                           
 51416                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 51417                           
 51418                           ; BSR set to: 0
 51419                           ;incstack = 0
 51420  00B08C  0102               	movlb	2	; () banked
 51421  00B08E  51E6               	movf	(_loRa+226)& (0+255),w,b
 51422  00B090  ECAA  F05E         	call	_SwTimerStop
 51423                           
 51424                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 51425  00B094  0102               	movlb	2	; () banked
 51426  00B096  51E7               	movf	(_loRa+227)& (0+255),w,b
 51427  00B098  ECAA  F05E         	call	_SwTimerStop
 51428                           
 51429                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 51430  00B09C  0102               	movlb	2	; () banked
 51431  00B09E  51EB               	movf	(_loRa+231)& (0+255),w,b
 51432  00B0A0  ECAA  F05E         	call	_SwTimerStop
 51433                           
 51434                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 51435  00B0A4  0102               	movlb	2	; () banked
 51436  00B0A6  51E8               	movf	(_loRa+228)& (0+255),w,b
 51437  00B0A8  ECAA  F05E         	call	_SwTimerStop
 51438                           
 51439                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 51440  00B0AC  0102               	movlb	2	; () banked
 51441  00B0AE  51E9               	movf	(_loRa+229)& (0+255),w,b
 51442  00B0B0  ECAA  F05E         	call	_SwTimerStop
 51443                           
 51444                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 51445  00B0B4  0102               	movlb	2	; () banked
 51446  00B0B6  51EC               	movf	(_loRa+232)& (0+255),w,b
 51447  00B0B8  ECAA  F05E         	call	_SwTimerStop
 51448                           
 51449                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 51450  00B0BC  0102               	movlb	2	; () banked
 51451  00B0BE  51EA               	movf	(_loRa+230)& (0+255),w,b
 51452  00B0C0  ECAA  F05E         	call	_SwTimerStop
 51453                           
 51454                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 51455  00B0C4  0102               	movlb	2	; () banked
 51456  00B0C6  51EE               	movf	(_loRa+234)& (0+255),w,b
 51457  00B0C8  ECAA  F05E         	call	_SwTimerStop
 51458                           
 51459                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 51460  00B0CC  0102               	movlb	2	; () banked
 51461  00B0CE  51F7               	movf	(_loRa+243)& (0+255),w,b
 51462  00B0D0  ECAA  F05E         	call	_SwTimerStop
 51463                           
 51464                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 51465  00B0D4  0102               	movlb	2	; () banked
 51466  00B0D6  51ED               	movf	(_loRa+233)& (0+255),w,b
 51467  00B0D8  ECAA  F05E         	call	_SwTimerStop
 51468  00B0DC  0012               	return		;funcret
 51469  00B0DE                     __end_of_StopAllSoftwareTimers:
 51470                           	opt stack 0
 51471                           tosu	equ	0xFFF
 51472                           tosh	equ	0xFFE
 51473                           tosl	equ	0xFFD
 51474                           pclath	equ	0xFFA
 51475                           tblptru	equ	0xFF8
 51476                           tblptrh	equ	0xFF7
 51477                           tblptrl	equ	0xFF6
 51478                           tablat	equ	0xFF5
 51479                           prodh	equ	0xFF4
 51480                           prodl	equ	0xFF3
 51481                           intcon	equ	0xFF2
 51482                           intcon2	equ	0xFF1
 51483                           intcon3	equ	0xFF0
 51484                           indf0	equ	0xFEF
 51485                           postinc0	equ	0xFEE
 51486                           plusw0	equ	0xFEB
 51487                           fsr0h	equ	0xFEA
 51488                           fsr0l	equ	0xFE9
 51489                           wreg	equ	0xFE8
 51490                           postinc1	equ	0xFE6
 51491                           postdec1	equ	0xFE5
 51492                           plusw1	equ	0xFE3
 51493                           fsr1h	equ	0xFE2
 51494                           fsr1l	equ	0xFE1
 51495                           indf2	equ	0xFDF
 51496                           postinc2	equ	0xFDE
 51497                           postdec2	equ	0xFDD
 51498                           plusw2	equ	0xFDB
 51499                           fsr2h	equ	0xFDA
 51500                           fsr2l	equ	0xFD9
 51501                           status	equ	0xFD8
 51502                           
 51503 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 51504 ;; Defined at:
 51505 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 51506 ;; Parameters:    Size  Location     Type
 51507 ;;  syncWord        1    wreg     unsigned char 
 51508 ;; Auto vars:     Size  Location     Type
 51509 ;;  syncWord        1    0[BANK0 ] unsigned char 
 51510 ;; Return value:  Size  Location     Type
 51511 ;;                  1    wreg      void 
 51512 ;; Registers used:
 51513 ;;		wreg
 51514 ;; Tracked objects:
 51515 ;;		On entry : 0/0
 51516 ;;		On exit  : 0/0
 51517 ;;		Unchanged: 0/0
 51518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 51519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51522 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51523 ;;Total ram usage:        1 bytes
 51524 ;; Hardware stack levels used:    1
 51525 ;; Hardware stack levels required when called:    7
 51526 ;; This function calls:
 51527 ;;		Nothing
 51528 ;; This function is called by:
 51529 ;;		_LORAWAN_Reset
 51530 ;;		_ConfigureRadio
 51531 ;; This function uses a non-reentrant model
 51532 ;;
 51533                           
 51534                           	psect	text269
 51535  00C600                     __ptext269:
 51536                           	opt stack 0
 51537  00C600                     _RADIO_SetLoRaSyncWord:
 51538                           	opt stack 19
 51539                           
 51540                           ;incstack = 0
 51541                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 51542  00C600  0100               	movlb	0	; () banked
 51543  00C602  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 51544                           
 51545                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 51546  00C604  C060  F143         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 51547  00C608  0012               	return		;funcret
 51548  00C60A                     __end_of_RADIO_SetLoRaSyncWord:
 51549                           	opt stack 0
 51550                           tosu	equ	0xFFF
 51551                           tosh	equ	0xFFE
 51552                           tosl	equ	0xFFD
 51553                           pclath	equ	0xFFA
 51554                           tblptru	equ	0xFF8
 51555                           tblptrh	equ	0xFF7
 51556                           tblptrl	equ	0xFF6
 51557                           tablat	equ	0xFF5
 51558                           prodh	equ	0xFF4
 51559                           prodl	equ	0xFF3
 51560                           intcon	equ	0xFF2
 51561                           intcon2	equ	0xFF1
 51562                           intcon3	equ	0xFF0
 51563                           indf0	equ	0xFEF
 51564                           postinc0	equ	0xFEE
 51565                           plusw0	equ	0xFEB
 51566                           fsr0h	equ	0xFEA
 51567                           fsr0l	equ	0xFE9
 51568                           wreg	equ	0xFE8
 51569                           postinc1	equ	0xFE6
 51570                           postdec1	equ	0xFE5
 51571                           plusw1	equ	0xFE3
 51572                           fsr1h	equ	0xFE2
 51573                           fsr1l	equ	0xFE1
 51574                           indf2	equ	0xFDF
 51575                           postinc2	equ	0xFDE
 51576                           postdec2	equ	0xFDD
 51577                           plusw2	equ	0xFDB
 51578                           fsr2h	equ	0xFDA
 51579                           fsr2l	equ	0xFD9
 51580                           status	equ	0xFD8
 51581                           
 51582 ;; *************** function _RADIO_Init *****************
 51583 ;; Defined at:
 51584 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 51585 ;; Parameters:    Size  Location     Type
 51586 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 51587 ;;		 -> radioBuffer(271), 
 51588 ;;  frequency       4   27[BANK0 ] unsigned long 
 51589 ;; Auto vars:     Size  Location     Type
 51590 ;;		None
 51591 ;; Return value:  Size  Location     Type
 51592 ;;                  1    wreg      void 
 51593 ;; Registers used:
 51594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51595 ;; Tracked objects:
 51596 ;;		On entry : 0/0
 51597 ;;		On exit  : 0/0
 51598 ;;		Unchanged: 0/0
 51599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 51600 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51602 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51603 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51604 ;;Total ram usage:        7 bytes
 51605 ;; Hardware stack levels used:    1
 51606 ;; Hardware stack levels required when called:   11
 51607 ;; This function calls:
 51608 ;;		_RADIO_RegisterRead
 51609 ;;		_RADIO_RegisterWrite
 51610 ;;		_RADIO_Reset
 51611 ;;		_RADIO_WriteFrequency
 51612 ;;		_RADIO_WriteMode
 51613 ;;		_SwTimerCreate
 51614 ;;		_SwTimerSetCallback
 51615 ;;		_SwTimerStop
 51616 ;; This function is called by:
 51617 ;;		_LORAWAN_Init
 51618 ;;		_LORAWAN_Reset
 51619 ;; This function uses a non-reentrant model
 51620 ;;
 51621                           
 51622                           	psect	text270
 51623  0067E0                     __ptext270:
 51624                           	opt stack 0
 51625  0067E0                     _RADIO_Init:
 51626                           	opt stack 18
 51627                           
 51628                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 51629                           
 51630                           ;incstack = 0
 51631  0067E0  C07B  F135         	movff	RADIO_Init@frequency,_RadioConfiguration
 51632  0067E4  C07C  F136         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 51633  0067E8  C07D  F137         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 51634  0067EC  C07E  F138         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 51635                           
 51636                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 51637  0067F0  0EA8               	movlw	168
 51638  0067F2  0101               	movlb	1	; () banked
 51639  0067F4  6F39               	movwf	(_RadioConfiguration+4)& (0+255),b
 51640  0067F6  0E61               	movlw	97
 51641  0067F8  6F3A               	movwf	(_RadioConfiguration+5)& (0+255),b
 51642  0067FA  0E00               	movlw	0
 51643  0067FC  6F3B               	movwf	(_RadioConfiguration+6)& (0+255),b
 51644  0067FE  0E00               	movlw	0
 51645  006800  6F3C               	movwf	(_RadioConfiguration+7)& (0+255),b
 51646                           
 51647                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 51648  006802  0E50               	movlw	80
 51649  006804  6F3D               	movwf	(_RadioConfiguration+8)& (0+255),b
 51650  006806  0EC3               	movlw	195
 51651  006808  6F3E               	movwf	(_RadioConfiguration+9)& (0+255),b
 51652  00680A  0E00               	movlw	0
 51653  00680C  6F3F               	movwf	(_RadioConfiguration+10)& (0+255),b
 51654  00680E  0E00               	movlw	0
 51655  006810  6F40               	movwf	(_RadioConfiguration+11)& (0+255),b
 51656                           
 51657                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 51658  006812  0E01               	movlw	1
 51659  006814  6F4D               	movwf	(_RadioConfiguration+24)& (0+255),b
 51660                           
 51661                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 51662  006816  0E07               	movlw	7
 51663  006818  6F4F               	movwf	(_RadioConfiguration+26)& (0+255),b
 51664                           
 51665                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 51666  00681A  0E01               	movlw	1
 51667  00681C  6F50               	movwf	(_RadioConfiguration+27)& (0+255),b
 51668                           
 51669                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 51670  00681E  0E01               	movlw	1
 51671  006820  6F56               	movwf	(_RadioConfiguration+33)& (0+255),b
 51672                           
 51673                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 51674  006822  0E00               	movlw	0
 51675  006824  6F57               	movwf	(_RadioConfiguration+34)& (0+255),b
 51676                           
 51677                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 51678  006826  0E00               	movlw	0
 51679  006828  6F42               	movwf	(_RadioConfiguration+13)& (0+255),b
 51680  00682A  0E08               	movlw	8
 51681  00682C  6F41               	movwf	(_RadioConfiguration+12)& (0+255),b
 51682                           
 51683                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 51684  00682E  0E0C               	movlw	12
 51685  006830  6F4E               	movwf	(_RadioConfiguration+25)& (0+255),b
 51686                           
 51687                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 51688  006832  0E01               	movlw	1
 51689  006834  6F51               	movwf	(_RadioConfiguration+28)& (0+255),b
 51690                           
 51691                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 51692  006836  0E00               	movlw	0
 51693  006838  6F52               	movwf	(_RadioConfiguration+29)& (0+255),b
 51694                           
 51695                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 51696  00683A  0E00               	movlw	0
 51697  00683C  6F55               	movwf	(_RadioConfiguration+32)& (0+255),b
 51698                           
 51699                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 51700  00683E  0EC1               	movlw	193
 51701  006840  6F44               	movwf	(_RadioConfiguration+15)& (0+255),b
 51702                           
 51703                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 51704  006842  0E94               	movlw	148
 51705  006844  6F45               	movwf	(_RadioConfiguration+16)& (0+255),b
 51706                           
 51707                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 51708  006846  0EC1               	movlw	193
 51709  006848  6F46               	movwf	(_RadioConfiguration+17)& (0+255),b
 51710                           
 51711                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 51712  00684A  0E03               	movlw	3
 51713  00684C  6F4C               	movwf	(_RadioConfiguration+23)& (0+255),b
 51714                           
 51715                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 51716  00684E  0E34               	movlw	52
 51717  006850  6F43               	movwf	(_RadioConfiguration+14)& (0+255),b
 51718                           
 51719                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 51720  006852  0E00               	movlw	0
 51721  006854  6F58               	movwf	(_RadioConfiguration+35)& (0+255),b
 51722                           
 51723                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 51724  006856  0E00               	movlw	0
 51725  006858  6F59               	movwf	(_RadioConfiguration+36)& (0+255),b
 51726                           
 51727                           ; BSR set to: 1
 51728                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 51729  00685A  C079  F15A         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 51730  00685E  C07A  F15B         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 51731                           
 51732                           ; BSR set to: 1
 51733                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 51734  006862  0E00               	movlw	0
 51735  006864  6F54               	movwf	(_RadioConfiguration+31)& (0+255),b
 51736  006866  0E00               	movlw	0
 51737  006868  6F53               	movwf	(_RadioConfiguration+30)& (0+255),b
 51738                           
 51739                           ; BSR set to: 1
 51740                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 51741  00686A  0E80               	movlw	128
 51742  00686C  6F67               	movwf	(_RadioConfiguration+50)& (0+255),b
 51743                           
 51744                           ; BSR set to: 1
 51745                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 51746  00686E  0E98               	movlw	152
 51747  006870  6F5F               	movwf	(_RadioConfiguration+42)& (0+255),b
 51748  006872  0E3A               	movlw	58
 51749  006874  6F60               	movwf	(_RadioConfiguration+43)& (0+255),b
 51750  006876  0E00               	movlw	0
 51751  006878  6F61               	movwf	(_RadioConfiguration+44)& (0+255),b
 51752  00687A  0E00               	movlw	0
 51753  00687C  6F62               	movwf	(_RadioConfiguration+45)& (0+255),b
 51754                           
 51755                           ; BSR set to: 1
 51756                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 51757  00687E  0E02               	movlw	2
 51758  006880  6F68               	movwf	(_RadioConfiguration+51)& (0+255),b
 51759                           
 51760                           ; BSR set to: 1
 51761                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 51762  006882  0E0B               	movlw	11
 51763  006884  6F69               	movwf	(_RadioConfiguration+52)& (0+255),b
 51764                           
 51765                           ; BSR set to: 1
 51766                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 51767  006886  0E12               	movlw	18
 51768  006888  6F6A               	movwf	(_RadioConfiguration+53)& (0+255),b
 51769                           
 51770                           ; BSR set to: 1
 51771                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 51772  00688A  0E00               	movlw	0
 51773  00688C  6F64               	movwf	(_RadioConfiguration+47)& (0+255),b
 51774  00688E  0E00               	movlw	0
 51775  006890  6F65               	movwf	(_RadioConfiguration+48)& (0+255),b
 51776                           
 51777                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 51778  006892  5163               	movf	(_RadioConfiguration+46)& (0+255),w,b
 51779  006894  A4D8               	btfss	status,2,c
 51780  006896  D026               	goto	l770
 51781                           
 51782                           ; BSR set to: 1
 51783                           ;radio_driver_SX1276.c: 457: {
 51784                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 51785  006898  EC15  F04F         	call	_SwTimerCreate	;wreg free
 51786  00689C  0101               	movlb	1	; () banked
 51787  00689E  6F5C               	movwf	(_RadioConfiguration+39)& (0+255),b
 51788                           
 51789                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 51790  0068A0  EC15  F04F         	call	_SwTimerCreate	;wreg free
 51791  0068A4  0101               	movlb	1	; () banked
 51792  0068A6  6F5D               	movwf	(_RadioConfiguration+40)& (0+255),b
 51793                           
 51794                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 51795  0068A8  EC15  F04F         	call	_SwTimerCreate	;wreg free
 51796  0068AC  0101               	movlb	1	; () banked
 51797  0068AE  6F5E               	movwf	(_RadioConfiguration+41)& (0+255),b
 51798                           
 51799                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 51800  0068B0  0EB4               	movlw	low _RADIO_RxFSKTimeout
 51801  0068B2  0100               	movlb	0	; () banked
 51802  0068B4  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 51803  0068B6  0EB7               	movlw	high _RADIO_RxFSKTimeout
 51804  0068B8  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 51805  0068BA  0E00               	movlw	0
 51806  0068BC  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 51807  0068BE  0101               	movlb	1	; () banked
 51808  0068C0  515D               	movf	(_RadioConfiguration+40)& (0+255),w,b
 51809  0068C2  ECB5  F05A         	call	_SwTimerSetCallback
 51810                           
 51811                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 51812  0068C6  0E44               	movlw	low _RADIO_WatchdogTimeout
 51813  0068C8  0100               	movlb	0	; () banked
 51814  0068CA  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 51815  0068CC  0EB3               	movlw	high _RADIO_WatchdogTimeout
 51816  0068CE  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 51817  0068D0  0E00               	movlw	0
 51818  0068D2  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 51819  0068D4  0101               	movlb	1	; () banked
 51820  0068D6  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 51821  0068D8  ECB5  F05A         	call	_SwTimerSetCallback
 51822                           
 51823                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 51824  0068DC  0E01               	movlw	1
 51825  0068DE  0101               	movlb	1	; () banked
 51826  0068E0  6F63               	movwf	(_RadioConfiguration+46)& (0+255),b
 51827                           
 51828                           ;radio_driver_SX1276.c: 466: }
 51829  0068E2  D00B               	goto	l771
 51830  0068E4                     l770:
 51831                           
 51832                           ; BSR set to: 1
 51833                           ;radio_driver_SX1276.c: 467: else
 51834                           ;radio_driver_SX1276.c: 468: {
 51835                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 51836                           
 51837                           ; BSR set to: 1
 51838  0068E4  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 51839  0068E6  ECAA  F05E         	call	_SwTimerStop
 51840                           
 51841                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 51842  0068EA  0101               	movlb	1	; () banked
 51843  0068EC  515D               	movf	(_RadioConfiguration+40)& (0+255),w,b
 51844  0068EE  ECAA  F05E         	call	_SwTimerStop
 51845                           
 51846                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 51847  0068F2  0101               	movlb	1	; () banked
 51848  0068F4  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 51849  0068F6  ECAA  F05E         	call	_SwTimerStop
 51850  0068FA                     l771:
 51851                           
 51852                           ;radio_driver_SX1276.c: 472: }
 51853                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 51854  0068FA  ECE8  F059         	call	_RADIO_Reset	;wreg free
 51855                           
 51856                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 51857  0068FE  0E00               	movlw	0
 51858  006900  0100               	movlb	0	; () banked
 51859  006902  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 51860  006904  0E01               	movlw	1
 51861  006906  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 51862  006908  0E01               	movlw	1
 51863  00690A  ECDE  F043         	call	_RADIO_WriteMode
 51864                           
 51865                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 51866  00690E  C135  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 51867  006912  C136  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 51868  006916  C137  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 51869  00691A  C138  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 51870  00691E  ECC3  F046         	call	_RADIO_WriteFrequency	;wreg free
 51871                           
 51872                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 51873  006922  0E42               	movlw	66
 51874  006924  0100               	movlb	0	; () banked
 51875  006926  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51876  006928  0E3B               	movlw	59
 51877  00692A  ECEF  F05F         	call	_RADIO_RegisterWrite
 51878  00692E                     
 51879                           ;radio_driver_SX1276.c: 490: ;
 51880  00692E  0E3B               	movlw	59
 51881  006930  EC96  F05E         	call	_RADIO_RegisterRead
 51882  006934  0100               	movlb	0	; () banked
 51883  006936  6F7F               	movwf	??_RADIO_Init& (0+255),b
 51884  006938  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 51885  00693A  D7F9               	goto	l773
 51886                           
 51887                           ; BSR set to: 0
 51888                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 51889                           
 51890                           ; BSR set to: 0
 51891  00693C  0E23               	movlw	35
 51892  00693E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51893  006940  0E0C               	movlw	12
 51894  006942  ECEF  F05F         	call	_RADIO_RegisterWrite
 51895                           
 51896                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 51897  006946  0E1E               	movlw	30
 51898  006948  0100               	movlb	0	; () banked
 51899  00694A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51900  00694C  0E0D               	movlw	13
 51901  00694E  ECEF  F05F         	call	_RADIO_RegisterWrite
 51902                           
 51903                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 51904  006952  0EAA               	movlw	170
 51905  006954  0100               	movlb	0	; () banked
 51906  006956  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51907  006958  0E1F               	movlw	31
 51908  00695A  ECEF  F05F         	call	_RADIO_RegisterWrite
 51909                           
 51910                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 51911  00695E  0E8F               	movlw	143
 51912  006960  0100               	movlb	0	; () banked
 51913  006962  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51914  006964  0E35               	movlw	53
 51915  006966  ECEF  F05F         	call	_RADIO_RegisterWrite
 51916                           
 51917                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 51918  00696A  0EFF               	movlw	255
 51919  00696C  0100               	movlb	0	; () banked
 51920  00696E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51921  006970  0E32               	movlw	50
 51922  006972  ECEF  F05F         	call	_RADIO_RegisterWrite
 51923                           
 51924                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 51925  006976  0E40               	movlw	64
 51926  006978  0100               	movlb	0	; () banked
 51927  00697A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51928  00697C  0E31               	movlw	49
 51929  00697E  ECEF  F05F         	call	_RADIO_RegisterWrite
 51930                           
 51931                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 51932  006982  0E01               	movlw	1
 51933  006984  0100               	movlb	0	; () banked
 51934  006986  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 51935  006988  0E01               	movlw	1
 51936  00698A  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 51937  00698C  0E00               	movlw	0
 51938  00698E  ECDE  F043         	call	_RADIO_WriteMode
 51939                           
 51940                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 51941  006992  0EFF               	movlw	255
 51942  006994  0100               	movlb	0	; () banked
 51943  006996  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51944  006998  0E23               	movlw	35
 51945  00699A  ECEF  F05F         	call	_RADIO_RegisterWrite
 51946                           
 51947                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 51948  00699E  0E42               	movlw	66
 51949  0069A0  EC96  F05E         	call	_RADIO_RegisterRead
 51950  0069A4  0101               	movlb	1	; () banked
 51951  0069A6  6F66               	movwf	(_RadioConfiguration+49)& (0+255),b
 51952                           
 51953                           ; BSR set to: 1
 51954  0069A8  0012               	return		;funcret
 51955  0069AA                     __end_of_RADIO_Init:
 51956                           	opt stack 0
 51957                           tosu	equ	0xFFF
 51958                           tosh	equ	0xFFE
 51959                           tosl	equ	0xFFD
 51960                           pclath	equ	0xFFA
 51961                           tblptru	equ	0xFF8
 51962                           tblptrh	equ	0xFF7
 51963                           tblptrl	equ	0xFF6
 51964                           tablat	equ	0xFF5
 51965                           prodh	equ	0xFF4
 51966                           prodl	equ	0xFF3
 51967                           intcon	equ	0xFF2
 51968                           intcon2	equ	0xFF1
 51969                           intcon3	equ	0xFF0
 51970                           indf0	equ	0xFEF
 51971                           postinc0	equ	0xFEE
 51972                           plusw0	equ	0xFEB
 51973                           fsr0h	equ	0xFEA
 51974                           fsr0l	equ	0xFE9
 51975                           wreg	equ	0xFE8
 51976                           postinc1	equ	0xFE6
 51977                           postdec1	equ	0xFE5
 51978                           plusw1	equ	0xFE3
 51979                           fsr1h	equ	0xFE2
 51980                           fsr1l	equ	0xFE1
 51981                           indf2	equ	0xFDF
 51982                           postinc2	equ	0xFDE
 51983                           postdec2	equ	0xFDD
 51984                           plusw2	equ	0xFDB
 51985                           fsr2h	equ	0xFDA
 51986                           fsr2l	equ	0xFD9
 51987                           status	equ	0xFD8
 51988                           
 51989 ;; *************** function _SwTimerSetCallback *****************
 51990 ;; Defined at:
 51991 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 51992 ;; Parameters:    Size  Location     Type
 51993 ;;  timerId         1    wreg     unsigned char 
 51994 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 51995 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 51996 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 51997 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 51998 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 51999 ;; Auto vars:     Size  Location     Type
 52000 ;;  timerId         1    3[BANK0 ] unsigned char 
 52001 ;; Return value:  Size  Location     Type
 52002 ;;                  1    wreg      void 
 52003 ;; Registers used:
 52004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 52005 ;; Tracked objects:
 52006 ;;		On entry : 0/0
 52007 ;;		On exit  : 0/0
 52008 ;;		Unchanged: 0/0
 52009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52010 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52013 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52014 ;;Total ram usage:        4 bytes
 52015 ;; Hardware stack levels used:    1
 52016 ;; Hardware stack levels required when called:    7
 52017 ;; This function calls:
 52018 ;;		Nothing
 52019 ;; This function is called by:
 52020 ;;		_RADIO_Init
 52021 ;;		_SetCallbackSoftwareTimers
 52022 ;; This function uses a non-reentrant model
 52023 ;;
 52024                           
 52025                           	psect	text271
 52026  00B56A                     __ptext271:
 52027                           	opt stack 0
 52028  00B56A                     _SwTimerSetCallback:
 52029                           	opt stack 21
 52030                           
 52031                           ; BSR set to: 1
 52032                           ;incstack = 0
 52033                           ;SwTimerSetCallback@timerId stored from wreg
 52034  00B56A  0100               	movlb	0	; () banked
 52035  00B56C  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 52036                           
 52037                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 52038  00B56E  0100               	movlb	0	; () banked
 52039  00B570  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 52040  00B572  0D08               	mullw	8
 52041  00B574  0E06               	movlw	6
 52042  00B576  26F3               	addwf	prodl,f,c
 52043  00B578  0E00               	movlw	0
 52044  00B57A  22F4               	addwfc	prodh,f,c
 52045  00B57C  0E00               	movlw	low _swTimers
 52046  00B57E  24F3               	addwf	prodl,w,c
 52047  00B580  6ED9               	movwf	fsr2l,c
 52048  00B582  0E03               	movlw	high _swTimers
 52049  00B584  20F4               	addwfc	prodh,w,c
 52050  00B586  6EDA               	movwf	fsr2h,c
 52051  00B588  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 52052  00B58C  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 52053                           
 52054                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 52055  00B590  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 52056  00B592  0D08               	mullw	8
 52057  00B594  0E05               	movlw	5
 52058  00B596  26F3               	addwf	prodl,f,c
 52059  00B598  0E00               	movlw	0
 52060  00B59A  22F4               	addwfc	prodh,f,c
 52061  00B59C  0E00               	movlw	low _swTimers
 52062  00B59E  24F3               	addwf	prodl,w,c
 52063  00B5A0  6ED9               	movwf	fsr2l,c
 52064  00B5A2  0E03               	movlw	high _swTimers
 52065  00B5A4  20F4               	addwfc	prodh,w,c
 52066  00B5A6  6EDA               	movwf	fsr2h,c
 52067  00B5A8  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 52068                           
 52069                           ; BSR set to: 0
 52070  00B5AC  0012               	return		;funcret
 52071  00B5AE                     __end_of_SwTimerSetCallback:
 52072                           	opt stack 0
 52073                           tosu	equ	0xFFF
 52074                           tosh	equ	0xFFE
 52075                           tosl	equ	0xFFD
 52076                           pclath	equ	0xFFA
 52077                           tblptru	equ	0xFF8
 52078                           tblptrh	equ	0xFF7
 52079                           tblptrl	equ	0xFF6
 52080                           tablat	equ	0xFF5
 52081                           prodh	equ	0xFF4
 52082                           prodl	equ	0xFF3
 52083                           intcon	equ	0xFF2
 52084                           intcon2	equ	0xFF1
 52085                           intcon3	equ	0xFF0
 52086                           indf0	equ	0xFEF
 52087                           postinc0	equ	0xFEE
 52088                           plusw0	equ	0xFEB
 52089                           fsr0h	equ	0xFEA
 52090                           fsr0l	equ	0xFE9
 52091                           wreg	equ	0xFE8
 52092                           postinc1	equ	0xFE6
 52093                           postdec1	equ	0xFE5
 52094                           plusw1	equ	0xFE3
 52095                           fsr1h	equ	0xFE2
 52096                           fsr1l	equ	0xFE1
 52097                           indf2	equ	0xFDF
 52098                           postinc2	equ	0xFDE
 52099                           postdec2	equ	0xFDD
 52100                           plusw2	equ	0xFDB
 52101                           fsr2h	equ	0xFDA
 52102                           fsr2l	equ	0xFD9
 52103                           status	equ	0xFD8
 52104                           
 52105 ;; *************** function _RADIO_WriteMode *****************
 52106 ;; Defined at:
 52107 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 52108 ;; Parameters:    Size  Location     Type
 52109 ;;  newMode         1    wreg     enum E7718
 52110 ;;  newModulatio    1    5[BANK0 ] enum E6984
 52111 ;;  blocking        1    6[BANK0 ] unsigned char 
 52112 ;; Auto vars:     Size  Location     Type
 52113 ;;  newMode         1   10[BANK0 ] enum E7718
 52114 ;;  opMode          1   11[BANK0 ] unsigned char 
 52115 ;;  currentMode     1    9[BANK0 ] enum E7718
 52116 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 52117 ;;  currentModul    1    7[BANK0 ] enum E6984
 52118 ;; Return value:  Size  Location     Type
 52119 ;;                  1    wreg      void 
 52120 ;; Registers used:
 52121 ;;		wreg, status,2, status,0, cstack
 52122 ;; Tracked objects:
 52123 ;;		On entry : 0/0
 52124 ;;		On exit  : 0/0
 52125 ;;		Unchanged: 0/0
 52126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52127 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52128 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52130 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52131 ;;Total ram usage:        7 bytes
 52132 ;; Hardware stack levels used:    1
 52133 ;; Hardware stack levels required when called:   10
 52134 ;; This function calls:
 52135 ;;		_HALDIO5PinValue
 52136 ;;		_RADIO_RegisterRead
 52137 ;;		_RADIO_RegisterWrite
 52138 ;;		_SystemBlockingWaitMs
 52139 ;; This function is called by:
 52140 ;;		_RADIO_Init
 52141 ;;		_RADIO_WriteConfiguration
 52142 ;;		_RADIO_Transmit
 52143 ;;		_RADIO_ReceiveStart
 52144 ;;		_RADIO_ReceiveStop
 52145 ;;		_RADIO_RxDone
 52146 ;;		_RADIO_FSKPayloadReady
 52147 ;;		_RADIO_RxTimeout
 52148 ;;		_RADIO_TxDone
 52149 ;;		_RADIO_FSKPacketSent
 52150 ;;		_RADIO_ReadRandom
 52151 ;;		_RADIO_RxFSKTimeout
 52152 ;;		_RADIO_WatchdogTimeout
 52153 ;;		_RADIO_StopCW
 52154 ;; This function uses a non-reentrant model
 52155 ;;
 52156                           
 52157                           	psect	text272
 52158  0087BC                     __ptext272:
 52159                           	opt stack 0
 52160  0087BC                     _RADIO_WriteMode:
 52161                           	opt stack 18
 52162                           
 52163                           ; BSR set to: 0
 52164                           ;incstack = 0
 52165                           ;RADIO_WriteMode@newMode stored from wreg
 52166  0087BC  0100               	movlb	0	; () banked
 52167  0087BE  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 52168                           
 52169                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 52170                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 52171                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 52172                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 52173                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 52174                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 52175  0087C0  0100               	movlb	0	; () banked
 52176  0087C2  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 52177  0087C4  A4D8               	btfss	status,2,c
 52178  0087C6  D008               	goto	l716
 52179                           
 52180                           ; BSR set to: 0
 52181  0087C8  0E06               	movlw	6
 52182  0087CA  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 52183  0087CC  B4D8               	btfsc	status,2,c
 52184  0087CE  0012               	return	
 52185                           
 52186                           ; BSR set to: 0
 52187  0087D0  0E07               	movlw	7
 52188  0087D2  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 52189  0087D4  B4D8               	btfsc	status,2,c
 52190  0087D6  0012               	return	
 52191  0087D8                     l716:
 52192                           
 52193                           ; BSR set to: 0
 52194                           ;radio_driver_SX1276.c: 159: }
 52195                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 52196                           
 52197                           ; BSR set to: 0
 52198  0087D8  0E07               	movlw	7
 52199  0087DA  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 52200                           
 52201                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 52202  0087DC  0E01               	movlw	1
 52203  0087DE  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 52204                           
 52205                           ; BSR set to: 0
 52206                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 52207  0087E0  0E01               	movlw	1
 52208  0087E2  EC96  F05E         	call	_RADIO_RegisterRead
 52209  0087E6  0100               	movlb	0	; () banked
 52210  0087E8  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 52211                           
 52212                           ; BSR set to: 0
 52213                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 52214  0087EA  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 52215  0087EC  D002               	goto	l720
 52216                           
 52217                           ; BSR set to: 0
 52218                           ;radio_driver_SX1276.c: 168: {
 52219                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 52220  0087EE  0E01               	movlw	1
 52221  0087F0  D001               	goto	L29
 52222  0087F2                     l720:
 52223                           
 52224                           ; BSR set to: 0
 52225                           ;radio_driver_SX1276.c: 171: else
 52226                           ;radio_driver_SX1276.c: 172: {
 52227                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 52228                           
 52229                           ; BSR set to: 0
 52230  0087F2  0E00               	movlw	0
 52231  0087F4                     L29:
 52232  0087F4  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 52233                           
 52234                           ; BSR set to: 0
 52235                           ;radio_driver_SX1276.c: 174: }
 52236                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 52237                           
 52238                           ; BSR set to: 0
 52239  0087F6  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 52240  0087F8  0B07               	andlw	7
 52241  0087FA  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 52242                           
 52243                           ; BSR set to: 0
 52244                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 52245  0087FC  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 52246  0087FE  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 52247  008800  B4D8               	btfsc	status,2,c
 52248  008802  D01B               	goto	l722
 52249                           
 52250                           ; BSR set to: 0
 52251                           ;radio_driver_SX1276.c: 181: {
 52252                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 52253  008804  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 52254  008806  B4D8               	btfsc	status,2,c
 52255  008808  D009               	goto	l723
 52256                           
 52257                           ; BSR set to: 0
 52258                           ;radio_driver_SX1276.c: 184: {
 52259                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 52260  00880A  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 52261  00880C  0BF8               	andlw	248
 52262  00880E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 52263  008810  0E01               	movlw	1
 52264  008812  ECEF  F05F         	call	_RADIO_RegisterWrite
 52265                           
 52266                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 52267  008816  0E00               	movlw	0
 52268  008818  0100               	movlb	0	; () banked
 52269  00881A  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 52270  00881C                     l723:
 52271                           
 52272                           ; BSR set to: 0
 52273                           ;radio_driver_SX1276.c: 188: }
 52274                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 52275                           
 52276                           ; BSR set to: 0
 52277  00881C  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 52278  00881E  A4D8               	btfss	status,2,c
 52279  008820  D003               	goto	l724
 52280                           
 52281                           ; BSR set to: 0
 52282                           ;radio_driver_SX1276.c: 191: {
 52283                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 52284  008822  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 52285  008824  0B78               	andlw	120
 52286  008826  D003               	goto	L30
 52287  008828                     l724:
 52288                           
 52289                           ; BSR set to: 0
 52290                           ;radio_driver_SX1276.c: 195: else
 52291                           ;radio_driver_SX1276.c: 196: {
 52292                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 52293                           
 52294                           ; BSR set to: 0
 52295  008828  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 52296  00882A  0B78               	andlw	120
 52297  00882C  0980               	iorlw	128
 52298  00882E                     L30:
 52299  00882E  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 52300                           
 52301                           ; BSR set to: 0
 52302                           ;radio_driver_SX1276.c: 199: }
 52303                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 52304                           
 52305                           ; BSR set to: 0
 52306  008830  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 52307  008834  0E01               	movlw	1
 52308  008836  ECEF  F05F         	call	_RADIO_RegisterWrite
 52309  00883A                     l722:
 52310                           
 52311                           ;radio_driver_SX1276.c: 201: }
 52312                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 52313  00883A  0100               	movlb	0	; () banked
 52314  00883C  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 52315  00883E  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 52316  008840  B4D8               	btfsc	status,2,c
 52317  008842  0012               	return	
 52318                           
 52319                           ; BSR set to: 0
 52320                           ;radio_driver_SX1276.c: 208: {
 52321                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 52322  008844  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 52323  008846  B4D8               	btfsc	status,2,c
 52324  008848  D015               	goto	l727
 52325                           
 52326                           ; BSR set to: 0
 52327  00884A  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 52328  00884C  A4D8               	btfss	status,2,c
 52329  00884E  D012               	goto	l727
 52330                           
 52331                           ; BSR set to: 0
 52332                           ;radio_driver_SX1276.c: 212: {
 52333                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 52334  008850  0E41               	movlw	65
 52335  008852  EC96  F05E         	call	_RADIO_RegisterRead
 52336  008856  0100               	movlb	0	; () banked
 52337  008858  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 52338                           
 52339                           ; BSR set to: 0
 52340                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 52341  00885A  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 52342  00885C  A4D8               	btfss	status,2,c
 52343  00885E  D003               	goto	l728
 52344                           
 52345                           ; BSR set to: 0
 52346                           ;radio_driver_SX1276.c: 215: {
 52347                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 52348  008860  0E30               	movlw	48
 52349  008862  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 52350                           
 52351                           ;radio_driver_SX1276.c: 218: }
 52352  008864  D002               	goto	l729
 52353  008866                     l728:
 52354                           
 52355                           ; BSR set to: 0
 52356                           ;radio_driver_SX1276.c: 219: else
 52357                           ;radio_driver_SX1276.c: 220: {
 52358                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 52359                           
 52360                           ; BSR set to: 0
 52361  008866  0ECF               	movlw	207
 52362  008868  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 52363  00886A                     l729:
 52364                           
 52365                           ; BSR set to: 0
 52366                           ;radio_driver_SX1276.c: 223: }
 52367                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 52368                           
 52369                           ; BSR set to: 0
 52370  00886A  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 52371  00886E  0E41               	movlw	65
 52372  008870  ECEF  F05F         	call	_RADIO_RegisterWrite
 52373  008874                     l727:
 52374                           
 52375                           ;radio_driver_SX1276.c: 225: }
 52376                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 52377  008874  0EF8               	movlw	248
 52378  008876  0100               	movlb	0	; () banked
 52379  008878  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 52380                           
 52381                           ; BSR set to: 0
 52382                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 52383  00887A  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 52384  00887C  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 52385                           
 52386                           ; BSR set to: 0
 52387                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 52388  00887E  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 52389  008882  0E01               	movlw	1
 52390  008884  ECEF  F05F         	call	_RADIO_RegisterWrite
 52391                           
 52392                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 52393  008888  0100               	movlb	0	; () banked
 52394  00888A  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 52395  00888C  A4D8               	btfss	status,2,c
 52396  00888E  0012               	return	
 52397                           
 52398                           ; BSR set to: 0
 52399                           ;radio_driver_SX1276.c: 234: {
 52400                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 52401  008890  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 52402  008892  B4D8               	btfsc	status,2,c
 52403  008894  D006               	goto	l731
 52404  008896                     u19420:
 52405                           
 52406                           ; BSR set to: 0
 52407                           
 52408                           ;radio_driver_SX1276.c: 238: ;
 52409                           
 52410                           ; BSR set to: 0
 52411                           
 52412                           ; BSR set to: 0
 52413                           ;radio_driver_SX1276.c: 236: {
 52414                           ;radio_driver_SX1276.c: 237: while (HALDIO5PinValue() == 0)
 52415  008896  EC91  F062         	call	_HALDIO5PinValue	;wreg free
 52416  00889A  0900               	iorlw	0
 52417  00889C  A4D8               	btfss	status,2,c
 52418  00889E  0012               	return	
 52419  0088A0  D7FA               	goto	u19420
 52420  0088A2                     l731:
 52421                           
 52422                           ;radio_driver_SX1276.c: 240: else
 52423                           ;radio_driver_SX1276.c: 241: {
 52424                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 52425  0088A2  0E01               	movlw	1
 52426  0088A4  0100               	movlb	0	; () banked
 52427  0088A6  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 52428  0088A8  0E00               	movlw	0
 52429  0088AA  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 52430  0088AC  0E00               	movlw	0
 52431  0088AE  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 52432  0088B0  0E00               	movlw	0
 52433  0088B2  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 52434  0088B4  EC0B  F05D         	call	_SystemBlockingWaitMs	;wreg free
 52435  0088B8  0012               	return	
 52436  0088BA                     __end_of_RADIO_WriteMode:
 52437                           	opt stack 0
 52438                           tosu	equ	0xFFF
 52439                           tosh	equ	0xFFE
 52440                           tosl	equ	0xFFD
 52441                           pclath	equ	0xFFA
 52442                           tblptru	equ	0xFF8
 52443                           tblptrh	equ	0xFF7
 52444                           tblptrl	equ	0xFF6
 52445                           tablat	equ	0xFF5
 52446                           prodh	equ	0xFF4
 52447                           prodl	equ	0xFF3
 52448                           intcon	equ	0xFF2
 52449                           intcon2	equ	0xFF1
 52450                           intcon3	equ	0xFF0
 52451                           indf0	equ	0xFEF
 52452                           postinc0	equ	0xFEE
 52453                           plusw0	equ	0xFEB
 52454                           fsr0h	equ	0xFEA
 52455                           fsr0l	equ	0xFE9
 52456                           wreg	equ	0xFE8
 52457                           postinc1	equ	0xFE6
 52458                           postdec1	equ	0xFE5
 52459                           plusw1	equ	0xFE3
 52460                           fsr1h	equ	0xFE2
 52461                           fsr1l	equ	0xFE1
 52462                           indf2	equ	0xFDF
 52463                           postinc2	equ	0xFDE
 52464                           postdec2	equ	0xFDD
 52465                           plusw2	equ	0xFDB
 52466                           fsr2h	equ	0xFDA
 52467                           fsr2l	equ	0xFD9
 52468                           status	equ	0xFD8
 52469                           
 52470 ;; *************** function _RADIO_RegisterRead *****************
 52471 ;; Defined at:
 52472 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 52473 ;; Parameters:    Size  Location     Type
 52474 ;;  reg             1    wreg     unsigned char 
 52475 ;; Auto vars:     Size  Location     Type
 52476 ;;  reg             1    2[BANK0 ] unsigned char 
 52477 ;;  readValue       1    3[BANK0 ] unsigned char 
 52478 ;; Return value:  Size  Location     Type
 52479 ;;                  1    wreg      unsigned char 
 52480 ;; Registers used:
 52481 ;;		wreg, status,2, status,0, cstack
 52482 ;; Tracked objects:
 52483 ;;		On entry : 0/0
 52484 ;;		On exit  : 0/0
 52485 ;;		Unchanged: 0/0
 52486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52488 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52490 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52491 ;;Total ram usage:        2 bytes
 52492 ;; Hardware stack levels used:    1
 52493 ;; Hardware stack levels required when called:    9
 52494 ;; This function calls:
 52495 ;;		_HALSPICSAssert
 52496 ;;		_HALSPICSDeassert
 52497 ;;		_HALSPISend
 52498 ;; This function is called by:
 52499 ;;		_RADIO_WriteMode
 52500 ;;		_RADIO_WritePower
 52501 ;;		_RADIO_Init
 52502 ;;		_RADIO_WriteConfiguration
 52503 ;;		_RADIO_Transmit
 52504 ;;		_RADIO_RxDone
 52505 ;;		_RADIO_FSKPayloadReady
 52506 ;;		_RADIO_FSKPacketSent
 52507 ;;		_RADIO_FHSSChangeChannel
 52508 ;;		_RADIO_DIO0
 52509 ;;		_RADIO_DIO1
 52510 ;;		_RADIO_DIO2
 52511 ;;		_RADIO_DIO3
 52512 ;;		_RADIO_DIO4
 52513 ;;		_RADIO_DIO5
 52514 ;;		_RADIO_ReadRandom
 52515 ;;		_RADIO_RxFSKTimeout
 52516 ;; This function uses a non-reentrant model
 52517 ;;
 52518                           
 52519                           	psect	text273
 52520  00BD2C                     __ptext273:
 52521                           	opt stack 0
 52522  00BD2C                     _RADIO_RegisterRead:
 52523                           	opt stack 18
 52524                           
 52525                           ;incstack = 0
 52526                           ;RADIO_RegisterRead@reg stored from wreg
 52527  00BD2C  0100               	movlb	0	; () banked
 52528  00BD2E  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 52529                           
 52530                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 52531                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 52532  00BD30  0100               	movlb	0	; () banked
 52533  00BD32  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 52534                           
 52535                           ; BSR set to: 0
 52536                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 52537  00BD34  EC6E  F063         	call	_HALSPICSAssert	;wreg free
 52538                           
 52539                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 52540  00BD38  0100               	movlb	0	; () banked
 52541  00BD3A  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 52542  00BD3C  EC78  F062         	call	_HALSPISend
 52543                           
 52544                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 52545  00BD40  0EFF               	movlw	255
 52546  00BD42  EC78  F062         	call	_HALSPISend
 52547  00BD46  0100               	movlb	0	; () banked
 52548  00BD48  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 52549                           
 52550                           ; BSR set to: 0
 52551                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 52552  00BD4A  EC6C  F063         	call	_HALSPICSDeassert	;wreg free
 52553                           
 52554                           ;radio_driver_SX1276.c: 142: return readValue;
 52555  00BD4E  0100               	movlb	0	; () banked
 52556  00BD50  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 52557  00BD52  0012               	return	
 52558  00BD54                     __end_of_RADIO_RegisterRead:
 52559                           	opt stack 0
 52560                           tosu	equ	0xFFF
 52561                           tosh	equ	0xFFE
 52562                           tosl	equ	0xFFD
 52563                           pclath	equ	0xFFA
 52564                           tblptru	equ	0xFF8
 52565                           tblptrh	equ	0xFF7
 52566                           tblptrl	equ	0xFF6
 52567                           tablat	equ	0xFF5
 52568                           prodh	equ	0xFF4
 52569                           prodl	equ	0xFF3
 52570                           intcon	equ	0xFF2
 52571                           intcon2	equ	0xFF1
 52572                           intcon3	equ	0xFF0
 52573                           indf0	equ	0xFEF
 52574                           postinc0	equ	0xFEE
 52575                           plusw0	equ	0xFEB
 52576                           fsr0h	equ	0xFEA
 52577                           fsr0l	equ	0xFE9
 52578                           wreg	equ	0xFE8
 52579                           postinc1	equ	0xFE6
 52580                           postdec1	equ	0xFE5
 52581                           plusw1	equ	0xFE3
 52582                           fsr1h	equ	0xFE2
 52583                           fsr1l	equ	0xFE1
 52584                           indf2	equ	0xFDF
 52585                           postinc2	equ	0xFDE
 52586                           postdec2	equ	0xFDD
 52587                           plusw2	equ	0xFDB
 52588                           fsr2h	equ	0xFDA
 52589                           fsr2l	equ	0xFD9
 52590                           status	equ	0xFD8
 52591                           
 52592 ;; *************** function _HALDIO5PinValue *****************
 52593 ;; Defined at:
 52594 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 52595 ;; Parameters:    Size  Location     Type
 52596 ;;		None
 52597 ;; Auto vars:     Size  Location     Type
 52598 ;;		None
 52599 ;; Return value:  Size  Location     Type
 52600 ;;                  1    wreg      unsigned char 
 52601 ;; Registers used:
 52602 ;;		wreg
 52603 ;; Tracked objects:
 52604 ;;		On entry : 0/0
 52605 ;;		On exit  : 0/0
 52606 ;;		Unchanged: 0/0
 52607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52612 ;;Total ram usage:        0 bytes
 52613 ;; Hardware stack levels used:    1
 52614 ;; Hardware stack levels required when called:    7
 52615 ;; This function calls:
 52616 ;;		Nothing
 52617 ;; This function is called by:
 52618 ;;		_RADIO_WriteMode
 52619 ;; This function uses a non-reentrant model
 52620 ;;
 52621                           
 52622                           	psect	text274
 52623  00C522                     __ptext274:
 52624                           	opt stack 0
 52625  00C522                     _HALDIO5PinValue:
 52626                           	opt stack 20
 52627                           
 52628                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 52629                           
 52630                           ; BSR set to: 0
 52631                           ;incstack = 0
 52632  00C522  A081               	btfss	3969,0,c	;volatile
 52633  00C524  D002               	goto	u18920
 52634  00C526  0E01               	movlw	1
 52635  00C528  0012               	return	
 52636  00C52A                     u18920:
 52637  00C52A  0E00               	movlw	0
 52638  00C52C  0012               	return	
 52639  00C52E                     __end_of_HALDIO5PinValue:
 52640                           	opt stack 0
 52641                           tosu	equ	0xFFF
 52642                           tosh	equ	0xFFE
 52643                           tosl	equ	0xFFD
 52644                           pclath	equ	0xFFA
 52645                           tblptru	equ	0xFF8
 52646                           tblptrh	equ	0xFF7
 52647                           tblptrl	equ	0xFF6
 52648                           tablat	equ	0xFF5
 52649                           prodh	equ	0xFF4
 52650                           prodl	equ	0xFF3
 52651                           intcon	equ	0xFF2
 52652                           intcon2	equ	0xFF1
 52653                           intcon3	equ	0xFF0
 52654                           indf0	equ	0xFEF
 52655                           postinc0	equ	0xFEE
 52656                           plusw0	equ	0xFEB
 52657                           fsr0h	equ	0xFEA
 52658                           fsr0l	equ	0xFE9
 52659                           wreg	equ	0xFE8
 52660                           postinc1	equ	0xFE6
 52661                           postdec1	equ	0xFE5
 52662                           plusw1	equ	0xFE3
 52663                           fsr1h	equ	0xFE2
 52664                           fsr1l	equ	0xFE1
 52665                           indf2	equ	0xFDF
 52666                           postinc2	equ	0xFDE
 52667                           postdec2	equ	0xFDD
 52668                           plusw2	equ	0xFDB
 52669                           fsr2h	equ	0xFDA
 52670                           fsr2l	equ	0xFD9
 52671                           status	equ	0xFD8
 52672                           
 52673 ;; *************** function _RADIO_WriteFrequency *****************
 52674 ;; Defined at:
 52675 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 52676 ;; Parameters:    Size  Location     Type
 52677 ;;  frequency       4   13[BANK0 ] unsigned long 
 52678 ;; Auto vars:     Size  Location     Type
 52679 ;;  num             4   21[BANK0 ] unsigned long 
 52680 ;;  num_mod         4   17[BANK0 ] unsigned long 
 52681 ;; Return value:  Size  Location     Type
 52682 ;;                  1    wreg      void 
 52683 ;; Registers used:
 52684 ;;		wreg, status,2, status,0, cstack
 52685 ;; Tracked objects:
 52686 ;;		On entry : 0/0
 52687 ;;		On exit  : 0/0
 52688 ;;		Unchanged: 0/0
 52689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52690 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52691 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52693 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52694 ;;Total ram usage:       12 bytes
 52695 ;; Hardware stack levels used:    1
 52696 ;; Hardware stack levels required when called:   10
 52697 ;; This function calls:
 52698 ;;		_RADIO_RegisterWrite
 52699 ;;		___lldiv
 52700 ;;		___llmod
 52701 ;; This function is called by:
 52702 ;;		_RADIO_Init
 52703 ;;		_RADIO_WriteConfiguration
 52704 ;;		_RADIO_FHSSChangeChannel
 52705 ;; This function uses a non-reentrant model
 52706 ;;
 52707                           
 52708                           	psect	text275
 52709  008D86                     __ptext275:
 52710                           	opt stack 0
 52711  008D86                     _RADIO_WriteFrequency:
 52712                           	opt stack 17
 52713                           
 52714                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 52715                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 52716                           
 52717                           ;incstack = 0
 52718  008D86  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 52719  008D8A  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 52720  008D8E  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 52721  008D92  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 52722  008D96  0E09               	movlw	9
 52723  008D98  0100               	movlb	0	; () banked
 52724  008D9A  6F64               	movwf	___lldiv@divisor& (0+255),b
 52725  008D9C  0E3D               	movlw	61
 52726  008D9E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 52727  008DA0  0E00               	movlw	0
 52728  008DA2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 52729  008DA4  0E00               	movlw	0
 52730  008DA6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 52731  008DA8  ECB0  F050         	call	___lldiv	;wreg free
 52732  008DAC  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 52733  008DB0  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 52734  008DB4  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 52735  008DB8  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 52736                           
 52737                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 52738  008DBC  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 52739  008DC0  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 52740  008DC4  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 52741  008DC8  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 52742  008DCC  0E09               	movlw	9
 52743  008DCE  0100               	movlb	0	; () banked
 52744  008DD0  6F64               	movwf	___llmod@divisor& (0+255),b
 52745  008DD2  0E3D               	movlw	61
 52746  008DD4  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 52747  008DD6  0E00               	movlw	0
 52748  008DD8  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 52749  008DDA  0E00               	movlw	0
 52750  008DDC  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 52751  008DDE  EC1C  F054         	call	___llmod	;wreg free
 52752  008DE2  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 52753  008DE6  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 52754  008DEA  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 52755  008DEE  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 52756                           
 52757                           ;radio_driver_SX1276.c: 277: num <<= (8);
 52758  008DF2  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 52759  008DF6  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 52760  008DFA  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 52761  008DFE  0100               	movlb	0	; () banked
 52762  008E00  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 52763                           
 52764                           ; BSR set to: 0
 52765                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 52766  008E02  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 52767  008E06  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 52768  008E0A  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 52769  008E0E  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 52770                           
 52771                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 52772  008E10  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 52773  008E14  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 52774  008E18  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 52775  008E1C  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 52776  008E20  0E09               	movlw	9
 52777  008E22  6F64               	movwf	___lldiv@divisor& (0+255),b
 52778  008E24  0E3D               	movlw	61
 52779  008E26  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 52780  008E28  0E00               	movlw	0
 52781  008E2A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 52782  008E2C  0E00               	movlw	0
 52783  008E2E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 52784  008E30  ECB0  F050         	call	___lldiv	;wreg free
 52785  008E34  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 52786  008E38  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 52787  008E3C  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 52788  008E40  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 52789                           
 52790                           ;radio_driver_SX1276.c: 283: num += num_mod;
 52791  008E44  0100               	movlb	0	; () banked
 52792  008E46  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 52793  008E48  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 52794  008E4A  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 52795  008E4C  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 52796  008E4E  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 52797  008E50  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 52798  008E52  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 52799  008E54  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 52800                           
 52801                           ; BSR set to: 0
 52802                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 52803  008E56  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 52804  008E5A  0E06               	movlw	6
 52805  008E5C  ECEF  F05F         	call	_RADIO_RegisterWrite
 52806                           
 52807                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 52808  008E60  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 52809  008E64  0E07               	movlw	7
 52810  008E66  ECEF  F05F         	call	_RADIO_RegisterWrite
 52811                           
 52812                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 52813  008E6A  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 52814  008E6E  0E08               	movlw	8
 52815  008E70  ECEF  F05F         	call	_RADIO_RegisterWrite
 52816  008E74  0012               	return		;funcret
 52817  008E76                     __end_of_RADIO_WriteFrequency:
 52818                           	opt stack 0
 52819                           tosu	equ	0xFFF
 52820                           tosh	equ	0xFFE
 52821                           tosl	equ	0xFFD
 52822                           pclath	equ	0xFFA
 52823                           tblptru	equ	0xFF8
 52824                           tblptrh	equ	0xFF7
 52825                           tblptrl	equ	0xFF6
 52826                           tablat	equ	0xFF5
 52827                           prodh	equ	0xFF4
 52828                           prodl	equ	0xFF3
 52829                           intcon	equ	0xFF2
 52830                           intcon2	equ	0xFF1
 52831                           intcon3	equ	0xFF0
 52832                           indf0	equ	0xFEF
 52833                           postinc0	equ	0xFEE
 52834                           plusw0	equ	0xFEB
 52835                           fsr0h	equ	0xFEA
 52836                           fsr0l	equ	0xFE9
 52837                           wreg	equ	0xFE8
 52838                           postinc1	equ	0xFE6
 52839                           postdec1	equ	0xFE5
 52840                           plusw1	equ	0xFE3
 52841                           fsr1h	equ	0xFE2
 52842                           fsr1l	equ	0xFE1
 52843                           indf2	equ	0xFDF
 52844                           postinc2	equ	0xFDE
 52845                           postdec2	equ	0xFDD
 52846                           plusw2	equ	0xFDB
 52847                           fsr2h	equ	0xFDA
 52848                           fsr2l	equ	0xFD9
 52849                           status	equ	0xFD8
 52850                           
 52851 ;; *************** function ___llmod *****************
 52852 ;; Defined at:
 52853 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 52854 ;; Parameters:    Size  Location     Type
 52855 ;;  dividend        4    0[BANK0 ] unsigned long 
 52856 ;;  divisor         4    4[BANK0 ] unsigned long 
 52857 ;; Auto vars:     Size  Location     Type
 52858 ;;  counter         1    8[BANK0 ] unsigned char 
 52859 ;; Return value:  Size  Location     Type
 52860 ;;                  4    0[BANK0 ] unsigned long 
 52861 ;; Registers used:
 52862 ;;		wreg, status,2, status,0
 52863 ;; Tracked objects:
 52864 ;;		On entry : 0/0
 52865 ;;		On exit  : 0/0
 52866 ;;		Unchanged: 0/0
 52867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52868 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52871 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52872 ;;Total ram usage:        9 bytes
 52873 ;; Hardware stack levels used:    1
 52874 ;; Hardware stack levels required when called:    7
 52875 ;; This function calls:
 52876 ;;		Nothing
 52877 ;; This function is called by:
 52878 ;;		_RADIO_WriteFrequency
 52879 ;;		_printf
 52880 ;; This function uses a non-reentrant model
 52881 ;;
 52882                           
 52883                           	psect	text276
 52884  00A838                     __ptext276:
 52885                           	opt stack 0
 52886  00A838                     ___llmod:
 52887                           	opt stack 22
 52888                           
 52889                           ;incstack = 0
 52890  00A838  0100               	movlb	0	; () banked
 52891  00A83A  5164               	movf	___llmod@divisor& (0+255),w,b
 52892  00A83C  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 52893  00A83E  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 52894  00A840  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 52895  00A842  B4D8               	btfsc	status,2,c
 52896  00A844  D024               	goto	l3965
 52897                           
 52898                           ; BSR set to: 0
 52899  00A846  0E01               	movlw	1
 52900  00A848  6F68               	movwf	___llmod@counter& (0+255),b
 52901  00A84A  D006               	goto	l3960
 52902  00A84C                     
 52903                           ; BSR set to: 0
 52904                           
 52905                           ; BSR set to: 0
 52906  00A84C  90D8               	bcf	status,0,c
 52907  00A84E  3764               	rlcf	___llmod@divisor& (0+255),f,b
 52908  00A850  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 52909  00A852  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 52910  00A854  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 52911  00A856  2B68               	incf	___llmod@counter& (0+255),f,b
 52912  00A858                     l3960:
 52913                           
 52914                           ; BSR set to: 0
 52915                           
 52916                           ; BSR set to: 0
 52917  00A858  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 52918  00A85A  D7F8               	goto	l3961
 52919  00A85C                     u19150:
 52920                           
 52921                           ; BSR set to: 0
 52922                           
 52923                           ; BSR set to: 0
 52924                           
 52925                           ; BSR set to: 0
 52926  00A85C  5164               	movf	___llmod@divisor& (0+255),w,b
 52927  00A85E  5D60               	subwf	___llmod@dividend& (0+255),w,b
 52928  00A860  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 52929  00A862  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 52930  00A864  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 52931  00A866  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 52932  00A868  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 52933  00A86A  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 52934  00A86C  A0D8               	btfss	status,0,c
 52935  00A86E  D008               	goto	l3964
 52936                           
 52937                           ; BSR set to: 0
 52938  00A870  5164               	movf	___llmod@divisor& (0+255),w,b
 52939  00A872  5F60               	subwf	___llmod@dividend& (0+255),f,b
 52940  00A874  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 52941  00A876  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 52942  00A878  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 52943  00A87A  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 52944  00A87C  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 52945  00A87E  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 52946  00A880                     l3964:
 52947                           
 52948                           ; BSR set to: 0
 52949                           
 52950                           ; BSR set to: 0
 52951  00A880  90D8               	bcf	status,0,c
 52952  00A882  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 52953  00A884  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 52954  00A886  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 52955  00A888  3364               	rrcf	___llmod@divisor& (0+255),f,b
 52956                           
 52957                           ; BSR set to: 0
 52958  00A88A  2F68               	decfsz	___llmod@counter& (0+255),f,b
 52959  00A88C  D7E7               	goto	u19150
 52960  00A88E                     l3965:
 52961                           
 52962                           ; BSR set to: 0
 52963                           
 52964                           ; BSR set to: 0
 52965  00A88E  C060  F060         	movff	___llmod@dividend,?___llmod
 52966  00A892  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 52967  00A896  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 52968  00A89A  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 52969                           
 52970                           ; BSR set to: 0
 52971  00A89E  0012               	return		;funcret
 52972  00A8A0                     __end_of___llmod:
 52973                           	opt stack 0
 52974                           tosu	equ	0xFFF
 52975                           tosh	equ	0xFFE
 52976                           tosl	equ	0xFFD
 52977                           pclath	equ	0xFFA
 52978                           tblptru	equ	0xFF8
 52979                           tblptrh	equ	0xFF7
 52980                           tblptrl	equ	0xFF6
 52981                           tablat	equ	0xFF5
 52982                           prodh	equ	0xFF4
 52983                           prodl	equ	0xFF3
 52984                           intcon	equ	0xFF2
 52985                           intcon2	equ	0xFF1
 52986                           intcon3	equ	0xFF0
 52987                           indf0	equ	0xFEF
 52988                           postinc0	equ	0xFEE
 52989                           plusw0	equ	0xFEB
 52990                           fsr0h	equ	0xFEA
 52991                           fsr0l	equ	0xFE9
 52992                           wreg	equ	0xFE8
 52993                           postinc1	equ	0xFE6
 52994                           postdec1	equ	0xFE5
 52995                           plusw1	equ	0xFE3
 52996                           fsr1h	equ	0xFE2
 52997                           fsr1l	equ	0xFE1
 52998                           indf2	equ	0xFDF
 52999                           postinc2	equ	0xFDE
 53000                           postdec2	equ	0xFDD
 53001                           plusw2	equ	0xFDB
 53002                           fsr2h	equ	0xFDA
 53003                           fsr2l	equ	0xFD9
 53004                           status	equ	0xFD8
 53005                           
 53006 ;; *************** function _RADIO_RegisterWrite *****************
 53007 ;; Defined at:
 53008 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 53009 ;; Parameters:    Size  Location     Type
 53010 ;;  reg             1    wreg     unsigned char 
 53011 ;;  value           1    2[BANK0 ] unsigned char 
 53012 ;; Auto vars:     Size  Location     Type
 53013 ;;  reg             1    3[BANK0 ] unsigned char 
 53014 ;; Return value:  Size  Location     Type
 53015 ;;                  1    wreg      void 
 53016 ;; Registers used:
 53017 ;;		wreg, status,2, status,0, cstack
 53018 ;; Tracked objects:
 53019 ;;		On entry : 0/0
 53020 ;;		On exit  : 0/0
 53021 ;;		Unchanged: 0/0
 53022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53023 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53026 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53027 ;;Total ram usage:        2 bytes
 53028 ;; Hardware stack levels used:    1
 53029 ;; Hardware stack levels required when called:    9
 53030 ;; This function calls:
 53031 ;;		_HALSPICSAssert
 53032 ;;		_HALSPICSDeassert
 53033 ;;		_HALSPISend
 53034 ;; This function is called by:
 53035 ;;		_RADIO_WriteMode
 53036 ;;		_RADIO_WriteFrequency
 53037 ;;		_RADIO_WriteFSKFrequencyDeviation
 53038 ;;		_RADIO_WriteFSKBitRate
 53039 ;;		_RADIO_WritePower
 53040 ;;		_RADIO_Init
 53041 ;;		_RADIO_WriteConfiguration
 53042 ;;		_RADIO_Transmit
 53043 ;;		_RADIO_ReceiveStart
 53044 ;;		_RADIO_RxDone
 53045 ;;		_RADIO_RxTimeout
 53046 ;;		_RADIO_TxDone
 53047 ;;		_RADIO_UnhandledInterrupt
 53048 ;;		_RADIO_FHSSChangeChannel
 53049 ;;		_RADIO_ReadRandom
 53050 ;;		_RADIO_TransmitCW
 53051 ;; This function uses a non-reentrant model
 53052 ;;
 53053                           
 53054                           	psect	text277
 53055  00BFDE                     __ptext277:
 53056                           	opt stack 0
 53057  00BFDE                     _RADIO_RegisterWrite:
 53058                           	opt stack 18
 53059                           
 53060                           ; BSR set to: 0
 53061                           ;incstack = 0
 53062                           ;RADIO_RegisterWrite@reg stored from wreg
 53063  00BFDE  0100               	movlb	0	; () banked
 53064  00BFE0  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 53065                           
 53066                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 53067  00BFE2  EC6E  F063         	call	_HALSPICSAssert	;wreg free
 53068                           
 53069                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 53070  00BFE6  0100               	movlb	0	; () banked
 53071  00BFE8  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 53072  00BFEA  0980               	iorlw	128
 53073  00BFEC  EC78  F062         	call	_HALSPISend
 53074                           
 53075                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 53076  00BFF0  0100               	movlb	0	; () banked
 53077  00BFF2  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 53078  00BFF4  EC78  F062         	call	_HALSPISend
 53079                           
 53080                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 53081  00BFF8  EC6C  F063         	call	_HALSPICSDeassert	;wreg free
 53082  00BFFC  0012               	return		;funcret
 53083  00BFFE                     __end_of_RADIO_RegisterWrite:
 53084                           	opt stack 0
 53085                           tosu	equ	0xFFF
 53086                           tosh	equ	0xFFE
 53087                           tosl	equ	0xFFD
 53088                           pclath	equ	0xFFA
 53089                           tblptru	equ	0xFF8
 53090                           tblptrh	equ	0xFF7
 53091                           tblptrl	equ	0xFF6
 53092                           tablat	equ	0xFF5
 53093                           prodh	equ	0xFF4
 53094                           prodl	equ	0xFF3
 53095                           intcon	equ	0xFF2
 53096                           intcon2	equ	0xFF1
 53097                           intcon3	equ	0xFF0
 53098                           indf0	equ	0xFEF
 53099                           postinc0	equ	0xFEE
 53100                           plusw0	equ	0xFEB
 53101                           fsr0h	equ	0xFEA
 53102                           fsr0l	equ	0xFE9
 53103                           wreg	equ	0xFE8
 53104                           postinc1	equ	0xFE6
 53105                           postdec1	equ	0xFE5
 53106                           plusw1	equ	0xFE3
 53107                           fsr1h	equ	0xFE2
 53108                           fsr1l	equ	0xFE1
 53109                           indf2	equ	0xFDF
 53110                           postinc2	equ	0xFDE
 53111                           postdec2	equ	0xFDD
 53112                           plusw2	equ	0xFDB
 53113                           fsr2h	equ	0xFDA
 53114                           fsr2l	equ	0xFD9
 53115                           status	equ	0xFD8
 53116                           
 53117 ;; *************** function _HALSPISend *****************
 53118 ;; Defined at:
 53119 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53120 ;; Parameters:    Size  Location     Type
 53121 ;;  data            1    wreg     unsigned char 
 53122 ;; Auto vars:     Size  Location     Type
 53123 ;;  data            1    1[BANK0 ] unsigned char 
 53124 ;; Return value:  Size  Location     Type
 53125 ;;                  1    wreg      unsigned char 
 53126 ;; Registers used:
 53127 ;;		wreg, status,2, cstack
 53128 ;; Tracked objects:
 53129 ;;		On entry : 0/0
 53130 ;;		On exit  : 0/0
 53131 ;;		Unchanged: 0/0
 53132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53137 ;;Total ram usage:        1 bytes
 53138 ;; Hardware stack levels used:    1
 53139 ;; Hardware stack levels required when called:    8
 53140 ;; This function calls:
 53141 ;;		_SPI2_Exchange8bit
 53142 ;; This function is called by:
 53143 ;;		_RADIO_RegisterWrite
 53144 ;;		_RADIO_RegisterRead
 53145 ;;		_RADIO_Transmit
 53146 ;;		_RADIO_RxDone
 53147 ;;		_RADIO_FSKPayloadReady
 53148 ;; This function uses a non-reentrant model
 53149 ;;
 53150                           
 53151                           	psect	text278
 53152  00C4F0                     __ptext278:
 53153                           	opt stack 0
 53154  00C4F0                     _HALSPISend:
 53155                           	opt stack 18
 53156                           
 53157                           ;incstack = 0
 53158                           ;HALSPISend@data stored from wreg
 53159  00C4F0  0100               	movlb	0	; () banked
 53160  00C4F2  6F61               	movwf	HALSPISend@data& (0+255),b
 53161                           
 53162                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 53163  00C4F4  0100               	movlb	0	; () banked
 53164  00C4F6  5161               	movf	HALSPISend@data& (0+255),w,b
 53165  00C4F8  EC6D  F061         	call	_SPI2_Exchange8bit
 53166  00C4FC  0012               	return	
 53167  00C4FE                     __end_of_HALSPISend:
 53168                           	opt stack 0
 53169                           tosu	equ	0xFFF
 53170                           tosh	equ	0xFFE
 53171                           tosl	equ	0xFFD
 53172                           pclath	equ	0xFFA
 53173                           tblptru	equ	0xFF8
 53174                           tblptrh	equ	0xFF7
 53175                           tblptrl	equ	0xFF6
 53176                           tablat	equ	0xFF5
 53177                           prodh	equ	0xFF4
 53178                           prodl	equ	0xFF3
 53179                           intcon	equ	0xFF2
 53180                           intcon2	equ	0xFF1
 53181                           intcon3	equ	0xFF0
 53182                           indf0	equ	0xFEF
 53183                           postinc0	equ	0xFEE
 53184                           plusw0	equ	0xFEB
 53185                           fsr0h	equ	0xFEA
 53186                           fsr0l	equ	0xFE9
 53187                           wreg	equ	0xFE8
 53188                           postinc1	equ	0xFE6
 53189                           postdec1	equ	0xFE5
 53190                           plusw1	equ	0xFE3
 53191                           fsr1h	equ	0xFE2
 53192                           fsr1l	equ	0xFE1
 53193                           indf2	equ	0xFDF
 53194                           postinc2	equ	0xFDE
 53195                           postdec2	equ	0xFDD
 53196                           plusw2	equ	0xFDB
 53197                           fsr2h	equ	0xFDA
 53198                           fsr2l	equ	0xFD9
 53199                           status	equ	0xFD8
 53200                           
 53201 ;; *************** function _SPI2_Exchange8bit *****************
 53202 ;; Defined at:
 53203 ;;		line 79 in file "mcc_generated_files/spi2.c"
 53204 ;; Parameters:    Size  Location     Type
 53205 ;;  data            1    wreg     unsigned char 
 53206 ;; Auto vars:     Size  Location     Type
 53207 ;;  data            1    0[BANK0 ] unsigned char 
 53208 ;; Return value:  Size  Location     Type
 53209 ;;                  1    wreg      unsigned char 
 53210 ;; Registers used:
 53211 ;;		wreg, status,2
 53212 ;; Tracked objects:
 53213 ;;		On entry : 0/0
 53214 ;;		On exit  : 0/0
 53215 ;;		Unchanged: 0/0
 53216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53220 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53221 ;;Total ram usage:        1 bytes
 53222 ;; Hardware stack levels used:    1
 53223 ;; Hardware stack levels required when called:    7
 53224 ;; This function calls:
 53225 ;;		Nothing
 53226 ;; This function is called by:
 53227 ;;		_HALSPISend
 53228 ;;		_SPI2_Exchange8bitBuffer
 53229 ;; This function uses a non-reentrant model
 53230 ;;
 53231                           
 53232                           	psect	text279
 53233  00C2DA                     __ptext279:
 53234                           	opt stack 0
 53235  00C2DA                     _SPI2_Exchange8bit:
 53236                           	opt stack 18
 53237                           
 53238                           ;incstack = 0
 53239                           ;SPI2_Exchange8bit@data stored from wreg
 53240  00C2DA  0100               	movlb	0	; () banked
 53241  00C2DC  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 53242                           
 53243                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 53244  00C2DE  9E6C               	bcf	3948,7,c	;volatile
 53245                           
 53246                           ;spi2.c: 84: SSP2BUF = data;
 53247  00C2E0  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 53248                           
 53249                           ;spi2.c: 86: while(SSP2STATbits.BF == 0x0)
 53250  00C2E4  D001               	goto	l2518
 53251  00C2E6                     l2519:
 53252  00C2E6  0004               	clrwdt		;# 
 53253  00C2E8                     l2518:
 53254  00C2E8  A06D               	btfss	3949,0,c	;volatile
 53255  00C2EA  D7FD               	goto	l2519
 53256                           
 53257                           ;spi2.c: 89: }
 53258                           ;spi2.c: 91: return (SSP2BUF);
 53259  00C2EC  506F               	movf	3951,w,c	;volatile
 53260  00C2EE  0012               	return		;funcret
 53261  00C2F0                     __end_of_SPI2_Exchange8bit:
 53262                           	opt stack 0
 53263                           tosu	equ	0xFFF
 53264                           tosh	equ	0xFFE
 53265                           tosl	equ	0xFFD
 53266                           pclath	equ	0xFFA
 53267                           tblptru	equ	0xFF8
 53268                           tblptrh	equ	0xFF7
 53269                           tblptrl	equ	0xFF6
 53270                           tablat	equ	0xFF5
 53271                           prodh	equ	0xFF4
 53272                           prodl	equ	0xFF3
 53273                           intcon	equ	0xFF2
 53274                           intcon2	equ	0xFF1
 53275                           intcon3	equ	0xFF0
 53276                           indf0	equ	0xFEF
 53277                           postinc0	equ	0xFEE
 53278                           plusw0	equ	0xFEB
 53279                           fsr0h	equ	0xFEA
 53280                           fsr0l	equ	0xFE9
 53281                           wreg	equ	0xFE8
 53282                           postinc1	equ	0xFE6
 53283                           postdec1	equ	0xFE5
 53284                           plusw1	equ	0xFE3
 53285                           fsr1h	equ	0xFE2
 53286                           fsr1l	equ	0xFE1
 53287                           indf2	equ	0xFDF
 53288                           postinc2	equ	0xFDE
 53289                           postdec2	equ	0xFDD
 53290                           plusw2	equ	0xFDB
 53291                           fsr2h	equ	0xFDA
 53292                           fsr2l	equ	0xFD9
 53293                           status	equ	0xFD8
 53294                           
 53295 ;; *************** function _HALSPICSDeassert *****************
 53296 ;; Defined at:
 53297 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53298 ;; Parameters:    Size  Location     Type
 53299 ;;		None
 53300 ;; Auto vars:     Size  Location     Type
 53301 ;;		None
 53302 ;; Return value:  Size  Location     Type
 53303 ;;                  1    wreg      void 
 53304 ;; Registers used:
 53305 ;;		None
 53306 ;; Tracked objects:
 53307 ;;		On entry : 0/0
 53308 ;;		On exit  : 0/0
 53309 ;;		Unchanged: 0/0
 53310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53315 ;;Total ram usage:        0 bytes
 53316 ;; Hardware stack levels used:    1
 53317 ;; Hardware stack levels required when called:    7
 53318 ;; This function calls:
 53319 ;;		Nothing
 53320 ;; This function is called by:
 53321 ;;		_RADIO_RegisterWrite
 53322 ;;		_RADIO_RegisterRead
 53323 ;;		_RADIO_Transmit
 53324 ;;		_RADIO_RxDone
 53325 ;;		_RADIO_FSKPayloadReady
 53326 ;; This function uses a non-reentrant model
 53327 ;;
 53328                           
 53329                           	psect	text280
 53330  00C6D8                     __ptext280:
 53331                           	opt stack 0
 53332  00C6D8                     _HALSPICSDeassert:
 53333                           	opt stack 19
 53334                           
 53335                           ;incstack = 0
 53336                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 53337  00C6D8  868C               	bsf	3980,3,c	;volatile
 53338  00C6DA  0012               	return	
 53339  00C6DC                     __end_of_HALSPICSDeassert:
 53340                           	opt stack 0
 53341                           tosu	equ	0xFFF
 53342                           tosh	equ	0xFFE
 53343                           tosl	equ	0xFFD
 53344                           pclath	equ	0xFFA
 53345                           tblptru	equ	0xFF8
 53346                           tblptrh	equ	0xFF7
 53347                           tblptrl	equ	0xFF6
 53348                           tablat	equ	0xFF5
 53349                           prodh	equ	0xFF4
 53350                           prodl	equ	0xFF3
 53351                           intcon	equ	0xFF2
 53352                           intcon2	equ	0xFF1
 53353                           intcon3	equ	0xFF0
 53354                           indf0	equ	0xFEF
 53355                           postinc0	equ	0xFEE
 53356                           plusw0	equ	0xFEB
 53357                           fsr0h	equ	0xFEA
 53358                           fsr0l	equ	0xFE9
 53359                           wreg	equ	0xFE8
 53360                           postinc1	equ	0xFE6
 53361                           postdec1	equ	0xFE5
 53362                           plusw1	equ	0xFE3
 53363                           fsr1h	equ	0xFE2
 53364                           fsr1l	equ	0xFE1
 53365                           indf2	equ	0xFDF
 53366                           postinc2	equ	0xFDE
 53367                           postdec2	equ	0xFDD
 53368                           plusw2	equ	0xFDB
 53369                           fsr2h	equ	0xFDA
 53370                           fsr2l	equ	0xFD9
 53371                           status	equ	0xFD8
 53372                           
 53373 ;; *************** function _HALSPICSAssert *****************
 53374 ;; Defined at:
 53375 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53376 ;; Parameters:    Size  Location     Type
 53377 ;;		None
 53378 ;; Auto vars:     Size  Location     Type
 53379 ;;		None
 53380 ;; Return value:  Size  Location     Type
 53381 ;;                  1    wreg      void 
 53382 ;; Registers used:
 53383 ;;		None
 53384 ;; Tracked objects:
 53385 ;;		On entry : 0/0
 53386 ;;		On exit  : 0/0
 53387 ;;		Unchanged: 0/0
 53388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53393 ;;Total ram usage:        0 bytes
 53394 ;; Hardware stack levels used:    1
 53395 ;; Hardware stack levels required when called:    7
 53396 ;; This function calls:
 53397 ;;		Nothing
 53398 ;; This function is called by:
 53399 ;;		_RADIO_RegisterWrite
 53400 ;;		_RADIO_RegisterRead
 53401 ;;		_RADIO_Transmit
 53402 ;;		_RADIO_RxDone
 53403 ;;		_RADIO_FSKPayloadReady
 53404 ;; This function uses a non-reentrant model
 53405 ;;
 53406                           
 53407                           	psect	text281
 53408  00C6DC                     __ptext281:
 53409                           	opt stack 0
 53410  00C6DC                     _HALSPICSAssert:
 53411                           	opt stack 19
 53412                           
 53413                           ;incstack = 0
 53414                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 53415  00C6DC  968C               	bcf	3980,3,c	;volatile
 53416  00C6DE  0012               	return	
 53417  00C6E0                     __end_of_HALSPICSAssert:
 53418                           	opt stack 0
 53419                           tosu	equ	0xFFF
 53420                           tosh	equ	0xFFE
 53421                           tosl	equ	0xFFD
 53422                           pclath	equ	0xFFA
 53423                           tblptru	equ	0xFF8
 53424                           tblptrh	equ	0xFF7
 53425                           tblptrl	equ	0xFF6
 53426                           tablat	equ	0xFF5
 53427                           prodh	equ	0xFF4
 53428                           prodl	equ	0xFF3
 53429                           intcon	equ	0xFF2
 53430                           intcon2	equ	0xFF1
 53431                           intcon3	equ	0xFF0
 53432                           indf0	equ	0xFEF
 53433                           postinc0	equ	0xFEE
 53434                           plusw0	equ	0xFEB
 53435                           fsr0h	equ	0xFEA
 53436                           fsr0l	equ	0xFE9
 53437                           wreg	equ	0xFE8
 53438                           postinc1	equ	0xFE6
 53439                           postdec1	equ	0xFE5
 53440                           plusw1	equ	0xFE3
 53441                           fsr1h	equ	0xFE2
 53442                           fsr1l	equ	0xFE1
 53443                           indf2	equ	0xFDF
 53444                           postinc2	equ	0xFDE
 53445                           postdec2	equ	0xFDD
 53446                           plusw2	equ	0xFDB
 53447                           fsr2h	equ	0xFDA
 53448                           fsr2l	equ	0xFD9
 53449                           status	equ	0xFD8
 53450                           
 53451 ;; *************** function _RADIO_Reset *****************
 53452 ;; Defined at:
 53453 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 53454 ;; Parameters:    Size  Location     Type
 53455 ;;		None
 53456 ;; Auto vars:     Size  Location     Type
 53457 ;;		None
 53458 ;; Return value:  Size  Location     Type
 53459 ;;                  1    wreg      void 
 53460 ;; Registers used:
 53461 ;;		wreg, status,2, status,0, cstack
 53462 ;; Tracked objects:
 53463 ;;		On entry : 0/0
 53464 ;;		On exit  : 0/0
 53465 ;;		Unchanged: 0/0
 53466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53471 ;;Total ram usage:        0 bytes
 53472 ;; Hardware stack levels used:    1
 53473 ;; Hardware stack levels required when called:    8
 53474 ;; This function calls:
 53475 ;;		_HALResetPinMakeInput
 53476 ;;		_HALResetPinMakeOutput
 53477 ;;		_HALResetPinOutputValue
 53478 ;;		_SystemBlockingWaitMs
 53479 ;; This function is called by:
 53480 ;;		_RADIO_Init
 53481 ;; This function uses a non-reentrant model
 53482 ;;
 53483                           
 53484                           	psect	text282
 53485  00B3D0                     __ptext282:
 53486                           	opt stack 0
 53487  00B3D0                     _RADIO_Reset:
 53488                           	opt stack 20
 53489                           
 53490                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 53491                           
 53492                           ;incstack = 0
 53493  00B3D0  EC70  F063         	call	_HALResetPinMakeOutput	;wreg free
 53494                           
 53495                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 53496  00B3D4  0E00               	movlw	0
 53497  00B3D6  ECED  F060         	call	_HALResetPinOutputValue
 53498                           
 53499                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 53500  00B3DA  0E01               	movlw	1
 53501  00B3DC  0100               	movlb	0	; () banked
 53502  00B3DE  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 53503  00B3E0  0E00               	movlw	0
 53504  00B3E2  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 53505  00B3E4  0E00               	movlw	0
 53506  00B3E6  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 53507  00B3E8  0E00               	movlw	0
 53508  00B3EA  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 53509  00B3EC  EC0B  F05D         	call	_SystemBlockingWaitMs	;wreg free
 53510                           
 53511                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 53512  00B3F0  EC72  F063         	call	_HALResetPinMakeInput	;wreg free
 53513                           
 53514                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 53515  00B3F4  0E0A               	movlw	10
 53516  00B3F6  0100               	movlb	0	; () banked
 53517  00B3F8  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 53518  00B3FA  0E00               	movlw	0
 53519  00B3FC  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 53520  00B3FE  0E00               	movlw	0
 53521  00B400  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 53522  00B402  0E00               	movlw	0
 53523  00B404  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 53524  00B406  EC0B  F05D         	call	_SystemBlockingWaitMs	;wreg free
 53525                           
 53526                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 53527  00B40A  0E01               	movlw	1
 53528  00B40C  ECED  F060         	call	_HALResetPinOutputValue
 53529                           
 53530                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 53531  00B410  EC70  F063         	call	_HALResetPinMakeOutput	;wreg free
 53532  00B414  0012               	return		;funcret
 53533  00B416                     __end_of_RADIO_Reset:
 53534                           	opt stack 0
 53535                           tosu	equ	0xFFF
 53536                           tosh	equ	0xFFE
 53537                           tosl	equ	0xFFD
 53538                           pclath	equ	0xFFA
 53539                           tblptru	equ	0xFF8
 53540                           tblptrh	equ	0xFF7
 53541                           tblptrl	equ	0xFF6
 53542                           tablat	equ	0xFF5
 53543                           prodh	equ	0xFF4
 53544                           prodl	equ	0xFF3
 53545                           intcon	equ	0xFF2
 53546                           intcon2	equ	0xFF1
 53547                           intcon3	equ	0xFF0
 53548                           indf0	equ	0xFEF
 53549                           postinc0	equ	0xFEE
 53550                           plusw0	equ	0xFEB
 53551                           fsr0h	equ	0xFEA
 53552                           fsr0l	equ	0xFE9
 53553                           wreg	equ	0xFE8
 53554                           postinc1	equ	0xFE6
 53555                           postdec1	equ	0xFE5
 53556                           plusw1	equ	0xFE3
 53557                           fsr1h	equ	0xFE2
 53558                           fsr1l	equ	0xFE1
 53559                           indf2	equ	0xFDF
 53560                           postinc2	equ	0xFDE
 53561                           postdec2	equ	0xFDD
 53562                           plusw2	equ	0xFDB
 53563                           fsr2h	equ	0xFDA
 53564                           fsr2l	equ	0xFD9
 53565                           status	equ	0xFD8
 53566                           
 53567 ;; *************** function _SystemBlockingWaitMs *****************
 53568 ;; Defined at:
 53569 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 53570 ;; Parameters:    Size  Location     Type
 53571 ;;  ms              4    0[BANK0 ] unsigned long 
 53572 ;; Auto vars:     Size  Location     Type
 53573 ;;		None
 53574 ;; Return value:  Size  Location     Type
 53575 ;;                  1    wreg      void 
 53576 ;; Registers used:
 53577 ;;		wreg, status,2, status,0
 53578 ;; Tracked objects:
 53579 ;;		On entry : 0/0
 53580 ;;		On exit  : 0/0
 53581 ;;		Unchanged: 0/0
 53582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53583 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53585 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53586 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53587 ;;Total ram usage:        5 bytes
 53588 ;; Hardware stack levels used:    1
 53589 ;; Hardware stack levels required when called:    7
 53590 ;; This function calls:
 53591 ;;		Nothing
 53592 ;; This function is called by:
 53593 ;;		_RADIO_WriteMode
 53594 ;;		_RADIO_Reset
 53595 ;;		_RADIO_ReadRandom
 53596 ;;		_RADIO_StopCW
 53597 ;; This function uses a non-reentrant model
 53598 ;;
 53599                           
 53600                           	psect	text283
 53601  00BA16                     __ptext283:
 53602                           	opt stack 0
 53603  00BA16                     _SystemBlockingWaitMs:
 53604                           	opt stack 20
 53605                           
 53606                           ;sw_timer.c: 147: while (ms > 0)
 53607                           
 53608                           ;incstack = 0
 53609  00BA16  D00F               	goto	l563
 53610  00BA18                     
 53611                           ;sw_timer.c: 148: {
 53612                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 53613  00BA18  0E06               	movlw	6
 53614  00BA1A  0100               	movlb	0	; () banked
 53615  00BA1C  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 53616  00BA1E  0E30               	movlw	48
 53617  00BA20                     u29137:
 53618  00BA20  2EE8               	decfsz	wreg,f,c
 53619  00BA22  D7FE               	bra	u29137
 53620  00BA24  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 53621  00BA26  D7FC               	bra	u29137
 53622  00BA28  F000               	nop	
 53623                           
 53624                           ;sw_timer.c: 150: ms--;
 53625  00BA2A  0100               	movlb	0	; () banked
 53626  00BA2C  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 53627  00BA2E  0E00               	movlw	0
 53628  00BA30  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 53629  00BA32  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 53630  00BA34  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 53631  00BA36                     l563:
 53632                           
 53633                           ; BSR set to: 0
 53634  00BA36  0100               	movlb	0	; () banked
 53635  00BA38  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 53636  00BA3A  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 53637  00BA3C  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 53638  00BA3E  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 53639  00BA40  B4D8               	btfsc	status,2,c
 53640  00BA42  0012               	return	
 53641  00BA44  D7E9               	goto	l564
 53642  00BA46                     __end_of_SystemBlockingWaitMs:
 53643                           	opt stack 0
 53644                           tosu	equ	0xFFF
 53645                           tosh	equ	0xFFE
 53646                           tosl	equ	0xFFD
 53647                           pclath	equ	0xFFA
 53648                           tblptru	equ	0xFF8
 53649                           tblptrh	equ	0xFF7
 53650                           tblptrl	equ	0xFF6
 53651                           tablat	equ	0xFF5
 53652                           prodh	equ	0xFF4
 53653                           prodl	equ	0xFF3
 53654                           intcon	equ	0xFF2
 53655                           intcon2	equ	0xFF1
 53656                           intcon3	equ	0xFF0
 53657                           indf0	equ	0xFEF
 53658                           postinc0	equ	0xFEE
 53659                           plusw0	equ	0xFEB
 53660                           fsr0h	equ	0xFEA
 53661                           fsr0l	equ	0xFE9
 53662                           wreg	equ	0xFE8
 53663                           postinc1	equ	0xFE6
 53664                           postdec1	equ	0xFE5
 53665                           plusw1	equ	0xFE3
 53666                           fsr1h	equ	0xFE2
 53667                           fsr1l	equ	0xFE1
 53668                           indf2	equ	0xFDF
 53669                           postinc2	equ	0xFDE
 53670                           postdec2	equ	0xFDD
 53671                           plusw2	equ	0xFDB
 53672                           fsr2h	equ	0xFDA
 53673                           fsr2l	equ	0xFD9
 53674                           status	equ	0xFD8
 53675                           
 53676 ;; *************** function _HALResetPinOutputValue *****************
 53677 ;; Defined at:
 53678 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53679 ;; Parameters:    Size  Location     Type
 53680 ;;  value           1    wreg     unsigned char 
 53681 ;; Auto vars:     Size  Location     Type
 53682 ;;  value           1    0[BANK0 ] unsigned char 
 53683 ;; Return value:  Size  Location     Type
 53684 ;;                  1    wreg      void 
 53685 ;; Registers used:
 53686 ;;		wreg, status,2, status,0
 53687 ;; Tracked objects:
 53688 ;;		On entry : 0/0
 53689 ;;		On exit  : 0/0
 53690 ;;		Unchanged: 0/0
 53691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53693 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53695 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53696 ;;Total ram usage:        1 bytes
 53697 ;; Hardware stack levels used:    1
 53698 ;; Hardware stack levels required when called:    7
 53699 ;; This function calls:
 53700 ;;		Nothing
 53701 ;; This function is called by:
 53702 ;;		_RADIO_Reset
 53703 ;; This function uses a non-reentrant model
 53704 ;;
 53705                           
 53706                           	psect	text284
 53707  00C1DA                     __ptext284:
 53708                           	opt stack 0
 53709  00C1DA                     _HALResetPinOutputValue:
 53710                           	opt stack 20
 53711                           
 53712                           ; BSR set to: 0
 53713                           ;incstack = 0
 53714                           ;HALResetPinOutputValue@value stored from wreg
 53715  00C1DA  0100               	movlb	0	; () banked
 53716  00C1DC  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 53717                           
 53718                           ;radio_driver_hal.c: 57: if (value == 0)
 53719  00C1DE  0100               	movlb	0	; () banked
 53720  00C1E0  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 53721  00C1E2  A4D8               	btfss	status,2,c
 53722  00C1E4  D002               	goto	l469
 53723                           
 53724                           ; BSR set to: 0
 53725                           
 53726                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 53727  00C1E6  948B               	bcf	3979,2,c	;volatile
 53728                           
 53729                           ; BSR set to: 0
 53730  00C1E8  0012               	return	
 53731  00C1EA                     l469:
 53732                           
 53733                           ; BSR set to: 0
 53734                           ;radio_driver_hal.c: 59: else if (value == 1)
 53735                           
 53736                           ; BSR set to: 0
 53737  00C1EA  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 53738  00C1EC  A4D8               	btfss	status,2,c
 53739  00C1EE  0012               	return	
 53740                           
 53741                           ; BSR set to: 0
 53742                           
 53743                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 53744  00C1F0  848B               	bsf	3979,2,c	;volatile
 53745                           
 53746                           ; BSR set to: 0
 53747                           
 53748                           ; BSR set to: 0
 53749  00C1F2  0012               	return	
 53750  00C1F4                     __end_of_HALResetPinOutputValue:
 53751                           	opt stack 0
 53752                           tosu	equ	0xFFF
 53753                           tosh	equ	0xFFE
 53754                           tosl	equ	0xFFD
 53755                           pclath	equ	0xFFA
 53756                           tblptru	equ	0xFF8
 53757                           tblptrh	equ	0xFF7
 53758                           tblptrl	equ	0xFF6
 53759                           tablat	equ	0xFF5
 53760                           prodh	equ	0xFF4
 53761                           prodl	equ	0xFF3
 53762                           intcon	equ	0xFF2
 53763                           intcon2	equ	0xFF1
 53764                           intcon3	equ	0xFF0
 53765                           indf0	equ	0xFEF
 53766                           postinc0	equ	0xFEE
 53767                           plusw0	equ	0xFEB
 53768                           fsr0h	equ	0xFEA
 53769                           fsr0l	equ	0xFE9
 53770                           wreg	equ	0xFE8
 53771                           postinc1	equ	0xFE6
 53772                           postdec1	equ	0xFE5
 53773                           plusw1	equ	0xFE3
 53774                           fsr1h	equ	0xFE2
 53775                           fsr1l	equ	0xFE1
 53776                           indf2	equ	0xFDF
 53777                           postinc2	equ	0xFDE
 53778                           postdec2	equ	0xFDD
 53779                           plusw2	equ	0xFDB
 53780                           fsr2h	equ	0xFDA
 53781                           fsr2l	equ	0xFD9
 53782                           status	equ	0xFD8
 53783                           
 53784 ;; *************** function _HALResetPinMakeOutput *****************
 53785 ;; Defined at:
 53786 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53787 ;; Parameters:    Size  Location     Type
 53788 ;;		None
 53789 ;; Auto vars:     Size  Location     Type
 53790 ;;		None
 53791 ;; Return value:  Size  Location     Type
 53792 ;;                  1    wreg      void 
 53793 ;; Registers used:
 53794 ;;		None
 53795 ;; Tracked objects:
 53796 ;;		On entry : 0/0
 53797 ;;		On exit  : 0/0
 53798 ;;		Unchanged: 0/0
 53799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53804 ;;Total ram usage:        0 bytes
 53805 ;; Hardware stack levels used:    1
 53806 ;; Hardware stack levels required when called:    7
 53807 ;; This function calls:
 53808 ;;		Nothing
 53809 ;; This function is called by:
 53810 ;;		_RADIO_Reset
 53811 ;; This function uses a non-reentrant model
 53812 ;;
 53813                           
 53814                           	psect	text285
 53815  00C6E0                     __ptext285:
 53816                           	opt stack 0
 53817  00C6E0                     _HALResetPinMakeOutput:
 53818                           	opt stack 20
 53819                           
 53820                           ; BSR set to: 0
 53821                           ;incstack = 0
 53822                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 53823  00C6E0  9494               	bcf	3988,2,c	;volatile
 53824  00C6E2  0012               	return	
 53825  00C6E4                     __end_of_HALResetPinMakeOutput:
 53826                           	opt stack 0
 53827                           tosu	equ	0xFFF
 53828                           tosh	equ	0xFFE
 53829                           tosl	equ	0xFFD
 53830                           pclath	equ	0xFFA
 53831                           tblptru	equ	0xFF8
 53832                           tblptrh	equ	0xFF7
 53833                           tblptrl	equ	0xFF6
 53834                           tablat	equ	0xFF5
 53835                           prodh	equ	0xFF4
 53836                           prodl	equ	0xFF3
 53837                           intcon	equ	0xFF2
 53838                           intcon2	equ	0xFF1
 53839                           intcon3	equ	0xFF0
 53840                           indf0	equ	0xFEF
 53841                           postinc0	equ	0xFEE
 53842                           plusw0	equ	0xFEB
 53843                           fsr0h	equ	0xFEA
 53844                           fsr0l	equ	0xFE9
 53845                           wreg	equ	0xFE8
 53846                           postinc1	equ	0xFE6
 53847                           postdec1	equ	0xFE5
 53848                           plusw1	equ	0xFE3
 53849                           fsr1h	equ	0xFE2
 53850                           fsr1l	equ	0xFE1
 53851                           indf2	equ	0xFDF
 53852                           postinc2	equ	0xFDE
 53853                           postdec2	equ	0xFDD
 53854                           plusw2	equ	0xFDB
 53855                           fsr2h	equ	0xFDA
 53856                           fsr2l	equ	0xFD9
 53857                           status	equ	0xFD8
 53858                           
 53859 ;; *************** function _HALResetPinMakeInput *****************
 53860 ;; Defined at:
 53861 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53862 ;; Parameters:    Size  Location     Type
 53863 ;;		None
 53864 ;; Auto vars:     Size  Location     Type
 53865 ;;		None
 53866 ;; Return value:  Size  Location     Type
 53867 ;;                  1    wreg      void 
 53868 ;; Registers used:
 53869 ;;		None
 53870 ;; Tracked objects:
 53871 ;;		On entry : 0/0
 53872 ;;		On exit  : 0/0
 53873 ;;		Unchanged: 0/0
 53874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53879 ;;Total ram usage:        0 bytes
 53880 ;; Hardware stack levels used:    1
 53881 ;; Hardware stack levels required when called:    7
 53882 ;; This function calls:
 53883 ;;		Nothing
 53884 ;; This function is called by:
 53885 ;;		_RADIO_Reset
 53886 ;; This function uses a non-reentrant model
 53887 ;;
 53888                           
 53889                           	psect	text286
 53890  00C6E4                     __ptext286:
 53891                           	opt stack 0
 53892  00C6E4                     _HALResetPinMakeInput:
 53893                           	opt stack 20
 53894                           
 53895                           ;incstack = 0
 53896                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 53897  00C6E4  8494               	bsf	3988,2,c	;volatile
 53898  00C6E6  0012               	return	
 53899  00C6E8                     __end_of_HALResetPinMakeInput:
 53900                           	opt stack 0
 53901                           tosu	equ	0xFFF
 53902                           tosh	equ	0xFFE
 53903                           tosl	equ	0xFFD
 53904                           pclath	equ	0xFFA
 53905                           tblptru	equ	0xFF8
 53906                           tblptrh	equ	0xFF7
 53907                           tblptrl	equ	0xFF6
 53908                           tablat	equ	0xFF5
 53909                           prodh	equ	0xFF4
 53910                           prodl	equ	0xFF3
 53911                           intcon	equ	0xFF2
 53912                           intcon2	equ	0xFF1
 53913                           intcon3	equ	0xFF0
 53914                           indf0	equ	0xFEF
 53915                           postinc0	equ	0xFEE
 53916                           plusw0	equ	0xFEB
 53917                           fsr0h	equ	0xFEA
 53918                           fsr0l	equ	0xFE9
 53919                           wreg	equ	0xFE8
 53920                           postinc1	equ	0xFE6
 53921                           postdec1	equ	0xFE5
 53922                           plusw1	equ	0xFE3
 53923                           fsr1h	equ	0xFE2
 53924                           fsr1l	equ	0xFE1
 53925                           indf2	equ	0xFDF
 53926                           postinc2	equ	0xFDE
 53927                           postdec2	equ	0xFDD
 53928                           plusw2	equ	0xFDB
 53929                           fsr2h	equ	0xFDA
 53930                           fsr2l	equ	0xFD9
 53931                           status	equ	0xFD8
 53932                           
 53933 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 53934 ;; Defined at:
 53935 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 53936 ;; Parameters:    Size  Location     Type
 53937 ;;  period          2   70[BANK0 ] unsigned int 
 53938 ;; Auto vars:     Size  Location     Type
 53939 ;;  iCtr            1   80[BANK0 ] unsigned char 
 53940 ;; Return value:  Size  Location     Type
 53941 ;;                  1    wreg      void 
 53942 ;; Registers used:
 53943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53944 ;; Tracked objects:
 53945 ;;		On entry : 0/0
 53946 ;;		On exit  : 0/0
 53947 ;;		Unchanged: 0/0
 53948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53950 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53951 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53952 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53953 ;;Total ram usage:       11 bytes
 53954 ;; Hardware stack levels used:    1
 53955 ;; Hardware stack levels required when called:   11
 53956 ;; This function calls:
 53957 ;;		_SwTimerSetTimeout
 53958 ;;		_SwTimerStart
 53959 ;;		_SwTimerStop
 53960 ;;		___lldiv
 53961 ;;		___lmul
 53962 ;; This function is called by:
 53963 ;;		_LORAWAN_Reset
 53964 ;; This function uses a non-reentrant model
 53965 ;;
 53966                           
 53967                           	psect	text287
 53968  007730                     __ptext287:
 53969                           	opt stack 0
 53970  007730                     _LORAWAN_LinkCheckConfigure:
 53971                           	opt stack 17
 53972                           
 53973                           ;lorawan.c: 757: uint8_t iCtr;
 53974                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 53975                           
 53976                           ;incstack = 0
 53977  007730  C0A6  F09A         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 53978  007734  C0A7  F09B         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 53979  007738  0100               	movlb	0	; () banked
 53980  00773A  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 53981  00773C  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 53982  00773E  0EE8               	movlw	232
 53983  007740  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 53984  007742  0E03               	movlw	3
 53985  007744  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 53986  007746  0E00               	movlw	0
 53987  007748  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 53988  00774A  0E00               	movlw	0
 53989  00774C  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 53990  00774E  EC1D  F057         	call	___lmul	;wreg free
 53991  007752  C09A  F2D0         	movff	?___lmul,_loRa+204
 53992  007756  C09B  F2D1         	movff	?___lmul+1,_loRa+205
 53993  00775A  C09C  F2D2         	movff	?___lmul+2,_loRa+206
 53994  00775E  C09D  F2D3         	movff	?___lmul+3,_loRa+207
 53995                           
 53996                           ;lorawan.c: 761: if (period == 0)
 53997  007762  0100               	movlb	0	; () banked
 53998  007764  51A6               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 53999  007766  11A7               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 54000  007768  A4D8               	btfss	status,2,c
 54001  00776A  D02B               	goto	l2106
 54002                           
 54003                           ; BSR set to: 0
 54004                           ;lorawan.c: 762: {
 54005                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 54006  00776C  0102               	movlb	2	; () banked
 54007  00776E  51EB               	movf	(_loRa+231)& (0+255),w,b
 54008  007770  ECAA  F05E         	call	_SwTimerStop
 54009                           
 54010                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 54011  007774  0102               	movlb	2	; () banked
 54012  007776  9507               	bcf	(_loRa+3)& (0+255),2,b
 54013                           
 54014                           ; BSR set to: 2
 54015                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 54016  007778  0E00               	movlw	0
 54017  00777A  0100               	movlb	0	; () banked
 54018  00777C  6FB0               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 54019  00777E  D01A               	goto	l2107
 54020  007780                     
 54021                           ; BSR set to: 0
 54022                           ;lorawan.c: 766: {
 54023                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 54024                           
 54025                           ; BSR set to: 0
 54026  007780  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 54027  007782  0D02               	mullw	2
 54028  007784  0EAC               	movlw	low (_loRa+168)
 54029  007786  24F3               	addwf	prodl,w,c
 54030  007788  6ED9               	movwf	fsr2l,c
 54031  00778A  0E02               	movlw	high (_loRa+168)
 54032  00778C  20F4               	addwfc	prodh,w,c
 54033  00778E  6EDA               	movwf	fsr2h,c
 54034  007790  0E02               	movlw	2
 54035  007792  18DE               	xorwf	postinc2,w,c
 54036  007794  A4D8               	btfss	status,2,c
 54037  007796  D00C               	goto	l2109
 54038                           
 54039                           ; BSR set to: 0
 54040                           ;lorawan.c: 768: {
 54041                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 54042  007798  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 54043  00779A  0D02               	mullw	2
 54044  00779C  0EAC               	movlw	low (_loRa+168)
 54045  00779E  24F3               	addwf	prodl,w,c
 54046  0077A0  6ED9               	movwf	fsr2l,c
 54047  0077A2  0E02               	movlw	high (_loRa+168)
 54048  0077A4  20F4               	addwfc	prodh,w,c
 54049  0077A6  6EDA               	movwf	fsr2h,c
 54050  0077A8  0EFF               	movlw	255
 54051  0077AA  6EDF               	movwf	indf2,c
 54052                           
 54053                           ; BSR set to: 0
 54054                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 54055  0077AC  0102               	movlb	2	; () banked
 54056  0077AE  07AB               	decf	(_loRa+167)& (0+255),f,b
 54057  0077B0                     l2109:
 54058                           
 54059                           ; BSR set to: 2
 54060  0077B0  0100               	movlb	0	; () banked
 54061  0077B2  2BB0               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 54062  0077B4                     l2107:
 54063                           
 54064                           ; BSR set to: 0
 54065                           
 54066                           ; BSR set to: 0
 54067  0077B4  0102               	movlb	2	; () banked
 54068  0077B6  51AB               	movf	(_loRa+167)& (0+255),w,b
 54069  0077B8  0100               	movlb	0	; () banked
 54070  0077BA  5DB0               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 54071  0077BC  B0D8               	btfsc	status,0,c
 54072  0077BE  0012               	return	
 54073  0077C0  D7DF               	goto	l2108
 54074  0077C2                     l2106:
 54075                           
 54076                           ; BSR set to: 0
 54077                           ;lorawan.c: 776: else
 54078                           ;lorawan.c: 777: {
 54079                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 54080  0077C2  0102               	movlb	2	; () banked
 54081  0077C4  8507               	bsf	(_loRa+3)& (0+255),2,b
 54082                           
 54083                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 54084  0077C6  A906               	btfss	(_loRa+2)& (0+255),4,b
 54085  0077C8  0012               	return	
 54086                           
 54087                           ; BSR set to: 2
 54088                           ;lorawan.c: 782: {
 54089                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 54090  0077CA  51D3               	movf	(_loRa+207)& (0+255),w,b
 54091  0077CC  E107               	bnz	u24280
 54092  0077CE  29D0               	incf	(_loRa+204)& (0+255),w,b
 54093  0077D0  0EFF               	movlw	255
 54094  0077D2  59D1               	subwfb	(_loRa+205)& (0+255),w,b
 54095  0077D4  0E0F               	movlw	15
 54096  0077D6  59D2               	subwfb	(_loRa+206)& (0+255),w,b
 54097  0077D8  A0D8               	btfss	status,0,c
 54098  0077DA  D01D               	goto	l2114
 54099  0077DC                     u24280:
 54100                           
 54101                           ; BSR set to: 2
 54102  0077DC  C2D0  F060         	movff	_loRa+204,___lldiv@dividend
 54103  0077E0  C2D1  F061         	movff	_loRa+205,___lldiv@dividend+1
 54104  0077E4  C2D2  F062         	movff	_loRa+206,___lldiv@dividend+2
 54105  0077E8  C2D3  F063         	movff	_loRa+207,___lldiv@dividend+3
 54106  0077EC  0E7D               	movlw	125
 54107  0077EE  0100               	movlb	0	; () banked
 54108  0077F0  6F64               	movwf	___lldiv@divisor& (0+255),b
 54109  0077F2  0E00               	movlw	0
 54110  0077F4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 54111  0077F6  0E00               	movlw	0
 54112  0077F8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 54113  0077FA  0E00               	movlw	0
 54114  0077FC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 54115  0077FE  ECB0  F050         	call	___lldiv	;wreg free
 54116  007802  0E0C               	movlw	12
 54117  007804                     u24295:
 54118  007804  90D8               	bcf	status,0,c
 54119  007806  0100               	movlb	0	; () banked
 54120  007808  3760               	rlcf	?___lldiv& (0+255),f,b
 54121  00780A  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 54122  00780C  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 54123  00780E  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 54124  007810  2EE8               	decfsz	wreg,f,c
 54125  007812  D7F8               	goto	u24295
 54126  007814  D023               	goto	L31
 54127  007816                     l2114:
 54128                           
 54129                           ; BSR set to: 0
 54130  007816  C2D0  F0A8         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 54131  00781A  C2D1  F0A9         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 54132  00781E  C2D2  F0AA         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 54133  007822  C2D3  F0AB         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 54134  007826  0E0C               	movlw	12
 54135  007828                     u24305:
 54136  007828  90D8               	bcf	status,0,c
 54137  00782A  0100               	movlb	0	; () banked
 54138  00782C  37A8               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 54139  00782E  37A9               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 54140  007830  37AA               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 54141  007832  37AB               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 54142  007834  2EE8               	decfsz	wreg,f,c
 54143  007836  D7F8               	goto	u24305
 54144  007838  C0A8  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 54145  00783C  C0A9  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 54146  007840  C0AA  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 54147  007844  C0AB  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 54148  007848  0E7D               	movlw	125
 54149  00784A  6F64               	movwf	___lldiv@divisor& (0+255),b
 54150  00784C  0E00               	movlw	0
 54151  00784E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 54152  007850  0E00               	movlw	0
 54153  007852  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 54154  007854  0E00               	movlw	0
 54155  007856  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 54156  007858  ECB0  F050         	call	___lldiv	;wreg free
 54157  00785C                     L31:
 54158  00785C  C060  F0AC         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2892
 54159  007860  C061  F0AD         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2892+1
 54160  007864  C062  F0AE         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2892+2
 54161  007868  C063  F0AF         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2892+3
 54162  00786C  C0AC  F06D         	movff	_LORAWAN_LinkCheckConfigure$2892,SwTimerSetTimeout@timeout
 54163  007870  C0AD  F06E         	movff	_LORAWAN_LinkCheckConfigure$2892+1,SwTimerSetTimeout@timeout+1
 54164  007874  C0AE  F06F         	movff	_LORAWAN_LinkCheckConfigure$2892+2,SwTimerSetTimeout@timeout+2
 54165  007878  C0AF  F070         	movff	_LORAWAN_LinkCheckConfigure$2892+3,SwTimerSetTimeout@timeout+3
 54166  00787C  0102               	movlb	2	; () banked
 54167  00787E  51EB               	movf	(_loRa+231)& (0+255),w,b
 54168  007880  ECD7  F05A         	call	_SwTimerSetTimeout
 54169                           
 54170                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 54171  007884  0102               	movlb	2	; () banked
 54172  007886  51EB               	movf	(_loRa+231)& (0+255),w,b
 54173  007888  EC5C  F04D         	call	_SwTimerStart
 54174  00788C  0012               	return	
 54175  00788E                     __end_of_LORAWAN_LinkCheckConfigure:
 54176                           	opt stack 0
 54177                           tosu	equ	0xFFF
 54178                           tosh	equ	0xFFE
 54179                           tosl	equ	0xFFD
 54180                           pclath	equ	0xFFA
 54181                           tblptru	equ	0xFF8
 54182                           tblptrh	equ	0xFF7
 54183                           tblptrl	equ	0xFF6
 54184                           tablat	equ	0xFF5
 54185                           prodh	equ	0xFF4
 54186                           prodl	equ	0xFF3
 54187                           intcon	equ	0xFF2
 54188                           intcon2	equ	0xFF1
 54189                           intcon3	equ	0xFF0
 54190                           indf0	equ	0xFEF
 54191                           postinc0	equ	0xFEE
 54192                           plusw0	equ	0xFEB
 54193                           fsr0h	equ	0xFEA
 54194                           fsr0l	equ	0xFE9
 54195                           wreg	equ	0xFE8
 54196                           postinc1	equ	0xFE6
 54197                           postdec1	equ	0xFE5
 54198                           plusw1	equ	0xFE3
 54199                           fsr1h	equ	0xFE2
 54200                           fsr1l	equ	0xFE1
 54201                           indf2	equ	0xFDF
 54202                           postinc2	equ	0xFDE
 54203                           postdec2	equ	0xFDD
 54204                           plusw2	equ	0xFDB
 54205                           fsr2h	equ	0xFDA
 54206                           fsr2l	equ	0xFD9
 54207                           status	equ	0xFD8
 54208                           
 54209 ;; *************** function ___lmul *****************
 54210 ;; Defined at:
 54211 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 54212 ;; Parameters:    Size  Location     Type
 54213 ;;  multiplier      4   58[BANK0 ] unsigned long 
 54214 ;;  multiplicand    4   62[BANK0 ] unsigned long 
 54215 ;; Auto vars:     Size  Location     Type
 54216 ;;  product         4   66[BANK0 ] unsigned long 
 54217 ;; Return value:  Size  Location     Type
 54218 ;;                  4   58[BANK0 ] unsigned long 
 54219 ;; Registers used:
 54220 ;;		wreg, status,2, status,0
 54221 ;; Tracked objects:
 54222 ;;		On entry : 0/0
 54223 ;;		On exit  : 0/0
 54224 ;;		Unchanged: 0/0
 54225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54226 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54227 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54229 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54230 ;;Total ram usage:       12 bytes
 54231 ;; Hardware stack levels used:    1
 54232 ;; Hardware stack levels required when called:    7
 54233 ;; This function calls:
 54234 ;;		Nothing
 54235 ;; This function is called by:
 54236 ;;		_RADIO_WriteConfiguration
 54237 ;;		_RADIO_TxDone
 54238 ;;		_RADIO_FSKPacketSent
 54239 ;;		_LORAWAN_TxDone
 54240 ;;		_ExecuteNewChannel
 54241 ;;		_ExecuteRxParamSetupReq
 54242 ;;		_UpdateCfList
 54243 ;;		_LORAWAN_LinkCheckConfigure
 54244 ;;		_BME280_compensateTemperature
 54245 ;;		_BME280_compensatePressure
 54246 ;;		_BME280_compensateHumidity
 54247 ;;		_rand
 54248 ;;		_LORAWAN_Pause
 54249 ;; This function uses a non-reentrant model
 54250 ;;
 54251                           
 54252                           	psect	text288
 54253  00AE3A                     __ptext288:
 54254                           	opt stack 0
 54255  00AE3A                     ___lmul:
 54256                           	opt stack 20
 54257                           
 54258                           ;incstack = 0
 54259  00AE3A  0E00               	movlw	0
 54260  00AE3C  0100               	movlb	0	; () banked
 54261  00AE3E  6FA2               	movwf	___lmul@product& (0+255),b
 54262  00AE40  0E00               	movlw	0
 54263  00AE42  6FA3               	movwf	(___lmul@product+1)& (0+255),b
 54264  00AE44  0E00               	movlw	0
 54265  00AE46  6FA4               	movwf	(___lmul@product+2)& (0+255),b
 54266  00AE48  0E00               	movlw	0
 54267  00AE4A  6FA5               	movwf	(___lmul@product+3)& (0+255),b
 54268  00AE4C                     
 54269                           ; BSR set to: 0
 54270                           
 54271                           ; BSR set to: 0
 54272  00AE4C  A19A               	btfss	___lmul@multiplier& (0+255),0,b
 54273  00AE4E  D008               	goto	l3573
 54274                           
 54275                           ; BSR set to: 0
 54276  00AE50  519E               	movf	___lmul@multiplicand& (0+255),w,b
 54277  00AE52  27A2               	addwf	___lmul@product& (0+255),f,b
 54278  00AE54  519F               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 54279  00AE56  23A3               	addwfc	(___lmul@product+1)& (0+255),f,b
 54280  00AE58  51A0               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 54281  00AE5A  23A4               	addwfc	(___lmul@product+2)& (0+255),f,b
 54282  00AE5C  51A1               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 54283  00AE5E  23A5               	addwfc	(___lmul@product+3)& (0+255),f,b
 54284  00AE60                     l3573:
 54285                           
 54286                           ; BSR set to: 0
 54287                           
 54288                           ; BSR set to: 0
 54289  00AE60  90D8               	bcf	status,0,c
 54290  00AE62  379E               	rlcf	___lmul@multiplicand& (0+255),f,b
 54291  00AE64  379F               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 54292  00AE66  37A0               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 54293  00AE68  37A1               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 54294                           
 54295                           ; BSR set to: 0
 54296  00AE6A  90D8               	bcf	status,0,c
 54297  00AE6C  339D               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 54298  00AE6E  339C               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 54299  00AE70  339B               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 54300  00AE72  339A               	rrcf	___lmul@multiplier& (0+255),f,b
 54301  00AE74  519A               	movf	___lmul@multiplier& (0+255),w,b
 54302  00AE76  119B               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 54303  00AE78  119C               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 54304  00AE7A  119D               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 54305  00AE7C  A4D8               	btfss	status,2,c
 54306  00AE7E  D7E6               	goto	l3572
 54307                           
 54308                           ; BSR set to: 0
 54309  00AE80  C0A2  F09A         	movff	___lmul@product,?___lmul
 54310  00AE84  C0A3  F09B         	movff	___lmul@product+1,?___lmul+1
 54311  00AE88  C0A4  F09C         	movff	___lmul@product+2,?___lmul+2
 54312  00AE8C  C0A5  F09D         	movff	___lmul@product+3,?___lmul+3
 54313                           
 54314                           ; BSR set to: 0
 54315  00AE90  0012               	return		;funcret
 54316  00AE92                     __end_of___lmul:
 54317                           	opt stack 0
 54318                           tosu	equ	0xFFF
 54319                           tosh	equ	0xFFE
 54320                           tosl	equ	0xFFD
 54321                           pclath	equ	0xFFA
 54322                           tblptru	equ	0xFF8
 54323                           tblptrh	equ	0xFF7
 54324                           tblptrl	equ	0xFF6
 54325                           tablat	equ	0xFF5
 54326                           prodh	equ	0xFF4
 54327                           prodl	equ	0xFF3
 54328                           intcon	equ	0xFF2
 54329                           intcon2	equ	0xFF1
 54330                           intcon3	equ	0xFF0
 54331                           indf0	equ	0xFEF
 54332                           postinc0	equ	0xFEE
 54333                           plusw0	equ	0xFEB
 54334                           fsr0h	equ	0xFEA
 54335                           fsr0l	equ	0xFE9
 54336                           wreg	equ	0xFE8
 54337                           postinc1	equ	0xFE6
 54338                           postdec1	equ	0xFE5
 54339                           plusw1	equ	0xFE3
 54340                           fsr1h	equ	0xFE2
 54341                           fsr1l	equ	0xFE1
 54342                           indf2	equ	0xFDF
 54343                           postinc2	equ	0xFDE
 54344                           postdec2	equ	0xFDD
 54345                           plusw2	equ	0xFDB
 54346                           fsr2h	equ	0xFDA
 54347                           fsr2l	equ	0xFD9
 54348                           status	equ	0xFD8
 54349                           
 54350 ;; *************** function ___lldiv *****************
 54351 ;; Defined at:
 54352 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 54353 ;; Parameters:    Size  Location     Type
 54354 ;;  dividend        4    0[BANK0 ] unsigned long 
 54355 ;;  divisor         4    4[BANK0 ] unsigned long 
 54356 ;; Auto vars:     Size  Location     Type
 54357 ;;  quotient        4    8[BANK0 ] unsigned long 
 54358 ;;  counter         1   12[BANK0 ] unsigned char 
 54359 ;; Return value:  Size  Location     Type
 54360 ;;                  4    0[BANK0 ] unsigned long 
 54361 ;; Registers used:
 54362 ;;		wreg, status,2, status,0
 54363 ;; Tracked objects:
 54364 ;;		On entry : 0/0
 54365 ;;		On exit  : 0/0
 54366 ;;		Unchanged: 0/0
 54367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54368 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54369 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54371 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54372 ;;Total ram usage:       13 bytes
 54373 ;; Hardware stack levels used:    1
 54374 ;; Hardware stack levels required when called:    7
 54375 ;; This function calls:
 54376 ;;		Nothing
 54377 ;; This function is called by:
 54378 ;;		_RADIO_WriteFrequency
 54379 ;;		_RADIO_WriteFSKFrequencyDeviation
 54380 ;;		_RADIO_WriteFSKBitRate
 54381 ;;		_RADIO_Transmit
 54382 ;;		_RADIO_ReceiveStart
 54383 ;;		_LORAWAN_TxDone
 54384 ;;		_LORAWAN_RxTimeout
 54385 ;;		_StartReTxTimer
 54386 ;;		_DutyCycleCallback
 54387 ;;		_LORAWAN_LinkCheckConfigure
 54388 ;;		_LORAWAN_LinkCheckCallback
 54389 ;;		_UpdateRetransmissionAckTimeoutState
 54390 ;;		_UpdateJoinSuccessState
 54391 ;;		_BME280_compensatePressure
 54392 ;;		_printf
 54393 ;; This function uses a non-reentrant model
 54394 ;;
 54395                           
 54396                           	psect	text289
 54397  00A160                     __ptext289:
 54398                           	opt stack 0
 54399  00A160                     ___lldiv:
 54400                           	opt stack 22
 54401                           
 54402                           ; BSR set to: 0
 54403                           ;incstack = 0
 54404  00A160  0E00               	movlw	0
 54405  00A162  0100               	movlb	0	; () banked
 54406  00A164  6F68               	movwf	___lldiv@quotient& (0+255),b
 54407  00A166  0E00               	movlw	0
 54408  00A168  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 54409  00A16A  0E00               	movlw	0
 54410  00A16C  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 54411  00A16E  0E00               	movlw	0
 54412  00A170  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 54413                           
 54414                           ; BSR set to: 0
 54415  00A172  5164               	movf	___lldiv@divisor& (0+255),w,b
 54416  00A174  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 54417  00A176  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 54418  00A178  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 54419  00A17A  B4D8               	btfsc	status,2,c
 54420  00A17C  D02A               	goto	l3955
 54421                           
 54422                           ; BSR set to: 0
 54423  00A17E  0E01               	movlw	1
 54424  00A180  6F6C               	movwf	___lldiv@counter& (0+255),b
 54425  00A182  D006               	goto	l3950
 54426  00A184                     
 54427                           ; BSR set to: 0
 54428                           
 54429                           ; BSR set to: 0
 54430  00A184  90D8               	bcf	status,0,c
 54431  00A186  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 54432  00A188  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 54433  00A18A  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 54434  00A18C  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 54435  00A18E  2B6C               	incf	___lldiv@counter& (0+255),f,b
 54436  00A190                     l3950:
 54437                           
 54438                           ; BSR set to: 0
 54439                           
 54440                           ; BSR set to: 0
 54441  00A190  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 54442  00A192  D7F8               	goto	l3951
 54443  00A194                     u19120:
 54444                           
 54445                           ; BSR set to: 0
 54446                           
 54447                           ; BSR set to: 0
 54448                           
 54449                           ; BSR set to: 0
 54450  00A194  90D8               	bcf	status,0,c
 54451  00A196  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 54452  00A198  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 54453  00A19A  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 54454  00A19C  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 54455                           
 54456                           ; BSR set to: 0
 54457  00A19E  5164               	movf	___lldiv@divisor& (0+255),w,b
 54458  00A1A0  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 54459  00A1A2  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 54460  00A1A4  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 54461  00A1A6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 54462  00A1A8  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 54463  00A1AA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 54464  00A1AC  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 54465  00A1AE  A0D8               	btfss	status,0,c
 54466  00A1B0  D009               	goto	l3954
 54467                           
 54468                           ; BSR set to: 0
 54469  00A1B2  5164               	movf	___lldiv@divisor& (0+255),w,b
 54470  00A1B4  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 54471  00A1B6  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 54472  00A1B8  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 54473  00A1BA  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 54474  00A1BC  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 54475  00A1BE  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 54476  00A1C0  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 54477                           
 54478                           ; BSR set to: 0
 54479  00A1C2  8168               	bsf	___lldiv@quotient& (0+255),0,b
 54480  00A1C4                     l3954:
 54481                           
 54482                           ; BSR set to: 0
 54483                           
 54484                           ; BSR set to: 0
 54485  00A1C4  90D8               	bcf	status,0,c
 54486  00A1C6  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 54487  00A1C8  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 54488  00A1CA  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 54489  00A1CC  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 54490                           
 54491                           ; BSR set to: 0
 54492  00A1CE  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 54493  00A1D0  D7E1               	goto	u19120
 54494  00A1D2                     l3955:
 54495                           
 54496                           ; BSR set to: 0
 54497                           
 54498                           ; BSR set to: 0
 54499  00A1D2  C068  F060         	movff	___lldiv@quotient,?___lldiv
 54500  00A1D6  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 54501  00A1DA  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 54502  00A1DE  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 54503                           
 54504                           ; BSR set to: 0
 54505  00A1E2  0012               	return		;funcret
 54506  00A1E4                     __end_of___lldiv:
 54507                           	opt stack 0
 54508                           tosu	equ	0xFFF
 54509                           tosh	equ	0xFFE
 54510                           tosl	equ	0xFFD
 54511                           pclath	equ	0xFFA
 54512                           tblptru	equ	0xFF8
 54513                           tblptrh	equ	0xFF7
 54514                           tblptrl	equ	0xFF6
 54515                           tablat	equ	0xFF5
 54516                           prodh	equ	0xFF4
 54517                           prodl	equ	0xFF3
 54518                           intcon	equ	0xFF2
 54519                           intcon2	equ	0xFF1
 54520                           intcon3	equ	0xFF0
 54521                           indf0	equ	0xFEF
 54522                           postinc0	equ	0xFEE
 54523                           plusw0	equ	0xFEB
 54524                           fsr0h	equ	0xFEA
 54525                           fsr0l	equ	0xFE9
 54526                           wreg	equ	0xFE8
 54527                           postinc1	equ	0xFE6
 54528                           postdec1	equ	0xFE5
 54529                           plusw1	equ	0xFE3
 54530                           fsr1h	equ	0xFE2
 54531                           fsr1l	equ	0xFE1
 54532                           indf2	equ	0xFDF
 54533                           postinc2	equ	0xFDE
 54534                           postdec2	equ	0xFDD
 54535                           plusw2	equ	0xFDB
 54536                           fsr2h	equ	0xFDA
 54537                           fsr2l	equ	0xFD9
 54538                           status	equ	0xFD8
 54539                           
 54540 ;; *************** function _SwTimerStop *****************
 54541 ;; Defined at:
 54542 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 54543 ;; Parameters:    Size  Location     Type
 54544 ;;  timerId         1    wreg     unsigned char 
 54545 ;; Auto vars:     Size  Location     Type
 54546 ;;  timerId         1    0[BANK0 ] unsigned char 
 54547 ;; Return value:  Size  Location     Type
 54548 ;;                  1    wreg      void 
 54549 ;; Registers used:
 54550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 54551 ;; Tracked objects:
 54552 ;;		On entry : 0/0
 54553 ;;		On exit  : 0/0
 54554 ;;		Unchanged: 0/0
 54555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54559 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54560 ;;Total ram usage:        1 bytes
 54561 ;; Hardware stack levels used:    1
 54562 ;; Hardware stack levels required when called:    7
 54563 ;; This function calls:
 54564 ;;		Nothing
 54565 ;; This function is called by:
 54566 ;;		_RADIO_Init
 54567 ;;		_RADIO_Transmit
 54568 ;;		_RADIO_RxDone
 54569 ;;		_RADIO_FSKPayloadReady
 54570 ;;		_RADIO_RxTimeout
 54571 ;;		_RADIO_TxDone
 54572 ;;		_RADIO_FSKPacketSent
 54573 ;;		_RADIO_RxFSKTimeout
 54574 ;;		_LORAWAN_TxDone
 54575 ;;		_StopAllSoftwareTimers
 54576 ;;		_LORAWAN_LinkCheckConfigure
 54577 ;;		_LORAWAN_RxDone
 54578 ;; This function uses a non-reentrant model
 54579 ;;
 54580                           
 54581                           	psect	text290
 54582  00BD54                     __ptext290:
 54583                           	opt stack 0
 54584  00BD54                     _SwTimerStop:
 54585                           	opt stack 21
 54586                           
 54587                           ; BSR set to: 0
 54588                           ;incstack = 0
 54589                           ;SwTimerStop@timerId stored from wreg
 54590  00BD54  0100               	movlb	0	; () banked
 54591  00BD56  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 54592                           
 54593                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 54594  00BD58  9EF2               	bcf	intcon,7,c	;volatile
 54595                           
 54596                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 54597  00BD5A  0100               	movlb	0	; () banked
 54598  00BD5C  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 54599  00BD5E  0D08               	mullw	8
 54600  00BD60  0E04               	movlw	4
 54601  00BD62  26F3               	addwf	prodl,f,c
 54602  00BD64  0E00               	movlw	0
 54603  00BD66  22F4               	addwfc	prodh,f,c
 54604  00BD68  0E00               	movlw	low _swTimers
 54605  00BD6A  24F3               	addwf	prodl,w,c
 54606  00BD6C  6ED9               	movwf	fsr2l,c
 54607  00BD6E  0E03               	movlw	high _swTimers
 54608  00BD70  20F4               	addwfc	prodh,w,c
 54609  00BD72  6EDA               	movwf	fsr2h,c
 54610  00BD74  0E00               	movlw	0
 54611  00BD76  6EDF               	movwf	indf2,c
 54612                           
 54613                           ; BSR set to: 0
 54614                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 54615  00BD78  8EF2               	bsf	intcon,7,c	;volatile
 54616                           
 54617                           ; BSR set to: 0
 54618  00BD7A  0012               	return		;funcret
 54619  00BD7C                     __end_of_SwTimerStop:
 54620                           	opt stack 0
 54621                           tosu	equ	0xFFF
 54622                           tosh	equ	0xFFE
 54623                           tosl	equ	0xFFD
 54624                           pclath	equ	0xFFA
 54625                           tblptru	equ	0xFF8
 54626                           tblptrh	equ	0xFF7
 54627                           tblptrl	equ	0xFF6
 54628                           tablat	equ	0xFF5
 54629                           prodh	equ	0xFF4
 54630                           prodl	equ	0xFF3
 54631                           intcon	equ	0xFF2
 54632                           intcon2	equ	0xFF1
 54633                           intcon3	equ	0xFF0
 54634                           indf0	equ	0xFEF
 54635                           postinc0	equ	0xFEE
 54636                           plusw0	equ	0xFEB
 54637                           fsr0h	equ	0xFEA
 54638                           fsr0l	equ	0xFE9
 54639                           wreg	equ	0xFE8
 54640                           postinc1	equ	0xFE6
 54641                           postdec1	equ	0xFE5
 54642                           plusw1	equ	0xFE3
 54643                           fsr1h	equ	0xFE2
 54644                           fsr1l	equ	0xFE1
 54645                           indf2	equ	0xFDF
 54646                           postinc2	equ	0xFDE
 54647                           postdec2	equ	0xFDD
 54648                           plusw2	equ	0xFDB
 54649                           fsr2h	equ	0xFDA
 54650                           fsr2l	equ	0xFD9
 54651                           status	equ	0xFD8
 54652                           
 54653 ;; *************** function _SwTimerStart *****************
 54654 ;; Defined at:
 54655 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 54656 ;; Parameters:    Size  Location     Type
 54657 ;;  timerId         1    wreg     unsigned char 
 54658 ;; Auto vars:     Size  Location     Type
 54659 ;;  timerId         1   57[BANK0 ] unsigned char 
 54660 ;;  ticksRemaini    4   53[BANK0 ] unsigned long 
 54661 ;; Return value:  Size  Location     Type
 54662 ;;                  1    wreg      void 
 54663 ;; Registers used:
 54664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54665 ;; Tracked objects:
 54666 ;;		On entry : 0/0
 54667 ;;		On exit  : 0/0
 54668 ;;		Unchanged: 0/0
 54669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54671 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54672 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54673 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54674 ;;Total ram usage:        9 bytes
 54675 ;; Hardware stack levels used:    1
 54676 ;; Hardware stack levels required when called:   10
 54677 ;; This function calls:
 54678 ;;		_SwTimersInterrupt
 54679 ;;		_TMR_OverrideRemaining
 54680 ;; This function is called by:
 54681 ;;		_RADIO_Transmit
 54682 ;;		_RADIO_ReceiveStart
 54683 ;;		_LORAWAN_TxDone
 54684 ;;		_LORAWAN_RxTimeout
 54685 ;;		_StartReTxTimer
 54686 ;;		_DutyCycleCallback
 54687 ;;		_LORAWAN_Join
 54688 ;;		_LORAWAN_LinkCheckConfigure
 54689 ;;		_LORAWAN_LinkCheckCallback
 54690 ;;		_UpdateRetransmissionAckTimeoutState
 54691 ;;		_UpdateJoinSuccessState
 54692 ;; This function uses a non-reentrant model
 54693 ;;
 54694                           
 54695                           	psect	text291
 54696  009AB8                     __ptext291:
 54697                           	opt stack 0
 54698  009AB8                     _SwTimerStart:
 54699                           	opt stack 18
 54700                           
 54701                           ; BSR set to: 0
 54702                           ;incstack = 0
 54703                           ;SwTimerStart@timerId stored from wreg
 54704  009AB8  0100               	movlb	0	; () banked
 54705  009ABA  6F99               	movwf	SwTimerStart@timerId& (0+255),b
 54706                           
 54707                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 54708                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 54709  009ABC  9EF2               	bcf	intcon,7,c	;volatile
 54710                           
 54711                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 54712  009ABE  ECDD  F042         	call	_SwTimersInterrupt	;wreg free
 54713  009AC2  C080  F095         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 54714  009AC6  C081  F096         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 54715  009ACA  C082  F097         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 54716  009ACE  C083  F098         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 54717                           
 54718                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 54719  009AD2  0100               	movlb	0	; () banked
 54720  009AD4  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 54721  009AD6  0D08               	mullw	8
 54722  009AD8  0E00               	movlw	low _swTimers
 54723  009ADA  24F3               	addwf	prodl,w,c
 54724  009ADC  6ED9               	movwf	fsr2l,c
 54725  009ADE  0E03               	movlw	high _swTimers
 54726  009AE0  20F4               	addwfc	prodh,w,c
 54727  009AE2  6EDA               	movwf	fsr2h,c
 54728  009AE4  5195               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 54729  009AE6  5CDE               	subwf	postinc2,w,c
 54730  009AE8  5196               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 54731  009AEA  58DE               	subwfb	postinc2,w,c
 54732  009AEC  5197               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 54733  009AEE  58DE               	subwfb	postinc2,w,c
 54734  009AF0  5198               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 54735  009AF2  58DE               	subwfb	postinc2,w,c
 54736  009AF4  B0D8               	btfsc	status,0,c
 54737  009AF6  D010               	goto	l589
 54738                           
 54739                           ; BSR set to: 0
 54740                           ;sw_timer.c: 225: {
 54741                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 54742  009AF8  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 54743  009AFA  0D08               	mullw	8
 54744  009AFC  0E00               	movlw	low _swTimers
 54745  009AFE  24F3               	addwf	prodl,w,c
 54746  009B00  6ED9               	movwf	fsr2l,c
 54747  009B02  0E03               	movlw	high _swTimers
 54748  009B04  20F4               	addwfc	prodh,w,c
 54749  009B06  6EDA               	movwf	fsr2h,c
 54750  009B08  CFDE F095          	movff	postinc2,SwTimerStart@ticksRemaining
 54751  009B0C  CFDE F096          	movff	postinc2,SwTimerStart@ticksRemaining+1
 54752  009B10  CFDE F097          	movff	postinc2,SwTimerStart@ticksRemaining+2
 54753  009B14  CFDE F098          	movff	postinc2,SwTimerStart@ticksRemaining+3
 54754  009B18                     l589:
 54755                           
 54756                           ; BSR set to: 0
 54757                           ;sw_timer.c: 227: }
 54758                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 54759                           
 54760                           ; BSR set to: 0
 54761  009B18  C095  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 54762  009B1C  C096  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 54763  009B20  C097  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 54764  009B24  C098  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 54765  009B28  ECA7  F04D         	call	_TMR_OverrideRemaining	;wreg free
 54766                           
 54767                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 54768  009B2C  0100               	movlb	0	; () banked
 54769  009B2E  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 54770  009B30  0D08               	mullw	8
 54771  009B32  0E04               	movlw	4
 54772  009B34  26F3               	addwf	prodl,f,c
 54773  009B36  0E00               	movlw	0
 54774  009B38  22F4               	addwfc	prodh,f,c
 54775  009B3A  0E00               	movlw	low _swTimers
 54776  009B3C  24F3               	addwf	prodl,w,c
 54777  009B3E  6ED9               	movwf	fsr2l,c
 54778  009B40  0E03               	movlw	high _swTimers
 54779  009B42  20F4               	addwfc	prodh,w,c
 54780  009B44  6EDA               	movwf	fsr2h,c
 54781  009B46  0E01               	movlw	1
 54782  009B48  6EDF               	movwf	indf2,c
 54783                           
 54784                           ; BSR set to: 0
 54785                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 54786  009B4A  8EF2               	bsf	intcon,7,c	;volatile
 54787                           
 54788                           ; BSR set to: 0
 54789  009B4C  0012               	return		;funcret
 54790  009B4E                     __end_of_SwTimerStart:
 54791                           	opt stack 0
 54792                           tosu	equ	0xFFF
 54793                           tosh	equ	0xFFE
 54794                           tosl	equ	0xFFD
 54795                           pclath	equ	0xFFA
 54796                           tblptru	equ	0xFF8
 54797                           tblptrh	equ	0xFF7
 54798                           tblptrl	equ	0xFF6
 54799                           tablat	equ	0xFF5
 54800                           prodh	equ	0xFF4
 54801                           prodl	equ	0xFF3
 54802                           intcon	equ	0xFF2
 54803                           intcon2	equ	0xFF1
 54804                           intcon3	equ	0xFF0
 54805                           indf0	equ	0xFEF
 54806                           postinc0	equ	0xFEE
 54807                           plusw0	equ	0xFEB
 54808                           fsr0h	equ	0xFEA
 54809                           fsr0l	equ	0xFE9
 54810                           wreg	equ	0xFE8
 54811                           postinc1	equ	0xFE6
 54812                           postdec1	equ	0xFE5
 54813                           plusw1	equ	0xFE3
 54814                           fsr1h	equ	0xFE2
 54815                           fsr1l	equ	0xFE1
 54816                           indf2	equ	0xFDF
 54817                           postinc2	equ	0xFDE
 54818                           postdec2	equ	0xFDD
 54819                           plusw2	equ	0xFDB
 54820                           fsr2h	equ	0xFDA
 54821                           fsr2l	equ	0xFD9
 54822                           status	equ	0xFD8
 54823                           
 54824 ;; *************** function _TMR_OverrideRemaining *****************
 54825 ;; Defined at:
 54826 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 54827 ;; Parameters:    Size  Location     Type
 54828 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 54829 ;; Auto vars:     Size  Location     Type
 54830 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 54831 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 54832 ;; Return value:  Size  Location     Type
 54833 ;;                  1    wreg      void 
 54834 ;; Registers used:
 54835 ;;		wreg, status,2, status,0, cstack
 54836 ;; Tracked objects:
 54837 ;;		On entry : 0/0
 54838 ;;		On exit  : 0/0
 54839 ;;		Unchanged: 0/0
 54840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54841 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54842 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54843 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54844 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54845 ;;Total ram usage:       10 bytes
 54846 ;; Hardware stack levels used:    1
 54847 ;; Hardware stack levels required when called:    9
 54848 ;; This function calls:
 54849 ;;		_TMR_SwapTimer
 54850 ;; This function is called by:
 54851 ;;		_SwTimerStart
 54852 ;; This function uses a non-reentrant model
 54853 ;;
 54854                           
 54855                           	psect	text292
 54856  009B4E                     __ptext292:
 54857                           	opt stack 0
 54858  009B4E                     _TMR_OverrideRemaining:
 54859                           	opt stack 18
 54860                           
 54861                           ;sw_timer.c: 67: uint16_t tmrVal;
 54862                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 54863                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 54864                           
 54865                           ; BSR set to: 0
 54866                           ;incstack = 0
 54867  009B4E  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 54868  009B50  1056               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 54869  009B52  1055               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 54870  009B54  E104               	bnz	u19240
 54871  009B56  0E0B               	movlw	11
 54872  009B58  5C54               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 54873  009B5A  A0D8               	btfss	status,0,c
 54874  009B5C  0012               	return	
 54875  009B5E                     u19240:
 54876                           
 54877                           ;sw_timer.c: 72: {
 54878                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 54879  009B5E  5054               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 54880  009B60  0100               	movlb	0	; () banked
 54881  009B62  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 54882  009B64  5055               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 54883  009B66  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 54884  009B68  5056               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 54885  009B6A  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 54886  009B6C  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 54887  009B6E  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 54888  009B70  B0D8               	btfsc	status,0,c
 54889  009B72  0012               	return	
 54890                           
 54891                           ; BSR set to: 0
 54892                           ;sw_timer.c: 74: {
 54893                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 54894  009B74  C06A  F054         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 54895  009B78  C06B  F055         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 54896  009B7C  C06C  F056         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 54897  009B80  C06D  F057         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 54898                           
 54899                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 54900  009B84  C044  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 54901  009B88  C045  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 54902                           
 54903                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 54904  009B8C  C06A  F06E         	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 54905  009B90  C06B  F06F         	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 54906  009B94  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 54907  009B96  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 54908  009B98  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 54909  009B9A  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 54910  009B9C  C06E  F044         	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 54911  009BA0  C06F  F045         	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 54912                           
 54913                           ; BSR set to: 0
 54914                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 54915  009BA4  C044  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 54916  009BA8  C045  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 54917  009BAC  EC37  F059         	call	_TMR_SwapTimer	;wreg free
 54918  009BB0  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 54919  009BB4  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 54920                           
 54921                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 54922  009BB8  C072  F06E         	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 54923  009BBC  C073  F06F         	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 54924  009BC0  0100               	movlb	0	; () banked
 54925  009BC2  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 54926  009BC4  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 54927  009BC6  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 54928  009BC8  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 54929  009BCA  5170               	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 54930  009BCC  276E               	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 54931  009BCE  5171               	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 54932  009BD0  236F               	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 54933  009BD2  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 54934  009BD4  2640               	addwf	_ticksAdded,f,c	;volatile
 54935  009BD6  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 54936  009BD8  2241               	addwfc	_ticksAdded+1,f,c	;volatile
 54937  009BDA  0E00               	movlw	0
 54938  009BDC  2242               	addwfc	_ticksAdded+2,f,c	;volatile
 54939  009BDE  0E00               	movlw	0
 54940  009BE0  2243               	addwfc	_ticksAdded+3,f,c	;volatile
 54941                           
 54942                           ; BSR set to: 0
 54943  009BE2  0012               	return	
 54944  009BE4                     __end_of_TMR_OverrideRemaining:
 54945                           	opt stack 0
 54946                           tosu	equ	0xFFF
 54947                           tosh	equ	0xFFE
 54948                           tosl	equ	0xFFD
 54949                           pclath	equ	0xFFA
 54950                           tblptru	equ	0xFF8
 54951                           tblptrh	equ	0xFF7
 54952                           tblptrl	equ	0xFF6
 54953                           tablat	equ	0xFF5
 54954                           prodh	equ	0xFF4
 54955                           prodl	equ	0xFF3
 54956                           intcon	equ	0xFF2
 54957                           intcon2	equ	0xFF1
 54958                           intcon3	equ	0xFF0
 54959                           indf0	equ	0xFEF
 54960                           postinc0	equ	0xFEE
 54961                           plusw0	equ	0xFEB
 54962                           fsr0h	equ	0xFEA
 54963                           fsr0l	equ	0xFE9
 54964                           wreg	equ	0xFE8
 54965                           postinc1	equ	0xFE6
 54966                           postdec1	equ	0xFE5
 54967                           plusw1	equ	0xFE3
 54968                           fsr1h	equ	0xFE2
 54969                           fsr1l	equ	0xFE1
 54970                           indf2	equ	0xFDF
 54971                           postinc2	equ	0xFDE
 54972                           postdec2	equ	0xFDD
 54973                           plusw2	equ	0xFDB
 54974                           fsr2h	equ	0xFDA
 54975                           fsr2l	equ	0xFD9
 54976                           status	equ	0xFD8
 54977                           
 54978 ;; *************** function _TMR_SwapTimer *****************
 54979 ;; Defined at:
 54980 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 54981 ;; Parameters:    Size  Location     Type
 54982 ;;  timerVal        2    8[BANK0 ] unsigned int 
 54983 ;; Auto vars:     Size  Location     Type
 54984 ;;		None
 54985 ;; Return value:  Size  Location     Type
 54986 ;;                  2    8[BANK0 ] unsigned int 
 54987 ;; Registers used:
 54988 ;;		wreg, status,2, status,0, cstack
 54989 ;; Tracked objects:
 54990 ;;		On entry : 0/0
 54991 ;;		On exit  : 0/0
 54992 ;;		Unchanged: 0/0
 54993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54994 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54997 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54998 ;;Total ram usage:        2 bytes
 54999 ;; Hardware stack levels used:    1
 55000 ;; Hardware stack levels required when called:    8
 55001 ;; This function calls:
 55002 ;;		_TMR1_ReadTimer
 55003 ;;		_TMR1_WriteTimer
 55004 ;; This function is called by:
 55005 ;;		_TMR_OverrideRemaining
 55006 ;; This function uses a non-reentrant model
 55007 ;;
 55008                           
 55009                           	psect	text293
 55010  00B26E                     __ptext293:
 55011                           	opt stack 0
 55012  00B26E                     _TMR_SwapTimer:
 55013                           	opt stack 18
 55014                           
 55015                           ;sw_timer.c: 114: static uint16_t oldVal;
 55016                           ;sw_timer.c: 115: static uint16_t retVal;
 55017                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 55018                           
 55019                           ;incstack = 0
 55020  00B26E  EC5E  F05F         	call	_TMR1_ReadTimer	;wreg free
 55021  00B272  C060  F122         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 55022  00B276  C061  F123         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 55023  00B27A                     
 55024                           ;sw_timer.c: 123: ;
 55025  00B27A  EC5E  F05F         	call	_TMR1_ReadTimer	;wreg free
 55026  00B27E  0101               	movlb	1	; () banked
 55027  00B280  5122               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 55028  00B282  0100               	movlb	0	; () banked
 55029  00B284  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 55030  00B286  E106               	bnz	l17367
 55031  00B288  0101               	movlb	1	; () banked
 55032  00B28A  5123               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 55033  00B28C  0100               	movlb	0	; () banked
 55034  00B28E  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 55035  00B290  B4D8               	btfsc	status,2,c
 55036  00B292  D7F3               	goto	l555
 55037  00B294                     l17367:
 55038                           
 55039                           ; BSR set to: 0
 55040                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 55041  00B294  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 55042  00B298  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 55043  00B29C  ECFF  F05F         	call	_TMR1_WriteTimer	;wreg free
 55044                           
 55045                           ;sw_timer.c: 128: oldVal++;
 55046  00B2A0  0101               	movlb	1	; () banked
 55047  00B2A2  4B22               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 55048  00B2A4  2B23               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 55049                           
 55050                           ; BSR set to: 1
 55051                           ;sw_timer.c: 130: retVal = oldVal;
 55052  00B2A6  C122  F120         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 55053  00B2AA  C123  F121         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 55054                           
 55055                           ; BSR set to: 1
 55056                           ;sw_timer.c: 132: return retVal;
 55057  00B2AE  C120  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 55058  00B2B2  C121  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 55059  00B2B6  0012               	return	
 55060  00B2B8                     __end_of_TMR_SwapTimer:
 55061                           	opt stack 0
 55062                           tosu	equ	0xFFF
 55063                           tosh	equ	0xFFE
 55064                           tosl	equ	0xFFD
 55065                           pclath	equ	0xFFA
 55066                           tblptru	equ	0xFF8
 55067                           tblptrh	equ	0xFF7
 55068                           tblptrl	equ	0xFF6
 55069                           tablat	equ	0xFF5
 55070                           prodh	equ	0xFF4
 55071                           prodl	equ	0xFF3
 55072                           intcon	equ	0xFF2
 55073                           intcon2	equ	0xFF1
 55074                           intcon3	equ	0xFF0
 55075                           indf0	equ	0xFEF
 55076                           postinc0	equ	0xFEE
 55077                           plusw0	equ	0xFEB
 55078                           fsr0h	equ	0xFEA
 55079                           fsr0l	equ	0xFE9
 55080                           wreg	equ	0xFE8
 55081                           postinc1	equ	0xFE6
 55082                           postdec1	equ	0xFE5
 55083                           plusw1	equ	0xFE3
 55084                           fsr1h	equ	0xFE2
 55085                           fsr1l	equ	0xFE1
 55086                           indf2	equ	0xFDF
 55087                           postinc2	equ	0xFDE
 55088                           postdec2	equ	0xFDD
 55089                           plusw2	equ	0xFDB
 55090                           fsr2h	equ	0xFDA
 55091                           fsr2l	equ	0xFD9
 55092                           status	equ	0xFD8
 55093                           
 55094 ;; *************** function _TMR1_WriteTimer *****************
 55095 ;; Defined at:
 55096 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 55097 ;; Parameters:    Size  Location     Type
 55098 ;;  timerVal        2    0[BANK0 ] unsigned int 
 55099 ;; Auto vars:     Size  Location     Type
 55100 ;;		None
 55101 ;; Return value:  Size  Location     Type
 55102 ;;                  1    wreg      void 
 55103 ;; Registers used:
 55104 ;;		wreg, status,2
 55105 ;; Tracked objects:
 55106 ;;		On entry : 0/0
 55107 ;;		On exit  : 0/0
 55108 ;;		Unchanged: 0/0
 55109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55110 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55113 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55114 ;;Total ram usage:        2 bytes
 55115 ;; Hardware stack levels used:    1
 55116 ;; Hardware stack levels required when called:    7
 55117 ;; This function calls:
 55118 ;;		Nothing
 55119 ;; This function is called by:
 55120 ;;		_TMR_SwapTimer
 55121 ;;		_TMR1_Reload
 55122 ;; This function uses a non-reentrant model
 55123 ;;
 55124                           
 55125                           	psect	text294
 55126  00BFFE                     __ptext294:
 55127                           	opt stack 0
 55128  00BFFE                     _TMR1_WriteTimer:
 55129                           	opt stack 18
 55130                           
 55131                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 55132                           
 55133                           ; BSR set to: 1
 55134                           ;incstack = 0
 55135  00BFFE  A4CD               	btfss	4045,2,c	;volatile
 55136  00C000  D008               	goto	l2774
 55137                           
 55138                           ;tmr1.c: 124: {
 55139                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 55140  00C002  90CD               	bcf	4045,0,c	;volatile
 55141                           
 55142                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 55143  00C004  0100               	movlb	0	; () banked
 55144  00C006  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 55145  00C008  6ECF               	movwf	4047,c	;volatile
 55146                           
 55147                           ; BSR set to: 0
 55148                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 55149  00C00A  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 55150                           
 55151                           ; BSR set to: 0
 55152                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 55153  00C00E  80CD               	bsf	4045,0,c	;volatile
 55154                           
 55155                           ;tmr1.c: 134: }
 55156  00C010  0012               	return	
 55157  00C012                     l2774:
 55158                           
 55159                           ;tmr1.c: 135: else
 55160                           ;tmr1.c: 136: {
 55161                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 55162                           
 55163                           ; BSR set to: 0
 55164  00C012  0100               	movlb	0	; () banked
 55165  00C014  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 55166  00C016  6ECF               	movwf	4047,c	;volatile
 55167                           
 55168                           ; BSR set to: 0
 55169                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 55170  00C018  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 55171  00C01C  0012               	return	
 55172  00C01E                     __end_of_TMR1_WriteTimer:
 55173                           	opt stack 0
 55174                           tosu	equ	0xFFF
 55175                           tosh	equ	0xFFE
 55176                           tosl	equ	0xFFD
 55177                           pclath	equ	0xFFA
 55178                           tblptru	equ	0xFF8
 55179                           tblptrh	equ	0xFF7
 55180                           tblptrl	equ	0xFF6
 55181                           tablat	equ	0xFF5
 55182                           prodh	equ	0xFF4
 55183                           prodl	equ	0xFF3
 55184                           intcon	equ	0xFF2
 55185                           intcon2	equ	0xFF1
 55186                           intcon3	equ	0xFF0
 55187                           indf0	equ	0xFEF
 55188                           postinc0	equ	0xFEE
 55189                           plusw0	equ	0xFEB
 55190                           fsr0h	equ	0xFEA
 55191                           fsr0l	equ	0xFE9
 55192                           wreg	equ	0xFE8
 55193                           postinc1	equ	0xFE6
 55194                           postdec1	equ	0xFE5
 55195                           plusw1	equ	0xFE3
 55196                           fsr1h	equ	0xFE2
 55197                           fsr1l	equ	0xFE1
 55198                           indf2	equ	0xFDF
 55199                           postinc2	equ	0xFDE
 55200                           postdec2	equ	0xFDD
 55201                           plusw2	equ	0xFDB
 55202                           fsr2h	equ	0xFDA
 55203                           fsr2l	equ	0xFD9
 55204                           status	equ	0xFD8
 55205                           
 55206 ;; *************** function _SwTimersInterrupt *****************
 55207 ;; Defined at:
 55208 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 55209 ;; Parameters:    Size  Location     Type
 55210 ;;		None
 55211 ;; Auto vars:     Size  Location     Type
 55212 ;;  ticksToNextT    4   44[BANK0 ] unsigned long 
 55213 ;;  timeElapsed     4   40[BANK0 ] unsigned long 
 55214 ;;  i               1   48[BANK0 ] unsigned char 
 55215 ;; Return value:  Size  Location     Type
 55216 ;;                  4   32[BANK0 ] unsigned long 
 55217 ;; Registers used:
 55218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55219 ;; Tracked objects:
 55220 ;;		On entry : 0/0
 55221 ;;		On exit  : 0/0
 55222 ;;		Unchanged: 0/0
 55223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55224 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55225 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55226 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55227 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55228 ;;Total ram usage:       17 bytes
 55229 ;; Hardware stack levels used:    1
 55230 ;; Hardware stack levels required when called:    9
 55231 ;; This function calls:
 55232 ;;		_TMR_GetDeltaTime
 55233 ;; This function is called by:
 55234 ;;		_SwTimerReadValue
 55235 ;;		_SwTimerStart
 55236 ;;		_SwTimersCanSleep
 55237 ;; This function uses a non-reentrant model
 55238 ;;
 55239                           
 55240                           	psect	text295
 55241  0085BA                     __ptext295:
 55242                           	opt stack 0
 55243  0085BA                     _SwTimersInterrupt:
 55244                           	opt stack 18
 55245                           
 55246                           ;sw_timer.c: 289: uint8_t i;
 55247                           ;sw_timer.c: 290: uint32_t timeElapsed;
 55248                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 55249                           
 55250                           ; BSR set to: 0
 55251                           ;incstack = 0
 55252  0085BA  0100               	movlb	0	; () banked
 55253  0085BC  698C               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 55254  0085BE  698D               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 55255  0085C0  698E               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 55256  0085C2  698F               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 55257                           
 55258                           ; BSR set to: 0
 55259                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 55260  0085C4  ECAC  F035         	call	_TMR_GetDeltaTime	;wreg free
 55261  0085C8  C068  F088         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 55262  0085CC  C069  F089         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 55263  0085D0  C06A  F08A         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 55264  0085D4  C06B  F08B         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 55265                           
 55266                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 55267  0085D8  0E00               	movlw	0
 55268  0085DA  0100               	movlb	0	; () banked
 55269  0085DC  6F90               	movwf	SwTimersInterrupt@i& (0+255),b
 55270  0085DE  D061               	goto	l612
 55271  0085E0                     
 55272                           ; BSR set to: 0
 55273                           ;sw_timer.c: 298: {
 55274                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 55275                           
 55276                           ; BSR set to: 0
 55277  0085E0  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55278  0085E2  0D08               	mullw	8
 55279  0085E4  0E04               	movlw	4
 55280  0085E6  26F3               	addwf	prodl,f,c
 55281  0085E8  0E00               	movlw	0
 55282  0085EA  22F4               	addwfc	prodh,f,c
 55283  0085EC  0E00               	movlw	low _swTimers
 55284  0085EE  24F3               	addwf	prodl,w,c
 55285  0085F0  6ED9               	movwf	fsr2l,c
 55286  0085F2  0E03               	movlw	high _swTimers
 55287  0085F4  20F4               	addwfc	prodh,w,c
 55288  0085F6  6EDA               	movwf	fsr2h,c
 55289  0085F8  04DE               	decf	postinc2,w,c
 55290  0085FA  A4D8               	btfss	status,2,c
 55291  0085FC  D051               	goto	l617
 55292                           
 55293                           ; BSR set to: 0
 55294                           ;sw_timer.c: 302: {
 55295                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 55296  0085FE  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55297  008600  0D08               	mullw	8
 55298  008602  0E00               	movlw	low _swTimers
 55299  008604  24F3               	addwf	prodl,w,c
 55300  008606  6ED9               	movwf	fsr2l,c
 55301  008608  0E03               	movlw	high _swTimers
 55302  00860A  20F4               	addwfc	prodh,w,c
 55303  00860C  6EDA               	movwf	fsr2h,c
 55304  00860E  50DE               	movf	postinc2,w,c
 55305  008610  5D88               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 55306  008612  50DE               	movf	postinc2,w,c
 55307  008614  5989               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 55308  008616  50DE               	movf	postinc2,w,c
 55309  008618  598A               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 55310  00861A  50DE               	movf	postinc2,w,c
 55311  00861C  598B               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 55312  00861E  A0D8               	btfss	status,0,c
 55313  008620  D00D               	goto	l615
 55314                           
 55315                           ; BSR set to: 0
 55316                           ;sw_timer.c: 304: {
 55317                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 55318  008622  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55319  008624  0D08               	mullw	8
 55320  008626  0E00               	movlw	low _swTimers
 55321  008628  24F3               	addwf	prodl,w,c
 55322  00862A  6ED9               	movwf	fsr2l,c
 55323  00862C  0E03               	movlw	high _swTimers
 55324  00862E  20F4               	addwfc	prodh,w,c
 55325  008630  6EDA               	movwf	fsr2h,c
 55326  008632  6ADE               	clrf	postinc2,c
 55327  008634  6ADE               	clrf	postinc2,c
 55328  008636  6ADE               	clrf	postinc2,c
 55329  008638  6ADD               	clrf	postdec2,c
 55330                           
 55331                           ;sw_timer.c: 306: }
 55332  00863A  D032               	goto	l617
 55333  00863C                     l615:
 55334                           
 55335                           ; BSR set to: 0
 55336                           ;sw_timer.c: 307: else
 55337                           ;sw_timer.c: 308: {
 55338                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 55339                           
 55340                           ; BSR set to: 0
 55341  00863C  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55342  00863E  0D08               	mullw	8
 55343  008640  0E00               	movlw	low _swTimers
 55344  008642  24F3               	addwf	prodl,w,c
 55345  008644  6ED9               	movwf	fsr2l,c
 55346  008646  0E03               	movlw	high _swTimers
 55347  008648  20F4               	addwfc	prodh,w,c
 55348  00864A  6EDA               	movwf	fsr2h,c
 55349  00864C  5188               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 55350  00864E  5EDE               	subwf	postinc2,f,c
 55351  008650  5189               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 55352  008652  5ADE               	subwfb	postinc2,f,c
 55353  008654  518A               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 55354  008656  5ADE               	subwfb	postinc2,f,c
 55355  008658  518B               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 55356  00865A  5ADE               	subwfb	postinc2,f,c
 55357                           
 55358                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 55359  00865C  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55360  00865E  0D08               	mullw	8
 55361  008660  0E00               	movlw	low _swTimers
 55362  008662  24F3               	addwf	prodl,w,c
 55363  008664  6ED9               	movwf	fsr2l,c
 55364  008666  0E03               	movlw	high _swTimers
 55365  008668  20F4               	addwfc	prodh,w,c
 55366  00866A  6EDA               	movwf	fsr2h,c
 55367  00866C  518C               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 55368  00866E  5CDE               	subwf	postinc2,w,c
 55369  008670  518D               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 55370  008672  58DE               	subwfb	postinc2,w,c
 55371  008674  518E               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 55372  008676  58DE               	subwfb	postinc2,w,c
 55373  008678  518F               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 55374  00867A  58DE               	subwfb	postinc2,w,c
 55375  00867C  B0D8               	btfsc	status,0,c
 55376  00867E  D010               	goto	l617
 55377                           
 55378                           ; BSR set to: 0
 55379                           ;sw_timer.c: 313: {
 55380                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 55381  008680  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55382  008682  0D08               	mullw	8
 55383  008684  0E00               	movlw	low _swTimers
 55384  008686  24F3               	addwf	prodl,w,c
 55385  008688  6ED9               	movwf	fsr2l,c
 55386  00868A  0E03               	movlw	high _swTimers
 55387  00868C  20F4               	addwfc	prodh,w,c
 55388  00868E  6EDA               	movwf	fsr2h,c
 55389  008690  CFDE F08C          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 55390  008694  CFDE F08D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 55391  008698  CFDE F08E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 55392  00869C  CFDE F08F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 55393  0086A0                     l617:
 55394                           
 55395                           ; BSR set to: 0
 55396                           
 55397                           ; BSR set to: 0
 55398                           
 55399                           ; BSR set to: 0
 55400                           
 55401                           ; BSR set to: 0
 55402  0086A0  2B90               	incf	SwTimersInterrupt@i& (0+255),f,b
 55403  0086A2                     l612:
 55404                           
 55405                           ; BSR set to: 0
 55406                           
 55407                           ; BSR set to: 0
 55408  0086A2  51FF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 55409  0086A4  5D90               	subwf	SwTimersInterrupt@i& (0+255),w,b
 55410  0086A6  A0D8               	btfss	status,0,c
 55411  0086A8  D79B               	goto	l613
 55412                           
 55413                           ; BSR set to: 0
 55414                           ;sw_timer.c: 315: }
 55415                           ;sw_timer.c: 316: }
 55416                           ;sw_timer.c: 317: }
 55417                           ;sw_timer.c: 318: }
 55418                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 55419  0086AA  C08C  F080         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 55420  0086AE  C08D  F081         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 55421  0086B2  C08E  F082         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 55422  0086B6  C08F  F083         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 55423                           
 55424                           ; BSR set to: 0
 55425  0086BA  0012               	return		;funcret
 55426  0086BC                     __end_of_SwTimersInterrupt:
 55427                           	opt stack 0
 55428                           tosu	equ	0xFFF
 55429                           tosh	equ	0xFFE
 55430                           tosl	equ	0xFFD
 55431                           pclath	equ	0xFFA
 55432                           tblptru	equ	0xFF8
 55433                           tblptrh	equ	0xFF7
 55434                           tblptrl	equ	0xFF6
 55435                           tablat	equ	0xFF5
 55436                           prodh	equ	0xFF4
 55437                           prodl	equ	0xFF3
 55438                           intcon	equ	0xFF2
 55439                           intcon2	equ	0xFF1
 55440                           intcon3	equ	0xFF0
 55441                           indf0	equ	0xFEF
 55442                           postinc0	equ	0xFEE
 55443                           plusw0	equ	0xFEB
 55444                           fsr0h	equ	0xFEA
 55445                           fsr0l	equ	0xFE9
 55446                           wreg	equ	0xFE8
 55447                           postinc1	equ	0xFE6
 55448                           postdec1	equ	0xFE5
 55449                           plusw1	equ	0xFE3
 55450                           fsr1h	equ	0xFE2
 55451                           fsr1l	equ	0xFE1
 55452                           indf2	equ	0xFDF
 55453                           postinc2	equ	0xFDE
 55454                           postdec2	equ	0xFDD
 55455                           plusw2	equ	0xFDB
 55456                           fsr2h	equ	0xFDA
 55457                           fsr2l	equ	0xFD9
 55458                           status	equ	0xFD8
 55459                           
 55460 ;; *************** function _TMR_GetDeltaTime *****************
 55461 ;; Defined at:
 55462 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 55463 ;; Parameters:    Size  Location     Type
 55464 ;;		None
 55465 ;; Auto vars:     Size  Location     Type
 55466 ;;		None
 55467 ;; Return value:  Size  Location     Type
 55468 ;;                  4    8[BANK0 ] unsigned long 
 55469 ;; Registers used:
 55470 ;;		wreg, status,2, status,0, cstack
 55471 ;; Tracked objects:
 55472 ;;		On entry : 0/0
 55473 ;;		On exit  : 0/0
 55474 ;;		Unchanged: 0/0
 55475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55476 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55478 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55479 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55480 ;;Total ram usage:       24 bytes
 55481 ;; Hardware stack levels used:    1
 55482 ;; Hardware stack levels required when called:    8
 55483 ;; This function calls:
 55484 ;;		_TMR1_ReadTimer
 55485 ;; This function is called by:
 55486 ;;		_SwTimersInterrupt
 55487 ;; This function uses a non-reentrant model
 55488 ;;
 55489                           
 55490                           	psect	text296
 55491  006B58                     __ptext296:
 55492                           	opt stack 0
 55493  006B58                     _TMR_GetDeltaTime:
 55494                           	opt stack 18
 55495                           
 55496                           ;sw_timer.c: 90: static uint32_t retVal;
 55497                           ;sw_timer.c: 91: static uint16_t tmrVal;
 55498                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 55499                           
 55500                           ; BSR set to: 0
 55501                           ;incstack = 0
 55502  006B58  EC5E  F05F         	call	_TMR1_ReadTimer	;wreg free
 55503  006B5C  C060  F124         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 55504  006B60  C061  F125         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 55505                           
 55506                           ;sw_timer.c: 95: if (timerOverflow == 1)
 55507  006B64  0447               	decf	_timerOverflow,w,c	;volatile
 55508  006B66  A4D8               	btfss	status,2,c
 55509  006B68  D071               	goto	l545
 55510                           
 55511                           ;sw_timer.c: 96: {
 55512                           ;sw_timer.c: 97: timerOverflow = 0;
 55513  006B6A  0E00               	movlw	0
 55514  006B6C  6E47               	movwf	_timerOverflow,c	;volatile
 55515                           
 55516                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 55517  006B6E  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 55518  006B72  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 55519  006B76  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 55520  006B7A  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 55521  006B7E  0100               	movlb	0	; () banked
 55522  006B80  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 55523  006B82  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 55524  006B84  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 55525  006B86  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 55526  006B88  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 55527  006B8A  0E00               	movlw	0
 55528  006B8C  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 55529  006B8E  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 55530  006B90  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 55531  006B92  5044               	movf	_reloadVal,w,c	;volatile
 55532  006B94  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 55533  006B96  5045               	movf	_reloadVal+1,w,c	;volatile
 55534  006B98  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 55535  006B9A  6B72               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 55536  006B9C  6B73               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 55537  006B9E  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 55538  006BA0  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 55539  006BA2  1F72               	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 55540  006BA4  1F73               	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 55541  006BA6  2B70               	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 55542  006BA8  0E00               	movlw	0
 55543  006BAA  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 55544  006BAC  2372               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 55545  006BAE  2373               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 55546  006BB0  0101               	movlb	1	; () banked
 55547  006BB2  5124               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 55548  006BB4  0100               	movlb	0	; () banked
 55549  006BB6  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 55550  006BB8  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 55551  006BBA  0101               	movlb	1	; () banked
 55552  006BBC  5125               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 55553  006BBE  0100               	movlb	0	; () banked
 55554  006BC0  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 55555  006BC2  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 55556  006BC4  0E00               	movlw	0
 55557  006BC6  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 55558  006BC8  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 55559  006BCA  0E00               	movlw	0
 55560  006BCC  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 55561  006BCE  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 55562  006BD0  516C               	movf	??_TMR_GetDeltaTime& (0+255),w,b
 55563  006BD2  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 55564  006BD4  6F78               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 55565  006BD6  516D               	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 55566  006BD8  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 55567  006BDA  6F79               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 55568  006BDC  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 55569  006BDE  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 55570  006BE0  6F7A               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 55571  006BE2  516F               	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 55572  006BE4  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 55573  006BE6  6F7B               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 55574  006BE8  5040               	movf	_ticksAdded,w,c	;volatile
 55575  006BEA  2578               	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 55576  006BEC  6F7C               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 55577  006BEE  5041               	movf	_ticksAdded+1,w,c	;volatile
 55578  006BF0  2179               	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 55579  006BF2  6F7D               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 55580  006BF4  5042               	movf	_ticksAdded+2,w,c	;volatile
 55581  006BF6  217A               	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 55582  006BF8  6F7E               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 55583  006BFA  5043               	movf	_ticksAdded+3,w,c	;volatile
 55584  006BFC  217B               	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 55585  006BFE  6F7F               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 55586  006C00  0E00               	movlw	0
 55587  006C02  257C               	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 55588  006C04  0101               	movlb	1	; () banked
 55589  006C06  6F10               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 55590  006C08  0E00               	movlw	0
 55591  006C0A  0100               	movlb	0	; () banked
 55592  006C0C  217D               	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 55593  006C0E  0101               	movlb	1	; () banked
 55594  006C10  6F11               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 55595  006C12  0E01               	movlw	1
 55596  006C14  0100               	movlb	0	; () banked
 55597  006C16  217E               	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 55598  006C18  0101               	movlb	1	; () banked
 55599  006C1A  6F12               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 55600  006C1C  0E00               	movlw	0
 55601  006C1E  0100               	movlb	0	; () banked
 55602  006C20  217F               	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 55603  006C22  0101               	movlb	1	; () banked
 55604  006C24  6F13               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 55605                           
 55606                           ; BSR set to: 1
 55607                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 55608  006C26  C124  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 55609  006C2A  C125  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 55610  006C2E  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 55611  006C30  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 55612                           
 55613                           ; BSR set to: 1
 55614                           ;sw_timer.c: 100: ticksAdded = 0;
 55615  006C32  0E00               	movlw	0
 55616  006C34  6E40               	movwf	_ticksAdded,c	;volatile
 55617  006C36  0E00               	movlw	0
 55618  006C38  6E41               	movwf	_ticksAdded+1,c	;volatile
 55619  006C3A  0E00               	movlw	0
 55620  006C3C  6E42               	movwf	_ticksAdded+2,c	;volatile
 55621  006C3E  0E00               	movlw	0
 55622  006C40  6E43               	movwf	_ticksAdded+3,c	;volatile
 55623                           
 55624                           ; BSR set to: 1
 55625                           ;sw_timer.c: 101: reloadVal = 0;
 55626  006C42  0E00               	movlw	0
 55627  006C44  6E45               	movwf	_reloadVal+1,c	;volatile
 55628  006C46  0E00               	movlw	0
 55629  006C48  6E44               	movwf	_reloadVal,c	;volatile
 55630                           
 55631                           ;sw_timer.c: 102: }
 55632  006C4A  D049               	goto	l546
 55633  006C4C                     l545:
 55634                           
 55635                           ;sw_timer.c: 103: else
 55636                           ;sw_timer.c: 104: {
 55637                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 55638                           
 55639                           ; BSR set to: 1
 55640  006C4C  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 55641  006C50  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 55642  006C54  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 55643  006C58  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 55644  006C5C  0100               	movlb	0	; () banked
 55645  006C5E  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 55646  006C60  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 55647  006C62  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 55648  006C64  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 55649  006C66  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 55650  006C68  0E00               	movlw	0
 55651  006C6A  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 55652  006C6C  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 55653  006C6E  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 55654  006C70  C044  F070         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 55655  006C74  C045  F071         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 55656  006C78  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 55657  006C7A  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 55658  006C7C  4B70               	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 55659  006C7E  2B71               	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 55660  006C80  0101               	movlb	1	; () banked
 55661  006C82  5124               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 55662  006C84  0100               	movlb	0	; () banked
 55663  006C86  2770               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 55664  006C88  0101               	movlb	1	; () banked
 55665  006C8A  5125               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 55666  006C8C  0100               	movlb	0	; () banked
 55667  006C8E  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 55668  006C90  5170               	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 55669  006C92  256C               	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 55670  006C94  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 55671  006C96  5171               	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 55672  006C98  216D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 55673  006C9A  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 55674  006C9C  0E00               	movlw	0
 55675  006C9E  216E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 55676  006CA0  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 55677  006CA2  0E00               	movlw	0
 55678  006CA4  216F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 55679  006CA6  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 55680  006CA8  5040               	movf	_ticksAdded,w,c	;volatile
 55681  006CAA  2572               	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 55682  006CAC  0101               	movlb	1	; () banked
 55683  006CAE  6F10               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 55684  006CB0  5041               	movf	_ticksAdded+1,w,c	;volatile
 55685  006CB2  0100               	movlb	0	; () banked
 55686  006CB4  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 55687  006CB6  0101               	movlb	1	; () banked
 55688  006CB8  6F11               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 55689  006CBA  5042               	movf	_ticksAdded+2,w,c	;volatile
 55690  006CBC  0100               	movlb	0	; () banked
 55691  006CBE  2174               	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 55692  006CC0  0101               	movlb	1	; () banked
 55693  006CC2  6F12               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 55694  006CC4  5043               	movf	_ticksAdded+3,w,c	;volatile
 55695  006CC6  0100               	movlb	0	; () banked
 55696  006CC8  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 55697  006CCA  0101               	movlb	1	; () banked
 55698  006CCC  6F13               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 55699                           
 55700                           ;sw_timer.c: 106: ticksAccounted += retVal;
 55701  006CCE  5110               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 55702  006CD0  263C               	addwf	_ticksAccounted,f,c	;volatile
 55703  006CD2  5111               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 55704  006CD4  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 55705  006CD6  5112               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 55706  006CD8  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 55707  006CDA  5113               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 55708  006CDC  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 55709  006CDE                     l546:
 55710                           
 55711                           ; BSR set to: 1
 55712                           ;sw_timer.c: 107: }
 55713                           ;sw_timer.c: 109: return retVal;
 55714                           
 55715                           ; BSR set to: 1
 55716  006CDE  C110  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 55717  006CE2  C111  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 55718  006CE6  C112  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 55719  006CEA  C113  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 55720  006CEE  0012               	return	
 55721  006CF0                     __end_of_TMR_GetDeltaTime:
 55722                           	opt stack 0
 55723                           tosu	equ	0xFFF
 55724                           tosh	equ	0xFFE
 55725                           tosl	equ	0xFFD
 55726                           pclath	equ	0xFFA
 55727                           tblptru	equ	0xFF8
 55728                           tblptrh	equ	0xFF7
 55729                           tblptrl	equ	0xFF6
 55730                           tablat	equ	0xFF5
 55731                           prodh	equ	0xFF4
 55732                           prodl	equ	0xFF3
 55733                           intcon	equ	0xFF2
 55734                           intcon2	equ	0xFF1
 55735                           intcon3	equ	0xFF0
 55736                           indf0	equ	0xFEF
 55737                           postinc0	equ	0xFEE
 55738                           plusw0	equ	0xFEB
 55739                           fsr0h	equ	0xFEA
 55740                           fsr0l	equ	0xFE9
 55741                           wreg	equ	0xFE8
 55742                           postinc1	equ	0xFE6
 55743                           postdec1	equ	0xFE5
 55744                           plusw1	equ	0xFE3
 55745                           fsr1h	equ	0xFE2
 55746                           fsr1l	equ	0xFE1
 55747                           indf2	equ	0xFDF
 55748                           postinc2	equ	0xFDE
 55749                           postdec2	equ	0xFDD
 55750                           plusw2	equ	0xFDB
 55751                           fsr2h	equ	0xFDA
 55752                           fsr2l	equ	0xFD9
 55753                           status	equ	0xFD8
 55754                           
 55755 ;; *************** function _TMR1_ReadTimer *****************
 55756 ;; Defined at:
 55757 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 55758 ;; Parameters:    Size  Location     Type
 55759 ;;		None
 55760 ;; Auto vars:     Size  Location     Type
 55761 ;;  readVal         2    4[BANK0 ] unsigned int 
 55762 ;;  readValLow      1    7[BANK0 ] unsigned char 
 55763 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 55764 ;; Return value:  Size  Location     Type
 55765 ;;                  2    0[BANK0 ] unsigned int 
 55766 ;; Registers used:
 55767 ;;		wreg, status,2
 55768 ;; Tracked objects:
 55769 ;;		On entry : 0/0
 55770 ;;		On exit  : 0/0
 55771 ;;		Unchanged: 0/0
 55772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55773 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55774 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55775 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55776 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55777 ;;Total ram usage:        8 bytes
 55778 ;; Hardware stack levels used:    1
 55779 ;; Hardware stack levels required when called:    7
 55780 ;; This function calls:
 55781 ;;		Nothing
 55782 ;; This function is called by:
 55783 ;;		_TMR_GetDeltaTime
 55784 ;;		_TMR_SwapTimer
 55785 ;; This function uses a non-reentrant model
 55786 ;;
 55787                           
 55788                           	psect	text297
 55789  00BEBC                     __ptext297:
 55790                           	opt stack 0
 55791  00BEBC                     _TMR1_ReadTimer:
 55792                           	opt stack 18
 55793                           
 55794                           ;tmr1.c: 107: uint16_t readVal;
 55795                           ;tmr1.c: 108: uint8_t readValHigh;
 55796                           ;tmr1.c: 109: uint8_t readValLow;
 55797                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 55798                           
 55799                           ; BSR set to: 1
 55800                           ;incstack = 0
 55801  00BEBC  82CD               	bsf	4045,1,c	;volatile
 55802                           
 55803                           ;tmr1.c: 113: readValLow = TMR1L;
 55804  00BEBE  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 55805                           
 55806                           ;tmr1.c: 114: readValHigh = TMR1H;
 55807  00BEC2  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 55808                           
 55809                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 55810  00BEC6  0100               	movlb	0	; () banked
 55811  00BEC8  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 55812  00BECA  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 55813  00BECC  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 55814  00BECE  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 55815  00BED0  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 55816                           
 55817                           ; BSR set to: 0
 55818                           ;tmr1.c: 118: return readVal;
 55819  00BED4  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 55820  00BED8  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 55821  00BEDC  0012               	return	
 55822  00BEDE                     __end_of_TMR1_ReadTimer:
 55823                           	opt stack 0
 55824                           tosu	equ	0xFFF
 55825                           tosh	equ	0xFFE
 55826                           tosl	equ	0xFFD
 55827                           pclath	equ	0xFFA
 55828                           tblptru	equ	0xFF8
 55829                           tblptrh	equ	0xFF7
 55830                           tblptrl	equ	0xFF6
 55831                           tablat	equ	0xFF5
 55832                           prodh	equ	0xFF4
 55833                           prodl	equ	0xFF3
 55834                           intcon	equ	0xFF2
 55835                           intcon2	equ	0xFF1
 55836                           intcon3	equ	0xFF0
 55837                           indf0	equ	0xFEF
 55838                           postinc0	equ	0xFEE
 55839                           plusw0	equ	0xFEB
 55840                           fsr0h	equ	0xFEA
 55841                           fsr0l	equ	0xFE9
 55842                           wreg	equ	0xFE8
 55843                           postinc1	equ	0xFE6
 55844                           postdec1	equ	0xFE5
 55845                           plusw1	equ	0xFE3
 55846                           fsr1h	equ	0xFE2
 55847                           fsr1l	equ	0xFE1
 55848                           indf2	equ	0xFDF
 55849                           postinc2	equ	0xFDE
 55850                           postdec2	equ	0xFDD
 55851                           plusw2	equ	0xFDB
 55852                           fsr2h	equ	0xFDA
 55853                           fsr2l	equ	0xFD9
 55854                           status	equ	0xFD8
 55855                           
 55856 ;; *************** function _SwTimerSetTimeout *****************
 55857 ;; Defined at:
 55858 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 55859 ;; Parameters:    Size  Location     Type
 55860 ;;  timerId         1    wreg     unsigned char 
 55861 ;;  timeout         4   13[BANK0 ] unsigned long 
 55862 ;; Auto vars:     Size  Location     Type
 55863 ;;  timerId         1   21[BANK0 ] unsigned char 
 55864 ;; Return value:  Size  Location     Type
 55865 ;;                  1    wreg      void 
 55866 ;; Registers used:
 55867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55868 ;; Tracked objects:
 55869 ;;		On entry : 0/0
 55870 ;;		On exit  : 0/0
 55871 ;;		Unchanged: 0/0
 55872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55873 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55875 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55876 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55877 ;;Total ram usage:        9 bytes
 55878 ;; Hardware stack levels used:    1
 55879 ;; Hardware stack levels required when called:    7
 55880 ;; This function calls:
 55881 ;;		Nothing
 55882 ;; This function is called by:
 55883 ;;		_RADIO_Transmit
 55884 ;;		_RADIO_ReceiveStart
 55885 ;;		_LORAWAN_TxDone
 55886 ;;		_LORAWAN_RxTimeout
 55887 ;;		_StartReTxTimer
 55888 ;;		_DutyCycleCallback
 55889 ;;		_LORAWAN_Join
 55890 ;;		_LORAWAN_LinkCheckConfigure
 55891 ;;		_LORAWAN_LinkCheckCallback
 55892 ;;		_UpdateRetransmissionAckTimeoutState
 55893 ;;		_UpdateJoinSuccessState
 55894 ;; This function uses a non-reentrant model
 55895 ;;
 55896                           
 55897                           	psect	text298
 55898  00B5AE                     __ptext298:
 55899                           	opt stack 0
 55900  00B5AE                     _SwTimerSetTimeout:
 55901                           	opt stack 21
 55902                           
 55903                           ; BSR set to: 0
 55904                           ;incstack = 0
 55905                           ;SwTimerSetTimeout@timerId stored from wreg
 55906  00B5AE  0100               	movlb	0	; () banked
 55907  00B5B0  6F75               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 55908                           
 55909                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 55910  00B5B2  9EF2               	bcf	intcon,7,c	;volatile
 55911                           
 55912                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 55913  00B5B4  0EE0               	movlw	224
 55914  00B5B6  0100               	movlb	0	; () banked
 55915  00B5B8  256D               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 55916  00B5BA  6F71               	movwf	??_SwTimerSetTimeout& (0+255),b
 55917  00B5BC  0EFF               	movlw	255
 55918  00B5BE  216E               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 55919  00B5C0  6F72               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 55920  00B5C2  0EFF               	movlw	255
 55921  00B5C4  216F               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 55922  00B5C6  6F73               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 55923  00B5C8  0EFF               	movlw	255
 55924  00B5CA  2170               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 55925  00B5CC  6F74               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 55926  00B5CE  5175               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 55927  00B5D0  0D08               	mullw	8
 55928  00B5D2  0E00               	movlw	low _swTimers
 55929  00B5D4  24F3               	addwf	prodl,w,c
 55930  00B5D6  6ED9               	movwf	fsr2l,c
 55931  00B5D8  0E03               	movlw	high _swTimers
 55932  00B5DA  20F4               	addwfc	prodh,w,c
 55933  00B5DC  6EDA               	movwf	fsr2h,c
 55934  00B5DE  C071  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 55935  00B5E2  C072  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 55936  00B5E6  C073  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 55937  00B5EA  C074  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 55938                           
 55939                           ; BSR set to: 0
 55940                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 55941  00B5EE  8EF2               	bsf	intcon,7,c	;volatile
 55942                           
 55943                           ; BSR set to: 0
 55944  00B5F0  0012               	return		;funcret
 55945  00B5F2                     __end_of_SwTimerSetTimeout:
 55946                           	opt stack 0
 55947                           tosu	equ	0xFFF
 55948                           tosh	equ	0xFFE
 55949                           tosl	equ	0xFFD
 55950                           pclath	equ	0xFFA
 55951                           tblptru	equ	0xFF8
 55952                           tblptrh	equ	0xFF7
 55953                           tblptrl	equ	0xFF6
 55954                           tablat	equ	0xFF5
 55955                           prodh	equ	0xFF4
 55956                           prodl	equ	0xFF3
 55957                           intcon	equ	0xFF2
 55958                           intcon2	equ	0xFF1
 55959                           intcon3	equ	0xFF0
 55960                           indf0	equ	0xFEF
 55961                           postinc0	equ	0xFEE
 55962                           plusw0	equ	0xFEB
 55963                           fsr0h	equ	0xFEA
 55964                           fsr0l	equ	0xFE9
 55965                           wreg	equ	0xFE8
 55966                           postinc1	equ	0xFE6
 55967                           postdec1	equ	0xFE5
 55968                           plusw1	equ	0xFE3
 55969                           fsr1h	equ	0xFE2
 55970                           fsr1l	equ	0xFE1
 55971                           indf2	equ	0xFDF
 55972                           postinc2	equ	0xFDE
 55973                           postdec2	equ	0xFDD
 55974                           plusw2	equ	0xFDB
 55975                           fsr2h	equ	0xFDA
 55976                           fsr2l	equ	0xFD9
 55977                           status	equ	0xFD8
 55978                           
 55979 ;; *************** function _InitDefault868Channels *****************
 55980 ;; Defined at:
 55981 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 55982 ;; Parameters:    Size  Location     Type
 55983 ;;		None
 55984 ;; Auto vars:     Size  Location     Type
 55985 ;;  i               1   11[BANK0 ] unsigned char 
 55986 ;; Return value:  Size  Location     Type
 55987 ;;                  1    wreg      void 
 55988 ;; Registers used:
 55989 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 55990 ;; Tracked objects:
 55991 ;;		On entry : 0/0
 55992 ;;		On exit  : 0/0
 55993 ;;		Unchanged: 0/0
 55994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55998 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55999 ;;Total ram usage:        1 bytes
 56000 ;; Hardware stack levels used:    1
 56001 ;; Hardware stack levels required when called:    8
 56002 ;; This function calls:
 56003 ;;		_memcpy
 56004 ;;		_memset
 56005 ;; This function is called by:
 56006 ;;		_LORAWAN_Reset
 56007 ;; This function uses a non-reentrant model
 56008 ;;
 56009                           
 56010                           	psect	text299
 56011  009F40                     __ptext299:
 56012                           	opt stack 0
 56013  009F40                     _InitDefault868Channels:
 56014                           	opt stack 20
 56015                           
 56016                           ;lorawan_eu.c: 981: uint8_t i;
 56017                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 56018                           
 56019                           ; BSR set to: 0
 56020                           ;incstack = 0
 56021  009F40  0E00               	movlw	low _Channels
 56022  009F42  0100               	movlb	0	; () banked
 56023  009F44  6F60               	movwf	memset@p1& (0+255),b
 56024  009F46  0E04               	movlw	high _Channels
 56025  009F48  6F61               	movwf	(memset@p1+1)& (0+255),b
 56026  009F4A  0E00               	movlw	0
 56027  009F4C  6F63               	movwf	(memset@c+1)& (0+255),b
 56028  009F4E  0E00               	movlw	0
 56029  009F50  6F62               	movwf	memset@c& (0+255),b
 56030  009F52  0E00               	movlw	0
 56031  009F54  6F65               	movwf	(memset@n+1)& (0+255),b
 56032  009F56  0EE0               	movlw	224
 56033  009F58  6F64               	movwf	memset@n& (0+255),b
 56034  009F5A  EC23  F05D         	call	_memset	;wreg free
 56035                           
 56036                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 56037  009F5E  0E00               	movlw	low _Channels
 56038  009F60  0100               	movlb	0	; () banked
 56039  009F62  6F60               	movwf	memcpy@d1& (0+255),b
 56040  009F64  0E04               	movlw	high _Channels
 56041  009F66  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 56042  009F68  0EFA               	movlw	low _DefaultChannels868
 56043  009F6A  6F62               	movwf	memcpy@s1& (0+255),b
 56044  009F6C  0EFE               	movlw	high _DefaultChannels868
 56045  009F6E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 56046  009F70  0E00               	movlw	0
 56047  009F72  6F65               	movwf	(memcpy@n+1)& (0+255),b
 56048  009F74  0E2A               	movlw	42
 56049  009F76  6F64               	movwf	memcpy@n& (0+255),b
 56050  009F78  ECAB  F055         	call	_memcpy	;wreg free
 56051                           
 56052                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 56053  009F7C  0E03               	movlw	3
 56054  009F7E  0100               	movlb	0	; () banked
 56055  009F80  6F6B               	movwf	InitDefault868Channels@i& (0+255),b
 56056  009F82                     l20663:
 56057                           
 56058                           ; BSR set to: 0
 56059  009F82  0E0F               	movlw	15
 56060  009F84  656B               	cpfsgt	InitDefault868Channels@i& (0+255),b
 56061  009F86  D001               	goto	l1530
 56062  009F88  0012               	return	
 56063  009F8A                     l1530:
 56064                           
 56065                           ; BSR set to: 0
 56066                           ;lorawan_eu.c: 986: {
 56067                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 56068                           
 56069                           ; BSR set to: 0
 56070  009F8A  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 56071  009F8C  0D0E               	mullw	14
 56072  009F8E  0E06               	movlw	6
 56073  009F90  26F3               	addwf	prodl,f,c
 56074  009F92  0E00               	movlw	0
 56075  009F94  22F4               	addwfc	prodh,f,c
 56076  009F96  0E00               	movlw	low _Channels
 56077  009F98  24F3               	addwf	prodl,w,c
 56078  009F9A  6ED9               	movwf	fsr2l,c
 56079  009F9C  0E04               	movlw	high _Channels
 56080  009F9E  20F4               	addwfc	prodh,w,c
 56081  009FA0  6EDA               	movwf	fsr2h,c
 56082  009FA2  0EFF               	movlw	255
 56083  009FA4  6EDE               	movwf	postinc2,c
 56084  009FA6  0EFF               	movlw	255
 56085  009FA8  6EDD               	movwf	postdec2,c
 56086                           
 56087                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 56088  009FAA  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 56089  009FAC  0D0E               	mullw	14
 56090  009FAE  0E05               	movlw	5
 56091  009FB0  26F3               	addwf	prodl,f,c
 56092  009FB2  0E00               	movlw	0
 56093  009FB4  22F4               	addwfc	prodh,f,c
 56094  009FB6  0E00               	movlw	low _Channels
 56095  009FB8  24F3               	addwf	prodl,w,c
 56096  009FBA  6ED9               	movwf	fsr2l,c
 56097  009FBC  0E04               	movlw	high _Channels
 56098  009FBE  20F4               	addwfc	prodh,w,c
 56099  009FC0  6EDA               	movwf	fsr2h,c
 56100  009FC2  0EFF               	movlw	255
 56101  009FC4  6EDF               	movwf	indf2,c
 56102                           
 56103                           ; BSR set to: 0
 56104  009FC6  2B6B               	incf	InitDefault868Channels@i& (0+255),f,b
 56105  009FC8  D7DC               	goto	l20663
 56106  009FCA                     __end_of_InitDefault868Channels:
 56107                           	opt stack 0
 56108                           tosu	equ	0xFFF
 56109                           tosh	equ	0xFFE
 56110                           tosl	equ	0xFFD
 56111                           pclath	equ	0xFFA
 56112                           tblptru	equ	0xFF8
 56113                           tblptrh	equ	0xFF7
 56114                           tblptrl	equ	0xFF6
 56115                           tablat	equ	0xFF5
 56116                           prodh	equ	0xFF4
 56117                           prodl	equ	0xFF3
 56118                           intcon	equ	0xFF2
 56119                           intcon2	equ	0xFF1
 56120                           intcon3	equ	0xFF0
 56121                           indf0	equ	0xFEF
 56122                           postinc0	equ	0xFEE
 56123                           plusw0	equ	0xFEB
 56124                           fsr0h	equ	0xFEA
 56125                           fsr0l	equ	0xFE9
 56126                           wreg	equ	0xFE8
 56127                           postinc1	equ	0xFE6
 56128                           postdec1	equ	0xFE5
 56129                           plusw1	equ	0xFE3
 56130                           fsr1h	equ	0xFE2
 56131                           fsr1l	equ	0xFE1
 56132                           indf2	equ	0xFDF
 56133                           postinc2	equ	0xFDE
 56134                           postdec2	equ	0xFDD
 56135                           plusw2	equ	0xFDB
 56136                           fsr2h	equ	0xFDA
 56137                           fsr2l	equ	0xFD9
 56138                           status	equ	0xFD8
 56139                           
 56140 ;; *************** function _InitDefault433Channels *****************
 56141 ;; Defined at:
 56142 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 56143 ;; Parameters:    Size  Location     Type
 56144 ;;		None
 56145 ;; Auto vars:     Size  Location     Type
 56146 ;;  i               1   11[BANK0 ] unsigned char 
 56147 ;; Return value:  Size  Location     Type
 56148 ;;                  1    wreg      void 
 56149 ;; Registers used:
 56150 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 56151 ;; Tracked objects:
 56152 ;;		On entry : 0/0
 56153 ;;		On exit  : 0/0
 56154 ;;		Unchanged: 0/0
 56155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56157 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56159 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56160 ;;Total ram usage:        1 bytes
 56161 ;; Hardware stack levels used:    1
 56162 ;; Hardware stack levels required when called:    8
 56163 ;; This function calls:
 56164 ;;		_memcpy
 56165 ;;		_memset
 56166 ;; This function is called by:
 56167 ;;		_LORAWAN_Reset
 56168 ;; This function uses a non-reentrant model
 56169 ;;
 56170                           
 56171                           	psect	text300
 56172  009FCA                     __ptext300:
 56173                           	opt stack 0
 56174  009FCA                     _InitDefault433Channels:
 56175                           	opt stack 20
 56176                           
 56177                           ;lorawan_eu.c: 996: uint8_t i;
 56178                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 56179                           
 56180                           ; BSR set to: 0
 56181                           ;incstack = 0
 56182  009FCA  0E00               	movlw	low _Channels
 56183  009FCC  0100               	movlb	0	; () banked
 56184  009FCE  6F60               	movwf	memset@p1& (0+255),b
 56185  009FD0  0E04               	movlw	high _Channels
 56186  009FD2  6F61               	movwf	(memset@p1+1)& (0+255),b
 56187  009FD4  0E00               	movlw	0
 56188  009FD6  6F63               	movwf	(memset@c+1)& (0+255),b
 56189  009FD8  0E00               	movlw	0
 56190  009FDA  6F62               	movwf	memset@c& (0+255),b
 56191  009FDC  0E00               	movlw	0
 56192  009FDE  6F65               	movwf	(memset@n+1)& (0+255),b
 56193  009FE0  0EE0               	movlw	224
 56194  009FE2  6F64               	movwf	memset@n& (0+255),b
 56195  009FE4  EC23  F05D         	call	_memset	;wreg free
 56196                           
 56197                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 56198  009FE8  0E00               	movlw	low _Channels
 56199  009FEA  0100               	movlb	0	; () banked
 56200  009FEC  6F60               	movwf	memcpy@d1& (0+255),b
 56201  009FEE  0E04               	movlw	high _Channels
 56202  009FF0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 56203  009FF2  0ED0               	movlw	low _DefaultChannels433
 56204  009FF4  6F62               	movwf	memcpy@s1& (0+255),b
 56205  009FF6  0EFE               	movlw	high _DefaultChannels433
 56206  009FF8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 56207  009FFA  0E00               	movlw	0
 56208  009FFC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 56209  009FFE  0E2A               	movlw	42
 56210  00A000  6F64               	movwf	memcpy@n& (0+255),b
 56211  00A002  ECAB  F055         	call	_memcpy	;wreg free
 56212                           
 56213                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 56214  00A006  0E03               	movlw	3
 56215  00A008  0100               	movlb	0	; () banked
 56216  00A00A  6F6B               	movwf	InitDefault433Channels@i& (0+255),b
 56217  00A00C                     l20679:
 56218                           
 56219                           ; BSR set to: 0
 56220  00A00C  0E0F               	movlw	15
 56221  00A00E  656B               	cpfsgt	InitDefault433Channels@i& (0+255),b
 56222  00A010  D001               	goto	l1535
 56223  00A012  0012               	return	
 56224  00A014                     l1535:
 56225                           
 56226                           ; BSR set to: 0
 56227                           ;lorawan_eu.c: 1001: {
 56228                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 56229                           
 56230                           ; BSR set to: 0
 56231  00A014  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 56232  00A016  0D0E               	mullw	14
 56233  00A018  0E06               	movlw	6
 56234  00A01A  26F3               	addwf	prodl,f,c
 56235  00A01C  0E00               	movlw	0
 56236  00A01E  22F4               	addwfc	prodh,f,c
 56237  00A020  0E00               	movlw	low _Channels
 56238  00A022  24F3               	addwf	prodl,w,c
 56239  00A024  6ED9               	movwf	fsr2l,c
 56240  00A026  0E04               	movlw	high _Channels
 56241  00A028  20F4               	addwfc	prodh,w,c
 56242  00A02A  6EDA               	movwf	fsr2h,c
 56243  00A02C  0EFF               	movlw	255
 56244  00A02E  6EDE               	movwf	postinc2,c
 56245  00A030  0EFF               	movlw	255
 56246  00A032  6EDD               	movwf	postdec2,c
 56247                           
 56248                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 56249  00A034  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 56250  00A036  0D0E               	mullw	14
 56251  00A038  0E05               	movlw	5
 56252  00A03A  26F3               	addwf	prodl,f,c
 56253  00A03C  0E00               	movlw	0
 56254  00A03E  22F4               	addwfc	prodh,f,c
 56255  00A040  0E00               	movlw	low _Channels
 56256  00A042  24F3               	addwf	prodl,w,c
 56257  00A044  6ED9               	movwf	fsr2l,c
 56258  00A046  0E04               	movlw	high _Channels
 56259  00A048  20F4               	addwfc	prodh,w,c
 56260  00A04A  6EDA               	movwf	fsr2h,c
 56261  00A04C  0EFF               	movlw	255
 56262  00A04E  6EDF               	movwf	indf2,c
 56263                           
 56264                           ; BSR set to: 0
 56265  00A050  2B6B               	incf	InitDefault433Channels@i& (0+255),f,b
 56266  00A052  D7DC               	goto	l20679
 56267  00A054                     __end_of_InitDefault433Channels:
 56268                           	opt stack 0
 56269                           tosu	equ	0xFFF
 56270                           tosh	equ	0xFFE
 56271                           tosl	equ	0xFFD
 56272                           pclath	equ	0xFFA
 56273                           tblptru	equ	0xFF8
 56274                           tblptrh	equ	0xFF7
 56275                           tblptrl	equ	0xFF6
 56276                           tablat	equ	0xFF5
 56277                           prodh	equ	0xFF4
 56278                           prodl	equ	0xFF3
 56279                           intcon	equ	0xFF2
 56280                           intcon2	equ	0xFF1
 56281                           intcon3	equ	0xFF0
 56282                           indf0	equ	0xFEF
 56283                           postinc0	equ	0xFEE
 56284                           plusw0	equ	0xFEB
 56285                           fsr0h	equ	0xFEA
 56286                           fsr0l	equ	0xFE9
 56287                           wreg	equ	0xFE8
 56288                           postinc1	equ	0xFE6
 56289                           postdec1	equ	0xFE5
 56290                           plusw1	equ	0xFE3
 56291                           fsr1h	equ	0xFE2
 56292                           fsr1l	equ	0xFE1
 56293                           indf2	equ	0xFDF
 56294                           postinc2	equ	0xFDE
 56295                           postdec2	equ	0xFDD
 56296                           plusw2	equ	0xFDB
 56297                           fsr2h	equ	0xFDA
 56298                           fsr2l	equ	0xFD9
 56299                           status	equ	0xFD8
 56300                           
 56301 ;; *************** function _memset *****************
 56302 ;; Defined at:
 56303 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 56304 ;; Parameters:    Size  Location     Type
 56305 ;;  p1              2    0[BANK0 ] PTR void 
 56306 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 56307 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 56308 ;;  c               2    2[BANK0 ] int 
 56309 ;;  n               2    4[BANK0 ] unsigned int 
 56310 ;; Auto vars:     Size  Location     Type
 56311 ;;  p               2    6[BANK0 ] PTR unsigned char 
 56312 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 56313 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 56314 ;; Return value:  Size  Location     Type
 56315 ;;                  2    0[BANK0 ] PTR void 
 56316 ;; Registers used:
 56317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 56318 ;; Tracked objects:
 56319 ;;		On entry : 0/0
 56320 ;;		On exit  : 0/0
 56321 ;;		Unchanged: 0/0
 56322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56323 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56324 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56326 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56327 ;;Total ram usage:        8 bytes
 56328 ;; Hardware stack levels used:    1
 56329 ;; Hardware stack levels required when called:    7
 56330 ;; This function calls:
 56331 ;;		Nothing
 56332 ;; This function is called by:
 56333 ;;		_AESCmac
 56334 ;;		_GenerateSubkey
 56335 ;;		_LORAWAN_Reset
 56336 ;;		_InitDefault868Channels
 56337 ;;		_InitDefault433Channels
 56338 ;;		_AssemblePacket
 56339 ;;		_PrepareJoinRequestFrame
 56340 ;;		_PrepareSessionKeys
 56341 ;;		_AssembleEncryptionBlock
 56342 ;; This function uses a non-reentrant model
 56343 ;;
 56344                           
 56345                           	psect	text301
 56346  00BA46                     __ptext301:
 56347                           	opt stack 0
 56348  00BA46                     _memset:
 56349                           	opt stack 21
 56350                           
 56351                           ; BSR set to: 0
 56352                           ;incstack = 0
 56353  00BA46  C060  F066         	movff	memset@p1,memset@p
 56354  00BA4A  C061  F067         	movff	memset@p1+1,memset@p+1
 56355  00BA4E  D009               	goto	l4033
 56356  00BA50                     l17571:
 56357  00BA50  C066  FFD9         	movff	memset@p,fsr2l
 56358  00BA54  C067  FFDA         	movff	memset@p+1,fsr2h
 56359  00BA58  C062  FFDF         	movff	memset@c,indf2
 56360  00BA5C  0100               	movlb	0	; () banked
 56361  00BA5E  4B66               	infsnz	memset@p& (0+255),f,b
 56362  00BA60  2B67               	incf	(memset@p+1)& (0+255),f,b
 56363  00BA62                     l4033:
 56364                           
 56365                           ; BSR set to: 0
 56366  00BA62  0100               	movlb	0	; () banked
 56367  00BA64  0764               	decf	memset@n& (0+255),f,b
 56368  00BA66  A0D8               	btfss	status,0,c
 56369  00BA68  0765               	decf	(memset@n+1)& (0+255),f,b
 56370  00BA6A  2964               	incf	memset@n& (0+255),w,b
 56371  00BA6C  E1F1               	bnz	l17571
 56372  00BA6E  2965               	incf	(memset@n+1)& (0+255),w,b
 56373  00BA70  B4D8               	btfsc	status,2,c
 56374  00BA72  0012               	return	
 56375  00BA74  D7ED               	goto	l4034
 56376  00BA76                     __end_of_memset:
 56377                           	opt stack 0
 56378                           tosu	equ	0xFFF
 56379                           tosh	equ	0xFFE
 56380                           tosl	equ	0xFFD
 56381                           pclath	equ	0xFFA
 56382                           tblptru	equ	0xFF8
 56383                           tblptrh	equ	0xFF7
 56384                           tblptrl	equ	0xFF6
 56385                           tablat	equ	0xFF5
 56386                           prodh	equ	0xFF4
 56387                           prodl	equ	0xFF3
 56388                           intcon	equ	0xFF2
 56389                           intcon2	equ	0xFF1
 56390                           intcon3	equ	0xFF0
 56391                           indf0	equ	0xFEF
 56392                           postinc0	equ	0xFEE
 56393                           plusw0	equ	0xFEB
 56394                           fsr0h	equ	0xFEA
 56395                           fsr0l	equ	0xFE9
 56396                           wreg	equ	0xFE8
 56397                           postinc1	equ	0xFE6
 56398                           postdec1	equ	0xFE5
 56399                           plusw1	equ	0xFE3
 56400                           fsr1h	equ	0xFE2
 56401                           fsr1l	equ	0xFE1
 56402                           indf2	equ	0xFDF
 56403                           postinc2	equ	0xFDE
 56404                           postdec2	equ	0xFDD
 56405                           plusw2	equ	0xFDB
 56406                           fsr2h	equ	0xFDA
 56407                           fsr2l	equ	0xFD9
 56408                           status	equ	0xFD8
 56409                           
 56410 ;; *************** function _memcpy *****************
 56411 ;; Defined at:
 56412 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 56413 ;; Parameters:    Size  Location     Type
 56414 ;;  d1              2    0[BANK0 ] PTR void 
 56415 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 56416 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 56417 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 56418 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 56419 ;;  s1              2    2[BANK0 ] PTR const void 
 56420 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), sp__ADC_GetConversion.cfList(16), data(8), 
 56421 ;;		 -> appSessionKey(16), nwkSessionKey(16), applicationKey(16), deviceEUI(8), 
 56422 ;;		 -> applicationEUI(8), sp__ADC_GetConversion(2), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcc
      +eptBuffer(2), 
 56423 ;;		 -> PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), 
 56424 ;;		 -> loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessionKey(16), loRa.activati
      +onParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), 
 56425 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), loRa.activationParameters.m
      +castApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
 56426 ;;		 -> loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activation
      +Parameters(105), 
 56427 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 56428 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 56429 ;;		 -> AESCmac@y(16), NULL(0), 
 56430 ;;  n               2    4[BANK0 ] unsigned int 
 56431 ;; Auto vars:     Size  Location     Type
 56432 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 56433 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), sp__ADC_GetConversion.cfList(16), data(8), 
 56434 ;;		 -> appSessionKey(16), nwkSessionKey(16), applicationKey(16), deviceEUI(8), 
 56435 ;;		 -> applicationEUI(8), sp__ADC_GetConversion(2), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcc
      +eptBuffer(2), 
 56436 ;;		 -> PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), 
 56437 ;;		 -> loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessionKey(16), loRa.activati
      +onParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), 
 56438 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), loRa.activationParameters.m
      +castApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
 56439 ;;		 -> loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activation
      +Parameters(105), 
 56440 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 56441 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 56442 ;;		 -> AESCmac@y(16), NULL(0), 
 56443 ;;  d               2    7[BANK0 ] PTR unsigned char 
 56444 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 56445 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 56446 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 56447 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 56448 ;;  tmp             1    6[BANK0 ] unsigned char 
 56449 ;; Return value:  Size  Location     Type
 56450 ;;                  2    0[BANK0 ] PTR void 
 56451 ;; Registers used:
 56452 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 56453 ;; Tracked objects:
 56454 ;;		On entry : 0/0
 56455 ;;		On exit  : 0/0
 56456 ;;		Unchanged: 0/0
 56457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56458 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56459 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56461 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56462 ;;Total ram usage:       11 bytes
 56463 ;; Hardware stack levels used:    1
 56464 ;; Hardware stack levels required when called:    7
 56465 ;; This function calls:
 56466 ;;		Nothing
 56467 ;; This function is called by:
 56468 ;;		_AESCmac
 56469 ;;		_RADIO_SetFSKSyncWord
 56470 ;;		_UpdateCfList
 56471 ;;		_InitDefault868Channels
 56472 ;;		_InitDefault433Channels
 56473 ;;		_AESEncodeLoRa
 56474 ;;		_LORAWAN_SetDeviceEui
 56475 ;;		_LORAWAN_SetApplicationEui
 56476 ;;		_LORAWAN_SetNetworkSessionKey
 56477 ;;		_LORAWAN_SetApplicationSessionKey
 56478 ;;		_LORAWAN_SetApplicationKey
 56479 ;;		_LORAWAN_RxDone
 56480 ;;		_AssemblePacket
 56481 ;;		_PrepareJoinRequestFrame
 56482 ;;		_PrepareSessionKeys
 56483 ;;		_AssembleEncryptionBlock
 56484 ;;		_ExtractMic
 56485 ;;		_ComputeMic
 56486 ;;		_RADIO_GetData
 56487 ;;		_RADIO_GetFSKSyncWord
 56488 ;;		_LORAWAN_SetMcastNetworkSessionKey
 56489 ;;		_LORAWAN_SetMcastApplicationSessionKey
 56490 ;;		_LORAWAN_GetMcastApplicationSessionKey
 56491 ;;		_LORAWAN_GetMcastNetworkSessionKey
 56492 ;;		_LORAWAN_GetDeviceEui
 56493 ;;		_LORAWAN_GetApplicationEui
 56494 ;;		_LORAWAN_GetNetworkSessionKey
 56495 ;;		_LORAWAN_GetApplicationSessionKey
 56496 ;;		_LORAWAN_GetApplicationKey
 56497 ;; This function uses a non-reentrant model
 56498 ;;
 56499                           
 56500                           	psect	text302
 56501  00AB56                     __ptext302:
 56502                           	opt stack 0
 56503  00AB56                     _memcpy:
 56504                           	opt stack 22
 56505                           
 56506                           ; BSR set to: 0
 56507                           ;incstack = 0
 56508  00AB56  C062  F069         	movff	memcpy@s1,memcpy@s
 56509  00AB5A  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 56510  00AB5E  C060  F067         	movff	memcpy@d1,memcpy@d
 56511  00AB62  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 56512  00AB66  D01D               	goto	l4027
 56513  00AB68                     l17349:
 56514  00AB68  C069  FFF6         	movff	memcpy@s,tblptrl
 56515  00AB6C  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 56516  00AB70  0E00               	movlw	low (__mediumconst shr (0+16))
 56517  00AB72  6EF8               	movwf	tblptru,c
 56518  00AB74  0E0F               	movlw	(high __ramtop+-1)
 56519  00AB76  64F7               	cpfsgt	tblptrh,c
 56520  00AB78  D003               	bra	u18907
 56521  00AB7A  0008               	tblrd		*
 56522  00AB7C  50F5               	movf	tablat,w,c
 56523  00AB7E  D005               	bra	u18900
 56524  00AB80                     u18907:
 56525  00AB80  CFF6 FFE9          	movff	tblptrl,fsr0l
 56526  00AB84  CFF7 FFEA          	movff	tblptrh,fsr0h
 56527  00AB88  50EF               	movf	indf0,w,c
 56528  00AB8A                     u18900:
 56529  00AB8A  0100               	movlb	0	; () banked
 56530  00AB8C  6F66               	movwf	memcpy@tmp& (0+255),b
 56531                           
 56532                           ; BSR set to: 0
 56533  00AB8E  4B69               	infsnz	memcpy@s& (0+255),f,b
 56534  00AB90  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 56535                           
 56536                           ; BSR set to: 0
 56537  00AB92  C067  FFD9         	movff	memcpy@d,fsr2l
 56538  00AB96  C068  FFDA         	movff	memcpy@d+1,fsr2h
 56539  00AB9A  C066  FFDF         	movff	memcpy@tmp,indf2
 56540                           
 56541                           ; BSR set to: 0
 56542  00AB9E  4B67               	infsnz	memcpy@d& (0+255),f,b
 56543  00ABA0  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 56544  00ABA2                     l4027:
 56545                           
 56546                           ; BSR set to: 0
 56547  00ABA2  0100               	movlb	0	; () banked
 56548  00ABA4  0764               	decf	memcpy@n& (0+255),f,b
 56549  00ABA6  A0D8               	btfss	status,0,c
 56550  00ABA8  0765               	decf	(memcpy@n+1)& (0+255),f,b
 56551  00ABAA  2964               	incf	memcpy@n& (0+255),w,b
 56552  00ABAC  E1DD               	bnz	l17349
 56553  00ABAE  2965               	incf	(memcpy@n+1)& (0+255),w,b
 56554  00ABB0  B4D8               	btfsc	status,2,c
 56555  00ABB2  0012               	return	
 56556  00ABB4  D7D9               	goto	l4028
 56557  00ABB6                     __end_of_memcpy:
 56558                           	opt stack 0
 56559                           tosu	equ	0xFFF
 56560                           tosh	equ	0xFFE
 56561                           tosl	equ	0xFFD
 56562                           pclath	equ	0xFFA
 56563                           tblptru	equ	0xFF8
 56564                           tblptrh	equ	0xFF7
 56565                           tblptrl	equ	0xFF6
 56566                           tablat	equ	0xFF5
 56567                           prodh	equ	0xFF4
 56568                           prodl	equ	0xFF3
 56569                           intcon	equ	0xFF2
 56570                           intcon2	equ	0xFF1
 56571                           intcon3	equ	0xFF0
 56572                           indf0	equ	0xFEF
 56573                           postinc0	equ	0xFEE
 56574                           plusw0	equ	0xFEB
 56575                           fsr0h	equ	0xFEA
 56576                           fsr0l	equ	0xFE9
 56577                           wreg	equ	0xFE8
 56578                           postinc1	equ	0xFE6
 56579                           postdec1	equ	0xFE5
 56580                           plusw1	equ	0xFE3
 56581                           fsr1h	equ	0xFE2
 56582                           fsr1l	equ	0xFE1
 56583                           indf2	equ	0xFDF
 56584                           postinc2	equ	0xFDE
 56585                           postdec2	equ	0xFDD
 56586                           plusw2	equ	0xFDB
 56587                           fsr2h	equ	0xFDA
 56588                           fsr2l	equ	0xFD9
 56589                           status	equ	0xFD8
 56590                           
 56591 ;; *************** function _CreateAllSoftwareTimers *****************
 56592 ;; Defined at:
 56593 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 56594 ;; Parameters:    Size  Location     Type
 56595 ;;		None
 56596 ;; Auto vars:     Size  Location     Type
 56597 ;;		None
 56598 ;; Return value:  Size  Location     Type
 56599 ;;                  1    wreg      void 
 56600 ;; Registers used:
 56601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 56602 ;; Tracked objects:
 56603 ;;		On entry : 0/0
 56604 ;;		On exit  : 0/0
 56605 ;;		Unchanged: 0/0
 56606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56611 ;;Total ram usage:        0 bytes
 56612 ;; Hardware stack levels used:    1
 56613 ;; Hardware stack levels required when called:    8
 56614 ;; This function calls:
 56615 ;;		_SwTimerCreate
 56616 ;; This function is called by:
 56617 ;;		_LORAWAN_Init
 56618 ;; This function uses a non-reentrant model
 56619 ;;
 56620                           
 56621                           	psect	text303
 56622  00B0DE                     __ptext303:
 56623                           	opt stack 0
 56624  00B0DE                     _CreateAllSoftwareTimers:
 56625                           	opt stack 21
 56626                           
 56627                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 56628                           
 56629                           ; BSR set to: 0
 56630                           ;incstack = 0
 56631  00B0DE  EC15  F04F         	call	_SwTimerCreate	;wreg free
 56632  00B0E2  0102               	movlb	2	; () banked
 56633  00B0E4  6FE6               	movwf	(_loRa+226)& (0+255),b
 56634                           
 56635                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 56636  00B0E6  EC15  F04F         	call	_SwTimerCreate	;wreg free
 56637  00B0EA  0102               	movlb	2	; () banked
 56638  00B0EC  6FE7               	movwf	(_loRa+227)& (0+255),b
 56639                           
 56640                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 56641  00B0EE  EC15  F04F         	call	_SwTimerCreate	;wreg free
 56642  00B0F2  0102               	movlb	2	; () banked
 56643  00B0F4  6FE8               	movwf	(_loRa+228)& (0+255),b
 56644                           
 56645                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 56646  00B0F6  EC15  F04F         	call	_SwTimerCreate	;wreg free
 56647  00B0FA  0102               	movlb	2	; () banked
 56648  00B0FC  6FE9               	movwf	(_loRa+229)& (0+255),b
 56649                           
 56650                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 56651  00B0FE  EC15  F04F         	call	_SwTimerCreate	;wreg free
 56652  00B102  0102               	movlb	2	; () banked
 56653  00B104  6FEB               	movwf	(_loRa+231)& (0+255),b
 56654                           
 56655                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 56656  00B106  EC15  F04F         	call	_SwTimerCreate	;wreg free
 56657  00B10A  0102               	movlb	2	; () banked
 56658  00B10C  6FEC               	movwf	(_loRa+232)& (0+255),b
 56659                           
 56660                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 56661  00B10E  EC15  F04F         	call	_SwTimerCreate	;wreg free
 56662  00B112  0102               	movlb	2	; () banked
 56663  00B114  6FEA               	movwf	(_loRa+230)& (0+255),b
 56664                           
 56665                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 56666  00B116  EC15  F04F         	call	_SwTimerCreate	;wreg free
 56667  00B11A  0102               	movlb	2	; () banked
 56668  00B11C  6FEE               	movwf	(_loRa+234)& (0+255),b
 56669                           
 56670                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 56671  00B11E  EC15  F04F         	call	_SwTimerCreate	;wreg free
 56672  00B122  0102               	movlb	2	; () banked
 56673  00B124  6FF7               	movwf	(_loRa+243)& (0+255),b
 56674                           
 56675                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 56676  00B126  EC15  F04F         	call	_SwTimerCreate	;wreg free
 56677  00B12A  0102               	movlb	2	; () banked
 56678  00B12C  6FED               	movwf	(_loRa+233)& (0+255),b
 56679                           
 56680                           ; BSR set to: 2
 56681  00B12E  0012               	return		;funcret
 56682  00B130                     __end_of_CreateAllSoftwareTimers:
 56683                           	opt stack 0
 56684                           tosu	equ	0xFFF
 56685                           tosh	equ	0xFFE
 56686                           tosl	equ	0xFFD
 56687                           pclath	equ	0xFFA
 56688                           tblptru	equ	0xFF8
 56689                           tblptrh	equ	0xFF7
 56690                           tblptrl	equ	0xFF6
 56691                           tablat	equ	0xFF5
 56692                           prodh	equ	0xFF4
 56693                           prodl	equ	0xFF3
 56694                           intcon	equ	0xFF2
 56695                           intcon2	equ	0xFF1
 56696                           intcon3	equ	0xFF0
 56697                           indf0	equ	0xFEF
 56698                           postinc0	equ	0xFEE
 56699                           plusw0	equ	0xFEB
 56700                           fsr0h	equ	0xFEA
 56701                           fsr0l	equ	0xFE9
 56702                           wreg	equ	0xFE8
 56703                           postinc1	equ	0xFE6
 56704                           postdec1	equ	0xFE5
 56705                           plusw1	equ	0xFE3
 56706                           fsr1h	equ	0xFE2
 56707                           fsr1l	equ	0xFE1
 56708                           indf2	equ	0xFDF
 56709                           postinc2	equ	0xFDE
 56710                           postdec2	equ	0xFDD
 56711                           plusw2	equ	0xFDB
 56712                           fsr2h	equ	0xFDA
 56713                           fsr2l	equ	0xFD9
 56714                           status	equ	0xFD8
 56715                           
 56716 ;; *************** function _SwTimerCreate *****************
 56717 ;; Defined at:
 56718 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 56719 ;; Parameters:    Size  Location     Type
 56720 ;;		None
 56721 ;; Auto vars:     Size  Location     Type
 56722 ;;  retVal          1    0[BANK0 ] unsigned char 
 56723 ;; Return value:  Size  Location     Type
 56724 ;;                  1    wreg      unsigned char 
 56725 ;; Registers used:
 56726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 56727 ;; Tracked objects:
 56728 ;;		On entry : 0/0
 56729 ;;		On exit  : 0/0
 56730 ;;		Unchanged: 0/0
 56731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56736 ;;Total ram usage:        1 bytes
 56737 ;; Hardware stack levels used:    1
 56738 ;; Hardware stack levels required when called:    7
 56739 ;; This function calls:
 56740 ;;		Nothing
 56741 ;; This function is called by:
 56742 ;;		_RADIO_Init
 56743 ;;		_CreateAllSoftwareTimers
 56744 ;; This function uses a non-reentrant model
 56745 ;;
 56746                           
 56747                           	psect	text304
 56748  009E2A                     __ptext304:
 56749                           	opt stack 0
 56750  009E2A                     _SwTimerCreate:
 56751                           	opt stack 21
 56752                           
 56753                           ;sw_timer.c: 156: uint8_t retVal;
 56754                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 56755                           
 56756                           ; BSR set to: 2
 56757                           ;incstack = 0
 56758  009E2A  0E14               	movlw	20
 56759  009E2C  0100               	movlb	0	; () banked
 56760  009E2E  61FF               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 56761  009E30  D03E               	goto	l569
 56762                           
 56763                           ; BSR set to: 0
 56764                           ;sw_timer.c: 158: {
 56765                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 56766  009E32  9EF2               	bcf	intcon,7,c	;volatile
 56767                           
 56768                           ;sw_timer.c: 160: retVal = allocatedTimers;
 56769  009E34  C0FF  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 56770                           
 56771                           ; BSR set to: 0
 56772                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 56773  009E38  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 56774  009E3A  0D08               	mullw	8
 56775  009E3C  0E04               	movlw	4
 56776  009E3E  26F3               	addwf	prodl,f,c
 56777  009E40  0E00               	movlw	0
 56778  009E42  22F4               	addwfc	prodh,f,c
 56779  009E44  0E00               	movlw	low _swTimers
 56780  009E46  24F3               	addwf	prodl,w,c
 56781  009E48  6ED9               	movwf	fsr2l,c
 56782  009E4A  0E03               	movlw	high _swTimers
 56783  009E4C  20F4               	addwfc	prodh,w,c
 56784  009E4E  6EDA               	movwf	fsr2h,c
 56785  009E50  0E00               	movlw	0
 56786  009E52  6EDF               	movwf	indf2,c
 56787                           
 56788                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 56789  009E54  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 56790  009E56  0D08               	mullw	8
 56791  009E58  0E00               	movlw	low _swTimers
 56792  009E5A  24F3               	addwf	prodl,w,c
 56793  009E5C  6ED9               	movwf	fsr2l,c
 56794  009E5E  0E03               	movlw	high _swTimers
 56795  009E60  20F4               	addwfc	prodh,w,c
 56796  009E62  6EDA               	movwf	fsr2h,c
 56797  009E64  6ADE               	clrf	postinc2,c
 56798  009E66  6ADE               	clrf	postinc2,c
 56799  009E68  6ADE               	clrf	postinc2,c
 56800  009E6A  6ADD               	clrf	postdec2,c
 56801                           
 56802                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 56803  009E6C  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 56804  009E6E  0D08               	mullw	8
 56805  009E70  0E05               	movlw	5
 56806  009E72  26F3               	addwf	prodl,f,c
 56807  009E74  0E00               	movlw	0
 56808  009E76  22F4               	addwfc	prodh,f,c
 56809  009E78  0E00               	movlw	low _swTimers
 56810  009E7A  24F3               	addwf	prodl,w,c
 56811  009E7C  6ED9               	movwf	fsr2l,c
 56812  009E7E  0E03               	movlw	high _swTimers
 56813  009E80  20F4               	addwfc	prodh,w,c
 56814  009E82  6EDA               	movwf	fsr2h,c
 56815  009E84  0E00               	movlw	0
 56816  009E86  6EDF               	movwf	indf2,c
 56817                           
 56818                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 56819  009E88  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 56820  009E8A  0D08               	mullw	8
 56821  009E8C  0E06               	movlw	6
 56822  009E8E  26F3               	addwf	prodl,f,c
 56823  009E90  0E00               	movlw	0
 56824  009E92  22F4               	addwfc	prodh,f,c
 56825  009E94  0E00               	movlw	low _swTimers
 56826  009E96  24F3               	addwf	prodl,w,c
 56827  009E98  6ED9               	movwf	fsr2l,c
 56828  009E9A  0E03               	movlw	high _swTimers
 56829  009E9C  20F4               	addwfc	prodh,w,c
 56830  009E9E  6EDA               	movwf	fsr2h,c
 56831  009EA0  0E00               	movlw	0
 56832  009EA2  6EDE               	movwf	postinc2,c
 56833  009EA4  0E00               	movlw	0
 56834  009EA6  6EDD               	movwf	postdec2,c
 56835                           
 56836                           ; BSR set to: 0
 56837                           ;sw_timer.c: 165: allocatedTimers++;
 56838  009EA8  2BFF               	incf	_allocatedTimers& (0+255),f,b	;volatile
 56839                           
 56840                           ; BSR set to: 0
 56841                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 56842  009EAA  8EF2               	bsf	intcon,7,c	;volatile
 56843                           
 56844                           ;sw_timer.c: 167: }
 56845  009EAC  D001               	goto	l573
 56846  009EAE                     l569:
 56847                           
 56848                           ;sw_timer.c: 171: {
 56849                           
 56850                           ; BSR set to: 0
 56851                           ;sw_timer.c: 168: else
 56852                           ;sw_timer.c: 169: {
 56853                           ;sw_timer.c: 170: while(1)
 56854  009EAE  D7FF               	goto	l569
 56855  009EB0                     l573:
 56856                           
 56857                           ;sw_timer.c: 175: }
 56858                           ;sw_timer.c: 176: }
 56859                           ;sw_timer.c: 177: return retVal;
 56860  009EB0  0100               	movlb	0	; () banked
 56861  009EB2  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 56862  009EB4  0012               	return	
 56863  009EB6                     __end_of_SwTimerCreate:
 56864                           	opt stack 0
 56865                           tosu	equ	0xFFF
 56866                           tosh	equ	0xFFE
 56867                           tosl	equ	0xFFD
 56868                           pclath	equ	0xFFA
 56869                           tblptru	equ	0xFF8
 56870                           tblptrh	equ	0xFF7
 56871                           tblptrl	equ	0xFF6
 56872                           tablat	equ	0xFF5
 56873                           prodh	equ	0xFF4
 56874                           prodl	equ	0xFF3
 56875                           intcon	equ	0xFF2
 56876                           intcon2	equ	0xFF1
 56877                           intcon3	equ	0xFF0
 56878                           indf0	equ	0xFEF
 56879                           postinc0	equ	0xFEE
 56880                           plusw0	equ	0xFEB
 56881                           fsr0h	equ	0xFEA
 56882                           fsr0l	equ	0xFE9
 56883                           wreg	equ	0xFE8
 56884                           postinc1	equ	0xFE6
 56885                           postdec1	equ	0xFE5
 56886                           plusw1	equ	0xFE3
 56887                           fsr1h	equ	0xFE2
 56888                           fsr1l	equ	0xFE1
 56889                           indf2	equ	0xFDF
 56890                           postinc2	equ	0xFDE
 56891                           postdec2	equ	0xFDD
 56892                           plusw2	equ	0xFDB
 56893                           fsr2h	equ	0xFDA
 56894                           fsr2l	equ	0xFD9
 56895                           status	equ	0xFD8
 56896                           
 56897 ;; *************** function _ADC_GetConversion *****************
 56898 ;; Defined at:
 56899 ;;		line 108 in file "mcc_generated_files/adc.c"
 56900 ;; Parameters:    Size  Location     Type
 56901 ;;  channel         1    wreg     enum E6990
 56902 ;; Auto vars:     Size  Location     Type
 56903 ;;  channel         1    4[BANK0 ] enum E6990
 56904 ;; Return value:  Size  Location     Type
 56905 ;;                  2    0[BANK0 ] unsigned int 
 56906 ;; Registers used:
 56907 ;;		wreg, status,2, status,0
 56908 ;; Tracked objects:
 56909 ;;		On entry : 0/0
 56910 ;;		On exit  : 0/0
 56911 ;;		Unchanged: 0/0
 56912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56916 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56917 ;;Total ram usage:        5 bytes
 56918 ;; Hardware stack levels used:    1
 56919 ;; Hardware stack levels required when called:    7
 56920 ;; This function calls:
 56921 ;;		Nothing
 56922 ;; This function is called by:
 56923 ;;		_main
 56924 ;; This function uses a non-reentrant model
 56925 ;;
 56926                           
 56927                           	psect	text305
 56928  00B7F0                     __ptext305:
 56929                           	opt stack 0
 56930  00B7F0                     _ADC_GetConversion:
 56931                           	opt stack 23
 56932                           
 56933                           ; BSR set to: 0
 56934                           ;incstack = 0
 56935                           ;ADC_GetConversion@channel stored from wreg
 56936  00B7F0  0100               	movlb	0	; () banked
 56937  00B7F2  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
 56938                           
 56939                           ;adc.c: 111: ADCON0bits.CHS = channel;
 56940  00B7F4  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 56941  00B7F8  0100               	movlb	0	; () banked
 56942  00B7FA  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 56943  00B7FC  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 56944  00B7FE  50C2               	movf	4034,w,c	;volatile
 56945  00B800  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 56946  00B802  0B83               	andlw	-125
 56947  00B804  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 56948  00B806  6EC2               	movwf	4034,c	;volatile
 56949                           
 56950                           ; BSR set to: 0
 56951                           ;adc.c: 114: ADCON0bits.ADON = 1;
 56952  00B808  80C2               	bsf	4034,0,c	;volatile
 56953                           
 56954                           ; BSR set to: 0
 56955                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
 56956  00B80A  82C2               	bsf	4034,1,c	;volatile
 56957                           
 56958                           ;adc.c: 120: while (ADCON0bits.GO_nDONE)
 56959  00B80C  D001               	goto	l2830
 56960  00B80E                     l2831:
 56961  00B80E  0004               	clrwdt		;# 
 56962  00B810                     l2830:
 56963  00B810  B2C2               	btfsc	4034,1,c	;volatile
 56964  00B812  D7FD               	goto	l2831
 56965                           
 56966                           ;adc.c: 123: }
 56967                           ;adc.c: 126: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 56968  00B814  50C4               	movf	4036,w,c	;volatile
 56969  00B816  0100               	movlb	0	; () banked
 56970  00B818  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 56971  00B81A  6B62               	clrf	??_ADC_GetConversion& (0+255),b
 56972  00B81C  50C3               	movf	4035,w,c	;volatile
 56973  00B81E  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
 56974  00B820  6F60               	movwf	?_ADC_GetConversion& (0+255),b
 56975  00B822  0E00               	movlw	0
 56976  00B824  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 56977  00B826  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 56978  00B828  0012               	return	
 56979  00B82A                     __end_of_ADC_GetConversion:
 56980                           	opt stack 0
 56981                           tosu	equ	0xFFF
 56982                           tosh	equ	0xFFE
 56983                           tosl	equ	0xFFD
 56984                           pclath	equ	0xFFA
 56985                           tblptru	equ	0xFF8
 56986                           tblptrh	equ	0xFF7
 56987                           tblptrl	equ	0xFF6
 56988                           tablat	equ	0xFF5
 56989                           prodh	equ	0xFF4
 56990                           prodl	equ	0xFF3
 56991                           intcon	equ	0xFF2
 56992                           intcon2	equ	0xFF1
 56993                           intcon3	equ	0xFF0
 56994                           indf0	equ	0xFEF
 56995                           postinc0	equ	0xFEE
 56996                           plusw0	equ	0xFEB
 56997                           fsr0h	equ	0xFEA
 56998                           fsr0l	equ	0xFE9
 56999                           wreg	equ	0xFE8
 57000                           postinc1	equ	0xFE6
 57001                           postdec1	equ	0xFE5
 57002                           plusw1	equ	0xFE3
 57003                           fsr1h	equ	0xFE2
 57004                           fsr1l	equ	0xFE1
 57005                           indf2	equ	0xFDF
 57006                           postinc2	equ	0xFDE
 57007                           postdec2	equ	0xFDD
 57008                           plusw2	equ	0xFDB
 57009                           fsr2h	equ	0xFDA
 57010                           fsr2l	equ	0xFD9
 57011                           status	equ	0xFD8
 57012                           
 57013 ;; *************** function _INTERRUPT_InterruptManager *****************
 57014 ;; Defined at:
 57015 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 57016 ;; Parameters:    Size  Location     Type
 57017 ;;		None
 57018 ;; Auto vars:     Size  Location     Type
 57019 ;;		None
 57020 ;; Return value:  Size  Location     Type
 57021 ;;                  1    wreg      void 
 57022 ;; Registers used:
 57023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 57024 ;; Tracked objects:
 57025 ;;		On entry : 0/0
 57026 ;;		On exit  : 0/0
 57027 ;;		Unchanged: 0/0
 57028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57031 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57032 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57033 ;;Total ram usage:        8 bytes
 57034 ;; Hardware stack levels used:    1
 57035 ;; Hardware stack levels required when called:    6
 57036 ;; This function calls:
 57037 ;;		_INT1_ISR
 57038 ;;		_INT2_ISR
 57039 ;;		_PIN_MANAGER_IOC
 57040 ;;		_TMR1_ISR
 57041 ;; This function is called by:
 57042 ;;		Interrupt level 2
 57043 ;; This function uses a non-reentrant model
 57044 ;;
 57045                           
 57046                           	psect	intcode
 57047  000008                     __pintcode:
 57048                           	opt stack 0
 57049  000008                     _INTERRUPT_InterruptManager:
 57050                           	opt stack 11
 57051                           
 57052                           ; BSR set to: 0
 57053                           ;incstack = 0
 57054  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
 57055  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 57056  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 57057  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 57058  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 57059  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 57060  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
 57061  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
 57062  000028  EE19  F0E8         	lfsr	1,___inthi_sp
 57063                           
 57064                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 57065  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 57066  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 57067  000030  D003               	goto	i2l2618
 57068                           
 57069                           ;interrupt_manager.c: 62: {
 57070                           ;interrupt_manager.c: 63: INT1_ISR();
 57071  000032  EC32  F063         	call	_INT1_ISR	;wreg free
 57072                           
 57073                           ;interrupt_manager.c: 64: }
 57074  000036  D012               	goto	i2l2625
 57075  000038                     i2l2618:
 57076                           
 57077                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 57078  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 57079  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 57080  00003C  D003               	goto	i2l2620
 57081                           
 57082                           ;interrupt_manager.c: 66: {
 57083                           ;interrupt_manager.c: 67: INT2_ISR();
 57084  00003E  EC2E  F063         	call	_INT2_ISR	;wreg free
 57085                           
 57086                           ;interrupt_manager.c: 68: }
 57087  000042  D00C               	goto	i2l2625
 57088  000044                     i2l2620:
 57089                           
 57090                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 57091  000044  B6F2               	btfsc	intcon,3,c	;volatile
 57092  000046  A0F2               	btfss	intcon,0,c	;volatile
 57093  000048  D003               	goto	i2l2622
 57094                           
 57095                           ;interrupt_manager.c: 70: {
 57096                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
 57097  00004A  EC05  F063         	call	_PIN_MANAGER_IOC	;wreg free
 57098                           
 57099                           ;interrupt_manager.c: 72: }
 57100  00004E  D006               	goto	i2l2625
 57101  000050                     i2l2622:
 57102                           
 57103                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
 57104  000050  BCF2               	btfsc	intcon,6,c	;volatile
 57105                           
 57106                           ;interrupt_manager.c: 74: {
 57107                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 57108  000052  A09D               	btfss	3997,0,c	;volatile
 57109  000054  D003               	goto	i2l2625
 57110  000056  B09E               	btfsc	3998,0,c	;volatile
 57111                           
 57112                           ;interrupt_manager.c: 76: {
 57113                           ;interrupt_manager.c: 77: TMR1_ISR();
 57114  000058  ECB4  F061         	call	_TMR1_ISR	;wreg free
 57115  00005C                     i2l2625:
 57116                           
 57117                           ;interrupt_manager.c: 84: else
 57118                           ;interrupt_manager.c: 85: {
 57119                           
 57120                           ;interrupt_manager.c: 82: }
 57121                           ;interrupt_manager.c: 83: }
 57122                           
 57123                           ;interrupt_manager.c: 79: else
 57124                           ;interrupt_manager.c: 80: {
 57125  00005C  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 57126  000060  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 57127  000064  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 57128  000068  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 57129  00006C  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 57130  000070  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 57131  000074  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 57132  000078  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 57133  00007C  0011               	retfie		f
 57134  00007E                     __end_of_INTERRUPT_InterruptManager:
 57135                           	opt stack 0
 57136                           tosu	equ	0xFFF
 57137                           tosh	equ	0xFFE
 57138                           tosl	equ	0xFFD
 57139                           pclatu	equ	0xFFB
 57140                           pclath	equ	0xFFA
 57141                           tblptru	equ	0xFF8
 57142                           tblptrh	equ	0xFF7
 57143                           tblptrl	equ	0xFF6
 57144                           tablat	equ	0xFF5
 57145                           prodh	equ	0xFF4
 57146                           prodl	equ	0xFF3
 57147                           intcon	equ	0xFF2
 57148                           intcon2	equ	0xFF1
 57149                           intcon3	equ	0xFF0
 57150                           indf0	equ	0xFEF
 57151                           postinc0	equ	0xFEE
 57152                           plusw0	equ	0xFEB
 57153                           fsr0h	equ	0xFEA
 57154                           fsr0l	equ	0xFE9
 57155                           wreg	equ	0xFE8
 57156                           postinc1	equ	0xFE6
 57157                           postdec1	equ	0xFE5
 57158                           plusw1	equ	0xFE3
 57159                           fsr1h	equ	0xFE2
 57160                           fsr1l	equ	0xFE1
 57161                           indf2	equ	0xFDF
 57162                           postinc2	equ	0xFDE
 57163                           postdec2	equ	0xFDD
 57164                           plusw2	equ	0xFDB
 57165                           fsr2h	equ	0xFDA
 57166                           fsr2l	equ	0xFD9
 57167                           status	equ	0xFD8
 57168                           
 57169 ;; *************** function _TMR1_ISR *****************
 57170 ;; Defined at:
 57171 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 57172 ;; Parameters:    Size  Location     Type
 57173 ;;		None
 57174 ;; Auto vars:     Size  Location     Type
 57175 ;;		None
 57176 ;; Return value:  Size  Location     Type
 57177 ;;                  1    wreg      void 
 57178 ;; Registers used:
 57179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 57180 ;; Tracked objects:
 57181 ;;		On entry : 0/0
 57182 ;;		On exit  : 0/0
 57183 ;;		Unchanged: 0/0
 57184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57189 ;;Total ram usage:        0 bytes
 57190 ;; Hardware stack levels used:    1
 57191 ;; Hardware stack levels required when called:    5
 57192 ;; This function calls:
 57193 ;;		_TMR1_CallBack
 57194 ;;		i2_TMR1_WriteTimer
 57195 ;; This function is called by:
 57196 ;;		_INTERRUPT_InterruptManager
 57197 ;; This function uses a non-reentrant model
 57198 ;;
 57199                           
 57200                           	psect	text307
 57201  00C368                     __ptext307:
 57202                           	opt stack 0
 57203  00C368                     _TMR1_ISR:
 57204                           	opt stack 11
 57205                           
 57206                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
 57207                           
 57208                           ;incstack = 0
 57209  00C368  909E               	bcf	3998,0,c	;volatile
 57210                           
 57211                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
 57212  00C36A  C1F5  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 57213  00C36E  C1F6  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 57214  00C372  ECC5  F060         	call	i2_TMR1_WriteTimer	;wreg free
 57215                           
 57216                           ;tmr1.c: 167: TMR1_CallBack();
 57217  00C376  EC0F  F060         	call	_TMR1_CallBack	;wreg free
 57218  00C37A  0012               	return		;funcret
 57219  00C37C                     __end_of_TMR1_ISR:
 57220                           	opt stack 0
 57221                           tosu	equ	0xFFF
 57222                           tosh	equ	0xFFE
 57223                           tosl	equ	0xFFD
 57224                           pclatu	equ	0xFFB
 57225                           pclath	equ	0xFFA
 57226                           tblptru	equ	0xFF8
 57227                           tblptrh	equ	0xFF7
 57228                           tblptrl	equ	0xFF6
 57229                           tablat	equ	0xFF5
 57230                           prodh	equ	0xFF4
 57231                           prodl	equ	0xFF3
 57232                           intcon	equ	0xFF2
 57233                           intcon2	equ	0xFF1
 57234                           intcon3	equ	0xFF0
 57235                           indf0	equ	0xFEF
 57236                           postinc0	equ	0xFEE
 57237                           plusw0	equ	0xFEB
 57238                           fsr0h	equ	0xFEA
 57239                           fsr0l	equ	0xFE9
 57240                           wreg	equ	0xFE8
 57241                           postinc1	equ	0xFE6
 57242                           postdec1	equ	0xFE5
 57243                           plusw1	equ	0xFE3
 57244                           fsr1h	equ	0xFE2
 57245                           fsr1l	equ	0xFE1
 57246                           indf2	equ	0xFDF
 57247                           postinc2	equ	0xFDE
 57248                           postdec2	equ	0xFDD
 57249                           plusw2	equ	0xFDB
 57250                           fsr2h	equ	0xFDA
 57251                           fsr2l	equ	0xFD9
 57252                           status	equ	0xFD8
 57253                           
 57254 ;; *************** function _TMR1_CallBack *****************
 57255 ;; Defined at:
 57256 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 57257 ;; Parameters:    Size  Location     Type
 57258 ;;		None
 57259 ;; Auto vars:     Size  Location     Type
 57260 ;;		None
 57261 ;; Return value:  Size  Location     Type
 57262 ;;                  1    wreg      void 
 57263 ;; Registers used:
 57264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 57265 ;; Tracked objects:
 57266 ;;		On entry : 0/0
 57267 ;;		On exit  : 0/0
 57268 ;;		Unchanged: 0/0
 57269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57274 ;;Total ram usage:        0 bytes
 57275 ;; Hardware stack levels used:    1
 57276 ;; Hardware stack levels required when called:    4
 57277 ;; This function calls:
 57278 ;;		Absolute function
 57279 ;;		_TMR1_DefaultInterruptHandler
 57280 ;;		_TMR_ISR_lora
 57281 ;; This function is called by:
 57282 ;;		_TMR1_ISR
 57283 ;; This function uses a non-reentrant model
 57284 ;;
 57285                           
 57286                           	psect	text308
 57287  00C01E                     __ptext308:
 57288                           	opt stack 0
 57289  00C01E                     _TMR1_CallBack:
 57290                           	opt stack 11
 57291                           
 57292                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
 57293                           
 57294                           ;incstack = 0
 57295  00C01E  0103               	movlb	3	; () banked
 57296  00C020  51F8               	movf	_TMR1_InterruptHandler& (0+255),w,b
 57297  00C022  11F9               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 57298  00C024  B4D8               	btfsc	status,2,c
 57299  00C026  0012               	return	
 57300                           
 57301                           ; BSR set to: 3
 57302                           ;tmr1.c: 174: {
 57303                           ;tmr1.c: 175: TMR1_InterruptHandler();
 57304  00C028  D801               	call	i2u2876_48
 57305  00C02A  0012               	return	
 57306  00C02C                     i2u2876_48:
 57307  00C02C  0005               	push	
 57308  00C02E  6EFA               	movwf	pclath,c
 57309  00C030  51F8               	movf	_TMR1_InterruptHandler& (0+255),w,b
 57310  00C032  6EFD               	movwf	tosl,c
 57311  00C034  51F9               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 57312  00C036  6EFE               	movwf	tosh,c
 57313  00C038  6AFF               	clrf	tosu,c
 57314  00C03A  50FA               	movf	pclath,w,c
 57315  00C03C  0012               	return		;indir
 57316  00C03E                     __end_of_TMR1_CallBack:
 57317                           	opt stack 0
 57318                           tosu	equ	0xFFF
 57319                           tosh	equ	0xFFE
 57320                           tosl	equ	0xFFD
 57321                           pclatu	equ	0xFFB
 57322                           pclath	equ	0xFFA
 57323                           tblptru	equ	0xFF8
 57324                           tblptrh	equ	0xFF7
 57325                           tblptrl	equ	0xFF6
 57326                           tablat	equ	0xFF5
 57327                           prodh	equ	0xFF4
 57328                           prodl	equ	0xFF3
 57329                           intcon	equ	0xFF2
 57330                           intcon2	equ	0xFF1
 57331                           intcon3	equ	0xFF0
 57332                           indf0	equ	0xFEF
 57333                           postinc0	equ	0xFEE
 57334                           plusw0	equ	0xFEB
 57335                           fsr0h	equ	0xFEA
 57336                           fsr0l	equ	0xFE9
 57337                           wreg	equ	0xFE8
 57338                           postinc1	equ	0xFE6
 57339                           postdec1	equ	0xFE5
 57340                           plusw1	equ	0xFE3
 57341                           fsr1h	equ	0xFE2
 57342                           fsr1l	equ	0xFE1
 57343                           indf2	equ	0xFDF
 57344                           postinc2	equ	0xFDE
 57345                           postdec2	equ	0xFDD
 57346                           plusw2	equ	0xFDB
 57347                           fsr2h	equ	0xFDA
 57348                           fsr2l	equ	0xFD9
 57349                           status	equ	0xFD8
 57350                           
 57351 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 57352 ;; Defined at:
 57353 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 57354 ;; Parameters:    Size  Location     Type
 57355 ;;		None
 57356 ;; Auto vars:     Size  Location     Type
 57357 ;;		None
 57358 ;; Return value:  Size  Location     Type
 57359 ;;                  1    wreg      void 
 57360 ;; Registers used:
 57361 ;;		None
 57362 ;; Tracked objects:
 57363 ;;		On entry : 0/0
 57364 ;;		On exit  : 0/0
 57365 ;;		Unchanged: 0/0
 57366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57371 ;;Total ram usage:        0 bytes
 57372 ;; Hardware stack levels used:    1
 57373 ;; This function calls:
 57374 ;;		Nothing
 57375 ;; This function is called by:
 57376 ;;		_TMR1_Initialize
 57377 ;;		_TMR1_CallBack
 57378 ;; This function uses a non-reentrant model
 57379 ;;
 57380                           
 57381                           	psect	text309
 57382  00C6F4                     __ptext309:
 57383                           	opt stack 0
 57384  00C6F4                     _TMR1_DefaultInterruptHandler:
 57385                           	opt stack 14
 57386                           
 57387                           ;incstack = 0
 57388  00C6F4  0012               	return		;funcret
 57389  00C6F6                     __end_of_TMR1_DefaultInterruptHandler:
 57390                           	opt stack 0
 57391                           tosu	equ	0xFFF
 57392                           tosh	equ	0xFFE
 57393                           tosl	equ	0xFFD
 57394                           pclatu	equ	0xFFB
 57395                           pclath	equ	0xFFA
 57396                           tblptru	equ	0xFF8
 57397                           tblptrh	equ	0xFF7
 57398                           tblptrl	equ	0xFF6
 57399                           tablat	equ	0xFF5
 57400                           prodh	equ	0xFF4
 57401                           prodl	equ	0xFF3
 57402                           intcon	equ	0xFF2
 57403                           intcon2	equ	0xFF1
 57404                           intcon3	equ	0xFF0
 57405                           indf0	equ	0xFEF
 57406                           postinc0	equ	0xFEE
 57407                           plusw0	equ	0xFEB
 57408                           fsr0h	equ	0xFEA
 57409                           fsr0l	equ	0xFE9
 57410                           wreg	equ	0xFE8
 57411                           postinc1	equ	0xFE6
 57412                           postdec1	equ	0xFE5
 57413                           plusw1	equ	0xFE3
 57414                           fsr1h	equ	0xFE2
 57415                           fsr1l	equ	0xFE1
 57416                           indf2	equ	0xFDF
 57417                           postinc2	equ	0xFDE
 57418                           postdec2	equ	0xFDD
 57419                           plusw2	equ	0xFDB
 57420                           fsr2h	equ	0xFDA
 57421                           fsr2l	equ	0xFD9
 57422                           status	equ	0xFD8
 57423                           
 57424 ;; *************** function _TMR_ISR_lora *****************
 57425 ;; Defined at:
 57426 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 57427 ;; Parameters:    Size  Location     Type
 57428 ;;		None
 57429 ;; Auto vars:     Size  Location     Type
 57430 ;;		None
 57431 ;; Return value:  Size  Location     Type
 57432 ;;                  1    wreg      void 
 57433 ;; Registers used:
 57434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 57435 ;; Tracked objects:
 57436 ;;		On entry : 0/0
 57437 ;;		On exit  : 0/0
 57438 ;;		Unchanged: 0/0
 57439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57444 ;;Total ram usage:        2 bytes
 57445 ;; Hardware stack levels used:    1
 57446 ;; Hardware stack levels required when called:    3
 57447 ;; This function calls:
 57448 ;;		i2_SwTimersInterrupt
 57449 ;;		i2_TMR_SwapTimer
 57450 ;; This function is called by:
 57451 ;;		_TMR_ISR_Lora_Init
 57452 ;;		_TMR1_CallBack
 57453 ;; This function uses a non-reentrant model
 57454 ;;
 57455                           
 57456                           	psect	text310
 57457  00AEE8                     __ptext310:
 57458                           	opt stack 0
 57459  00AEE8                     _TMR_ISR_lora:
 57460                           	opt stack 11
 57461                           
 57462                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 57463                           
 57464                           ;incstack = 0
 57465  00AEE8  0E01               	movlw	1
 57466  00AEEA  6E47               	movwf	_timerOverflow,c	;volatile
 57467                           
 57468                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 57469  00AEEC  EC5E  F043         	call	i2_SwTimersInterrupt	;wreg free
 57470  00AEF0  C021  F054         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 57471  00AEF4  C022  F055         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 57472  00AEF8  C023  F056         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 57473  00AEFC  C024  F057         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 57474                           
 57475                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 57476  00AF00  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 57477  00AF02  E11C               	bnz	i2l1663
 57478  00AF04  0456               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 57479  00AF06  B0D8               	btfsc	status,0,c
 57480  00AF08  0012               	return	
 57481                           
 57482                           ;tmr_lora_addons.c: 66: {
 57483                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 57484  00AF0A  C054  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 57485  00AF0E  C055  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 57486  00AF12  1E32               	comf	??_TMR_ISR_lora,f,c
 57487  00AF14  1E33               	comf	??_TMR_ISR_lora+1,f,c
 57488  00AF16  4A32               	infsnz	??_TMR_ISR_lora,f,c
 57489  00AF18  2A33               	incf	??_TMR_ISR_lora+1,f,c
 57490  00AF1A  C032  F044         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 57491  00AF1E  C033  F045         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 57492                           
 57493                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 57494  00AF22  C044  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 57495  00AF26  C045  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 57496  00AF2A  ECF9  F05A         	call	i2_TMR_SwapTimer	;wreg free
 57497  00AF2E  C009  F040         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 57498  00AF32  C00A  F041         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 57499  00AF36  6A42               	clrf	_ticksAdded+2,c	;volatile
 57500  00AF38  6A43               	clrf	_ticksAdded+3,c	;volatile
 57501  00AF3A  0012               	return	
 57502  00AF3C                     i2l1663:
 57503  00AF3C  0012               	return		;funcret
 57504  00AF3E                     __end_of_TMR_ISR_lora:
 57505                           	opt stack 0
 57506                           tosu	equ	0xFFF
 57507                           tosh	equ	0xFFE
 57508                           tosl	equ	0xFFD
 57509                           pclatu	equ	0xFFB
 57510                           pclath	equ	0xFFA
 57511                           tblptru	equ	0xFF8
 57512                           tblptrh	equ	0xFF7
 57513                           tblptrl	equ	0xFF6
 57514                           tablat	equ	0xFF5
 57515                           prodh	equ	0xFF4
 57516                           prodl	equ	0xFF3
 57517                           intcon	equ	0xFF2
 57518                           intcon2	equ	0xFF1
 57519                           intcon3	equ	0xFF0
 57520                           indf0	equ	0xFEF
 57521                           postinc0	equ	0xFEE
 57522                           plusw0	equ	0xFEB
 57523                           fsr0h	equ	0xFEA
 57524                           fsr0l	equ	0xFE9
 57525                           wreg	equ	0xFE8
 57526                           postinc1	equ	0xFE6
 57527                           postdec1	equ	0xFE5
 57528                           plusw1	equ	0xFE3
 57529                           fsr1h	equ	0xFE2
 57530                           fsr1l	equ	0xFE1
 57531                           indf2	equ	0xFDF
 57532                           postinc2	equ	0xFDE
 57533                           postdec2	equ	0xFDD
 57534                           plusw2	equ	0xFDB
 57535                           fsr2h	equ	0xFDA
 57536                           fsr2l	equ	0xFD9
 57537                           status	equ	0xFD8
 57538                           
 57539 ;; *************** function i2_TMR_SwapTimer *****************
 57540 ;; Defined at:
 57541 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 57542 ;; Parameters:    Size  Location     Type
 57543 ;;  timerVal        2    8[COMRAM] unsigned int 
 57544 ;; Auto vars:     Size  Location     Type
 57545 ;;		None
 57546 ;; Return value:  Size  Location     Type
 57547 ;;                  2    8[COMRAM] unsigned int 
 57548 ;; Registers used:
 57549 ;;		wreg, status,2, status,0, cstack
 57550 ;; Tracked objects:
 57551 ;;		On entry : 0/0
 57552 ;;		On exit  : 0/0
 57553 ;;		Unchanged: 0/0
 57554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57559 ;;Total ram usage:        2 bytes
 57560 ;; Hardware stack levels used:    1
 57561 ;; Hardware stack levels required when called:    1
 57562 ;; This function calls:
 57563 ;;		i2_TMR1_ReadTimer
 57564 ;;		i2_TMR1_WriteTimer
 57565 ;; This function is called by:
 57566 ;;		_TMR_ISR_lora
 57567 ;; This function uses a non-reentrant model
 57568 ;;
 57569                           
 57570                           	psect	text311
 57571  00B5F2                     __ptext311:
 57572                           	opt stack 0
 57573  00B5F2                     i2_TMR_SwapTimer:
 57574                           	opt stack 12
 57575                           
 57576                           ;sw_timer.c: 114: static uint16_t oldVal;
 57577                           ;sw_timer.c: 115: static uint16_t retVal;
 57578                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 57579                           
 57580                           ;incstack = 0
 57581  00B5F2  EC1F  F060         	call	i2_TMR1_ReadTimer	;wreg free
 57582  00B5F6  C001  F122         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 57583  00B5FA  C002  F123         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 57584  00B5FE                     
 57585                           ;sw_timer.c: 123: ;
 57586  00B5FE  EC1F  F060         	call	i2_TMR1_ReadTimer	;wreg free
 57587  00B602  0101               	movlb	1	; () banked
 57588  00B604  5122               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 57589  00B606  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 57590  00B608  E104               	bnz	i2l14505
 57591  00B60A  5123               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 57592  00B60C  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 57593  00B60E  B4D8               	btfsc	status,2,c
 57594  00B610  D7F6               	goto	i2l555
 57595  00B612                     i2l14505:
 57596                           
 57597                           ; BSR set to: 1
 57598                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 57599  00B612  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 57600  00B616  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 57601  00B61A  ECC5  F060         	call	i2_TMR1_WriteTimer	;wreg free
 57602                           
 57603                           ;sw_timer.c: 128: oldVal++;
 57604  00B61E  0101               	movlb	1	; () banked
 57605  00B620  4B22               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 57606  00B622  2B23               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 57607                           
 57608                           ; BSR set to: 1
 57609                           ;sw_timer.c: 130: retVal = oldVal;
 57610  00B624  C122  F120         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 57611  00B628  C123  F121         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 57612                           
 57613                           ; BSR set to: 1
 57614                           ;sw_timer.c: 132: return retVal;
 57615  00B62C  C120  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 57616  00B630  C121  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 57617  00B634  0012               	return	
 57618  00B636                     __end_ofi2_TMR_SwapTimer:
 57619                           	opt stack 0
 57620                           tosu	equ	0xFFF
 57621                           tosh	equ	0xFFE
 57622                           tosl	equ	0xFFD
 57623                           pclatu	equ	0xFFB
 57624                           pclath	equ	0xFFA
 57625                           tblptru	equ	0xFF8
 57626                           tblptrh	equ	0xFF7
 57627                           tblptrl	equ	0xFF6
 57628                           tablat	equ	0xFF5
 57629                           prodh	equ	0xFF4
 57630                           prodl	equ	0xFF3
 57631                           intcon	equ	0xFF2
 57632                           intcon2	equ	0xFF1
 57633                           intcon3	equ	0xFF0
 57634                           indf0	equ	0xFEF
 57635                           postinc0	equ	0xFEE
 57636                           plusw0	equ	0xFEB
 57637                           fsr0h	equ	0xFEA
 57638                           fsr0l	equ	0xFE9
 57639                           wreg	equ	0xFE8
 57640                           postinc1	equ	0xFE6
 57641                           postdec1	equ	0xFE5
 57642                           plusw1	equ	0xFE3
 57643                           fsr1h	equ	0xFE2
 57644                           fsr1l	equ	0xFE1
 57645                           indf2	equ	0xFDF
 57646                           postinc2	equ	0xFDE
 57647                           postdec2	equ	0xFDD
 57648                           plusw2	equ	0xFDB
 57649                           fsr2h	equ	0xFDA
 57650                           fsr2l	equ	0xFD9
 57651                           status	equ	0xFD8
 57652                           
 57653 ;; *************** function i2_TMR1_WriteTimer *****************
 57654 ;; Defined at:
 57655 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 57656 ;; Parameters:    Size  Location     Type
 57657 ;;  timerVal        2    0[COMRAM] unsigned int 
 57658 ;; Auto vars:     Size  Location     Type
 57659 ;;		None
 57660 ;; Return value:  Size  Location     Type
 57661 ;;                  1    wreg      void 
 57662 ;; Registers used:
 57663 ;;		wreg, status,2
 57664 ;; Tracked objects:
 57665 ;;		On entry : 0/0
 57666 ;;		On exit  : 0/0
 57667 ;;		Unchanged: 0/0
 57668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57673 ;;Total ram usage:        2 bytes
 57674 ;; Hardware stack levels used:    1
 57675 ;; This function calls:
 57676 ;;		Nothing
 57677 ;; This function is called by:
 57678 ;;		_TMR1_ISR
 57679 ;;		i2_TMR_SwapTimer
 57680 ;; This function uses a non-reentrant model
 57681 ;;
 57682                           
 57683                           	psect	text312
 57684  00C18A                     __ptext312:
 57685                           	opt stack 0
 57686  00C18A                     i2_TMR1_WriteTimer:
 57687                           	opt stack 15
 57688                           
 57689                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 57690                           
 57691                           ; BSR set to: 1
 57692                           ;incstack = 0
 57693  00C18A  A4CD               	btfss	4045,2,c	;volatile
 57694  00C18C  D007               	goto	i2l2774
 57695                           
 57696                           ;tmr1.c: 124: {
 57697                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 57698  00C18E  90CD               	bcf	4045,0,c	;volatile
 57699                           
 57700                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 57701  00C190  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 57702  00C192  6ECF               	movwf	4047,c	;volatile
 57703                           
 57704                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 57705  00C194  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 57706                           
 57707                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 57708  00C198  80CD               	bsf	4045,0,c	;volatile
 57709                           
 57710                           ;tmr1.c: 134: }
 57711  00C19A  0012               	return	
 57712  00C19C                     i2l2774:
 57713                           
 57714                           ;tmr1.c: 135: else
 57715                           ;tmr1.c: 136: {
 57716                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 57717  00C19C  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 57718  00C19E  6ECF               	movwf	4047,c	;volatile
 57719                           
 57720                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 57721  00C1A0  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 57722  00C1A4  0012               	return	
 57723  00C1A6                     __end_ofi2_TMR1_WriteTimer:
 57724                           	opt stack 0
 57725                           tosu	equ	0xFFF
 57726                           tosh	equ	0xFFE
 57727                           tosl	equ	0xFFD
 57728                           pclatu	equ	0xFFB
 57729                           pclath	equ	0xFFA
 57730                           tblptru	equ	0xFF8
 57731                           tblptrh	equ	0xFF7
 57732                           tblptrl	equ	0xFF6
 57733                           tablat	equ	0xFF5
 57734                           prodh	equ	0xFF4
 57735                           prodl	equ	0xFF3
 57736                           intcon	equ	0xFF2
 57737                           intcon2	equ	0xFF1
 57738                           intcon3	equ	0xFF0
 57739                           indf0	equ	0xFEF
 57740                           postinc0	equ	0xFEE
 57741                           plusw0	equ	0xFEB
 57742                           fsr0h	equ	0xFEA
 57743                           fsr0l	equ	0xFE9
 57744                           wreg	equ	0xFE8
 57745                           postinc1	equ	0xFE6
 57746                           postdec1	equ	0xFE5
 57747                           plusw1	equ	0xFE3
 57748                           fsr1h	equ	0xFE2
 57749                           fsr1l	equ	0xFE1
 57750                           indf2	equ	0xFDF
 57751                           postinc2	equ	0xFDE
 57752                           postdec2	equ	0xFDD
 57753                           plusw2	equ	0xFDB
 57754                           fsr2h	equ	0xFDA
 57755                           fsr2l	equ	0xFD9
 57756                           status	equ	0xFD8
 57757                           
 57758 ;; *************** function i2_SwTimersInterrupt *****************
 57759 ;; Defined at:
 57760 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 57761 ;; Parameters:    Size  Location     Type
 57762 ;;		None
 57763 ;; Auto vars:     Size  Location     Type
 57764 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 57765 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 57766 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 57767 ;; Return value:  Size  Location     Type
 57768 ;;                  4   32[COMRAM] unsigned long 
 57769 ;; Registers used:
 57770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 57771 ;; Tracked objects:
 57772 ;;		On entry : 0/0
 57773 ;;		On exit  : 0/0
 57774 ;;		Unchanged: 0/0
 57775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57777 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57778 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57779 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57780 ;;Total ram usage:       17 bytes
 57781 ;; Hardware stack levels used:    1
 57782 ;; Hardware stack levels required when called:    2
 57783 ;; This function calls:
 57784 ;;		i2_TMR_GetDeltaTime
 57785 ;; This function is called by:
 57786 ;;		_TMR_ISR_lora
 57787 ;; This function uses a non-reentrant model
 57788 ;;
 57789                           
 57790                           	psect	text313
 57791  0086BC                     __ptext313:
 57792                           	opt stack 0
 57793  0086BC                     i2_SwTimersInterrupt:
 57794                           	opt stack 11
 57795                           
 57796                           ;sw_timer.c: 289: uint8_t i;
 57797                           ;sw_timer.c: 290: uint32_t timeElapsed;
 57798                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 57799                           
 57800                           ;incstack = 0
 57801  0086BC  682D               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 57802  0086BE  682E               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 57803  0086C0  682F               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 57804  0086C2  6830               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 57805                           
 57806                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 57807  0086C4  EC7D  F039         	call	i2_TMR_GetDeltaTime	;wreg free
 57808  0086C8  C009  F029         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 57809  0086CC  C00A  F02A         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 57810  0086D0  C00B  F02B         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 57811  0086D4  C00C  F02C         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 57812                           
 57813                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 57814  0086D8  0E00               	movlw	0
 57815  0086DA  6E31               	movwf	i2SwTimersInterrupt@i,c
 57816  0086DC  D061               	goto	i2l612
 57817  0086DE                     
 57818                           ;sw_timer.c: 298: {
 57819                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 57820  0086DE  5031               	movf	i2SwTimersInterrupt@i,w,c
 57821  0086E0  0D08               	mullw	8
 57822  0086E2  0E04               	movlw	4
 57823  0086E4  26F3               	addwf	prodl,f,c
 57824  0086E6  0E00               	movlw	0
 57825  0086E8  22F4               	addwfc	prodh,f,c
 57826  0086EA  0E00               	movlw	low _swTimers
 57827  0086EC  24F3               	addwf	prodl,w,c
 57828  0086EE  6ED9               	movwf	fsr2l,c
 57829  0086F0  0E03               	movlw	high _swTimers
 57830  0086F2  20F4               	addwfc	prodh,w,c
 57831  0086F4  6EDA               	movwf	fsr2h,c
 57832  0086F6  04DE               	decf	postinc2,w,c
 57833  0086F8  A4D8               	btfss	status,2,c
 57834  0086FA  D051               	goto	i2l617
 57835                           
 57836                           ;sw_timer.c: 302: {
 57837                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 57838  0086FC  5031               	movf	i2SwTimersInterrupt@i,w,c
 57839  0086FE  0D08               	mullw	8
 57840  008700  0E00               	movlw	low _swTimers
 57841  008702  24F3               	addwf	prodl,w,c
 57842  008704  6ED9               	movwf	fsr2l,c
 57843  008706  0E03               	movlw	high _swTimers
 57844  008708  20F4               	addwfc	prodh,w,c
 57845  00870A  6EDA               	movwf	fsr2h,c
 57846  00870C  50DE               	movf	postinc2,w,c
 57847  00870E  5C29               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 57848  008710  50DE               	movf	postinc2,w,c
 57849  008712  582A               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 57850  008714  50DE               	movf	postinc2,w,c
 57851  008716  582B               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 57852  008718  50DE               	movf	postinc2,w,c
 57853  00871A  582C               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 57854  00871C  A0D8               	btfss	status,0,c
 57855  00871E  D00D               	goto	i2l615
 57856                           
 57857                           ;sw_timer.c: 304: {
 57858                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 57859  008720  5031               	movf	i2SwTimersInterrupt@i,w,c
 57860  008722  0D08               	mullw	8
 57861  008724  0E00               	movlw	low _swTimers
 57862  008726  24F3               	addwf	prodl,w,c
 57863  008728  6ED9               	movwf	fsr2l,c
 57864  00872A  0E03               	movlw	high _swTimers
 57865  00872C  20F4               	addwfc	prodh,w,c
 57866  00872E  6EDA               	movwf	fsr2h,c
 57867  008730  6ADE               	clrf	postinc2,c
 57868  008732  6ADE               	clrf	postinc2,c
 57869  008734  6ADE               	clrf	postinc2,c
 57870  008736  6ADD               	clrf	postdec2,c
 57871                           
 57872                           ;sw_timer.c: 306: }
 57873  008738  D032               	goto	i2l617
 57874  00873A                     i2l615:
 57875                           
 57876                           ;sw_timer.c: 307: else
 57877                           ;sw_timer.c: 308: {
 57878                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 57879  00873A  5031               	movf	i2SwTimersInterrupt@i,w,c
 57880  00873C  0D08               	mullw	8
 57881  00873E  0E00               	movlw	low _swTimers
 57882  008740  24F3               	addwf	prodl,w,c
 57883  008742  6ED9               	movwf	fsr2l,c
 57884  008744  0E03               	movlw	high _swTimers
 57885  008746  20F4               	addwfc	prodh,w,c
 57886  008748  6EDA               	movwf	fsr2h,c
 57887  00874A  5029               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 57888  00874C  5EDE               	subwf	postinc2,f,c
 57889  00874E  502A               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 57890  008750  5ADE               	subwfb	postinc2,f,c
 57891  008752  502B               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 57892  008754  5ADE               	subwfb	postinc2,f,c
 57893  008756  502C               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 57894  008758  5ADE               	subwfb	postinc2,f,c
 57895                           
 57896                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 57897  00875A  5031               	movf	i2SwTimersInterrupt@i,w,c
 57898  00875C  0D08               	mullw	8
 57899  00875E  0E00               	movlw	low _swTimers
 57900  008760  24F3               	addwf	prodl,w,c
 57901  008762  6ED9               	movwf	fsr2l,c
 57902  008764  0E03               	movlw	high _swTimers
 57903  008766  20F4               	addwfc	prodh,w,c
 57904  008768  6EDA               	movwf	fsr2h,c
 57905  00876A  502D               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 57906  00876C  5CDE               	subwf	postinc2,w,c
 57907  00876E  502E               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 57908  008770  58DE               	subwfb	postinc2,w,c
 57909  008772  502F               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 57910  008774  58DE               	subwfb	postinc2,w,c
 57911  008776  5030               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 57912  008778  58DE               	subwfb	postinc2,w,c
 57913  00877A  B0D8               	btfsc	status,0,c
 57914  00877C  D010               	goto	i2l617
 57915                           
 57916                           ;sw_timer.c: 313: {
 57917                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 57918  00877E  5031               	movf	i2SwTimersInterrupt@i,w,c
 57919  008780  0D08               	mullw	8
 57920  008782  0E00               	movlw	low _swTimers
 57921  008784  24F3               	addwf	prodl,w,c
 57922  008786  6ED9               	movwf	fsr2l,c
 57923  008788  0E03               	movlw	high _swTimers
 57924  00878A  20F4               	addwfc	prodh,w,c
 57925  00878C  6EDA               	movwf	fsr2h,c
 57926  00878E  CFDE F02D          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 57927  008792  CFDE F02E          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 57928  008796  CFDE F02F          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 57929  00879A  CFDE F030          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 57930  00879E                     i2l617:
 57931  00879E  2A31               	incf	i2SwTimersInterrupt@i,f,c
 57932  0087A0                     i2l612:
 57933  0087A0  0100               	movlb	0	; () banked
 57934  0087A2  51FF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 57935  0087A4  5C31               	subwf	i2SwTimersInterrupt@i,w,c
 57936  0087A6  A0D8               	btfss	status,0,c
 57937  0087A8  D79A               	goto	i2l613
 57938                           
 57939                           ; BSR set to: 0
 57940                           ;sw_timer.c: 315: }
 57941                           ;sw_timer.c: 316: }
 57942                           ;sw_timer.c: 317: }
 57943                           ;sw_timer.c: 318: }
 57944                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 57945  0087AA  C02D  F021         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 57946  0087AE  C02E  F022         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 57947  0087B2  C02F  F023         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 57948  0087B6  C030  F024         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 57949                           
 57950                           ; BSR set to: 0
 57951  0087BA  0012               	return		;funcret
 57952  0087BC                     __end_ofi2_SwTimersInterrupt:
 57953                           	opt stack 0
 57954                           tosu	equ	0xFFF
 57955                           tosh	equ	0xFFE
 57956                           tosl	equ	0xFFD
 57957                           pclatu	equ	0xFFB
 57958                           pclath	equ	0xFFA
 57959                           tblptru	equ	0xFF8
 57960                           tblptrh	equ	0xFF7
 57961                           tblptrl	equ	0xFF6
 57962                           tablat	equ	0xFF5
 57963                           prodh	equ	0xFF4
 57964                           prodl	equ	0xFF3
 57965                           intcon	equ	0xFF2
 57966                           intcon2	equ	0xFF1
 57967                           intcon3	equ	0xFF0
 57968                           indf0	equ	0xFEF
 57969                           postinc0	equ	0xFEE
 57970                           plusw0	equ	0xFEB
 57971                           fsr0h	equ	0xFEA
 57972                           fsr0l	equ	0xFE9
 57973                           wreg	equ	0xFE8
 57974                           postinc1	equ	0xFE6
 57975                           postdec1	equ	0xFE5
 57976                           plusw1	equ	0xFE3
 57977                           fsr1h	equ	0xFE2
 57978                           fsr1l	equ	0xFE1
 57979                           indf2	equ	0xFDF
 57980                           postinc2	equ	0xFDE
 57981                           postdec2	equ	0xFDD
 57982                           plusw2	equ	0xFDB
 57983                           fsr2h	equ	0xFDA
 57984                           fsr2l	equ	0xFD9
 57985                           status	equ	0xFD8
 57986                           
 57987 ;; *************** function i2_TMR_GetDeltaTime *****************
 57988 ;; Defined at:
 57989 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 57990 ;; Parameters:    Size  Location     Type
 57991 ;;		None
 57992 ;; Auto vars:     Size  Location     Type
 57993 ;;		None
 57994 ;; Return value:  Size  Location     Type
 57995 ;;                  4    8[COMRAM] unsigned long 
 57996 ;; Registers used:
 57997 ;;		wreg, status,2, status,0, cstack
 57998 ;; Tracked objects:
 57999 ;;		On entry : 0/0
 58000 ;;		On exit  : 0/0
 58001 ;;		Unchanged: 0/0
 58002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58005 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58006 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58007 ;;Total ram usage:       24 bytes
 58008 ;; Hardware stack levels used:    1
 58009 ;; Hardware stack levels required when called:    1
 58010 ;; This function calls:
 58011 ;;		i2_TMR1_ReadTimer
 58012 ;; This function is called by:
 58013 ;;		i2_SwTimersInterrupt
 58014 ;; This function uses a non-reentrant model
 58015 ;;
 58016                           
 58017                           	psect	text314
 58018  0072FA                     __ptext314:
 58019                           	opt stack 0
 58020  0072FA                     i2_TMR_GetDeltaTime:
 58021                           	opt stack 11
 58022                           
 58023                           ;sw_timer.c: 90: static uint32_t retVal;
 58024                           ;sw_timer.c: 91: static uint16_t tmrVal;
 58025                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 58026                           
 58027                           ; BSR set to: 0
 58028                           ;incstack = 0
 58029  0072FA  EC1F  F060         	call	i2_TMR1_ReadTimer	;wreg free
 58030  0072FE  C001  F124         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 58031  007302  C002  F125         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 58032                           
 58033                           ;sw_timer.c: 95: if (timerOverflow == 1)
 58034  007306  0447               	decf	_timerOverflow,w,c	;volatile
 58035  007308  A4D8               	btfss	status,2,c
 58036  00730A  D066               	goto	i2l545
 58037                           
 58038                           ;sw_timer.c: 96: {
 58039                           ;sw_timer.c: 97: timerOverflow = 0;
 58040  00730C  0E00               	movlw	0
 58041  00730E  6E47               	movwf	_timerOverflow,c	;volatile
 58042                           
 58043                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 58044  007310  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 58045  007314  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 58046  007318  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 58047  00731C  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 58048  007320  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 58049  007322  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 58050  007324  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 58051  007326  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 58052  007328  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 58053  00732A  0E00               	movlw	0
 58054  00732C  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 58055  00732E  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 58056  007330  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 58057  007332  5044               	movf	_reloadVal,w,c	;volatile
 58058  007334  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 58059  007336  5045               	movf	_reloadVal+1,w,c	;volatile
 58060  007338  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 58061  00733A  6A13               	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 58062  00733C  6A14               	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 58063  00733E  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 58064  007340  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 58065  007342  1E13               	comf	??i2_TMR_GetDeltaTime+6,f,c
 58066  007344  1E14               	comf	??i2_TMR_GetDeltaTime+7,f,c
 58067  007346  2A11               	incf	??i2_TMR_GetDeltaTime+4,f,c
 58068  007348  0E00               	movlw	0
 58069  00734A  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 58070  00734C  2213               	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 58071  00734E  2214               	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 58072  007350  0101               	movlb	1	; () banked
 58073  007352  5124               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 58074  007354  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 58075  007356  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 58076  007358  5125               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 58077  00735A  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 58078  00735C  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 58079  00735E  0E00               	movlw	0
 58080  007360  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 58081  007362  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 58082  007364  0E00               	movlw	0
 58083  007366  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 58084  007368  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 58085  00736A  500D               	movf	??i2_TMR_GetDeltaTime,w,c
 58086  00736C  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 58087  00736E  6E19               	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 58088  007370  500E               	movf	??i2_TMR_GetDeltaTime+1,w,c
 58089  007372  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 58090  007374  6E1A               	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 58091  007376  500F               	movf	??i2_TMR_GetDeltaTime+2,w,c
 58092  007378  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 58093  00737A  6E1B               	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 58094  00737C  5010               	movf	??i2_TMR_GetDeltaTime+3,w,c
 58095  00737E  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 58096  007380  6E1C               	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 58097  007382  5040               	movf	_ticksAdded,w,c	;volatile
 58098  007384  2419               	addwf	??i2_TMR_GetDeltaTime+12,w,c
 58099  007386  6E1D               	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 58100  007388  5041               	movf	_ticksAdded+1,w,c	;volatile
 58101  00738A  201A               	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 58102  00738C  6E1E               	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 58103  00738E  5042               	movf	_ticksAdded+2,w,c	;volatile
 58104  007390  201B               	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 58105  007392  6E1F               	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 58106  007394  5043               	movf	_ticksAdded+3,w,c	;volatile
 58107  007396  201C               	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 58108  007398  6E20               	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 58109  00739A  0E00               	movlw	0
 58110  00739C  241D               	addwf	??i2_TMR_GetDeltaTime+16,w,c
 58111  00739E  6F10               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 58112  0073A0  0E00               	movlw	0
 58113  0073A2  201E               	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 58114  0073A4  6F11               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 58115  0073A6  0E01               	movlw	1
 58116  0073A8  201F               	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 58117  0073AA  6F12               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 58118  0073AC  0E00               	movlw	0
 58119  0073AE  2020               	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 58120  0073B0  6F13               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 58121                           
 58122                           ; BSR set to: 1
 58123                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 58124  0073B2  C124  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 58125  0073B6  C125  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 58126  0073BA  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 58127  0073BC  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 58128                           
 58129                           ; BSR set to: 1
 58130                           ;sw_timer.c: 100: ticksAdded = 0;
 58131  0073BE  0E00               	movlw	0
 58132  0073C0  6E40               	movwf	_ticksAdded,c	;volatile
 58133  0073C2  0E00               	movlw	0
 58134  0073C4  6E41               	movwf	_ticksAdded+1,c	;volatile
 58135  0073C6  0E00               	movlw	0
 58136  0073C8  6E42               	movwf	_ticksAdded+2,c	;volatile
 58137  0073CA  0E00               	movlw	0
 58138  0073CC  6E43               	movwf	_ticksAdded+3,c	;volatile
 58139                           
 58140                           ; BSR set to: 1
 58141                           ;sw_timer.c: 101: reloadVal = 0;
 58142  0073CE  0E00               	movlw	0
 58143  0073D0  6E45               	movwf	_reloadVal+1,c	;volatile
 58144  0073D2  0E00               	movlw	0
 58145  0073D4  6E44               	movwf	_reloadVal,c	;volatile
 58146                           
 58147                           ;sw_timer.c: 102: }
 58148  0073D6  D03E               	goto	i2l546
 58149  0073D8                     i2l545:
 58150                           
 58151                           ;sw_timer.c: 103: else
 58152                           ;sw_timer.c: 104: {
 58153                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 58154                           
 58155                           ; BSR set to: 1
 58156  0073D8  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 58157  0073DC  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 58158  0073E0  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 58159  0073E4  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 58160  0073E8  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 58161  0073EA  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 58162  0073EC  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 58163  0073EE  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 58164  0073F0  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 58165  0073F2  0E00               	movlw	0
 58166  0073F4  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 58167  0073F6  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 58168  0073F8  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 58169  0073FA  C044  F011         	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 58170  0073FE  C045  F012         	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 58171  007402  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 58172  007404  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 58173  007406  4A11               	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 58174  007408  2A12               	incf	??i2_TMR_GetDeltaTime+5,f,c
 58175  00740A  0101               	movlb	1	; () banked
 58176  00740C  5124               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 58177  00740E  2611               	addwf	??i2_TMR_GetDeltaTime+4,f,c
 58178  007410  5125               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 58179  007412  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 58180  007414  5011               	movf	??i2_TMR_GetDeltaTime+4,w,c
 58181  007416  240D               	addwf	??i2_TMR_GetDeltaTime,w,c
 58182  007418  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 58183  00741A  5012               	movf	??i2_TMR_GetDeltaTime+5,w,c
 58184  00741C  200E               	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 58185  00741E  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 58186  007420  0E00               	movlw	0
 58187  007422  200F               	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 58188  007424  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 58189  007426  0E00               	movlw	0
 58190  007428  2010               	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 58191  00742A  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 58192  00742C  5040               	movf	_ticksAdded,w,c	;volatile
 58193  00742E  2413               	addwf	??i2_TMR_GetDeltaTime+6,w,c
 58194  007430  6F10               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 58195  007432  5041               	movf	_ticksAdded+1,w,c	;volatile
 58196  007434  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 58197  007436  6F11               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 58198  007438  5042               	movf	_ticksAdded+2,w,c	;volatile
 58199  00743A  2015               	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 58200  00743C  6F12               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 58201  00743E  5043               	movf	_ticksAdded+3,w,c	;volatile
 58202  007440  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 58203  007442  6F13               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 58204                           
 58205                           ;sw_timer.c: 106: ticksAccounted += retVal;
 58206  007444  5110               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 58207  007446  263C               	addwf	_ticksAccounted,f,c	;volatile
 58208  007448  5111               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 58209  00744A  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 58210  00744C  5112               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 58211  00744E  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 58212  007450  5113               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 58213  007452  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 58214  007454                     i2l546:
 58215                           
 58216                           ; BSR set to: 1
 58217                           ;sw_timer.c: 107: }
 58218                           ;sw_timer.c: 109: return retVal;
 58219                           
 58220                           ; BSR set to: 1
 58221  007454  C110  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 58222  007458  C111  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 58223  00745C  C112  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 58224  007460  C113  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 58225  007464  0012               	return	
 58226  007466                     __end_ofi2_TMR_GetDeltaTime:
 58227                           	opt stack 0
 58228                           tosu	equ	0xFFF
 58229                           tosh	equ	0xFFE
 58230                           tosl	equ	0xFFD
 58231                           pclatu	equ	0xFFB
 58232                           pclath	equ	0xFFA
 58233                           tblptru	equ	0xFF8
 58234                           tblptrh	equ	0xFF7
 58235                           tblptrl	equ	0xFF6
 58236                           tablat	equ	0xFF5
 58237                           prodh	equ	0xFF4
 58238                           prodl	equ	0xFF3
 58239                           intcon	equ	0xFF2
 58240                           intcon2	equ	0xFF1
 58241                           intcon3	equ	0xFF0
 58242                           indf0	equ	0xFEF
 58243                           postinc0	equ	0xFEE
 58244                           plusw0	equ	0xFEB
 58245                           fsr0h	equ	0xFEA
 58246                           fsr0l	equ	0xFE9
 58247                           wreg	equ	0xFE8
 58248                           postinc1	equ	0xFE6
 58249                           postdec1	equ	0xFE5
 58250                           plusw1	equ	0xFE3
 58251                           fsr1h	equ	0xFE2
 58252                           fsr1l	equ	0xFE1
 58253                           indf2	equ	0xFDF
 58254                           postinc2	equ	0xFDE
 58255                           postdec2	equ	0xFDD
 58256                           plusw2	equ	0xFDB
 58257                           fsr2h	equ	0xFDA
 58258                           fsr2l	equ	0xFD9
 58259                           status	equ	0xFD8
 58260                           
 58261 ;; *************** function i2_TMR1_ReadTimer *****************
 58262 ;; Defined at:
 58263 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 58264 ;; Parameters:    Size  Location     Type
 58265 ;;		None
 58266 ;; Auto vars:     Size  Location     Type
 58267 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 58268 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 58269 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 58270 ;; Return value:  Size  Location     Type
 58271 ;;                  2    0[COMRAM] unsigned int 
 58272 ;; Registers used:
 58273 ;;		wreg, status,2
 58274 ;; Tracked objects:
 58275 ;;		On entry : 0/0
 58276 ;;		On exit  : 0/0
 58277 ;;		Unchanged: 0/0
 58278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58280 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58282 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58283 ;;Total ram usage:        8 bytes
 58284 ;; Hardware stack levels used:    1
 58285 ;; This function calls:
 58286 ;;		Nothing
 58287 ;; This function is called by:
 58288 ;;		i2_TMR_GetDeltaTime
 58289 ;;		i2_TMR_SwapTimer
 58290 ;; This function uses a non-reentrant model
 58291 ;;
 58292                           
 58293                           	psect	text315
 58294  00C03E                     __ptext315:
 58295                           	opt stack 0
 58296  00C03E                     i2_TMR1_ReadTimer:
 58297                           	opt stack 12
 58298                           
 58299                           ;tmr1.c: 107: uint16_t readVal;
 58300                           ;tmr1.c: 108: uint8_t readValHigh;
 58301                           ;tmr1.c: 109: uint8_t readValLow;
 58302                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 58303                           
 58304                           ; BSR set to: 1
 58305                           ;incstack = 0
 58306  00C03E  82CD               	bsf	4045,1,c	;volatile
 58307                           
 58308                           ;tmr1.c: 113: readValLow = TMR1L;
 58309  00C040  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 58310                           
 58311                           ;tmr1.c: 114: readValHigh = TMR1H;
 58312  00C044  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 58313                           
 58314                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 58315  00C048  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 58316  00C04A  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 58317  00C04C  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 58318  00C04E  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 58319  00C050  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 58320                           
 58321                           ;tmr1.c: 118: return readVal;
 58322  00C054  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 58323  00C058  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 58324  00C05C  0012               	return	
 58325  00C05E                     __end_ofi2_TMR1_ReadTimer:
 58326                           	opt stack 0
 58327                           tosu	equ	0xFFF
 58328                           tosh	equ	0xFFE
 58329                           tosl	equ	0xFFD
 58330                           pclatu	equ	0xFFB
 58331                           pclath	equ	0xFFA
 58332                           tblptru	equ	0xFF8
 58333                           tblptrh	equ	0xFF7
 58334                           tblptrl	equ	0xFF6
 58335                           tablat	equ	0xFF5
 58336                           prodh	equ	0xFF4
 58337                           prodl	equ	0xFF3
 58338                           intcon	equ	0xFF2
 58339                           intcon2	equ	0xFF1
 58340                           intcon3	equ	0xFF0
 58341                           indf0	equ	0xFEF
 58342                           postinc0	equ	0xFEE
 58343                           plusw0	equ	0xFEB
 58344                           fsr0h	equ	0xFEA
 58345                           fsr0l	equ	0xFE9
 58346                           wreg	equ	0xFE8
 58347                           postinc1	equ	0xFE6
 58348                           postdec1	equ	0xFE5
 58349                           plusw1	equ	0xFE3
 58350                           fsr1h	equ	0xFE2
 58351                           fsr1l	equ	0xFE1
 58352                           indf2	equ	0xFDF
 58353                           postinc2	equ	0xFDE
 58354                           postdec2	equ	0xFDD
 58355                           plusw2	equ	0xFDB
 58356                           fsr2h	equ	0xFDA
 58357                           fsr2l	equ	0xFD9
 58358                           status	equ	0xFD8
 58359                           
 58360 ;; *************** function _PIN_MANAGER_IOC *****************
 58361 ;; Defined at:
 58362 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
 58363 ;; Parameters:    Size  Location     Type
 58364 ;;		None
 58365 ;; Auto vars:     Size  Location     Type
 58366 ;;		None
 58367 ;; Return value:  Size  Location     Type
 58368 ;;                  1    wreg      void 
 58369 ;; Registers used:
 58370 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 58371 ;; Tracked objects:
 58372 ;;		On entry : 0/0
 58373 ;;		On exit  : 0/0
 58374 ;;		Unchanged: 0/0
 58375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58380 ;;Total ram usage:        0 bytes
 58381 ;; Hardware stack levels used:    1
 58382 ;; Hardware stack levels required when called:    2
 58383 ;; This function calls:
 58384 ;;		_IOCB4_ISR
 58385 ;; This function is called by:
 58386 ;;		_INTERRUPT_InterruptManager
 58387 ;; This function uses a non-reentrant model
 58388 ;;
 58389                           
 58390                           	psect	text316
 58391  00C60A                     __ptext316:
 58392                           	opt stack 0
 58393  00C60A                     _PIN_MANAGER_IOC:
 58394                           	opt stack 14
 58395                           
 58396                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
 58397                           
 58398                           ;incstack = 0
 58399  00C60A  B862               	btfsc	3938,4,c	;volatile
 58400                           
 58401                           ;pin_manager.c: 114: {
 58402                           ;pin_manager.c: 115: IOCB4_ISR();
 58403  00C60C  EC2F  F060         	call	_IOCB4_ISR	;wreg free
 58404                           
 58405                           ;pin_manager.c: 116: }
 58406                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
 58407  00C610  90F2               	bcf	intcon,0,c	;volatile
 58408  00C612  0012               	return		;funcret
 58409  00C614                     __end_of_PIN_MANAGER_IOC:
 58410                           	opt stack 0
 58411                           tosu	equ	0xFFF
 58412                           tosh	equ	0xFFE
 58413                           tosl	equ	0xFFD
 58414                           pclatu	equ	0xFFB
 58415                           pclath	equ	0xFFA
 58416                           tblptru	equ	0xFF8
 58417                           tblptrh	equ	0xFF7
 58418                           tblptrl	equ	0xFF6
 58419                           tablat	equ	0xFF5
 58420                           prodh	equ	0xFF4
 58421                           prodl	equ	0xFF3
 58422                           intcon	equ	0xFF2
 58423                           intcon2	equ	0xFF1
 58424                           intcon3	equ	0xFF0
 58425                           indf0	equ	0xFEF
 58426                           postinc0	equ	0xFEE
 58427                           plusw0	equ	0xFEB
 58428                           fsr0h	equ	0xFEA
 58429                           fsr0l	equ	0xFE9
 58430                           wreg	equ	0xFE8
 58431                           postinc1	equ	0xFE6
 58432                           postdec1	equ	0xFE5
 58433                           plusw1	equ	0xFE3
 58434                           fsr1h	equ	0xFE2
 58435                           fsr1l	equ	0xFE1
 58436                           indf2	equ	0xFDF
 58437                           postinc2	equ	0xFDE
 58438                           postdec2	equ	0xFDD
 58439                           plusw2	equ	0xFDB
 58440                           fsr2h	equ	0xFDA
 58441                           fsr2l	equ	0xFD9
 58442                           status	equ	0xFD8
 58443                           
 58444 ;; *************** function _IOCB4_ISR *****************
 58445 ;; Defined at:
 58446 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
 58447 ;; Parameters:    Size  Location     Type
 58448 ;;		None
 58449 ;; Auto vars:     Size  Location     Type
 58450 ;;		None
 58451 ;; Return value:  Size  Location     Type
 58452 ;;                  1    wreg      void 
 58453 ;; Registers used:
 58454 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 58455 ;; Tracked objects:
 58456 ;;		On entry : 0/0
 58457 ;;		On exit  : 0/0
 58458 ;;		Unchanged: 0/0
 58459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58464 ;;Total ram usage:        0 bytes
 58465 ;; Hardware stack levels used:    1
 58466 ;; Hardware stack levels required when called:    1
 58467 ;; This function calls:
 58468 ;;		Absolute function
 58469 ;;		_DIO2_ISR_Lora
 58470 ;;		_IOCB4_DefaultInterruptHandler
 58471 ;; This function is called by:
 58472 ;;		_PIN_MANAGER_IOC
 58473 ;; This function uses a non-reentrant model
 58474 ;;
 58475                           
 58476                           	psect	text317
 58477  00C05E                     __ptext317:
 58478                           	opt stack 0
 58479  00C05E                     _IOCB4_ISR:
 58480                           	opt stack 14
 58481                           
 58482                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
 58483                           
 58484                           ;incstack = 0
 58485  00C05E  0103               	movlb	3	; () banked
 58486  00C060  51FA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 58487  00C062  11FB               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 58488  00C064  B4D8               	btfsc	status,2,c
 58489  00C066  0012               	return	
 58490                           
 58491                           ; BSR set to: 3
 58492                           ;pin_manager.c: 130: {
 58493                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
 58494  00C068  D801               	call	i2u2874_48
 58495  00C06A  0012               	return	
 58496  00C06C                     i2u2874_48:
 58497  00C06C  0005               	push	
 58498  00C06E  6EFA               	movwf	pclath,c
 58499  00C070  51FA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 58500  00C072  6EFD               	movwf	tosl,c
 58501  00C074  51FB               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 58502  00C076  6EFE               	movwf	tosh,c
 58503  00C078  6AFF               	clrf	tosu,c
 58504  00C07A  50FA               	movf	pclath,w,c
 58505  00C07C  0012               	return		;indir
 58506  00C07E                     __end_of_IOCB4_ISR:
 58507                           	opt stack 0
 58508                           tosu	equ	0xFFF
 58509                           tosh	equ	0xFFE
 58510                           tosl	equ	0xFFD
 58511                           pclatu	equ	0xFFB
 58512                           pclath	equ	0xFFA
 58513                           tblptru	equ	0xFF8
 58514                           tblptrh	equ	0xFF7
 58515                           tblptrl	equ	0xFF6
 58516                           tablat	equ	0xFF5
 58517                           prodh	equ	0xFF4
 58518                           prodl	equ	0xFF3
 58519                           intcon	equ	0xFF2
 58520                           intcon2	equ	0xFF1
 58521                           intcon3	equ	0xFF0
 58522                           indf0	equ	0xFEF
 58523                           postinc0	equ	0xFEE
 58524                           plusw0	equ	0xFEB
 58525                           fsr0h	equ	0xFEA
 58526                           fsr0l	equ	0xFE9
 58527                           wreg	equ	0xFE8
 58528                           postinc1	equ	0xFE6
 58529                           postdec1	equ	0xFE5
 58530                           plusw1	equ	0xFE3
 58531                           fsr1h	equ	0xFE2
 58532                           fsr1l	equ	0xFE1
 58533                           indf2	equ	0xFDF
 58534                           postinc2	equ	0xFDE
 58535                           postdec2	equ	0xFDD
 58536                           plusw2	equ	0xFDB
 58537                           fsr2h	equ	0xFDA
 58538                           fsr2l	equ	0xFD9
 58539                           status	equ	0xFD8
 58540                           
 58541 ;; *************** function _DIO2_ISR_Lora *****************
 58542 ;; Defined at:
 58543 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 58544 ;; Parameters:    Size  Location     Type
 58545 ;;		None
 58546 ;; Auto vars:     Size  Location     Type
 58547 ;;		None
 58548 ;; Return value:  Size  Location     Type
 58549 ;;                  1    wreg      void 
 58550 ;; Registers used:
 58551 ;;		status,2, status,0
 58552 ;; Tracked objects:
 58553 ;;		On entry : 0/0
 58554 ;;		On exit  : 0/0
 58555 ;;		Unchanged: 0/0
 58556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58561 ;;Total ram usage:        0 bytes
 58562 ;; Hardware stack levels used:    1
 58563 ;; This function calls:
 58564 ;;		Nothing
 58565 ;; This function is called by:
 58566 ;;		_DIO2_ISR_Lora_Init
 58567 ;;		_IOCB4_ISR
 58568 ;; This function uses a non-reentrant model
 58569 ;;
 58570                           
 58571                           	psect	text318
 58572  00C68A                     __ptext318:
 58573                           	opt stack 0
 58574  00C68A                     _DIO2_ISR_Lora:
 58575                           	opt stack 14
 58576                           
 58577                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 58578                           
 58579                           ;incstack = 0
 58580  00C68A  0101               	movlb	1	; () banked
 58581  00C68C  8534               	bsf	_dioStatus& (0+255),2,b	;volatile
 58582                           
 58583                           ; BSR set to: 1
 58584  00C68E  0012               	return		;funcret
 58585  00C690                     __end_of_DIO2_ISR_Lora:
 58586                           	opt stack 0
 58587                           tosu	equ	0xFFF
 58588                           tosh	equ	0xFFE
 58589                           tosl	equ	0xFFD
 58590                           pclatu	equ	0xFFB
 58591                           pclath	equ	0xFFA
 58592                           tblptru	equ	0xFF8
 58593                           tblptrh	equ	0xFF7
 58594                           tblptrl	equ	0xFF6
 58595                           tablat	equ	0xFF5
 58596                           prodh	equ	0xFF4
 58597                           prodl	equ	0xFF3
 58598                           intcon	equ	0xFF2
 58599                           intcon2	equ	0xFF1
 58600                           intcon3	equ	0xFF0
 58601                           indf0	equ	0xFEF
 58602                           postinc0	equ	0xFEE
 58603                           plusw0	equ	0xFEB
 58604                           fsr0h	equ	0xFEA
 58605                           fsr0l	equ	0xFE9
 58606                           wreg	equ	0xFE8
 58607                           postinc1	equ	0xFE6
 58608                           postdec1	equ	0xFE5
 58609                           plusw1	equ	0xFE3
 58610                           fsr1h	equ	0xFE2
 58611                           fsr1l	equ	0xFE1
 58612                           indf2	equ	0xFDF
 58613                           postinc2	equ	0xFDE
 58614                           postdec2	equ	0xFDD
 58615                           plusw2	equ	0xFDB
 58616                           fsr2h	equ	0xFDA
 58617                           fsr2l	equ	0xFD9
 58618                           status	equ	0xFD8
 58619                           
 58620 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 58621 ;; Defined at:
 58622 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 58623 ;; Parameters:    Size  Location     Type
 58624 ;;		None
 58625 ;; Auto vars:     Size  Location     Type
 58626 ;;		None
 58627 ;; Return value:  Size  Location     Type
 58628 ;;                  1    wreg      void 
 58629 ;; Registers used:
 58630 ;;		None
 58631 ;; Tracked objects:
 58632 ;;		On entry : 0/0
 58633 ;;		On exit  : 0/0
 58634 ;;		Unchanged: 0/0
 58635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58640 ;;Total ram usage:        0 bytes
 58641 ;; Hardware stack levels used:    1
 58642 ;; This function calls:
 58643 ;;		Nothing
 58644 ;; This function is called by:
 58645 ;;		_PIN_MANAGER_Initialize
 58646 ;;		_IOCB4_ISR
 58647 ;; This function uses a non-reentrant model
 58648 ;;
 58649                           
 58650                           	psect	text319
 58651  00C6F6                     __ptext319:
 58652                           	opt stack 0
 58653  00C6F6                     _IOCB4_DefaultInterruptHandler:
 58654                           	opt stack 14
 58655                           
 58656                           ; BSR set to: 1
 58657                           ;incstack = 0
 58658  00C6F6  0012               	return		;funcret
 58659  00C6F8                     __end_of_IOCB4_DefaultInterruptHandler:
 58660                           	opt stack 0
 58661                           tosu	equ	0xFFF
 58662                           tosh	equ	0xFFE
 58663                           tosl	equ	0xFFD
 58664                           pclatu	equ	0xFFB
 58665                           pclath	equ	0xFFA
 58666                           tblptru	equ	0xFF8
 58667                           tblptrh	equ	0xFF7
 58668                           tblptrl	equ	0xFF6
 58669                           tablat	equ	0xFF5
 58670                           prodh	equ	0xFF4
 58671                           prodl	equ	0xFF3
 58672                           intcon	equ	0xFF2
 58673                           intcon2	equ	0xFF1
 58674                           intcon3	equ	0xFF0
 58675                           indf0	equ	0xFEF
 58676                           postinc0	equ	0xFEE
 58677                           plusw0	equ	0xFEB
 58678                           fsr0h	equ	0xFEA
 58679                           fsr0l	equ	0xFE9
 58680                           wreg	equ	0xFE8
 58681                           postinc1	equ	0xFE6
 58682                           postdec1	equ	0xFE5
 58683                           plusw1	equ	0xFE3
 58684                           fsr1h	equ	0xFE2
 58685                           fsr1l	equ	0xFE1
 58686                           indf2	equ	0xFDF
 58687                           postinc2	equ	0xFDE
 58688                           postdec2	equ	0xFDD
 58689                           plusw2	equ	0xFDB
 58690                           fsr2h	equ	0xFDA
 58691                           fsr2l	equ	0xFD9
 58692                           status	equ	0xFD8
 58693                           
 58694 ;; *************** function _INT2_ISR *****************
 58695 ;; Defined at:
 58696 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 58697 ;; Parameters:    Size  Location     Type
 58698 ;;		None
 58699 ;; Auto vars:     Size  Location     Type
 58700 ;;		None
 58701 ;; Return value:  Size  Location     Type
 58702 ;;                  1    wreg      void 
 58703 ;; Registers used:
 58704 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 58705 ;; Tracked objects:
 58706 ;;		On entry : 0/0
 58707 ;;		On exit  : 0/0
 58708 ;;		Unchanged: 0/0
 58709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58714 ;;Total ram usage:        0 bytes
 58715 ;; Hardware stack levels used:    1
 58716 ;; Hardware stack levels required when called:    2
 58717 ;; This function calls:
 58718 ;;		_INT2_CallBack
 58719 ;; This function is called by:
 58720 ;;		_INTERRUPT_InterruptManager
 58721 ;; This function uses a non-reentrant model
 58722 ;;
 58723                           
 58724                           	psect	text320
 58725  00C65C                     __ptext320:
 58726                           	opt stack 0
 58727  00C65C                     _INT2_ISR:
 58728                           	opt stack 14
 58729                           
 58730                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 58731                           
 58732                           ;incstack = 0
 58733  00C65C  92F0               	bcf	intcon3,1,c	;volatile
 58734                           
 58735                           ;ext_int.c: 64: INT2_CallBack();
 58736  00C65E  EC3F  F060         	call	_INT2_CallBack	;wreg free
 58737  00C662  0012               	return		;funcret
 58738  00C664                     __end_of_INT2_ISR:
 58739                           	opt stack 0
 58740                           tosu	equ	0xFFF
 58741                           tosh	equ	0xFFE
 58742                           tosl	equ	0xFFD
 58743                           pclatu	equ	0xFFB
 58744                           pclath	equ	0xFFA
 58745                           tblptru	equ	0xFF8
 58746                           tblptrh	equ	0xFF7
 58747                           tblptrl	equ	0xFF6
 58748                           tablat	equ	0xFF5
 58749                           prodh	equ	0xFF4
 58750                           prodl	equ	0xFF3
 58751                           intcon	equ	0xFF2
 58752                           intcon2	equ	0xFF1
 58753                           intcon3	equ	0xFF0
 58754                           indf0	equ	0xFEF
 58755                           postinc0	equ	0xFEE
 58756                           plusw0	equ	0xFEB
 58757                           fsr0h	equ	0xFEA
 58758                           fsr0l	equ	0xFE9
 58759                           wreg	equ	0xFE8
 58760                           postinc1	equ	0xFE6
 58761                           postdec1	equ	0xFE5
 58762                           plusw1	equ	0xFE3
 58763                           fsr1h	equ	0xFE2
 58764                           fsr1l	equ	0xFE1
 58765                           indf2	equ	0xFDF
 58766                           postinc2	equ	0xFDE
 58767                           postdec2	equ	0xFDD
 58768                           plusw2	equ	0xFDB
 58769                           fsr2h	equ	0xFDA
 58770                           fsr2l	equ	0xFD9
 58771                           status	equ	0xFD8
 58772                           
 58773 ;; *************** function _INT2_CallBack *****************
 58774 ;; Defined at:
 58775 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 58776 ;; Parameters:    Size  Location     Type
 58777 ;;		None
 58778 ;; Auto vars:     Size  Location     Type
 58779 ;;		None
 58780 ;; Return value:  Size  Location     Type
 58781 ;;                  1    wreg      void 
 58782 ;; Registers used:
 58783 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 58784 ;; Tracked objects:
 58785 ;;		On entry : 0/0
 58786 ;;		On exit  : 0/0
 58787 ;;		Unchanged: 0/0
 58788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58793 ;;Total ram usage:        0 bytes
 58794 ;; Hardware stack levels used:    1
 58795 ;; Hardware stack levels required when called:    1
 58796 ;; This function calls:
 58797 ;;		Absolute function
 58798 ;;		_DIO1_ISR_Lora
 58799 ;;		_INT2_DefaultInterruptHandler
 58800 ;; This function is called by:
 58801 ;;		_INT2_ISR
 58802 ;; This function uses a non-reentrant model
 58803 ;;
 58804                           
 58805                           	psect	text321
 58806  00C07E                     __ptext321:
 58807                           	opt stack 0
 58808  00C07E                     _INT2_CallBack:
 58809                           	opt stack 14
 58810                           
 58811                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 58812                           
 58813                           ;incstack = 0
 58814  00C07E  0102               	movlb	2	; () banked
 58815  00C080  51FD               	movf	_INT2_InterruptHandler& (0+255),w,b
 58816  00C082  11FE               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 58817  00C084  B4D8               	btfsc	status,2,c
 58818  00C086  0012               	return	
 58819                           
 58820                           ; BSR set to: 2
 58821                           ;ext_int.c: 72: {
 58822                           ;ext_int.c: 73: INT2_InterruptHandler();
 58823  00C088  D801               	call	i2u2872_48
 58824  00C08A  0012               	return	
 58825  00C08C                     i2u2872_48:
 58826  00C08C  0005               	push	
 58827  00C08E  6EFA               	movwf	pclath,c
 58828  00C090  51FD               	movf	_INT2_InterruptHandler& (0+255),w,b
 58829  00C092  6EFD               	movwf	tosl,c
 58830  00C094  51FE               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 58831  00C096  6EFE               	movwf	tosh,c
 58832  00C098  6AFF               	clrf	tosu,c
 58833  00C09A  50FA               	movf	pclath,w,c
 58834  00C09C  0012               	return		;indir
 58835  00C09E                     __end_of_INT2_CallBack:
 58836                           	opt stack 0
 58837                           tosu	equ	0xFFF
 58838                           tosh	equ	0xFFE
 58839                           tosl	equ	0xFFD
 58840                           pclatu	equ	0xFFB
 58841                           pclath	equ	0xFFA
 58842                           tblptru	equ	0xFF8
 58843                           tblptrh	equ	0xFF7
 58844                           tblptrl	equ	0xFF6
 58845                           tablat	equ	0xFF5
 58846                           prodh	equ	0xFF4
 58847                           prodl	equ	0xFF3
 58848                           intcon	equ	0xFF2
 58849                           intcon2	equ	0xFF1
 58850                           intcon3	equ	0xFF0
 58851                           indf0	equ	0xFEF
 58852                           postinc0	equ	0xFEE
 58853                           plusw0	equ	0xFEB
 58854                           fsr0h	equ	0xFEA
 58855                           fsr0l	equ	0xFE9
 58856                           wreg	equ	0xFE8
 58857                           postinc1	equ	0xFE6
 58858                           postdec1	equ	0xFE5
 58859                           plusw1	equ	0xFE3
 58860                           fsr1h	equ	0xFE2
 58861                           fsr1l	equ	0xFE1
 58862                           indf2	equ	0xFDF
 58863                           postinc2	equ	0xFDE
 58864                           postdec2	equ	0xFDD
 58865                           plusw2	equ	0xFDB
 58866                           fsr2h	equ	0xFDA
 58867                           fsr2l	equ	0xFD9
 58868                           status	equ	0xFD8
 58869                           
 58870 ;; *************** function _DIO1_ISR_Lora *****************
 58871 ;; Defined at:
 58872 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 58873 ;; Parameters:    Size  Location     Type
 58874 ;;		None
 58875 ;; Auto vars:     Size  Location     Type
 58876 ;;		None
 58877 ;; Return value:  Size  Location     Type
 58878 ;;                  1    wreg      void 
 58879 ;; Registers used:
 58880 ;;		status,2, status,0
 58881 ;; Tracked objects:
 58882 ;;		On entry : 0/0
 58883 ;;		On exit  : 0/0
 58884 ;;		Unchanged: 0/0
 58885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58890 ;;Total ram usage:        0 bytes
 58891 ;; Hardware stack levels used:    1
 58892 ;; This function calls:
 58893 ;;		Nothing
 58894 ;; This function is called by:
 58895 ;;		_DIO1_ISR_Lora_Init
 58896 ;;		_INT2_CallBack
 58897 ;; This function uses a non-reentrant model
 58898 ;;
 58899                           
 58900                           	psect	text322
 58901  00C690                     __ptext322:
 58902                           	opt stack 0
 58903  00C690                     _DIO1_ISR_Lora:
 58904                           	opt stack 14
 58905                           
 58906                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 58907                           
 58908                           ;incstack = 0
 58909  00C690  0101               	movlb	1	; () banked
 58910  00C692  8334               	bsf	_dioStatus& (0+255),1,b	;volatile
 58911                           
 58912                           ; BSR set to: 1
 58913  00C694  0012               	return		;funcret
 58914  00C696                     __end_of_DIO1_ISR_Lora:
 58915                           	opt stack 0
 58916                           tosu	equ	0xFFF
 58917                           tosh	equ	0xFFE
 58918                           tosl	equ	0xFFD
 58919                           pclatu	equ	0xFFB
 58920                           pclath	equ	0xFFA
 58921                           tblptru	equ	0xFF8
 58922                           tblptrh	equ	0xFF7
 58923                           tblptrl	equ	0xFF6
 58924                           tablat	equ	0xFF5
 58925                           prodh	equ	0xFF4
 58926                           prodl	equ	0xFF3
 58927                           intcon	equ	0xFF2
 58928                           intcon2	equ	0xFF1
 58929                           intcon3	equ	0xFF0
 58930                           indf0	equ	0xFEF
 58931                           postinc0	equ	0xFEE
 58932                           plusw0	equ	0xFEB
 58933                           fsr0h	equ	0xFEA
 58934                           fsr0l	equ	0xFE9
 58935                           wreg	equ	0xFE8
 58936                           postinc1	equ	0xFE6
 58937                           postdec1	equ	0xFE5
 58938                           plusw1	equ	0xFE3
 58939                           fsr1h	equ	0xFE2
 58940                           fsr1l	equ	0xFE1
 58941                           indf2	equ	0xFDF
 58942                           postinc2	equ	0xFDE
 58943                           postdec2	equ	0xFDD
 58944                           plusw2	equ	0xFDB
 58945                           fsr2h	equ	0xFDA
 58946                           fsr2l	equ	0xFD9
 58947                           status	equ	0xFD8
 58948                           
 58949 ;; *************** function _INT2_DefaultInterruptHandler *****************
 58950 ;; Defined at:
 58951 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 58952 ;; Parameters:    Size  Location     Type
 58953 ;;		None
 58954 ;; Auto vars:     Size  Location     Type
 58955 ;;		None
 58956 ;; Return value:  Size  Location     Type
 58957 ;;                  1    wreg      void 
 58958 ;; Registers used:
 58959 ;;		None
 58960 ;; Tracked objects:
 58961 ;;		On entry : 0/0
 58962 ;;		On exit  : 0/0
 58963 ;;		Unchanged: 0/0
 58964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58969 ;;Total ram usage:        0 bytes
 58970 ;; Hardware stack levels used:    1
 58971 ;; This function calls:
 58972 ;;		Nothing
 58973 ;; This function is called by:
 58974 ;;		_EXT_INT_Initialize
 58975 ;;		_INT2_CallBack
 58976 ;; This function uses a non-reentrant model
 58977 ;;
 58978                           
 58979                           	psect	text323
 58980  00C6F8                     __ptext323:
 58981                           	opt stack 0
 58982  00C6F8                     _INT2_DefaultInterruptHandler:
 58983                           	opt stack 14
 58984                           
 58985                           ; BSR set to: 1
 58986                           ;incstack = 0
 58987  00C6F8  0012               	return		;funcret
 58988  00C6FA                     __end_of_INT2_DefaultInterruptHandler:
 58989                           	opt stack 0
 58990                           tosu	equ	0xFFF
 58991                           tosh	equ	0xFFE
 58992                           tosl	equ	0xFFD
 58993                           pclatu	equ	0xFFB
 58994                           pclath	equ	0xFFA
 58995                           tblptru	equ	0xFF8
 58996                           tblptrh	equ	0xFF7
 58997                           tblptrl	equ	0xFF6
 58998                           tablat	equ	0xFF5
 58999                           prodh	equ	0xFF4
 59000                           prodl	equ	0xFF3
 59001                           intcon	equ	0xFF2
 59002                           intcon2	equ	0xFF1
 59003                           intcon3	equ	0xFF0
 59004                           indf0	equ	0xFEF
 59005                           postinc0	equ	0xFEE
 59006                           plusw0	equ	0xFEB
 59007                           fsr0h	equ	0xFEA
 59008                           fsr0l	equ	0xFE9
 59009                           wreg	equ	0xFE8
 59010                           postinc1	equ	0xFE6
 59011                           postdec1	equ	0xFE5
 59012                           plusw1	equ	0xFE3
 59013                           fsr1h	equ	0xFE2
 59014                           fsr1l	equ	0xFE1
 59015                           indf2	equ	0xFDF
 59016                           postinc2	equ	0xFDE
 59017                           postdec2	equ	0xFDD
 59018                           plusw2	equ	0xFDB
 59019                           fsr2h	equ	0xFDA
 59020                           fsr2l	equ	0xFD9
 59021                           status	equ	0xFD8
 59022                           
 59023 ;; *************** function _INT1_ISR *****************
 59024 ;; Defined at:
 59025 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 59026 ;; Parameters:    Size  Location     Type
 59027 ;;		None
 59028 ;; Auto vars:     Size  Location     Type
 59029 ;;		None
 59030 ;; Return value:  Size  Location     Type
 59031 ;;                  1    wreg      void 
 59032 ;; Registers used:
 59033 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 59034 ;; Tracked objects:
 59035 ;;		On entry : 0/0
 59036 ;;		On exit  : 0/0
 59037 ;;		Unchanged: 0/0
 59038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 59039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59043 ;;Total ram usage:        0 bytes
 59044 ;; Hardware stack levels used:    1
 59045 ;; Hardware stack levels required when called:    2
 59046 ;; This function calls:
 59047 ;;		_INT1_CallBack
 59048 ;; This function is called by:
 59049 ;;		_INTERRUPT_InterruptManager
 59050 ;; This function uses a non-reentrant model
 59051 ;;
 59052                           
 59053                           	psect	text324
 59054  00C664                     __ptext324:
 59055                           	opt stack 0
 59056  00C664                     _INT1_ISR:
 59057                           	opt stack 14
 59058                           
 59059                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 59060                           
 59061                           ;incstack = 0
 59062  00C664  90F0               	bcf	intcon3,0,c	;volatile
 59063                           
 59064                           ;ext_int.c: 38: INT1_CallBack();
 59065  00C666  EC4F  F060         	call	_INT1_CallBack	;wreg free
 59066  00C66A  0012               	return		;funcret
 59067  00C66C                     __end_of_INT1_ISR:
 59068                           	opt stack 0
 59069                           tosu	equ	0xFFF
 59070                           tosh	equ	0xFFE
 59071                           tosl	equ	0xFFD
 59072                           pclatu	equ	0xFFB
 59073                           pclath	equ	0xFFA
 59074                           tblptru	equ	0xFF8
 59075                           tblptrh	equ	0xFF7
 59076                           tblptrl	equ	0xFF6
 59077                           tablat	equ	0xFF5
 59078                           prodh	equ	0xFF4
 59079                           prodl	equ	0xFF3
 59080                           intcon	equ	0xFF2
 59081                           intcon2	equ	0xFF1
 59082                           intcon3	equ	0xFF0
 59083                           indf0	equ	0xFEF
 59084                           postinc0	equ	0xFEE
 59085                           plusw0	equ	0xFEB
 59086                           fsr0h	equ	0xFEA
 59087                           fsr0l	equ	0xFE9
 59088                           wreg	equ	0xFE8
 59089                           postinc1	equ	0xFE6
 59090                           postdec1	equ	0xFE5
 59091                           plusw1	equ	0xFE3
 59092                           fsr1h	equ	0xFE2
 59093                           fsr1l	equ	0xFE1
 59094                           indf2	equ	0xFDF
 59095                           postinc2	equ	0xFDE
 59096                           postdec2	equ	0xFDD
 59097                           plusw2	equ	0xFDB
 59098                           fsr2h	equ	0xFDA
 59099                           fsr2l	equ	0xFD9
 59100                           status	equ	0xFD8
 59101                           
 59102 ;; *************** function _INT1_CallBack *****************
 59103 ;; Defined at:
 59104 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 59105 ;; Parameters:    Size  Location     Type
 59106 ;;		None
 59107 ;; Auto vars:     Size  Location     Type
 59108 ;;		None
 59109 ;; Return value:  Size  Location     Type
 59110 ;;                  1    wreg      void 
 59111 ;; Registers used:
 59112 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 59113 ;; Tracked objects:
 59114 ;;		On entry : 0/0
 59115 ;;		On exit  : 0/0
 59116 ;;		Unchanged: 0/0
 59117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 59118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59122 ;;Total ram usage:        0 bytes
 59123 ;; Hardware stack levels used:    1
 59124 ;; Hardware stack levels required when called:    1
 59125 ;; This function calls:
 59126 ;;		Absolute function
 59127 ;;		_DIO0_ISR_Lora
 59128 ;;		_INT1_DefaultInterruptHandler
 59129 ;; This function is called by:
 59130 ;;		_INT1_ISR
 59131 ;; This function uses a non-reentrant model
 59132 ;;
 59133                           
 59134                           	psect	text325
 59135  00C09E                     __ptext325:
 59136                           	opt stack 0
 59137  00C09E                     _INT1_CallBack:
 59138                           	opt stack 14
 59139                           
 59140                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 59141                           
 59142                           ;incstack = 0
 59143  00C09E  0101               	movlb	1	; () banked
 59144  00C0A0  51F7               	movf	_INT1_InterruptHandler& (0+255),w,b
 59145  00C0A2  11F8               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 59146  00C0A4  B4D8               	btfsc	status,2,c
 59147  00C0A6  0012               	return	
 59148                           
 59149                           ; BSR set to: 1
 59150                           ;ext_int.c: 46: {
 59151                           ;ext_int.c: 47: INT1_InterruptHandler();
 59152  00C0A8  D801               	call	i2u2870_48
 59153  00C0AA  0012               	return	
 59154  00C0AC                     i2u2870_48:
 59155  00C0AC  0005               	push	
 59156  00C0AE  6EFA               	movwf	pclath,c
 59157  00C0B0  51F7               	movf	_INT1_InterruptHandler& (0+255),w,b
 59158  00C0B2  6EFD               	movwf	tosl,c
 59159  00C0B4  51F8               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 59160  00C0B6  6EFE               	movwf	tosh,c
 59161  00C0B8  6AFF               	clrf	tosu,c
 59162  00C0BA  50FA               	movf	pclath,w,c
 59163  00C0BC  0012               	return		;indir
 59164  00C0BE                     __end_of_INT1_CallBack:
 59165                           	opt stack 0
 59166                           tosu	equ	0xFFF
 59167                           tosh	equ	0xFFE
 59168                           tosl	equ	0xFFD
 59169                           pclatu	equ	0xFFB
 59170                           pclath	equ	0xFFA
 59171                           tblptru	equ	0xFF8
 59172                           tblptrh	equ	0xFF7
 59173                           tblptrl	equ	0xFF6
 59174                           tablat	equ	0xFF5
 59175                           prodh	equ	0xFF4
 59176                           prodl	equ	0xFF3
 59177                           intcon	equ	0xFF2
 59178                           intcon2	equ	0xFF1
 59179                           intcon3	equ	0xFF0
 59180                           indf0	equ	0xFEF
 59181                           postinc0	equ	0xFEE
 59182                           plusw0	equ	0xFEB
 59183                           fsr0h	equ	0xFEA
 59184                           fsr0l	equ	0xFE9
 59185                           wreg	equ	0xFE8
 59186                           postinc1	equ	0xFE6
 59187                           postdec1	equ	0xFE5
 59188                           plusw1	equ	0xFE3
 59189                           fsr1h	equ	0xFE2
 59190                           fsr1l	equ	0xFE1
 59191                           indf2	equ	0xFDF
 59192                           postinc2	equ	0xFDE
 59193                           postdec2	equ	0xFDD
 59194                           plusw2	equ	0xFDB
 59195                           fsr2h	equ	0xFDA
 59196                           fsr2l	equ	0xFD9
 59197                           status	equ	0xFD8
 59198                           
 59199 ;; *************** function _DIO0_ISR_Lora *****************
 59200 ;; Defined at:
 59201 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 59202 ;; Parameters:    Size  Location     Type
 59203 ;;		None
 59204 ;; Auto vars:     Size  Location     Type
 59205 ;;		None
 59206 ;; Return value:  Size  Location     Type
 59207 ;;                  1    wreg      void 
 59208 ;; Registers used:
 59209 ;;		status,2, status,0
 59210 ;; Tracked objects:
 59211 ;;		On entry : 0/0
 59212 ;;		On exit  : 0/0
 59213 ;;		Unchanged: 0/0
 59214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 59215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59219 ;;Total ram usage:        0 bytes
 59220 ;; Hardware stack levels used:    1
 59221 ;; This function calls:
 59222 ;;		Nothing
 59223 ;; This function is called by:
 59224 ;;		_DIO0_ISR_Lora_Init
 59225 ;;		_INT1_CallBack
 59226 ;; This function uses a non-reentrant model
 59227 ;;
 59228                           
 59229                           	psect	text326
 59230  00C696                     __ptext326:
 59231                           	opt stack 0
 59232  00C696                     _DIO0_ISR_Lora:
 59233                           	opt stack 14
 59234                           
 59235                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 59236                           
 59237                           ;incstack = 0
 59238  00C696  0101               	movlb	1	; () banked
 59239  00C698  8134               	bsf	_dioStatus& (0+255),0,b	;volatile
 59240                           
 59241                           ; BSR set to: 1
 59242  00C69A  0012               	return		;funcret
 59243  00C69C                     __end_of_DIO0_ISR_Lora:
 59244                           	opt stack 0
 59245                           tosu	equ	0xFFF
 59246                           tosh	equ	0xFFE
 59247                           tosl	equ	0xFFD
 59248                           pclatu	equ	0xFFB
 59249                           pclath	equ	0xFFA
 59250                           tblptru	equ	0xFF8
 59251                           tblptrh	equ	0xFF7
 59252                           tblptrl	equ	0xFF6
 59253                           tablat	equ	0xFF5
 59254                           prodh	equ	0xFF4
 59255                           prodl	equ	0xFF3
 59256                           intcon	equ	0xFF2
 59257                           intcon2	equ	0xFF1
 59258                           intcon3	equ	0xFF0
 59259                           indf0	equ	0xFEF
 59260                           postinc0	equ	0xFEE
 59261                           plusw0	equ	0xFEB
 59262                           fsr0h	equ	0xFEA
 59263                           fsr0l	equ	0xFE9
 59264                           wreg	equ	0xFE8
 59265                           postinc1	equ	0xFE6
 59266                           postdec1	equ	0xFE5
 59267                           plusw1	equ	0xFE3
 59268                           fsr1h	equ	0xFE2
 59269                           fsr1l	equ	0xFE1
 59270                           indf2	equ	0xFDF
 59271                           postinc2	equ	0xFDE
 59272                           postdec2	equ	0xFDD
 59273                           plusw2	equ	0xFDB
 59274                           fsr2h	equ	0xFDA
 59275                           fsr2l	equ	0xFD9
 59276                           status	equ	0xFD8
 59277                           
 59278 ;; *************** function _INT1_DefaultInterruptHandler *****************
 59279 ;; Defined at:
 59280 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 59281 ;; Parameters:    Size  Location     Type
 59282 ;;		None
 59283 ;; Auto vars:     Size  Location     Type
 59284 ;;		None
 59285 ;; Return value:  Size  Location     Type
 59286 ;;                  1    wreg      void 
 59287 ;; Registers used:
 59288 ;;		None
 59289 ;; Tracked objects:
 59290 ;;		On entry : 0/0
 59291 ;;		On exit  : 0/0
 59292 ;;		Unchanged: 0/0
 59293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 59294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59298 ;;Total ram usage:        0 bytes
 59299 ;; Hardware stack levels used:    1
 59300 ;; This function calls:
 59301 ;;		Nothing
 59302 ;; This function is called by:
 59303 ;;		_EXT_INT_Initialize
 59304 ;;		_INT1_CallBack
 59305 ;; This function uses a non-reentrant model
 59306 ;;
 59307                           
 59308                           	psect	text327
 59309  00C6FA                     __ptext327:
 59310                           	opt stack 0
 59311  00C6FA                     _INT1_DefaultInterruptHandler:
 59312                           	opt stack 14
 59313                           
 59314                           ; BSR set to: 1
 59315                           ;incstack = 0
 59316  00C6FA  0012               	return		;funcret
 59317  00C6FC                     __end_of_INT1_DefaultInterruptHandler:
 59318                           	opt stack 0
 59319                           tosu	equ	0xFFF
 59320                           tosh	equ	0xFFE
 59321                           tosl	equ	0xFFD
 59322                           pclatu	equ	0xFFB
 59323                           pclath	equ	0xFFA
 59324                           tblptru	equ	0xFF8
 59325                           tblptrh	equ	0xFF7
 59326                           tblptrl	equ	0xFF6
 59327                           tablat	equ	0xFF5
 59328                           prodh	equ	0xFF4
 59329                           prodl	equ	0xFF3
 59330                           intcon	equ	0xFF2
 59331                           intcon2	equ	0xFF1
 59332                           intcon3	equ	0xFF0
 59333                           indf0	equ	0xFEF
 59334                           postinc0	equ	0xFEE
 59335                           plusw0	equ	0xFEB
 59336                           fsr0h	equ	0xFEA
 59337                           fsr0l	equ	0xFE9
 59338                           wreg	equ	0xFE8
 59339                           postinc1	equ	0xFE6
 59340                           postdec1	equ	0xFE5
 59341                           plusw1	equ	0xFE3
 59342                           fsr1h	equ	0xFE2
 59343                           fsr1l	equ	0xFE1
 59344                           indf2	equ	0xFDF
 59345                           postinc2	equ	0xFDE
 59346                           postdec2	equ	0xFDD
 59347                           plusw2	equ	0xFDB
 59348                           fsr2h	equ	0xFDA
 59349                           fsr2l	equ	0xFD9
 59350                           status	equ	0xFD8
 59351                           tosu	equ	0xFFF
 59352                           tosh	equ	0xFFE
 59353                           tosl	equ	0xFFD
 59354                           pclatu	equ	0xFFB
 59355                           pclath	equ	0xFFA
 59356                           tblptru	equ	0xFF8
 59357                           tblptrh	equ	0xFF7
 59358                           tblptrl	equ	0xFF6
 59359                           tablat	equ	0xFF5
 59360                           prodh	equ	0xFF4
 59361                           prodl	equ	0xFF3
 59362                           intcon	equ	0xFF2
 59363                           intcon2	equ	0xFF1
 59364                           intcon3	equ	0xFF0
 59365                           indf0	equ	0xFEF
 59366                           postinc0	equ	0xFEE
 59367                           plusw0	equ	0xFEB
 59368                           fsr0h	equ	0xFEA
 59369                           fsr0l	equ	0xFE9
 59370                           wreg	equ	0xFE8
 59371                           postinc1	equ	0xFE6
 59372                           postdec1	equ	0xFE5
 59373                           plusw1	equ	0xFE3
 59374                           fsr1h	equ	0xFE2
 59375                           fsr1l	equ	0xFE1
 59376                           indf2	equ	0xFDF
 59377                           postinc2	equ	0xFDE
 59378                           postdec2	equ	0xFDD
 59379                           plusw2	equ	0xFDB
 59380                           fsr2h	equ	0xFDA
 59381                           fsr2l	equ	0xFD9
 59382                           status	equ	0xFD8
 59383                           
 59384                           	psect	text328
 59385  000000                     __ptext328:
 59386                           	opt stack 0
 59387                           tosu	equ	0xFFF
 59388                           tosh	equ	0xFFE
 59389                           tosl	equ	0xFFD
 59390                           pclatu	equ	0xFFB
 59391                           pclath	equ	0xFFA
 59392                           tblptru	equ	0xFF8
 59393                           tblptrh	equ	0xFF7
 59394                           tblptrl	equ	0xFF6
 59395                           tablat	equ	0xFF5
 59396                           prodh	equ	0xFF4
 59397                           prodl	equ	0xFF3
 59398                           intcon	equ	0xFF2
 59399                           intcon2	equ	0xFF1
 59400                           intcon3	equ	0xFF0
 59401                           indf0	equ	0xFEF
 59402                           postinc0	equ	0xFEE
 59403                           plusw0	equ	0xFEB
 59404                           fsr0h	equ	0xFEA
 59405                           fsr0l	equ	0xFE9
 59406                           wreg	equ	0xFE8
 59407                           postinc1	equ	0xFE6
 59408                           postdec1	equ	0xFE5
 59409                           plusw1	equ	0xFE3
 59410                           fsr1h	equ	0xFE2
 59411                           fsr1l	equ	0xFE1
 59412                           indf2	equ	0xFDF
 59413                           postinc2	equ	0xFDE
 59414                           postdec2	equ	0xFDD
 59415                           plusw2	equ	0xFDB
 59416                           fsr2h	equ	0xFDA
 59417                           fsr2l	equ	0xFD9
 59418                           status	equ	0xFD8
 59419                           
 59420                           	psect	rparam
 59421  0000                     tosu	equ	0xFFF
 59422                           tosh	equ	0xFFE
 59423                           tosl	equ	0xFFD
 59424                           pclatu	equ	0xFFB
 59425                           pclath	equ	0xFFA
 59426                           tblptru	equ	0xFF8
 59427                           tblptrh	equ	0xFF7
 59428                           tblptrl	equ	0xFF6
 59429                           tablat	equ	0xFF5
 59430                           prodh	equ	0xFF4
 59431                           prodl	equ	0xFF3
 59432                           intcon	equ	0xFF2
 59433                           intcon2	equ	0xFF1
 59434                           intcon3	equ	0xFF0
 59435                           indf0	equ	0xFEF
 59436                           postinc0	equ	0xFEE
 59437                           plusw0	equ	0xFEB
 59438                           fsr0h	equ	0xFEA
 59439                           fsr0l	equ	0xFE9
 59440                           wreg	equ	0xFE8
 59441                           postinc1	equ	0xFE6
 59442                           postdec1	equ	0xFE5
 59443                           plusw1	equ	0xFE3
 59444                           fsr1h	equ	0xFE2
 59445                           fsr1l	equ	0xFE1
 59446                           indf2	equ	0xFDF
 59447                           postinc2	equ	0xFDE
 59448                           postdec2	equ	0xFDD
 59449                           plusw2	equ	0xFDB
 59450                           fsr2h	equ	0xFDA
 59451                           fsr2l	equ	0xFD9
 59452                           status	equ	0xFD8
 59453                           
 59454                           	psect	temp
 59455  000048                     btemp:
 59456                           	opt stack 0
 59457  000048                     	ds	12
 59458  0000                     wtemp0	set	btemp
 59459  0000                     wtemp1	set	btemp+2
 59460  0000                     wtemp2	set	btemp+4
 59461  0000                     wtemp3	set	btemp+6
 59462  0000                     wtemp4	set	btemp+8
 59463  0000                     wtemp5	set	btemp+10
 59464  0000                     wtemp6	set	btemp+1
 59465  0000                     ttemp0	set	btemp
 59466  0000                     ttemp1	set	btemp+3
 59467  0000                     ttemp2	set	btemp+6
 59468  0000                     ttemp3	set	btemp+9
 59469  0000                     ltemp0	set	btemp
 59470  0000                     ltemp1	set	btemp+4
 59471  0000                     ltemp2	set	btemp+8
 59472                           tosu	equ	0xFFF
 59473                           tosh	equ	0xFFE
 59474                           tosl	equ	0xFFD
 59475                           pclatu	equ	0xFFB
 59476                           pclath	equ	0xFFA
 59477                           tblptru	equ	0xFF8
 59478                           tblptrh	equ	0xFF7
 59479                           tblptrl	equ	0xFF6
 59480                           tablat	equ	0xFF5
 59481                           prodh	equ	0xFF4
 59482                           prodl	equ	0xFF3
 59483                           intcon	equ	0xFF2
 59484                           intcon2	equ	0xFF1
 59485                           intcon3	equ	0xFF0
 59486                           indf0	equ	0xFEF
 59487                           postinc0	equ	0xFEE
 59488                           plusw0	equ	0xFEB
 59489                           fsr0h	equ	0xFEA
 59490                           fsr0l	equ	0xFE9
 59491                           wreg	equ	0xFE8
 59492                           postinc1	equ	0xFE6
 59493                           postdec1	equ	0xFE5
 59494                           plusw1	equ	0xFE3
 59495                           fsr1h	equ	0xFE2
 59496                           fsr1l	equ	0xFE1
 59497                           indf2	equ	0xFDF
 59498                           postinc2	equ	0xFDE
 59499                           postdec2	equ	0xFDD
 59500                           plusw2	equ	0xFDB
 59501                           fsr2h	equ	0xFDA
 59502                           fsr2l	equ	0xFD9
 59503                           status	equ	0xFD8


Data Sizes:
    Strings     216
    Constant    558
    Data        92
    BSS         1392
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      75
    BANK0           160    159     160
    BANK1           256    105     253
    BANK2           256      0     255
    BANK3           256      0     252
    BANK4           256      0     256
    BANK5           256      0      32
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    do_I2C_TX$7058$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$7064$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$7070$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_ISR$7076	const PTR FTN()enum E7338 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$7075	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$7070	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    do_I2C_RX$7069	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$7064	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    do_I2C_TX$7063	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX$7058	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1636$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S65$11$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK3[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK3[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK3[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK3[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), sp__ADC_GetConversion.cfList(UNKNOWN), data(BANK3[8]), 
		 -> appSessionKey(BANK5[16]), nwkSessionKey(BANK5[16]), applicationKey(BANK4[16]), deviceEUI(BANK3[8]), 
		 -> applicationEUI(BANK3[8]), sp__ADC_GetConversion(UNKNOWN), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), 
		 -> PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK3[16]), LORAWAN_RxDone@hdr(BANK0[2]), 
		 -> loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), sp__ADC_GetConversion.cfList(UNKNOWN), data(BANK3[8]), 
		 -> appSessionKey(BANK5[16]), nwkSessionKey(BANK5[16]), applicationKey(BANK4[16]), deviceEUI(BANK3[8]), 
		 -> applicationEUI(BANK3[8]), sp__ADC_GetConversion(UNKNOWN), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), 
		 -> PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK3[16]), LORAWAN_RxDone@hdr(BANK0[2]), 
		 -> loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 94
		 -> STR_6(CODE[13]), STR_5(CODE[14]), STR_4(CODE[13]), STR_3(CODE[94]), 
		 -> STR_2(CODE[12]), STR_1(CODE[70]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    i2c1_driver_setI2cISR@handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    BME280_readBlock@read_buff	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), Absolute function(), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> data(BANK3[8]), sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 
		 -> NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> sp__ADC_GetConversion(UNKNOWN), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> sp__ADC_GetConversion(UNKNOWN), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> data(BANK3[8]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationKey@applicationKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> applicationKey(BANK4[16]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSessionKey(BANK5[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSessionKey(BANK5[16]), 

    LORAWAN_SetApplicationEui@applicationEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> applicationEUI(BANK3[8]), 

    LORAWAN_SetDeviceEui@deviceEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> deviceEUI(BANK3[8]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 8
		 -> data(BANK3[8]), NULL(NULL[0]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), aesBuffer(BANK3[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK0[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1636$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1636$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S967$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S967$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), aesBuffer(BANK3[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), aesBuffer(BANK3[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S748$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK3[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK3[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK3[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 
		 -> NULL(NULL[0]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    d.data	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    S362$data	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E7338[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), 
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S65$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S65$callbackTable	PTR FTN(PTR void ,)enum E7171[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E7171[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S65$data_ptr	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), 
		 -> NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _main->_printf
    _scale->___ftmul
    _putch->_EUSART1_Write
    _fround->___ftmul
    ___ftmul->___wmul
    ___fttol->___ftmul
    ___ftsub->___lltoft
    ___ftadd->_fround
    ___lwtoft->___ftpack
    _Weather_initializeClick->_BME280_readFactoryCalibrationParams
    _BME280_reset->_BME280_writeByte
    _BME280_readFactoryCalibrationParams->_BME280_readBlock
    _BME280_initializeSensor->_BME280_writeByte
    _BME280_startForcedSensing->_BME280_writeByte
    _BME280_writeByte->_i2c_write1ByteRegister
    _BME280_readMeasurements->_BME280_readBlock
    _BME280_readBlock->_i2c_readDataBlock
    _BME280_getStatus->_BME280_readByte
    _BME280_readByte->_i2c_read1ByteRegister
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _Weather_getTemperatureDegC->_BME280_getTemperature
    _BME280_getTemperature->___ftdiv
    ___altoft->_BME280_compensateTemperature
    _BME280_compensateTemperature->___lmul
    _Weather_getPressureKPa->_BME280_getPressure
    _BME280_getPressure->___ftdiv
    _BME280_compensatePressure->___lmul
    _Weather_getHumidityRH->_BME280_getHumidity
    _BME280_getHumidity->___ftdiv
    ___lltoft->_BME280_compensateHumidity
    ___ftdiv->___lltoft
    _BME280_compensateHumidity->___lmul
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetDeviceEui->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_SetApplicationKey->_memcpy
    _LORAWAN_SetApplicationEui->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    ___wmul->___awdiv
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    ___awdiv->___awmod
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _printf->_Weather_getHumidityRH
    _printf->_Weather_getPressureKPa
    _printf->_Weather_getTemperatureDegC
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 8324913
                  _ADC_GetConversion
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
                       _LORAWAN_Send
          _LORAWAN_SetApplicationEui
          _LORAWAN_SetApplicationKey
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
               _LORAWAN_SetDeviceEui
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
            _TMR5_HasOverflowOccured
              _Weather_getHumidityRH
             _Weather_getPressureKPa
         _Weather_getTemperatureDegC
                _Weather_readSensors
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              50    36     14   83380
                                            153 BANK0      6     6      0
                                              3 BANK1     43    29     14
              _Weather_getHumidityRH (ARG)
             _Weather_getPressureKPa (ARG)
         _Weather_getTemperatureDegC (ARG)
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3   19565
                                             35 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3   19286
                                             35 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7011
                                             20 BANK0     15     9      6
                  _ADC_GetConversion (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     481
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     624
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1231
                                             35 BANK0     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4718
                                            132 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4321
                                             45 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     670
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3173
                                              8 BANK0      3     0      3
                  _ADC_GetConversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _Weather_readSensors                                  0     0      0  789277
                 _BME280_isMeasuring
            _BME280_readMeasurements
          _BME280_startForcedSensing
            _Weather_initializeClick
 ---------------------------------------------------------------------------------
 (2) _Weather_initializeClick                              0     0      0  451959
            _BME280_initializeSensor
_BME280_readFactoryCalibrationParams
                       _BME280_reset
        _BME280_setFilterCoefficient
     _BME280_setOversamplingHumidity
     _BME280_setOversamplingPressure
  _BME280_setOversamplingTemperature
               _BME280_setSensorMode
              _BME280_setStandbyTime
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     111
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _BME280_setStandbyTime                                2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BME280_setSensorMode                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _BME280_setOversamplingTemperature                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BME280_setOversamplingPressure                       2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BME280_setOversamplingHumidity                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _BME280_setFilterCoefficient                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BME280_reset                                         0     0      0  112303
                   _BME280_writeByte
 ---------------------------------------------------------------------------------
 (3) _BME280_readFactoryCalibrationParams                 27    27      0  227110
                                             31 BANK0     27    27      0
                   _BME280_readBlock
                    _BME280_readByte
 ---------------------------------------------------------------------------------
 (3) _BME280_initializeSensor                              0     0      0  112303
                   _BME280_writeByte
 ---------------------------------------------------------------------------------
 (2) _BME280_startForcedSensing                            0     0      0  112303
                   _BME280_writeByte
 ---------------------------------------------------------------------------------
 (4) _BME280_writeByte                                     2     1      1  112303
                                             20 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (5) _i2c_write1ByteRegister                               3     1      2  111197
                                             17 BANK0      3     1      2
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _BME280_readMeasurements                             21    21      0  113569
                                             31 BANK0     21    21      0
                   _BME280_readBlock
 ---------------------------------------------------------------------------------
 (4) _BME280_readBlock                                     4     1      3  112789
                                             27 BANK0      4     1      3
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   10     5      5  111613
                                             17 BANK0     10     5      5
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _BME280_isMeasuring                                   0     0      0  111446
                   _BME280_getStatus
 ---------------------------------------------------------------------------------
 (3) _BME280_getStatus                                     0     0      0  111446
                    _BME280_readByte
 ---------------------------------------------------------------------------------
 (4) _BME280_readByte                                      1     1      0  111446
                                             23 BANK0      1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (5) _i2c_read1ByteRegister                                6     5      1  111376
                                             17 BANK0      6     5      1
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _i2c_setAddressNACKCallback                           4     0      4    2156
                                              5 BANK0      4     0      4
                        _setCallBack
 ---------------------------------------------------------------------------------
 (6) _i2c_open                                             2     2      0     392
                                              2 BANK0      2     2      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_setI2cISR                                2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_setBusCollisionISR                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_masterWrite                                      0     0      0  102937
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (7) _i2c_masterOperation                                  2     2      0  102937
                                             15 BANK0      2     2      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (8) _mssp1_IRQisEnabled                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _i2c_poller                                           0     0      0  102767
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (9) _mssp1_waitForEvent                                   2     0      2      89
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (9) _i2c_ISR                                              2     2      0  102678
                                             13 BANK0      2     2      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (10) _do_I2C_TX_EMPTY                                     0     0      0   25628
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_TX                                           2     2      0   25750
                                             11 BANK0      2     2      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_isNACK                                  1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_ADR_WRITE                               0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_ADR_READ                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_TXData                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RX                                           0     0      0   25628
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (12) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RESET                                        0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RCEN                                         0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_ADDRESS_NACK                              0     0      0   25628
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    5070
                                              9 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    5070
                                              9 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _returnStop                                          2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (11) _returnReset                                         2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    5348
                                              9 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    5070
                                              9 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    5070
                                              9 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _i2c_setDataCompleteCallback                          4     0      4    2868
                                              5 BANK0      4     0      4
                        _setCallBack
 ---------------------------------------------------------------------------------
 (7) _setCallBack                                          5     1      4    1044
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _i2c_setBuffer                                        4     0      4    2180
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (11) _i2c_restartWrite                                    2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (12) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (12) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_ACK                                       0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_close                                            1     1      0      24
                                              0 BANK0      1     1      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Weather_getTemperatureDegC                           3     0      3   17805
                                              0 BANK1      3     0      3
              _BME280_getTemperature
 ---------------------------------------------------------------------------------
 (2) _BME280_getTemperature                                6     3      3   17805
                                            147 BANK0      6     3      3
       _BME280_compensateTemperature
                           ___altoft
                            ___ftdiv
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3200
                                            109 BANK0     10     6      4
       _BME280_compensateTemperature (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _BME280_compensateTemperature                        39    35      4   10632
                                             70 BANK0     39    35      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _Weather_getPressureKPa                               3     0      3   25318
                                              0 BANK1      3     0      3
                 _BME280_getPressure
 ---------------------------------------------------------------------------------
 (2) _BME280_getPressure                                   6     3      3   25318
                                            147 BANK0      6     3      3
          _BME280_compensatePressure
                            ___ftdiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) _BME280_compensatePressure                           33    29      4   18036
                                             70 BANK0     33    29      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _Weather_getHumidityRH                                3     0      3   18310
                                              0 BANK1      3     0      3
                 _BME280_getHumidity
 ---------------------------------------------------------------------------------
 (2) _BME280_getHumidity                                   6     3      3   18310
                                            147 BANK0      6     3      3
          _BME280_compensateHumidity
                            ___ftdiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3309
                                            123 BANK0      9     5      4
          _BME280_compensateHumidity (ARG)
          _BME280_compensatePressure (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3939
                                            132 BANK0     15     9      6
          _BME280_compensateHumidity (ARG)
          _BME280_compensatePressure (ARG)
       _BME280_compensateTemperature (ARG)
                           ___altoft (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2973
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _BME280_compensateHumidity                           53    49      4   11028
                                             70 BANK0     53    49      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _TMR5_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1933
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     333
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceEui                                 2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationKey                            2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationEui                            2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 6496803
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2516194
                                            122 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  169654
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  739606
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  540269
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  167183
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1   10353
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1   10796
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  342933
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  180629
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           3     3      0    9960
                                              5 BANK0      3     3      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   38019
                                             26 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  587948
                                            107 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  549901
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   28025
                                             25 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 3324739
                                            149 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              4 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  236364
                                            131 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1168871
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              7     6      1     549
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1682651
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  524159
                                             98 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  344000
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1142221
                                            122 BANK0     25    25      0
                                            102 BANK1      3     0      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0   10214
                                             58 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1   10251
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                         9     7      2   35771
                                             70 BANK0      9     7      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0   10505
                                             58 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  176851
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   43054
                                             80 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2    7559
                                             21 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  1     1      0    7356
                                             20 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    7294
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               9     7      2   12257
                                             70 BANK0      9     7      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                   10     8      2   18271
                                             70 BANK0     10     8      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     684
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              2 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     405
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     405
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     628
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2489
                                              4 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     962
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                      10     8      2    3388
                                             15 BANK0     10     8      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  5     3      2     302
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2075
                                             12 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      8     3      5    1805
                                              4 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Send                                         7     3      4  342933
                                            115 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                              8 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (2) _AssemblePacket                                      12     7      5  160406
                                            103 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _IncludeMacCommandsResponse                          15    10      5    2532
                                              0 BANK0     15    10      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (4) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FindSmallestDataRate                                 4     4      0     455
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _EncryptFRMPayload                                   22     8     14   48563
                                             49 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2733
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _AssembleEncryptionBlock                              9     2      7   20074
                                             11 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CountfOptsLength                                     8     8      0     198
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          12     8      4   14693
                                             11 BANK0     12     8      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   39374
                                             49 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   18513
                                             11 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  226732
                                            131 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      40    38      2  199532
                                             91 BANK0     40    38      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                             _RxData *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             49 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  172000
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _RxData                                               4     0      4    4851
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  135688
                                             81 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   15546
                                             19 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  282198
                                            123 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SelectChannelForTransmission                         3     3      0   27988
                                             91 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (3) _SearchAvailableChannel                              12     9      3   12384
                                             79 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (3) _ConfigureRadioTx                                     6     2      4   15406
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetOutputPower                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetIQInverted                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetCRC                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadio                                       5     1      4   15110
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetModulation                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFSKSyncWord                                 3     1      2   14167
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetChannelFrequency                            4     0      4     321
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetBandwidth                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Transmit                                      17    14      3  136815
                                             81 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteConfiguration                            11     9      2   99290
                                             70 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _RADIO_WritePower                                     3     3      0   10383
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   16722
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKBitRate                                8     4      4   16719
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0  113711
                                            112 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _Random                                               2     0      2   11175
                                             77 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 2     0      2   10496
                                             70 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     440
                                             72 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   84335
                                            103 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _AESCmac                                            116   109      7   69611
                                             89 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _GenerateSubkey                                      40    34      6   27112
                                             49 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (5) _FillSubKey                                           8     3      5    1539
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _AESEncodeLoRa                                       20    16      4   20630
                                             29 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _AESEncode                                           24    20      4    4744
                                              6 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (6) _EncodeShiftRow                                       3     1      2     984
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EncKeySchedule                                       6     4      2    1164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  184898
                                             82 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0  107853
                                             81 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   47691
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteMode                                      7     5      2   15915
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterRead                                   2     2      0     130
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (4) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFrequency                                12     8      4   18096
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1064
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterWrite                                  2     1      1    9796
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALSPISend                                           1     1      0      62
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _SystemBlockingWaitMs                                 5     1      4     658
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   21043
                                             70 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8   10496
                                             58 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    6689
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _SwTimerStop                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SwTimerStart                                         9     9      0    1591
                                             49 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (4) _TMR_OverrideRemaining                               10     6      4     972
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (5) _TMR_SwapTimer                                        2     0      2     707
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     401
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _SwTimersInterrupt                                   17    13      4     458
                                             32 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (5) _TMR_GetDeltaTime                                    24    20      4     102
                                              8 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_ReadTimer                                       8     6      2     102
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetTimeout                                    9     5      4    1934
                                             13 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    3569
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6   13936
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          8     8      0     713
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (17) _TMR_ISR_lora                                        2     2      0     573
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (19) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (19) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (16) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
               ___awmod (ARG)
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
                   ___awmod (ARG)
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
               ___awmod (ARG)
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
                   ___awmod (ARG)
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
                 ___awmod (ARG)
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_Send
     _AssemblePacket
       _AESCmac
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _GenerateSubkey
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _FillSubKey
           _memset
         _memcpy
         _memset
       _AssembleEncryptionBlock
         _memcpy
         _memset
       _CountfOptsLength
       _EncryptFRMPayload
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _AssembleEncryptionBlock
           _memcpy
           _memset
         ___awdiv
           ___awmod (ARG)
       _FindSmallestDataRate
       _IncludeMacCommandsResponse
         _RADIO_GetPacketSnr
       _memcpy
       _memset
     _LORAWAN_GetMaxPayloadSize
       _CountfOptsLength
     _RADIO_ReceiveStop
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
   _LORAWAN_SetApplicationEui
     _memcpy
   _LORAWAN_SetApplicationKey
     _memcpy
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetDeviceEui
     _memcpy
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR5_Initialize
   _TMR5_HasOverflowOccured
   _Weather_getHumidityRH
     _BME280_getHumidity
       _BME280_compensateHumidity
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       ___ftdiv
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensateTemperature (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___altoft (ARG)
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
       ___lltoft
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftpack (ARG)
   _Weather_getPressureKPa
     _BME280_getPressure
       _BME280_compensatePressure
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       ___ftdiv
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensateTemperature (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___altoft (ARG)
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
       ___lltoft
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftpack (ARG)
   _Weather_getTemperatureDegC
     _BME280_getTemperature
       _BME280_compensateTemperature
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       ___altoft
         _BME280_compensateTemperature (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftpack (ARG)
       ___ftdiv
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensateTemperature (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___altoft (ARG)
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
   _Weather_readSensors
     _BME280_isMeasuring
       _BME280_getStatus
         _BME280_readByte
           _i2c_read1ByteRegister
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
     _BME280_readMeasurements
       _BME280_readBlock
         _i2c_readDataBlock
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
     _BME280_startForcedSensing
       _BME280_writeByte
         _i2c_write1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
     _Weather_initializeClick
       _BME280_initializeSensor
         _BME280_writeByte
           _i2c_write1ByteRegister
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
       _BME280_readFactoryCalibrationParams
         _BME280_readBlock
           _i2c_readDataBlock
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
         _BME280_readByte
           _i2c_read1ByteRegister
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
       _BME280_reset
         _BME280_writeByte
           _i2c_write1ByteRegister
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
       _BME280_setFilterCoefficient
       _BME280_setOversamplingHumidity
       _BME280_setOversamplingPressure
       _BME280_setOversamplingTemperature
       _BME280_setSensorMode
       _BME280_setStandbyTime
       _DELAY_milliseconds
   ___ftmul
     _ADC_GetConversion (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       _ADC_GetConversion (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___lwtoft
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)
   _printf
     _Weather_getHumidityRH (ARG)
       _BME280_getHumidity
         _BME280_compensateHumidity
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftdiv
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___altoft (ARG)
             _BME280_compensateTemperature (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             _BME280_compensateHumidity (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _BME280_compensatePressure (ARG)
               ___lldiv
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
         ___lltoft
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
     _Weather_getPressureKPa (ARG)
       _BME280_getPressure
         _BME280_compensatePressure
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftdiv
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___altoft (ARG)
             _BME280_compensateTemperature (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             _BME280_compensateHumidity (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _BME280_compensatePressure (ARG)
               ___lldiv
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
         ___lltoft
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
     _Weather_getTemperatureDegC (ARG)
       _BME280_getTemperature
         _BME280_compensateTemperature
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___altoft
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
         ___ftdiv
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___altoft (ARG)
             _BME280_compensateTemperature (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             _BME280_compensateHumidity (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _BME280_compensatePressure (ARG)
               ___lldiv
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
     ___ftadd (ARG)
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           _ADC_GetConversion (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge (ARG)
     ___ftmul (ARG)
       _ADC_GetConversion (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             _ADC_GetConversion (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_GetConversion (ARG)
               ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftpack (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
     ___lltoft (ARG)
       _BME280_compensateHumidity (ARG)
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _BME280_compensatePressure (ARG)
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _EUSART1_Write
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      20      16       12.5%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FC      11       98.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     503      12        0.0%
DATA                 0      0     723       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Oct 03 10:31:54 2019

                                        ??_LORAWAN_TxDone 00BD  
                              __end_of_DIO3_ISR_Lora_Init C6F0  
                                 _BME280_initializeSensor BF5E  
                                            returnReset@p 0069  
                                            ___altoft@exp 00D5  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 0040  
                                          HALSPISend@data 0061  
                         __end_of_ValidateChannelMaskCntl BFBE  
                                           ___altoft@sign 00D6  
                                                      l95 BE50  
                                                      l88 98C2  
                         ?_BME280_setOversamplingPressure 0001  
                        ??_BME280_setOversamplingPressure 0060  
                                            ___awdiv@sign 006B  
                         __size_of_UpdateJoinSuccessState 013E  
                                    __size_of_do_I2C_IDLE 000C  
                                     _do_I2C_SEND_RESTART C63C  
                                    __size_of_do_I2C_RCEN 000C  
                                     ___wmul@multiplicand 0070  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora AEE8  
                                   __end_of_AESEncodeLoRa B860  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0060  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                            ___ftadd@exp1 0098  
                                            ___ftadd@exp2 0097  
                                             __CFG_LVP$ON 000000  
                                            ___ftadd@sign 0096  
                                     ??_LORAWAN_RxTimeout 00C2  
                                                     l120 C138  
                                                     l201 AF4A  
                                                     l202 AF52  
                                                     l107 B79A  
                                                     l109 B7AE  
                                                     l222 A57A  
                                                     l310 A4BC  
                                                     l119 C14A  
                                                     l161 B42C  
                                                     l209 AD44  
                                                     l162 B420  
                                                     l170 9D26  
                                                     l250 A9C4  
                                                     l171 9D14  
                                                     l307 A468  
                                                     l404 AA8A  
                                                     l180 9D8C  
                                                     l405 AA42  
                                                     l165 B426  
                                                     l173 9D1A  
                                                     l174 9D20  
                                                     l191 A652  
                                                     l169 9D5C  
                                                     l185 A648  
                                                     l273 9C52  
                                                     l370 3B96  
                                                     l603 9038  
                                                     l267 9BFE  
                                                     l612 86A2  
                                                     l604 8F68  
                                                     l188 A658  
                                                     l613 85E0  
                                                     l381 3DE6  
                                                     l373 3C56  
                                                     l197 AF58  
                                                     l189 A64C  
                                                     l382 3D3A  
                                                     l366 3B6A  
                                                     l198 AF44  
                                                     l615 863C  
                                                     l383 3D48  
                                                     l375 3C88  
                                                     l607 9034  
                                                     l720 87F2  
                                                     l632 4578  
                                                     l368 3C18  
                                                     l800 2774  
                                                     l545 6C4C  
                                                     l617 86A0  
                                                     l641 46E8  
                                                     l393 7A46  
                                                     l377 3CAA  
                                                     l369 3BDE  
                                                     l546 6CDE  
                                                     l722 883A  
                                                     l386 3E2E  
                                                     l378 3CBE  
                                                     l810 290E  
                                                     l555 B27A  
                                                     l563 BA36  
                                                     l731 88A2  
                                                     l723 881C  
                                                     l651 474A  
                                                     l643 46F2  
                                                     l635 45B2  
                                                     l395 7A6E  
                                                     l379 3CCE  
                                                     l803 2794  
                                                     l564 BA18  
                                                     l724 8828  
                                                     l716 87D8  
                                                     l652 4872  
                                                     l812 2992  
                                                     l900 82E6  
                                                     l573 9EB0  
                                                     l469 C1EA  
                                                     l661 5542  
                                                     l645 4714  
                                                     l397 7AC2  
                                                     l813 29C4  
                                                     l805 2874  
                                             ?_RADIO_Init 0079  
                                                     l638 4618  
                                                     l814 29A4  
                                                     l830 5BF2  
                                                     l727 8874  
                                                     l647 471E  
                                                     l399 7AEA  
                                                     l807 28C0  
                                                     l831 5C0C  
                                                     l728 8866  
                                                     l816 29E8  
                                                     l808 28CC  
                                                     l832 5C78  
                                                     l569 9EAE  
                                                     l729 886A  
                                                     l649 4740  
                                                     l761 8D12  
                                                     l817 29F4  
                                                     l809 28F6  
                                                     l833 5C90  
                                                     l770 68E4  
                                                     l762 8D20  
                                                     l842 5DF4  
                                                     l834 5CA2  
                                                     l771 68FA  
                                                     l659 5538  
                                                     l755 8D02  
                                                     l835 5CCE  
                                                     l851 5E2A  
                                                     l931 B6EC  
                                                     l764 8D2E  
                                                     l756 8CB2  
                                                     l844 5D7E  
                                                     l836 5CB4  
                                                     l828 5BDA  
                                                     l860 6024  
                                                     l852 5E40  
                                                     l940 9DD2  
                                                     l589 9B18  
                                                     l773 692E  
                                                     l765 8D5A  
                                                     l757 8CC0  
                                                     l853 5E4C  
                                                     l909 7F64  
                                                     l925 B8AA  
                                                     l766 8D62  
                                                     l758 8CF2  
                                                     l790 2616  
                                                     l862 5FAE  
                                                     l854 5E7A  
                                                     l942 9E1E  
                                                     l791 264E  
                                                     l855 5EA6  
                                                     l943 9DEC  
                                                     l784 291C  
                                                     l792 26A6  
                                                     l856 5EC8  
                                                     l872 90FE  
                                                     l944 9DFE  
                                                     l936 9DDA  
                                                     l960 B268  
                                                     l793 26F4  
                                                     l785 2694  
                                                     l849 5E12  
                                                     l937 9DC6  
                                                     l786 2662  
                                                     l858 5EE2  
                                                     l890 96BE  
                                                     l946 9E0E  
                                                     l954 B256  
                                                     l787 25C6  
                                                     l859 5F54  
                                                     l883 9668  
                                                     l875 90CC  
                                                     l939 9DCC  
                                                     l955 B242  
                                                     l788 267A  
                                                     l884 964A  
                                                     l876 90AE  
                                                     l789 25EE  
                                                     l949 9E16  
                                                     l957 B248  
                                                     l973 AEC8  
                                                     l798 26F8  
                                                     l886 96A6  
                                                     l878 9102  
                                                     l958 B24E  
                                                     l887 96A0  
                                         ??_UpdateTxPower 0060  
                                                     l968 AED0  
                                                     l889 96A8  
                                                     l969 AEC2  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission A766  
                   __size_of_SelectChannelForTransmission 006C  
                            _SelectChannelForTransmission A6FA  
                                  _ExecuteRxParamSetupReq 6030  
                              __end_of_DELAY_milliseconds BCB4  
                                      _DIO2_ISR_Lora_Init C45A  
                                      __size_of_AESEncode 034A  
                                         _timer1ReloadVal 01F5  
                                         ?_EncKeySchedule 0060  
                            __size_of_i2c_masterOperation 003C  
                           i2c_setDataCompleteCallback@cb 0065  
                                            ___awmod@sign 0065  
                                   _RADIO_SetLoRaSyncWord C600  
                           BME280_compensateHumidity@humV 00D7  
                                   __size_of_do_I2C_RESET 0010  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                              _TXSTA1bits 000FAC  
                                         __end_of_AESCmac 3EAA  
                          _BME280_compensatePressure$7048 00B7  
                                 __end_of_SwTimersExecute 9044  
                                  SystemBlockingWaitMs@ms 0060  
                                 LORAWAN_Join@bufferIndex 00DB  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0060  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 00B2  
                            __end_of_FindSmallestDataRate 9206  
                     __end_of_RADIO_SetFrequencyHopPeriod C5F6  
                             _RADIO_SetFrequencyHopPeriod C5EC  
                                              _CheckFlags AC72  
                                         _CCP5_Initialize C48A  
                                  ?_TMR_OverrideRemaining 006A  
                                           _INT1_CallBack C09E  
                                ?_AssembleEncryptionBlock 006B  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0064  
                                            ___ftdiv@cntr 00ED  
                                      __size_of_IOCB4_ISR 0020  
                                            ___ftdiv@sign 00F2  
                                                    l1002 9A56  
                                                    l1011 B374  
                                                    l1014 B386  
                                                    l1008 B7EA  
                                 ??_rd2RegCompleteHandler 006B  
                                                    l1133 B9F6  
                                                    l1304 6722  
                                                    l1400 41A2  
                                                    l1401 4028  
                                                    l2114 7816  
                                                    l2106 77C2  
                                                    l1330 ADD8  
                                                    l1402 3FF0  
                                                    l2130 93A8  
                                                    l2107 77B4  
                                                    l2108 7780  
                                                    l2109 77B0  
                                                    l1421 BC34  
                                                    l2125 9582  
                                                    l2206 89A6  
                                                    l1430 B030  
                                                    l1510 7114  
                                                    l2230 0CC4  
                                                    l1406 4128  
                                                    l2207 88CC  
                                                    l1511 701C  
                                                    l2303 0CA2  
                                                    l2231 025C  
                                                    l1407 4030  
                                                    l2127 9606  
                                                    l2208 893A  
                                                    l1360 1982  
                                                    l1328 ADA8  
                                                    l2320 4E18  
                                                    l1512 7110  
                                                    l2304 0CA6  
                                                    l1408 4124  
                                                    l2209 89A2  
                                                    l1361 1B5E  
                                                    l2313 AB2A  
                                                    l1601 AC6E  
                                                    l1417 C268  
                                                    l1441 5164  
                                                    l2321 4D50  
                                                    l1505 C162  
                                                    l2233 00BC  
                                                    l1530 9F8A  
                                                    l1370 1C72  
                                                    l2410 91E4  
                                                    l2314 AB50  
                                                    l1610 A6B6  
                                                    l1602 AC2E  
                                                    l1434 50DA  
                                                    l2330 4E74  
                                                    l2322 4E54  
                                                    l2250 04AA  
                                                    l2242 01B2  
                                                    l2234 010A  
                                                    l2154 72F0  
                                                    l1371 1C92  
                                                    l1363 1AC8  
                                                    l1611 A6AC  
                                                    l1435 4F56  
                                                    l2323 4D66  
                                                    l2251 0492  
                                                    l2235 010E  
                                                    l2139 93B8  
                                                    l1380 1E34  
                                                    l1372 1D10  
                                                    l1612 A69E  
                                                    l1604 AC58  
                                                    l1436 4FA8  
                                                    l1540 79B6  
                                                    l1452 5A92  
                                                    l2324 4D7C  
                                                    l2244 0CBE  
                                                    l2260 0592  
                                                    l4013 B53E  
                                                    l1517 A760  
                                                    l1357 1E00  
                                                    l1373 1DE8  
                                                    l2405 9142  
                                                    l1429 B024  
                                                    l1437 4FE6  
                                                    l1541 78DC  
                                                    l1453 5BBE  
                                                    l2325 4D92  
                                                    l2309 0D02  
                                                    l2237 01A0  
                                                    l4014 B536  
                                                    l1366 1B6C  
                                                    l1358 1864  
                                                    l2414 9200  
                                                    l2406 91C2  
                                                    l1550 74C6  
                                                    l1542 794A  
                                                    l1454 5B56  
                                                    l2326 4DA8  
                                                    l2270 08E6  
                                                    l2262 05A4  
                                                    l1535 A014  
                                                    l1471 8152  
                                                    l1375 1D74  
                                                    l2407 9148  
                                                    l2343 37CC  
                                                    l1551 75A6  
                                                    l1439 50C0  
                                                    l1543 79B2  
                                                    l1455 5B48  
                                                    l1463 60FE  
                                                    l2327 4DBE  
                                                    l2319 4BC0  
                                                    l2271 08CE  
                                                    l2247 06AE  
                                                    l2263 0652  
                                                    l2255 04DA  
                                                    l1472 821E  
                                                    l2408 91C0  
                                                    l2360 39F4  
                                                    l2344 37D6  
                                                    l1552 74CC  
                                                    l1616 A6F0  
                                                    l1464 613E  
                                                    l2328 4DD4  
                                                    l2256 051E  
                                                    l2248 02DE  
                                                    l1392 3EF0  
                                                    l2176 849A  
                                                    l3320 BC8E  
                                                    l4033 BA62  
                                                    l4017 B556  
                                                    l1481 823A  
                                                    l1473 8158  
                                                    l2353 38BC  
                                                    l1553 753A  
                                                    l1617 A6C2  
                                                    l1449 5A54  
                                                    l1561 C250  
                                                    l1465 617E  
                                                    l2329 4DEA  
                                                    l2281 0980  
                                                    l2249 03EE  
                                                    l4034 BA50  
                                                    l1298 AAAC  
                                                    l4018 B560  
                                                    l2442 AC88  
                                                    l2362 3A5C  
                                                    l2354 38CA  
                                                    l2346 38BA  
                                                    l1554 75A2  
                                                    l1618 A6D2  
                                                    l1570 A968  
                                                    l1458 5BAC  
                                                    l1466 623A  
                                                    l2418 A2CE  
                                                    l2290 0C12  
                                                    l2282 09D6  
                                                    l2266 06F4  
                                                    l2258 0576  
                                                    l1386 41DA  
                                                    l4027 ABA2  
                                                    l1299 AAB0  
                                                    l1483 8254  
                                                    l1475 8218  
                                                    l2443 AC9E  
                                                    l2355 38EC  
                                                    l2347 3872  
                                                    l1619 A6DE  
                                                    l1459 5BBA  
                                                    l1491 6418  
                                                    l2283 09E4  
                                                    l1395 3FA8  
                                                    l1387 3EE6  
                                                    l1635 4BA6  
                                                    l3155 C0CC  
                                                    l4028 AB68  
                                                    l1484 8258  
                                                    l2444 ACB4  
                                                    l2460 949A  
                                                    l2380 2FAA  
                                                    l2284 0B48  
                                                    l2276 0926  
                                                    l2268 0810  
                                                    l1396 3F70  
                                                    l1388 3ED4  
                                                    l1477 821A  
                                                    l2453 A238  
                                                    l2373 32D6  
                                                    l2381 2FF0  
                                                    l2349 38B6  
                                                    l1565 A93A  
                                                    l2429 B6AA  
                                                    l1493 6426  
                                                    l2285 0AB2  
                                                    l2277 0942  
                                                    l3501 0EF6  
                                                    l2518 C2E8  
                                                    l2366 6D46  
                                                    l2374 2EA6  
                                                    l2358 38FE  
                                                    l1582 BE0E  
                                                    l3086 2214  
                                                    l3502 155C  
                                                    l3510 10F6  
                   RADIO_WriteConfiguration@symbolTimeout 00A6  
                                                    l2519 C2E6  
                                                    l1831 99DC  
                                                    l2455 A24E  
                                                    l2463 9546  
                                                    l2383 32D4  
                                                    l2359 396A  
                                                    l2295 0C0C  
                                                    l2287 0B42  
                                                    l2279 096E  
                                                    l3095 36E0  
                                                    l3319 BCA0  
                                                    l3511 11C4  
                                                    l3503 0F42  
                                                    l3431 431A  
                                                    l2368 6D9C  
                                                    l2456 A262  
                                                    l2480 6EAC  
                                                    l2384 3038  
                                                    l1576 B3CC  
                                                    l3088 22F4  
                                                    l3520 122A  
                                                    l3504 0F84  
                                                    l3432 435E  
                                                    l1497 995E  
                                                    l2449 A21E  
                                                    l2481 6EF2  
                                                    l2393 31B2  
                                                    l2385 30A6  
                                                    l1489 6262  
                                                    l2289 0C18  
                                                    l3089 232C  
                                                    l2378 3298  
                                                    l2394 3220  
                                                    l2386 30EC  
                                                    l3530 13A4  
                                                    l3514 116C  
                                                    l3506 1022  
                                                    l3434 43E2  
                                                    l2459 9548  
                                                    l2387 3132  
                                                    l2379 2F3C  
                                                    l1851 93DC  
                                                    l3099 3706  
                                                    l3531 1310  
                                                    l3507 108C  
                                                    l3435 455A  
                                                    l2468 8C26  
                                                    l2396 3268  
                                                    l2388 3136  
                                                    l1588 BFBA  
                                                    l3540 1450  
                                                    l3524 12B4  
                                                    l2485 6FFA  
                                                    l2397 3272  
                                                    l2389 3192  
                                                    l1853 9404  
                                                    l3533 13BE  
                                                    l3509 10B6  
                                                    l2830 B810  
                                                    l2486 6FB4  
                                                    l1854 9414  
                                                    l3462 5910  
                                                    l3470 2D9E  
                                                    l3542 1552  
                                                    l3534 13B0  
                                                    l3526 12DE  
                                                    l2831 B80E  
                                                    l2479 6F60  
                                                    l2903 C384  
                                                    l3551 1618  
                                                    l3543 1544  
                                                    l3527 12D0  
                                                    l2904 C382  
                                                    l3472 2E62  
                                                    l3552 1622  
                                                    l3536 13E2  
                                                    l3465 2C54  
                                                    l3553 164E  
                                                    l3545 1574  
                                                    l3537 13E6  
                                                    l3481 0E68  
                                                    l3466 2B64  
                                                    l3554 1658  
                                                    l3546 1596  
                                                    l3538 13FE  
                                                    l3490 0F2E  
                                                    l3482 0E50  
                                                    l3731 A098  
                                                    l1859 9480  
                                                    l3459 582E  
                                                    l3539 1538  
                                                    l3491 0E7A  
                                                    l3483 0E0E  
                                                    l3572 AE4C  
                                                    l3732 A090  
                                                    l3548 15C0  
                                                    l3492 0E96  
                                                    l3476 0D3A  
                                                    l3573 AE60  
                                                    l3645 A392  
                                                    l3741 A4DE  
                                                    l3469 2C28  
                                                    l3549 15EC  
                                                    l3493 0EAC  
                                                    l3477 0D4C  
                                                    l2774 C012  
                                                    l3646 A386  
                                                    l3750 A530  
                                                    l3742 A4EA  
                                                    l3558 1696  
                                                    l3486 0F08  
                                                    l3735 A0B8  
                                                    l3591 A8F4  
                                                    l3823 69FE  
                                                    l3911 8A5A  
                                                    l3495 0EBC  
                                                    l3479 0D7E  
                                                    l3736 A0C2  
                                                    l3728 A06A  
                                                    l3592 A8FC  
                                                    l3584 A8B4  
                                                    l3832 6A8E  
                                                    l3920 8A9A  
                                                    l3912 8A4A  
                                                    l3760 8028  
                                                    l3744 A500  
                                                    l3496 0EB6  
                                                    l3737 A0D0  
                                                    l3729 A07A  
                                                    l3585 A8BE  
                                                    l3905 B64E  
                                                    l3745 A4F8  
                                                    l3489 0E76  
                                                    l3850 6B02  
                                                    l3762 8046  
                                                    l3498 0EE4  
                                                    l3587 A8D4  
                                                    l3851 6B32  
                                                    l3827 6A28  
                                                    l3763 8088  
                                                    l3499 0ED0  
                                                    l3588 A8CE  
                                                    l3860 8F2C  
                                                    l3772 811A  
                                                    l3764 80B8  
                                                    l3748 A518  
                                                    l3924 BE2C  
                                                    l3837 6A84  
                                                    l3917 8A7E  
                                                    l3909 89E2  
                                                    l3773 810E  
                                                    l3749 A522  
                                                    l3950 A190  
                                                    l3846 6AC2  
                                                    l3838 6A7A  
                                                    l3918 8A72  
                                                    l3766 80F6  
                                                    l3870 7E9E  
                                                    l3951 A184  
                                                    l3847 6AB8  
                                                    l3767 80E6  
                                                    l3871 7E8E  
                                                    l3960 A858  
                                                    l3792 96EE  
                                                    l3856 8EA0  
                                                    l3864 7DD4  
                                                    l3961 A84C  
                                                    l3793 96E4  
                                                    l3881 9CAA  
                                                    l3849 6AE6  
                                                    l3954 A1C4  
                                                    l3858 8EC8  
                                                    l3882 9CDA  
                                                    l3866 7E00  
                                                    l3890 8AFE  
                                                    l3955 A1D2  
                                                    l3795 9722  
                                                    l3859 8F06  
                                                    l3971 ABCA  
                                                    l3867 7E3A  
                                                    l3891 8B30  
                                                    l3964 A880  
                                                    l3796 970C  
                                                    l3972 ABBE  
                                                    l3876 7EC2  
                                                    l3868 7E62  
                                                    l3892 8B40  
                                                    l3965 A88E  
                                                    l3877 7EB6  
                                                    l3798 974A  
                                                    l3894 8B58  
                                                    l3799 9740  
                                                    l3895 8B68  
                                                    l3888 8AD6  
                                                    l3899 BD94  
                                            _BME280_reset C4B8  
                                                    STR_1 FF85  
                                                    STR_2 FFF3  
                                                    STR_3 FF27  
                                                    STR_4 FFE6  
                                                    STR_5 FFCB  
                                        _RADIO_WritePower 8C96  
                                                    STR_6 FFD9  
                            ??_LORAWAN_SetChannelIdStatus 0065  
                                 _PrepareJoinRequestFrame 6CF0  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1172 00B8  
                                     _RADIO_Transmit$1174 00BC  
                                            printf@tmpval 01AC  
                                            ?_RADIO_Reset 0001  
                                    ?_do_I2C_SEND_RESTART 0001  
                              __size_of_RADIO_ReceiveStop 0020  
                                                    u9460 C338  
                                                    u9468 C33C  
                                                    u9830 C392  
                                                    _TMR1 000FCE  
                                                    _TMR5 000F4F  
                                       ??_UpdateDutyCycle 0062  
                                    _BME280_setSensorMode C26C  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0062  
                                           _INT2_CallBack C07E  
                       __end_of_LORAWAN_SetApplicationEui BB8A  
                       __end_of_LORAWAN_SetApplicationKey BB5C  
                                 ??_wr2RegCompleteHandler 006B  
                                           _EUSART1_Write C37C  
                            ??_Weather_getTemperatureDegC 00F9  
                                ??_InitDefault433Channels 006B  
                       __size_of_do_I2C_SEND_RESTART_READ 0008  
                                ExecuteNewChannel@drRange 00AA  
                                                    _data 03D8  
                                      _PrepareSessionKeys 9774  
                               ?_do_I2C_SEND_RESTART_READ 0001  
                                                    _loRa 0204  
                                                    _main 420E  
                                            ___ftpack@arg 0060  
                                                    _rand ACD0  
                               __size_of_do_I2C_SEND_STOP 0008  
                                  __size_of_do_I2C_DO_ACK 0008  
                                            ___ftpack@exp 0063  
                          __end_of_UpdateMinMaxChDataRate 89B4  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                             ??_BME280_compensateHumidity 00AA  
                                 __size_of_RADIO_Transmit 0238  
                                                    btemp 0048  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00CC  
                                           ComputeMic@key 00C7  
                               __end_of_LORAWAN_RxTimeout 420E  
                               __size_of_ConfigureRadioRx 002A  
                               __size_of_ConfigureRadioTx 0052  
                       __size_of_INT2_SetInterruptHandler 000A  
                           __end_of_StopAllSoftwareTimers B0DE  
                                   ?_do_I2C_SEND_ADR_READ 0001  
                               ?_INT2_SetInterruptHandler 0060  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 007E  
                                         _timer5ReloadVal 03F0  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 9558  
                                           _i2c_setBuffer C1A6  
                                   ExecuteLinkAdr@txPower 0075  
                                     __size_of_HALSPISend 000E  
                              ??_TMR1_SetInterruptHandler 0062  
                              EnableChannels1@channelMask 0064  
                                            ___ftmul@cntr 0081  
                         __end_of_Weather_initializeClick B2FE  
                                        ??_AssemblePacket 00CC  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006B  
                                  __size_of_TMR_SwapTimer 004A  
                                         __end_of_i2c_ISR AD86  
                              __end_of_RADIO_GetPacketSnr C67E  
                                            ___param_bank 000000  
                                            ___ftmul@sign 0082  
                                              _GetRx1Freq C3D6  
                             ??_BME280_compensatePressure 00AA  
                              __size_of_RADIO_ReleaseData 0006  
                        __size_of_rdBlkRegCompleteHandler 0044  
                                    ??_DIO2_ISR_Lora_Init 0062  
                                ??_do_I2C_DO_NACK_RESTART 0060  
                         __end_of_CreateAllSoftwareTimers B130  
                               __size_of_mssp1_disableIRQ 0004  
                                            ___fttol@exp1 0091  
                  SearchAvailableChannel@transmissionType 00AF  
                         __size_of_HALResetPinOutputValue 001A  
                                            ___fttol@lval 008D  
                                   MacExecuteCommands@ptr 00B6  
                                   _RADIO_WriteFSKBitRate A7D0  
                                __size_of_SystemTimerInit 0008  
                                            _do_I2C_RESET C43A  
                                        __end_of_INT1_ISR C66C  
                                  _i2c_write1ByteRegister A96C  
                                        __end_of_INT2_ISR C664  
                          __size_of_OSCILLATOR_Initialize 000E  
                                  ExecuteLinkAdr@dataRate 0078  
                             i2c_setAddressNACKCallback@p 0067  
                           __end_of_OSCILLATOR_Initialize C4F0  
                      __size_of_LORAWAN_LinkCheckCallback 016C  
                                                   l20061 0926  
                                                   l20083 096E  
                                         __end_of___abdiv A906  
                                                   l21135 9A4E  
                                                   l20329 1B64  
                                                   l20187 0C9C  
                                                   l21275 6D3E  
                                                   l20663 9F82  
                                                   l20815 7254  
                                                   l21289 6D94  
                                                   l20809 71F6  
                                                   l20737 499E  
                                                   l20729 48E2  
                                                   l20739 49B8  
                                                   l20747 4A54  
                                                   l10899 9D06  
                                                   l20845 8424  
                                                   l20679 A00C  
                                                   l20775 9584  
                                                   l20855 8454  
                                                   l20759 4B02  
                                                   l21815 13B0  
                                                   l20793 71A4  
                                                   l20849 842A  
                                                   l20865 8496  
                                                   l15185 BC8E  
                                                   l20875 A418  
                                                   l21683 0EB6  
                                                   l21757 1142  
                                                   l21749 10F6  
                                                   l20799 71C2  
                                                   l21687 0ED0  
                                                   l23641 A970  
                                                   l21777 122E  
                                                   l21797 12D0  
                                                   l17407 4570  
                                                   l21799 12D6  
                                                   l18305 3C4E  
                                                   l17435 4610  
                                                   l17419 45AA  
                                                   l17349 AB68  
                                                   l18341 3D40  
                                                   l18325 3CC6  
                                                   l17367 B294  
                                                   l18361 3E26  
                                                   l18193 8C4A  
                                                   l17571 BA50  
                                                   l17475 486A  
                                                   l19505 625A  
                                                   l19291 38B4  
                                                   l17909 7AE2  
                                                   l19277 386E  
                                                   l18727 6EEA  
                                                   l19279 3872  
                                                   l18567 AC26  
                                                   l19633 7CDE  
                                                   l17891 7A66  
                                                   l19493 93B0  
                                                   l19485 9392  
                                                   l19639 7D7A  
                                                   l18769 9554  
                                                   l19585 9404  
                                                   l19489 93A0  
                                                   l19927 04DA  
                                                   l19769 4E00  
                                                   l19949 0576  
                                __end_of_i2c1_driver_open C2AE  
                                                   ?_main 0001  
                                                   ?_rand 00A6  
                                         __end_of___awdiv A0DA  
                                __end_of_i2c1_driver_stop C6C4  
                                         __end_of___ftadd 6B58  
                                              _FillSubKey AA32  
                                         __end_of___awmod A53A  
                                         __end_of___ftdiv 8F5E  
                       __end_of_IOCB4_SetInterruptHandler C56A  
                                         __end_of___ftneg BDA2  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv A1E4  
                                         RADIO_Transmit@i 00C1  
                                         __end_of___ftmul 8BA2  
                                                   u21010 91F8  
                                                   u21100 9508  
                                                   u10380 C324  
                                         ___awdiv@divisor 0068  
                                                   u21110 9554  
                                                   u20070 BE0A  
                                                   u20400 3E74  
                                                   _T1CON 000FCD  
                                         __end_of___llmod A8A0  
                                                   u20330 3CC2  
                                                   u21050 6F5E  
                                         __end_of___ftsub B678  
                                                   u20260 3B7C  
                                                   u20180 A09C  
                                                   u21220 317A  
                                                   u21140 2F3A  
                                                   u10388 C328  
                                                   u20245 3B4C  
                                         __end_of___fttol 8AAC  
                                                   u20350 3D14  
                                                   u20270 3B7E  
                                                   u20600 B3C6  
                                                   u22008 937E  
                                                   u20505 5F9C  
                                                   u20370 3DAE  
                                                   u21250 32E2  
                                                   u20515 5FC0  
                                       ??_EnableChannels1 0069  
                                                   u21350 5D44  
                                                   u20710 BC28  
                                                   u22038 B9D2  
                                                   u21408 A34E  
                                                   u22400 A21A  
                                                   u20720 BC30  
                                                   u22080 642C  
                                                   _LATC2 007C5A  
                                                   u20490 5F74  
                                                   u21434 B014  
                                                   u20570 A964  
                                                   u22330 7C96  
                                    RxJoinResponse@status 0001  
                                                   u20475 5F02  
                                                   u21435 B00E  
                                                   u22315 A5CA  
                                                   _LATD3 007C63  
                                                   u20900 8240  
                                                   u21365 5D6C  
                                                   u24110 7F22  
                                                   u21375 5D90  
                                                   u22175 7138  
                                                   u16111 69BC  
                                                   u24120 7F3A  
                                                   u23080 0A18  
                       __end_of_AckRetransmissionCallback 84A0  
                  SearchAvailableChannel@randomNumberCopy 00B6  
                                                   u22345 7CCE  
                                                   u16121 69D0  
                                                   u24130 7FA2  
                                                   u21810 38E0  
                                                   u23250 0C68  
                                                   u23218 0C44  
                                                   u16210 6A58  
                                                   u23219 0C58  
                                                   u22355 7CF0  
                                                   u21580 5A24  
                                                   u22460 A282  
                                                   u23308 0CEE  
                                                   u23180 0BD6  
                                                   u23148 0BB0  
                                                   u22700 0278  
                                                   u24060 82A4  
                                                   u14700 96D6  
                                                   u17100 8120  
                                                   u24125 7F2E  
                                                   u23149 0BC4  
                                                   u23405 3F1C  
                                                   u25005 33EA  
                                                   u20790 AC6A  
                                                   u23318 0D18  
                                                   u24070 82BC  
                                                   u25006 33F2  
                                                   u16150 69F0  
                                                   u17030 7EC8  
                                                   u24135 7F96  
                                                   u25015 3472  
                                                   u25007 3400  
                                                   u20880 822C  
                                                   u22640 017E  
                                                   u24080 8324  
                                       ??_BME280_readByte 0077  
                                                   _T5CON 000F4E  
                                                   u24305 7828  
                                                   u22721 02B6  
                                                   u25025 34A4  
                                                   u16321 8E88  
                                                   u20970 91CE  
                                                   u22378 7D88  
                                                   u16250 6A96  
                                                   u24075 82B0  
                                                   u22379 7D9C  
                                                   u25115 371A  
                                                   u25035 34FA  
                                                   u22580 4E9C  
                                                   u23428 3F94  
                                                   u25116 3720  
                                                   u25036 3500  
                                                   u14740 9754  
                                                   u16180 6A1A  
                                                   u17220 8A84  
                                                   u26100 126C  
                                                   u26020 10C8  
                                                   u24085 8318  
                                                   u24405 4B1C  
                                                   u25117 372E  
                                                   u25045 3568  
                                                   u25037 350E  
                                                   u16341 8EB0  
                                                   u22750 03DE  
                                                   u22670 019A  
                                                   u24510 720C  
                                                   u25046 356E  
                                                   u26030 1108  
                                                   u23615 1728  
                                                   u25055 35DA  
                                                   u25047 357C  
                              __end_of_i2c1_driver_TXData C556  
                                                   u24280 77DC  
                                                   u25320 6D8A  
                                                   u22920 06D8  
                                                   u25056 35E0  
                                                   u16280 6ACA  
                                                   u23625 17AC  
                                                   u23545 4144  
                                                   u25065 3614  
                                                   u25057 35EE  
                                                   u17161 89C6  
                                                   u22498 A2B6  
                                                   u24610 841E  
                                                   u25066 361A  
                                                   u26130 12EE  
                                                   u23635 189E  
                                                   u22499 A2CA  
                                                   u25075 363C  
                                                   u25067 3628  
                                                   u16371 8ABE  
                                                   u25340 6DE0  
                                                   u22940 07F4  
                                                   u23900 A8E2  
                                                   u24380 4AAC  
                                                   u25076 3644  
                                                   u17180 8A00  
                                                   u16460 A504  
                                                   u26300 1660  
                                                   u26060 1142  
                                                   u23805 1D62  
                                                   u23645 1922  
                                                   u25245 B86E  
                                                   u24525 7244  
                                                   u25085 368A  
                                                   u25077 3652  
                                                   u23670 1A80  
                                                   u22918 068A  
                                                   u22838 04FA  
                                                   u23478 4014  
                                                   u24470 71D0  
                                                   u25086 3692  
                                                   u26310 1676  
                                          __CFG_DEBUG$OFF 000000  
                                                   u24295 7804  
                                                   u23815 1D86  
                                                   u22919 069E  
                                                   u22839 050E  
                                                   u25175 9DA8  
                                                   u24535 7266  
                                                   u25087 36A0  
                                                   u16391 8AE6  
                                                   u19120 A194  
                                                   u25280 9A88  
                                                   u23680 1A9E  
                                                   u23568 41C6  
                                                   u26160 13CC  
                                                   u17185 89F8  
                                                   u19050 4858  
                                                   u19210 AA86  
                                                   u23770 1D14  
                                                   u23690 1AFE  
                                                   u22890 05E4  
                                                   u26170 13DC  
                                                   u24395 4AF2  
                                                   u19220 AA88  
                                                   u22868 0552  
                                                   u23588 41FA  
                                                   u23685 1A94  
                                                   u22869 0566  
                                                   u24805 1F16  
                                                   u24725 51C0  
                                                   u19150 A85C  
                                                   u19070 489E  
                                                   u23790 1D3C  
                                                   u22798 046E  
                                                   u24718 A43C  
                                                   u24638 844E  
                                                   u17550 C51E  
                                                   u24910 234C  
                                                   u24806 1F1E  
                                                   u24726 51C6  
                                                   u23695 1AF2  
                                                   u22799 0482  
                                                   u24719 A450  
                                                   u24815 2004  
                                                   u24807 1F2C  
                                                   u24735 5208  
                                                   u24727 51D4  
                                                   u19240 9B5E  
                                                   u23848 1E20  
                                                   u24920 237E  
                                                   u24816 200A  
                                                   u24736 5210  
                                                   u24825 204A  
                                                   u24817 2018  
                                                   u24745 526E  
                                                   u24737 521E  
                                                   u24930 23A6  
                                                   u24826 2050  
                                                   u24746 5274  
                                                   u24915 2340  
                                                   u24835 2084  
                                                   u24827 205E  
                                                   u24755 52D6  
                                                   u24747 5282  
                                                   u19420 8896  
                                                   u23868 1E54  
                                                   u23980 9086  
                                                   u24836 208A  
                                                   u24756 52DC  
                                                   u24925 2374  
                                                   u24845 20AC  
                                                   u24837 2098  
                                                   u24765 5308  
                                                   u24757 52EA  
                                                   u22998 089E  
                                                   u24678 8482  
                                                   u24950 2432  
                                                   u24846 20B4  
                                                   u24766 5310  
                                                   u22999 08B2  
                                                   u24935 239A  
                                                   u24855 2116  
                                                   u24847 20C2  
                                                   u24775 535E  
                                                   u24767 531E  
                                                   u16951 7DB8  
                                                   u24856 211E  
                                                   u24776 5366  
                                                   u24945 23E8  
                                                   u24865 217C  
                                                   u24857 212C  
                                                   u24785 1EB4  
                                                   u24777 5374  
                                                   u19530 9EE0  
                                                   u24946 23F0  
                                                   u24866 2182  
                                                   u24786 1EBA  
                                                   u24955 2428  
                                                   u24947 23FE  
                                                   u24875 21CE  
                                                   u24867 2190  
                                                   u24795 1EEE  
                                                   u24787 1EC8  
                                                   u16971 7DE4  
                                                   u18900 AB8A  
                                                   u24876 21D6  
                                                   u24796 1EF4  
                                                   u25860 0DE8  
                                                   u24965 2460  
                                                   u24877 21E4  
                                                   u24797 1F02  
                                                   u29117 BC96  
                                                   u19550 9F08  
                                                   u24966 2468  
                                                   u19711 79EC  
                                                   u24975 24CE  
                                                   u24967 2476  
                                                   u24895 2228  
                                                   u29127 C398  
                                                   u18920 C52A  
                                                   u24976 24D4  
                                                   u24896 222E  
                                                   u28408 B438  
                                                   u29137 BA20  
                                                   u24985 333E  
                                                   u24977 24E2  
                                                   u24897 223C  
                                                   u28409 B44C  
                                                   u19810 268E  
                                                   u19570 9F2E  
                                                   u24986 3346  
                                                   u28610 9C74  
                                                   u18907 AB80  
                                                   u24995 339A  
                                                   u24987 3354  
                                                   u19740 7A9A  
                                                   u24996 33A2  
                                                   u28428 9D32  
                                                   u25980 0FBE  
                                                   u24997 33B0  
                                                   u28429 9D46  
                                                   u19815 2684  
                                                   u19680 B542  
                                                   u19840 26DE  
                                                   u25985 0FB4  
                                                   u18970 45A4  
                                                   u28458 A664  
                                                   u19915 27AE  
                                                   u28459 A678  
                                                   u19860 26EE  
                                                   u28468 AF64  
                                                   u28469 AF78  
                                                   u28805 7BFC  
                                                   u18990 45F6  
                                                   u28815 7C32  
                                         __end_of___lwmod B56A  
                                                   u19890 2746  
                                                   u28498 AD6C  
                                                   u28770 C314  
                                                   u28499 AD80  
                                                   u28678 9020  
                                                   u28679 9032  
                                                   u28785 7B84  
                                                   u28795 7BBA  
                                                   i2l612 87A0  
                                                   i2l613 86DE  
                                                   i2l615 873A  
                                                   i2l545 73D8  
                                                   i2l617 879E  
                                                   i2l546 7454  
                                                   i2l555 B5FE  
                                           ?_RADIO_RxDone 0001  
                                         ___awdiv@counter 006A  
                             __size_of_RADIO_ReceiveStart 0230  
                     __size_of_LORAWAN_SetChannelIdStatus 005A  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TMR5H 000F50  
                                                   _TMR5L 000F4F  
                                    BME280_writeByte@data 0074  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 002E  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 009E  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse C6F0  
                                            ___lltoft@exp 00E3  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0071  
                                             i2c_open@ret 0063  
                                        __end_of_TMR1_ISR C37C  
                               FindSmallestDataRate@found 0061  
                                           __CFG_WRTB$OFF 000000  
                                                   _adc_H 0104  
                                           __CFG_WRTC$OFF 000000  
                                                   _adc_P 0200  
                                                   _adc_T 0108  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00C6  
                             __size_of_RADIO_SetBandwidth 000A  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0046  
                                                   __rcon 0046  
                                 __end_of_PIN_MANAGER_IOC C614  
                              __end_of_i2c1_driver_isNACK C340  
                            ??_IncludeMacCommandsResponse 0065  
                                         __end_of_dpowers FE21  
                           __end_of_RADIO_WatchdogTimeout B38A  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0018  
                                                   _scale 2A0E  
                                         __end_of_isdigit BE34  
                                                   _randx 01F9  
                          LORAWAN_RxDone@frmPayloadLength 00F0  
                           ValidateChannelMaskCntl@result 0060  
                              ?_do_I2C_SEND_RESTART_WRITE 0001  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                           ___ftpack@sign 0064  
                                                   _srand C49A  
                                        UpdateDataRange@i 0063  
                                LORAWAN_RxDone@joinAccept 00EE  
                                                   _putch C4AA  
                                   ??_do_I2C_SEND_RESTART 0060  
                                   _i2c_read1ByteRegister 9BE4  
                                  _UpdateJoinSuccessState 7C68  
                                          ?_INT2_CallBack 0001  
                                   ?_BME280_setSensorMode 0001  
                                _INT1_SetInterruptHandler C574  
                  __end_of_i2c1_driver_setBusCollisionISR C54C  
                 __size_of_i2c1_driver_setBusCollisionISR 000A  
                          _i2c1_driver_setBusCollisionISR C542  
                                          ?_EUSART1_Write 0001  
                                              _ComputeMic A9D0  
                                 __end_of_TMR1_Initialize BBE4  
                                  UpdateCfList@joinAccept 00A6  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                          ??_BME280_compensateTemperature 00AA  
                                 __size_of_mssp1_clearIRQ 0004  
                                                   ltemp0 0048  
                                 RADIO_WriteFrequency@num 0075  
                                                   ltemp1 004C  
                                                   ltemp2 0050  
                          __size_of_UpdateCurrentDataRate 000A  
                          __size_of_UpdateChannelIdStatus 0166  
                              PrepareSessionKeys@appNonce 006D  
                               i2c_write1ByteRegister@reg 0071  
                                  UpdateChannelIdStatus@i 0063  
                           __end_of_UpdateCurrentDataRate C5B0  
                            __size_of_RADIO_FSKPacketSent 012E  
                           __end_of_UpdateChannelIdStatus 75CC  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                  ?_do_I2C_SEND_ADR_WRITE 0001  
                                                   ttemp0 0048  
                                                   ttemp1 004B  
                                                   ttemp2 004E  
                                                   ttemp3 0051  
                                UpdateFrequency@channelId 0064  
                                                   status 000FD8  
                                                   wtemp0 0048  
                                                   wtemp1 004A  
                                                   wtemp2 004C  
                                                   wtemp3 004E  
                                                   wtemp4 0050  
                                                   wtemp5 0052  
                                                   wtemp6 0049  
                                      _MacExecuteCommands 4BB0  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 00AD  
                                     __size_of_RADIO_DIO0 0090  
                                     __size_of_RADIO_DIO1 004E  
                                     __size_of_RADIO_DIO2 0056  
                                     __size_of_RADIO_DIO3 0022  
                                     __size_of_RADIO_DIO4 0032  
                                     __size_of_RADIO_DIO5 0028  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                      _EUSART1_DefaultFramingErrorHandler 000000  
                         __size_of_Weather_getPressureKPa 0012  
                                         _TMR1_WriteTimer BFFE  
                       TMR_OverrideRemaining@oldReloadVal 0072  
                                     LORAWAN_RxDone@fPort 00DF  
                                __size_of_RADIO_WriteMode 00FE  
                                       __end_of_AESEncode 48AA  
                                          ?_i2c_setBuffer 0060  
                                            ?_setCallBack 0060  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 01CA  
                               ??_BME280_initializeSensor 0076  
                        __end_of_RADIO_WriteConfiguration 2A0E  
                          __size_of_BME280_getTemperature 0050  
                           __end_of_BME280_getTemperature B180  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                                         _TMR5_Initialize C118  
                            __size_of_RADIO_SetIQInverted 000A  
                                           _fsmStateTable FE6F  
                               __size_ofi2_TMR1_ReadTimer 0020  
                               RADIO_WriteMode@dioMapping 0068  
                                         __initialization 84A0  
                                              _i2c_poller C136  
                            __size_ofi2_SwTimersInterrupt 0100  
                                        LORAWAN_Send@port 00D3  
                             __size_of_DIO1_ISR_Lora_Init 0010  
                                     ?_MacExecuteCommands 00B0  
                                       _SPI2_Exchange8bit C2DA  
                                              _i2c_status 03A0  
                              __end_of_EUSART1_Initialize B344  
                                            __end_of_main 4560  
                              AssembleEncryptionBlock@dir 0072  
                                            __end_of_rand AD2C  
                                       ?_TMR_GetDeltaTime 0068  
                                           AESCmac@padded 01BC  
                                __end_of_RADIO_ReadRandom 9AB8  
                                        _SetJoinFailState B9B6  
                                 RADIO_WriteMode@blocking 0066  
                                    _UpdateJoinInProgress C1C0  
                                    _ExecuteRxTimingSetup BCDC  
                                       __end_of_IOCB4_ISR C07E  
                                        __end_of_i2c_open 98C8  
                               __size_of_UpdateDLSettings 001C  
                                   _BME280_setStandbyTime C0DC  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0018  
                                       ?_BME280_getStatus 0001  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 006C  
                                           AESCmac@output 00BB  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower C5C4  
                                               ??_AESCmac 00C0  
                                          ??_RADIO_SetCRC 0060  
                                  MacExecuteCommands@done 00B5  
                                           setCallBack@cb 0060  
                               _BME280_compensateHumidity 32F0  
                                           _do_I2C_DO_ACK C62C  
                                 InitDefault868Channels@i 006B  
                                                  ??_main 00FF  
                                           ___fttol@sign1 008C  
                                                  ??_rand 00A8  
                                 __end_of_CCP5_Initialize C49A  
                                           _do_I2C_TX$317 006B  
                                          ??_RADIO_RxDone 00F3  
                                      ??_BME280_getStatus 0078  
                                       ?_i2c_restartWrite 0069  
                                          ??_RADIO_TxDone 00E3  
                           __size_of_i2c1_driver_sendNACK 0006  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse C6F2  
                       __end_of_LORAWAN_LinkCheckCallback 72FA  
                                            i2c_close@ret 0060  
                          __end_of_SetReceptionNotOkState A2E4  
                             __end_of_UpdateReceiveDelays B6BA  
                         __end_of_AssembleEncryptionBlock 8C96  
                                __size_of_SPI2_Initialize 000E  
                                    __size_of__tdiv_to_l_ 0134  
                                  ??_SystemBlockingWaitMs 0064  
                                        ??_StartReTxTimer 009A  
                                     ??_SPI2_Exchange8bit 0060  
                        CountfOptsLength@macCommandLength 0066  
                                      ??_i2c_restartWrite 006B  
                        __size_of_BME280_readMeasurements 0140  
                                      EncodeShiftRow@temp 0062  
                                ??_InitDefault868Channels 006B  
                           __size_of_i2c1_driver_resetBus 0002  
                             __size_of_RADIO_RegisterRead 0028  
                                       ?_HALSPICSDeassert 0001  
                                 ?_do_I2C_DO_ADDRESS_NACK 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer B26E  
                               _BME280_compensatePressure 1E68  
                                          _EnableChannels C16E  
                               ??_PrepareJoinRequestFrame 00D0  
                                       ?_BME280_readBlock 007B  
                                          _HALSPICSAssert C6DC  
                                    ??_MacExecuteCommands 00B3  
                                             ?_CheckFlags 0060  
                                 LORAWAN_TxDone@timeOnAir 00BB  
                                              _ExtractMic ADE0  
                         __size_of_SearchAvailableChannel 012A  
                                                  _ADCON0 000FC2  
                                                  _ADCON1 000FC1  
                                                  _ADCON2 000FC0  
                                        __end_of___altoft A3DC  
                                      ??_HALSPICSDeassert 0060  
                                  _HALResetPinOutputValue C1DA  
                                        ___llmod@dividend 0060  
                                                  ?_scale 0083  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                                  _CCPR5H 000F56  
                                                  _CCPR5L 000F55  
                                        ___awdiv@dividend 0066  
                                                  ?_srand 0072  
                  __end_of_LORAWAN_ReceiveWindow1Callback 9610  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B8  
                          _LORAWAN_ReceiveWindow1Callback 9558  
                                _RADIO_FSKPacketSent$1193 00EB  
                                                  _ANSELA 000F38  
                                                  ?_putch 0001  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                        __end_of___ftpack 9774  
                                         _ValidateTxPower BC0E  
                                      ??_BME280_readBlock 007E  
                                                  _T1GCON 000FCC  
                                                  _T5GCON 000F4D  
                                 SwTimerReadValue@timerId 0099  
                                        __end_of___lltoft AC14  
                                 TMR1_WriteTimer@timerVal 0060  
                                          _ExecuteLinkAdr 4EA6  
                  __end_of_LORAWAN_ReceiveWindow2Callback 93BC  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00D8  
                          _LORAWAN_ReceiveWindow2Callback 92E4  
                                                  i2l2620 0044  
                                                  i2l2622 0050  
                                                  i2l1663 AF3C  
                                                  i2l2625 005C  
                                                  i2l2618 0038  
                                                  i2l2774 C19C  
                           __size_of_RADIO_SetFSKSyncWord 0030  
                                 BME280_readByte@reg_addr 0077  
                                                  _RCREG1 000FAE  
                                        __end_of___lwtoft BDC8  
                                                  _RCSTA1 000FAB  
                                      __size_of_i2c_close 0022  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0060  
                                                  _SPBRG1 000FAF  
                        __size_of_ValidateChannelMaskCntl 0020  
                                                  _TMR5IF 007BF1  
                                  ??_do_I2C_SEND_ADR_READ 0060  
                         __size_of_InitDefault433Channels 008A  
                                                  _TRISC2 007CA2  
                                           ?_LORAWAN_Init 00B2  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0070  
                                rdBlkRegCompleteHandler@p 0069  
                                           ?_LORAWAN_Send 00D3  
                         __size_of_AutomaticReplyCallback 0026  
                                               ??_i2c_ISR 006D  
                                                  _TXREG1 000FAD  
                              __size_of_LORAWAN_RxTimeout 0364  
                                                  _TXSTA1 000FAC  
                                       ?_ExecuteDevStatus 0060  
                              __end_of_DIO0_ISR_Lora_Init C48A  
                                __size_ofi2_TMR_SwapTimer 0044  
                                       ExecuteLinkAdr@ptr 006F  
                           __size_of_RADIO_WriteFrequency 00F0  
                                                  _STable FCF9  
                             RADIO_WriteFrequency@num_mod 0071  
                                     LORAWAN_TxDone@delta 00D2  
                             __size_of_ComputeSessionKeys 0086  
                                               AESCmac@k1 019C  
                                               AESCmac@k2 018C  
                               __end_of_SPI2_Exchange8bit C2F0  
                                     LORAWAN_TxDone@found 00D1  
                                         _CheckMcastFlags A1E4  
                                     LORAWAN_TxDone@minim 00DE  
                                      ??_ExecuteDevStatus 0062  
                                                  _Random BE9A  
                                          __CFG_XINST$OFF 000000  
                                                  _RxData C6F2  
                                     LORAWAN_TxDone@ticks 00DA  
                                     _weather_initialized 012C  
                                   _i2c1_driver_getRXData C6AC  
                      SearchAvailableChannel@randomNumber 00B9  
                                        __end_of__powers_ FE48  
                    __end_of_TMR1_DefaultInterruptHandler C6F6  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler C6F4  
                                             ?_GetRx1Freq 0060  
                           ValidateDataRange@dataRangeNew 0063  
                                 _RADIO_FHSSChangeChannel B6BA  
                                                  ___ftge 9C78  
                                               ??___abdiv 0061  
                             __end_of_do_I2C_DO_NACK_STOP C62C  
                     __end_of_i2c_setDataCompleteCallback C224  
                             _i2c_setDataCompleteCallback C20C  
                                                  ___lmul AE3A  
                                  ?_RADIO_WriteFSKBitRate 006D  
                                   ?_UpdateJoinInProgress 0001  
                                                  ___wmul BD04  
                             ?_LORAWAN_LinkCheckConfigure 00A6  
                                         _i2c_masterWrite C614  
                                   ?_ExecuteRxTimingSetup 0075  
                                               ??___awdiv 006A  
                                               ??___ftadd 0093  
                                          __CFG_STVREN$ON 000000  
                                               ??___awmod 0064  
                                    _FindSmallestDataRate 9128  
                                               ??___ftdiv 00EA  
                                               ??___ftneg 0063  
                                               ??___lldiv 0068  
                                               ??___ftmul 007A  
                                               ??___llmod 0068  
                                               ??___ftsub 00EA  
                                               ??___fttol 0087  
                         __size_of_do_I2C_DO_NACK_RESTART 0008  
                            i2c1_driver_setI2cISR@handler 0060  
                          __size_of_Weather_getHumidityRH 0012  
                                               ??___lwmod 00AC  
                           __end_of_Weather_getHumidityRH C3D6  
                      RADIO_SetChannelFrequency@frequency 0060  
                                         StartReTxTimer@i 00A2  
                                ?_EUSART1_SetErrorHandler 0060  
                               ExecuteRxParamSetupReq@ptr 00A6  
                                  __size_of_LORAWAN_Reset 01CE  
                                                  _memcpy AB56  
                                                  _memset BA46  
                                                  _fround 56C4  
                                                  _t_fine 0100  
                                                  clear_0 8568  
                                                  clear_1 857A  
                                                  clear_2 8586  
                                                  clear_3 8592  
                                                  clear_4 859E  
                                                  clear_5 85AE  
                    BME280_setOversamplingPressure@osrs_p 0061  
                                 SwTimerIsRunning@timerId 0060  
                                        ___awdiv@quotient 006C  
                                          ?_do_I2C_DO_ACK 0001  
                                         ___awmod@divisor 0062  
                                         ___awmod@counter 0064  
                                                  _printf 0D2C  
                        ??_EUSART1_SetOverrunErrorHandler 0062  
                         ?_EUSART1_SetOverrunErrorHandler 0060  
                             __size_of_DIO5_ISR_Lora_Init 0002  
                                             ?_FillSubKey 0060  
                                  _Weather_getPressureKPa C3B2  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0060  
                                   ___ftmul@f3_as_product 007E  
                                         ?_RxJoinResponse 0001  
                                ?_TMR5_HasOverflowOccured 0001  
                                 __size_of_EncodeShiftRow 0164  
                                  __end_of_EnableChannels C18A  
                             __end_of_i2c1_driver_sendACK C678  
                          __end_of_do_I2C_DO_ADDRESS_NACK B45A  
                              ??_RADIO_UnhandledInterrupt 0064  
                                            ??_HALSPISend 0061  
                    __end_of_INT2_DefaultInterruptHandler C6FA  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler C6F8  
                                            __pdataCOMRAM 0054  
                                               ??_isdigit 0060  
                                             RxData@pData 0060  
                                  __end_of_HALSPICSAssert C6E0  
                       __size_of_RADIO_SetSpreadingFactor 000A  
                            __size_of_ValidateChannelMask 005E  
                                           ??_SwTimerStop 0060  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0060  
                               ?_RADIO_SetSpreadingFactor 0001  
                                       ?_SwTimerReadValue 0091  
                              i2c_write1ByteRegister@data 0072  
                                      ??_SwTimerIsRunning 0060  
                                          ?_TMR_SwapTimer 0068  
                         RADIO_FHSSChangeChannel@irqFlags 0079  
                                       ?_ExecuteDutyCycle 0060  
                                      ??_ExecuteLinkCheck 0062  
                             ?_i2c_setAddressNACKCallback 0065  
                                            __mediumconst FCF8  
                             __end_of_i2c1_driver_restart C6C8  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                            ?_returnReset 0069  
                                                  srand@x 0072  
                                ADC_GetConversion@channel 0064  
                                   _i2c1_driver_setI2cISR C538  
                             __end_of_i2c1_driver_startRX C6B4  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0095  
                                         _UpdateDataRange 788E  
                                  ?_i2c_read1ByteRegister 0071  
                                         ??_EUSART1_Write 0060  
                                  __end_of_ExecuteLinkAdr 516E  
                                      ??_ExecuteDutyCycle 0062  
                                  ??_BME280_setSensorMode 0060  
                TMR1_SetInterruptHandler@InterruptHandler 0060  
               IOCB4_SetInterruptHandler@InterruptHandler 0060  
                INT2_SetInterruptHandler@InterruptHandler 0060  
                INT1_SetInterruptHandler@InterruptHandler 0060  
                                       ?_BME280_writeByte 0074  
                      __end_of_LORAWAN_SetChannelIdStatus ADE0  
                              _LORAWAN_SetChannelIdStatus AD86  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007A  
                                           AESEncode@aux2 0079  
                                           AESEncode@aux3 007B  
                        __size_of_Weather_initializeClick 0046  
                                 __end_of_TMR1_WriteTimer C01E  
                                   __end_of_SwTimerCreate 9EB6  
                      __end_of_Weather_getTemperatureDegC C3B2  
                              _Weather_getTemperatureDegC C3A0  
                          ??_SelectChannelForTransmission 00BB  
                                             ?_ComputeMic 00C7  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack C03E  
                             ??_LORAWAN_SetApplicationEui 006D  
                             ??_LORAWAN_SetApplicationKey 006D  
                               ExecuteDutyCycle@maxDCycle 0065  
                                       ??_RADIO_RxTimeout 00CB  
                                        ?_TMR1_Initialize 0001  
               __end_of_BME280_setOversamplingTemperature BF3E  
              __size_of_BME280_setOversamplingTemperature 0020  
                      ?_BME280_setOversamplingTemperature 0001  
                     ??_BME280_setOversamplingTemperature 0060  
                       _BME280_setOversamplingTemperature BF1E  
                                      ??_BME280_writeByte 0075  
                                 __end_of_TMR5_Initialize C136  
                             UpdateFrequency@frequencyNew 0060  
                                       _SYSTEM_Initialize BA76  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 014C  
                                          ??_LORAWAN_Init 00B6  
                                          ??_LORAWAN_Join 00DB  
                                          ??_LORAWAN_Send 00D7  
                          __size_of_RADIO_FSKPayloadReady 00B4  
                                              __accesstop 0060  
                                 __end_of__initialization 85B4  
                                              ___altoft@c 00CD  
                           __end_of_RADIO_FSKPayloadReady 96C4  
                                         ??_i2c_setBuffer 0064  
                                          _RADIO_Transmit 5BC8  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                        _do_I2C_SEND_STOP C634  
                                              ___ftadd@f1 008D  
                                              ___ftadd@f2 0090  
                                      __size_of_do_I2C_RX 0070  
                                      __size_of_do_I2C_TX 0090  
                                    LORAWAN_RxDone@buffer 01F2  
                                  RADIO_ReadRandom@retVal 006F  
                                              ___ftge@ff1 0060  
                                              ___ftge@ff2 0063  
                                        _ConfigureRadioRx BC62  
                                    __size_of_RADIO_Reset 0046  
                                        _ConfigureRadioTx B03A  
                                     ExecuteDevStatus@ptr 0060  
                              __end_of_BME280_getHumidity B220  
                        ??_UpdateReceiveWindow2Parameters 0065  
                         ?_UpdateReceiveWindow2Parameters 0060  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 00E8  
                                          _maxPayloadSize FE9F  
                           RADIO_SetLoRaSyncWord@syncWord 0060  
                                           ___rparam_used 000001  
                              __end_of_mssp1_IRQisEnabled C32C  
                                              ___ftdiv@f1 00E4  
                                              ___ftdiv@f2 00E7  
                                              ___ftdiv@f3 00EE  
                                     _i2c_masterOperation B778  
                                __size_of_do_I2C_TX_EMPTY 0054  
                                              ___ftneg@f1 0060  
                              ValidateChannelId@channelId 0062  
                      __size_of_BME280_startForcedSensing 0016  
                               ExecuteLinkAdr@channelMask 0073  
                                 _rdBlkRegCompleteHandler B45A  
                              ?_BME280_startForcedSensing 0001  
                                              ___ftmul@f1 0074  
                                              ___ftmul@f2 0077  
                              __end_of_mssp1_waitForEvent C3A0  
                                              ___ftsub@f1 00E4  
                                              ___ftsub@f2 00E7  
                                              ___fttol@f1 0083  
                                             ?_i2c_poller 0001  
                                              _adcVoltage 011D  
                                      __end_of_HALSPISend C4FE  
                                          __pcstackCOMRAM 0001  
                                              ___inthi_sp 09E8  
                                  _SearchAvailableChannel 8132  
                              __end_of_BME280_getPressure B1D0  
                                 ValidateChannelId@result 0061  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 C6A0  
                                            __pidataBANK2 C6A4  
                                            __pidataBANK3 C3FA  
                                            __pidataBANK4 BEDE  
                                            __pidataBANK5 BEFE  
                                  ?_BME280_setStandbyTime 0001  
                                     ??_SYSTEM_Initialize 0062  
                              __end_of_DIO4_ISR_Lora_Init C6EE  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                                              ___lltoft@c 00DB  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                        _mssp1_disableIRQ C6CC  
                                _RADIO_WriteConfiguration 250E  
                                       ??_RADIO_WriteMode 0067  
                                           __end_of_scale 2E8E  
                                         _spreadingFactor FEBD  
                               __size_of_LORAWAN_Mainloop 003E  
                                        ??_EncKeySchedule 0062  
                   __end_of_IOCB4_DefaultInterruptHandler C6F8  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler C6F6  
                                __end_of_RADIO_WritePower 8D86  
                                 ?_ExecuteRxParamSetupReq 00A6  
                                           __end_of_srand C4AA  
                                           __end_of_putch C4B8  
                                       LORAWAN_RxDone@hdr 00F1  
                                            ??_RADIO_DIO0 00F5  
                                            ??_RADIO_DIO1 00CB  
                                            ??_RADIO_DIO2 007A  
                                            ??_RADIO_DIO3 0065  
                                            ??_RADIO_DIO4 0065  
                                            ??_RADIO_DIO5 0065  
                            __size_of_Weather_readSensors 001E  
                                  _InitDefault433Channels 9FCA  
                                         _UpdateFrequency B49E  
                                  _AutomaticReplyCallback BDC8  
                                       __end_of_i2c_close BE56  
                                              ___lwtoft@c 0068  
                             ??_IOCB4_SetInterruptHandler 0062  
                                ??_INTERRUPT_GetDioStatus 0060  
                                            ??_RADIO_Init 007F  
                                        ?_CCP5_Initialize 0001  
                               SwTimerSetCallback@timerId 0063  
                              LORAWAN_RxDone@channelIndex 00E0  
                          AssembleEncryptionBlock@blockId 006F  
                             __size_of_EXT_INT_Initialize 002A  
                              __end_of_BME280_isMeasuring C318  
                                              __div_to_l_ 8008  
                                         _UpdateDutyCycle B4E2  
                                    ?_i2c_masterOperation 0001  
                                         ?_EnableChannels 006C  
                                 ??_TMR_OverrideRemaining 006E  
                                 __end_of_ValidateTxPower BC38  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init C6EE  
                            __end_of_HALResetPinMakeInput C6E8  
                                              _calibParam 016B  
                                 __size_of_TMR1_ReadTimer 0022  
                        __end_of_INT2_SetInterruptHandler C574  
                                        RADIO_DIO0@opMode 00F8  
                             RADIO_RegisterRead@readValue 0063  
                      __end_of_IncludeMacCommandsResponse 32F0  
                              _IncludeMacCommandsResponse 2E8E  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 008A  
                                UpdateCfList@bufferLength 00A8  
                                        RADIO_DIO2@opMode 007B  
                                   LORAWAN_Send@confirmed 00D9  
                                             ?_ExtractMic 006B  
                                          setCallBack@idx 0064  
                                         ?_ExecuteLinkAdr 006F  
                                        _ValidateDataRate C254  
                                         __div_to_l_@exp1 006B  
                                         __div_to_l_@cntr 006A  
                                  _do_I2C_DO_NACK_RESTART C61C  
                         LORAWAN_GetMaxPayloadSize@result 006A  
                                     __size_of_GetRx1Freq 0012  
                                                 ??_scale 0086  
                               __end_of_SYSTEM_Initialize BAA4  
                                         __div_to_l_@quot 0066  
                      __size_of_RADIO_SetChannelFrequency 008A  
                                                 ??_srand 0074  
                                                 ??_putch 0061  
                                  __end_of_RADIO_Transmit 5E00  
                                       ??_SPI2_Initialize 0060  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 6612  
                                          _mssp1_clearIRQ C6D0  
                              ?_RADIO_SetChannelFrequency 0060  
                                              __pbssBANK0 00FF  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                        RxData@dataLength 0062  
                                     __end_of_SwTimerStop BD7C  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags A266  
                          __size_of_rd2RegCompleteHandler 0030  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FEA7  
                        BME280_getTemperature@temperature 00F6  
                                               ?_i2c_open 0001  
                           __end_of_rd2RegCompleteHandler B926  
                                      _DELAY_milliseconds BC8C  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 0090  
                                    _RADIO_SetOutputPower C5BA  
                          __size_of_wr2RegCompleteHandler 0030  
                                    __end_of_RADIO_SetCRC C5D8  
                                  __size_of_DIO0_ISR_Lora 0006  
                           __end_of_wr2RegCompleteHandler B9B6  
                                 ??_HALResetPinMakeOutput 0060  
                                 __end_of_i2c_masterWrite C61C  
                                    __end_of_RADIO_RxDone 9128  
                              __end_of_RADIO_RxFSKTimeout B7F0  
                                    __end_of_RADIO_TxDone 8382  
                                     __size_of_FillSubKey 0062  
                                      __end_of_RADIO_DIO0 9E2A  
                                      __end_of_RADIO_DIO1 B26E  
                                      __end_of_RADIO_DIO2 AEE8  
                                      __end_of_RADIO_DIO3 BE9A  
                                      __end_of_RADIO_DIO4 B892  
                                      __end_of_RADIO_DIO5 BCDC  
                                           __div_to_l_@f1 0060  
                                           __div_to_l_@f2 0063  
                                   _rd1RegCompleteHandler B926  
                               ??_RADIO_FHSSChangeChannel 0079  
                                  ?_i2c1_driver_getRXData 0001  
                             __size_of_SwTimerSetCallback 0044  
                           __size_of_LORAWAN_SetDeviceEui 002E  
                               RADIO_SetOutputPower@power 0060  
                              __size_of_SPI2_Exchange8bit 0016  
                                      __end_of_RADIO_Init 69AA  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00BB  
                                                 ?_Random 00AD  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                                                 ?_RxData 0060  
                                   _wr1RegCompleteHandler B956  
                         __end_of_EUSART1_SetErrorHandler C59C  
                               ?_LORAWAN_SetDeviceAddress 0060  
                                        i2_TMR1_ReadTimer C03E  
                                      __CFG_CCP2MX$PORTC1 000000  
                                     ?_DELAY_milliseconds 0060  
                                          FillSubKey@size 0064  
                                         _EnableChannels1 A68E  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 0020  
                                         _BME280_readByte C40A  
                                  ??_UpdateJoinInProgress 0060  
                        __size_of_AssembleEncryptionBlock 00F4  
                                  ??_ExecuteRxTimingSetup 0077  
                                        FillSubKey@source 0060  
                                           ??_do_I2C_IDLE 0060  
                                 ?_i2c_write1ByteRegister 0071  
            SelectChannelForTransmission@transmissionType 00BB  
                                    __size_of_setCallBack 0072  
                                           ??_do_I2C_RCEN 0060  
                       __end_of_BME280_startForcedSensing C298  
                                                 ?___ftge 0060  
                                                 ?___lmul 009A  
                  AssembleEncryptionBlock@multicastStatus 0071  
                          __end_of_ExecuteRxParamSetupReq 6244  
                                      ??_CountfOptsLength 0060  
                                                 ?___wmul 006E  
                                  __size_of_DIO2_ISR_Lora 0006  
                                      EncryptFRMPayload@i 00A5  
                                      EncryptFRMPayload@j 00A6  
                                      EncryptFRMPayload@k 00A4  
                                              ??_TMR1_ISR 0034  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                         ??_do_I2C_DO_ACK 0060  
                               _LORAWAN_SetApplicationEui BB5C  
                                    ??_DIO3_ISR_Lora_Init 0060  
                               _LORAWAN_SetApplicationKey BB2E  
                                        _UpdateDLSettings C152  
                                              _deviceAddr 02F9  
                         __end_of_TMR5_HasOverflowOccured C522  
                                        _ValidateRxOffset C23C  
                                                 _CCP5CON 000F54  
                                               ?___altoft 00CD  
                                                 ?_memcpy 0060  
                                                 ?_memset 0060  
                                                 ?_fround 0083  
                                          ___lmul@product 00A2  
                                       _TMR_ISR_Lora_Init C44A  
                                     i2c_setBuffer@buffer 0060  
                                  RADIO_RegisterWrite@reg 0063  
                                               ?___ftpack 0060  
                                     __size_of_ComputeMic 0062  
                                  RADIO_Transmit@regValue 00C0  
                            __size_of_RADIO_SetModulation 000A  
                                     _RADIO_FSKPacketSent 7EDA  
                                                 _AESCmac 3B00  
                                                 ?_printf 018F  
                                  ComputeMic@bufferLength 00CB  
                                               ?___lltoft 00DB  
                    BME280_setOversamplingHumidity@osrs_h 0060  
                                 __size_of_ADC_Initialize 0016  
                  __end_of_EUSART1_SetFramingErrorHandler C592  
                 __size_of_EUSART1_SetFramingErrorHandler 000A  
                          _EUSART1_SetFramingErrorHandler C588  
                                 __end_of_UpdateDataRange 79DC  
                                               ?___lwtoft 0068  
                                   ??_i2c_masterOperation 006F  
                                         ??_TMR_SwapTimer 006A  
                                RADIO_WriteFSKBitRate@num 0071  
                                       ?_i2c1_driver_open 0001  
                                      ?_TMR_ISR_Lora_Init 0001  
                                       __end_of_do_I2C_RX A68E  
                                       __end_of_do_I2C_TX 9D9A  
                                       ?_i2c1_driver_stop 0001  
                                 _BME280_readMeasurements 7B28  
                                   i2c_readDataBlock@data 0072  
                              ??_INT1_SetInterruptHandler 0062  
                                                 i2l14505 B612  
                                    EncryptFRMPayload@dir 0094  
                                      _RADIO_GetPacketSnr C678  
                                    EncryptFRMPayload@key 0099  
                                         __CFG_WDTEN$SWON 000000  
                                   __end_of_UpdateTxPower C5A6  
                                  ?_i2c1_driver_setI2cISR 0060  
                                  BME280_readBlock@length 007D  
                                      ??_i2c1_driver_open 0060  
                                     _RADIO_SetIQInverted C5C4  
                                    ??_DELAY_milliseconds 0062  
                                      ??_i2c1_driver_stop 0060  
                                                 _OSCCON2 000FD2  
                                           ?_mssp1_setIRQ 0001  
                                 __size_of_ConfigureRadio 00A8  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 016C  
                                                 _SPBRGH1 000FB0  
                                     i2_SwTimersInterrupt 86BC  
                            ?_BME280_setFilterCoefficient 0001  
                                                 _SSP1ADD 000FC8  
                                                 _SSP2ADD 000F6E  
                                                 _SSP1BUF 000FC9  
                                  __end_of_mssp1_clearIRQ C6D4  
                                                 _SSP2BUF 000F6F  
                                                 _SSP1MSK 000FCA  
                                     ??_TMR_ISR_Lora_Init 0062  
                                     __size_of_i2c_poller 001C  
                           BME280_compensateTemperature@t 00C5  
                                       __end_of_bandwidth FEBD  
                  UpdateReceiveWindow2Parameters@dataRate 0064  
                                 ??_do_I2C_SEND_ADR_WRITE 0061  
                           i2c_write1ByteRegister@address 0073  
                                __end_of_SetJoinFailState B9E6  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0065  
                                  ValidateDataRate@result 0061  
                                        ?_TMR1_WriteTimer 0060  
                             ??_do_I2C_SEND_RESTART_WRITE 0060  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0060  
                                         ?_RADIO_Transmit 00B1  
                                 _ValidateChannelMaskCntl BF9E  
                                         ___abdiv@counter 0063  
                                     StartReTxTimer@minim 009E  
                              AssemblePacket@bufferLength 00CA  
                            PrepareSessionKeys@sessionKey 006B  
                        LORAWAN_SetDeviceEui@deviceEuiNew 006B  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 0068  
                                      _i2c1_driver_TXData C54C  
                                        ?_TMR5_Initialize 0001  
                       __end_of_RADIO_SetChannelFrequency 9F40  
                             PrepareJoinRequestFrame@iCtr 00D9  
                                              ??_i2c_open 0062  
                               _IOCB4_SetInterruptHandler C560  
                       __end_of_SetCallbackSoftwareTimers 92E4  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 8382  
                                      _i2c1_driver_i2cISR 0126  
                             PrepareJoinRequestFrame@mhdr 00D8  
                                  __size_of_AESEncodeLoRa 0036  
                                                 _i2c_ISR AD2C  
                                      _EncKeySchedule$914 0064  
                               ??_rdBlkRegCompleteHandler 006B  
                           __size_of_LORAWAN_PlatformInit 0022  
                                          _ticksAccounted 003C  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00B9  
                                              AESCmac@ptr 01EC  
                                 __end_of_spreadingFactor FEC4  
                                         __CFG_PWRTEN$OFF 000000  
                          __end_of_i2c_write1ByteRegister A9D0  
                           UpdateCurrentDataRate@valueNew 0060  
                                       __end_of__npowers_ FE6F  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D4  
                                              _scale$7056 0086  
                                  _InitDefault868Channels 9F40  
                                      _i2c1_driver_isNACK C32C  
                                     ?_i2c1_driver_TXData 0001  
                                RADIO_RegisterWrite@value 0062  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0060  
                                LORAWAN_Send@bufferLength 00D6  
                                   _StopAllSoftwareTimers B08C  
                                         __size_of_Random 0022  
                                         __size_of_RxData 0002  
                                    ?i2_SwTimersInterrupt 0021  
                                 __end_of_UpdateFrequency B4E2  
                                     AssemblePacket@fCtrl 00D0  
                                                 ___abdiv A8A0  
                                              AESEncode@i 007C  
                     __size_of_i2c_setAddressNACKCallback 0018  
                                               _AESEncode 4560  
                                  ValidateRxOffset@result 0061  
                                         __size_of___ftge 0092  
                               __end_of_TMR_ISR_Lora_Init C45A  
                                                 ___awdiv A054  
                                         __size_of___lmul 0058  
                                                 ___ftadd 69AA  
                                                 ___awmod A4C8  
                             __size_of_DIO2_ISR_Lora_Init 0010  
                                                 ___ftdiv 8E76  
                                                 ___ftneg BD7C  
                                 __end_of_UpdateDutyCycle B526  
                                                 ___lldiv A160  
                                     __size_of_ExtractMic 005A  
                                         __size_of___wmul 0028  
                                                 ___ftmul 8AAC  
                                    ??_RADIO_GetPacketSnr 0060  
                                                 ___llmod A838  
                                                 ___ftsub B636  
                                                 ___fttol 89B4  
                                       ?_RADIO_ReadRandom 006C  
                                                 ___lwmod B526  
                               SwTimerIsRunning@isRunning 0061  
                                       ??_do_I2C_TX_EMPTY 006B  
                                 ??_RADIO_SetLoRaSyncWord 0060  
                                              ??___altoft 00D1  
                                     ?_i2c1_driver_isNACK 0001  
                                    ValidateChannelMask@i 0064  
                                                 __pcinit 84A0  
                      __size_of_LORAWAN_GetMaxPayloadSize 0060  
                                         __size_of_memcpy 0060  
                              __end_of_RADIO_ReceiveStart 6030  
                                              ??___ftpack 0065  
                                   RADIO_Init@radioBuffer 0079  
                                         __size_of_memset 0030  
                                         __size_of_fround 0294  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 0067  
                        EncryptFRMPayload@multicastStatus 009E  
                              BME280_getHumidity@humidity 00F6  
                                      ??_RADIO_ReadRandom 006E  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
                                              ??___lltoft 00DF  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060  
                                                 __ptext0 420E  
                                                 __ptext1 0D2C  
                                                 __ptext2 2A0E  
                                                 __ptext3 C4AA  
                                                 __ptext4 C37C  
                                                 __ptext5 BE12  
                                                 __ptext6 56C4  
                                                 __ptext7 8AAC  
                                                 __ptext8 A4C8  
                                                 __ptext9 7DA6  
                                    __end_of_LORAWAN_Init AAF6  
                                      i2c_readDataBlock@d 0077  
                                    __end_of_LORAWAN_Join 9A14  
                                     __end_of_do_I2C_IDLE C516  
                                    __end_of_LORAWAN_Send 948E  
                                         __size_of_printf 098A  
                                     __end_of_do_I2C_RCEN C50A  
                                              ??___lwtoft 006B  
                                           _DIO0_ISR_Lora C696  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 006D  
                                          _EncodeShiftRow 75CC  
                                               _IOCB4_ISR C05E  
                              ExecuteNewChannel@frequency 00AB  
                               TMR1_ReadTimer@readValHigh 0066  
                         __size_of_INTERRUPT_GetDioStatus 0014  
                                               _T1CONbits 000FCD  
                                             ?__div_to_l_ 0060  
                      SelectChannelForTransmission@result 00BC  
                                                 _counter 012A  
                                                 _dpowers FDF9  
                                 __size_of_LORAWAN_RxDone 0CA6  
                                   _OSCILLATOR_Initialize C4E2  
                          __end_of_UpdateJoinSuccessState 7DA6  
                                 __size_of_LORAWAN_TxDone 07B2  
                                                 _isdigit BE12  
                              __end_of_RADIO_SetBandwidth C600  
                                         _RADIO_GetStatus C67E  
                             __end_of_do_I2C_SEND_RESTART C644  
                                        ?_ValidateTxPower 0001  
                                          ??_mssp1_setIRQ 0060  
                                        ___awmod@dividend 0060  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FEB6  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora C690  
                                    ??_i2c1_driver_TXData 0060  
                                      _EUSART1_Initialize B2FE  
                                             _SwTimerStop BD54  
                                ??_PIN_MANAGER_Initialize 0062  
                               ?_TMR1_SetInterruptHandler 0060  
                             IncludeMacCommandsResponse@i 006D  
                                               _T5CONbits 000F4E  
                                  i2c_masterOperation@ret 0070  
                                           ?_UpdateCfList 00A6  
                                       _ExecuteNewChannel 5958  
                             __size_of_PrepareSessionKeys 00AC  
                                            ??_CheckFlags 0062  
                           RADIO_SetModulation@modulation 0060  
                                 UpdateDLSettings@dlRx2Dr 0061  
                                 _Weather_initializeClick B2B8  
                               __size_of_TMR_GetDeltaTime 0198  
                                         ?_mssp1_clearIRQ 0001  
                                           _DIO2_ISR_Lora C68A  
                                _do_I2C_SEND_RESTART_READ C64C  
                              __size_of_SYSTEM_Initialize 002E  
                                 i2c_read1ByteRegister@d2 0076  
                    __end_of_LORAWAN_SetNetworkSessionKey BAD2  
                   __size_of_LORAWAN_SetNetworkSessionKey 002E  
                            _LORAWAN_SetNetworkSessionKey BAA4  
                                      ?_ExecuteNewChannel 00A6  
                                    __size_of_returnReset 0004  
                               __size_of_BME280_getStatus 000E  
                              RADIO_WriteMode@currentMode 0069  
                                        ComputeMic@buffer 00C9  
                                    end_of_initialization 85B4  
                                 _CreateAllSoftwareTimers B0DE  
                                     SwTimerCreate@retVal 0060  
                                _INT2_SetInterruptHandler C56A  
                                    ??_i2c1_driver_isNACK 0060  
                                   ??_RADIO_FSKPacketSent 00E3  
                                     ?_EUSART1_Initialize 0001  
                                          _GenerateSubkey 79DC  
                                   _RADIO_WatchdogTimeout B344  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FE8F  
                                        ?_CheckMcastFlags 0060  
                                  ExtractMic@bufferLength 006D  
                                                 memcpy@d 0067  
                                                 memcpy@n 0064  
                                                 memcpy@s 0069  
                                 __end_of_EnableChannels1 A6FA  
                                 __end_of_BME280_readByte C41A  
                               __size_of_i2c_restartWrite 0004  
                                                 memset@c 0062  
                            __end_of_i2c1_driver_sendNACK C672  
                                                 memset@n 0064  
                                                 memset@p 0066  
                               _LORAWAN_LinkCheckCallback 718E  
                             _EUSART1_OverrunErrorHandler 03F4  
                                  ?_rd1RegCompleteHandler 0069  
                                          ??_SwTimerStart 0091  
                                     ??_ExecuteNewChannel 00A8  
                                        ?_i2c_masterWrite 0001  
                                   _UpdateCurrentDataRate C5A6  
                                   _UpdateChannelIdStatus 7466  
                                  ?_wr1RegCompleteHandler 0069  
                                BME280_readBlock@reg_addr 007E  
                            __end_of_i2c1_driver_resetBus C6EA  
                                 ??_RADIO_WriteFSKBitRate 0071  
                                   ??_RADIO_SetIQInverted 0060  
                              __end_of_DIO1_ISR_Lora_Init C47A  
                                         ___lldiv@divisor 0064  
                                     _ValidateChannelMask AC14  
                                              _ticksAdded 0040  
                             HALResetPinOutputValue@value 0060  
                                EncodeShiftRow@stateTable 0060  
                                               i2u2870_48 C0AC  
                                               i2u2872_48 C08C  
                               __size_of_HALSPICSDeassert 0004  
                                               i2u2874_48 C06C  
                                               i2u2876_48 C02C  
                                ValidateDataRate@dataRate 0060  
                                         ___lldiv@counter 006C  
                             TMR_OverrideRemaining@tmrVal 0070  
                                   ??i2_SwTimersInterrupt 0025  
                                ExecuteLinkAdr@redundancy 0076  
                               __size_of_BME280_readBlock 0020  
                                       GenerateSubkey@key 0091  
                                    _HALResetPinMakeInput C6E4  
                                            ??_GetRx1Freq 0064  
              LORAWAN_SetApplicationKey@applicationKeyNew 006B  
                           UpdateDLSettings@dlRx1DrOffset 0060  
                              LORAWAN_Init@RxJoinResponse 00B4  
                              LORAWAN_RxDone@bufferLength 01F4  
                        __end_of_RADIO_SetSpreadingFactor C5E2  
                                                 printf@c 01B9  
                      AssembleEncryptionBlock@bufferIndex 0073  
                                                 printf@f 018F  
                                            RxData@status 0063  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 0066  
                                         _SystemTimerInit C654  
                                   _BME280_getTemperature B130  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                               _do_I2C_SEND_RESTART_WRITE C644  
                                           _AESEncode$910 0074  
                                           _AESEncode$911 0076  
                                           _AESEncode$909 0072  
                                        ??_RxJoinResponse 0060  
                                        _LORAWAN_Mainloop B73A  
                            __end_of_RADIO_SetFSKSyncWord BA16  
                                 ?_Weather_getPressureKPa 018C  
                                      LORAWAN_Join@result 00DC  
                                          __tdiv_to_l_@f1 0060  
                                          __tdiv_to_l_@f2 0063  
                                      __end_of_CheckFlags ACD0  
                                    ??_EUSART1_Initialize 0062  
                               ValidateTxPower@txPowerNew 0061  
                               ??_BME280_readMeasurements 007F  
                                          AESEncode@block 0066  
                       SearchAvailableChannel@maxChannels 00B8  
                                  __end_of_EncodeShiftRow 7730  
                                           ??__tdiv_to_l_ 0066  
                                      _DIO0_ISR_Lora_Init C47A  
                    __end_of_BME280_compensateTemperature 5420  
                   __size_of_BME280_compensateTemperature 02B2  
                            _BME280_compensateTemperature 516E  
                                       ??_HALDIO5PinValue 0060  
                                          ?_DIO0_ISR_Lora 0001  
                                              _returnStop C6B8  
                                   _INT1_InterruptHandler 01F7  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 0065  
                            SwTimersInterrupt@timeElapsed 0088  
                                           _AESEncodeLoRa B82A  
                               __size_of_ExecuteDevStatus 000A  
                         __end_of_rdBlkRegCompleteHandler B49E  
                                __end_of_do_I2C_SEND_STOP C63C  
                            __end_of_RADIO_WriteFrequency 8E76  
                              __end_of_RADIO_RegisterRead BD54  
                       __end_of_LORAWAN_GetMaxPayloadSize AB56  
                          __end_of_HALResetPinOutputValue C1F4  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0060  
                                __end_of_ConfigureRadioRx BC8C  
                                __end_of_ConfigureRadioTx B08C  
                                         _RADIO_RxTimeout BB8A  
                          UpdateChannelIdStatus@channelId 0062  
                               __end_of_ExecuteNewChannel 5BC8  
                                        EnableChannels1@i 006B  
                                 __size_of_AssemblePacket 03B0  
                                          ?_DIO1_ISR_Lora 0001  
                                 ??_i2c_read1ByteRegister 0072  
                                    ?_ValidateChannelMask 0060  
                                       _SwTimerSetTimeout B5AE  
                                          _TMR1_ReadTimer BEBC  
                                          ??_UpdateCfList 00A8  
                                              _txPower433 FEC4  
                                              _txPower868 FECA  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         _bme280_ctrl_hum 012F  
                    __size_of_i2c_setDataCompleteCallback 0018  
                                         ??_LORAWAN_Reset 00B1  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 0030  
                               ??_ValidateChannelMaskCntl 0060  
                                      ?_SwTimerSetTimeout 006D  
                             __size_of_MacExecuteCommands 02F6  
                                    ExecuteNewChannel@ptr 00A6  
                                ??_UpdateMinMaxChDataRate 0060  
                                  __end_of_GenerateSubkey 7B28  
                                             returnStop@p 0069  
                        __size_of_EUSART1_SetErrorHandler 000A  
                               BME280_readBlock@read_buff 007B  
                                           RADIO_RxDone@i 00F4  
                                     EUSART1_Write@txData 0060  
                                   __size_of_RADIO_SetCRC 000A  
                                 AssemblePacket@macCmdIdx 00D1  
                             ?_LORAWAN_SetChannelIdStatus 0064  
                                          _localDioStatus 0132  
                                __end_of_mssp1_disableIRQ C6D0  
                                      __end_of_GetRx1Freq C3E8  
                                   __size_of_RADIO_RxDone 00E4  
                                            ??_ComputeMic 00CC  
                            __size_of_UpdateReceiveDelays 0042  
                                   __size_of_RADIO_TxDone 0126  
                                  ??_RADIO_SetOutputPower 0060  
                             ?_Weather_getTemperatureDegC 018C  
                         EncryptFRMPayload@macBufferIndex 009B  
                            i2c_setDataCompleteCallback@p 0067  
                           ?_LORAWAN_SetNetworkSessionKey 006B  
                                ?_BME280_initializeSensor 0001  
                                BME280_writeByte@reg_addr 0075  
                                 UpdateMinMaxChDataRate@i 0061  
                                 LORAWAN_Reset@ismBandNew 00B1  
                                     _Weather_readSensors C0BE  
                               __size_of_SwTimerIsRunning 002A  
                              __end_of_ComputeSessionKeys A160  
                        __size_of_TMR5_HasOverflowOccured 000C  
                                     ??_SwTimerSetTimeout 0071  
                                __size_of_SwTimersExecute 00E6  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus C354  
                                             ___ftdiv@exp 00F1  
                                         _RADIO_WriteMode 87BC  
                              ??_RADIO_WriteConfiguration 00A8  
                                             printf@width 01B2  
                                   SPI2_Exchange8bit@data 0060  
                                 ?_SearchAvailableChannel 00AF  
                               __size_of_SwTimerReadValue 0040  
                           __size_of_do_I2C_SEND_ADR_READ 0010  
                             RADIO_FSKPacketSent@irqFlags 00EF  
                               __size_of_ExecuteDutyCycle 0054  
                                  ?_StopAllSoftwareTimers 0001  
                                 ??_BME280_setStandbyTime 0060  
                                 AssemblePacket@confirmed 00CE  
                                      __end_of_FillSubKey AA94  
                                     __size_of__div_to_l_ 012A  
                                 _AssembleEncryptionBlock 8BA2  
                                       __size_of_INT1_ISR 0008  
                                       __size_of_INT2_ISR 0008  
                                    ??_DIO0_ISR_Lora_Init 0062  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FDF9  
                                     AESEncodeLoRa@useKey 0081  
                                             ___ftmul@exp 007D  
                                            ??_i2c_poller 006F  
                              SwTimerSetCallback@callback 0060  
                             ??_BME280_startForcedSensing 0076  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0060  
                               __size_of_BME280_writeByte 0014  
                                        ?_UpdateFrequency 0060  
                          __end_of_Weather_getPressureKPa C3C4  
                    __size_of_BME280_setFilterCoefficient 001E  
                                      LORAWAN_Send@buffer 00D4  
                                          __end_of_Random BEBC  
                                             _do_I2C_IDLE C50A  
                                          __end_of_RxData C6F4  
                                             _do_I2C_RCEN C4FE  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 0010  
                                __end_of_ValidateDataRate C26C  
                            __end_of_INTERRUPT_Initialize C6D8  
                          EnableChannels1@channelMaskCntl 0066  
                          EnableChannels1@channelIndexMax 0068  
                          EnableChannels1@channelIndexMin 0067  
                     LORAWAN_SetChannelIdStatus@channelId 0066  
                                        ?_UpdateDutyCycle 0060  
                                          __end_of___ftge 9D0A  
                              __end_of_DIO5_ISR_Lora_Init C6EC  
                                 __end_of_RADIO_GetStatus C684  
                                          __end_of___lmul AE92  
                                      LORAWAN_Send@result 00D8  
                                        ??_EnableChannels 006F  
                               i2TMR1_WriteTimer@timerVal 0001  
                                          __end_of___wmul BD2C  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0060  
                     TMR_OverrideRemaining@ticksRemaining 006A  
                                       ?_RADIO_WritePower 0001  
                                      _BME280_getHumidity B1D0  
                                           __pidataCOMRAM C69C  
                                         ?_EncodeShiftRow 0060  
                                    ?_Weather_readSensors 0001  
                                          ?_AESEncodeLoRa 007D  
                                       __size_of_TMR1_ISR 0014  
                                          _ADC_Initialize C2AE  
                                      _mssp1_IRQisEnabled C318  
                                   _Weather_getHumidityRH C3C4  
                                      __end_of_ComputeMic AA32  
                                               Random@max 00AD  
                                          __end_of_memcpy ABB6  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout B5F2  
                                  __end_of_TMR1_ReadTimer BEDE  
                                          __end_of_memset BA76  
                                          __end_of_fround 5958  
                                         _SPI2_Initialize C4D4  
                        LORAWAN_SetChannelIdStatus@result 0065  
                                ?_PrepareJoinRequestFrame 0001  
                            __size_of_do_I2C_DO_NACK_STOP 0008  
                                      ??_RADIO_WritePower 0064  
                           ?_BME280_compensateTemperature 00A6  
                                            _RADIO_SetCRC C5CE  
                                   ??_ValidateChannelMask 0062  
                                        ??_ExecuteLinkAdr 0071  
                                   UpdateCfList@frequency 00A9  
                                          __end_of_printf 16B6  
                                      _mssp1_waitForEvent C38E  
                               ??_Weather_initializeClick 009A  
                                            _RADIO_RxDone 9044  
                                            _RADIO_TxDone 825C  
                                 ?_do_I2C_DO_NACK_RESTART 0001  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006B  
                                     start_initialization 84A0  
                                      _BME280_getPressure B180  
                                          _ConfigureRadio 98C8  
                                               _i2c_close BE34  
                                      LORAWAN_RxDone@mhdr 00E1  
                                     ?_BME280_getHumidity 00F3  
                                      LORAWAN_RxDone@temp 00E7  
                          _BME280_compensateHumidity$7050 00C3  
                          _BME280_compensateHumidity$7051 00C7  
                          _BME280_compensateHumidity$7052 00CB  
                          _BME280_compensateHumidity$7053 00CF  
                          _BME280_compensateHumidity$7049 00D3  
                                     _i2c_busCollisionISR 000000  
                                      _DIO4_ISR_Lora_Init C6EC  
                                __end_ofi2_TMR1_ReadTimer C05E  
                          __size_of_TMR_OverrideRemaining 0096  
                                     _RADIO_RegisterWrite BFDE  
                                            AESCmac@mLast 01AC  
                               ??_CreateAllSoftwareTimers 0061  
                         __size_of_PIN_MANAGER_Initialize 0054  
                                     ?_mssp1_IRQisEnabled 0001  
                                     __end_of__tdiv_to_l_ 7EDA  
                           __end_of_TMR_OverrideRemaining 9BE4  
                             ?_IncludeMacCommandsResponse 0060  
                                   __end_of_INT1_CallBack C0BE  
                                            ??_ExtractMic 006F  
                    EncryptFRMPayload@bufferToBeEncrypted 009C  
                                            AESCmac@input 00BD  
                        __end_of_LORAWAN_SetDeviceAddress C23C  
                                         ?_GenerateSubkey 0091  
                            ?_RADIO_SetFrequencyHopPeriod 0060  
                                         LORAWAN_TxDone@i 00E2  
                                     ?_mssp1_waitForEvent 0060  
                                           ?_BME280_reset 0001  
                                   LORAWAN_Init@RxPayload 00B2  
                     AssembleEncryptionBlock@frameCounter 006B  
                                 i2TMR_SwapTimer@timerVal 0009  
                                            setCallBack@p 0062  
                                             putch@txData 0061  
                                      __end_of_i2c_poller C152  
                                   __end_of_INT2_CallBack C09E  
                                           ??_RADIO_Reset 0065  
                            __size_of_i2c1_driver_sendACK 0006  
                                __end_of_UpdateDLSettings C16E  
                                   __end_of_EUSART1_Write C38E  
                              SwTimerStart@ticksRemaining 0095  
                                         i2c_open@address 0062  
                                  RADIO_WriteMode@newMode 006A  
                                     ?_BME280_getPressure 00F3  
                                __end_of_ValidateRxOffset C254  
                           __size_of_BME280_setSensorMode 0016  
                             ??_RADIO_SetChannelFrequency 0064  
                                 i2c_setBuffer@bufferSize 0062  
                             ??_SetCallbackSoftwareTimers 0064  
                                 ??_i2c1_driver_getRXData 0060  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                  rd1RegCompleteHandler@p 0069  
                                     _RADIO_SetModulation C5E2  
                                      _BME280_isMeasuring C304  
                           ExecuteNewChannel@channelIndex 00AF  
                            __size_of_i2c1_driver_restart 0004  
                          __end_of_SearchAvailableChannel 825C  
                                        ?_EnableChannels1 0064  
                                         i2_TMR_SwapTimer B5F2  
                                        ?_BME280_readByte 0001  
                                 __size_of_StartReTxTimer 0182  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0060  
                            __size_of_i2c1_driver_startRX 0004  
                                         ___llmod@divisor 0064  
                              MacExecuteCommands@fOptsLen 00B2  
                                 __end_of_SystemTimerInit C65C  
                          UpdateChannelIdStatus@statusNew 0060  
                       __size_of_RADIO_UnhandledInterrupt 0032  
                                         ___llmod@counter 0068  
                                     TMR_SwapTimer@oldVal 0122  
                               ?_RADIO_UnhandledInterrupt 0001  
                                   __end_of_i2c_setBuffer C1C0  
                                       __size_of_i2c_open 00A8  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0120  
                                   _RADIO_FSKPayloadReady 9610  
                          __size_of_HALResetPinMakeOutput 0004  
                                    ??_BME280_getHumidity 00F6  
                           __end_of_HALResetPinMakeOutput C6E4  
                                                ??_Random 00AF  
                                                ??_RxData 0064  
                                                AESCmac@i 01F1  
                                                AESCmac@j 01F0  
                                                AESCmac@n 01EF  
                                                AESCmac@x 01DC  
                                                AESCmac@y 01CC  
                              SwTimerReadValue@ticksCount 0095  
                                    __end_of_mssp1_setIRQ C6AC  
                                    ?_RADIO_RegisterWrite 0062  
                          __end_of_InitDefault433Channels A054  
                                    ??_mssp1_IRQisEnabled 0060  
                                     ?_BME280_isMeasuring 0001  
                          __end_of_AutomaticReplyCallback BDEE  
                                  ?_BME280_getTemperature 00F3  
                                     RADIO_Init@frequency 007B  
                                __size_of_TMR1_Initialize 002C  
                                    _macEndDevCmdReplyLen FEAF  
                                                ??___ftge 0066  
                                                ??___lmul 00A2  
                            i2c_read1ByteRegister@address 0072  
                                             ??_AESEncode 006A  
                       RADIO_WriteConfiguration@tempValue 00AC  
                                        _activationMethod 012B  
                                   __size_of_LORAWAN_Init 0062  
                      __size_of_AckRetransmissionCallback 011E  
                                   __size_of_LORAWAN_Join 00A4  
                                                ??___wmul 0072  
                                   __size_of_LORAWAN_Send 00D2  
                                    ??_mssp1_waitForEvent 0062  
                                 __end_of_RADIO_RxTimeout BBB8  
                                  wr1RegCompleteHandler@p 0069  
                                MacExecuteCommands@buffer 00B0  
                                ??_SetReceptionNotOkState 00BB  
                                  __end_of_ADC_Initialize C2C4  
                                          ??_TMR_ISR_lora 0032  
                                           ?_do_I2C_RESET 0001  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK1 01F9  
                                             __pdataBANK2 02F9  
                                             __pdataBANK3 03E0  
                                       _ValidateDataRange B38A  
                                             __pdataBANK4 04E0  
                                    ??_BME280_getPressure 00F6  
                                             __pdataBANK5 0500  
                                      __end_of_ExtractMic AE3A  
                i2SwTimersInterrupt@ticksToNextTimerEvent 002D  
                  SwTimersInterrupt@ticksToNextTimerEvent 008C  
                                   ??_Weather_readSensors 009A  
                                                ??_memcpy 0066  
                                  __size_of_SwTimerCreate 008C  
                                                ??_memset 0066  
                                                ??_fround 0086  
                                    ??_DIO4_ISR_Lora_Init 0060  
                              __end_of_EXT_INT_Initialize BC0E  
                                       _ValidateChannelId BDEE  
                                    ?_RADIO_SetModulation 0001  
                                _RADIO_SetSpreadingFactor C5D8  
                                      _RADIO_RxFSKTimeout B7B4  
                                                ?_AESCmac 00B9  
                                  __size_of_TMR1_CallBack 0020  
                                             ?_returnStop 0069  
                                                ??_printf 00F9  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                 ??_i2c1_driver_setI2cISR 0062  
                                ValidateRxOffset@rxOffset 0060  
                                            AESEncode@aux 0078  
                                            AESEncode@key 0068  
                                  TMR_GetDeltaTime@retVal 0110  
                                         ?_TMR1_ReadTimer 0060  
                          __end_of_do_I2C_DO_NACK_RESTART C624  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 9970  
                                       __size_of___altoft 007A  
                                          _LORAWAN_RxDone 0086  
                                      ?_ValidateChannelId 0060  
                                    _i2c1_driver_sendNACK C66C  
                                  TMR_GetDeltaTime@tmrVal 0124  
                                          _LORAWAN_TxDone 16B6  
                                              fround@prec 008C  
                            __end_of_LORAWAN_SetDeviceEui BB00  
                              __size_of_ExecuteNewChannel 0270  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 0069  
                                       __size_of___ftpack 00B0  
                                    __end_of_SwTimerStart 9B4E  
                  __end_of_LORAWAN_EnterContinuousReceive A362  
                 __size_of_LORAWAN_EnterContinuousReceive 007E  
                          _LORAWAN_EnterContinuousReceive A2E4  
                                             __pbssBIGRAM 0520  
                                         ??_DIO2_ISR_Lora 0001  
                                BME280_setSensorMode@mode 0060  
                               __size_of_CountfOptsLength 00CA  
                                       __size_of___lltoft 005E  
                                       CountfOptsLength@i 0067  
                                             __pbssCOMRAM 003C  
                              __end_of_DefaultChannels433 FEFA  
                              __end_of_DefaultChannels868 FF24  
                                        ??_RADIO_Transmit 00B4  
                                              ?_i2c_close 0001  
                                               _adcResult 03C4  
                                       __size_of___lwtoft 0026  
                                      LORAWAN_RxTimeout@i 00CA  
                                    _i2c1_driver_resetBus C6E8  
                               _BME280_startForcedSensing C282  
                                    ??_BME280_isMeasuring 0078  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 018C  
                                     ??_ValidateDataRange 0062  
                         __end_of_BME280_initializeSensor BF7E  
                                               _do_I2C_RX A61E  
                                               _do_I2C_TX 9D0A  
                                        _TMR_GetDeltaTime 6B58  
                           EnableChannels@channelMaskCntl 006E  
                                          ??_BME280_reset 0076  
                                 __end_of_RADIO_WriteMode 88BA  
                 __end_of_UnconfirmedTransmissionCallback A454  
                __size_of_UnconfirmedTransmissionCallback 0078  
                         _UnconfirmedTransmissionCallback A3DC  
                                 SearchAvailableChannel@i 00BA  
                                     ??_ValidateChannelId 0061  
                                            _isdigit$5855 0061  
                                   RADIO_RegisterRead@reg 0062  
                         __size_of_UpdateMinMaxChDataRate 00FA  
                                 _RADIO_ReceiveStart$1177 00B7  
                     LORAWAN_SetChannelIdStatus@statusNew 0064  
                                __size_of_CCP5_Initialize 0010  
                                        _BME280_getStatus C4C6  
                                               _aesBuffer 03C8  
                                 INTERRUPT_GetDioStatus@a 0060  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0099  
                          __size_of_do_I2C_SEND_ADR_WRITE 0010  
                           ??_RADIO_SetFrequencyHopPeriod 0062  
                                    _RADIO_SetFSKSyncWord B9E6  
                             RADIO_SetBandwidth@bandwidth 0060  
                           __end_of_do_I2C_SEND_ADR_WRITE C42A  
                        ??_EUSART1_SetFramingErrorHandler 0062  
                         ?_EUSART1_SetFramingErrorHandler 0060  
                                        _i2c_restartWrite C6BC  
                              __end_of_SwTimerSetCallback B5AE  
       __end_of_ResetParametersForUnconfirmedTransmission C354  
      __size_of_ResetParametersForUnconfirmedTransmission 0014  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0060  
               _ResetParametersForUnconfirmedTransmission C340  
                               ??_AssembleEncryptionBlock 0072  
                                   _INT2_InterruptHandler 02FD  
                                               _bandwidth FEB6  
                                      ??_SetJoinFailState 0060  
                               __size_of_i2c1_driver_open 0016  
                                 ?_InitDefault868Channels 0001  
                               __size_of_i2c1_driver_stop 0004  
                                                ?_i2c_ISR 0001  
                                            _LORAWAN_Init AA94  
                                            _LORAWAN_Join 9970  
                                            _LORAWAN_Send 93BC  
                                         _do_I2C_TX_EMPTY AF3E  
                                  RADIO_FSKPayloadReady@i 00F4  
                                           ??_setCallBack 0064  
                                       _ValidateFrequency A906  
                                               __pnvBANK1 01F5  
                                               __pnvBANK2 02FD  
                                               __pnvBANK3 03F0  
                                  ??_HALResetPinMakeInput 0060  
                                   _rd2RegCompleteHandler B8F6  
                                    _RADIO_WriteFrequency 8D86  
                                         FillSubKey@carry 0066  
                                        _HALSPICSDeassert C6D8  
                          ??_LORAWAN_SetNetworkSessionKey 006D  
                                   __end_of_fsmStateTable FE8F  
                                     __end_of_RADIO_Reset B416  
                                   ??_RADIO_RegisterWrite 0063  
                                  _PIN_MANAGER_Initialize AF92  
                                        _BME280_readBlock BF7E  
                                   _wr2RegCompleteHandler B986  
                                           FillSubKey@key 0062  
                                      ?_ValidateFrequency 0060  
                                    __end_of_UpdateCfList 6432  
                     RADIO_WriteFSKFrequencyDeviation@num 0071  
                               EnableChannels@channelMask 006C  
                                               _macBuffer 0520  
                                               _dioStatus 0134  
                               __end_of_ValidateDataRange B3D0  
                           RADIO_FSKPayloadReady@irqFlags 00F3  
                                       _SwTimersInterrupt 85BA  
                                       ??_SwTimersExecute 00DA  
                                               __pintcode 0008  
                                                ?___abdiv 0060  
                                               _deviceEUI 03E8  
                        __end_of_TMR1_SetInterruptHandler C560  
                                           __pmediumconst FCF8  
                                 RADIO_Transmit@bufferLen 00B3  
                                 __end_of_SPI2_Initialize C4E2  
                       BME280_readMeasurements@sensorData 008C  
                                          ??_do_I2C_RESET 0060  
                                                ?___awdiv 0066  
                                               __ptext100 ABB6  
                                               __ptext101 8E76  
                               __end_of_ValidateChannelId BE12  
                                               __ptext110 C4E2  
                                               __ptext102 96C4  
                                               __ptext111 BE56  
                                               __ptext103 32F0  
                                               __ptext200 C5B0  
                                               __ptext120 C46A  
                                               __ptext112 C44A  
                                               __ptext104 C516  
                                               __ptext201 93BC  
                                               __ptext121 C47A  
                                               __ptext113 C556  
                                               __ptext105 BA76  
                                               __ptext210 948E  
                                               __ptext202 AAF6  
                                               __ptext130 C48A  
                                               __ptext122 C6D4  
                                               __ptext114 C654  
                                               __ptext106 C118  
                                               __ptext211 ADE0  
                                               __ptext203 3750  
                                               __ptext131 C2AE  
                                               __ptext123 BBE4  
                                               __ptext115 C6EA  
                                               __ptext107 BBB8  
                                               __ptext300 9FCA  
                                               __ptext220 C67E  
                                               __ptext212 A0DA  
                                               __ptext204 2E8E  
                                               __ptext140 48AA  
                                               __ptext132 BAA4  
                                               __ptext124 C56A  
                                               __ptext116 C6EC  
                                               __ptext108 C4D4  
                                               __ptext301 BA46  
                                               __ptext221 A2E4  
                                               __ptext213 9774  
                                               __ptext205 C678  
                                               __ptext141 7C68  
                                               __ptext133 BAD2  
                                               __ptext125 C574  
                                               __ptext117 C6EE  
                                               __ptext109 AF92  
                                                ?___ftadd 008D  
                                               __ptext310 AEE8  
                                               __ptext302 AB56  
                                               __ptext230 9970  
                                               __ptext222 C6F2  
                                               __ptext214 A1E4  
                                               __ptext206 9128  
                                               __ptext150 C3D6  
                                               __ptext142 BDC8  
                                               __ptext134 C224  
                                               __ptext126 B2FE  
                                               __ptext118 C45A  
                                               __ptext311 B5F2  
                                               __ptext303 B0DE  
                                               __ptext231 C1C0  
                                               __ptext223 C340  
                                               __ptext215 AC72  
                                               __ptext207 6E80  
                                               __ptext151 BCB4  
                                               __ptext143 8382  
                                               __ptext135 BB00  
                                               __ptext127 C57E  
                                               __ptext119 C560  
                                               __ptext320 C65C  
                                               __ptext312 C18A  
                                               __ptext304 9E2A  
                                               __ptext240 C5E2  
                                               __ptext232 A6FA  
                                               __ptext224 C3E8  
                                               __ptext216 7EDA  
                                               __ptext208 A054  
                                               __ptext160 825C  
                                               __ptext152 B860  
                                               __ptext144 718E  
                                               __ptext136 BB2E  
                                               __ptext128 C588  
                                               __ptext321 C07E  
                                               __ptext313 86BC  
                                               __ptext305 B7F0  
                                               __ptext241 C5EC  
                                               __ptext233 8132  
                                               __ptext225 C684  
                                               __ptext217 16B6  
                                               __ptext209 8BA2  
                                               __ptext161 9044  
                                               __ptext153 BE78  
                                               __ptext145 9558  
                                               __ptext137 BB5C  
                                               __ptext129 C592  
                                               __ptext322 C690  
                                               __ptext314 72FA  
                                               __ptext250 6CF0  
                                               __ptext242 B9E6  
                                               __ptext234 B03A  
                                               __ptext226 BFBE  
                                               __ptext218 B6FA  
                                               __ptext170 A266  
                                               __ptext162 A8A0  
                                               __ptext154 AE92  
                                               __ptext146 92E4  
                                               __ptext138 B73A  
                                               __ptext323 C6F8  
                                               __ptext315 C03E  
                                               __ptext307 C368  
                                               __ptext251 BE9A  
                                               __ptext243 9EB6  
                                               __ptext235 C5BA  
                                               __ptext227 5E00  
                                               __ptext219 BC38  
                                               __ptext171 B9B6  
                                               __ptext163 9610  
                                               __ptext155 B220  
                                               __ptext147 B344  
                                               __ptext139 8F5E  
                                               __ptext324 C664  
                                               __ptext316 C60A  
                                               __ptext308 C01E  
                                               __ptext260 75CC  
                                               __ptext252 ACD0  
                                               __ptext244 C5F6  
                                               __ptext236 C5C4  
                                               __ptext228 BC62  
                                               __ptext180 5958  
                                               __ptext172 C6F0  
                                               __ptext164 3EAA  
                                               __ptext156 BB8A  
                                               __ptext148 B7B4  
                                               __ptext325 C09E  
                                               __ptext317 C05E  
                                               __ptext309 C6F4  
                                               __ptext261 5420  
                                               __ptext253 B526  
                                               __ptext245 5BC8  
                                               __ptext237 C5CE  
                                               __ptext229 C354  
                                               __ptext181 A906  
                                               __ptext173 4BB0  
                                               __ptext165 0086  
                                               __ptext157 B6BA  
                                               __ptext149 A3DC  
                                               __ptext326 C696  
                                               __ptext318 C68A  
                                               __ptext270 67E0  
                                               __ptext262 AA94  
                                               __ptext254 A9D0  
                                               __ptext246 250E  
                                               __ptext238 98C8  
                                               __ptext190 BC0E  
                                               __ptext182 B38A  
                                               __ptext174 BCDC  
                                               __ptext166 A5AC  
                                               __ptext158 9D9A  
                                               __ptext327 C6FA  
                                               __ptext319 C6F6  
                                               __ptext271 B56A  
                                               __ptext263 C49A  
                                               __ptext255 3B00  
                                               __ptext247 8C96  
                                               __ptext239 C5D8  
                                               __ptext191 C254  
                                               __ptext183 B49E  
                                               __ptext175 B678  
                                               __ptext167 C152  
                                               __ptext159 B892  
                                               __ptext328 0000  
                                               __ptext280 C6D8  
                                               __ptext272 87BC  
                                               __ptext264 9206  
                                               __ptext256 79DC  
                                               __ptext248 A766  
                                               __ptext192 BF9E  
                                               __ptext184 B4E2  
                                               __ptext176 BD04  
                                               __ptext168 6244  
                                               __ptext281 C6DC  
                                               __ptext273 BD2C  
                                               __ptext265 9A14  
                                               __ptext257 AA32  
                                               __ptext249 A7D0  
                                               __ptext193 AC14  
                                               __ptext185 788E  
                                               __ptext177 6030  
                                               __ptext169 700C  
                                               __ptext290 BD54  
                                               __ptext282 B3D0  
                                               __ptext274 C522  
                                               __ptext266 6612  
                                               __ptext258 B82A  
                                               __ptext194 C59C  
                                               __ptext186 AD86  
                                               __ptext178 C23C  
                                               __ptext291 9AB8  
                                               __ptext283 BA16  
                                               __ptext275 8D86  
                                               __ptext267 88BA  
                                               __ptext259 4560  
                                               __ptext195 C5A6  
                                               __ptext187 BDEE  
                                               __ptext179 C2C4  
                                                ?___awmod 0060  
                                               __ptext292 9B4E  
                                               __ptext284 C1DA  
                                               __ptext276 A838  
                                               __ptext268 B08C  
                                               __ptext196 C16E  
                                               __ptext188 B8C4  
                                               __ptext293 B26E  
                                               __ptext285 C6E0  
                                               __ptext277 BFDE  
                                               __ptext269 C600  
                                               __ptext197 A68E  
                                               __ptext189 4EA6  
                                               __ptext294 BFFE  
                                               __ptext286 C6E4  
                                               __ptext278 C4F0  
                                               __ptext198 7466  
                                               __ptext295 85BA  
                                               __ptext287 7730  
                                               __ptext279 C2DA  
                                               __ptext199 AFE6  
                                               __ptext296 6B58  
                                               __ptext288 AE3A  
                                               __ptext297 BEBC  
                                               __ptext289 A160  
                                               __ptext298 B5AE  
                                               __ptext299 9F40  
                             __end_of_i2c_masterOperation B7B4  
                                                ?___ftdiv 00E4  
                                                ?___ftneg 0060  
                                       _EncryptFRMPayload 6E80  
                                                ?___lldiv 0060  
                            RADIO_FSKPacketSent@timeOnAir 00E7  
                                                ?___ftmul 0074  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0060  
                                                ?___ftsub 00E4  
                                               __npowers_ FE48  
                           __size_of_ExecuteRxTimingSetup 0028  
                                                ?___fttol 0083  
                                         ??_AESEncodeLoRa 0081  
                SelectChannelForTransmission@channelIndex 00BD  
                         __end_of_PrepareJoinRequestFrame 6E80  
                                ??_do_I2C_DO_ADDRESS_NACK 006B  
                                                ?___lwmod 00A8  
                                         ?_ADC_Initialize 0001  
                             _i2c1_driver_busCollisionISR 0128  
                                      ?_SwTimersInterrupt 0080  
                               _RADIO_SetChannelFrequency 9EB6  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006E  
                               _SetCallbackSoftwareTimers 9206  
                                      ConfigureRadio@freq 006E  
                                   ??_RADIO_SetModulation 0060  
                                    i2c_readDataBlock@len 0074  
                                        ?_RADIO_GetStatus 0001  
                                    i2c_readDataBlock@reg 0071  
                                  ?_Weather_getHumidityRH 018C  
                                  __end_of_LORAWAN_RxDone 0D2C  
                                   __end_of_do_I2C_DO_ACK C634  
                                     ??_ValidateFrequency 0064  
                                  __end_of_LORAWAN_TxDone 1E68  
                                      ?_EncryptFRMPayload 0091  
                            ??_INTERRUPT_InterruptManager 0034  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit BE78  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                             __tdiv_to_l_ 7DA6  
                                        _ExecuteDevStatus C5B0  
                           __end_of_RADIO_SetLoRaSyncWord C60A  
                  IncludeMacCommandsResponse@pBufferIndex 0062  
                              ??_do_I2C_SEND_RESTART_READ 0060  
                              __size_of_SwTimerSetTimeout 0044  
                             ??_LORAWAN_GetMaxPayloadSize 0068  
                                   ?_i2c1_driver_sendNACK 0001  
                     __size_of_Weather_getTemperatureDegC 0012  
                          LORAWAN_LinkCheckConfigure@iCtr 00B0  
                        ExecuteRxParamSetupReq@dlSettings 00AE  
                                          _AssemblePacket 3750  
                                            ??__div_to_l_ 0066  
                                        ??_mssp1_clearIRQ 0060  
                                         ?_ConfigureRadio 006E  
                               AssemblePacket@bufferIndex 00D2  
                              ??_INT2_SetInterruptHandler 0062  
                                                _BAUDCON1 000FB8  
                              __end_ofi2_TMR_GetDeltaTime 7466  
                      _EUSART1_DefaultOverrunErrorHandler 000000  
                                     ??_SwTimersInterrupt 0084  
                                                ?_isdigit 0001  
                                    RADIO_DIO0@dioMapping 00F7  
                                       _i2c_readDataBlock A454  
                                       _DutyCycleCallback 48AA  
                                   ?_i2c1_driver_resetBus 0001  
                      __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                                 InitDefault433Channels@i 006B  
                                    _EUSART1_ErrorHandler 03F2  
                                   __end_of_TMR_SwapTimer B2B8  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 009F  
                             __size_of_DELAY_milliseconds 0028  
                                 _EUSART1_SetErrorHandler C592  
                                              ?_do_I2C_RX 0001  
                                              ?_do_I2C_TX 0001  
                                 __end_ofi2_TMR_SwapTimer B636  
                                      ?_i2c_readDataBlock 0071  
                  __end_of_BME280_setOversamplingHumidity C538  
                 __size_of_BME280_setOversamplingHumidity 000A  
                          _BME280_setOversamplingHumidity C52E  
                                 __size_of_EncKeySchedule 02A4  
                                      AssemblePacket@mhdr 00CF  
                                       _i2c1_driver_start C6C8  
                                      AssemblePacket@port 00C7  
                               __size_of_RADIO_ReadRandom 00A4  
                                ConfigureRadioRx@dataRate 0077  
                                          __size_of_scale 0480  
                                      _RADIO_ReceiveStart 5E00  
                                 ??_rd1RegCompleteHandler 006B  
                                          __size_of_srand 0010  
                                __end_of_LORAWAN_Mainloop B778  
                                          __size_of_putch 000E  
                                   ?_RADIO_SetFSKSyncWord 006B  
                                    _INTERRUPT_Initialize C6D4  
                                           _SwTimerCreate 9E2A  
                          __end_of_InitDefault868Channels 9FCA  
                     IncludeMacCommandsResponse@macBuffer 0060  
                                 _TMR5_HasOverflowOccured C516  
                                      ?_i2c1_driver_start 0001  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0060  
                                 ??_wr1RegCompleteHandler 006B  
                                           _TMR1_CallBack C01E  
                               __end_of_ValidateFrequency A96C  
                  __end_of_BME280_setOversamplingPressure BF5E  
                 __size_of_BME280_setOversamplingPressure 0020  
                          _BME280_setOversamplingPressure BF3E  
                                        _SwTimerIsRunning BC38  
                                     ??_i2c_readDataBlock 0076  
                                        _ExecuteLinkCheck B8C4  
                                    i2SwTimersInterrupt@i 0031  
                                                _INT1_ISR C664  
                                _LORAWAN_SetDeviceAddress C224  
                                                _INT2_ISR C65C  
                                       EncKeySchedule@key 0060  
                                          ___wmul@product 0072  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth C5F6  
                                  i2c_read1ByteRegister@e 0073  
                 EUSART1_SetErrorHandler@interruptHandler 0060  
                                  i2c_read1ByteRegister@x 0074  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                     __size_of_returnStop 0004  
                                    __end_of_rxWindowSize FEAF  
                                   ?_RADIO_WriteFrequency 006D  
                               ?_INT1_SetInterruptHandler 0060  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 0044  
                                     ?_RADIO_ReceiveStart 00B1  
                                        _SwTimerReadValue B6FA  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle AFE6  
                                           _appSessionKey 0500  
                                         _HALDIO5PinValue C522  
                                    RADIO_DIO1@dioMapping 00CC  
                               __end_of_SwTimersInterrupt 86BC  
                                     ??_i2c1_driver_start 0060  
                                __size_of_TMR1_WriteTimer 0020  
                     __size_of_INTERRUPT_InterruptManager 0076  
                              __end_of_DIO2_ISR_Lora_Init C46A  
                                                _PIR1bits 000F9E  
                                      __end_of__div_to_l_ 8132  
                                        GenerateSubkey@k1 0093  
                                        GenerateSubkey@k2 0095  
                                                _PIR2bits 000FA1  
                                    ConfigureRadioRx@freq 0073  
                               __end_of_EncryptFRMPayload 700C  
                                                _PIR5bits 000F7E  
                          __size_of_RADIO_WriteFSKBitRate 0068  
                                UpdateReceiveDelays@delay 0074  
                               LORAWAN_RxDone@bufferIndex 00E6  
                                  __size_of_UpdateTxPower 000A  
                           __end_of_RADIO_WriteFSKBitRate A838  
                                    ConfigureRadioTx@freq 0073  
                                        _BME280_writeByte C2F0  
                             UpdateDataRange@dataRangeNew 0060  
                                __size_of_TMR5_Initialize 001E  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 00B0  
                                               _rxPayload 010C  
                          DELAY_milliseconds@milliseconds 0060  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 88BA  
                           EncryptFRMPayload@bufferLength 0093  
                                 ValidateDataRange@result 0062  
                                                _SSP1CON1 000FC6  
                                                _SSP1CON2 000FC5  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0060  
              ValidateChannelId@allowedForDefaultChannels 0060  
                           __size_of_FindSmallestDataRate 00DE  
                                                _TMR1_ISR C368  
                                ConfigureRadioTx@dataRate 0077  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                            ?_i2c_setDataCompleteCallback 0065  
                                   ValidateTxPower@result 0060  
                                                _SSP1STAT 000FC7  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 0462  
                                                _SSP2STAT 000F6D  
                                     __end_of_setCallBack A5AC  
                            ??_LORAWAN_LinkCheckConfigure 00A8  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays B678  
                         __size_of_SetReceptionNotOkState 007E  
                                  __end_of_AssemblePacket 3B00  
                                         ?_LORAWAN_RxDone 01F2  
                                         ?_LORAWAN_TxDone 00BB  
                                       ??_TMR1_Initialize 0062  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 0066  
                               __end_of_i2c_readDataBlock A4C8  
                                      _DIO1_ISR_Lora_Init C46A  
                               __end_of_DutyCycleCallback 4BB0  
                                       ___wmul@multiplier 006E  
                            i2c_setAddressNACKCallback@cb 0065  
                                        __size_of_AESCmac 03AA  
                                    ??_RADIO_ReceiveStart 00B3  
                                 ValidateFrequency@result 0064  
                                       ?_do_I2C_SEND_STOP 0001  
                                              printf@flag 01AA  
                              __end_of_PrepareSessionKeys 9820  
                                       ?_ConfigureRadioRx 0073  
                                       ?_ConfigureRadioTx 0073  
                                              printf@fval 01B4  
                                           _nwkSessionKey 0510  
                                              printf@prec 01B7  
                                    RADIO_DIO2@dioMapping 007C  
                                      AESEncodeLoRa@block 007D  
                                                _Channels 0400  
                                             ??_i2c_close 0060  
                               __end_of_i2c1_driver_start C6CC  
                             __end_of_RADIO_FSKPacketSent 8008  
                                           ??_returnReset 006B  
                                      ??_do_I2C_SEND_STOP 0060  
                             __size_of_i2c1_driver_TXData 000A  
                          __size_of_i2c_read1ByteRegister 0094  
                 RADIO_SetSpreadingFactor@spreadingFactor 0060  
                                      ??_ConfigureRadioRx 0077  
                                      ??_ConfigureRadioTx 0077  
                            ??_i2c_setAddressNACKCallback 0069  
                           __end_of_i2c_read1ByteRegister 9C78  
                                    ??_RADIO_SetBandwidth 0060  
                       __end_of_do_I2C_SEND_RESTART_WRITE C64C  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0060  
                                 __end_of_do_I2C_TX_EMPTY AF92  
                                        ?_RADIO_WriteMode 0065  
                               LORAWAN_RxDone@computedMic 00EA  
                                       ___lmul@multiplier 009A  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 84B4  
                                               copy_data1 84D4  
                                               copy_data2 84F4  
                                               copy_data3 8514  
                                               copy_data4 8534  
                                               copy_data5 8554  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                ?_rdBlkRegCompleteHandler 0069  
                                       ?_mssp1_disableIRQ 0001  
                             __end_of_RADIO_SetIQInverted C5CE  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora AF3E  
                                             _RADIO_Reset B3D0  
                                     ExecuteLinkCheck@ptr 0060  
                            __size_of_do_I2C_SEND_RESTART 0008  
                             __size_of_i2c1_driver_isNACK 0014  
                          i2SwTimersInterrupt@timeElapsed 0029  
                                      _RADIO_RegisterRead BD2C  
                                __size_of_ValidateTxPower 002A  
                                 ??_StopAllSoftwareTimers 0061  
                                          _StartReTxTimer 700C  
                      __size_of_BME280_compensateHumidity 0460  
                                                _i2c_open 9820  
                             __end_ofi2_SwTimersInterrupt 87BC  
                               _LORAWAN_GetMaxPayloadSize AAF6  
                              LORAWAN_RxDone@extractedMic 00E2  
                                             AESCmac@flag 01EE  
                           EncryptFRMPayload@frameCounter 0095  
                                   __size_of_mssp1_setIRQ 0004  
                                      CheckMcastFlags@hdr 0060  
                 BME280_setOversamplingTemperature@osrs_t 0061  
                              ?_BME280_compensateHumidity 00A6  
                                             AESCmac@size 00BF  
                                      ??_mssp1_disableIRQ 0060  
                                  ?_rd2RegCompleteHandler 0069  
                                SwTimerSetTimeout@timerId 0075  
                                SwTimerSetTimeout@timeout 006D  
                                   RADIO_WriteMode@opMode 006B  
                                     _do_I2C_DO_NACK_STOP C624  
                                ??_ExecuteRxParamSetupReq 00A8  
                     __size_of_LORAWAN_LinkCheckConfigure 015E  
                                        __size_of_i2c_ISR 005A  
                                       ??_CCP5_Initialize 0060  
                                  ?_wr2RegCompleteHandler 0069  
                                        ___abdiv@quotient 0065  
                 UpdateReceiveWindow2Parameters@frequency 0060  
                                    RADIO_DIO3@dioMapping 0066  
                                    _LORAWAN_SetDeviceEui BAD2  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                      __size_of_BME280_compensatePressure 06A6  
                            __end_of_SystemBlockingWaitMs BA46  
                  ValidateChannelMaskCntl@channelMaskCntl 0061  
                                       i2_TMR1_WriteTimer C18A  
                                               memcpy@tmp 0066  
              LORAWAN_SetApplicationEui@applicationEuiNew 006B  
                                                __Lrparam 0000  
                          __size_of_BME280_setStandbyTime 001E  
                                        ??_EncodeShiftRow 0062  
                              ?_BME280_compensatePressure 00A6  
                                    ??_DIO1_ISR_Lora_Init 0062  
                                       _ADC_GetConversion B7F0  
                                __size_of_CheckMcastFlags 0082  
                           __end_of_BME280_setStandbyTime C0FA  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0064  
                              __size_of_ValidateDataRange 0046  
                                            ?_do_I2C_IDLE 0001  
                               _ticksToScheduledInterrupt 0054  
                        BME280_setFilterCoefficient@coeff 0061  
                                            ?_do_I2C_RCEN 0001  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0064  
                            ValidateDataRange@dataRateMin 0065  
                              __size_of_ValidateChannelId 0024  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                             BME280_setStandbyTime@sbtime 0061  
                                    __end_of_BME280_reset C4C6  
                                        __size_of___abdiv 0066  
                                 ??_OSCILLATOR_Initialize 0060  
                                      ?_ADC_GetConversion 0060  
                        __size_of_BME280_initializeSensor 0020  
                                       ?_ValidateDataRate 0001  
                                     _i2c1_driver_sendACK C672  
                                        __size_of___awdiv 0086  
                                __size_of_i2c_masterWrite 0008  
                                      _ComputeSessionKeys A0DA  
                                   __size_of_SwTimerStart 0096  
                                        __size_of___ftadd 01AE  
                                        __size_of___awmod 0072  
                                        __size_of___ftdiv 00E8  
                                        __size_of___ftneg 0026  
                         __size_of_do_I2C_DO_ADDRESS_NACK 0044  
                                        __size_of___lldiv 0084  
                                                ___altoft A362  
                                        __size_of___ftmul 00F6  
                                     i2c1_driver_TXData@d 0060  
                                        __size_of___llmod 0068  
                                        __size_of___ftsub 0042  
                                        __size_of___fttol 00F8  
                             __size_of_EUSART1_Initialize 0046  
                                          _applicationEUI 03E0  
                                  ??_i2c1_driver_sendNACK 0060  
                                        __size_of___lwmod 0044  
                           ??_i2c_setDataCompleteCallback 0069  
                                         ?_AssemblePacket 00C7  
                                    AssemblePacket@buffer 00C8  
                                        SwTimersExecute@i 00DE  
                                                ___ftpack 96C4  
                                          _applicationKey 04F0  
                        ??_i2c1_driver_setBusCollisionISR 0062  
                         ?_i2c1_driver_setBusCollisionISR 0060  
                                      ??_ValidateDataRate 0060  
                                     _i2c1_driver_restart C6C4  
                                             _fround$7054 0089  
                                             _fround$7055 0086  
                                                ___lltoft ABB6  
                                _TMR1_SetInterruptHandler C556  
                                  _IOCB4_InterruptHandler 03FA  
                                    ?_do_I2C_DO_NACK_STOP 0001  
                                     _i2c1_driver_startRX C6B0  
                                                ___lwtoft BDA2  
                            __end_of_do_I2C_SEND_ADR_READ C43A  
                                             _radioBuffer 062F  
                                  ??_i2c1_driver_resetBus 0060  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission C3FA  
        __size_of_ResetParametersForConfirmedTransmission 0012  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0060  
                 _ResetParametersForConfirmedTransmission C3E8  
                                   _TMR1_InterruptHandler 03F8  
                               ??_EUSART1_SetErrorHandler 0062  
                                        ??_GenerateSubkey 0097  
                             _EUSART1_DefaultErrorHandler 000000  
                                     ??_ADC_GetConversion 0062  
                                        _CountfOptsLength 948E  
                                              _HALSPISend C4F0  
                                     ?_ComputeSessionKeys 0091  
                                          _rxWindowOffset FE97  
                      RADIO_UnhandledInterrupt@modulation 0064  
                              __end_of_MacExecuteCommands 4EA6  
                                    ??_RADIO_RegisterRead 0062  
                                    RADIO_DIO4@dioMapping 0067  
                                        __size_of_isdigit 0022  
                        __end_of_RADIO_UnhandledInterrupt B8C4  
                     __end_of_BME280_setFilterCoefficient C118  
                             _BME280_setFilterCoefficient C0FA  
                                           _UpdateTxPower C59C  
                                    RADIO_Transmit@buffer 00B1  
                         __end_of_RADIO_FHSSChangeChannel B6FA  
                                            _mssp1_setIRQ C6A8  
                                             ??_do_I2C_RX 006B  
                                             ??_do_I2C_TX 006B  
                                         _allocatedTimers 00FF  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus C368  
                                       ?i2_TMR1_ReadTimer 0001  
                               ??_TMR5_HasOverflowOccured 0060  
                                      _DIO5_ISR_Lora_Init C6EA  
                                                __ptext10 8008  
                                                __ptext11 89B4  
                                                __ptext20 C0DC  
                                                __ptext12 B636  
                                                __ptext21 C26C  
                                                __ptext13 69AA  
                                              _T1GCONbits 000FCC  
                                                __ptext30 C2F0  
                                                __ptext22 BF1E  
                                                __ptext14 BD7C  
                                                __ptext31 A96C  
                                                __ptext23 BF3E  
                                                __ptext15 9C78  
                                                __ptext40 9820  
                                                __ptext32 7B28  
                                                __ptext24 C52E  
                                                __ptext16 BDA2  
                                                __ptext41 C538  
                                                __ptext33 BF7E  
                                                __ptext25 C0FA  
                                                __ptext17 C0BE  
                                                __ptext50 A61E  
                                                __ptext42 C542  
                                                __ptext34 A454  
                                                __ptext26 C4B8  
                                                __ptext18 B2B8  
                                                __ptext51 9D0A  
                                                __ptext43 C298  
                                                __ptext35 C304  
                                                __ptext27 6432  
                                                __ptext19 BC8C  
                                                __ptext60 C63C  
                                                __ptext52 B416  
                                                __ptext44 C614  
                                                __ptext36 C4C6  
                                                __ptext28 BF5E  
                                                __ptext61 C644  
                                                __ptext53 C61C  
                                                __ptext45 B778  
                                                __ptext37 C40A  
                                                __ptext29 C282  
                                                __ptext70 C66C  
                                                __ptext62 C64C  
                                                __ptext54 C624  
                                                __ptext46 C318  
                                                __ptext38 9BE4  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 C6E8  
                                                __ptext63 C50A  
                                                __ptext55 C62C  
                                                __ptext47 C136  
                                                __ptext39 C1F4  
                                                __ptext80 B986  
                                                __ptext72 C6B0  
                                                __ptext64 C43A  
                                                __ptext56 C4FE  
                                                __ptext48 C38E  
                                                __ptext81 C20C  
                                                __ptext73 B45A  
                                                __ptext65 AF3E  
                                                __ptext57 C41A  
                                                __ptext49 AD2C  
                                                __ptext90 C6D0  
                                                __ptext82 A53A  
                                                __ptext74 B8F6  
                                                __ptext66 C6A8  
                                                __ptext58 C42A  
                                                __ptext91 C3A0  
                                                __ptext83 C1A6  
                                                __ptext75 B926  
                                                __ptext67 C32C  
                                                __ptext59 C634  
                                                __ptext92 B130  
                                                __ptext84 C6C0  
                                                __ptext76 B956  
                                                __ptext68 C54C  
                                                __ptext93 A362  
                                                __ptext85 C6C4  
                                                __ptext77 C6B4  
                                                __ptext69 C6AC  
                                                __ptext94 516E  
                                                __ptext86 C672  
                                                __ptext78 C6B8  
                                                __ptext95 C3B2  
                                                __ptext87 C6C8  
                                                __ptext79 C6BC  
                                                __ptext96 B180  
                                                __ptext88 BE34  
                                                __ptext97 1E68  
                                                __ptext89 C6CC  
                                                __ptext98 C3C4  
                                                __ptext99 B1D0  
                                            _SSP1CON1bits 000FC6  
                                 ExecuteRxTimingSetup@ptr 0075  
                                            _SSP1CON2bits 000FC5  
                                  ??_RADIO_SetFSKSyncWord 006D  
                                                __powers_ FE21  
                                   ??_UpdateReceiveDelays 0074  
                                   __end_of_LORAWAN_Reset 67E0  
                                  __end_of_StartReTxTimer 718E  
                                 ??_UpdateCurrentDataRate 0060  
                                 ??_UpdateChannelIdStatus 0061  
                                __size_of_UpdateDataRange 014E  
                                  _SetReceptionNotOkState A266  
                                            _SSP2CON1bits 000F6C  
                                    ?_i2c1_driver_sendACK 0001  
                                    __end_of_do_I2C_RESET C44A  
                                     GenerateSubkey@F7103 04E0  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00F0  
                                 __end_of_HALDIO5PinValue C52E  
                                ??_i2c_write1ByteRegister 0073  
                                       ?_UpdateDLSettings 0060  
                                  ConfigureRadio@dataRate 0072  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 0066  
                                    ?_i2c1_driver_restart 0001  
                                     __end_of_returnReset C6B8  
                        __size_of_PrepareJoinRequestFrame 0190  
                                           CheckFlags@hdr 0060  
                                  ??_RADIO_WriteFrequency 0071  
                                        _i2c1_driver_open C298  
                                   __size_of_UpdateCfList 01EE  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           ??_BME280_setFilterCoefficient 0060  
                                        _i2c1_driver_stop C6C0  
                           __size_of_RADIO_SetOutputPower 000A  
                                           __size_of_main 0352  
                                    ?_i2c1_driver_startRX 0001  
                                           __size_of_rand 005C  
                                              _T5GCONbits 000F4D  
                                       _RADIO_ReceiveStop BFBE  
                          __size_of_i2c1_driver_getRXData 0004  
                                      ??_UpdateDLSettings 0061  
                                 ??_BME280_getTemperature 00F6  
                                    _LORAWAN_PlatformInit BE56  
                           __end_of_i2c1_driver_getRXData C6B0  
                                         _FskSyncWordBuff FF24  
                                      ??_ValidateRxOffset 0060  
                       __end_of_BME280_compensateHumidity 3750  
                               __end_ofi2_TMR1_WriteTimer C1A6  
               IncludeMacCommandsResponse@bIncludeInFopts 0064  
                                                _humidity 0114  
                                    ??_ComputeSessionKeys 0093  
                                   ?_LORAWAN_SetDeviceEui 006B  
                               __end_of_ADC_GetConversion B82A  
                                           _timerOverflow 0047  
                                i2c_readDataBlock@address 0076  
                                             _setCallBack A53A  
                                            _SwTimerStart 9AB8  
                              __size_of_SwTimersInterrupt 0102  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0060  
                                    RADIO_DIO5@dioMapping 0066  
                                   RADIO_TxDone@timeOnAir 00E7  
                                 i2c_masterOperation@read 006F  
                          ValidateChannelMask@channelMask 0060  
                             __size_of_DIO0_ISR_Lora_Init 0010  
                              __size_of_EncryptFRMPayload 018C  
                                         GenerateSubkey@i 00B8  
                                         GenerateSubkey@l 00A8  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0060  
                                ?_BME280_readMeasurements 0001  
                                 PrepareSessionKeys@index 0071  
                                __end_of_TMR_GetDeltaTime 6CF0  
                       __end_of_BME280_compensatePressure 250E  
                                      SwTimerStop@timerId 0060  
                                                _swTimers 0300  
                                           _bme280_config 0130  
                                        ??_TMR1_ReadTimer 0062  
                                                _pressure 0117  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006B  
                                    RADIO_RxDone@irqFlags 00F3  
                             __end_of_ValidateChannelMask AC72  
                            __end_of_BME280_setSensorMode C282  
                                __end_of_BME280_getStatus C4D4  
                                           UpdateCfList@i 00AE  
                      __end_of_INTERRUPT_InterruptManager 007E  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 006C  
                             PrepareSessionKeys@networkId 006F  
                                       _RADIO_ReleaseData C684  
                                               printf@len 01A4  
                                               printf@exp 01B0  
                                               printf@val 01A6  
                                            _SSP1STATbits 000FC7  
                                       ??_TMR1_WriteTimer 0062  
                              BME280_getPressure@pressure 00F6  
                                           _bme280_status 012D  
                        __end_of_do_I2C_SEND_RESTART_READ C654  
                                i2c_read1ByteRegister@reg 0071  
                                            ??_returnStop 006B  
                             _EUSART1_FramingErrorHandler 03F6  
                                              _RADIO_DIO0 9D9A  
                                              _RADIO_DIO1 B220  
                                              _RADIO_DIO2 AE92  
                                              _RADIO_DIO3 BE78  
                                              _RADIO_DIO4 B860  
                                              _RADIO_DIO5 BCB4  
                                __end_of_i2c_restartWrite C6C0  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0060  
                    __end_of_INT1_DefaultInterruptHandler C6FC  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler C6FA  
                                   ??_do_I2C_DO_NACK_STOP 0060  
                       __size_of_RADIO_WriteConfiguration 0500  
                                  __end_of_rxWindowOffset FE9F  
                              __size_of_i2c_readDataBlock 0074  
                             i2TMR1_ReadTimer@readValHigh 0007  
                                       ??_TMR5_Initialize 0060  
                              __size_of_DutyCycleCallback 0306  
                                 EncryptFRMPayload@buffer 0091  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 00A6  
                   i2c1_driver_setBusCollisionISR@handler 0060  
                                      __end_of_modulation FE97  
                                              _RADIO_Init 67E0  
                         ExecuteRxParamSetupReq@frequency 00AA  
                                __size_of_UpdateFrequency 0044  
                                ?_ValidateChannelMaskCntl 0001  
                               mssp1_waitForEvent@timeout 0060  
                          __size_of_i2c1_driver_setI2cISR 000A  
                                           __roundCounter 0133  
                           __end_of_i2c1_driver_setI2cISR C542  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 0078  
                                __end_of_HALSPICSDeassert C6DC  
                                __size_of_UpdateDutyCycle 0044  
                                          ?_UpdateTxPower 0001  
                              __size_of_i2c1_driver_start 0004  
                                                memcpy@d1 0060  
                                                memcpy@s1 0062  
                                __end_of_BME280_readBlock BF9E  
                                          _EncKeySchedule 5420  
                      __size_of_SetCallbackSoftwareTimers 00DE  
                                 __size_of_RxJoinResponse 0002  
                                         ??_SwTimerCreate 0060  
                                     ExecuteDutyCycle@ptr 0060  
                                            _UpdateCfList 6244  
                                     ??_RADIO_ReleaseData 0060  
                                                isdigit@c 0062  
                                  ??_INTERRUPT_Initialize 0060  
                                                memset@p1 0060  
                                         ??_TMR1_CallBack 0034  
                                                scale@scl 0089  
                                    __size_of_SwTimerStop 0028  
                                        _RADIO_ReadRandom 9A14  
                                       _RADIO_TxDone$1189 00EB  
                                   ??_i2c1_driver_sendACK 0060  
                                      _EXT_INT_Initialize BBE4  
                                        ?_do_I2C_TX_EMPTY 0001  
                                         ?_StartReTxTimer 0001  
                                  _do_I2C_DO_ADDRESS_NACK B416  
                                   _TMR_OverrideRemaining 9B4E  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 00B1  
                               __end_of_RADIO_ReceiveStop BFDE  
                                        __tdiv_to_l_@exp1 006E  
                                        __tdiv_to_l_@cntr 006D  
                                   ??_i2c1_driver_restart 0060  
                                         _SwTimersExecute 8F5E  
                                        __tdiv_to_l_@quot 0069  
                     SwTimerSetCallback@callbackParameter 0062  
                                             FillSubKey@i 0067  
                                  rd2RegCompleteHandler@p 0069  
                           RADIO_WriteFrequency@frequency 006D  
                                   ??_i2c1_driver_startRX 0060  
                                        ___lwmod@dividend 00A8  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0060  
                                __end_of_ExecuteDevStatus C5BA  
                                 ?_PIN_MANAGER_Initialize 0001  
                                       i2c_restartWrite@p 0069  
                                      _DefaultChannels433 FED0  
                                      _DefaultChannels868 FEFA  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0064  
                  __end_of_EUSART1_SetOverrunErrorHandler C588  
                 __size_of_EUSART1_SetOverrunErrorHandler 000A  
                          _EUSART1_SetOverrunErrorHandler C57E  
            BME280_readFactoryCalibrationParams@paramBuff 0082  
                                UpdateDutyCycle@channelId 0062  
                                              _RCSTA1bits 000FAB  
                                  GenerateSubkey@const_Rb 0098  
                                      __end_of_returnStop C6BC  
                         __size_of_ExecuteRxParamSetupReq 0214  
                                        ??_ADC_Initialize 0060  
                              BME280_compensateHumidity@h 00BF  
                             __end_of_Weather_readSensors C0DC  
                               UpdateJoinInProgress@state 0060  
                             __size_of_BME280_getHumidity 0050  
                                       ??_ValidateTxPower 0060  
                                     _LORAWAN_TxDone$2066 00C9  
                                     _LORAWAN_TxDone$2067 00CD  
                             __size_of_mssp1_IRQisEnabled 0014  
                                     _LORAWAN_TxDone$7046 00D6  
                                 ??_Weather_getHumidityRH 00F9  
             __end_of_BME280_readFactoryCalibrationParams 6612  
            __size_of_BME280_readFactoryCalibrationParams 01E0  
                    ?_BME280_readFactoryCalibrationParams 0001  
                   ??_BME280_readFactoryCalibrationParams 007F  
                     _BME280_readFactoryCalibrationParams 6432  
                      BME280_compensateTemperature@tempV1 00BD  
                      BME280_compensateTemperature@tempV2 00C1  
                      __end_of_LORAWAN_LinkCheckConfigure 788E  
                               __end_of_RADIO_ReleaseData C68A  
                              _LORAWAN_LinkCheckConfigure 7730  
                                      __end_of_txPower433 FECA  
                                __size_of_EnableChannels1 006C  
                                      __end_of_txPower868 FED0  
                                __size_of_BME280_readByte 0010  
                                                printf@ap 01A0  
                                                printf@cp 01A2  
                                   _HALResetPinMakeOutput C6E0  
                                ??_HALResetPinOutputValue 0060  
                                  __size_of_INT1_CallBack 0020  
                               RADIO_WriteConfiguration@i 00AB  
                               ExecuteRxTimingSetup@delay 0077  
                                        AESEncodeLoRa@key 007F  
                               __size_of_SetJoinFailState 0030  
                        LORAWAN_LinkCheckConfigure@period 00A6  
                                  wr2RegCompleteHandler@p 0069  
                                        ??_ConfigureRadio 0072  
          EUSART1_SetFramingErrorHandler@interruptHandler 0060  
                             __size_of_mssp1_waitForEvent 0012  
                                      _SwTimerSetCallback B56A  
             __end_of_UpdateRetransmissionAckTimeoutState A61E  
            __size_of_UpdateRetransmissionAckTimeoutState 0072  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 009A  
                     _UpdateRetransmissionAckTimeoutState A5AC  
                                       RADIO_ReadRandom@i 0071  
                            SearchAvailableChannel@result 00B7  
                             __size_of_BME280_getPressure 0050  
                                ?_Weather_initializeClick 0001  
                                   RADIO_WritePower@paDac 0065  
                                  __size_of_INT2_CallBack 0020  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                  __size_of_EUSART1_Write 0012  
                                      _eusart1RxLastError 0131  
                                   __end_of_DIO0_ISR_Lora C69C  
                                            ?__tdiv_to_l_ 0060  
                                __end_of_SwTimerIsRunning BC62  
                                       ??_CheckMcastFlags 0062  
                                __end_of_ExecuteLinkCheck B8F6  
                                   RADIO_WritePower@power 0066  
                                ?_CreateAllSoftwareTimers 0001  
                                             _printf$7057 019D  
                        RADIO_WriteMode@currentModulation 0067  
                                    ??_EXT_INT_Initialize 0062  
                                             _temperature 011A  
                            RADIO_SetFSKSyncWord@syncWord 006B  
                                            _rxWindowSize FEA7  
                                  __end_of_EncKeySchedule 56C4  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora C696  
                                     ?_SwTimerSetCallback 0060  
                                __end_of_SwTimerReadValue B73A  
                                        ___lldiv@quotient 0068  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle B03A  
                                         ___lwmod@divisor 00AA  
                  __end_of_UpdateReceiveWindow2Parameters C2DA  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters C2C4  
                                 UpdateTxPower@txPowerNew 0060  
                                       ??_i2c_masterWrite 0071  
                      __end_of_i2c_setAddressNACKCallback C20C  
                              _i2c_setAddressNACKCallback C1F4  
                       _BME280_compensateTemperature$7047 00C9  
                                         ___lwmod@counter 00AC  
                         _LORAWAN_LinkCheckConfigure$2892 00AC  
                        __end_of_INT1_SetInterruptHandler C57E  
                                  __size_of_i2c_setBuffer 001A  
                            FindSmallestDataRate@dataRate 0063  
                        BME280_compensatePressure@pressV1 00C3  
                        BME280_compensatePressure@pressV2 00BB  
                           LORAWAN_Join@activationTypeNew 00DD  
                                   __size_of_TMR_ISR_lora 0056  
                              ??_LORAWAN_SetDeviceAddress 0064  
                                       __CFG_T3CMX$PORTC0 000000  
                             __size_of_BME280_isMeasuring 0014  
                                   __end_of_DIO2_ISR_Lora C690  
                                             _returnReset C6B4  
                                    _SystemBlockingWaitMs BA16  
                                   FindSmallestDataRate@i 0062  
                      ComputeSessionKeys@joinAcceptBuffer 0091  
                                __end_of_BME280_writeByte C304  
                                 __size_of_EnableChannels 001C  
                                              _WDTCONbits 000FD1  
                            __end_of_UpdateJoinInProgress C1DA  
                            __end_of_ExecuteRxTimingSetup BD04  
                                 __size_of_HALSPICSAssert 0004  
                                 __end_of_FskSyncWordBuff FF27  
                      __size_of_LORAWAN_SetApplicationEui 002E  
                __end_of_RADIO_WriteFSKFrequencyDeviation A7D0  
               __size_of_RADIO_WriteFSKFrequencyDeviation 006A  
                      ??_RADIO_WriteFSKFrequencyDeviation 0071  
                       ?_RADIO_WriteFSKFrequencyDeviation 006D  
                        _RADIO_WriteFSKFrequencyDeviation A766  
                      __size_of_LORAWAN_SetApplicationKey 002E  
                __end_of_LORAWAN_SetApplicationSessionKey BB2E  
               __size_of_LORAWAN_SetApplicationSessionKey 002E  
                      ??_LORAWAN_SetApplicationSessionKey 006D  
                       ?_LORAWAN_SetApplicationSessionKey 006B  
                        _LORAWAN_SetApplicationSessionKey BB00  
                                        ExtractMic@buffer 006B  
                              ?_LORAWAN_SetApplicationEui 006B  
                                 ??_RADIO_FSKPayloadReady 00F3  
                                UpdateDataRange@channelId 0062  
                              ?_LORAWAN_SetApplicationKey 006B  
                                _RADIO_UnhandledInterrupt B892  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize AFE6  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite BFFE  
                          __size_of_rd1RegCompleteHandler 0030  
                                 __size_of_ExecuteLinkAdr 02C8  
                         __size_of_i2c_write1ByteRegister 0064  
                           __end_of_rd1RegCompleteHandler B956  
                            RADIO_WriteFSKBitRate@bitRate 006D  
                                      i2_TMR_GetDeltaTime 72FA  
                                         RADIO_SetCRC@crc 0060  
                                       __CFG_FOSC$INTIO67 000000  
                                  ??_LORAWAN_SetDeviceEui 006D  
                                         _PIN_MANAGER_IOC C60A  
                                     RADIO_WritePower@ocp 0064  
                              BME280_compensatePressure@p 00BF  
                          __size_of_wr1RegCompleteHandler 0030  
                                ??_Weather_getPressureKPa 00F9  
                                      ??_LORAWAN_Mainloop 00F9  
                         __end_of_BME280_readMeasurements 7C68  
                           __end_of_wr1RegCompleteHandler B986  
                                   _do_I2C_SEND_ADR_WRITE C41A  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0063  
                              __size_of_ADC_GetConversion 003A  
                                       ??_UpdateDataRange 0061  
                                    _do_I2C_SEND_ADR_READ C42A  
                                   __size_of_BME280_reset 000E  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize BBB8  
                        RADIO_WriteConfiguration@regValue 00B0  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 0135  
                                        _bme280_ctrl_meas 012E  
                                           ExtractMic@mic 0073  
                                       _LORAWAN_RxTimeout 3EAA  
                         ?_BME280_setOversamplingHumidity 0001  
                        ??_BME280_setOversamplingHumidity 0060  
                             __end_of_RADIO_SetModulation C5EC  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 003C  
                                        ??_LORAWAN_RxDone 00DA  
                                     ?i2_TMR_GetDeltaTime 0009  
